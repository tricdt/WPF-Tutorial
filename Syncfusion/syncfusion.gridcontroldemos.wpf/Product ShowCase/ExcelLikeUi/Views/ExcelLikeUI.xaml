<syncfusion:RibbonWindow x:Class="syncfusion.gridcontroldemos.wpf.ExcelLikeUI"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:syncfusion.gridcontroldemos.wpf"
             xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
             xmlns:syncfusionskin ="clr-namespace:Syncfusion.SfSkinManager;assembly=Syncfusion.SfSkinManager.WPF"
             syncfusionskin:SfSkinManager.Theme="{syncfusionskin:SkinManagerExtension ThemeName=Office2019White}"
             xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna"
             xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
             Width="1024" HorizontalAlignment="Left" VerticalAlignment="Top"
             Height="720"
             mc:Ignorable="d" 
             x:Name="root"
             d:DesignHeight="450" d:DesignWidth="800">
    <syncfusion:RibbonWindow.Resources>
        <local:ExcelLikeUiFontWeightToBoolConverter x:Key="FontWeightConverter" />
        <local:ExcelLikeUiFontStyleToBoolConverter x:Key="FontStyleConverter" />
        <local:ExcelLikeUiTextDecorationsToBoolConverter x:Key="TextDecorationsConverter" />
        <local:ExcelLikeUiHorizontalAlignmentConverter x:Key="ExcelLikeUiHorizontalAlignmentConverter"/>
        <local:ExcelLikeUiHorizontalAlignmentToCenterAlignConverter x:Key="HorizontalCenterAlignConverter" />
        <local:ExcelLikeUiHorizontalAlignmentToLeftAlignConverter x:Key="LeftAlignConverter" />
        <local:ExcelLikeUiHorizontalAlignmentToRightAlignConverter x:Key="RightAlignConverter" />
        <local:ExcelLikeUiVerticalAlignmentConverter x:Key="ExcelLikeUiVerticalAlignmentConverter"/> 
        <local:ExcelLikeUiVerticalAlignmentToBottomAlignConverter x:Key="BottomAlignConverter" />
        <local:ExcelLikeUiVerticalAlignmentToCenterAlignConverter x:Key="VerticalCenterAlignConverter" />
        <local:ExcelLikeUiVerticalAlignmentToTopAlignConverter x:Key="TopAlignConverter" />
        <local:ExcelLikeUiColorConverter x:Key="colorConverter"/>
        <SolidColorBrush x:Key="Blue.Foreground" Color="#FF333333"/>
        <Geometry x:Key="Default.PathData">M 0 0 L 4 4 L 8 0 Z</Geometry>
        <SolidColorBrush x:Key="Default.QuickDropDownBackground" Color="#FAFAFA"/>
        <SolidColorBrush x:Key="ButtonHoverOuterBackgroundBrush" Color="#FFFFFFFF"/>
        <SolidColorBrush  x:Key="ButtonHoverOuterBorderBrush" Color="#FFF7C840"/>
        
        <LinearGradientBrush x:Key="ButtonHoverInnerBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFFFEB9C" Offset="0.036"/>
            <GradientStop Color="#FFFFE279" Offset="0.308"/>
            <GradientStop Color="#FFFFE585" Offset="0.574"/>
            <GradientStop Color="#FFFFEEA4" Offset="0.638"/>
            <GradientStop Color="#FFFFFCE0" Offset="0.955"/>
        </LinearGradientBrush>
        
        <SolidColorBrush x:Key="ButtonPressedOuterBackgroundBrush" Color="#FFF6C867"/>
        <SolidColorBrush x:Key="ButtonPressedOuterBorderBrush" Color="#FFF7C840"/>
        
        <LinearGradientBrush x:Key="ButtonPressedBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFC09467" Offset="0.005"/>
            <GradientStop Color="#FFC2792C" Offset="0.011"/>
            <GradientStop Color="#FFC29B45" Offset="0.995"/>
            <GradientStop Color="#FFBFA976" Offset="1"/>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="ButtonPressedInnerBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFFDDD81" Offset="0.054"/>
            <GradientStop Color="#FFFEE287" Offset="0.984"/>
            <GradientStop Color="#FFFAD77A" Offset="0.989"/>
        </LinearGradientBrush>
        <Style x:Key="RibbonSplitButtonStyle" TargetType="{x:Type syncfusion:SplitButton}">
            <Setter Property="Label" Value="New Button"/>
            <Setter Property="LargeIcon" Value="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/Ribbon/Resources/WordArt32.png"/>
            <Setter Property="SmallIcon" Value="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/Ribbon/Resources/WordArt16.png"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource Blue.Foreground}"/>
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <StackPanel/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="SizeForm" Value="ExtraSmall">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type syncfusion:SplitButton}">
                                <Border CornerRadius="2" MinHeight="22" Name="OuterBorder"   BorderThickness="1"       
                                        Opacity="{TemplateBinding Opacity}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="12"/>
                                        </Grid.ColumnDefinitions>
                                        <Border Name="PART_Button" MinHeight="22"
                                                Grid.Column="0" CornerRadius="2,0,0,2"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Stretch"  
                                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0"
                                                Background="{TemplateBinding Background}">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>
                                                <Rectangle Name="InnerPath" Fill="{TemplateBinding Background}"  Margin="1" RadiusX="1.667" RadiusY="1.667" Grid.RowSpan="2"/>
                                                <Image Margin="1,1,1,0" Width="16" Height="16" RenderOptions.BitmapScalingMode="NearestNeighbor" Source="{Binding Path=SmallIcon, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="0"/>
                                                <Rectangle Width="16" Height="6" Margin="1,0,1,1" Fill="{Binding Path=Color,Converter={StaticResource colorConverter}}" Grid.Row="1"/>
                                            </Grid>
                                        </Border>
                                        <Border
                                            Name="PART_ToggleButton" ToolTip="{TemplateBinding ToggleButtonToolTip}"
				                            Grid.Column="1" CornerRadius="0,2,2,0"
				                            BorderThickness="1,0,0,0" BorderBrush="{TemplateBinding BorderBrush}"
						                    Background="Transparent">
                                            <Grid>
                                                <Rectangle Name="InnerPathToggle" Fill="{TemplateBinding Background}"  Margin="1" RadiusX="1.667" RadiusY="1.667"/>
                                                <Path 
                                                    Focusable="False" 
                                                    Fill="#FF6D6F6F"                         
                                                    StrokeThickness="2" 
						                            HorizontalAlignment="Center"
						                            VerticalAlignment="Center"
						                            Data="{StaticResource Default.PathData}" />
                                            </Grid>
                                        </Border>
                                        <Popup 
                                            Name="PART_Popup"
				                            Placement="Bottom"
				                            Focusable="False"
				                            PopupAnimation="Fade"
				                            AllowsTransparency="True"
				                            StaysOpen="False"
				                            IsOpen="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type syncfusion:DropDownButton}}}">
                                            <Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="PART_Shadow" SnapsToDevicePixels="true">
                                                <Border Background="{StaticResource Default.QuickDropDownBackground}" MinHeight="14" MinWidth="28" BorderThickness="1" CornerRadius="2" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}">
                                                    <ItemsPresenter/>
                                                </Border>
                                            </Microsoft_Windows_Themes:SystemDropShadowChrome>
                                        </Popup>
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="HasDropShadow" Value="True" SourceName="PART_Popup">
                                        <Setter TargetName="PART_Shadow" Property="Margin" Value="0,0,5,5"/>
                                    </Trigger>
                                    <Trigger  Property="IsMouseOver" Value="True">
                                        <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{DynamicResource ButtonHoverOuterBorderBrush}"/>
                                    </Trigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition SourceName="PART_ToggleButton" Property="IsMouseOver" Value="True"></Condition>
                                            <Condition Property="IsDropDownOpen" Value="False"></Condition>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="InnerPathToggle" Value="{DynamicResource ButtonHoverInnerBackgroundBrush}"/>
                                        <Setter Property="Background" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonHoverOuterBackgroundBrush}"/>
                                        <Setter Property="BorderBrush" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonHoverOuterBorderBrush}"/>
                                    </MultiTrigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition SourceName="PART_Button" Property="IsMouseOver" Value="True"/>
                                            <Condition Property="IsDropDownOpen" Value="False"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="InnerPath" Value="{DynamicResource ButtonHoverInnerBackgroundBrush}"/>
                                        <Setter Property="Background" TargetName="PART_Button" Value="{DynamicResource ButtonHoverOuterBackgroundBrush}"/>
                                        <Setter Property="BorderBrush" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonHoverOuterBorderBrush}"/>
                                    </MultiTrigger>

                                    <Trigger Property="IsDropDownOpen" Value="True">
                                        <Setter Property="BorderBrush" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonPressedBorderBrush}"/>
                                        <Setter Property="ToolTipService.IsEnabled" Value="False" />
                                        <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{DynamicResource ButtonPressedBorderBrush}"/>
                                        <Setter Property="Background" TargetName="OuterBorder" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"/>
                                    </Trigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition SourceName="PART_Button"  Property="IsMouseOver" Value="False"/>
                                            <Condition Property="IsPressed" Value="True"/>
                                        </MultiTrigger.Conditions>

                                        <Setter Property="BorderBrush" TargetName="PART_Button" Value="{DynamicResource ButtonPressedOuterBorderBrush}"/>
                                        <Setter Property="Background" TargetName="PART_Button" Value="{DynamicResource ButtonPressedOuterBackgroundBrush}"/>
                                        <Setter Property="Fill" TargetName="InnerPath" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"/>

                                        <Setter Property="BorderBrush" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonPressedOuterBorderBrush}"/>
                                        <Setter Property="Background" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonPressedOuterBackgroundBrush}"/>
                                        <Setter Property="Fill" TargetName="InnerPathToggle" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"/>

                                        <Setter Property="ToolTipService.IsEnabled" Value="False" />
                                        <Setter Property="BorderBrush" TargetName="OuterBorder" Value="Transparent"/>
                                        <Setter Property="BorderThickness" TargetName="PART_ToggleButton" Value="0,1,1,1"/>
                                    </MultiTrigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition SourceName="PART_Button"  Property="IsMouseOver" Value="True"/>
                                            <Condition Property="IsPressed" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="BorderBrush" TargetName="PART_Button" Value="{DynamicResource ButtonPressedOuterBorderBrush}"/>
                                        <Setter Property="Background" TargetName="PART_Button" Value="{DynamicResource ButtonPressedOuterBackgroundBrush}"/>
                                        <Setter Property="Fill" TargetName="InnerPath" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"/>
                                    </MultiTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="SizeForm" Value="Small"/>
                        <Condition Property="HitTestArea" Value="LabelAndImage"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type syncfusion:SplitButton}">
                                <Border
                                    CornerRadius="2" MinHeight="22" Name="OuterBorder"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Opacity="{TemplateBinding Opacity}"
                                    IsEnabled="{TemplateBinding IsEnabled}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="15"/>
                                        </Grid.ColumnDefinitions>
                                        <Border
                                            Name="PART_Button"  
					                        Grid.Column="0" 
					                        Background="Transparent" CornerRadius="2,0,0,2" BorderThickness="0" BorderBrush="Transparent" >
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition />
                                                </Grid.ColumnDefinitions>
                                                <Rectangle Name="InnerPath" Fill="{TemplateBinding Background}" Grid.ColumnSpan="2"  Margin="1" RadiusX="1.667" RadiusY="1.667"/>

                                                <Image 
                                                    Name="PART_Image" Grid.Column="0" Margin="1"
							                        VerticalAlignment="Center" HorizontalAlignment="Center"
							                        Width="16" Height="16"
                                                    RenderOptions.BitmapScalingMode="NearestNeighbor"
							                        Source="{Binding Path=SmallIcon, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
							                        Visibility="Collapsed" />
                                                <TextBlock Grid.Column="1" Name="label"
						                            Text="{TemplateBinding Label}"
						                            Foreground="{TemplateBinding Foreground}"
						                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
						                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
						                            Margin="2,0,2,0" />
                                            </Grid>
                                        </Border>
                                        <Border 
                                            Name="PART_ToggleButton"
					                        Grid.Column="2" ToolTip="{TemplateBinding ToggleButtonToolTip}"
					                        BorderThickness="1,0,0,0" BorderBrush="Transparent"
					                        Background="Transparent" CornerRadius="0,2,2,0" >
                                            <Grid>
                                                <Rectangle Name="InnerPathToggle" Fill="{TemplateBinding Background}"  Margin="1" RadiusX="1.667" RadiusY="1.667"/>
                                                <Path 
                                                    Fill="{StaticResource Blue.Path.Fill}"
					                                HorizontalAlignment="Center"
					                                VerticalAlignment="Center"
                                                    StrokeThickness="2"
					                                Data="{StaticResource Default.PathData}"					  
					                                Focusable="False"/>
                                            </Grid>
                                        </Border>
                                        <Popup Name="PART_Popup"
				                            Placement="Bottom"
				                            Focusable="False"
				                            PopupAnimation="Fade"
				                            AllowsTransparency="True"
				                            StaysOpen="False"
				                            IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource AncestorType={x:Type syncfusion:DropDownButton}}}">            
                                            <Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="PART_Shadow" SnapsToDevicePixels="true">
                                                <Border Background="{StaticResource Default.QuickDropDownBackground}" MinHeight="14" MinWidth="28" BorderThickness="1" CornerRadius="2" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}">
                                                    <ItemsPresenter/>
                                                </Border>
                                            </Microsoft_Windows_Themes:SystemDropShadowChrome>
                                        </Popup>
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="HasDropShadow" Value="True" SourceName="PART_Popup">
                                        <Setter TargetName="PART_Shadow" Property="Margin" Value="0,0,5,5"/>
                                    </Trigger>

                                    <Trigger Property="IsSmallImageVisible" Value="True">
                                        <Setter TargetName="PART_Image" Property="Visibility" Value="Visible" />
                                    </Trigger>

                                    <Trigger  Property="IsMouseOver" Value="True">
                                        <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{DynamicResource ButtonHoverOuterBorderBrush}"/>
                                    </Trigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition SourceName="PART_ToggleButton" Property="IsMouseOver" Value="True"></Condition>
                                            <Condition Property="IsDropDownOpen" Value="False"></Condition>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="InnerPathToggle" Value="{DynamicResource ButtonHoverInnerBackgroundBrush}"/>
                                        <Setter Property="Background" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonHoverOuterBackgroundBrush}"/>
                                        <Setter Property="BorderBrush" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonHoverOuterBorderBrush}"/>
                                    </MultiTrigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition SourceName="PART_Button" Property="IsMouseOver" Value="True"/>
                                            <Condition Property="IsDropDownOpen" Value="False"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="InnerPath" Value="{DynamicResource ButtonHoverInnerBackgroundBrush}"/>
                                        <Setter Property="Background" TargetName="PART_Button" Value="{DynamicResource ButtonHoverOuterBackgroundBrush}"/>
                                        <Setter Property="BorderBrush" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonHoverOuterBorderBrush}"/>
                                    </MultiTrigger>

                                    <Trigger Property="IsDropDownOpen" Value="True">
                                        <Setter Property="BorderBrush" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonPressedBorderBrush}"/>
                                        <Setter Property="ToolTipService.IsEnabled" Value="False" />
                                        <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{DynamicResource ButtonPressedBorderBrush}"/>
                                        <Setter Property="Background" TargetName="OuterBorder" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"/>
                                    </Trigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition SourceName="PART_Button"  Property="IsMouseOver" Value="False"/>
                                            <Condition Property="IsPressed" Value="True"/>
                                        </MultiTrigger.Conditions>

                                        <Setter Property="BorderBrush" TargetName="PART_Button" Value="{DynamicResource ButtonPressedOuterBorderBrush}"/>
                                        <Setter Property="Background" TargetName="PART_Button" Value="{DynamicResource ButtonPressedOuterBackgroundBrush}"/>
                                        <Setter Property="Fill" TargetName="InnerPath" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"/>

                                        <Setter Property="BorderBrush" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonPressedOuterBorderBrush}"/>
                                        <Setter Property="Background" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonPressedOuterBackgroundBrush}"/>
                                        <Setter Property="Fill" TargetName="InnerPathToggle" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"/>

                                        <Setter Property="ToolTipService.IsEnabled" Value="False" />
                                        <Setter Property="BorderBrush" TargetName="OuterBorder" Value="Transparent"/>
                                        <Setter Property="BorderThickness" TargetName="PART_ToggleButton" Value="0,1,1,1"/>
                                    </MultiTrigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition SourceName="PART_Button"  Property="IsMouseOver" Value="True"/>
                                            <Condition Property="IsPressed" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="BorderBrush" TargetName="PART_Button" Value="{DynamicResource ButtonPressedOuterBorderBrush}"/>
                                        <Setter Property="Background" TargetName="PART_Button" Value="{DynamicResource ButtonPressedOuterBackgroundBrush}"/>
                                        <Setter Property="Fill" TargetName="InnerPath" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"/>
                                    </MultiTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="SizeForm" Value="Small"/>
                        <Condition Property="HitTestArea" Value="ImageOnly"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type syncfusion:SplitButton}">
                                <Border
                                    CornerRadius="2" MinHeight="22" Name="OuterBorder"
                                    BorderThickness="1" BorderBrush="Transparent"
                                    Opacity="{TemplateBinding Opacity}"  
                                    IsEnabled="{TemplateBinding IsEnabled}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Border
                                            Name="PART_Button" MinHeight="22" 
					                        Grid.Column="0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0"
					                        Background="Transparent"						
					                        VerticalAlignment="Center"  CornerRadius="2,0,0,2"
					                        HorizontalAlignment="Center">
                                            <Grid>
                                                <Rectangle Name="InnerPath" Fill="{TemplateBinding Background}"  Margin="1" RadiusX="1.667" RadiusY="1.667"/>
                                                <Image Margin="1"
                                                    Width="16" Height="16"
                                                    RenderOptions.BitmapScalingMode="NearestNeighbor"
                                                    Source="{Binding Path=SmallIcon, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                            </Grid>
                                        </Border>
                                        <Border
                                            Name="PART_ToggleButton" ToolTip="{TemplateBinding ToggleButtonToolTip}"
			                                Grid.Column="1"
			                                BorderThickness="1,0,0,0"
				                            CornerRadius="0,2,2,0">
                                            <Grid>
                                                <Rectangle Name="InnerPathToggle" Fill="{TemplateBinding Background}"  Margin="1" RadiusX="1.667" RadiusY="1.667"/>
                                                <DockPanel>
                                                    <TextBlock DockPanel.Dock="Left" Name="label"
						                                Text="{TemplateBinding Label}"
						                                Foreground="{TemplateBinding Foreground}"
						                                VerticalAlignment="Center"
						                                Margin="2,0,2,0"/>
                                                    <Path DockPanel.Dock="Right" 
						                                Fill="{StaticResource Blue.Path.Fill}"
                                                        StrokeThickness="2"    
						                                HorizontalAlignment="Center"
						                                VerticalAlignment="Center"
						                                Data="{StaticResource Default.PathData}"
						                                Margin="2"/>
                                                </DockPanel>
                                            </Grid>
                                        </Border>
                                        <Popup Name="PART_Popup"
                                            Placement="Bottom"
				                            Focusable="False"
				                            PopupAnimation="Fade"
				                            AllowsTransparency="True"
				                            StaysOpen="False"
				                            IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource AncestorType={x:Type syncfusion:DropDownButton}}}">
                                            <Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="PART_Shadow" SnapsToDevicePixels="true">
                                                <Border Background="{StaticResource Default.QuickDropDownBackground}" MinHeight="14" MinWidth="28" BorderThickness="1" CornerRadius="2" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}">
                                                    <ItemsPresenter/>
                                                </Border>
                                            </Microsoft_Windows_Themes:SystemDropShadowChrome>
                                        </Popup>
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="HasDropShadow" Value="True" SourceName="PART_Popup">
                                        <Setter TargetName="PART_Shadow" Property="Margin" Value="0,0,5,5"/>
                                    </Trigger>
                                    <Trigger  Property="IsMouseOver" Value="True">
                                        <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{DynamicResource ButtonHoverOuterBorderBrush}"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition SourceName="PART_ToggleButton" Property="IsMouseOver" Value="True"></Condition>
                                            <Condition Property="IsDropDownOpen" Value="False"></Condition>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="InnerPathToggle" Value="{DynamicResource ButtonHoverInnerBackgroundBrush}"/>
                                        <Setter Property="Background" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonHoverOuterBackgroundBrush}"/>
                                        <Setter Property="BorderBrush" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonHoverOuterBorderBrush}"/>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition SourceName="PART_Button" Property="IsMouseOver" Value="True"/>
                                            <Condition Property="IsDropDownOpen" Value="False"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="InnerPath" Value="{DynamicResource ButtonHoverInnerBackgroundBrush}"/>
                                        <Setter Property="Background" TargetName="PART_Button" Value="{DynamicResource ButtonHoverOuterBackgroundBrush}"/>
                                        <Setter Property="BorderBrush" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonHoverOuterBorderBrush}"/>
                                    </MultiTrigger>
                                    <Trigger Property="IsDropDownOpen" Value="True">
                                        <Setter Property="BorderBrush" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonPressedBorderBrush}"/>
                                        <Setter Property="ToolTipService.IsEnabled" Value="False" />
                                        <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{DynamicResource ButtonPressedBorderBrush}"/>
                                        <Setter Property="Background" TargetName="OuterBorder" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition SourceName="PART_Button"  Property="IsMouseOver" Value="False"/>
                                            <Condition Property="IsPressed" Value="True"/>
                                        </MultiTrigger.Conditions>

                                        <Setter Property="BorderBrush" TargetName="PART_Button" Value="{DynamicResource ButtonPressedOuterBorderBrush}"/>
                                        <Setter Property="Background" TargetName="PART_Button" Value="{DynamicResource ButtonPressedOuterBackgroundBrush}"/>
                                        <Setter Property="Fill" TargetName="InnerPath" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"/>

                                        <Setter Property="BorderBrush" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonPressedOuterBorderBrush}"/>
                                        <Setter Property="Background" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonPressedOuterBackgroundBrush}"/>
                                        <Setter Property="Fill" TargetName="InnerPathToggle" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"/>

                                        <Setter Property="ToolTipService.IsEnabled" Value="False" />
                                        <Setter Property="BorderBrush" TargetName="OuterBorder" Value="Transparent"/>
                                        <Setter Property="BorderThickness" TargetName="PART_ToggleButton" Value="0,1,1,1"/>
                                    </MultiTrigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition SourceName="PART_Button"  Property="IsMouseOver" Value="True"/>
                                            <Condition Property="IsPressed" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="BorderBrush" TargetName="PART_Button" Value="{DynamicResource ButtonPressedOuterBorderBrush}"/>
                                        <Setter Property="Background" TargetName="PART_Button" Value="{DynamicResource ButtonPressedOuterBackgroundBrush}"/>
                                        <Setter Property="Fill" TargetName="InnerPath" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"/>
                                    </MultiTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Background" Value="Transparent"/>
                </MultiTrigger>
                <Trigger Property="SizeForm" Value="Large">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type syncfusion:SplitButton}">
                                <Border
                                    CornerRadius="2" Name="OuterBorder"
			                        BorderThickness="{TemplateBinding BorderThickness}"
			                        BorderBrush="{TemplateBinding BorderBrush}"
			                        Background="{TemplateBinding Background}"
			                        Opacity="{TemplateBinding Opacity}"
			                        IsEnabled="{TemplateBinding IsEnabled}">
                                    <StackPanel Orientation="Vertical">
                                        <Border Name="PART_Button"
					                        Background="Transparent"
					                        BorderThickness="0" CornerRadius="2,2,0,0"
					                        BorderBrush="Transparent"
					                        Visibility="Collapsed">
                                            <Grid>
                                                <Rectangle Name="InnerPath" Fill="{TemplateBinding Background}"  Margin="1" RadiusX="1.667" RadiusY="1.667"/>
                                                <Image Width="31" Height="31"
                                                    RenderOptions.BitmapScalingMode="NearestNeighbor"
					                                Source="{Binding Path=LargeIcon, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                            </Grid>
                                        </Border>
                                        <Border Name="PART_ToggleButton" ToolTip="{TemplateBinding ToggleButtonToolTip}"
					                        CornerRadius="0,0,2,2"
					                        BorderThickness="0,1,0,0" >

                                            <Grid>
                                                <Rectangle Name="InnerPathToggle" Fill="{TemplateBinding Background}"  Margin="1" RadiusX="1.667" RadiusY="1.667"/>
                                                <syncfusion:CustomItemsControl
						                            Margin="0,2,0,2"  Name="label"
						                            Path="{StaticResource Path}" 
						                            Focusable="False"
						                            ItemsSource="{Binding Path=Label, Mode=OneWay, Converter={StaticResource TextWrappingConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                                                    <ItemsControl.ItemsPanel>
                                                        <ItemsPanelTemplate>
                                                            <syncfusion:MultilinePanel
									                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
									                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"/>
                                                        </ItemsPanelTemplate>
                                                    </ItemsControl.ItemsPanel>
                                                </syncfusion:CustomItemsControl>
                                            </Grid>
                                        </Border>
                                        <Popup Name="PART_Popup"
				                            Placement="Bottom"
				                            Focusable="False"
				                            PopupAnimation="Fade"
				                            AllowsTransparency="True"
				                            StaysOpen="False"
				                            IsOpen="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type syncfusion:DropDownButton}}}">
                                            <Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="PART_Shadow" SnapsToDevicePixels="true">
                                                <Border Background="{StaticResource Default.QuickDropDownBackground}" MinHeight="14" MinWidth="28" BorderThickness="1" CornerRadius="2" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}">
                                                    <ItemsPresenter/>
                                                </Border>
                                            </Microsoft_Windows_Themes:SystemDropShadowChrome>
                                        </Popup>
                                    </StackPanel>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="HasDropShadow" Value="True" SourceName="PART_Popup">
                                        <Setter TargetName="PART_Shadow" Property="Margin" Value="0,0,5,5"/>
                                    </Trigger>

                                    <Trigger Property="IsLargeImageVisible" Value="True">
                                        <Setter TargetName="PART_Button" Property="Visibility" Value="Visible" />
                                    </Trigger>

                                    <Trigger  Property="IsMouseOver" Value="True">
                                        <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{DynamicResource ButtonHoverOuterBorderBrush}"/>
                                    </Trigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition SourceName="PART_ToggleButton" Property="IsMouseOver" Value="True"></Condition>
                                            <Condition Property="IsDropDownOpen" Value="False"></Condition>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="InnerPathToggle" Value="{DynamicResource ButtonHoverInnerBackgroundBrush}"/>
                                        <Setter Property="Background" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonHoverOuterBackgroundBrush}"/>
                                        <Setter Property="BorderBrush" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonHoverOuterBorderBrush}"/>
                                    </MultiTrigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition SourceName="PART_Button" Property="IsMouseOver" Value="True"/>
                                            <Condition Property="IsDropDownOpen" Value="False"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="InnerPath" Value="{DynamicResource ButtonHoverInnerBackgroundBrush}"/>
                                        <Setter Property="Background" TargetName="PART_Button" Value="{DynamicResource ButtonHoverOuterBackgroundBrush}"/>
                                        <Setter Property="BorderBrush" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonHoverOuterBorderBrush}"/>
                                    </MultiTrigger>

                                    <Trigger Property="IsDropDownOpen" Value="True">
                                        <Setter Property="BorderBrush" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonPressedBorderBrush}"/>
                                        <Setter Property="ToolTipService.IsEnabled" Value="False" />
                                        <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{DynamicResource ButtonPressedBorderBrush}"/>
                                        <Setter Property="Background" TargetName="OuterBorder" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"/>
                                    </Trigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition SourceName="PART_Button"  Property="IsMouseOver" Value="False"/>
                                            <Condition Property="IsPressed" Value="True"/>
                                        </MultiTrigger.Conditions>

                                        <Setter Property="BorderBrush" TargetName="PART_Button" Value="{DynamicResource ButtonPressedOuterBorderBrush}"/>
                                        <Setter Property="Background" TargetName="PART_Button" Value="{DynamicResource ButtonPressedOuterBackgroundBrush}"/>
                                        <Setter Property="Fill" TargetName="InnerPath" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"/>

                                        <Setter Property="BorderBrush" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonPressedOuterBorderBrush}"/>
                                        <Setter Property="Background" TargetName="PART_ToggleButton" Value="{DynamicResource ButtonPressedOuterBackgroundBrush}"/>
                                        <Setter Property="Fill" TargetName="InnerPathToggle" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"/>

                                        <Setter Property="ToolTipService.IsEnabled" Value="False" />
                                        <Setter Property="BorderBrush" TargetName="OuterBorder" Value="Transparent"/>
                                        <Setter Property="BorderThickness" TargetName="PART_ToggleButton" Value="1,0,1,1"/>
                                    </MultiTrigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition SourceName="PART_Button"  Property="IsMouseOver" Value="True"/>
                                            <Condition Property="IsPressed" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="BorderBrush" TargetName="PART_Button" Value="{DynamicResource ButtonPressedOuterBorderBrush}"/>
                                        <Setter Property="Background" TargetName="PART_Button" Value="{DynamicResource ButtonPressedOuterBackgroundBrush}"/>
                                        <Setter Property="Fill" TargetName="InnerPath" Value="{DynamicResource ButtonPressedInnerBackgroundBrush}"/>
                                    </MultiTrigger>

                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Background" Value="Transparent"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5"/>
                </Trigger>

            </Style.Triggers>
        </Style>
    </syncfusion:RibbonWindow.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="24*"/>
            <ColumnDefinition Width="9*"/>
            <ColumnDefinition Width="31*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="25" />
            <RowDefinition Height="0" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <syncfusion:Ribbon
            Name="MyRibbon"
            VerticalAlignment="Center" Grid.ColumnSpan="3">
            <syncfusion:Ribbon.BackStage>
                <syncfusion:Backstage>
                    <syncfusion:BackStageCommandButton 
                        Header="Save"
                        Icon="/syncfusion.gridcontroldemos.wpf;component/Assets/GridControl/ExcelLikeUi/Save.png" />
                </syncfusion:Backstage>
            </syncfusion:Ribbon.BackStage>
            <syncfusion:Ribbon.ApplicationMenu>
                <syncfusion:ApplicationMenu
                    Width="38"
                    Height="38"
                    ApplicationButtonImage="/syncfusion.gridcontroldemos.wpf;component/Assets/GridControl/ExcelLikeUi/syncfusion.png"
                    IsPopupOpen="False"
                    syncfusion:Ribbon.KeyTip="F">
                    <syncfusion:ApplicationMenu.MenuItems>
                        <TextBlock MinWidth="250" FontWeight="Bold">Save Items</TextBlock>
                        <Separator Padding="0" />
                    </syncfusion:ApplicationMenu.MenuItems>
                    <syncfusion:SimpleMenuButton Icon="/syncfusion.gridcontroldemos.wpf;component/Assets/GridControl/ExcelLikeUi/New32.png" Label="New" />
                    <syncfusion:SimpleMenuButton Icon="/syncfusion.gridcontroldemos.wpf;component/Assets/GridControl/ExcelLikeUi/Open32.png" Label="Open" />
                    <syncfusion:SimpleMenuButton Icon="/syncfusion.gridcontroldemos.wpf;component/Assets/GridControl/ExcelLikeUi/Save32.png" Label="Save" />
                    <syncfusion:SplitMenuButton Icon="/syncfusion.gridcontroldemos.wpf;component/Assets/GridControl/ExcelLikeUi/SaveAs32.png" Label="Save As">
                        <syncfusion:ApplicationMenuGroup Header="Save in another format" IconBarEnabled="False">
                            <syncfusion:SimpleMenuButton Description="Save a copy of the item to your computer in one of the several formates"
                                                         Icon="/syncfusion.gridcontroldemos.wpf;component/Assets/GridControl/ExcelLikeUi/SaveAs32.png"
                                                         Label="Save As" />
                        </syncfusion:ApplicationMenuGroup>
                    </syncfusion:SplitMenuButton>
                    <syncfusion:SimpleMenuButton Icon="/syncfusion.gridcontroldemos.wpf;component/Assets/GridControl/ExcelLikeUi/Delete.png" Label="Delete" />
                    <Separator Margin="40,0,0,0" />
                    <syncfusion:SplitMenuButton Icon="/syncfusion.gridcontroldemos.wpf;component/Assets/GridControl/ExcelLikeUi/Print32.png"
                                                Label="Print"
                                                syncfusion:Ribbon.KeyTip="PR">
                        <syncfusion:ApplicationMenuGroup Header="Preview and print">
                            <syncfusion:SimpleMenuButton Description="Select a printer, number of copies, and other printing options before printing."
                                                         Icon="/syncfusion.gridcontroldemos.wpf;component/Assets/GridControl/ExcelLikeUi/Print32.png"
                                                         Label="Print" />
                            <syncfusion:SimpleMenuButton Description="Send the item directly to the default printer without making changes."
                                                         Icon="/syncfusion.gridcontroldemos.wpf;component/Assets/GridControl/ExcelLikeUi/Print32.png"
                                                         Label="Quick Print" />
                        </syncfusion:ApplicationMenuGroup>
                    </syncfusion:SplitMenuButton>
                    <Separator Margin="40,0,0,0" />
                    <syncfusion:SimpleMenuButton Icon="/syncfusion.gridcontroldemos.wpf;component/Assets/GridControl/ExcelLikeUi/Close32.png" Label="Close" />
                    <syncfusion:ApplicationMenu.ApplicationItems>

                        <syncfusion:ButtonPanel>
                            <syncfusion:RibbonButton Label="Edit Options"
                                                     SizeForm="Small"
                                                     SmallIcon="/syncfusion.gridcontroldemos.wpf;component/Assets/GridControl/ExcelLikeUi/Options.png" />
                        </syncfusion:ButtonPanel>
                    </syncfusion:ApplicationMenu.ApplicationItems>
                </syncfusion:ApplicationMenu>
            </syncfusion:Ribbon.ApplicationMenu>
            <syncfusion:Ribbon.QuickAccessToolBar>
                <syncfusion:QuickAccessToolBar>
                    <syncfusion:RibbonButton 
                        Command="{Binding SaveCommand}"
                        SizeForm="ExtraSmall"   
                        SmallIcon="/syncfusion.gridcontroldemos.wpf;component/Assets/GridControl/ExcelLikeUi/Save.png"
                        syncfusion:Ribbon.KeyTip="1" ToolTip="Save" />
                    <syncfusion:RibbonButton 
                        Command="{Binding UndoCommand}"
                        SizeForm="ExtraSmall"
                        SmallIcon="/syncfusion.gridcontroldemos.wpf;component/Assets/GridControl/ExcelLikeUi/Undo16.png"
                        syncfusion:Ribbon.KeyTip="2"  ToolTip="Undo"/>
                    <syncfusion:RibbonButton 
                        Command="{Binding RedoCommand}"
                        SizeForm="ExtraSmall"
                        SmallIcon="/syncfusion.gridcontroldemos.wpf;component/Assets/GridControl/ExcelLikeUi/Redo16.png"
                        syncfusion:Ribbon.KeyTip="3"  ToolTip="Redo"/>
                    <syncfusion:RibbonButton 
                        Command="{Binding PrintCommand}"
                        SizeForm="ExtraSmall"
                        SmallIcon="/syncfusion.gridcontroldemos.wpf;component/Assets/GridControl/ExcelLikeUi/print.gif"
                        syncfusion:Ribbon.KeyTip="4" ToolTip="Print" />
                </syncfusion:QuickAccessToolBar>
            </syncfusion:Ribbon.QuickAccessToolBar>
            <syncfusion:RibbonTab Caption="Home" syncfusion:Ribbon.KeyTip="H" IsChecked="False">
                <syncfusion:RibbonBar Header="Clipboard"
                                      IsLauncherButtonVisible="False"
                                      syncfusion:Ribbon.KeyTip="FN">
                    <syncfusion:RibbonButton Command="{Binding PasteCommand}"
                                             Label="Paste"
                                             LargeIcon="/syncfusion.gridcontroldemos.wpf;component/Assets/GridControl/ExcelLikeUi/paste32.png"
                                             SizeForm="Large" ToolTip="Paste" />
                    <syncfusion:RibbonButton Command="{Binding CutCommand}"
                                             Label="Cut"
                                             SizeForm="Small"
                                             SmallIcon="/syncfusion.gridcontroldemos.wpf;component/Assets/GridControl/ExcelLikeUi/Cut16.png" ToolTip="Cut" />
                    <syncfusion:RibbonButton Command="{Binding CopyCommand}"
                                             Label="Copy"
                                             SizeForm="Small"
                                             SmallIcon="/syncfusion.gridcontroldemos.wpf;component/Assets/GridControl/ExcelLikeUi/Copy16.png" ToolTip="Copy" />
                </syncfusion:RibbonBar>
                <syncfusion:RibbonBar CollapseImage="/syncfusion.gridcontroldemos.wpf;component/Assets/GridControl/ExcelLikeUi/FontColor.png"
                                      Header="Basic Text"
                                      IsLargeButtonPanel="False"
                                      IsLauncherButtonVisible="False"
                                      syncfusion:Ribbon.KeyTip="FO">
                    <syncfusion:ButtonPanel Margin="3" SeparatorVisibility="Collapsed">
                        <syncfusion:RibbonComboBox Width="130"
                                                   ItemsSource="{Binding Source={x:Static Member=Fonts.SystemFontFamilies}}"
                                                   SelectedItem="{Binding FontFamily}" ToolTip="Font Family" />
                        <syncfusion:RibbonComboBox Width="45"
                                                   ItemsSource="{Binding FontSizeList}"
                                                   SelectedItem="{Binding FontSize}" ToolTip="Font size" />
                    </syncfusion:ButtonPanel>
                    <syncfusion:ButtonPanel Margin="3">
                        <syncfusion:RibbonButton Command="{Binding FontSizeCommand}"
                                                 CommandParameter="True"
                                                 SizeForm="ExtraSmall"
                                                 SmallIcon="/syncfusion.gridcontroldemos.wpf;component/Assets/GridControl/ExcelLikeUi/FontSizeInc.png" ToolTip="Increase Font Size" />
                        <syncfusion:RibbonButton Command="{Binding FontSizeCommand}"
                                                 CommandParameter="False"
                                                 SizeForm="ExtraSmall"
                                                 SmallIcon="/syncfusion.gridcontroldemos.wpf;component/Assets/GridControl/ExcelLikeUi/FontSizeDec.png" ToolTip="Decrease Font Size" />
                    </syncfusion:ButtonPanel>

                    <syncfusion:ButtonPanel Margin="3">
                        <syncfusion:RibbonButton 
                            IsSelected="{Binding Path=FontWeight, Mode=TwoWay, Converter={StaticResource FontWeightConverter}}"
                            IsToggle="True"
                            SizeForm="ExtraSmall"
                            SmallIcon="/syncfusion.gridcontroldemos.wpf;component/Assets/GridControl/ExcelLikeUi/Bold16.png" ToolTip="Bold" />
                        <syncfusion:RibbonButton 
                            IsSelected="{Binding Path=FontStyle, Mode=TwoWay, Converter={StaticResource FontStyleConverter}}"
                            IsToggle="True"
                            SizeForm="ExtraSmall"
                            SmallIcon="/syncfusion.gridcontroldemos.wpf;component/Assets/GridControl/ExcelLikeUi/Italic.png"  ToolTip="Ialic"/>
                        <syncfusion:RibbonButton 
                            IsSelected="{Binding Path=TextDecorations, Mode=TwoWay, Converter={StaticResource TextDecorationsConverter}}"
                            IsToggle="True"
                            SizeForm="ExtraSmall"
                            SmallIcon="/syncfusion.gridcontroldemos.wpf;component/Assets/GridControl/ExcelLikeUi/Underline.png"  ToolTip="Underline"/>
                    </syncfusion:ButtonPanel>
                    <syncfusion:ButtonPanel Margin="3" x:Name="foregroundPanel">
                        <syncfusion:SplitButton 
                            x:Name="ForeColorSplitButton" 
                            SizeForm="ExtraSmall" 
                            SmallIcon="/syncfusion.gridcontroldemos.wpf;component/Assets/GridControl/ExcelLikeUi/FontSplitButton.png"
                            ToolTip="Font Color"
                            Style="{StaticResource RibbonSplitButtonStyle}"
                            DataContext="{Binding ElementName=ForegroundColorPicker}">
                            <syncfusion:ColorPickerPalette 
                                x:Name="ForegroundColorPicker"
                                IsExpanded="True"
                                Color="Red"/>
                        </syncfusion:SplitButton>
                        <syncfusion:SplitButton 
                            x:Name="BGColorSplitButton" 
                            SizeForm="ExtraSmall" 
                            SmallIcon="/syncfusion.gridcontroldemos.wpf;component/Assets/GridControl/ExcelLikeUi/FillColorSplitButton.png" 
                            Style="{StaticResource RibbonSplitButtonStyle}"
                            DataContext="{Binding ElementName=BackgroundColorPicker}">
                            <syncfusion:ColorPickerPalette 
                                x:Name="BackgroundColorPicker" 
                                IsExpanded="True"
                                Color="Yellow" 
                                ToolTip="Fill Color" />
                        </syncfusion:SplitButton>
                    </syncfusion:ButtonPanel>
                </syncfusion:RibbonBar>
                <syncfusion:RibbonBar Header="Alignment "
                                      IsLargeButtonPanel="False"
                                      IsLauncherButtonVisible="False"
                                      syncfusion:Ribbon.KeyTip="FO">
                    <syncfusion:ButtonPanel Margin="3" SeparatorVisibility="Collapsed">
                        <syncfusion:RibbonButton
                            Command="{Binding VerticalAlignmentCommand}"
                            CommandParameter="Top"
                            IsSelected="{Binding Path=VerticalAlignment, Mode=TwoWay, Converter={StaticResource ExcelLikeUiVerticalAlignmentConverter}, ConverterParameter=Top}"
                            IsToggle="True"
                            SizeForm="ExtraSmall"
                            SmallIcon="/syncfusion.gridcontroldemos.wpf;component/Assets/GridControl/ExcelLikeUi/TopAlign.png" ToolTip="Top Align" />
                        <syncfusion:RibbonButton 
                            Command="{Binding VerticalAlignmentCommand}"
                            CommandParameter="Center"
                            IsSelected="{Binding Path=VerticalAlignment, Mode=TwoWay, Converter={StaticResource ExcelLikeUiVerticalAlignmentConverter}, ConverterParameter=Center}"
                            IsToggle="True"
                            SizeForm="ExtraSmall"
                            SmallIcon="/syncfusion.gridcontroldemos.wpf;component/Assets/GridControl/ExcelLikeUi/MiddleAlign.png"  ToolTip="Middle Align"/>
                        <syncfusion:RibbonButton 
                            Command="{Binding VerticalAlignmentCommand}"
                            CommandParameter="Bottom"
                            IsSelected="{Binding Path=VerticalAlignment, Mode=TwoWay, Converter={StaticResource ExcelLikeUiVerticalAlignmentConverter}, ConverterParameter=Bottom}"
                            IsToggle="True"
                            SizeForm="ExtraSmall"
                            SmallIcon="/syncfusion.gridcontroldemos.wpf;component/Assets/GridControl/ExcelLikeUi/BottomAlign.png" ToolTip="Bottom Align" />
                    </syncfusion:ButtonPanel>
                    <syncfusion:ButtonPanel Margin="5">
                        <syncfusion:RibbonButton 
                            Command="{Binding OrientationCommand}"
                            SizeForm="ExtraSmall"
                            SmallIcon="/syncfusion.gridcontroldemos.wpf;component/Assets/GridControl/ExcelLikeUi/Orientation.png" ToolTip="Orientation" />
                    </syncfusion:ButtonPanel>
                    <syncfusion:ButtonPanel Margin="3" SeparatorVisibility="Collapsed">
                        <syncfusion:RibbonButton 
                            Command="{Binding Path=HorizontalAlignmentCommand}"
                            CommandParameter="Left"
                            IsSelected="{Binding Path=HorizontalAlignment, Mode=TwoWay, Converter={StaticResource ExcelLikeUiHorizontalAlignmentConverter}, ConverterParameter=Left}"
                            IsToggle="True"
                            SizeForm="ExtraSmall"
                            SmallIcon="/syncfusion.gridcontroldemos.wpf;component/Assets/GridControl/ExcelLikeUi/AlignTextLeft16.png" ToolTip="Align Left" />
                        <syncfusion:RibbonButton 
                            Command="{Binding HorizontalAlignmentCommand}"
                            CommandParameter="Center"
                            IsSelected="{Binding Path=HorizontalAlignment, Mode=TwoWay, Converter={StaticResource ExcelLikeUiHorizontalAlignmentConverter}, ConverterParameter=Center}"
                            IsToggle="True"
                            SizeForm="ExtraSmall"
                            SmallIcon="/syncfusion.gridcontroldemos.wpf;component/Assets/GridControl/ExcelLikeUi/AlignTextCenter16.png" ToolTip="Align Center" />
                        <syncfusion:RibbonButton 
                            Command="{Binding HorizontalAlignmentCommand}"
                            CommandParameter="Right"
                            IsSelected="{Binding Path=HorizontalAlignment, Mode=TwoWay, Converter={StaticResource ExcelLikeUiHorizontalAlignmentConverter}, ConverterParameter=Right}"
                            IsToggle="True"
                            SizeForm="ExtraSmall"
                            SmallIcon="/syncfusion.gridcontroldemos.wpf;component/Assets/GridControl/ExcelLikeUi/AlignTextRight16.png" ToolTip="Align Right" />
                    </syncfusion:ButtonPanel>
                    <syncfusion:ButtonPanel Margin="3">
                        <syncfusion:RibbonButton
                            Command="{Binding IndentCommand}"
                            CommandParameter="True"
                            SizeForm="ExtraSmall"
                            SmallIcon="/syncfusion.gridcontroldemos.wpf;component/Assets/GridControl/ExcelLikeUi/IncreaseIndent16.png" ToolTip="Increase Indent" />
                        <syncfusion:RibbonButton 
                            Command="{Binding IndentCommand}"
                            CommandParameter="False"
                            SizeForm="ExtraSmall"
                            SmallIcon="/syncfusion.gridcontroldemos.wpf;component/Assets/GridControl/ExcelLikeUi/DecreaseIndent16.png" ToolTip="Decrease Indent"  />
                    </syncfusion:ButtonPanel>
                </syncfusion:RibbonBar>
            </syncfusion:RibbonTab>
        </syncfusion:Ribbon>
        <StackPanel Grid.Row="1" Orientation="Horizontal" Grid.ColumnSpan="3">
            <TextBox x:Name="InfoAbtCurrentCell"
                     Width="150"
                     HorizontalContentAlignment="Center"
                     Text="{Binding CellLocationText}" />
            <TextBlock Width="50" Margin="2 0 0 0">Fx</TextBlock>
            <TextBox x:Name="Formulacell" Width="1500" />
        </StackPanel>
        <syncfusion:TabControlExt x:Name="Tab1"
                    CloseButtonType="Hide"
                    ShowTabListContextMenu="False"
                    TabStripPlacement="Bottom"                    
                    EnableLabelEdit="False"                    
                    Grid.Row="3"
                    SelectedIndex="{Binding ActiveTabIndex}" Grid.ColumnSpan="3">

            <syncfusion:TabItemExt Header="Sheet1">
                <ScrollViewer CanContentScroll="True"
                              HorizontalScrollBarVisibility="Auto"
                              VerticalScrollBarVisibility="Auto">
                    <local:SampleGridControl x:Name="grid1" >
                        <behaviors:Interaction.Behaviors>
                            <local:ExcelLikeUiCurrentCellSyncBehavior/>
                            <local:CellLocationSyncBehavior/>
                        </behaviors:Interaction.Behaviors>
                    </local:SampleGridControl>
                </ScrollViewer>
            </syncfusion:TabItemExt>

            <syncfusion:TabItemExt Header="Sheet2">
                <ScrollViewer CanContentScroll="True"
                              HorizontalScrollBarVisibility="Auto"
                              VerticalScrollBarVisibility="Auto">
                    <local:SampleGridControl x:Name="grid2" >
                        <behaviors:Interaction.Behaviors>
                            <local:ExcelLikeUiCurrentCellSyncBehavior/>
                            <local:CellLocationSyncBehavior/>
                        </behaviors:Interaction.Behaviors>
                    </local:SampleGridControl>
                </ScrollViewer>
            </syncfusion:TabItemExt>

            <syncfusion:TabItemExt Header="Sheet3">
                <ScrollViewer CanContentScroll="True"
                              HorizontalScrollBarVisibility="Auto"
                              VerticalScrollBarVisibility="Auto">
                    <local:SampleGridControl x:Name="grid3" >
                        <behaviors:Interaction.Behaviors>
                            <local:ExcelLikeUiCurrentCellSyncBehavior/>
                            <local:CellLocationSyncBehavior/>
                        </behaviors:Interaction.Behaviors>
                    </local:SampleGridControl>
                </ScrollViewer>
            </syncfusion:TabItemExt>
        </syncfusion:TabControlExt>
    </Grid>
</syncfusion:RibbonWindow>
