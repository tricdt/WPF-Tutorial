<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:syncfusionskin ="clr-namespace:Syncfusion.SfSkinManager;assembly=Syncfusion.SfSkinManager.WPF"
        xmlns:local="clr-namespace:LedSign"
        xmlns:Syncfusion="http://schemas.syncfusion.com/wpf" x:Class="LedSign.MainWindow"
        syncfusionskin:SfSkinManager.Theme="{syncfusionskin:SkinManager ThemeName=Windows11Light}"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800"
    xmlns:skin="clr-namespace:Syncfusion.Windows.Shared;assembly=Syncfusion.Shared.WPF">
    <Window.Resources>
        <LinearGradientBrush x:Key="PopupBackground" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFE8EBED" Offset="0.028"/>
            <GradientStop Color="#FFD1D8E2" Offset="0.982"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="PopupBorder" Color="#FF646464"/>
        <SolidColorBrush x:Key="SplitButtonAdvBorderBrush" Color="#FF707070"/>
        <LinearGradientBrush x:Key="SplitButtonAdvBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFECECEC" Offset="0.469"/>
            <GradientStop Color="#FFDBDBDB" Offset="0.531"/>
            <GradientStop Color="#FFD0D0D0" Offset="0.954"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="SplitButtonAdvForeground" Color="#FF1B293E"/>
        <LinearGradientBrush x:Key="SplitButtonAdvInnerBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="White" Offset="0"/>
            <GradientStop Color="#FFE8E8E8" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="SplitButtonAdvHoverBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFDBF1FC" Offset="0.465"/>
            <GradientStop Color="#FFBCE5FC" Offset="0.526"/>
            <GradientStop Color="#FFAADBF6" Offset="0.991"/>
            <GradientStop Color="#FFD6EDFA" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="SplitButtonAdvHoverBorderBrush" Color="#FF3C7FB1"/>
        <LinearGradientBrush x:Key="SplitButtonAdvHoverInnerBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFFEFFFF" Offset="0"/>
            <GradientStop Color="#FFD6EDFA" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="SplitButtonAdvPressedBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FF8CA1AC" Offset="0.036"/>
            <GradientStop Color="#FFB0CDDD" Offset="0.048"/>
            <GradientStop Color="#FFB0CDDD" Offset="0.084"/>
            <GradientStop Color="#FFC2E4F6" Offset="0.096"/>
            <GradientStop Color="#FFC2E4F6" Offset="0.468"/>
            <GradientStop Color="#FFA8D9F2" Offset="0.532"/>
            <GradientStop Color="#FF91CCEB" Offset="0.964"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="SplitButtonAdvPressedBorderBrush" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="SplitButtonAdvHoverForeground" Color="#FF000000"/>
        <DataTemplate x:Key="LargeIconTemplate">
            <Image x:Name="LargeImage" Height="{Binding Height, RelativeSource={RelativeSource Mode=TemplatedParent}}" Source="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}" Width="{Binding Width, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
        </DataTemplate>
        <DataTemplate x:Key="SmallIconTemplate">
            <Image x:Name="smallimage" Height="{Binding Height, RelativeSource={RelativeSource Mode=TemplatedParent}}" Source="{Binding Tag, RelativeSource={RelativeSource Mode=TemplatedParent}}" Width="{Binding Width, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
        </DataTemplate>
        <ControlTemplate x:Key="LargeModeTemplate" TargetType="{x:Type Syncfusion:SplitButtonAdv}">
            <Grid>
                <Popup x:Name="PART_DropDown" AllowsTransparency="True" Placement="Bottom" StaysOpen="{TemplateBinding StaysOpen}">
                    <Grid MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}">
                        <Border Background="{StaticResource PopupBackground}" BorderBrush="{StaticResource PopupBorder}" BorderThickness="1" CornerRadius="0">
                            <Border Background="{StaticResource PopupBackground}" BorderBrush="{StaticResource PopupBorder}" BorderThickness="0" CornerRadius="1">
                                <ContentPresenter/>
                            </Border>
                        </Border>
                    </Grid>
                </Popup>
                <Border x:Name="ItemBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" MinHeight="22" SnapsToDevicePixels="True">
                    <Border x:Name="InnerBorder" Background="Transparent" BorderBrush="{StaticResource SplitButtonAdvInnerBorderBrush}" BorderThickness="1" CornerRadius="3">
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Border x:Name="PART_Button" Background="Transparent" Focusable="True" Grid.Row="0">
                                <ContentPresenter x:Name="LargeIconContent" ContentTemplate="{TemplateBinding IconTemplate}" Content="{Binding}" ContentTemplateSelector="{TemplateBinding IconTemplateSelector}" Margin="2" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}"/>
                            </Border>
                            <Border x:Name="PART_DropDownButton" Background="Transparent" BorderBrush="{StaticResource SplitButtonAdvBorderBrush}" BorderThickness="0,1,0,0" Focusable="True" Grid.Row="1">
                                <Border x:Name="InnerDropBorder" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" CornerRadius="1">
                                    <StackPanel>
                                        <TextBlock x:Name="PART_LargeText" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="2" Text="{TemplateBinding Label}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        <Path x:Name="Arrow" Data="F0 M 0,0 L 4,4 8,0 Z" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" Margin="2" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Border>
                            </Border>
                        </Grid>
                    </Border>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="skin:SkinStorage.EnableTouch" Value="true">
                    <Setter Property="MinHeight" Value="30"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="skin:SkinStorage.EnableTouch" Value="false"/>
                    </MultiTrigger.Conditions>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="skin:SkinStorage.EnableTouch" Value="true"/>
                    </MultiTrigger.Conditions>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="skin:SkinStorage.EnableTouch" Value="false"/>
                    </MultiTrigger.Conditions>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="skin:SkinStorage.EnableTouch" Value="true"/>
                    </MultiTrigger.Conditions>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="skin:SkinStorage.EnableTouch" Value="false"/>
                        <Condition Property="IsMouseOver" SourceName="PART_DropDownButton" Value="true"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" TargetName="ItemBorder" Value="{StaticResource SplitButtonAdvHoverBackgroundBrush}"/>
                    <Setter Property="BorderBrush" TargetName="ItemBorder" Value="{StaticResource SplitButtonAdvHoverBorderBrush}"/>
                    <Setter Property="BorderBrush" TargetName="PART_DropDownButton" Value="{StaticResource SplitButtonAdvHoverBorderBrush}"/>
                    <Setter Property="BorderBrush" TargetName="InnerBorder" Value="{StaticResource SplitButtonAdvHoverInnerBorderBrush}"/>
                    <Setter Property="Fill" TargetName="Arrow" Value="{StaticResource SplitButtonAdvHoverForeground}"/>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="skin:SkinStorage.EnableTouch" Value="true"/>
                        <Condition Property="IsMouseOver" SourceName="PART_DropDownButton" Value="true"/>
                    </MultiTrigger.Conditions>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="skin:SkinStorage.EnableTouch" Value="false"/>
                        <Condition Property="IsMouseOver" SourceName="PART_Button" Value="true"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" TargetName="ItemBorder" Value="{StaticResource SplitButtonAdvHoverBackgroundBrush}"/>
                    <Setter Property="BorderBrush" TargetName="ItemBorder" Value="{StaticResource SplitButtonAdvHoverBorderBrush}"/>
                    <Setter Property="BorderBrush" TargetName="InnerBorder" Value="{StaticResource SplitButtonAdvHoverInnerBorderBrush}"/>
                    <Setter Property="BorderBrush" TargetName="PART_DropDownButton" Value="{StaticResource SplitButtonAdvHoverBorderBrush}"/>
                    <Setter Property="Fill" TargetName="Arrow" Value="{StaticResource SplitButtonAdvHoverForeground}"/>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="skin:SkinStorage.EnableTouch" Value="true"/>
                        <Condition Property="IsMouseOver" SourceName="PART_Button" Value="true"/>
                    </MultiTrigger.Conditions>
                </MultiTrigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="ItemBorder" Value="{StaticResource SplitButtonAdvPressedBackgroundBrush}"/>
                    <Setter Property="BorderBrush" TargetName="ItemBorder" Value="{StaticResource SplitButtonAdvPressedBorderBrush}"/>
                    <Setter Property="BorderBrush" TargetName="InnerBorder" Value="{StaticResource SplitButtonAdvPressedBackgroundBrush}"/>
                    <Setter Property="BorderBrush" TargetName="PART_DropDownButton" Value="{StaticResource SplitButtonAdvPressedBorderBrush}"/>
                    <Setter Property="Fill" TargetName="Arrow" Value="{StaticResource SplitButtonAdvHoverForeground}"/>
                </Trigger>
                <Trigger Property="IsDropDownPressed" Value="True"/>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" TargetName="ItemBorder" Value="0.5"/>
                </Trigger>
                <Trigger Property="IsMultiLine" Value="True">
                    <Setter Property="TextWrapping" TargetName="PART_LargeText" Value="Wrap"/>
                </Trigger>
                <Trigger Property="IsMultiLine" Value="False">
                    <Setter Property="TextWrapping" TargetName="PART_LargeText" Value="NoWrap"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IconTemplate" Value="{x:Null}"/>
                        <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ContentTemplate" TargetName="LargeIconContent" Value="{StaticResource LargeIconTemplate}"/>
                    <Setter Property="Tag" TargetName="LargeIconContent" Value="{Binding LargeIcon, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!--<Style x:Key="ButtonFocusVisual">
            <Setter>
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="Black" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->
        <Style x:Key="SplitButtonAdvStyle1" TargetType="{x:Type Syncfusion:SplitButtonAdv}">
            <Setter Property="Foreground" Value="{StaticResource SplitButtonAdvForeground}"/>
            <!--<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>-->
            <Setter Property="SmallIcon" Value="/Syncfusion.Shared.WPF;component//Controls/ButtonControls/Images/WordArt16.png"/>
            <Setter Property="LargeIcon" Value="/Syncfusion.Shared.WPF;component//Controls/ButtonControls/Images/WordArt32.png"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Label" Value="Split Button"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="{StaticResource SplitButtonAdvBackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource SplitButtonAdvBorderBrush}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Syncfusion:SplitButtonAdv}">
                        <Grid Focusable="False">
                            <Popup x:Name="PART_DropDown" AllowsTransparency="True" Placement="Bottom" StaysOpen="{TemplateBinding StaysOpen}" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Syncfusion:DropDownButton}}}">
                                <Grid x:Name="Part_GridPopup" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}">
                                    <Border Background="{StaticResource PopupBackground}" BorderBrush="{StaticResource PopupBorder}" BorderThickness="1" CornerRadius="0">
                                        <Border Background="{StaticResource PopupBackground}" BorderBrush="{StaticResource PopupBorder}" BorderThickness="0" CornerRadius="1">
                                            <ContentPresenter/>
                                        </Border>
                                    </Border>
                                </Grid>
                            </Popup>
                            <Border x:Name="ItemBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" MinHeight="22" SnapsToDevicePixels="True">
                                <Border x:Name="InnerBorder" Background="Transparent" BorderBrush="{StaticResource SplitButtonAdvInnerBorderBrush}" BorderThickness="1" CornerRadius="3">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Border x:Name="PART_ButtonNormal" Background="Transparent" Grid.Column="0" Focusable="True">
                                            <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <ContentPresenter x:Name="SmallIconContent" ContentTemplate="{TemplateBinding IconTemplate}" Content="{Binding}" ContentTemplateSelector="{TemplateBinding IconTemplateSelector}" Margin="2"/>
                                                <TextBlock x:Name="PART_NormalText" Grid.Column="1" Foreground="{StaticResource SplitButtonAdvForeground}" TextBlock.FontFamily="{TemplateBinding FontFamily}" TextBlock.FontSize="{TemplateBinding FontSize}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" Margin="2,0,2,0" Text="{TemplateBinding Label}" VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                                            </Grid>
                                        </Border>
                                        <Border x:Name="PART_DropDownButtonNormal" Background="Transparent" BorderBrush="{StaticResource SplitButtonAdvBorderBrush}" BorderThickness="1,0,0,0" Grid.Column="1" Focusable="True">
                                            <Path x:Name="Arrow" Data="F0 M 0,0 L 4,4 8,0 Z" Fill="{StaticResource SplitButtonAdvForeground}" HorizontalAlignment="Center" Margin="2,0,2,0" VerticalAlignment="Center"/>
                                        </Border>
                                    </Grid>
                                </Border>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="skin:SkinStorage.EnableTouch" Value="true">
                                <Setter Property="MinHeight" Value="30"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="skin:SkinStorage.EnableTouch" Value="false"/>
                                    <Condition Property="IsMouseOver" SourceName="PART_DropDownButtonNormal" Value="true"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="ItemBorder" Value="{StaticResource SplitButtonAdvHoverBackgroundBrush}"/>
                                <Setter Property="BorderBrush" TargetName="ItemBorder" Value="{StaticResource SplitButtonAdvHoverBorderBrush}"/>
                                <Setter Property="BorderBrush" TargetName="InnerBorder" Value="{StaticResource SplitButtonAdvHoverInnerBorderBrush}"/>
                                <Setter Property="BorderBrush" TargetName="PART_DropDownButtonNormal" Value="{StaticResource SplitButtonAdvHoverBorderBrush}"/>
                                <Setter Property="Fill" TargetName="Arrow" Value="{StaticResource SplitButtonAdvHoverForeground}"/>
                                <Setter Property="Foreground" TargetName="PART_NormalText" Value="{StaticResource SplitButtonAdvHoverForeground}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="skin:SkinStorage.EnableTouch" Value="true"/>
                                    <Condition Property="IsMouseOver" SourceName="PART_DropDownButtonNormal" Value="true"/>
                                </MultiTrigger.Conditions>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="skin:SkinStorage.EnableTouch" Value="false"/>
                                    <Condition Property="IsMouseOver" SourceName="PART_ButtonNormal" Value="true"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="ItemBorder" Value="{StaticResource SplitButtonAdvHoverBackgroundBrush}"/>
                                <Setter Property="BorderBrush" TargetName="ItemBorder" Value="{StaticResource SplitButtonAdvHoverBorderBrush}"/>
                                <Setter Property="Fill" TargetName="Arrow" Value="{StaticResource SplitButtonAdvHoverForeground}"/>
                                <Setter Property="BorderBrush" TargetName="PART_DropDownButtonNormal" Value="{StaticResource SplitButtonAdvHoverBorderBrush}"/>
                                <Setter Property="BorderBrush" TargetName="InnerBorder" Value="{StaticResource SplitButtonAdvHoverInnerBorderBrush}"/>
                                <Setter Property="Foreground" TargetName="PART_NormalText" Value="{StaticResource SplitButtonAdvHoverForeground}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="skin:SkinStorage.EnableTouch" Value="true"/>
                                    <Condition Property="IsMouseOver" SourceName="PART_ButtonNormal" Value="true"/>
                                </MultiTrigger.Conditions>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="skin:SkinStorage.EnableTouch" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Fill" TargetName="Arrow" Value="{StaticResource SplitButtonAdvHoverForeground}"/>
                                <Setter Property="Foreground" TargetName="PART_NormalText" Value="{StaticResource SplitButtonAdvHoverForeground}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="skin:SkinStorage.EnableTouch" Value="true"/>
                                </MultiTrigger.Conditions>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="skin:SkinStorage.EnableTouch" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Fill" TargetName="Arrow" Value="{StaticResource SplitButtonAdvHoverForeground}"/>
                                <Setter Property="Foreground" TargetName="PART_NormalText" Value="{StaticResource SplitButtonAdvHoverForeground}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="skin:SkinStorage.EnableTouch" Value="true"/>
                                </MultiTrigger.Conditions>
                            </MultiTrigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="ItemBorder" Value="{StaticResource SplitButtonAdvPressedBackgroundBrush}"/>
                                <Setter Property="BorderBrush" TargetName="ItemBorder" Value="{StaticResource SplitButtonAdvPressedBorderBrush}"/>
                                <Setter Property="BorderBrush" TargetName="InnerBorder" Value="{StaticResource SplitButtonAdvPressedBackgroundBrush}"/>
                                <Setter Property="BorderBrush" TargetName="PART_DropDownButtonNormal" Value="{StaticResource SplitButtonAdvPressedBorderBrush}"/>
                                <Setter Property="Fill" TargetName="Arrow" Value="{StaticResource SplitButtonAdvHoverForeground}"/>
                                <Setter Property="Foreground" TargetName="PART_NormalText" Value="{StaticResource SplitButtonAdvHoverForeground}"/>
                            </Trigger>
                            <Trigger Property="IsDropDownPressed" Value="True"/>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="ItemBorder" Value="0.5"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IconTemplate" Value="{x:Null}"/>
                                    <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="ContentTemplate" TargetName="SmallIconContent" Value="{StaticResource SmallIconTemplate}"/>
                                <Setter Property="Tag" TargetName="SmallIconContent" Value="{Binding SmallIcon, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="SizeMode" Value="Large">
                    <Setter Property="Template" Value="{StaticResource LargeModeTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <!--<local:LedGroup/>-->
        <Syncfusion:SplitButtonAdv Style="{DynamicResource SplitButtonAdvStyle1}" Height="3" Label="Split Button" SizeMode="Normal" Width="8">
            <Syncfusion:DropDownMenuGroup>
                <Syncfusion:DropDownMenuItem Header="Menu Item1"/>
                <Syncfusion:DropDownMenuItem Header="Menu Item2"/>
                <Syncfusion:DropDownMenuItem Header="Menu Item3"/>
            </Syncfusion:DropDownMenuGroup>
        </Syncfusion:SplitButtonAdv>
    </Grid>
</Window>
