<UserControl x:Class="DevExpress.Xpf.DemoChooser.Internal.PlatformPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
             xmlns:demobase="clr-namespace:DevExpress.Xpf.DemoChooser"
             xmlns:demoparts="clr-namespace:DevExpress.Xpf.DemoCenterBase.Helpers"
             xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
             xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
             xmlns:helpers="clr-namespace:DevExpress.Xpf.DemoChooser.Helpers"
             xmlns:dxdbt="clr-namespace:DevExpress.Xpf.DemoBase.ThemeKeys"
             mc:Ignorable="d"
             demoparts:AdaptiveContentControl.Priority="-2">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/DevExpress.Xpf.DemoBase.v24.1;component/DemoChooser/Pages/DirectXSwitchCheckEdit.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <dxmvvm:ObjectToObjectConverter x:Key="VisibleGroupsCountToVisibilityConverter" DefaultTarget="Collapsed">
                <dxmvvm:MapItem Source="0" Target="Visible" />
            </dxmvvm:ObjectToObjectConverter>
            <dxmvvm:ObjectToObjectConverter x:Key="BooleanToOpacityConverter" DefaultTarget="0">
                <dxmvvm:MapItem Source="True" Target="1" />
            </dxmvvm:ObjectToObjectConverter>
            <dxmvvm:ObjectToObjectConverter x:Key="ObjectToVisibilityConverter" DefaultTarget="Visible">
                <dxmvvm:MapItem Source="{x:Null}" Target="Collapsed" />
            </dxmvvm:ObjectToObjectConverter>
            <dxmvvm:ObjectToObjectConverter x:Key="InverseObjectToVisibilityConverter" DefaultTarget="Collapsed">
                <dxmvvm:MapItem Source="{x:Null}" Target="Visible" />
            </dxmvvm:ObjectToObjectConverter>
            <dxmvvm:BooleanToVisibilityConverter x:Key="boolToVisibilityConverter"/>
            <DataTemplate x:Key="linkLabelTemplate">
                <Grid Visibility="{Binding SupportsDirectX, Converter={StaticResource boolToVisibilityConverter}}">
                    <dxe:CheckEdit
                        VerticalAlignment="Top"
                        EditValue="{Binding UseGdi, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        Focusable="False"
                        Margin="5,2,0,0"
                        Template="{StaticResource directXSwitcherTemplate}">
                    </dxe:CheckEdit>
                </Grid>
            </DataTemplate>
            <Style x:Key="UIShape.Checked" TargetType="{x:Type Path}">
                <Setter Property="Data" Value="F1 M 0,3 0,5 3,8 8,3 8,1 3,6 0,3 Z " />
                <Setter Property="Fill" Value="White"/>
                <Setter Property="Height" Value="8" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="Margin" Value="2" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Stretch" Value="Fill" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Width" Value="8" />
            </Style>
            <Style x:Key="UIShape.Indeterminate" TargetType="{x:Type Path}">
                <Setter Property="Data" Value="F1 M 0,0 8,0 8,8 0,8 0,0 Z " />
                <Setter Property="Fill" Value="#FF444444"/>
                <Setter Property="Height" Value="8" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="Margin" Value="2" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Stretch" Value="Fill" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Width" Value="8" />
            </Style>
            <SolidColorBrush x:Key="Focused" Color="#FF26A4DD"/>
            <SolidColorBrush x:Key="Foreground" Color="#FF26A4DD"/>
            <SolidColorBrush x:Key="HoverAltBackground" Color="White"/>
            <SolidColorBrush x:Key="HoverBackground" Color="White"/>
            <SolidColorBrush x:Key="Border" Color="#6D6D6D"/>
            <SolidColorBrush x:Key="Editor.Background" Color="White"/>
            <SolidColorBrush x:Key="SelectionForeground" Color="#FF26A4DD"/>
            <SolidColorBrush x:Key="SelectionAltForeground" Color="#FF26A4DD"/>
            <SolidColorBrush x:Key="SelectionAltBackground" Color="White"/>
            <SolidColorBrush x:Key="HoverForeground" Color="#FF26A4DD"/>
            <Style TargetType="{x:Type RadioButton}">
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Background" Value="{StaticResource ResourceKey=Editor.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ResourceKey=Border}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="Padding" Value="0,3,0,3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RadioButton}">
                            <Grid x:Name="Root" Background="Transparent">
                                <Grid Margin="{TemplateBinding Padding}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid x:Name="Field"
                               Grid.Column="0"
                               Grid.ColumnSpan="1"
                               Height="14"
                               HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                               Margin="0,1,0,1"
                               VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                               Width="14">
                                        <dx:DXBorder x:Name="IsDefault"
                                     Background="{TemplateBinding Background}"
                                     BorderBrush="{TemplateBinding BorderBrush}"
                                     BorderThickness="{TemplateBinding BorderThickness}"
                                     CornerRadius="14"/>
                                        <dx:DXBorder x:Name="IsFocused"
                                             BorderBrush="{StaticResource ResourceKey=Focused}"
                                             BorderThickness="{TemplateBinding BorderThickness}"
                                             CornerRadius="14"
                                             Opacity="0"/>
                                        <dx:DXBorder x:Name="Checked"
                                             Background="{StaticResource ResourceKey=Foreground}"
                                             CornerRadius="8"
                                             Margin="3"
                                             Visibility="Collapsed"/>
                                    </Grid>
                                    <ContentPresenter x:Name="contentPresenter"
                                           Grid.Column="1"
                                           Grid.ColumnSpan="1"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           Margin="4,0,0,0"
                                           RecognizesAccessKey="True"
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background"
                                         Value="{StaticResource ResourceKey=HoverBackground}"/>
                                    <Setter Property="BorderBrush"
                                         Value="{StaticResource ResourceKey=Border}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background"
                                         TargetName="Checked"
                                         Value="{StaticResource ResourceKey=SelectionForeground}"/>
                                    <Setter Property="Background"
                                         Value="{StaticResource ResourceKey=SelectionAltBackground}"/>
                                    <Setter Property="BorderBrush"
                                         Value="{StaticResource ResourceKey=Border}"/>
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="Background"
                                         TargetName="Checked"
                                         Value="{StaticResource ResourceKey=Foreground}"/>
                                    <Setter Property="Background"
                                         Value="{StaticResource ResourceKey=Editor.Background}"/>
                                    <Setter Property="BorderBrush"
                                         Value="{StaticResource ResourceKey=Focused}"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsFocused" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background"
                                         TargetName="Checked"
                                         Value="{StaticResource ResourceKey=HoverForeground}"/>
                                    <Setter Property="Background"
                                        Value="{StaticResource ResourceKey=HoverAltBackground}"/>
                                    <Setter Property="BorderBrush"
                                         Value="{StaticResource ResourceKey=Focused}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsPressed" Value="True"/>
                                        <Condition Property="IsFocused" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background"
                                         TargetName="Checked"
                                         Value="{StaticResource ResourceKey=SelectionForeground}"/>
                                    <Setter Property="Background"
                                         Value="{StaticResource ResourceKey=SelectionAltBackground}"/>
                                    <Setter Property="BorderBrush"
                                         Value="{StaticResource ResourceKey=Focused}"/>
                                </MultiTrigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Visibility"
                                         TargetName="Checked"
                                         Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity"
                                         TargetName="Root"
                                         Value="0.38"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <DockPanel Background="Transparent"
               MouseUp="OnClearFilterFocus">
        <TextBlock DockPanel.Dock="Top" Text="{Binding FeaturedDemosTitle}" Foreground="#6D6D6D" FontSize="20" Focusable="False" Margin="51,34,51,5" FontFamily="Segoe UI, Tahoma" FontWeight="Bold" LineHeight="20" LineStackingStrategy="BlockLineHeight" />
        <demoparts:ColumnScrollControl DockPanel.Dock="Top" Focusable="False" Margin="23,0" Height="198">
            <demoparts:DemoCarouselControl Focusable="False"
                                           ItemsSource="{Binding FeaturedDemos}"
                                           FlyoutVisibility="Visible" />
        </demoparts:ColumnScrollControl>
        <Grid Height="43" DockPanel.Dock="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="323" />
            </Grid.ColumnDefinitions>
            <Border BorderThickness="0,0,0,1"
                    Grid.ColumnSpan="4"
                    BorderBrush="#E5E5E5" />
            <TextBlock Text="{Binding DemosTitle}"
                        Visibility="{DXBinding 'Groups != null or IsAspNetCorePage ? $Visibility.Visible : $Visibility.Collapsed'}"
                        FontSize="20" Foreground="#6D6D6D" FontFamily="Segoe UI, Tahoma" FontWeight="Bold" Focusable="False" Margin="51,0,0,0" />

            <StackPanel
                TextElement.Foreground="#6D6D6D"
                TextElement.FontSize="12"
                Orientation="Horizontal"
                Margin="0"
                Grid.Column="1"
                Visibility="{Binding UseLegacyThemesVisibility}">
                
                <RadioButton Grid.Column="1" Margin="0,3,0,0" GroupName="ThemeSet" Content="15 lightweight themes" IsChecked="True" />
                <RadioButton Grid.Column="1" Margin="20,3,22,0" Grid.Row="1" GroupName="ThemeSet" Content="Over 30 regular themes" IsChecked="{Binding UseLegacyThemes, Mode=TwoWay}"/>
                <Border BorderThickness="1,0,0,0" BorderBrush="#D9D9D9"/>
            </StackPanel>
            <Border BorderThickness="0,0,1,0"
                    Visibility="{Binding Groups, Converter={StaticResource ObjectToVisibilityConverter}}"
                    Grid.Column="2"
                    BorderBrush="#D9D9D9">
                <dxe:CheckEdit 
                    VerticalAlignment="Top"
                    Name="layoutToggle"
                    Visibility="{DXBinding '!IsBootstrapPage and Groups != null ? $Visibility.Visible : $Visibility.Collapsed'}"
                    Focusable="False"
                    Margin="25,8,25,8">
                    <dxe:CheckEdit.Template>
                        <ControlTemplate TargetType="dxe:CheckEdit">
                            <StackPanel Orientation="Horizontal">
                                <Image x:Name="imageOn" Stretch="None">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Setter Property="Source" Value="{dx:SvgImageSource Uri='pack://application:,,,/DevExpress.Xpf.DemoBase.v24.1;component/DemoChooser/Images/FullListLayout.svg'}" />
                                            <Setter Property="dx:WpfSvgPalette.Palette">
                                                <Setter.Value>
                                                    <dx:WpfSvgPalette>
                                                        <SolidColorBrush x:Key="GreenColor" Color="#FFA4A4A4" />
                                                    </dx:WpfSvgPalette>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="dx:WpfSvgPalette.Palette">
                                                        <Setter.Value>
                                                            <dx:WpfSvgPalette>
                                                                <SolidColorBrush x:Key="GreenColor" Color="#FF26A4DD" />
                                                            </dx:WpfSvgPalette>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                                <Image x:Name="imageOff" Margin="7,0,0,0" Stretch="None">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Setter Property="Source" Value="{dx:SvgImageSource Uri='pack://application:,,,/DevExpress.Xpf.DemoBase.v24.1;component/DemoChooser/Images/ProductsLayout.svg'}" />
                                            <Setter Property="dx:WpfSvgPalette.Palette">
                                                <Setter.Value>
                                                    <dx:WpfSvgPalette>
                                                        <SolidColorBrush x:Key="GreenColor" Color="#FFA4A4A4" />
                                                    </dx:WpfSvgPalette>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="dx:WpfSvgPalette.Palette">
                                                        <Setter.Value>
                                                            <dx:WpfSvgPalette>
                                                                <SolidColorBrush x:Key="GreenColor" Color="#FF26A4DD" />
                                                            </dx:WpfSvgPalette>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseCaptureWithin" Value="True" />
                                        <Condition Property="IsChecked" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="imageOff" Property="dx:WpfSvgPalette.Palette">
                                        <Setter.Value>
                                            <dx:WpfSvgPalette>
                                                <SolidColorBrush x:Key="GreenColor" Color="#FF26A4DD" />
                                            </dx:WpfSvgPalette>
                                        </Setter.Value>
                                    </Setter>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseCaptureWithin" Value="True" />
                                        <Condition Property="IsChecked" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="imageOn" Property="dx:WpfSvgPalette.Palette">
                                        <Setter.Value>
                                            <dx:WpfSvgPalette>
                                                <SolidColorBrush x:Key="GreenColor" Color="#FF26A4DD" />
                                            </dx:WpfSvgPalette>
                                        </Setter.Value>
                                    </Setter>
                                </MultiTrigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="imageOn" Property="dx:WpfSvgPalette.Palette">
                                        <Setter.Value>
                                            <dx:WpfSvgPalette>
                                                <SolidColorBrush x:Key="GreenColor" Color="#FF26A4DD" />
                                            </dx:WpfSvgPalette>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="imageOn" Property="IsHitTestVisible" Value="False" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter TargetName="imageOff" Property="dx:WpfSvgPalette.Palette">
                                        <Setter.Value>
                                            <dx:WpfSvgPalette>
                                                <SolidColorBrush x:Key="GreenColor" Color="#FF26A4DD" />
                                            </dx:WpfSvgPalette>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="imageOff" Property="IsHitTestVisible" Value="False" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </dxe:CheckEdit.Template>
                </dxe:CheckEdit>
            </Border>

            <helpers:FilterLineControl Visibility="{Binding Groups, Converter={StaticResource ObjectToVisibilityConverter}}"
                                       x:Name="filter"
                                       Grid.Column="3"
                                       FilterText="{Binding FilterString, ElementName=demoLinks, Mode=TwoWay}"
                                       ClearFocus="OnClearFilterFocus"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Margin="24,0,0,0" />
        </Grid>
        <Grid TextElement.Foreground="#6D6D6D">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid Visibility="{DXBinding '@e(layoutToggle).EditValue ? $Visibility.Visible : $Visibility.Hidden'}">
                <Grid.Resources>
                    <TextDecorationCollection x:Key="LinkDecorations">
                        <TextDecoration PenThicknessUnit="Pixel" PenOffsetUnit="Pixel">
                            <TextDecoration.Pen>
                                <Pen Thickness="1" DashCap="Flat">
                                    <Pen.Brush>
                                        <SolidColorBrush Color="#26A4DD" />
                                    </Pen.Brush>
                                    <Pen.DashStyle>
                                        <DashStyle Dashes="2,2" />
                                    </Pen.DashStyle>
                                </Pen>
                            </TextDecoration.Pen>
                        </TextDecoration>
                    </TextDecorationCollection>
                </Grid.Resources>
                <TextBlock Visibility="{Binding VisibleGroupsCount, ElementName=demoLinks, Converter={StaticResource VisibleGroupsCountToVisibilityConverter}}"
                           Foreground="#A3A3A3"
                           FontSize="32"
                           FontFamily="Segoe UI Light"
                           TextAlignment="Center"
                           VerticalAlignment="Center"
                           Margin="0,0,0,66">
                    Unable to locate a demo matching your keyword.
                    <LineBreak />
                    Please enter a different keyword and try again.
                </TextBlock>
                <demoparts:ColumnScrollControl x:Name="scrollControl"
                                               Margin="15,10,15,12"
                                               Focusable="False">
                    <demobase:GroupedLinksControl x:Name="demoLinks"
                                                  FilterStringChanged="{DXEvent '@e(layoutToggle).EditValue = true; @e(scrollControl).NavigateToPage(0)'}"
                                                  Focusable="False"
                                                  Margin="19,10"
                                                  Padding="0,23,0,0"
                                                  ItemsSource="{Binding Groups}">
                        <demobase:GroupedLinksControl.LinkTemplate>
                            <DataTemplate>
                                <Border Background="Transparent">
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,4">
                                        <TextBlock x:Name="tb" Text="{Binding}" />
                                    </StackPanel>
                                </Border>
                                <DataTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="tb" Property="TextDecorations" Value="{StaticResource LinkDecorations}" />
                                        <Setter TargetName="tb" Property="Foreground" Value="#26A4DD" />
                                    </Trigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </demobase:GroupedLinksControl.LinkTemplate>
                        <demobase:GroupedLinksControl.LinkLabelTemplate>
                            <DataTemplate />
                        </demobase:GroupedLinksControl.LinkLabelTemplate>
                    </demobase:GroupedLinksControl>
                </demoparts:ColumnScrollControl>
            </Grid>
            <ScrollViewer dx:ScrollBarExtensions.ScrollBarMode="TouchOverlap"
                          Focusable="False"
                          Margin="0,0,1,0"
                          HorizontalScrollBarVisibility="Auto"
                          VerticalScrollBarVisibility="Auto"
                          Visibility="{DXBinding '@e(layoutToggle).EditValue ? $Visibility.Hidden : $Visibility.Visible'}">
                <demobase:GroupedLinksControl HorizontalAlignment="Left"
                                              VerticalAlignment="Top"
                                              MaxGroupsPerColumn="{Binding ProductsViewMaxGroupsPerColumn}"
                                              HColumnSpacing="290"
                                              Padding="20"
                                              Margin="30,0,0,0"
                                              LayoutType="AlignedColumns"
                                              ItemsSource="{Binding EmptyGroups}"
                                              LinkLabelTemplate="{StaticResource linkLabelTemplate}"
                                              x:Name="links">
                    <demobase:GroupedLinksControl.GroupHeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Header}"
                                       Foreground="#A0A0A0"
                                       FontSize="12"
                                       Margin="0,0,0,10"
                                       FontFamily="Segoe UI Bold" />
                        </DataTemplate>
                    </demobase:GroupedLinksControl.GroupHeaderTemplate>
                    <demobase:GroupedLinksControl.LinkTemplate>
                        <DataTemplate>
                            <TextBlock x:Name="text"
                                       Text="{Binding Title}"
                                       Foreground="{DXBinding 'IsAvailable ? `#26A4DD` : `#FFCDCDCD`'}"
                                       FontSize="14"
                                       Margin="0,0,0,5"
                                       FontFamily="Segoe UI Bold"
                                       Cursor="Hand"
                                       IsEnabled="{Binding IsAvailable}">
                                <TextBlock.ContextMenu>
                                    <ContextMenu ItemsSource="{Binding ContextMenu}"
                                            Visibility="{DXBinding 'ContextMenu.Count gt 0 and IsAvailable', Converter={StaticResource boolToVisibilityConverter}}">
                                        <ContextMenu.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Background="#FFF5F5F5"/>
                                            </ItemsPanelTemplate>
                                        </ContextMenu.ItemsPanel>
                                        <ContextMenu.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Margin="-24,0,-40,0" Text="{Binding}" Style="{DynamicResource ResourceKey={dxdbt:DemoThemeKey ResourceId=ContextMenuTextBlock}}"/>
                                            </DataTemplate>
                                        </ContextMenu.ItemTemplate>
                                        <ContextMenu.ItemContainerStyle>
                                            <Style TargetType="MenuItem">
                                                <Setter Property="Command" Value="{Binding SelectedCommand}" />
                                                <Setter Property="Header" Value="{Binding Title}" />
                                            </Style>
                                        </ContextMenu.ItemContainerStyle>
                                    </ContextMenu>
                                </TextBlock.ContextMenu>
                            </TextBlock>
                            <DataTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="text" Property="TextDecorations" Value="Underline" />
                                </Trigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </demobase:GroupedLinksControl.LinkTemplate>
                </demobase:GroupedLinksControl>
            </ScrollViewer>
        </Grid>
    </DockPanel>
</UserControl>
