<?xml version="1.0" encoding="utf-8" ?>
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:aero="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
    xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys"
    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
    xmlns:dxbi="http://schemas.devexpress.com/winfx/2008/xaml/bars/internal"
    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm">

    <ResourceDictionary.MergedDictionaries>
        <dxi:ThemeResourceDictionary Path="Core/Bars/_Base.xaml" />
        <dxi:ThemeResourceDictionary Path="Core/Bars/_{ThemeName}.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Thickness x:Key="BarEditItemLayoutPanel.StyleInRibbonPageGroup.Margin">3,3,3,4</Thickness>
    <SolidColorBrush x:Key="RadialMenuLevelControl_BackColor" Color="{dx:LWColor 'Office2019Black=Color.Backstage.Window.Background, Office2019Colorful=Color.Backstage.Window.Background, Office2019HighContrast=Color.Border'}" />
    <SolidColorBrush x:Key="RadialMenuLevelControl_InnerColor" Color="{dx:LWColor 'Office2019Black=Color.ControlLight.Background, Office2019Colorful=Color.Control.Background, Office2019HighContrast=Color.Control.Background'}" />
    <SolidColorBrush x:Key="CenterButton_StrokeColor" Color="{dx:LWColor 'Office2019Black=Color.Foreground, Office2019Colorful=Color.Backstage.Window.Background, Office2019HighContrast=Color.Border'}" />
    <SolidColorBrush x:Key="CenterButton_InnerColor" Color="{dx:LWColor 'Office2019Black=Color.Backstage.Window.Background, Office2019Colorful=Color.Control.Background, Office2019HighContrast=Color.Control.Background'}" />
    <SolidColorBrush x:Key="CenterButton_HoverColor" Color="{dx:LWColor 'Office2019Black=Color.HoverBackground, Office2019Colorful=Color.HoverAltBackground, Office2019HighContrast=Color.HoverBackground'}" />
    <SolidColorBrush x:Key="{dxt:LWKey BarItemSearchControl.BackgroundBrush}" Color="{StaticResource Color.Editor.Background}" Opacity="0.7" />
    <SolidColorBrush x:Key="{dxt:LWKey BarItemSearchControl.HoverBackgroundBrush}" Color="{StaticResource Color.Editor.Background}" Opacity="1" />
    <SolidColorBrush x:Key="{dxt:LWKey RadialMenuItem.BackgroundBrush}" Color="{dx:LWColor 'Office2019Black=Color.Backstage.Button.Background, Office2019Colorful=Color.Backstage.SelectionBackground, Office2019HighContrast=Color.Backstage.Window.Background'}" />
    <SolidColorBrush x:Key="{dxt:LWKey RadialMenuItem.PathBrush}" Color="{dx:LWColor 'Office2019Black=Color.ForegroundDark, Office2019Colorful=Color.Backstage.Foreground, Office2019HighContrast=Color.Backstage.Foreground'}" />
    <SolidColorBrush x:Key="{dxt:LWKey RadialMenuItem.HoverPathBrush}" Color="{StaticResource Color.Backstage.HoverBackground}" />
    <dx:ColorStaticResource x:Key="{dxt:LWKey RadialMenuItem.NormalImageColorizeColor}" Color="{dx:LWColor 'Office2019Black=Color.Backstage.Foreground, Office2019Colorful=Color.Foreground, Office2019HighContrast=Color.Foreground'}" />
    <dx:ColorStaticResource x:Key="{dxt:LWKey RadialMenuItem.HoverImageColorizeColor}" Color="{dx:LWColor 'Office2019Black=Color.Backstage.Foreground, Office2019Colorful=Color.Foreground, Office2019HighContrast=Color.Foreground'}" />
    <dx:ColorStaticResource x:Key="{dxt:LWKey RadialMenuItem.PressedImageColorizeColor}" Color="{dx:LWColor 'Office2019Black=Color.Backstage.Foreground, Office2019Colorful=Color.Foreground, Office2019HighContrast=Color.Foreground'}" />
    <dx:ColorStaticResource x:Key="{dxt:LWKey RadialMenuItem.DisabledImageColorizeColor}" Color="{dx:LWColor 'Office2019Black=Color.Backstage.Foreground, Office2019Colorful=Color.Foreground, Office2019HighContrast=Color.Foreground'}" />
    <dxb:FontSettings
        x:Key="{dxt:LWKey BarItemFont.BarItemFontSettings}"
        Checked="{dx:LWBrush 'Office2019Black=Brush.SelectionForeground, Office2019Colorful=Brush.Foreground, Office2019HighContrast=Brush.SelectionForeground'}"
        Hover="{dx:LWBrush 'Office2019Black=Brush.HoverForeground, Office2019Colorful=Brush.Foreground, Office2019HighContrast=Brush.HoverForeground'}"
        HoverChecked="{dx:LWBrush 'Office2019Black=Brush.HoverForeground, Office2019Colorful=Brush.Foreground, Office2019HighContrast=Brush.HoverForeground'}"
        Normal="{StaticResource Brush.Foreground}"
        Pressed="{dx:LWBrush 'Office2019Black=Brush.SelectionForeground, Office2019Colorful=Brush.Foreground, Office2019HighContrast=Brush.SelectionForeground'}" />
    <dxb:FontSettings
        x:Key="{dxt:LWKey BarItemFont.BarItemFontSettingsInMainMenu}"
        Checked="{dx:LWBrush 'Office2019Black=Brush.SelectionForeground, Office2019Colorful=Brush.Foreground, Office2019HighContrast=Brush.SelectionForeground'}"
        Hover="{dx:LWBrush 'Office2019Black=Brush.HoverForeground, Office2019Colorful=Brush.Foreground, Office2019HighContrast=Brush.HoverForeground'}"
        HoverChecked="{dx:LWBrush 'Office2019Black=Brush.HoverForeground, Office2019Colorful=Brush.Foreground, Office2019HighContrast=Brush.HoverForeground'}"
        Normal="{StaticResource Brush.Foreground}"
        Pressed="{dx:LWBrush 'Office2019Black=Brush.SelectionForeground, Office2019Colorful=Brush.Foreground, Office2019HighContrast=Brush.SelectionForeground'}" />
    <dxb:FontSettings
        x:Key="{dxt:LWKey BarItemFont.BarItemFontSettingsInMenu}"
        Checked="{dx:LWBrush 'Office2019Black=Brush.ControlLight.SelectionForeground, Office2019Colorful=Brush.Foreground, Office2019HighContrast=Brush.SelectionForeground'}"
        Hover="{dx:LWBrush 'Office2019Black=Brush.ControlLight.HoverForeground, Office2019Colorful=Brush.Foreground, Office2019HighContrast=Brush.HoverForeground'}"
        HoverChecked="{dx:LWBrush 'Office2019Black=Brush.ControlLight.SelectionForeground, Office2019Colorful=Brush.Foreground, Office2019HighContrast=Brush.SelectionForeground'}"
        Normal="{dx:LWBrush 'Office2019Black=Brush.ControlLight.Foreground, Office2019Colorful=Brush.Foreground, Office2019HighContrast=Brush.Foreground'}"
        Pressed="{dx:LWBrush 'Office2019Black=Brush.ControlLight.SelectionForeground, Office2019Colorful=Brush.SelectionForeground, Office2019HighContrast=Brush.SelectionForeground'}" />
    <dxb:BarItemImageColorizerSettings x:Key="{dxt:LWKey BarItemImageColorizerSettings.SettingsInRibbonToolbar}" Normal="{StaticResource Color.Backstage.Foreground}" />
    <dxb:BarItemImageColorizerSettings x:Key="{dxt:LWKey BarItemImageColorizerSettings.SettingsInRibbonPageHeader}" Normal="{StaticResource Color.Backstage.Foreground}" />
    <ControlTemplate x:Key="{dxt:LWKey FloatingBarPopup.CloseButtonTemplate}" TargetType="{x:Type Button}">
        <Grid x:Name="Root">
            <dx:DXBorder x:Name="IsDefault" Background="Transparent" />
            <Path x:Name="Content" Fill="{dx:LWBrush 'Office2019Black=Brush.ForegroundDark, Office2019Colorful=Brush.Foreground, Office2019HighContrast=Brush.Foreground'}" Style="{StaticResource UIShape.Close}" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.HoverBackground, Office2019Colorful=Color.HoverAltBackground, Office2019HighContrast=Color.HoverBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.Foreground, Office2019Colorful=Color.HoverForeground, Office2019HighContrast=Color.HoverForeground'}" />
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.SelectionBackground, Office2019Colorful=Color.SelectionAltBackground, Office2019HighContrast=Color.SelectionBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.Foreground, Office2019Colorful=Color.SelectionForeground, Office2019HighContrast=Color.SelectionForeground'}" />
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>
    <Style x:Key="{dxt:LWKey FloatingBarPopup.CloseButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="24" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Margin" Value="4" />
        <Setter Property="Template" Value="{DynamicResource {dxt:LWKey FloatingBarPopup.CloseButtonTemplate}}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Width" Value="24" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinWidth" Value="44" />
                <Setter Property="MinHeight" Value="44" />
                <Setter Property="Margin" Value="14" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxt:LWKey FloatingBarPopup.CaptionStyle}" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="{dx:LWBrush 'Office2019Black=Brush.Foreground, Office2019Colorful=Brush.Focused, Office2019HighContrast=Brush.Focused'}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="Margin" Value="8,0,8,0" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="TextWrapping" Value="NoWrap" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <ControlTemplate x:Key="{dxt:LWKey BarContainerControl.BackgroundTemplate}" TargetType="{x:Type ContentControl}">
        <ContentPresenter Content="{TemplateBinding Content}" />
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:LWKey BarSubItem.ArrowTemplate}" TargetType="{x:Type dxb:ArrowControl}">
        <Path Fill="{TemplateBinding Foreground}" Margin="0,2,0,0" Style="{StaticResource UIShape.Down}" />
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:LWKey BarSubItem.ArrowTemplateInStatusBar}" TargetType="{x:Type dxb:ArrowControl}">
        <Path Fill="{TemplateBinding Foreground}" Margin="0,2,0,0" Style="{StaticResource UIShape.Down}" />
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:LWKey BarSubItem.ArrowTemplateInMainMenu}" TargetType="{x:Type dxb:ArrowControl}">
        <Path Fill="{TemplateBinding Foreground}" Margin="0,2,0,0" Style="{StaticResource UIShape.Down}" />
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:LWKey BarSubItem.ArrowTemplateInMenu}" TargetType="{x:Type dxb:ArrowControl}">
        <Path Fill="{TemplateBinding Foreground}" Margin="0" Style="{StaticResource UIShape.Right}" />
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:LWKey BarSubItem.ArrowTemplateInRibbonPageGroup}" TargetType="{x:Type dxb:ArrowControl}">
        <Path Fill="{TemplateBinding Foreground}" Margin="0,2,0,0" Style="{StaticResource UIShape.Down}" />
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:LWKey BarSubItem.ArrowTemplateInBarButtonGroup}" TargetType="{x:Type dxb:ArrowControl}">
        <Path Fill="{TemplateBinding Foreground}" Margin="0,2,0,0" Style="{StaticResource UIShape.Down}" />
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:LWKey BarSubItem.ArrowTemplateInRibbonQuickAccessToolbar}" TargetType="{x:Type dxb:ArrowControl}">
        <Path Fill="{TemplateBinding Foreground}" Margin="0,2,0,0" Style="{StaticResource UIShape.Down}" />
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:LWKey BarSubItem.ArrowTemplateInRibbonQuickAccessToolbarFooter}" TargetType="{x:Type dxb:ArrowControl}">
        <Path Fill="{TemplateBinding Foreground}" Margin="0,2,0,0" Style="{StaticResource UIShape.Down}" />
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:LWKey BarSubItem.ArrowTemplateInRibbonPageHeader}" TargetType="{x:Type dxb:ArrowControl}">
        <Path Fill="{TemplateBinding Foreground}" Margin="0,2,0,0" Style="{StaticResource UIShape.Down}" />
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:LWKey BarSubItem.ArrowTemplateInRibbonStatusBarLeft}" TargetType="{x:Type dxb:ArrowControl}">
        <Path Fill="{TemplateBinding Foreground}" Margin="0,2,0,0" Style="{StaticResource UIShape.Down}" />
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:LWKey BarSubItem.ArrowTemplateInRibbonStatusBarRight}" TargetType="{x:Type dxb:ArrowControl}">
        <Path Fill="{TemplateBinding Foreground}" Margin="0,2,0,0" Style="{StaticResource UIShape.Down}" />
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:LWKey BarItemBorder.Normal}" TargetType="{x:Type dxb:ItemBorderControl}">
        <Grid x:Name="Root">
            <dx:DXBorder
                x:Name="IsDefault"
                Background="Transparent"
                BorderBrush="Transparent"
                BorderThickness="1" />
            <dx:DXBorder
                x:Name="IsCustomization"
                BorderBrush="{StaticResource Brush.Focused}"
                BorderThickness="1"
                Opacity="0" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="HideBorderSide">
                    <VisualState x:Name="None" />
                    <VisualState x:Name="Top">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="0,0,0,1" Storyboard.TargetName="Root" Storyboard.TargetProperty="Margin" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Right">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="0,0,1,0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Margin" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Left">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Margin" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Bottom">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Margin" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="All" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="ActiveState">
                    <VisualState x:Name="Active">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Inactive">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Opacity" To="0.62" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="State">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="Transparent" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="Transparent" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Hover">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.HoverBackground, Office2019Colorful=Color.HoverAltBackground, Office2019HighContrast=Color.HoverBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.HoverBorder, Office2019Colorful=Color.HoverAltBorder, Office2019HighContrast=Color.HoverBorder'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.SelectionBackground, Office2019Colorful=Color.SelectionAltBackground, Office2019HighContrast=Color.SelectionBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.SelectionBorder, Office2019Colorful=Color.SelectionAltBorder, Office2019HighContrast=Color.SelectionBorder'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled" />
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.SelectionBackground, Office2019Colorful=Color.SelectionAltBackground, Office2019HighContrast=Color.SelectionBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.SelectionBorder, Office2019Colorful=Color.SelectionAltBorder, Office2019HighContrast=Color.SelectionBorder'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="HoverChecked">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.SelectionBackground, Office2019Colorful=Color.SelectionAltBackground, Office2019HighContrast=Color.SelectionBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.SelectionBorder, Office2019Colorful=Color.SelectionAltBorder, Office2019HighContrast=Color.SelectionBorder'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Indeterminate">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.HoverBackground, Office2019Colorful=Color.HoverAltBackground, Office2019HighContrast=Color.HoverBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.HoverBorder, Office2019Colorful=Color.HoverAltBorder, Office2019HighContrast=Color.HoverBorder'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.HoverBackground, Office2019Colorful=Color.HoverAltBackground, Office2019HighContrast=Color.HoverBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{StaticResource Color.Focused}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Customization">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="IsCustomization" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:LWKey BarItemBorderInStatusBar.Normal}" TargetType="{x:Type dxb:ItemBorderControl}">
        <Grid x:Name="Root">
            <dx:DXBorder
                x:Name="IsDefault"
                Background="Transparent"
                BorderBrush="Transparent"
                BorderThickness="1" />
            <dx:DXBorder
                x:Name="IsCustomization"
                BorderBrush="{StaticResource Brush.Focused}"
                BorderThickness="1"
                Opacity="0" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="HideBorderSide">
                    <VisualState x:Name="None" />
                    <VisualState x:Name="Top">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="0,0,0,1" Storyboard.TargetName="Root" Storyboard.TargetProperty="Margin" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Right">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="0,0,1,0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Margin" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Left">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Margin" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Bottom">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Margin" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="All" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="ActiveState">
                    <VisualState x:Name="Active">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Inactive">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Opacity" To="0.62" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="State">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="Transparent" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="Transparent" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Hover">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.HoverBackground, Office2019Colorful=Color.HoverAltBackground, Office2019HighContrast=Color.HoverBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.HoverBorder, Office2019Colorful=Color.HoverAltBorder, Office2019HighContrast=Color.HoverBorder'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.SelectionBackground, Office2019Colorful=Color.SelectionAltBackground, Office2019HighContrast=Color.SelectionBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.SelectionBorder, Office2019Colorful=Color.SelectionAltBorder, Office2019HighContrast=Color.SelectionBorder'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled" />
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.SelectionBackground, Office2019Colorful=Color.SelectionAltBackground, Office2019HighContrast=Color.SelectionBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.SelectionBorder, Office2019Colorful=Color.SelectionAltBorder, Office2019HighContrast=Color.SelectionBorder'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="HoverChecked">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.SelectionBackground, Office2019Colorful=Color.SelectionAltBackground, Office2019HighContrast=Color.SelectionBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.SelectionBorder, Office2019Colorful=Color.SelectionAltBorder, Office2019HighContrast=Color.SelectionBorder'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Indeterminate">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.HoverBackground, Office2019Colorful=Color.HoverAltBackground, Office2019HighContrast=Color.HoverBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.HoverBorder, Office2019Colorful=Color.HoverAltBorder, Office2019HighContrast=Color.HoverBorder'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.HoverBackground, Office2019Colorful=Color.HoverAltBackground, Office2019HighContrast=Color.HoverBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{StaticResource Color.Focused}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Customization">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="IsCustomization" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:LWKey BarItemBorderInMainMenu.Normal}" TargetType="{x:Type dxb:ItemBorderControl}">
        <Grid x:Name="Root">
            <dx:DXBorder
                x:Name="IsDefault"
                Background="Transparent"
                BorderBrush="Transparent"
                BorderThickness="1" />
            <dx:DXBorder
                x:Name="IsCustomization"
                BorderBrush="{StaticResource Brush.Focused}"
                BorderThickness="1"
                Opacity="0" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="HideBorderSide">
                    <VisualState x:Name="None" />
                    <VisualState x:Name="Top">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="0,0,0,1" Storyboard.TargetName="Root" Storyboard.TargetProperty="Margin" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Right">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="0,0,1,0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Margin" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Left">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Margin" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Bottom">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Margin" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="All" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="ActiveState">
                    <VisualState x:Name="Active">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Inactive">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Opacity" To="0.62" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="State">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="Transparent" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="Transparent" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Hover">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.HoverBackground, Office2019Colorful=Color.HoverAltBackground, Office2019HighContrast=Color.HoverBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.HoverBorder, Office2019Colorful=Color.HoverAltBorder, Office2019HighContrast=Color.HoverBorder'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.SelectionBackground, Office2019Colorful=Color.SelectionAltBackground, Office2019HighContrast=Color.SelectionBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.SelectionBorder, Office2019Colorful=Color.SelectionAltBorder, Office2019HighContrast=Color.SelectionBorder'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled" />
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.SelectionBackground, Office2019Colorful=Color.SelectionAltBackground, Office2019HighContrast=Color.SelectionBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.SelectionBorder, Office2019Colorful=Color.SelectionAltBorder, Office2019HighContrast=Color.SelectionBorder'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="HoverChecked">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.SelectionBackground, Office2019Colorful=Color.SelectionAltBackground, Office2019HighContrast=Color.SelectionBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.SelectionBorder, Office2019Colorful=Color.SelectionAltBorder, Office2019HighContrast=Color.SelectionBorder'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Indeterminate">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.HoverBackground, Office2019Colorful=Color.HoverAltBackground, Office2019HighContrast=Color.HoverBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.HoverBorder, Office2019Colorful=Color.HoverAltBorder, Office2019HighContrast=Color.HoverBorder'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.HoverBackground, Office2019Colorful=Color.HoverAltBackground, Office2019HighContrast=Color.HoverBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{StaticResource Color.Focused}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Customization">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="IsCustomization" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:LWKey BarItemBorderInMenu.Normal}" TargetType="{x:Type dxb:ItemBorderControl}">
        <Grid x:Name="Root">
            <dx:DXBorder
                x:Name="IsDefault"
                Background="Transparent"
                BorderBrush="Transparent"
                BorderThickness="1" />
            <dx:DXBorder
                x:Name="IsCustomization"
                BorderBrush="{StaticResource Brush.Focused}"
                BorderThickness="0"
                Opacity="0" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="HideBorderSide">
                    <VisualState x:Name="None" />
                    <VisualState x:Name="Top">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="0,0,0,1" Storyboard.TargetName="Root" Storyboard.TargetProperty="Margin" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Right">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="0,0,1,0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Margin" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Left">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Margin" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Bottom">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Margin" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="All" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="ActiveState">
                    <VisualState x:Name="Active">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Inactive">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Opacity" To="0.62" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="State">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="Transparent" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="Transparent" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Hover">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.HoverBackground, Office2019Colorful=Color.HoverAltBackground, Office2019HighContrast=Color.HoverBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.HoverBorder, Office2019Colorful=Color.HoverAltBorder, Office2019HighContrast=Color.HoverBorder'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.SelectionBackground, Office2019Colorful=Color.SelectionAltBackground, Office2019HighContrast=Color.SelectionBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.SelectionBorder, Office2019Colorful=Color.SelectionAltBorder, Office2019HighContrast=Color.SelectionBorder'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled" />
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.SelectionBackground, Office2019Colorful=Color.SelectionAltBackground, Office2019HighContrast=Color.SelectionBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.SelectionBackground, Office2019Colorful=Color.SelectionAltBackground, Office2019HighContrast=Color.SelectionBackground'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="HoverChecked">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.HoverBackground, Office2019Colorful=Color.HoverAltBackground, Office2019HighContrast=Color.HoverBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.HoverBorder, Office2019Colorful=Color.HoverAltBorder, Office2019HighContrast=Color.HoverBorder'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Indeterminate">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="Transparent" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="Transparent" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.HoverBackground, Office2019Colorful=Color.HoverAltBackground, Office2019HighContrast=Color.HoverBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{StaticResource Color.Focused}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Customization">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="IsCustomization" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:LWKey BarItemBorderInRibbonPageGroup.Normal}" TargetType="{x:Type dxb:ItemBorderControl}">
        <Grid x:Name="Root">
            <dx:DXBorder
                x:Name="IsDefault"
                Background="Transparent"
                BorderBrush="Transparent"
                BorderThickness="1" />
            <dx:DXBorder
                x:Name="IsCustomization"
                BorderBrush="{StaticResource Brush.Focused}"
                BorderThickness="1"
                Opacity="0" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="HideBorderSide">
                    <VisualState x:Name="None" />
                    <VisualState x:Name="Top">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Margin" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Right">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Margin" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Left">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="1,0,0,0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Margin" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Bottom">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Margin" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="All" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="ActiveState">
                    <VisualState x:Name="Active">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Inactive">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Opacity" To="0.62" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="State">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="Transparent" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="Transparent" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Hover">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.HoverBackground, Office2019Colorful=Color.HoverAltBackground, Office2019HighContrast=Color.HoverBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.HoverBorder, Office2019Colorful=Color.HoverAltBorder, Office2019HighContrast=Color.HoverBorder'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.SelectionBackground, Office2019Colorful=Color.SelectionAltBackground, Office2019HighContrast=Color.SelectionBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.SelectionBorder, Office2019Colorful=Color.SelectionAltBorder, Office2019HighContrast=Color.SelectionBorder'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled" />
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.SelectionBackground, Office2019Colorful=Color.SelectionAltBackground, Office2019HighContrast=Color.SelectionBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.SelectionBorder, Office2019Colorful=Color.SelectionAltBorder, Office2019HighContrast=Color.SelectionBorder'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="HoverChecked">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.SelectionBackground, Office2019Colorful=Color.SelectionAltBackground, Office2019HighContrast=Color.SelectionBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.SelectionBorder, Office2019Colorful=Color.SelectionAltBorder, Office2019HighContrast=Color.SelectionBorder'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Indeterminate">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.HoverBackground, Office2019Colorful=Color.HoverAltBackground, Office2019HighContrast=Color.HoverBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.HoverBorder, Office2019Colorful=Color.HoverAltBorder, Office2019HighContrast=Color.HoverBorder'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.HoverBackground, Office2019Colorful=Color.HoverAltBackground, Office2019HighContrast=Color.HoverBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.Focused, Office2019Colorful=Color.SelectionAltBackground, Office2019HighContrast=Color.SelectionBackground'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Customization">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="IsCustomization" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:LWKey BarItemBorderInButtonGroup.Normal}" TargetType="{x:Type dxb:ItemBorderControl}">
        <Grid x:Name="Root">
            <dx:DXBorder
                x:Name="IsDefault"
                Background="Transparent"
                BorderBrush="Transparent"
                BorderThickness="1" />
            <dx:DXBorder
                x:Name="IsCustomization"
                BorderBrush="{dx:LWBrush 'Office2019Black=Brush.Focused, Office2019Colorful=Brush.SelectionAltBackground, Office2019HighContrast=Brush.SelectionBackground'}"
                BorderThickness="1"
                Opacity="0" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="HideBorderSide">
                    <VisualState x:Name="None" />
                    <VisualState x:Name="Top">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="0,0,0,1" Storyboard.TargetName="Root" Storyboard.TargetProperty="Margin" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Right">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Margin" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Left">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="1,0,0,0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Margin" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Bottom">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Margin" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="All" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="ActiveState">
                    <VisualState x:Name="Active">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Inactive">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Opacity" To="0.62" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="State">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="Transparent" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="Transparent" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Hover">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.HoverBackground, Office2019Colorful=Color.HoverAltBackground, Office2019HighContrast=Color.HoverBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.HoverBorder, Office2019Colorful=Color.HoverAltBorder, Office2019HighContrast=Color.HoverBorder'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.SelectionBackground, Office2019Colorful=Color.SelectionAltBackground, Office2019HighContrast=Color.SelectionBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.SelectionBorder, Office2019Colorful=Color.SelectionAltBorder, Office2019HighContrast=Color.SelectionBorder'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled" />
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.SelectionBackground, Office2019Colorful=Color.SelectionAltBackground, Office2019HighContrast=Color.SelectionBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.SelectionBorder, Office2019Colorful=Color.SelectionAltBorder, Office2019HighContrast=Color.SelectionBorder'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="HoverChecked">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.SelectionBackground, Office2019Colorful=Color.SelectionAltBackground, Office2019HighContrast=Color.SelectionBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.SelectionBorder, Office2019Colorful=Color.SelectionAltBorder, Office2019HighContrast=Color.SelectionBorder'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Indeterminate">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.HoverBackground, Office2019Colorful=Color.HoverAltBackground, Office2019HighContrast=Color.HoverBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.HoverBorder, Office2019Colorful=Color.HoverAltBorder, Office2019HighContrast=Color.HoverBorder'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.HoverBackground, Office2019Colorful=Color.HoverAltBackground, Office2019HighContrast=Color.HoverBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.Focused, Office2019Colorful=Color.SelectionAltBackground, Office2019HighContrast=Color.SelectionBackground'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Customization">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="IsCustomization" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:LWKey BarItemBorderInQAT.Normal}" TargetType="{x:Type dxb:ItemBorderControl}">
        <Grid x:Name="Root">
            <dx:DXBorder
                x:Name="IsDefault"
                Background="Transparent"
                BorderBrush="Transparent"
                BorderThickness="1" />
            <dx:DXBorder
                x:Name="IsCustomization"
                BorderBrush="{dx:LWBrush 'Office2019Black=Brush.Backstage.Focused, Office2019Colorful=Brush.Focused, Office2019HighContrast=Brush.Focused'}"
                BorderThickness="1"
                Opacity="0" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="HideBorderSide">
                    <VisualState x:Name="None" />
                    <VisualState x:Name="Top">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="0,0,0,1" Storyboard.TargetName="Root" Storyboard.TargetProperty="Margin" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Right">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="0,0,1,0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Margin" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Left">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Margin" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Bottom">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Margin" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="All" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="ActiveState">
                    <VisualState x:Name="Active">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Inactive">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Opacity" To="0.62" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="State">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="Transparent" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="Transparent" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Hover">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{StaticResource Color.Backstage.HoverBackground}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{StaticResource Color.Backstage.HoverBackground}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{StaticResource Color.Backstage.SelectionBackground}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{StaticResource Color.Backstage.SelectionBackground}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled" />
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{StaticResource Color.Backstage.SelectionBackground}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{StaticResource Color.Backstage.SelectionBackground}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="HoverChecked">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{StaticResource Color.Backstage.SelectionBackground}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{StaticResource Color.Backstage.SelectionBackground}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Indeterminate">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{StaticResource Color.Backstage.HoverBackground}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{StaticResource Color.Backstage.HoverBackground}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{StaticResource Color.Backstage.HoverBackground}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{StaticResource Color.Backstage.HoverBackground}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Customization">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="IsCustomization" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:LWKey BarItemBorderInQATFooter.Normal}" TargetType="{x:Type dxb:ItemBorderControl}">
        <Grid x:Name="Root">
            <dx:DXBorder
                x:Name="IsDefault"
                Background="Transparent"
                BorderBrush="Transparent"
                BorderThickness="1" />
            <dx:DXBorder
                x:Name="IsCustomization"
                BorderBrush="{dx:LWBrush 'Office2019Black=Brush.Focused, Office2019Colorful=Brush.SelectionAltBorder, Office2019HighContrast=Brush.SelectionBorder'}"
                BorderThickness="1"
                Opacity="0" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="HideBorderSide">
                    <VisualState x:Name="None" />
                    <VisualState x:Name="Top">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="0,0,0,1" Storyboard.TargetName="Root" Storyboard.TargetProperty="Margin" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Right">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="0,0,1,0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Margin" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Left">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Margin" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Bottom">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Margin" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="All" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="ActiveState">
                    <VisualState x:Name="Active">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Inactive">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Opacity" To="0.62" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="State">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="Transparent" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="Transparent" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Hover">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.HoverBackground, Office2019Colorful=Color.HoverAltBackground, Office2019HighContrast=Color.HoverBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.HoverBorder, Office2019Colorful=Color.HoverAltBorder, Office2019HighContrast=Color.HoverBorder'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.SelectionBackground, Office2019Colorful=Color.SelectionAltBackground, Office2019HighContrast=Color.SelectionBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.SelectionBorder, Office2019Colorful=Color.SelectionAltBorder, Office2019HighContrast=Color.SelectionBorder'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled" />
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.SelectionBackground, Office2019Colorful=Color.SelectionAltBackground, Office2019HighContrast=Color.SelectionBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.SelectionBorder, Office2019Colorful=Color.SelectionAltBorder, Office2019HighContrast=Color.SelectionBorder'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="HoverChecked">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.SelectionBackground, Office2019Colorful=Color.SelectionAltBackground, Office2019HighContrast=Color.SelectionBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.SelectionBorder, Office2019Colorful=Color.SelectionAltBorder, Office2019HighContrast=Color.SelectionBorder'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Indeterminate">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.HoverBackground, Office2019Colorful=Color.HoverAltBackground, Office2019HighContrast=Color.HoverBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.HoverBorder, Office2019Colorful=Color.HoverAltBorder, Office2019HighContrast=Color.HoverBorder'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.HoverBackground, Office2019Colorful=Color.HoverAltBackground, Office2019HighContrast=Color.HoverBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.Focused, Office2019Colorful=Color.SelectionAltBorder, Office2019HighContrast=Color.SelectionBorder'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Customization">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="IsCustomization" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:LWKey BarItemBorderInRibbonPageHeader.Normal}" TargetType="{x:Type dxb:ItemBorderControl}">
        <Grid x:Name="Root">
            <dx:DXBorder
                x:Name="IsDefault"
                Background="Transparent"
                BorderBrush="Transparent"
                BorderThickness="1" />
            <dx:DXBorder
                x:Name="IsCustomization"
                BorderBrush="{dx:LWBrush 'Office2019Black=Brush.Backstage.Focused, Office2019Colorful=Brush.SelectionAltBorder, Office2019HighContrast=Brush.SelectionBorder'}"
                BorderThickness="1"
                Opacity="0" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="HideBorderSide">
                    <VisualState x:Name="None" />
                    <VisualState x:Name="Top">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="0,0,0,1" Storyboard.TargetName="Root" Storyboard.TargetProperty="Margin" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Right">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="0,0,1,0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Margin" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Left">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Margin" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Bottom">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Margin" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="All" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="ActiveState">
                    <VisualState x:Name="Active">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Inactive">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Opacity" To="0.62" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="State">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="Transparent" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="Transparent" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Hover">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.Backstage.HoverBackground, Office2019Colorful=Color.HoverAltBackground, Office2019HighContrast=Color.HoverBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.Backstage.HoverBackground, Office2019Colorful=Color.HoverAltBorder, Office2019HighContrast=Color.HoverBorder'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.Backstage.SelectionBackground, Office2019Colorful=Color.SelectionAltBackground, Office2019HighContrast=Color.SelectionBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.Backstage.SelectionBackground, Office2019Colorful=Color.HoverAltBorder, Office2019HighContrast=Color.HoverBorder'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled" />
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.Backstage.SelectionBackground, Office2019Colorful=Color.SelectionAltBackground, Office2019HighContrast=Color.SelectionBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.Backstage.SelectionBackground, Office2019Colorful=Color.SelectionAltBorder, Office2019HighContrast=Color.SelectionBorder'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="HoverChecked">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.Backstage.SelectionBackground, Office2019Colorful=Color.SelectionAltBackground, Office2019HighContrast=Color.SelectionBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.Backstage.SelectionBackground, Office2019Colorful=Color.SelectionAltBorder, Office2019HighContrast=Color.SelectionBorder'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Indeterminate">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.Backstage.HoverBackground, Office2019Colorful=Color.HoverAltBackground, Office2019HighContrast=Color.HoverBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.Backstage.HoverBackground, Office2019Colorful=Color.HoverAltBackground, Office2019HighContrast=Color.HoverBackground'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.Backstage.HoverBackground, Office2019Colorful=Color.HoverAltBackground, Office2019HighContrast=Color.HoverBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Office2019Black=Color.Backstage.HoverBackground, Office2019Colorful=Color.SelectionAltBorder, Office2019HighContrast=Color.SelectionBorder'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Customization">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="IsCustomization" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>
    <Thickness x:Key="BarItemRender.SimplifiedTemplateStyles.Margin1">0,0,0,1</Thickness>
    <Thickness x:Key="BarItemRender.SimplifiedTemplateStyles.Margin2">0,3,0,4</Thickness>
    <Thickness x:Key="BarItemRender.SimplifiedTemplateStyles.Margin3">0,0,0,1</Thickness>
    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.DefaultArrowTemplate}">
        <dxi:RenderPanel>
            <dxbi:RenderArrowPath
                Data="F1 M 0,0 8,0 4,4 0,0 Z "
                Height="4"
                HorizontalAlignment="Center"
                Margin="0,1,0,0"
                Stretch="Fill"
                VerticalAlignment="Center"
                Width="8" />
        </dxi:RenderPanel>
    </dxi:RenderTemplate>
    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.ArrowTemplateInPageHeader}">
        <dxi:RenderPanel>
            <dxbi:RenderArrowPath
                Data="F1 M 0,0 8,0 4,4 0,0 Z "
                Height="4"
                HorizontalAlignment="Center"
                Margin="0,1,0,0"
                Stretch="Fill"
                VerticalAlignment="Center"
                Width="8" />
        </dxi:RenderPanel>
    </dxi:RenderTemplate>
    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.ArrowTemplateInMenu}">
        <dxi:RenderPanel Margin="6">
            <dxbi:RenderArrowPath
                Data="F1 M 0,0 0,8 4,4 0,0 Z "
                Height="8"
                HorizontalAlignment="Center"
                Margin="0"
                Stretch="Fill"
                VerticalAlignment="Center"
                Width="4" />
        </dxi:RenderPanel>
    </dxi:RenderTemplate>
    <DataTemplate x:Key="{dxt:LWKey BarItemSearchControl.DescriptionTemplate}">
        <TextBlock Text="{Binding}" Opacity="0.75" />
    </DataTemplate>
</ResourceDictionary>