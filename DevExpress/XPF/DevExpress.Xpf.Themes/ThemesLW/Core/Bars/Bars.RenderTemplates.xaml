<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:cs="colorscheme_ignorable_uri"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxbi="http://schemas.devexpress.com/winfx/2008/xaml/bars/internal"
    xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys"
    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
    mc:Ignorable="cs">

    <ResourceDictionary.MergedDictionaries>
        <dxi:ThemeResourceDictionary Path="Core/Bars/_{ThemeCategory}.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <!--#region Base\Core\Core\Bars\Themes\Base\RenderTemplates\_Common.xaml-->
    <!-- CheckGlyph -->

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.GlyphBackground}">
        <dxi:RenderPanel Name="Root">
            <dxi:RenderBorder
                Name="PART_Border"
                Background="{dx:LWBrush 'Brush.SelectionBackground, VS2019Blue=Brush.ControlLight.SelectionBackground, Win11=Brush.ListItem.SelectionBackground'}"
                BorderBrush="{dx:LWBrush 'Brush.SelectionBackground, VS2019Blue=Brush.ControlLight.SelectionBorder, Win11=Brush.ListItem.SelectionBorder'}"
                BorderThickness="1"
                Margin="-2" />
        </dxi:RenderPanel>
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.GlyphTemplate}">
        <dxi:RenderImage
            Name="Image"
            HorizontalAlignment="Center"
            Stretch="Uniform"
            VerticalAlignment="Center" />
        <dxi:RenderTemplate.Triggers>
            <dxi:RenderBinding TargetName="Image" TargetProperty="Source" ValueSource="DataContext" />
            <dxi:ConditionalRenderBinding
                DependencyProperty="{x:Static dxi:AppearanceOptions.SvgPaletteProperty}"
                TargetName="Image"
                TargetProperty="SvgPalette"
                ValueSource="Chrome">
                <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasSvgPaletteProperty}" Value="True" ValueSource="Chrome" />
            </dxi:ConditionalRenderBinding>
        </dxi:RenderTemplate.Triggers>
    </dxi:RenderTemplate>

    <!-- HideBorder -->

    <dxi:RenderStylesCollection x:Key="{dxt:LWKey BarItemRender.HideBorderSideStyles}">
        <dxi:RenderStylesCollection.Triggers>
            <dxi:RenderValueSetter Property="BorderThickness" TargetName="Border" Value="1" />
            <dxi:RenderStateGroup Name="HideBorderSide">
                <dxi:RenderStateTrigger Name="None" />
                <dxi:RenderStateTrigger Name="Left">
                    <dxi:RenderSetter Property="BorderThickness" TargetName="Border" Value="0,1,1,1" />
                </dxi:RenderStateTrigger>
                <dxi:RenderStateTrigger Name="Top">
                    <dxi:RenderSetter Property="BorderThickness" TargetName="Border" Value="1,0,1,1" />
                </dxi:RenderStateTrigger>
                <dxi:RenderStateTrigger Name="Right">
                    <dxi:RenderSetter Property="BorderThickness" TargetName="Border" Value="1,1,0,1" />
                </dxi:RenderStateTrigger>
                <dxi:RenderStateTrigger Name="Bottom">
                    <dxi:RenderSetter Property="BorderThickness" TargetName="Border" Value="1,1,1,0" />
                </dxi:RenderStateTrigger>
            </dxi:RenderStateGroup>
        </dxi:RenderStylesCollection.Triggers>
    </dxi:RenderStylesCollection>

    <!-- Arrow -->

    <!-- GlyphAlignmentStates -->

    <dxi:RenderTriggersCollection x:Key="{dxt:LWKey BarItemRender.GlyphAlignmentStatesInMainMenu}">
        <dxi:RenderStateGroup Name="GlyphAlignment">
            <dxi:RenderStateTrigger Name="GlyphTop">
                <dxi:RenderSetter Property="Dock" TargetName="PART_Glyph" Value="Top" />
                <dxi:RenderSetter Property="Dock" TargetName="PART_Content" Value="Bottom" />
                <dxi:RenderSetter Property="Margin" TargetName="PART_Glyph" Value="0,0,0,3" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="GlyphBottom">
                <dxi:RenderSetter Property="Dock" TargetName="PART_Content" Value="Top" />
                <dxi:RenderSetter Property="Dock" TargetName="PART_Glyph" Value="Bottom" />
                <dxi:RenderSetter Property="Margin" TargetName="PART_Glyph" Value="0,3,0,0" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="GlyphRight">
                <dxi:RenderSetter Property="Dock" TargetName="PART_Content" Value="Left" />
                <dxi:RenderSetter Property="Dock" TargetName="PART_Glyph" Value="Right" />
                <dxi:RenderSetter Property="Margin" TargetName="PART_Glyph" Value="3,0,0,0" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="GlyphLeft">
                <dxi:RenderSetter Property="Dock" TargetName="PART_Content" Value="Right" />
                <dxi:RenderSetter Property="Dock" TargetName="PART_Glyph" Value="Left" />
                <dxi:RenderSetter Property="Margin" TargetName="PART_Glyph" Value="0,0,3,0" />
            </dxi:RenderStateTrigger>
        </dxi:RenderStateGroup>
    </dxi:RenderTriggersCollection>

    <dxi:RenderTriggersCollection x:Key="{dxt:LWKey BarItemRender.GlyphAlignmentStatesBarEditItemInMainMenu}">
        <dxi:RenderStateGroup Name="GlyphAlignment">
            <dxi:RenderStateTrigger Name="GlyphTop">
                <dxi:RenderSetter Property="Dock" TargetName="PART_Glyph" Value="Top" />
                <dxi:RenderSetter Property="Margin" TargetName="PART_Glyph" Value="0,0,0,3" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="GlyphBottom">
                <dxi:RenderSetter Property="Dock" TargetName="PART_Glyph" Value="Bottom" />
                <dxi:RenderSetter Property="Margin" TargetName="PART_Glyph" Value="0,3,0,0" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="GlyphRight">
                <dxi:RenderSetter Property="Dock" TargetName="PART_Glyph" Value="Right" />
                <dxi:RenderSetter Property="Margin" TargetName="PART_Glyph" Value="3,0,0,0" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="GlyphLeft">
                <dxi:RenderSetter Property="Dock" TargetName="PART_Glyph" Value="Left" />
                <dxi:RenderSetter Property="Margin" TargetName="PART_Glyph" Value="0,0,3,0" />
            </dxi:RenderStateTrigger>
        </dxi:RenderStateGroup>
    </dxi:RenderTriggersCollection>

    <dxi:RenderTriggersCollection x:Key="{dxt:LWKey BarItemRender.GlyphAlignmentStatesInBar}">
        <dxi:RenderStateGroup Name="GlyphAlignment">
            <dxi:RenderStateTrigger Name="GlyphTop">
                <dxi:RenderSetter Property="Dock" TargetName="PART_Glyph" Value="Top" />
                <dxi:RenderSetter Property="Dock" TargetName="PART_Content" Value="Bottom" />
                <dxi:RenderSetter Property="Margin" TargetName="PART_Glyph" Value="0,0,0,3" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="GlyphBottom">
                <dxi:RenderSetter Property="Dock" TargetName="PART_Content" Value="Top" />
                <dxi:RenderSetter Property="Dock" TargetName="PART_Glyph" Value="Bottom" />
                <dxi:RenderSetter Property="Margin" TargetName="PART_Glyph" Value="0,3,0,0" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="GlyphRight">
                <dxi:RenderSetter Property="Dock" TargetName="PART_Content" Value="Left" />
                <dxi:RenderSetter Property="Dock" TargetName="PART_Glyph" Value="Right" />
                <dxi:RenderSetter Property="Margin" TargetName="PART_Glyph" Value="3,0,0,0" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="GlyphLeft">
                <dxi:RenderSetter Property="Dock" TargetName="PART_Content" Value="Right" />
                <dxi:RenderSetter Property="Dock" TargetName="PART_Glyph" Value="Left" />
                <dxi:RenderSetter Property="Margin" TargetName="PART_Glyph" Value="0,0,3,0" />
            </dxi:RenderStateTrigger>
        </dxi:RenderStateGroup>
    </dxi:RenderTriggersCollection>

    <dxi:RenderTriggersCollection x:Key="{dxt:LWKey BarItemRender.GlyphAlignmentStatesBarEditItemInBar}">
        <dxi:RenderStateGroup Name="GlyphAlignment">
            <dxi:RenderStateTrigger Name="GlyphTop">
                <dxi:RenderSetter Property="Dock" TargetName="PART_Glyph" Value="Top" />
                <dxi:RenderSetter Property="Margin" TargetName="PART_Glyph" Value="0,0,0,3" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="GlyphBottom">
                <dxi:RenderSetter Property="Dock" TargetName="PART_Glyph" Value="Bottom" />
                <dxi:RenderSetter Property="Margin" TargetName="PART_Glyph" Value="0,3,0,0" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="GlyphRight">
                <dxi:RenderSetter Property="Dock" TargetName="PART_Glyph" Value="Right" />
                <dxi:RenderSetter Property="Margin" TargetName="PART_Glyph" Value="3,0,0,0" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="GlyphLeft">
                <dxi:RenderSetter Property="Dock" TargetName="PART_Glyph" Value="Left" />
                <dxi:RenderSetter Property="Margin" TargetName="PART_Glyph" Value="0,0,3,0" />
            </dxi:RenderStateTrigger>
        </dxi:RenderStateGroup>
    </dxi:RenderTriggersCollection>
    <!--#endregion Base\Core\Core\Bars\Themes\Base\RenderTemplates\_Common.xaml-->

    <!--#region Base\Core\Core\Bars\Themes\Base\RenderTemplates\ApplicationMenu.xaml-->
    <!-- General -->

    <dxi:RenderTriggersCollection x:Key="{dxt:LWKey BarItemRender.ForegroundColorStatesInApplicationMenu}">
        <dxi:RenderStateGroup Name="ArrowForegroundColors">
            <dxi:RenderStateTrigger Name="ArrowNormal">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowHover">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowPressed">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.SelectionForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowContentHighlight">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowDisabled">
                <dxi:RenderSetter Property="Foreground" TargetName="PART_ArrowContainer" ThrowIfInvalidTargetName="False" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowCustomization">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Focused, Win11=Brush.Accent'}" />
            </dxi:RenderStateTrigger>
        </dxi:RenderStateGroup>
        <dxi:RenderStateGroup Name="ContentForegroundColors">
            <dxi:RenderStateTrigger Name="ContentNormal">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentHover">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentPressed">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.SelectionForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentChecked">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.SelectionForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentIndeterminate">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentContentHighlight">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Focused, Win11=Brush.Accent'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentDisabled">
                <dxi:RenderSetter Property="Foreground" TargetName="PART_Container" ThrowIfInvalidTargetName="False" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentCustomization">
                <dxi:RenderSetter Property="Foreground" TargetName="PART_Container" ThrowIfInvalidTargetName="False" />
            </dxi:RenderStateTrigger>
        </dxi:RenderStateGroup>
        <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxi:AppearanceOptions.ForegroundProperty}" TargetName="Border" TargetProperty="Foreground">
            <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasForegroundProperty}" Value="True" />
        </dxi:ConditionalRenderBinding>
    </dxi:RenderTriggersCollection>

    <!-- Edit -->

    <dxi:RenderTriggersCollection x:Key="{dxt:LWKey BarItemRender.EditForegroundColorStatesInApplicationMenu}">
        <dxi:RenderStateGroup Name="ArrowForegroundColors">
            <dxi:RenderStateTrigger Name="ArrowNormal">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowHover">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowPressed">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.SelectionForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowContentHighlight">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowDisabled">
                <dxi:RenderSetter Property="Foreground" TargetName="PART_ArrowContainer" ThrowIfInvalidTargetName="False" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowCustomization">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Focused, Win11=Brush.Accent'}" />
            </dxi:RenderStateTrigger>
        </dxi:RenderStateGroup>
        <dxi:RenderStateGroup Name="ContentForegroundColors">
            <dxi:RenderStateTrigger Name="ContentNormal">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentHover">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentPressed">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.SelectionForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentChecked">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.SelectionForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentIndeterminate">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentContentHighlight">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Focused, Win11=Brush.Accent'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentDisabled">
                <dxi:RenderSetter Property="Foreground" TargetName="PART_Container" ThrowIfInvalidTargetName="False" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentCustomization">
                <dxi:RenderSetter Property="Foreground" TargetName="PART_Container" ThrowIfInvalidTargetName="False" />
            </dxi:RenderStateTrigger>
        </dxi:RenderStateGroup>
    </dxi:RenderTriggersCollection>

    <!-- Thickness -->

    <dxi:RenderStylesCollection x:Key="{dxt:LWKey BarItemRender.TemplateInApplicationMenuStyles}" />

    <dxi:RenderStylesCollection x:Key="{dxt:LWKey BarItemRender.SplitTemplateInApplicationMenuStyles}" BasedOn="{StaticResource {dxt:LWKey BarItemRender.TemplateInApplicationMenuStyles}}" />

    <dxi:RenderStylesCollection x:Key="{dxt:LWKey BarItemRender.EditTemplateInApplicationMenuStyles}" BasedOn="{StaticResource {dxt:LWKey BarItemRender.TemplateInApplicationMenuStyles}}" />
    <!--#endregion Base\Core\Core\Bars\Themes\Base\RenderTemplates\ApplicationMenu.xaml-->

    <!--#region Base\Core\Core\Bars\Themes\Base\RenderTemplates\Bar.xaml-->
    <dxi:RenderTriggersCollection x:Key="{dxt:LWKey BarItemRender.ForegroundColorStatesInBar}">
        <dxi:RenderStateGroup Name="ArrowForegroundColors">
            <dxi:RenderStateTrigger Name="ArrowNormal">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowHover">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowPressed">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.SelectionForeground, Win11=Brush.Foreground.Muted'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowContentHighlight">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Secondary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowDisabled">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Disabled'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowCustomization">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Focused, Win11=Brush.Accent'}" />
            </dxi:RenderStateTrigger>
        </dxi:RenderStateGroup>
        <dxi:RenderStateGroup Name="ContentForegroundColors">
            <dxi:RenderStateTrigger Name="ContentNormal">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentHover">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentPressed">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.SelectionForeground, Win11=Brush.Foreground.Muted'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentChecked">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.SelectionForeground, Win11=Brush.Foreground.Alt'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentIndeterminate">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentContentHighlight">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentDisabled">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Disabled'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentCustomization">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Focused, Win11=Brush.Accent'}" />
            </dxi:RenderStateTrigger>
        </dxi:RenderStateGroup>
    </dxi:RenderTriggersCollection>

    <!-- Edit -->

    <dxi:RenderTriggersCollection x:Key="{dxt:LWKey BarItemRender.EditForegroundColorStatesInBar}">
        <dxi:RenderStateGroup Name="ArrowForegroundColors">
            <dxi:RenderStateTrigger Name="ArrowNormal">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowHover">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowPressed">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.SelectionForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowContentHighlight">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowDisabled">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowCustomization">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Focused, Win11=Brush.Accent'}" />
            </dxi:RenderStateTrigger>
        </dxi:RenderStateGroup>
        <dxi:RenderStateGroup Name="ContentForegroundColors">
            <dxi:RenderStateTrigger Name="ContentNormal">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentHover">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Office2019HighContrast=Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentPressed">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.SelectionForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentChecked">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.SelectionForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentIndeterminate">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentContentHighlight">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentDisabled">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentCustomization">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Focused, Win11=Brush.Accent'}" />
            </dxi:RenderStateTrigger>
        </dxi:RenderStateGroup>
    </dxi:RenderTriggersCollection>

    <!-- Background -->

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.CheckedBackgroundTemplateInBar}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            Background="{dx:LWBrush 'Brush.SelectionBackground, Office2019Colorful=Brush.SelectionAltBackground, VS2019Blue=Brush.ControlDark.SelectionBackground, Win11=Brush.Button.CheckedBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.SelectionBorder, Office2019Colorful=Brush.SelectionAltBorder, VS2019Blue=Brush.ControlDark.SelectionBorder, Win11=#00FFFFFF'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.NormalBackgroundTemplateInBar}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder Name="Border" BorderThickness="1" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.HoverBackgroundTemplateInBar}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            Background="{dx:LWBrush 'Brush.HoverBackground, Office2019Colorful=Brush.HoverAltBackground, VS2019Blue=Brush.ControlDark.HoverBackground, Win11=Brush.Button.HoverBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.HoverBorder, Office2019Colorful=Brush.HoverAltBorder, VS2019Blue=Brush.ControlDark.HoverBorder, Win11=#00FFFFFF'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.IndeterminateBackgroundTemplateInBar}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            Background="{dx:LWBrush 'Brush.HoverBackground, Office2019Colorful=Brush.HoverAltBackground, VS2019Blue=Brush.ControlDark.HoverBackground, Win11=Brush.Button.HoverBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.HoverBorder, Office2019Colorful=Brush.HoverAltBorder, VS2019Blue=Brush.ControlDark.HoverBorder, Win11=#00FFFFFF'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.PressedBackgroundTemplateInBar}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            Background="{dx:LWBrush 'Brush.SelectionBackground, Office2019Colorful=Brush.SelectionAltBackground, VS2019Blue=Brush.ControlDark.SelectionBackground, Win11=Brush.Button.PressedBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.SelectionBorder, Office2019Colorful=Brush.SelectionAltBorder, VS2019Blue=Brush.ControlDark.SelectionBorder, Win11=#00FFFFFF'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}"
            BorderThickness="1" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.ContentHighlightTemplateInBar}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            Background="{dx:LWBrush 'Brush.HoverBackground, Office2019Colorful=Brush.HoverAltBackground, VS2019Blue=Brush.ControlDark.HoverBackground, Win11=Brush.Button.HoverBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.HoverBorder, Office2019Colorful=Brush.HoverAltBorder, VS2019Blue=Brush.ControlDark.HoverBorder, Win11=#00FFFFFF'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}"
            Opacity="0.62" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.CustomizationBackgroundTemplateInBar}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            BorderBrush="{dx:LWBrush 'Brush.Focused, Win11=Brush.Accent'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}"
            BorderThickness="1" />
    </dxi:RenderTemplate>

    <!-- Thickness -->

    <dxi:RenderStylesCollection x:Key="{dxt:LWKey BarItemRender.DefaultTemplateInBarStyles}">
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderBorder#PART_Root'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,1,1" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_Background'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_Container'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="3" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Glyph'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStylesCollection.Triggers>
            <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxi:AppearanceOptions.MarginProperty}" TargetName="PART_Root" TargetProperty="Margin">
                <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasMarginProperty}" Value="True" />
            </dxi:ConditionalRenderBinding>
        </dxi:RenderStylesCollection.Triggers>
    </dxi:RenderStylesCollection>

    <dxi:RenderStylesCollection x:Key="{dxt:LWKey BarItemRender.SplitTemplateInBarStyles}" BasedOn="{StaticResource {dxt:LWKey BarItemRender.DefaultTemplateInBarStyles}}">
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderBorder#PART_Root'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,1,1" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_Background'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_Container'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="3" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Glyph'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_ContentContainer'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_ContentBackground'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_PathArrowContainer'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="3,4,3,3" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PATH_ArrowBackground'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_ArrowContainer'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
    </dxi:RenderStylesCollection>

    <dxi:RenderStylesCollection x:Key="{dxt:LWKey BarItemRender.EditTemplateInBarStyles}" BasedOn="{StaticResource {dxt:LWKey BarItemRender.DefaultTemplateInBarStyles}}">
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderBorder#PART_Root'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,1,1" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_Background'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_Container'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="3,0,3,0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Glyph'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_ContentContainer'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
            <dxi:RenderStyleSetter TargetProperty="MinHeight" Value="22" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Editor'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="3,0,0,0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content2'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="3,0,0,0" />
        </dxi:RenderStyle>
    </dxi:RenderStylesCollection>

    <dxi:RenderStylesCollection x:Key="{dxt:LWKey BarItemRender.StaticTemplateInBarStyles}" BasedOn="{StaticResource {dxt:LWKey BarItemRender.DefaultTemplateInBarStyles}}">
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderBorder#PART_Root'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,1,1" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_Background'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_Container'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="3" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Glyph'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
    </dxi:RenderStylesCollection>
    <!--#endregion Base\Core\Core\Bars\Themes\Base\RenderTemplates\Bar.xaml-->

    <!--#region Base\Core\Core\Bars\Themes\Base\RenderTemplates\MainMenu.xaml-->
    <!-- General -->

    <dxi:RenderTriggersCollection x:Key="{dxt:LWKey BarItemRender.ForegroundColorStatesInMainMenu}">
        <dxi:RenderStateGroup Name="ArrowForegroundColors">
            <dxi:RenderStateTrigger Name="ArrowNormal">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowHover">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowPressed">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.SelectionForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowContentHighlight">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowDisabled">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowCustomization">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Focused, Win11=Brush.Accent'}" />
            </dxi:RenderStateTrigger>
        </dxi:RenderStateGroup>
        <dxi:RenderStateGroup Name="ContentForegroundColors">
            <dxi:RenderStateTrigger Name="ContentNormal">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentHover">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentPressed">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.SelectionForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentChecked">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.SelectionForeground, Win11=Brush.Foreground.Alt'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentIndeterminate">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentContentHighlight">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentDisabled">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentCustomization">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Focused, Win11=Brush.Accent'}" />
            </dxi:RenderStateTrigger>
        </dxi:RenderStateGroup>
    </dxi:RenderTriggersCollection>

    <!-- Edit -->

    <dxi:RenderTriggersCollection x:Key="{dxt:LWKey BarItemRender.EditForegroundColorStatesInMainMenu}">
        <dxi:RenderStateGroup Name="ArrowForegroundColors">
            <dxi:RenderStateTrigger Name="ArrowNormal">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowHover">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowPressed">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.SelectionForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowContentHighlight">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowDisabled">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowCustomization">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Focused, Win11=Brush.Accent'}" />
            </dxi:RenderStateTrigger>
        </dxi:RenderStateGroup>
        <dxi:RenderStateGroup Name="ContentForegroundColors">
            <dxi:RenderStateTrigger Name="ContentNormal">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentHover">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentPressed">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.SelectionForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentChecked">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.SelectionForeground, Win11=Brush.Foreground.Alt'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentIndeterminate">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentContentHighlight">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentDisabled">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentCustomization">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Focused, Win11=Brush.Accent'}" />
            </dxi:RenderStateTrigger>
        </dxi:RenderStateGroup>
    </dxi:RenderTriggersCollection>

    <!-- Background -->

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.CheckedBackgroundTemplateInMainMenu}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            Background="{dx:LWBrush 'Brush.SelectionBackground, Office2019Colorful=Brush.SelectionAltBackground, VS2019Blue=Brush.ControlDark.HoverBackground, VS2019Dark=Brush.Window.Background, Win11=Brush.Button.CheckedBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.SelectionBorder, Office2019Colorful=Brush.SelectionAltBorder, VS2019Blue=Brush.ControlDark.HoverBackground, Win11=#00FFFFFF'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}"
            BorderThickness="1" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.NormalBackgroundTemplateInMainMenu}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder Name="Border" BorderThickness="1" CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.HoverBackgroundTemplateInMainMenu}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            Background="{dx:LWBrush 'Brush.HoverBackground, Office2019Colorful=Brush.HoverAltBackground, VS2019Blue=Brush.ControlDark.HoverBackground, Win11=Brush.ListItem.HoverBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.HoverBorder, Office2019Colorful=Brush.HoverAltBorder, VS2019Blue=Brush.ControlDark.HoverBorder, Win11=#00FFFFFF'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.IndeterminateBackgroundTemplateInMainMenu}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            Background="{dx:LWBrush 'Brush.HoverBackground, Office2019Colorful=Brush.HoverAltBackground, VS2019Blue=Brush.ControlDark.HoverBackground, Win11=Brush.ListItem.HoverBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.HoverBorder, Office2019Colorful=Brush.HoverAltBorder, VS2019Blue=Brush.ControlDark.HoverBorder, Win11=#00FFFFFF'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.PressedBackgroundTemplateInMainMenu}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            Background="{dx:LWBrush 'Brush.SelectionBackground, Office2019Colorful=Brush.SelectionAltBackground, VS2019Blue=Brush.ControlDark.HoverBackground, VS2019Dark=Brush.Control.Background, Win11=Brush.ListItem.SelectionBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.SelectionBorder, Office2019Colorful=Brush.SelectionAltBorder, VS2019Blue=Brush.ControlDark.HoverBorder, VS2019Dark=Brush.Control.Background, Win11=#00FFFFFF'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.CustomizationBackgroundTemplateInMainMenu}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder Name="Border" BorderBrush="{dx:LWBrush 'Brush.Focused, Win11=Brush.Accent'}" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.ContentHighlightTemplateInMainMenu}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxi:RenderPanel HorizontalAlignment="Stretch">
            <dxb:RenderBarItemBorder
                Name="Border"
                Background="{dx:LWBrush 'Brush.HoverBackground, Office2019Colorful=Brush.HoverAltBackground, VS2019Blue=Brush.ControlDark.HoverBackground, Win11=Brush.Button.HoverBackground'}"
                BorderBrush="{dx:LWBrush 'Brush.HoverBorder, Office2019Colorful=Brush.HoverAltBorder, VS2019Blue=Brush.ControlDark.HoverBorder, Win11=#00FFFFFF'}"
                CornerRadius="{dx:LWCornerRadius '0, Win11=4'}"
                Opacity="0.62" />
        </dxi:RenderPanel>
    </dxi:RenderTemplate>

    <!--#endregion Base\Core\Core\Bars\Themes\Base\RenderTemplates\MainMenu.xaml-->

    <!--#region Base\Core\Core\Bars\Themes\Base\RenderTemplates\Menu.xaml-->
    <dxi:RenderTriggersCollection x:Key="{dxt:LWKey BarItemRender.ForegroundColorStatesInMenu}">
        <dxi:RenderStateGroup Name="ArrowForegroundColors">
            <dxi:RenderStateTrigger Name="ArrowNormal">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowHover">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowPressed">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.SelectionForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowCustomization">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Focused, Win11=Brush.Accent'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowContentHighlight">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowDisabled">
                <dxi:RenderSetter Property="Foreground" TargetName="PART_ArrowContainer" ThrowIfInvalidTargetName="False" />
            </dxi:RenderStateTrigger>
        </dxi:RenderStateGroup>
        <dxi:RenderStateGroup Name="ContentForegroundColors">
            <dxi:RenderStateTrigger Name="ContentNormal">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ContentContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentHover">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ContentContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentPressed">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ContentContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.SelectionForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentChecked">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ContentContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.SelectionForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentIndeterminate">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ContentContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentCustomization">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ContentContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Focused, Win11=Brush.Accent'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentContentHighlight">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ContentContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentDisabled">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ContentContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
        </dxi:RenderStateGroup>
    </dxi:RenderTriggersCollection>

    <!-- Edit -->

    <dxi:RenderTriggersCollection x:Key="{dxt:LWKey BarItemRender.EditForegroundColorStatesInMenu}">
        <dxi:RenderStateGroup Name="ArrowForegroundColors">
            <dxi:RenderStateTrigger Name="ArrowNormal">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowHover">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowPressed">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.SelectionForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowCustomization">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Focused, Win11=Brush.Accent'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowContentHighlight">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowDisabled">
                <dxi:RenderSetter Property="Foreground" TargetName="PART_ArrowContainer" ThrowIfInvalidTargetName="False" />
            </dxi:RenderStateTrigger>
        </dxi:RenderStateGroup>
        <dxi:RenderStateGroup Name="ContentForegroundColors">
            <dxi:RenderStateTrigger Name="ContentNormal">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ContentContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentHover">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ContentContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Office2019HighContrast=Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentPressed">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ContentContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.SelectionForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentChecked">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ContentContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentIndeterminate">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ContentContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentCustomization">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ContentContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Focused, Win11=Brush.Accent'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentContentHighlight">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ContentContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentDisabled">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ContentContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
        </dxi:RenderStateGroup>
    </dxi:RenderTriggersCollection>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.PressedBackgroundTemplateInMenu}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            Background="{dx:LWBrush 'Brush.SelectionBackground, Office2019Colorful=Brush.SelectionAltBackground, VS2019Blue=Brush.ControlLight.SelectionBackground, VS2019Dark=Brush.HoverBackground, Win11=Brush.ListItem.SelectionBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.SelectionBorder, Office2019Colorful=Brush.SelectionAltBorder, VS2019Blue=Brush.ControlLight.SelectionBackground, VS2019Dark=Brush.HoverBorder, Win11=#00FFFFFF'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.CheckedBackgroundTemplateInMenu}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            Background="{dx:LWBrush 'Brush.SelectionBackground, Office2019Colorful=Brush.SelectionAltBackground, Win11=Brush.ListItem.SelectionBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.SelectionBorder, Office2019Colorful=Brush.SelectionAltBorder, Win11=#00FFFFFF'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.NormalBackgroundTemplateInMenu}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder Name="Border" BorderThickness="1" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.HoverBackgroundTemplateInMenu}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            Background="{dx:LWBrush 'Brush.HoverBackground, Office2019Colorful=Brush.HoverAltBackground, VS2019Blue=Brush.ControlLight.HoverBackground, Win11=Brush.ListItem.HoverBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.HoverBorder, Office2019Colorful=Brush.HoverAltBorder, VS2019Blue=Brush.ControlLight.HoverBorder, Win11=#00FFFFFF'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.IndeterminateBackgroundTemplateInMenu}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder Name="Border" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.CustomizationBackgroundTemplateInMenu}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder Name="Border" BorderBrush="{dx:LWBrush 'Brush.Focused, Win11=Brush.Accent'}" CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.ContentHighlightTemplateInMenu}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            Background="{dx:LWBrush 'Brush.HoverBackground, Office2019Colorful=Brush.HoverAltBackground, VS2019Blue=Brush.ControlDark.HoverBackground, Win11=Brush.Button.HoverBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.HoverBorder, Office2019Colorful=Brush.HoverAltBorder, VS2019Blue=Brush.ControlDark.HoverBorder, Win11=#00FFFFFF'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}"
            Opacity="0.62" />
    </dxi:RenderTemplate>

    <dxi:RenderStylesCollection x:Key="{dxt:LWKey BarItemRender.TemplateInMenuStyles}">
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderBorder#PART_Root'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,1,1" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_Background'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_ContentContainer'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="{dx:LWThickness '(3,3,0,3), Win11=(0,3,0,4)'}" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_GlyphBackground'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="{dx:LWThickness '0, Win11=(8,0,0,0)'}" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Glyph'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="{dx:LWThickness '0, Win11=(8,0,0,0)'}" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderControl#PART_CheckGlyph'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="{dx:LWThickness '0, Win11=(8,0,0,0)'}" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_Container'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="{dx:LWThickness '(14,0,24,0), Win11=(12,3,24,4)'}" />
            <dxi:RenderStyleSetter TargetProperty="ShouldCalcDpiAwareThickness" Value="False" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Description'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="{dx:LWThickness '(14,0,24,0), Win11=(12,3,24,4)'}" />
            <dxi:RenderStyleSetter TargetProperty="ShouldCalcDpiAwareThickness" Value="False" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_KeyGesture'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="12,0,20,0" />
        </dxi:RenderStyle>
        <dxi:RenderStylesCollection.Triggers>
            <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxi:AppearanceOptions.MarginProperty}" TargetName="PART_Root" TargetProperty="Margin">
                <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasMarginProperty}" Value="True" />
            </dxi:ConditionalRenderBinding>
        </dxi:RenderStylesCollection.Triggers>
    </dxi:RenderStylesCollection>

    <dxi:RenderStylesCollection x:Key="{dxt:LWKey BarItemRender.SplitItemTemplateInMenuStyles}" BasedOn="{StaticResource {dxt:LWKey BarItemRender.TemplateInMenuStyles}}">
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderBorder#PART_Root'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,1,1" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_Background'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_ArrowContainer'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_ArrowBackground'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_ContentBackground'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_ContentContainer'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="{dx:LWThickness '3, Win11=(0,3,0,4)'}" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_GlyphBackground'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="{dx:LWThickness '0, Win11=(8,0,0,0)'}" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Glyph'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="{dx:LWThickness '0, Win11=(8,0,0,0)'}" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_CheckGlyph'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_Container'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="{dx:LWThickness '(14,0,24,0), Win11=(14,4,24,4)'}" />
            <dxi:RenderStyleSetter TargetProperty="ShouldCalcDpiAwareThickness" Value="False" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Description'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="14,0,24,0" />
            <dxi:RenderStyleSetter TargetProperty="ShouldCalcDpiAwareThickness" Value="False" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_KeyGesture'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="{dx:LWThickness '(12,0,0,0), Win11=(12,0,6,0)'}" />
        </dxi:RenderStyle>
    </dxi:RenderStylesCollection>

    <dxi:RenderStylesCollection x:Key="{dxt:LWKey BarItemRender.EditTemplateInMenuStyles}" BasedOn="{StaticResource {dxt:LWKey BarItemRender.TemplateInMenuStyles}}">
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderBorder#PART_Root'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,1,1" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_Background'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_Container'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="{dx:LWThickness '(3,0,16,0), Win11=(0,4,16,4)'}" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Glyph'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="{dx:LWThickness '(0,3), Win11=(8,3,0,0)'}" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="{dx:LWThickness '(14,3,0,3), Win11=(14,4,4,4)'}" />
            <dxi:RenderStyleSetter TargetProperty="ShouldCalcDpiAwareThickness" Value="False" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content2'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="3,3,0,3" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_EditContainer'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="{dx:LWThickness '(3,0,0,0), Win11=(4,0,4,0)'}" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Editor'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
    </dxi:RenderStylesCollection>

    <dxi:RenderStylesCollection x:Key="{dxt:LWKey BarItemRender.StaticTemplateInMenuStyles}" BasedOn="{StaticResource {dxt:LWKey BarItemRender.TemplateInMenuStyles}}">
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderBorder#PART_Root'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,1,1" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_Background'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_Container'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="{dx:LWThickness '(3,3,0,3), Win11=(0,3,0,3)'}" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Glyph'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="{dx:LWThickness '0, Win11=(8,0,0,0)'}" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="{dx:LWThickness '(14,0,24,0), Win11=(14,4,24,4)'}" />
            <dxi:RenderStyleSetter TargetProperty="ShouldCalcDpiAwareThickness" Value="False" />
        </dxi:RenderStyle>
    </dxi:RenderStylesCollection>
    <!--#endregion Base\Core\Core\Bars\Themes\Base\RenderTemplates\Menu.xaml-->

    <!--#region Base\Core\Core\Bars\Themes\Base\RenderTemplates\RibbonPageGroup.xaml-->
    <!-- General -->

    <dxi:RenderTriggersCollection x:Key="{dxt:LWKey BarItemRender.ForegroundColorStatesInPageGroup}">
        <dxi:RenderStateGroup Name="ArrowForegroundColors">
            <dxi:RenderStateTrigger Name="ArrowNormal">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowHover">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowPressed">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.SelectionForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowChecked">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.SelectionForeground, Win11=Brush.Foreground.Alt'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowContentHighlight">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowDisabled">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowCustomization">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Focused, Win11=Brush.Accent'}" />
            </dxi:RenderStateTrigger>
        </dxi:RenderStateGroup>
        <dxi:RenderStateGroup Name="ContentForegroundColors">
            <dxi:RenderStateTrigger Name="ContentNormal">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentHover">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentPressed">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.SelectionForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentChecked">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.SelectionForeground, Win11=Brush.Foreground.Alt'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentIndeterminate">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentContentHighlight">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentDisabled">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentCustomization">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Focused, Win11=Brush.Accent'}" />
            </dxi:RenderStateTrigger>
        </dxi:RenderStateGroup>
    </dxi:RenderTriggersCollection>

    <!-- Editors -->

    <dxi:RenderTriggersCollection x:Key="{dxt:LWKey BarItemRender.EditForegroundColorStatesInPageGroup}">
        <dxi:RenderStateGroup Name="ArrowForegroundColors">
            <dxi:RenderStateTrigger Name="ArrowNormal">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Secondary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowHover">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowPressed">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.SelectionForeground, Win11=Brush.Foreground.Muted'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowContentHighlight">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowDisabled">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowCustomization">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Focused, Win11=Brush.Accent'}" />
            </dxi:RenderStateTrigger>
        </dxi:RenderStateGroup>
        <dxi:RenderStateGroup Name="ContentForegroundColors">
            <dxi:RenderStateTrigger Name="ContentNormal">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentHover">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Office2019HighContrast=Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentPressed">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.SelectionForeground, Win11=Brush.Foreground.Muted'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentChecked">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.SelectionForeground, Win11=Brush.Foreground.Alt'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentIndeterminate">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Secondary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentContentHighlight">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentDisabled">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentCustomization">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Focused, Win11=Brush.Accent'}" />
            </dxi:RenderStateTrigger>
        </dxi:RenderStateGroup>
    </dxi:RenderTriggersCollection>

    <!-- Background -->

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.NormalBackgroundTemplateInPageGroup}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder Name="Border" BorderThickness="1" CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.HoverBackgroundTemplateInPageGroup}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            Background="{dx:LWBrush 'Brush.HoverBackground, Office2019Colorful=Brush.HoverAltBackground, VS2019Blue=Brush.ControlDark.HoverBackground, Win11=Brush.Button.HoverBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.HoverBorder, Office2019Colorful=Brush.HoverAltBorder, VS2019Blue=Brush.ControlDark.HoverBorder, Win11=#00FFFFFF'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.PressedBackgroundTemplateInPageGroup}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            Background="{dx:LWBrush 'Brush.SelectionBackground, Office2019Colorful=Brush.SelectionAltBackground, VS2019Blue=Brush.ControlDark.SelectionBackground, Win11=Brush.Button.PressedBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.SelectionBorder, Office2019Colorful=Brush.SelectionAltBorder, VS2019Blue=Brush.ControlDark.SelectionBorder, Win11=#00FFFFFF'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.CheckedBackgroundTemplateInPageGroup}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            Background="{dx:LWBrush 'Brush.SelectionBackground, Office2019Colorful=Brush.SelectionAltBackground, VS2019Blue=Brush.ControlDark.SelectionBackground, VS2019Dark=#00000000, Win11=Brush.Button.CheckedBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.SelectionBorder, Office2019Colorful=Brush.SelectionAltBorder, VS2019Blue=Brush.ControlDark.SelectionBorder, Win11=#00FFFFFF'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.IndeterminateBackgroundTemplateInPageGroup}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            Background="{dx:LWBrush 'Brush.HoverBackground, Office2019Colorful=Brush.HoverAltBackground, VS2019Blue=Brush.ControlDark.HoverBackground, Win11=Brush.Button.HoverBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.HoverBorder, Office2019Colorful=Brush.HoverAltBorder, VS2019Blue=Brush.ControlDark.HoverBorder, Win11=Brush.Accent'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.ContentHighlightTemplateInPageGroup}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            Background="{dx:LWBrush 'Brush.HoverBackground, Office2019Colorful=Brush.HoverAltBackground, VS2019Blue=Brush.ControlDark.HoverBackground, Win11=Brush.Button.HoverBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.HoverBorder, Office2019Colorful=Brush.HoverAltBorder, VS2019Blue=Brush.ControlDark.HoverBorder, Win11=#00FFFFFF'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}"
            Opacity="0.62" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.CustomizationBackgroundTemplateInPageGroup}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder Name="Border" BorderBrush="{dx:LWBrush 'Brush.Focused, Win11=Brush.Accent'}" />
    </dxi:RenderTemplate>

    <!-- Splitter -->

    <dxi:RenderStylesCollection x:Key="{dxt:LWKey BarItemRender.TextSplitterStyles}">
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderTextBlock#BottomText'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,0,0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderBorder#PART_ArrowToContentOffset'}">
            <dxi:RenderStyleSetter TargetProperty="Width" Value="2" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderTextBlock#TopText'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,-1,0,-2" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_Arrow'}">
            <dxi:RenderStyleSetter TargetProperty="Width" Value="8" />
            <dxi:RenderStyleSetter TargetProperty="Height" Value="5" />
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,0,0" />
        </dxi:RenderStyle>
    </dxi:RenderStylesCollection>

    <!-- Thickness -->

    <dxi:RenderStylesCollection x:Key="{dxt:LWKey BarItemRender.TemplateInPageGroupLargeStyles}" BasedOn="{StaticResource {dxt:LWKey BarItemRender.TemplateInPageGroupSmallStyles}}">
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderBorder#PART_Root'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,1,1" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_Background'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_Container'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="3,3,3,0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Glyph'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,0,3" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,0,0" />
        </dxi:RenderStyle>
    </dxi:RenderStylesCollection>

    <dxi:RenderStylesCollection x:Key="{dxt:LWKey BarItemRender.SimplifiedTemplateInPageGroupSmallStyles}" BasedOn="{StaticResource {dxt:LWKey BarItemRender.TemplateInPageGroupSmallStyles}}">
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderBorder#PART_Root'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="{StaticResource BarItemRender.SimplifiedTemplateStyles.Margin3}" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_Background'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_Container'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="{dx:LWThickness '(8,8,0,8) , Win11=(6,4,6,4)'}" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Glyph'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="{dx:LWThickness '(0,0,8,0) , Win11=(0,0,0,0)'}" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="{dx:LWThickness '(0,0,8,0) , Win11=(6,0,2,0)'}" />
        </dxi:RenderStyle>
    </dxi:RenderStylesCollection>

    <!-- Split -->

    <dxi:RenderStylesCollection x:Key="{dxt:LWKey BarItemRender.SplitItemTemplateInPageGroupLargeStyles}" BasedOn="{StaticResource {dxt:LWKey BarItemRender.TemplateInPageGroupSmallStyles}}">
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderBorder#PART_Root'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,1,1" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_Background'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_Container'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_Top'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_Bottom'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_ContentContainer'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="3" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_ContentBackground'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Glyph'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PATH_ArrowBackground'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_ArrowContainer'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="3,0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
    </dxi:RenderStylesCollection>

    <dxi:RenderStylesCollection x:Key="{dxt:LWKey BarItemRender.SimplifiedSplitItemTemplateInPageGroupSmallStyles}" BasedOn="{StaticResource {dxt:LWKey BarItemRender.TemplateInPageGroupSmallStyles}}">
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderBorder#PART_Root'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="{StaticResource BarItemRender.SimplifiedTemplateStyles.Margin1}" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_Background'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_ContentContainer'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_ContentBackground'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_Container'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="{dx:LWThickness '(8,8,0,8), Win11=(6,4,0,4)'}" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Glyph'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,4,0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="4,0,4,0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_PathArrowContainer'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="{dx:LWThickness '(4,6,6,6), Win11=(4,4,6,4)'}" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PATH_ArrowBackground'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_ArrowContainer'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
    </dxi:RenderStylesCollection>

    <!-- Statoc -->

    <dxi:RenderStylesCollection x:Key="{dxt:LWKey BarItemRender.StaticItemTemplateInPageGroupStyles}" BasedOn="{StaticResource {dxt:LWKey BarItemRender.TemplateInPageGroupSmallStyles}}">
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderBorder#PART_Root'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,1,1" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_Background'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_Container'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="3,3,0,3" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Glyph'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,3,0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,3,0" />
        </dxi:RenderStyle>
    </dxi:RenderStylesCollection>

    <dxi:RenderStylesCollection x:Key="{dxt:LWKey BarItemRender.SimplifiedStaticItemTemplateInPageGroupStyles}" BasedOn="{StaticResource {dxt:LWKey BarItemRender.TemplateInPageGroupSmallStyles}}">
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderBorder#PART_Root'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="{StaticResource BarItemRender.SimplifiedTemplateStyles.Margin1}" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_Background'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_Container'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="8,0,0,0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Glyph'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,8,0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,8,0" />
        </dxi:RenderStyle>
    </dxi:RenderStylesCollection>

    <!-- Edit -->

    <dxi:RenderStylesCollection x:Key="{dxt:LWKey BarItemRender.EditTemplateInPageGroupStyles}" BasedOn="{StaticResource {dxt:LWKey BarItemRender.TemplateInPageGroupSmallStyles}}">
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderBorder#PART_Root'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,1,1" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_Background'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_Container'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="3,0,3,0" />
            <dxi:RenderStyleSetter TargetProperty="MinHeight" Value="22" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Glyph'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,3,0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content2'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="3,0,0,0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Editor'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="3,0,0,0" />
        </dxi:RenderStyle>
    </dxi:RenderStylesCollection>

    <dxi:RenderStylesCollection x:Key="{dxt:LWKey BarItemRender.EditTemplateInPageGroupSmallWithoutTextStyles}" BasedOn="{StaticResource {dxt:LWKey BarItemRender.TemplateInPageGroupSmallStyles}}">
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderBorder#PART_Root'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,1,1" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_Background'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_Container'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="3,0,3,0" />
            <dxi:RenderStyleSetter TargetProperty="MinHeight" Value="22" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Glyph'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,3,0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content2'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="3,0,0,0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Editor'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="3,0,0,0" />
        </dxi:RenderStyle>
    </dxi:RenderStylesCollection>

    <dxi:RenderStylesCollection x:Key="{dxt:LWKey BarItemRender.SimplifiedEditTemplateInPageGroupStyles}" BasedOn="{StaticResource {dxt:LWKey BarItemRender.TemplateInPageGroupSmallStyles}}">
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderBorder#PART_Root'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="{StaticResource BarItemRender.SimplifiedTemplateStyles.Margin2}" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_Background'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_Container'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="3,0,3,0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Glyph'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,3,0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content2'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="3,0,0,0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Editor'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="3,0,0,0" />
        </dxi:RenderStyle>
    </dxi:RenderStylesCollection>

    <dxi:RenderStylesCollection x:Key="{dxt:LWKey BarItemRender.SimplifiedEditTemplateInPageGroupSmallWithoutTextStyles}" BasedOn="{StaticResource {dxt:LWKey BarItemRender.TemplateInPageGroupSmallStyles}}">
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderBorder#PART_Root'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="{StaticResource BarItemRender.SimplifiedTemplateStyles.Margin2}" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_Background'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_Container'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="3,0,6,0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Glyph'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,3,0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content2'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="3,0,0,0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Editor'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="3,0,0,0" />
        </dxi:RenderStyle>
    </dxi:RenderStylesCollection>
    <!--#endregion Base\Core\Core\Bars\Themes\Base\RenderTemplates\RibbonPageGroup.xaml-->

    <!--#region Base\Core\Core\Bars\Themes\Base\RenderTemplates\RibbonPageHeader.xaml-->
    <!-- General -->

    <dxi:RenderTriggersCollection x:Key="{dxt:LWKey BarItemRender.ForegroundColorStatesInPageHeader}">
        <dxi:RenderStateGroup Name="ArrowForegroundColors">
            <dxi:RenderStateTrigger Name="ArrowNormal">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.Foreground, Office2019Colorful=Brush.Foreground, Office2019HighContrast=Brush.Foreground, VS2019Dark=Brush.Foreground, Win10Dark=Brush.Foreground, Win10Light=Brush.Foreground, Win11=Brush.Foreground.Secondary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowHover">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.HoverForeground, Office2019Colorful=Brush.HoverForeground, Office2019HighContrast=Brush.HoverForeground, VS2019Blue=Brush.HoverForeground, VS2019Dark=Brush.HoverForeground, Win10Dark=Brush.HoverForeground, Win10Light=Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowPressed">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.SelectionForeground, Office2019Colorful=Brush.SelectionForeground, Office2019HighContrast=Brush.SelectionForeground, VS2019Blue=Brush.SelectionForeground, VS2019Dark=Brush.SelectionForeground, Win10Dark=Brush.SelectionForeground, Win10Light=Brush.SelectionForeground, Win11=Brush.Foreground.Muted'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowContentHighlight">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.HoverForeground, Office2019Colorful=Brush.HoverForeground, Office2019HighContrast=Brush.HoverForeground, VS2019Blue=Brush.HoverForeground, VS2019Dark=Brush.HoverForeground, Win10Dark=Brush.HoverForeground, Win10Light=Brush.HoverForeground, Win11=Brush.Foreground.Secondary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowDisabled">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.Foreground, Office2019Colorful=Brush.Foreground, Office2019HighContrast=Brush.Foreground, VS2019Dark=Brush.Foreground, Win10Dark=Brush.Foreground, Win10Light=Brush.Foreground, Win11=Brush.Foreground.Disabled'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowCustomization">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Focused, Office2019Black=Brush.Foreground, Office2019Colorful=Brush.Foreground, Office2019HighContrast=Brush.Foreground, VS2019Dark=Brush.Foreground, Win10Dark=Brush.Foreground, Win10Light=Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
        </dxi:RenderStateGroup>
        <dxi:RenderStateGroup Name="ContentForegroundColors">
            <dxi:RenderStateTrigger Name="ContentNormal">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.Foreground, Office2019Colorful=Brush.Foreground, Office2019HighContrast=Brush.Foreground, VS2019Dark=Brush.Foreground, Win10Dark=Brush.Foreground, Win10Light=Brush.Foreground, Win11=Brush.Foreground.Secondary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentHover">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.HoverForeground, Office2019Colorful=Brush.HoverForeground, Office2019HighContrast=Brush.HoverForeground, VS2019Blue=Brush.HoverForeground, VS2019Dark=Brush.HoverForeground, Win10Dark=Brush.HoverForeground, Win10Light=Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentPressed">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.SelectionForeground, Office2019Colorful=Brush.SelectionForeground, Office2019HighContrast=Brush.SelectionForeground, VS2019Blue=Brush.SelectionForeground, VS2019Dark=Brush.SelectionForeground, Win10Dark=Brush.SelectionForeground, Win10Light=Brush.SelectionForeground, Win11=Brush.Foreground.Muted'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentChecked">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.SelectionForeground, Office2019Colorful=Brush.SelectionForeground, Office2019HighContrast=Brush.SelectionForeground, VS2019Dark=Brush.SelectionForeground, Win10Dark=Brush.SelectionForeground, Win10Light=Brush.SelectionForeground, Win11=Brush.Foreground.Alt'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentIndeterminate">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.HoverForeground, Office2019Colorful=Brush.HoverForeground, Office2019HighContrast=Brush.HoverForeground, VS2019Dark=Brush.HoverForeground, Win10Dark=Brush.HoverForeground, Win10Light=Brush.HoverForeground, Win11=Brush.Foreground.Secondary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentContentHighlight">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.HoverForeground, Office2019Colorful=Brush.HoverForeground, Office2019HighContrast=Brush.HoverForeground, VS2019Dark=Brush.HoverForeground, Win10Dark=Brush.HoverForeground, Win10Light=Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentDisabled">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.Foreground, Office2019Colorful=Brush.Foreground, Office2019HighContrast=Brush.Foreground, Win10Dark=Brush.Foreground, Win10Light=Brush.Foreground, Win11=Brush.Foreground.Disabled'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentCustomization">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Focused, Office2019Black=Brush.Foreground, Office2019Colorful=Brush.Foreground, Office2019HighContrast=Brush.Foreground, VS2019Dark=Brush.Focused, Win10Dark=Brush.Focused, Win10Light=Brush.Focused, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
        </dxi:RenderStateGroup>
    </dxi:RenderTriggersCollection>

    <!-- Edit -->

    <dxi:RenderTriggersCollection x:Key="{dxt:LWKey BarItemRender.EditForegroundColorStatesInPageHeader}">
        <dxi:RenderStateGroup Name="ArrowForegroundColors">
            <dxi:RenderStateTrigger Name="ArrowNormal">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.Foreground, Office2019Colorful=Brush.Foreground, Office2019HighContrast=Brush.Foreground, VS2019Dark=Brush.Foreground, Win10Dark=Brush.Foreground, Win10Light=Brush.Foreground, Win11=Brush.Foreground.Secondary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowHover">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.HoverForeground, Office2019Colorful=Brush.HoverForeground, Office2019HighContrast=Brush.HoverForeground, VS2019Dark=Brush.HoverForeground, Win10Dark=Brush.HoverForeground, Win10Light=Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowPressed">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.SelectionForeground, Office2019Colorful=Brush.SelectionForeground, Office2019HighContrast=Brush.SelectionForeground, VS2019Dark=Brush.SelectionForeground, Win10Dark=Brush.SelectionForeground, Win10Light=Brush.SelectionForeground, Win11=Brush.Foreground.Muted'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowContentHighlight">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.HoverForeground, Office2019Colorful=Brush.HoverForeground, Office2019HighContrast=Brush.HoverForeground, VS2019Dark=Brush.HoverForeground, Win10Dark=Brush.HoverForeground, Win10Light=Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowDisabled">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.Foreground, Office2019Colorful=Brush.Foreground, Office2019HighContrast=Brush.Foreground, VS2019Dark=Brush.Foreground, Win10Dark=Brush.Foreground, Win10Light=Brush.Foreground, Win11=Brush.Foreground.Disabled'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowCustomization">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Focused, Office2019Black=Brush.Foreground, Office2019Colorful=Brush.Foreground, Office2019HighContrast=Brush.Foreground, VS2019Dark=Brush.Foreground, Win10Dark=Brush.Foreground, Win10Light=Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
        </dxi:RenderStateGroup>
        <dxi:RenderStateGroup Name="ContentForegroundColors">
            <dxi:RenderStateTrigger Name="ContentNormal">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.Foreground, Office2019Colorful=Brush.Foreground, Office2019HighContrast=Brush.Foreground, VS2019Dark=Brush.Foreground, Win10Dark=Brush.Foreground, Win10Light=Brush.Foreground, Win11=Brush.Foreground.Secondary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentHover">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.HoverForeground, Office2019Colorful=Brush.HoverForeground, Office2019HighContrast=Brush.Foreground, VS2019Dark=Brush.HoverForeground, Win10Dark=Brush.HoverForeground, Win10Light=Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentPressed">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.SelectionForeground, Office2019Colorful=Brush.SelectionForeground, Office2019HighContrast=Brush.SelectionForeground, VS2019Dark=Brush.SelectionForeground, Win10Dark=Brush.SelectionForeground, Win10Light=Brush.SelectionForeground, Win11=Brush.Foreground.Muted'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentChecked">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.SelectionForeground, Office2019Colorful=Brush.SelectionForeground, Office2019HighContrast=Brush.SelectionForeground, VS2019Dark=Brush.SelectionForeground, Win10Dark=Brush.SelectionForeground, Win10Light=Brush.SelectionForeground, Win11=Brush.Foreground.Alt'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentIndeterminate">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.HoverForeground, Office2019Colorful=Brush.HoverForeground, Office2019HighContrast=Brush.HoverForeground, VS2019Dark=Brush.HoverForeground, Win10Dark=Brush.HoverForeground, Win10Light=Brush.HoverForeground, Win11=Brush.Foreground.Secondary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentContentHighlight">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.HoverForeground, Office2019Colorful=Brush.HoverForeground, Office2019HighContrast=Brush.HoverForeground, VS2019Dark=Brush.HoverForeground, Win10Dark=Brush.HoverForeground, Win10Light=Brush.HoverForeground, Win11=Brush.Foreground.Secondary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentDisabled">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.Foreground, Office2019Colorful=Brush.Foreground, Office2019HighContrast=Brush.Foreground, Win10Dark=Brush.Foreground, Win10Light=Brush.Foreground, Win11=Brush.Foreground.Disabled'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentCustomization">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Focused, Office2019Black=Brush.Foreground, Office2019Colorful=Brush.Foreground, Office2019HighContrast=Brush.Foreground, VS2019Dark=Brush.Focused, Win10Dark=Brush.Focused, Win10Light=Brush.Focused, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
        </dxi:RenderStateGroup>
    </dxi:RenderTriggersCollection>

    <!-- Background -->

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.NormalBackgroundTemplateInPageHeader}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder Name="Border" BorderThickness="1" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.HoverBackgroundTemplateInPageHeader}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            Background="{dx:LWBrush 'Brush.Backstage.HoverBackground, Office2019Black=Brush.HoverBackground, Office2019Colorful=Brush.HoverAltBackground, Office2019HighContrast=Brush.HoverBackground, VS2019Dark=Brush.HoverBackground, Win10Dark=Brush.HoverBackground, Win10Light=Brush.HoverBackground, Win11=Brush.Button.HoverBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.Backstage.HoverBackground, Office2019Black=Brush.HoverBackground, Office2019Colorful=Brush.HoverAltBackground, Office2019HighContrast=Brush.HoverBackground, VS2019Dark=Brush.HoverBorder, Win10Dark=Brush.HoverBorder, Win10Light=Brush.HoverBorder, Win11=#00FFFFFF'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.PressedBackgroundTemplateInPageHeader}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            Background="{dx:LWBrush 'Brush.Backstage.SelectionBackground, Office2019Black=Brush.SelectionBackground, Office2019Colorful=Brush.SelectionAltBackground, Office2019HighContrast=Brush.SelectionBackground, VS2019Dark=Brush.SelectionBackground, Win10Dark=Brush.SelectionBackground, Win10Light=Brush.SelectionBackground, Win11=Brush.Button.PressedBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.Backstage.SelectionBackground, Office2019Black=Brush.SelectionBorder, Office2019Colorful=Brush.SelectionAltBorder, Office2019HighContrast=Brush.SelectionBorder, VS2019Dark=Brush.SelectionBorder, Win10Dark=Brush.SelectionBorder, Win10Light=Brush.SelectionBorder, Win11=#00FFFFFF'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.CheckedBackgroundTemplateInPageHeader}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            Background="{dx:LWBrush 'Brush.Backstage.SelectionBackground, Office2019Black=Brush.SelectionBackground, Office2019Colorful=Brush.SelectionAltBackground, Office2019HighContrast=Brush.SelectionBackground, VS2019Dark=Brush.SelectionBackground, Win10Dark=Brush.SelectionBackground, Win10Light=Brush.SelectionBackground, Win11=Brush.Button.CheckedBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.Backstage.SelectionBackground, Office2019Black=Brush.SelectionBorder, Office2019Colorful=Brush.SelectionAltBorder, Office2019HighContrast=Brush.SelectionBorder, VS2019Dark=Brush.SelectionBorder, Win10Dark=Brush.SelectionBorder, Win10Light=Brush.SelectionBorder, Win11=#00FFFFFF'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.IndeterminateBackgroundTemplateInPageHeader}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            Background="{dx:LWBrush 'Brush.Backstage.HoverBackground, Office2019Black=Brush.HoverBackground, Office2019Colorful=Brush.HoverAltBackground, Office2019HighContrast=Brush.HoverBackground, VS2019Dark=Brush.HoverBackground, Win10Dark=Brush.HoverBackground, Win10Light=Brush.HoverBackground, Win11=Brush.Button.HoverBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.Backstage.HoverBackground, Office2019Black=Brush.HoverBackground, Office2019Colorful=Brush.HoverAltBackground, Office2019HighContrast=Brush.HoverBackground, VS2019Dark=Brush.HoverBorder, Win10Dark=Brush.HoverBorder, Win10Light=Brush.HoverBorder, Win11=Brush.Accent'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.ContentHighlightTemplateInPageHeader}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            Background="{dx:LWBrush 'Brush.Backstage.HoverBackground, Office2019Black=Brush.HoverBackground, Office2019Colorful=Brush.HoverAltBackground, Office2019HighContrast=Brush.HoverBackground, VS2019Dark=Brush.HoverBackground, Win10Dark=Brush.HoverBackground, Win10Light=Brush.HoverBackground, Win11=Brush.Button.HoverBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.Backstage.HoverBackground, Office2019Black=Brush.HoverBackground, Office2019Colorful=Brush.HoverAltBackground, Office2019HighContrast=Brush.HoverBackground, VS2019Dark=Brush.HoverBorder, Win10Dark=Brush.HoverBorder, Win10Light=Brush.HoverBorder, Win11=#00FFFFFF'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}"
            Opacity="0.62" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.CustomizationBackgroundTemplateInPageHeader}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            BorderBrush="{dx:LWBrush 'Brush.Backstage.Focused, Office2019Black=Brush.Control.Background, Office2019Colorful=Brush.Control.Background, Office2019HighContrast=Brush.Control.Background, VS2019Dark=Brush.Focused, Win10=Brush.Focused, Win11=Brush.Accent'}"
            Background="{dx:LWBrush '#00FFFFFF, Win10=Brush.Focused'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
    </dxi:RenderTemplate>

    <!-- Thickness -->

    <dxi:RenderStylesCollection x:Key="{dxt:LWKey BarItemRender.TemplateInPageHeaderStyles}">
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderBorder#PART_Root'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,1,1" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_Background'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_Container'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="6,6,0,6" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Glyph'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,6,0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,6,0" />
        </dxi:RenderStyle>
        <dxi:RenderStylesCollection.Triggers>
            <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxi:AppearanceOptions.MarginProperty}" TargetName="PART_Root" TargetProperty="Margin">
                <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasMarginProperty}" Value="True" />
            </dxi:ConditionalRenderBinding>
        </dxi:RenderStylesCollection.Triggers>
    </dxi:RenderStylesCollection>

    <dxi:RenderStylesCollection x:Key="{dxt:LWKey BarItemRender.SplitTemplateInPageHeaderStyles}" BasedOn="{StaticResource {dxt:LWKey BarItemRender.TemplateInPageHeaderStyles}}">
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderBorder#PART_Root'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,1,1" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_Background'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_Container'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="6" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Glyph'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_ContentContainer'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_ContentBackground'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_PathArrowContainer'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="3" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PATH_ArrowBackground'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_ArrowContainer'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
    </dxi:RenderStylesCollection>

    <dxi:RenderStylesCollection x:Key="{dxt:LWKey BarItemRender.EditTemplateInPageHeaderStyles}" BasedOn="{StaticResource {dxt:LWKey BarItemRender.TemplateInPageHeaderStyles}}">
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderBorder#PART_Root'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,1,1" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_Background'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_Container'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="6,0,0,0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Glyph'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,6,0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,6,0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_ContentContainer'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,3,6,3" />
            <dxi:RenderStyleSetter TargetProperty="MinHeight" Value="22" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Editor'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,6,0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content2'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,6,0" />
        </dxi:RenderStyle>
    </dxi:RenderStylesCollection>

    <dxi:RenderStylesCollection x:Key="{dxt:LWKey BarItemRender.StaticTemplateInPageHeaderStyles}" BasedOn="{StaticResource {dxt:LWKey BarItemRender.TemplateInPageHeaderStyles}}" />
    <!--#endregion Base\Core\Core\Bars\Themes\Base\RenderTemplates\RibbonPageHeader.xaml-->

    <!--#region Base\Core\Core\Bars\Themes\Base\RenderTemplates\RibbonQuickAccessToolbar.xaml-->
    <!-- General -->

    <dxi:RenderTriggersCollection x:Key="{dxt:LWKey BarItemRender.ForegroundColorStatesInRibbonToolBar}">
        <dxi:RenderStateGroup Name="ArrowForegroundColors">
            <dxi:RenderStateTrigger Name="ArrowNormal">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019HighContrast=Brush.Foreground, VS2019Dark=Brush.Foreground, Win10Dark=Brush.Foreground, Win10Light=Brush.Foreground, Win11=Brush.Foreground.Secondary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowHover">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019HighContrast=Brush.HoverForeground, VS2019Blue=Brush.HoverForeground, VS2019Dark=Brush.HoverForeground, Win10Dark=Brush.HoverForeground, Win10Light=Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowPressed">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019HighContrast=Brush.SelectionForeground, VS2019Blue=Brush.SelectionForeground, VS2019Dark=Brush.SelectionForeground, Win10Dark=Brush.SelectionForeground, Win10Light=Brush.SelectionForeground, Win11=Brush.Foreground.Muted'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowContentHighlight">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019HighContrast=Brush.HoverForeground, VS2019Blue=Brush.HoverForeground, VS2019Dark=Brush.HoverForeground, Win10Dark=Brush.HoverForeground, Win10Light=Brush.HoverForeground, Win11=Brush.Foreground.Secondary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowDisabled">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019HighContrast=Brush.Foreground, VS2019Dark=Brush.Foreground, Win10Dark=Brush.Foreground, Win10Light=Brush.Foreground, Win11=Brush.Foreground.Disabled'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowCustomization">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Focused, Office2019HighContrast=Brush.Foreground, VS2019Dark=Brush.Foreground, Win10Dark=Brush.Focused, Win10Light=Brush.Focused'}" />
            </dxi:RenderStateTrigger>
        </dxi:RenderStateGroup>
        <dxi:RenderStateGroup Name="ContentForegroundColors">
            <dxi:RenderStateTrigger Name="ContentNormal">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019HighContrast=Brush.Foreground, VS2019Dark=Brush.Foreground, Win10Dark=Brush.Foreground, Win10Light=Brush.Foreground, Win11=Brush.Foreground.Secondary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentHover">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019HighContrast=Brush.HoverForeground, VS2019Dark=Brush.HoverForeground, Win10Dark=Brush.HoverForeground, Win10Light=Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentPressed">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019HighContrast=Brush.SelectionForeground, VS2019Dark=Brush.SelectionForeground, Win10Dark=Brush.SelectionForeground, Win10Light=Brush.SelectionForeground, Win11=Brush.Foreground.Muted'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentChecked">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019HighContrast=Brush.SelectionForeground, VS2019Dark=Brush.SelectionForeground, Win10Dark=Brush.SelectionForeground, Win10Light=Brush.SelectionForeground, Win11=Brush.Foreground.Alt'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentIndeterminate">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019HighContrast=Brush.HoverForeground, VS2019Dark=Brush.HoverForeground, Win10Dark=Brush.HoverForeground, Win10Light=Brush.HoverForeground, Win11=Brush.Foreground.Secondary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentContentHighlight">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019HighContrast=Brush.HoverForeground, VS2019Dark=Brush.HoverForeground, Win10Dark=Brush.HoverForeground, Win10Light=Brush.HoverForeground, Win11=Brush.Foreground.Secondary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentDisabled">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019HighContrast=Brush.Foreground, Win10Dark=Brush.Foreground, Win10Light=Brush.Foreground, Win11=Brush.Foreground.Disabled'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentCustomization">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Focused, Office2019HighContrast=Brush.Focused, VS2019Dark=Brush.Focused, Win10Dark=Brush.Focused, Win10Light=Brush.Focused'}" />
            </dxi:RenderStateTrigger>
        </dxi:RenderStateGroup>
    </dxi:RenderTriggersCollection>

    <!-- Edit -->

    <dxi:RenderTriggersCollection x:Key="{dxt:LWKey BarItemRender.EditForegroundColorStatesInRibbonToolBar}">
        <dxi:RenderStateGroup Name="ArrowForegroundColors">
            <dxi:RenderStateTrigger Name="ArrowNormal">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019HighContrast=Brush.Foreground, VS2019Dark=Brush.Foreground, Win10Dark=Brush.Foreground, Win10Light=Brush.Foreground, Win11=Brush.Foreground.Secondary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowHover">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019HighContrast=Brush.HoverForeground, VS2019Dark=Brush.HoverForeground, Win10Dark=Brush.HoverForeground, Win10Light=Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowPressed">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019HighContrast=Brush.SelectionForeground, VS2019Dark=Brush.SelectionForeground, Win10Dark=Brush.SelectionForeground, Win10Light=Brush.SelectionForeground, Win11=Brush.Foreground.Muted'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowContentHighlight">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019HighContrast=Brush.HoverForeground, VS2019Dark=Brush.HoverForeground, Win10Dark=Brush.HoverForeground, Win10Light=Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowDisabled">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019HighContrast=Brush.Foreground, VS2019Dark=Brush.Foreground, Win10Dark=Brush.Foreground, Win10Light=Brush.Foreground, Win11=Brush.Foreground.Disabled'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowCustomization">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Focused, Office2019HighContrast=Brush.Foreground, VS2019Dark=Brush.Foreground, Win10Dark=Brush.Focused, Win10Light=Brush.Focused, Win11=Brush.Foreground.Secondary'}" />
            </dxi:RenderStateTrigger>
        </dxi:RenderStateGroup>
        <dxi:RenderStateGroup Name="ContentForegroundColors">
            <dxi:RenderStateTrigger Name="ContentNormal">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019HighContrast=Brush.Foreground, VS2019Dark=Brush.Foreground, Win10Dark=Brush.Foreground, Win10Light=Brush.Foreground, Win11=Brush.Foreground.Secondary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentHover">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019HighContrast=Brush.Foreground, VS2019Dark=Brush.HoverForeground, Win10Dark=Brush.HoverForeground, Win10Light=Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentPressed">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019HighContrast=Brush.SelectionForeground, VS2019Dark=Brush.SelectionForeground, Win10Dark=Brush.SelectionForeground, Win10Light=Brush.SelectionForeground, Win11=Brush.Foreground.Muted'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentChecked">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019HighContrast=Brush.SelectionForeground, VS2019Dark=Brush.SelectionForeground, Win10Dark=Brush.SelectionForeground, Win10Light=Brush.SelectionForeground, Win11=Brush.Foreground.Alt'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentIndeterminate">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019HighContrast=Brush.HoverForeground, VS2019Dark=Brush.HoverForeground, Win10Dark=Brush.HoverForeground, Win10Light=Brush.HoverForeground, Win11=Brush.Foreground.Secondary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentContentHighlight">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019HighContrast=Brush.HoverForeground, VS2019Dark=Brush.HoverForeground, Win10Dark=Brush.HoverForeground, Win10Light=Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentDisabled">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019HighContrast=Brush.Foreground, Win10Dark=Brush.Foreground, Win10Light=Brush.Foreground, Win11=Brush.Foreground.Disabled'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentCustomization">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Focused, Office2019HighContrast=Brush.Focused, VS2019Dark=Brush.Focused, Win10Dark=Brush.Focused, Win10Light=Brush.Focused, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
        </dxi:RenderStateGroup>
    </dxi:RenderTriggersCollection>

    <!-- Background -->

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.NormalBackgroundTemplateInRibbonToolBar}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder Name="Border" BorderThickness="1" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.HoverBackgroundTemplateInRibbonToolBar}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            Background="{dx:LWBrush 'Brush.Backstage.HoverBackground, VS2019Dark=Brush.HoverBackground, Win10Dark=Brush.HoverBackground, Win10Light=Brush.HoverBackground, Win11=Brush.Button.HoverBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.Backstage.HoverBackground, VS2019Dark=Brush.HoverBorder, Win10Dark=Brush.HoverBorder, Win10Light=Brush.HoverBorder, Win11=#00FFFFFF'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.PressedBackgroundTemplateInRibbonToolBar}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            Background="{dx:LWBrush 'Brush.Backstage.SelectionBackground, VS2019Dark=Brush.SelectionBackground, Win10Dark=Brush.SelectionBackground, Win10Light=Brush.SelectionBackground, Win11=Brush.Button.PressedBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.Backstage.SelectionBackground, VS2019Dark=Brush.SelectionBorder, Win10Dark=Brush.SelectionBorder, Win10Light=Brush.SelectionBorder, Win11=#00FFFFFF'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.CheckedBackgroundTemplateInRibbonToolBar}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            Background="{dx:LWBrush 'Brush.Backstage.SelectionBackground, VS2019Dark=Brush.SelectionBackground, Win10Dark=Brush.SelectionBackground, Win10Light=Brush.SelectionBackground, Win11=Brush.Button.CheckedBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.Backstage.SelectionBackground, VS2019Dark=Brush.SelectionBorder, Win10Dark=Brush.SelectionBorder, Win10Light=Brush.SelectionBorder, Win11=#00FFFFFF'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.ContentHighlightTemplateInRibbonToolBar}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            Background="{dx:LWBrush 'Brush.Backstage.HoverBackground, VS2019Dark=Brush.HoverBackground, Win10Dark=Brush.HoverBackground, Win10Light=Brush.HoverBackground, Win11=Brush.Button.HoverBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.Backstage.HoverBackground, VS2019Dark=Brush.HoverBorder, Win10Dark=Brush.HoverBorder, Win10Light=Brush.HoverBorder, Win11=Brush.Transparent'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}"
            Opacity="0.62" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.IndeterminateBackgroundTemplateInRibbonToolBar}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            Background="{dx:LWBrush 'Brush.Backstage.HoverBackground, VS2019Dark=Brush.HoverBackground, Win10Dark=Brush.HoverBackground, Win10Light=Brush.HoverBackground, Win11=Brush.Button.HoverBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.Backstage.HoverBackground, VS2019Dark=Brush.HoverBorder, Win10Dark=Brush.HoverBorder, Win10Light=Brush.HoverBorder, Win11=Brush.Accent'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.CustomizationBackgroundTemplateInRibbonToolBar}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            Background="{dx:LWBrush '#00FFFFFF, Win10=Brush.Focused'}"
            BorderBrush="{dx:LWBrush 'Brush.Backstage.Focused, VS2019Dark=Brush.Focused, Win10Dark=Brush.Focused, Win10Light=Brush.Focused, Win11=Brush.Accent'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
    </dxi:RenderTemplate>

    <!-- Thickness -->

    <dxi:RenderStylesCollection x:Key="{dxt:LWKey BarItemRender.TemplateInRibbonToolBarStyles}">
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderBorder#PART_Root'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,1,1" />
            <dxi:RenderStyleSetter TargetProperty="ShouldCalcDpiAwareThickness" Value="False" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_Background'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_Container'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="6,6,0,6" />
            <dxi:RenderStyleSetter TargetProperty="ShouldCalcDpiAwareThickness" Value="False" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Glyph'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,6,0" />
            <dxi:RenderStyleSetter TargetProperty="ShouldCalcDpiAwareThickness" Value="False" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,6,0" />
            <dxi:RenderStyleSetter TargetProperty="ShouldCalcDpiAwareThickness" Value="False" />
        </dxi:RenderStyle>
        <dxi:RenderStylesCollection.Triggers>
            <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxi:AppearanceOptions.MarginProperty}" TargetName="PART_Root" TargetProperty="Margin">
                <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasMarginProperty}" Value="True" />
            </dxi:ConditionalRenderBinding>
        </dxi:RenderStylesCollection.Triggers>
    </dxi:RenderStylesCollection>

    <dxi:RenderStylesCollection x:Key="{dxt:LWKey BarItemRender.SplitTemplateInRibbonToolBarStyles}">
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderBorder#PART_Root'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,1,1" />
            <dxi:RenderStyleSetter TargetProperty="ShouldCalcDpiAwareThickness" Value="False" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_Background'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_Container'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="6" />
            <dxi:RenderStyleSetter TargetProperty="ShouldCalcDpiAwareThickness" Value="False" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Glyph'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_ContentContainer'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_ContentBackground'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_PathArrowContainer'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="3" />
            <dxi:RenderStyleSetter TargetProperty="ShouldCalcDpiAwareThickness" Value="False" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PATH_ArrowBackground'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_ArrowContainer'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStylesCollection.Triggers>
            <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxi:AppearanceOptions.MarginProperty}" TargetName="PART_Root" TargetProperty="Margin">
                <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasMarginProperty}" Value="True" />
            </dxi:ConditionalRenderBinding>
        </dxi:RenderStylesCollection.Triggers>
    </dxi:RenderStylesCollection>

    <dxi:RenderStylesCollection x:Key="{dxt:LWKey BarItemRender.EditTemplateInRibbonToolBarStyles}">
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderBorder#PART_Root'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,1,1" />
            <dxi:RenderStyleSetter TargetProperty="ShouldCalcDpiAwareThickness" Value="False" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_Background'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_Container'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="6,0,0,0" />
            <dxi:RenderStyleSetter TargetProperty="ShouldCalcDpiAwareThickness" Value="False" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Glyph'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,6,0" />
            <dxi:RenderStyleSetter TargetProperty="ShouldCalcDpiAwareThickness" Value="False" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,6,0" />
            <dxi:RenderStyleSetter TargetProperty="ShouldCalcDpiAwareThickness" Value="False" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_ContentContainer'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,3,6,3" />
            <dxi:RenderStyleSetter TargetProperty="MinHeight" Value="22" />
            <dxi:RenderStyleSetter TargetProperty="ShouldCalcDpiAwareThickness" Value="False" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Editor'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,6,0" />
            <dxi:RenderStyleSetter TargetProperty="ShouldCalcDpiAwareThickness" Value="False" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content2'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,6,0" />
            <dxi:RenderStyleSetter TargetProperty="ShouldCalcDpiAwareThickness" Value="False" />
        </dxi:RenderStyle>
    </dxi:RenderStylesCollection>

    <dxi:RenderStylesCollection x:Key="{dxt:LWKey BarItemRender.StaticTemplateInRibbonToolBarStyles}" BasedOn="{StaticResource {dxt:LWKey BarItemRender.TemplateInRibbonToolBarStyles}}" />
    <!--#endregion Base\Core\Core\Bars\Themes\Base\RenderTemplates\RibbonQuickAccessToolbar.xaml-->

    <!--#region Base\Core\Core\Bars\Themes\Base\RenderTemplates\RibbonQuickAccessToolbarFooter.xaml-->
    <!-- General -->

    <dxi:RenderTriggersCollection x:Key="{dxt:LWKey BarItemRender.ForegroundColorStatesInRibbonToolBarFooter}">
        <dxi:RenderStateGroup Name="ArrowForegroundColors">
            <dxi:RenderStateTrigger Name="ArrowNormal">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowHover">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowPressed">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.SelectionForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowChecked">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.SelectionForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowContentHighlight">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowDisabled">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowCustomization">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Focused, Win11=Brush.Accent'}" />
            </dxi:RenderStateTrigger>
        </dxi:RenderStateGroup>
        <dxi:RenderStateGroup Name="ContentForegroundColors">
            <dxi:RenderStateTrigger Name="ContentNormal">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentHover">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentPressed">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.SelectionForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentChecked">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.SelectionForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentIndeterminate">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentContentHighlight">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentDisabled">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentCustomization">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Focused, Win11=Brush.Accent'}" />
            </dxi:RenderStateTrigger>
        </dxi:RenderStateGroup>
    </dxi:RenderTriggersCollection>

    <!-- Edit -->

    <dxi:RenderTriggersCollection x:Key="{dxt:LWKey BarItemRender.EditForegroundColorStatesInRibbonToolBarFooter}">
        <dxi:RenderStateGroup Name="ArrowForegroundColors">
            <dxi:RenderStateTrigger Name="ArrowNormal">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowHover">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowPressed">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.SelectionForeground, Win11=Brush.Foreground.Muted'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowContentHighlight">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowDisabled">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Disabled'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowCustomization">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Focused, Win11=Brush.Accent'}" />
            </dxi:RenderStateTrigger>
        </dxi:RenderStateGroup>
        <dxi:RenderStateGroup Name="ContentForegroundColors">
            <dxi:RenderStateTrigger Name="ContentNormal">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentHover">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Office2019HighContrast=Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentPressed">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.SelectionForeground, Win11=Brush.Foreground.Muted'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentChecked">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.SelectionForeground, Win11=Brush.Foreground.Alt'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentIndeterminate">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentContentHighlight">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentDisabled">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Disabled'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentCustomization">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Focused, Win11=Brush.Accent'}" />
            </dxi:RenderStateTrigger>
        </dxi:RenderStateGroup>
    </dxi:RenderTriggersCollection>

    <!-- Background -->

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.NormalBackgroundTemplateInRibbonToolBarFooter}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder Name="Border" BorderThickness="1" CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.HoverBackgroundTemplateInRibbonToolBarFooter}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            Background="{dx:LWBrush 'Brush.HoverBackground, Office2019Colorful=Brush.HoverAltBackground, VS2019Blue=Brush.ControlDark.HoverBackground, Win11=Brush.Button.HoverBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.HoverBorder, Office2019Colorful=Brush.HoverAltBorder, VS2019Blue=Brush.ControlDark.HoverBorder, Win11=#00FFFFFF'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.PressedBackgroundTemplateInRibbonToolBarFooter}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            Background="{dx:LWBrush 'Brush.SelectionBackground, Office2019Colorful=Brush.SelectionAltBackground, VS2019Blue=Brush.ControlDark.SelectionBackground, Win11=Brush.Button.PressedBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.SelectionBorder, Office2019Colorful=Brush.SelectionAltBorder, VS2019Blue=Brush.ControlDark.SelectionBorder, Win11=#00FFFFFF'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.CheckedBackgroundTemplateInRibbonToolBarFooter}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            Background="{dx:LWBrush 'Brush.SelectionBackground, Office2019Colorful=Brush.SelectionAltBackground, VS2019Blue=Brush.ControlDark.SelectionBackground, VS2019Dark=#00000000, Win11=Brush.Button.CheckedBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.SelectionBorder, Office2019Colorful=Brush.SelectionAltBorder, VS2019Blue=Brush.ControlDark.SelectionBorder, Win11=#00FFFFFF'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.ContentHighlightTemplateInRibbonToolBarFooter}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            Background="{dx:LWBrush 'Brush.HoverBackground, Office2019Colorful=Brush.HoverAltBackground, VS2019Blue=Brush.ControlDark.HoverBackground, Win11=Brush.Button.HoverBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.HoverBorder, Office2019Colorful=Brush.HoverAltBorder, VS2019Blue=Brush.ControlDark.HoverBorder, Win11=#00FFFFFF'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}"
            Opacity="0.62" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.IndeterminateBackgroundTemplateInRibbonToolBarFooter}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            Background="{dx:LWBrush 'Brush.HoverBackground, Office2019Colorful=Brush.HoverAltBackground, VS2019Blue=Brush.ControlDark.HoverBackground, Win11=Brush.Button.HoverBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.HoverBorder, Office2019Colorful=Brush.HoverAltBorder, VS2019Blue=Brush.ControlDark.HoverBorder, Win11=#00FFFFFF'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.CustomizationBackgroundTemplateInRibbonToolBarFooter}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder Name="Border" BorderBrush="{dx:LWBrush 'Brush.Focused, Win11=Brush.Accent'}" CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
    </dxi:RenderTemplate>

    <!-- Thickness -->

    <dxi:RenderStylesCollection x:Key="{dxt:LWKey BarItemRender.TemplateInRibbonToolBarFooterStyles}">
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderBorder#PART_Root'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,1,1" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_Background'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_Container'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="6,6,0,6" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Glyph'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,6,0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,6,0" />
        </dxi:RenderStyle>
        <dxi:RenderStylesCollection.Triggers>
            <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxi:AppearanceOptions.MarginProperty}" TargetName="PART_Root" TargetProperty="Margin">
                <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasMarginProperty}" Value="True" />
            </dxi:ConditionalRenderBinding>
        </dxi:RenderStylesCollection.Triggers>
    </dxi:RenderStylesCollection>

    <dxi:RenderStylesCollection x:Key="{dxt:LWKey BarItemRender.SplitTemplateInRibbonToolBarFooterStyles}">
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderBorder#PART_Root'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,1,1" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_Background'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_Container'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="6" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Glyph'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_ContentContainer'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_ContentBackground'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_PathArrowContainer'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="3" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PATH_ArrowBackground'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_ArrowContainer'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStylesCollection.Triggers>
            <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxi:AppearanceOptions.MarginProperty}" TargetName="PART_Root" TargetProperty="Margin">
                <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasMarginProperty}" Value="True" />
            </dxi:ConditionalRenderBinding>
        </dxi:RenderStylesCollection.Triggers>
    </dxi:RenderStylesCollection>

    <dxi:RenderStylesCollection x:Key="{dxt:LWKey BarItemRender.EditTemplateInRibbonToolBarFooterStyles}">
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderBorder#PART_Root'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,1,1" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_Background'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_Container'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="6,0,0,0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Glyph'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,6,0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,6,0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_ContentContainer'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,3,6,3" />
            <dxi:RenderStyleSetter TargetProperty="MinHeight" Value="22" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Editor'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,6,0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content2'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,6,0" />
        </dxi:RenderStyle>
        <dxi:RenderStylesCollection.Triggers>
            <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxi:AppearanceOptions.MarginProperty}" TargetName="PART_Root" TargetProperty="Margin">
                <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasMarginProperty}" Value="True" />
            </dxi:ConditionalRenderBinding>
        </dxi:RenderStylesCollection.Triggers>
    </dxi:RenderStylesCollection>

    <dxi:RenderStylesCollection x:Key="{dxt:LWKey BarItemRender.StaticTemplateInRibbonToolBarFooterStyles}" BasedOn="{StaticResource {dxt:LWKey BarItemRender.TemplateInRibbonToolBarFooterStyles}}" />
    <!--#endregion Base\Core\Core\Bars\Themes\Base\RenderTemplates\RibbonQuickAccessToolbarFooter.xaml-->

    <!--#region Base\Core\Core\Bars\Themes\Base\RenderTemplates\RibbonStatusBar.xaml-->
    <!-- General -->

    <dxi:RenderTriggersCollection x:Key="{dxt:LWKey BarItemRender.ForegroundColorStatesInRibbonStatusBar}">
        <dxi:RenderStateGroup Name="ArrowForegroundColors">
            <dxi:RenderStateTrigger Name="ArrowNormal">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.Foreground, Office2019Colorful=Brush.Foreground, Office2019HighContrast=Brush.Foreground, Win10Dark=Brush.Foreground, Win10Light=Brush.Foreground, Win11=Brush.Foreground.Secondary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowHover">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.HoverForeground, Office2019Colorful=Brush.HoverForeground, Office2019HighContrast=Brush.HoverForeground, VS2019Blue=Brush.HoverForeground, Win10Dark=Brush.HoverForeground, Win10Light=Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowPressed">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.SelectionForeground, Office2019Colorful=Brush.SelectionForeground, Office2019HighContrast=Brush.SelectionForeground, VS2019Blue=Brush.SelectionForeground, Win10Dark=Brush.SelectionForeground, Win10Light=Brush.SelectionForeground, Win11=Brush.Foreground.Muted'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowChecked">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.SelectionForeground, Office2019Colorful=Brush.SelectionForeground, Office2019HighContrast=Brush.SelectionForeground, VS2019Blue=Brush.SelectionForeground, Win10Dark=Brush.SelectionForeground, Win10Light=Brush.SelectionForeground, Win11=Brush.Foreground.Alt'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowContentHighlight">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.HoverForeground, Office2019Colorful=Brush.HoverForeground, Office2019HighContrast=Brush.HoverForeground, VS2019Blue=Brush.HoverForeground, Win10Dark=Brush.Foreground, Win10Light=Brush.Foreground, Win11=Brush.Foreground.Secondary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowDisabled">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.Foreground, Office2019Colorful=Brush.Foreground, Office2019HighContrast=Brush.Foreground, Win10Dark=Brush.Foreground, Win10Light=Brush.Foreground, Win11=Brush.Foreground.Disabled'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowCustomization">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Focused, Office2019Black=Brush.Focused, Office2019Colorful=Brush.Focused, Office2019HighContrast=Brush.Focused, Win10Dark=Brush.Focused, Win10Light=Brush.Focused, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
        </dxi:RenderStateGroup>
        <dxi:RenderStateGroup Name="ContentForegroundColors">
            <dxi:RenderStateTrigger Name="ContentNormal">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.Foreground, Office2019Colorful=Brush.Foreground, Office2019HighContrast=Brush.Foreground, Win10Dark=Brush.Foreground, Win10Light=Brush.Foreground, Win11=Brush.Foreground.Secondary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentHover">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.HoverForeground, Office2019Colorful=Brush.HoverForeground, Office2019HighContrast=Brush.HoverForeground, VS2019Blue=Brush.HoverForeground, Win10Dark=Brush.Foreground, Win10Light=Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentPressed">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.SelectionForeground, Office2019Colorful=Brush.SelectionForeground, Office2019HighContrast=Brush.SelectionForeground, VS2019Blue=Brush.SelectionForeground, Win10Dark=Brush.Foreground, Win10Light=Brush.Foreground, Win11=Brush.Foreground.Muted'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentChecked">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.HoverForeground, Office2019Colorful=Brush.SelectionForeground, Office2019HighContrast=Brush.SelectionForeground, VS2019Blue=Brush.SelectionForeground, Win10Dark=Brush.Foreground, Win10Light=Brush.Foreground, Win11=Brush.Foreground.Alt'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentIndeterminate">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.HoverForeground, Office2019Colorful=Brush.HoverForeground, Office2019HighContrast=Brush.HoverForeground, Win10Dark=Brush.HoverForeground, Win10Light=Brush.HoverForeground, Win11=Brush.Foreground.Secondary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentContentHighlight">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.HoverForeground, Office2019Colorful=Brush.HoverForeground, Office2019HighContrast=Brush.HoverForeground, VS2019Blue=Brush.HoverForeground, Win10Dark=Brush.HoverForeground, Win10Light=Brush.HoverForeground, Win11=Brush.Foreground.Secondary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentDisabled">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.Foreground, Office2019Colorful=Brush.Foreground, Office2019HighContrast=Brush.Foreground, Win10Dark=Brush.Foreground, Win10Light=Brush.Foreground, Win11=Brush.Foreground.Disabled'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentCustomization">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Focused, Office2019Black=Brush.Focused, Office2019Colorful=Brush.Focused, Office2019HighContrast=Brush.Focused, Win10Dark=Brush.Focused, Win10Light=Brush.Focused, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
        </dxi:RenderStateGroup>
    </dxi:RenderTriggersCollection>

    <!-- Edit -->

    <dxi:RenderTriggersCollection x:Key="{dxt:LWKey BarItemRender.EditForegroundColorStatesInRibbonStatusBar}">
        <dxi:RenderStateGroup Name="ArrowForegroundColors">
            <dxi:RenderStateTrigger Name="ArrowNormal">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.Foreground, Office2019Colorful=Brush.Foreground, Office2019HighContrast=Brush.Foreground, Win10Dark=Brush.Foreground, Win10Light=Brush.Foreground, Win11=Brush.Foreground.Secondary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowHover">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.HoverForeground, Office2019Colorful=Brush.HoverForeground, Office2019HighContrast=Brush.HoverForeground, Win10Dark=Brush.HoverForeground, Win10Light=Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowPressed">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.SelectionForeground, Office2019Colorful=Brush.SelectionForeground, Office2019HighContrast=Brush.SelectionForeground, Win10Dark=Brush.SelectionForeground, Win10Light=Brush.SelectionForeground, Win11=Brush.Foreground.Muted'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowContentHighlight">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.HoverForeground, Office2019Colorful=Brush.HoverForeground, Office2019HighContrast=Brush.HoverForeground, Win10Dark=Brush.HoverForeground, Win10Light=Brush.HoverForeground, Win11=Brush.Foreground.Secondary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowDisabled">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.Foreground, Office2019Colorful=Brush.Foreground, Office2019HighContrast=Brush.Foreground, Win10Dark=Brush.Foreground, Win10Light=Brush.Foreground, Win11=Brush.Foreground.Muted'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowCustomization">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Focused, Office2019Black=Brush.Focused, Office2019Colorful=Brush.Focused, Office2019HighContrast=Brush.Focused, Win10Dark=Brush.Focused, Win10Light=Brush.Focused, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
        </dxi:RenderStateGroup>
        <dxi:RenderStateGroup Name="ContentForegroundColors">
            <dxi:RenderStateTrigger Name="ContentNormal">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.Foreground, Office2019Colorful=Brush.Foreground, Office2019HighContrast=Brush.Foreground, Win10Dark=Brush.Foreground, Win10Light=Brush.Foreground, Win11=Brush.Foreground.Secondary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentHover">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.HoverForeground, Office2019Colorful=Brush.HoverForeground, Office2019HighContrast=Brush.Foreground, Win10Dark=Brush.HoverForeground, Win10Light=Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentPressed">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.SelectionForeground, Office2019Colorful=Brush.SelectionForeground, Office2019HighContrast=Brush.SelectionForeground, Win10Dark=Brush.SelectionForeground, Win10Light=Brush.SelectionForeground, Win11=Brush.Foreground.Muted'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentChecked">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.HoverForeground, Office2019Colorful=Brush.SelectionForeground, Office2019HighContrast=Brush.SelectionForeground, Win10Dark=Brush.SelectionForeground, Win10Light=Brush.SelectionForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentIndeterminate">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.HoverForeground, Office2019Colorful=Brush.HoverForeground, Office2019HighContrast=Brush.HoverForeground, Win10Dark=Brush.HoverForeground, Win10Light=Brush.HoverForeground, Win11=Brush.Foreground.Secondary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentContentHighlight">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.HoverForeground, Office2019Colorful=Brush.HoverForeground, Office2019HighContrast=Brush.HoverForeground, Win10Dark=Brush.HoverForeground, Win10Light=Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentDisabled">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.Foreground, Office2019Colorful=Brush.Foreground, Office2019HighContrast=Brush.Foreground, Win10Dark=Brush.Foreground, Win10Light=Brush.Foreground, Win11=Brush.Foreground.Disabled'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentCustomization">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Backstage.Focused, Office2019Black=Brush.Focused, Office2019Colorful=Brush.Focused, Office2019HighContrast=Brush.Focused, Win10Dark=Brush.Focused, Win10Light=Brush.Focused, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
        </dxi:RenderStateGroup>
    </dxi:RenderTriggersCollection>

    <!-- Background -->

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.NormalBackgroundTemplateInRibbonStatusBar}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder Name="Border" BorderThickness="1" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.HoverBackgroundTemplateInRibbonStatusBar}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            Background="{dx:LWBrush 'Brush.Backstage.HoverBackground, Office2019Colorful=Brush.HoverAltBackground, Office2019HighContrast=Brush.HoverBackground, Win10Dark=Brush.HoverBackground, Win10Light=Brush.HoverBackground, Win11=Brush.Button.HoverBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.Backstage.HoverBackground, Office2019Colorful=Brush.HoverAltBorder, Office2019HighContrast=Brush.HoverBorder, Win10Dark=Brush.HoverBorder, Win10Light=Brush.HoverBorder, Win11=#00FFFFFF'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.PressedBackgroundTemplateInRibbonStatusBar}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            Background="{dx:LWBrush 'Brush.Backstage.SelectionBackground, Office2019Colorful=Brush.SelectionAltBackground, Office2019HighContrast=Brush.SelectionBackground, Win10Dark=Brush.SelectionBackground, Win10Light=Brush.SelectionBackground, Win11=Brush.Button.PressedBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.Backstage.SelectionBackground, Office2019Colorful=Brush.SelectionAltBorder, Office2019HighContrast=Brush.SelectionBorder, Win10Dark=Brush.SelectionBorder, Win10Light=Brush.SelectionBorder, Win11=#00FFFFFF'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.CheckedBackgroundTemplateInRibbonStatusBar}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            Background="{dx:LWBrush 'Brush.Backstage.SelectionBackground, Office2019Colorful=Brush.SelectionAltBackground, Office2019HighContrast=Brush.SelectionBackground, Win10Dark=Brush.SelectionBackground, Win10Light=Brush.SelectionBackground, Win11=Brush.Button.CheckedBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.Backstage.SelectionBackground, Office2019Colorful=Brush.SelectionAltBorder, Office2019HighContrast=Brush.SelectionBorder, Win10Dark=Brush.SelectionBorder, Win10Light=Brush.SelectionBorder, Win11=#00FFFFFF'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.IndeterminateBackgroundTemplateInRibbonStatusBar}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            Background="{dx:LWBrush 'Brush.Backstage.HoverBackground, Office2019Colorful=Brush.HoverAltBackground, Office2019HighContrast=Brush.HoverBackground, Win11=Brush.Button.HoverBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.Backstage.HoverBackground, Office2019Colorful=Brush.HoverAltBorder, Office2019HighContrast=Brush.HoverBorder, Win11=Brush.Accent'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.ContentHighlightTemplateInRibbonStatusBar}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            Background="{dx:LWBrush 'Brush.Backstage.HoverBackground, Office2019Colorful=Brush.HoverAltBackground, Office2019HighContrast=Brush.HoverBackground, Win10Dark=Brush.HoverBackground, Win10Light=Brush.HoverBackground, Win11=Brush.Button.HoverBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.Backstage.HoverBackground, Office2019Colorful=Brush.HoverAltBorder, Office2019HighContrast=Brush.HoverBorder, Win10Dark=Brush.HoverBorder, Win10Light=Brush.HoverBorder, Win11=#00FFFFFF'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}"
            Opacity="0.62" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.CustomizationBackgroundTemplateInRibbonStatusBar}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder Name="Border" BorderBrush="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Colorful=Brush.Focused, Office2019HighContrast=Brush.Focused, Win10Dark=Brush.Focused, Win10Light=Brush.Focused, Win11=Brush.Accent'}" CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
    </dxi:RenderTemplate>

    <!-- Thickness -->

    <dxi:RenderStylesCollection x:Key="{dxt:LWKey BarItemRender.TemplateInRibbonStatusBarStyles}">
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderBorder#PART_Root'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,1,1" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_Background'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_Container'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="3,3,0,3" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Glyph'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,3,0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,3,0" />
        </dxi:RenderStyle>
        <dxi:RenderStylesCollection.Triggers>
            <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxi:AppearanceOptions.MarginProperty}" TargetName="PART_Root" TargetProperty="Margin">
                <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasMarginProperty}" Value="True" />
            </dxi:ConditionalRenderBinding>
        </dxi:RenderStylesCollection.Triggers>
    </dxi:RenderStylesCollection>

    <dxi:RenderStylesCollection x:Key="{dxt:LWKey BarItemRender.SplitTemplateInRibbonStatusBarStyles}" BasedOn="{StaticResource {dxt:LWKey BarItemRender.TemplateInRibbonStatusBarStyles}}">
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderBorder#PART_Root'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,1,1" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_Background'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_Container'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="3" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Glyph'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_ContentContainer'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_ContentBackground'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_PathArrowContainer'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="3,4,3,3" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PATH_ArrowBackground'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_ArrowContainer'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
    </dxi:RenderStylesCollection>

    <dxi:RenderStylesCollection x:Key="{dxt:LWKey BarItemRender.EditTemplateInRibbonStatusBarStyles}" BasedOn="{StaticResource {dxt:LWKey BarItemRender.TemplateInRibbonStatusBarStyles}}">
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderBorder#PART_Root'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,1,1" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_Background'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_Container'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="3,0,3,0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Glyph'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="3,0,0,0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_ContentContainer'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
            <dxi:RenderStyleSetter TargetProperty="MinHeight" Value="22" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Editor'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="3,0,0,0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content2'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="3,0,0,0" />
        </dxi:RenderStyle>
    </dxi:RenderStylesCollection>

    <dxi:RenderStylesCollection x:Key="{dxt:LWKey BarItemRender.StaticTemplateInRibbonStatusBarStyles}" BasedOn="{StaticResource {dxt:LWKey BarItemRender.TemplateInRibbonStatusBarStyles}}" />
    <!--#endregion Base\Core\Core\Bars\Themes\Base\RenderTemplates\RibbonStatusBar.xaml-->

    <!--#region Base\Core\Core\Bars\Themes\Base\RenderTemplates\StatusBar.xaml-->
    <!-- Genmeral -->

    <dxi:RenderTriggersCollection x:Key="{dxt:LWKey BarItemRender.ForegroundColorStatesInStatusBar}">
        <dxi:RenderStateGroup Name="ArrowForegroundColors">
            <dxi:RenderStateTrigger Name="ArrowNormal">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, VS2019Blue=Brush.Backstage.Foreground, VS2019Dark=Brush.Backstage.Foreground, VS2019Light=Brush.Backstage.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowHover">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, VS2019Dark=Brush.Backstage.Foreground, VS2019Light=Brush.Backstage.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowPressed">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.SelectionForeground, VS2019Dark=Brush.Backstage.Foreground, VS2019Light=Brush.Backstage.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowContentHighlight">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, VS2019Dark=Brush.Backstage.Foreground, VS2019Light=Brush.Backstage.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowDisabled">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, VS2019Blue=Brush.Backstage.Foreground, VS2019Dark=Brush.Backstage.Foreground, VS2019Light=Brush.Backstage.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowCustomization">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Focused, VS2019Blue=Brush.Backstage.Focused, VS2019Dark=Brush.Backstage.Focused, VS2019Light=Brush.Backstage.Focused, Win11=Brush.Accent'}" />
            </dxi:RenderStateTrigger>
        </dxi:RenderStateGroup>
        <dxi:RenderStateGroup Name="ContentForegroundColors">
            <dxi:RenderStateTrigger Name="ContentNormal">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, VS2019Blue=Brush.Backstage.Foreground, VS2019Dark=Brush.Backstage.Foreground, VS2019Light=Brush.Backstage.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentHover">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, VS2019Dark=Brush.Backstage.Foreground, VS2019Light=Brush.Backstage.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentPressed">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.SelectionForeground, VS2019Dark=Brush.Backstage.Foreground, VS2019Light=Brush.Backstage.Foreground, Win11=Brush.Foreground.Muted'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentChecked">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.SelectionForeground, VS2019Dark=Brush.Backstage.Foreground, VS2019Light=Brush.Backstage.Foreground, Win11=Brush.Foreground.Alt'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentIndeterminate">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, VS2019Blue=Brush.Backstage.Foreground, VS2019Dark=Brush.Backstage.Foreground, VS2019Light=Brush.Backstage.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentContentHighlight">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, VS2019Blue=Brush.SelectionForeground, VS2019Dark=Brush.Backstage.Foreground, VS2019Light=Brush.Backstage.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentDisabled">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, VS2019Blue=Brush.Backstage.Foreground, VS2019Dark=Brush.Backstage.Foreground, Win11=Brush.Foreground.Disabled'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentCustomization">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Focused, VS2019Blue=Brush.Backstage.Focused, VS2019Dark=Brush.Backstage.Focused, VS2019Light=Brush.Backstage.Focused, Win11=Brush.Accent'}" />
            </dxi:RenderStateTrigger>
        </dxi:RenderStateGroup>
    </dxi:RenderTriggersCollection>

    <!-- Edit -->

    <dxi:RenderTriggersCollection x:Key="{dxt:LWKey BarItemRender.EditForegroundColorStatesInStatusBar}">
        <dxi:RenderStateGroup Name="ArrowForegroundColors">
            <dxi:RenderStateTrigger Name="ArrowNormal">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, VS2019Blue=Brush.Backstage.Foreground, VS2019Dark=Brush.Backstage.Foreground, VS2019Light=Brush.Backstage.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowHover">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, VS2019Blue=Brush.Backstage.Foreground, VS2019Dark=Brush.Backstage.Foreground, VS2019Light=Brush.Backstage.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowPressed">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.SelectionForeground, VS2019Blue=Brush.Backstage.Foreground, VS2019Dark=Brush.Backstage.Foreground, VS2019Light=Brush.Backstage.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowContentHighlight">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, VS2019Blue=Brush.Backstage.Foreground, VS2019Dark=Brush.Backstage.Foreground, VS2019Light=Brush.Backstage.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowDisabled">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, VS2019Blue=Brush.Backstage.Foreground, VS2019Dark=Brush.Backstage.Foreground, VS2019Light=Brush.Backstage.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ArrowCustomization">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_ArrowContainer"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Focused, VS2019Blue=Brush.Backstage.Focused, VS2019Dark=Brush.Backstage.Focused, VS2019Light=Brush.Backstage.Focused, Win11=Brush.Accent'}" />
            </dxi:RenderStateTrigger>
        </dxi:RenderStateGroup>
        <dxi:RenderStateGroup Name="ContentForegroundColors">
            <dxi:RenderStateTrigger Name="ContentNormal">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, VS2019Blue=Brush.Backstage.Foreground, VS2019Dark=Brush.Backstage.Foreground, VS2019Light=Brush.Backstage.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentHover">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, VS2019Blue=Brush.Backstage.Foreground, VS2019Dark=Brush.Backstage.Foreground, VS2019Light=Brush.Backstage.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentPressed">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.SelectionForeground, VS2019Blue=Brush.Backstage.Foreground, VS2019Dark=Brush.Backstage.Foreground, VS2019Light=Brush.Backstage.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentChecked">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.SelectionForeground, VS2019Blue=Brush.Backstage.Foreground, VS2019Dark=Brush.Backstage.Foreground, VS2019Light=Brush.Backstage.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentIndeterminate">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, VS2019Blue=Brush.Backstage.Foreground, VS2019Dark=Brush.Backstage.Foreground, VS2019Light=Brush.Backstage.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentContentHighlight">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.HoverForeground, VS2019Blue=Brush.Backstage.Foreground, VS2019Dark=Brush.Backstage.Foreground, VS2019Light=Brush.Backstage.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentDisabled">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Foreground, VS2019Blue=Brush.Backstage.Foreground, VS2019Dark=Brush.Backstage.Foreground, Win11=Brush.Foreground.Primary'}" />
            </dxi:RenderStateTrigger>
            <dxi:RenderStateTrigger Name="ContentCustomization">
                <dxi:RenderSetter
                    Property="Foreground"
                    TargetName="PART_Container"
                    ThrowIfInvalidTargetName="False"
                    Value="{dx:LWBrush 'Brush.Focused, VS2019Blue=Brush.Backstage.Focused, VS2019Dark=Brush.Backstage.Focused, VS2019Light=Brush.Backstage.Focused, Win11=Brush.Accent'}" />
            </dxi:RenderStateTrigger>
        </dxi:RenderStateGroup>
    </dxi:RenderTriggersCollection>

    <!-- Background -->

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.NormalBackgroundTemplateInStatusBar}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder Name="Border" BorderThickness="1" CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.HoverBackgroundTemplateInStatusBar}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            Background="{dx:LWBrush 'Brush.HoverBackground, Office2019Colorful=Brush.HoverAltBackground, VS2019Blue=Brush.Backstage.HoverBackground, VS2019Dark=Brush.Backstage.HoverBackground, VS2019Light=Brush.Backstage.HoverBackground, Win11=Brush.Button.HoverBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.HoverBorder, Office2019Colorful=Brush.HoverAltBorder, VS2019Blue=Brush.Backstage.HoverBackground, VS2019Dark=Brush.Backstage.HoverBackground, VS2019Light=Brush.Backstage.HoverBackground, Win11=#00FFFFFF'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.PressedBackgroundTemplateInStatusBar}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            Background="{dx:LWBrush 'Brush.SelectionBackground, Office2019Colorful=Brush.SelectionAltBackground, VS2019Blue=Brush.Backstage.SelectionBackground, VS2019Dark=Brush.Backstage.SelectionBackground, VS2019Light=Brush.Backstage.SelectionBackground, Win11=Brush.Button.PressedBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.SelectionBorder, Office2019Colorful=Brush.SelectionAltBorder, VS2019Blue=Brush.Backstage.SelectionBackground, VS2019Dark=Brush.Backstage.SelectionBackground, VS2019Light=Brush.Backstage.SelectionBackground, Win11=#00FFFFFF'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.IndeterminateBackgroundTemplateInStatusBar}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            Background="{dx:LWBrush 'Brush.HoverBackground, Office2019Colorful=Brush.HoverAltBackground, VS2019Blue=Brush.Backstage.HoverBackground, VS2019Dark=Brush.Backstage.HoverBackground, VS2019Light=Brush.Backstage.HoverBackground, Win11=Brush.Button.HoverBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.HoverBorder, Office2019Colorful=Brush.HoverAltBorder, VS2019Blue=Brush.Backstage.HoverBackground, VS2019Dark=Brush.Backstage.HoverBackground, VS2019Light=Brush.Backstage.HoverBackground, Win11=#00FFFFFF'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.CheckedBackgroundTemplateInStatusBar}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            Background="{dx:LWBrush 'Brush.SelectionBackground, Office2019Colorful=Brush.SelectionAltBackground, VS2019Blue=Brush.Backstage.SelectionBackground, VS2019Dark=Brush.Backstage.SelectionBackground, VS2019Light=Brush.Backstage.SelectionBackground, Win11=Brush.Button.CheckedBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.SelectionBorder, Office2019Colorful=Brush.SelectionAltBorder, VS2019Blue=Brush.Backstage.SelectionBackground, VS2019Dark=Brush.Backstage.SelectionBackground, VS2019Light=Brush.Backstage.SelectionBackground, Win11=#00FFFFFF'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.ContentHighlightTemplateStatusBar}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder
            Name="Border"
            Background="{dx:LWBrush 'Brush.HoverBackground, Office2019Colorful=Brush.HoverAltBackground, VS2019Blue=Brush.Backstage.HoverBackground, VS2019Dark=Brush.Backstage.HoverBackground, VS2019Light=Brush.Backstage.HoverBackground, Win11=Brush.Button.HoverBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.HoverBorder, Office2019Colorful=Brush.HoverAltBorder, VS2019Blue=Brush.Backstage.HoverBackground, VS2019Dark=Brush.Backstage.HoverBackground, VS2019Light=Brush.Backstage.HoverBackground, Win11=#00FFFFFF'}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}"
            Opacity="0.62" />
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey BarItemRender.CustomizationBackgroundTemplateInStatusBar}" Styles="{StaticResource {dxt:LWKey BarItemRender.HideBorderSideStyles}}">
        <dxb:RenderBarItemBorder Name="Border" BorderBrush="{dx:LWBrush 'Brush.Focused, Win11=Brush.Accent'}" CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
    </dxi:RenderTemplate>

    <!-- Thickness -->

    <dxi:RenderStylesCollection x:Key="{dxt:LWKey BarItemRender.DefaultTemplateInStatusBarStyles}">
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderBorder#PART_Root'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,1,1" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_Background'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_Container'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="{dx:LWThickness '3, Win11=(6,0,6,0)'}" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Glyph'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStylesCollection.Triggers>
            <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxi:AppearanceOptions.MarginProperty}" TargetName="PART_Root" TargetProperty="Margin">
                <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasMarginProperty}" Value="True" />
            </dxi:ConditionalRenderBinding>
        </dxi:RenderStylesCollection.Triggers>
    </dxi:RenderStylesCollection>

    <dxi:RenderStylesCollection x:Key="{dxt:LWKey BarItemRender.SplitTemplateInStatusBarStyles}" BasedOn="{StaticResource {dxt:LWKey BarItemRender.DefaultTemplateInStatusBarStyles}}">
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderBorder#PART_Root'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,1,1" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_Background'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_Container'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="{dx:LWThickness '3, Win11=(6,0,6,0)'}" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Glyph'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_ContentContainer'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_ContentBackground'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_PathArrowContainer'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="3,4,3,3" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PATH_ArrowBackground'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_ArrowContainer'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
    </dxi:RenderStylesCollection>

    <dxi:RenderStylesCollection x:Key="{dxt:LWKey BarItemRender.EditTemplateInStatusBarStyles}" BasedOn="{StaticResource {dxt:LWKey BarItemRender.DefaultTemplateInStatusBarStyles}}">
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderBorder#PART_Root'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,1,1" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_Background'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_Container'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="{dx:LWThickness '(3,0,3,0), Win11=(6,0,6,0)'}" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Glyph'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_ContentContainer'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
            <dxi:RenderStyleSetter TargetProperty="MinHeight" Value="22" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Editor'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="3,0,0,0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content2'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="3,0,0,0" />
        </dxi:RenderStyle>
    </dxi:RenderStylesCollection>

    <dxi:RenderStylesCollection x:Key="{dxt:LWKey BarItemRender.StaticTemplateInStatusBarStyles}" BasedOn="{StaticResource {dxt:LWKey BarItemRender.DefaultTemplateInStatusBarStyles}}">
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderBorder#PART_Root'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0,0,1,1" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxb:RenderBarItemBorderControl#PART_Background'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderPanel#PART_Container'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="3" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Glyph'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
        <dxi:RenderStyle Target="{dxi:RenderStyleTarget Value='dxi:RenderContentControl#PART_Content'}">
            <dxi:RenderStyleSetter TargetProperty="Margin" Value="0" />
        </dxi:RenderStyle>
    </dxi:RenderStylesCollection>
    <!--#endregion Base\Core\Core\Bars\Themes\Base\RenderTemplates\StatusBar.xaml-->

    <!--#region Base\Core\Core\Bars\Themes\Base\RenderTemplates.xaml-->
    <!--#endregion Base\Core\Core\Bars\Themes\Base\RenderTemplates.xaml-->


</ResourceDictionary>