<?xml version="1.0" encoding="utf-8" ?>
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:aero="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
    xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys"
    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
    xmlns:dxbi="http://schemas.devexpress.com/winfx/2008/xaml/bars/internal"
    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm">
    <ResourceDictionary.MergedDictionaries>
        <dxi:ThemeResourceDictionary Path="Core/StandardControls/_Base.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <SolidColorBrush x:Key="MenuItem_Foreground" Color="{StaticResource Color.Foreground}" />
    <SolidColorBrush x:Key="MenuItem_HoverForeground" Color="{StaticResource Color.HoverForeground}" />
    <SolidColorBrush x:Key="MenuItem_PressedForeground" Color="{StaticResource Color.SelectionForeground}" />
    <SolidColorBrush x:Key="MenuItem_HoverBackground" Color="{StaticResource Color.HoverBackground}" />
    <SolidColorBrush x:Key="MenuItem_HoverBorder" Color="{StaticResource Color.HoverBorder}" />
    <SolidColorBrush x:Key="MenuItem_SelectionBackground" Color="{StaticResource Color.SelectionBackground}" />
    <SolidColorBrush x:Key="MenuItem_SelectionBorder" Color="{StaticResource Color.SelectionBorder}" />
    <SolidColorBrush x:Key="ContextMenu_Background" Color="{StaticResource Color.Menu.Background}" />
    <SolidColorBrush x:Key="ContextMenu_Border" Color="{dx:LWColor 'Win10Dark=Color.AltBorder, Win10Light=Color.Border'}" />
    <SolidColorBrush x:Key="ContextMenuItem_HoverForeground" Color="{StaticResource Color.HoverForeground}" />
    <SolidColorBrush x:Key="ContextMenuItem_PressedForeground" Color="{StaticResource Color.SelectionForeground}" />
    <SolidColorBrush x:Key="ContextMenuItem_HoverBackground" Color="{StaticResource Color.HoverBackground}" />
    <SolidColorBrush x:Key="ContextMenuItem_HoverBorder" Color="{StaticResource Color.HoverBorder}" />
    <SolidColorBrush x:Key="ContextMenuItem_SelectionBackground" Color="{StaticResource Color.SelectionBackground}" />
    <SolidColorBrush x:Key="ContextMenuItem_SelectionBorder" Color="{StaticResource Color.SelectionBorder}" />
    <ControlTemplate x:Key="{dxt:LWKey Common.HorizontalScrollBarPageButtonTemplate}" TargetType="{x:Type RepeatButton}">
        <dx:DXBorder Background="Transparent">
            <Rectangle Fill="{TemplateBinding Background}" Margin="{DynamicResource {dxt:LWKey Common.ScrollBarHorizontalThumbMargin}}" Opacity="0.38" />
        </dx:DXBorder>
    </ControlTemplate>
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="MinHeight" Value="6" />
        <Setter Property="MinWidth" Value="6" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="{dx:LWBrush 'Win10Dark=Brush.Control.NeutralBackground, Win10Light=Brush.Border'}" />
        <Setter Property="BorderBrush" Value="{dx:LWBrush 'Win10Dark=Brush.Control.NeutralBackground, Win10Light=Brush.Border'}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource Brush.AltHover}" />
                <Setter Property="BorderBrush" Value="{StaticResource Brush.AltHover}" />
            </Trigger>
            <Trigger Property="IsDragging" Value="True">
                <Setter Property="Background" Value="{StaticResource Brush.AltPressed}" />
                <Setter Property="BorderBrush" Value="{StaticResource Brush.AltPressed}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxt:LWKey Common.VerticalScrollBarThumbStyle}" BasedOn="{StaticResource ScrollBarThumb}" TargetType="{x:Type Thumb}">
        <Setter Property="Template" Value="{DynamicResource {dxt:LWKey Common.VerticalScrollBarThumbTemplate}}" />
    </Style>
    <Style x:Key="{dxt:LWKey Common.HorizontalScrollBarThumbStyle}" BasedOn="{StaticResource ScrollBarThumb}" TargetType="{x:Type Thumb}">
        <Setter Property="Template" Value="{DynamicResource {dxt:LWKey Common.HorizontalScrollBarThumbTemplate}}" />
    </Style>
    <Thickness x:Key="{dxt:LWKey Common.ScrollBarVerticalThumbMargin}">0</Thickness>
    <Thickness x:Key="{dxt:LWKey Common.ScrollBarHorizontalThumbMargin}">0</Thickness>
    <Style x:Key="{dxt:LWKey ScrollBar.ScrollingCornerStyle}" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource Brush.Button.Background}" />
    </Style>
    <Style x:Key="CheckBox.DefaultStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="{StaticResource Brush.Editor.Background}" />
        <Setter Property="BorderBrush" Value="{dx:LWBrush 'Win10Dark=Brush.AltBorder, Win10Light=Brush.Border'}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="0,3,0,3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="Root" Background="Transparent" Margin="{TemplateBinding Padding}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid
                            x:Name="Field"
                            Grid.Column="0"
                            Grid.ColumnSpan="1"
                            Height="14"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="0,1,0,1"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Width="14">
                            <dx:DXBorder
                                x:Name="IsDefault"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                            <dx:DXBorder
                                x:Name="IsFocused"
                                BorderBrush="{StaticResource Brush.Focused}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="0" />
                            <Path x:Name="Indeterminate" Style="{StaticResource UIShape.Indeterminate}" Visibility="Collapsed" />
                            <Path x:Name="Checked" Style="{StaticResource UIShape.Checked}" Visibility="Collapsed" />
                        </Grid>
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Grid.Column="1"
                            Grid.ColumnSpan="1"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="4,0,0,0"
                            RecognizesAccessKey="True"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="IsFocused" Storyboard.TargetProperty="Opacity" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Fill" TargetName="Checked" Value="{StaticResource Brush.HoverForeground}" />
                            <Setter Property="Fill" TargetName="Indeterminate" Value="{StaticResource Brush.HoverForeground}" />
                            <Setter Property="Background" TargetName="IsDefault" Value="{StaticResource Brush.HoverBackground}" />
                            <Setter Property="BorderBrush" TargetName="IsDefault" Value="{StaticResource Brush.Border}" />
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="Checked" Value="{StaticResource Brush.SelectionForeground}" />
                            <Setter Property="Fill" TargetName="Indeterminate" Value="{StaticResource Brush.SelectionForeground}" />
                            <Setter Property="Background" TargetName="IsDefault" Value="{StaticResource Brush.SelectionBackground}" />
                            <Setter Property="BorderBrush" TargetName="IsDefault" Value="{StaticResource Brush.Border}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Opacity" TargetName="IsFocused" Value="1" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="IsFocused" Value="1" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="IsFocused" Value="1" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="Root" Value="0.38" />
                        </Trigger>
                        <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                            <Setter Property="Height" TargetName="Checked" Value="16" />
                            <Setter Property="Width" TargetName="Checked" Value="16" />
                            <Setter Property="Height" TargetName="Field" Value="28" />
                            <Setter Property="Width" TargetName="Field" Value="28" />
                            <Setter Property="Height" TargetName="Indeterminate" Value="16" />
                            <Setter Property="Width" TargetName="Indeterminate" Value="16" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" TargetName="Checked" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="Indeterminate" Value="Visible" />
                        </Trigger>
                        <Trigger Property="FlowDirection" Value="RightToLeft">
                            <Setter Property="LayoutTransform" TargetName="Field">
                                <Setter.Value>
                                    <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="-1" ScaleY="1" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ListBoxItem.DefaultStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{StaticResource Brush.Foreground}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="3,3,3,3" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid x:Name="Root">
                        <Rectangle
                            x:Name="IsFocus"
                            Stroke="{StaticResource Brush.Focused}"
                            StrokeDashArray="1 2"
                            StrokeThickness="1"
                            Visibility="Collapsed" />
                        <dx:DXBorder
                            x:Name="IsDefault"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" />
                        <ContentPresenter
                            x:Name="Content"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="{TemplateBinding Padding}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Visibility" TargetName="IsFocus" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource Brush.HoverForeground}" />
                            <Setter Property="Background" Value="{StaticResource Brush.HoverBackground}" />
                            <Setter Property="BorderBrush" Value="{StaticResource Brush.HoverBackground}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource Brush.SelectionForeground}" />
                            <Setter Property="Background" Value="{StaticResource Brush.SelectionBackground}" />
                            <Setter Property="BorderBrush" Value="{StaticResource Brush.SelectionBorder}" />
                            <Setter Property="Visibility" TargetName="IsFocus" Value="Collapsed" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsFocused" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{StaticResource Brush.SelectionForeground}" />
                            <Setter Property="Background" Value="{StaticResource Brush.Item.FadeSelection}" />
                            <Setter Property="BorderBrush" Value="{StaticResource Brush.Item.FadeSelection}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="Root" Value="0.38" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding" Value="14" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ProgressBar.DefaultStyle" TargetType="{x:Type ProgressBar}">
        <Setter Property="Background" Value="{StaticResource Brush.Backstage.Window.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource Brush.Focused}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid x:Name="Root">
                        <dx:DXBorder Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid x:Name="PART_Track" Margin="0">
                                <Grid x:Name="PART_Indicator" ClipToBounds="True" HorizontalAlignment="Left">
                                    <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}" />
                                    <Rectangle
                                        x:Name="Animation"
                                        Fill="{TemplateBinding Foreground}"
                                        RenderTransformOrigin="-0.5,0.5"
                                        Visibility="Collapsed">
                                        <Rectangle.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="0.25" />
                                            </TransformGroup>
                                        </Rectangle.RenderTransform>
                                    </Rectangle>
                                </Grid>
                            </Grid>
                        </dx:DXBorder>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                            <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5" />
                                            <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5" />
                                            <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5" />
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="Root">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="Animation" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <dx:DXBorder Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalSliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="Root" Background="Transparent">
                        <dx:DXBorder
                            x:Name="IsDefault"
                            Background="{StaticResource Brush.AltPressed}"
                            BorderBrush="{StaticResource Brush.Window.Background}"
                            BorderThickness="1"
                            CornerRadius="4"
                            Height="7"
                            Width="18" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="IsDefault" Value="{StaticResource Brush.Foreground}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter Property="Background" TargetName="IsDefault" Value="{StaticResource Brush.Focused}" />
                        </Trigger>
                        <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                            <Setter Property="Margin" TargetName="Root" Value="-22" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalSliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="Root" Background="Transparent">
                        <dx:DXBorder
                            x:Name="IsDefault"
                            Background="{StaticResource Brush.AltPressed}"
                            BorderBrush="{StaticResource Brush.Window.Background}"
                            BorderThickness="1"
                            CornerRadius="4"
                            Height="18"
                            Width="7" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="IsDefault" Value="{StaticResource Brush.Foreground}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter Property="Background" TargetName="IsDefault" Value="{StaticResource Brush.Focused}" />
                        </Trigger>
                        <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                            <Setter Property="Margin" TargetName="Root" Value="-22" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalSliderUpThumbStyle" BasedOn="{StaticResource HorizontalSliderThumbStyle}" TargetType="{x:Type Thumb}" />
    <Style x:Key="HorizontalSliderDownThumbStyle" BasedOn="{StaticResource HorizontalSliderThumbStyle}" TargetType="{x:Type Thumb}" />
    <Style x:Key="VerticalSliderLeftThumbStyle" BasedOn="{StaticResource VerticalSliderThumbStyle}" TargetType="{x:Type Thumb}" />
    <Style x:Key="VerticalSliderRightThumbStyle" BasedOn="{StaticResource VerticalSliderThumbStyle}" TargetType="{x:Type Thumb}" />
    <Style x:Key="Slider.DefaultStyle" TargetType="{x:Type Slider}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{StaticResource Brush.Foreground}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <dx:DXBorder
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                        Width="{TemplateBinding Width}">
                        <Grid x:Name="Root" MinHeight="22">
                            <TickBar
                                x:Name="TopTick"
                                Fill="{StaticResource Brush.Foreground}"
                                Height="4"
                                Placement="Top"
                                VerticalAlignment="Top"
                                Visibility="Collapsed" />
                            <Grid Margin="1,0,1,0" VerticalAlignment="Center">
                                <dx:DXBorder
                                    x:Name="TrackBackground"
                                    Background="{StaticResource Brush.Delimiter}"
                                    Height="2"
                                    VerticalAlignment="Center" />
                                <dx:DXBorder x:Name="FocusState" Background="{dx:LWBrush 'Win10Dark=Brush.Delimiter, Win10Light=Brush.Border'}" Visibility="Collapsed" />
                                <Canvas>
                                    <Rectangle
                                        x:Name="PART_SelectionRange"
                                        Fill="{StaticResource Brush.Foreground}"
                                        Height="2"
                                        Opacity="0" />
                                </Canvas>
                            </Grid>
                            <Track x:Name="PART_Track" VerticalAlignment="Center">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb
                                        x:Name="Thumb"
                                        Background="{StaticResource Brush.Border}"
                                        Height="{TemplateBinding Height}"
                                        Style="{StaticResource HorizontalSliderThumbStyle}" />
                                </Track.Thumb>
                            </Track>
                            <TickBar
                                x:Name="BottomTick"
                                Fill="{StaticResource Brush.Foreground}"
                                Height="4"
                                Placement="Bottom"
                                VerticalAlignment="Bottom"
                                Visibility="Collapsed" />
                        </Grid>
                    </dx:DXBorder>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TickPlacement" Value="TopLeft">
                            <Setter Property="Style" TargetName="Thumb" Value="{StaticResource HorizontalSliderUpThumbStyle}" />
                            <Setter Property="Visibility" TargetName="TopTick" Value="Visible" />
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="BottomRight">
                            <Setter Property="Visibility" TargetName="BottomTick" Value="Visible" />
                            <Setter Property="Style" TargetName="Thumb" Value="{StaticResource HorizontalSliderDownThumbStyle}" />
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="Both">
                            <Setter Property="Visibility" TargetName="BottomTick" Value="Visible" />
                            <Setter Property="Visibility" TargetName="TopTick" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsSelectionRangeEnabled" Value="True">
                            <Setter Property="Opacity" TargetName="PART_SelectionRange" Value="1" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Visibility" TargetName="FocusState" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="Root" Value="0.35" />
                        </Trigger>
                        <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                            <Setter Property="MinHeight" TargetName="Root" Value="44" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Slider}">
                            <dx:DXBorder
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Height="{TemplateBinding Height}">
                                <Grid x:Name="Root" MinWidth="22">
                                    <TickBar
                                        x:Name="LeftTick"
                                        Fill="{StaticResource Brush.Foreground}"
                                        HorizontalAlignment="Left"
                                        Placement="Left"
                                        Visibility="Collapsed"
                                        Width="4" />
                                    <Grid HorizontalAlignment="Center" Margin="0,1,0,1">
                                        <dx:DXBorder Name="TrackBackground" Background="{StaticResource Brush.Delimiter}" Width="2" />
                                        <dx:DXBorder x:Name="FocusState" Background="{dx:LWBrush 'Win10Dark=Brush.Delimiter, Win10Light=Brush.Border'}" Visibility="Collapsed" />
                                        <Canvas>
                                            <Rectangle
                                                x:Name="PART_SelectionRange"
                                                Fill="{StaticResource Brush.Foreground}"
                                                Opacity="0"
                                                Width="2" />
                                        </Canvas>
                                    </Grid>
                                    <Track x:Name="PART_Track">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" />
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" />
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb
                                                x:Name="Thumb"
                                                Background="{StaticResource Brush.Border}"
                                                Style="{StaticResource VerticalSliderThumbStyle}"
                                                Width="{TemplateBinding Width}" />
                                        </Track.Thumb>
                                    </Track>
                                    <TickBar
                                        x:Name="RightTick"
                                        Fill="{StaticResource Brush.Foreground}"
                                        HorizontalAlignment="Right"
                                        Placement="Right"
                                        Visibility="Collapsed"
                                        Width="4" />
                                </Grid>
                            </dx:DXBorder>
                            <ControlTemplate.Triggers>
                                <Trigger Property="TickPlacement" Value="TopLeft">
                                    <Setter Property="Visibility" TargetName="LeftTick" Value="Visible" />
                                    <Setter Property="Style" TargetName="Thumb" Value="{StaticResource VerticalSliderLeftThumbStyle}" />
                                </Trigger>
                                <Trigger Property="TickPlacement" Value="BottomRight">
                                    <Setter Property="Visibility" TargetName="RightTick" Value="Visible" />
                                    <Setter Property="Style" TargetName="Thumb" Value="{StaticResource VerticalSliderRightThumbStyle}" />
                                </Trigger>
                                <Trigger Property="TickPlacement" Value="Both">
                                    <Setter Property="Visibility" TargetName="LeftTick" Value="Visible" />
                                    <Setter Property="Visibility" TargetName="RightTick" Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsSelectionRangeEnabled" Value="True">
                                    <Setter Property="Opacity" TargetName="PART_SelectionRange" Value="1" />
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="Visibility" TargetName="FocusState" Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" TargetName="Root" Value="0.35" />
                                </Trigger>
                                <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                                    <Setter Property="MinWidth" TargetName="Root" Value="44" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />
    <Style x:Key="MenuScrollViewer" BasedOn="{x:Null}" TargetType="{x:Type ScrollViewer}">
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <dx:DXBorder Grid.Row="1" Grid.Column="0">
                            <ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}" Margin="{TemplateBinding Padding}" />
                        </dx:DXBorder>
                        <RepeatButton
                            Grid.Row="0"
                            Grid.Column="0"
                            Command="{x:Static ScrollBar.LineUpCommand}"
                            CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                            Focusable="false"
                            Style="{DynamicResource {dxt:LWKey SubMenuBarControl.ScrollUpButtonStyle}}">
                            <RepeatButton.Visibility>
                                <MultiBinding Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="0" FallbackValue="Visibility.Collapsed">
                                    <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                        </RepeatButton>
                        <RepeatButton
                            Grid.Row="2"
                            Grid.Column="0"
                            Command="{x:Static ScrollBar.LineDownCommand}"
                            CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                            Focusable="false"
                            Style="{DynamicResource {dxt:LWKey SubMenuBarControl.ScrollDownButtonStyle}}">
                            <RepeatButton.Visibility>
                                <MultiBinding Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="100" FallbackValue="Visibility.Collapsed">
                                    <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="MenuSeparatorTemplate" TargetType="{x:Type Separator}">
        <Grid Margin="0,6,0,4" SnapsToDevicePixels="true" UseLayoutRounding="False">
            <Rectangle Fill="{StaticResource Brush.Delimiter}" Height="1" Margin="30,0,1,1" />
        </Grid>
    </ControlTemplate>
    <Style x:Key="ContextMenu.DefaultStyle" TargetType="{x:Type ContextMenu}">
        <Style.Resources>
            <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
                <Setter Property="Template" Value="{StaticResource MenuSeparatorTemplate}" />
            </Style>
        </Style.Resources>
        <Setter Property="Background" Value="{StaticResource ContextMenu_Background}" />
        <Setter Property="Foreground" Value="{StaticResource ContextMenuItem_Foreground}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource ContextMenu_Border}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
        <Setter Property="HasDropShadow" Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="dx:WpfSvgPalette.Palette" Value="{StaticResource {dxt:LWKey BarSvgPalette.SvgPaletteInMenu}}" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <aero:SystemDropShadowChrome Name="Shdw" Color="Transparent" SnapsToDevicePixels="true">
                        <dx:DXBorder
                        Name="ContextMenuBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer Name="ContextMenuScrollViewer" Margin="0" Style="{StaticResource MenuScrollViewer}">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas
                                    Height="0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Width="0">
                                        <Rectangle
                                        Name="OpaqueRect"
                                        Fill="{Binding ElementName=ContextMenuBorder, Path=Background}"
                                        Height="{Binding ElementName=ContextMenuBorder, Path=ActualHeight}"
                                        Width="{Binding ElementName=ContextMenuBorder, Path=ActualWidth}" />
                                    </Canvas>
                                    <dx:DXBorder>
                                        <ItemsPresenter
                                        Name="ItemsPresenter"
                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                        Margin="{TemplateBinding Padding}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </dx:DXBorder>
                                </Grid>
                            </ScrollViewer>
                        </dx:DXBorder>
                    </aero:SystemDropShadowChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5" />
                            <Setter Property="Color" TargetName="Shdw" Value="#10000000" />
                        </Trigger>
                        <Trigger Property="ScrollViewer.CanContentScroll" SourceName="ContextMenuScrollViewer" Value="false">
                            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding ElementName=ContextMenuScrollViewer, Path=VerticalOffset}" />
                            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding ElementName=ContextMenuScrollViewer, Path=HorizontalOffset}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="{dxt:LWKey Common.TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="true">
            <dx:DXBorder
                x:Name="Bg"
                BorderThickness="1"
                Margin="1"
                SnapsToDevicePixels="true" />
            <DockPanel>
                <ContentPresenter
                    x:Name="Icon"
                    ContentSource="Icon"
                    Height="16"
                    HorizontalAlignment="Center"
                    Margin="4,0,2,0"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    VerticalAlignment="Center"
                    Width="16" />
                <Path
                    x:Name="GlyphPanel"
                    Fill="{TemplateBinding MenuItem.Foreground}"
                    FlowDirection="LeftToRight"
                    Margin="6,0,0,0"
                    Style="{StaticResource UIShape.Checked}"
                    VerticalAlignment="Center"
                    Visibility="Collapsed" />
                <ContentPresenter
                    ContentSource="Header"
                    Margin="{TemplateBinding MenuItem.Padding}"
                    RecognizesAccessKey="True"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    VerticalAlignment="Center" />
            </DockPanel>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible" />
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Foreground" Value="{StaticResource MenuItem_HoverForeground}" />
                <Setter Property="BorderBrush" TargetName="Bg" Value="{StaticResource MenuItem_HoverBorder}" />
                <Setter Property="Background" TargetName="Bg" Value="{StaticResource MenuItem_HoverBackground}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Foreground" Value="{StaticResource MenuItem_PressedForeground}" />
                <Setter Property="Background" TargetName="Bg" Value="{StaticResource MenuItem_SelectionBackground}" />
                <Setter Property="BorderBrush" TargetName="Bg" Value="{StaticResource MenuItem_SelectionBorder}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter Property="Foreground" Value="{StaticResource MenuItem_Foreground}" />
                <Setter Property="BorderBrush" TargetName="Bg" Value="{StaticResource Brush.Focused}" />
                <Setter Property="Background" TargetName="Bg" Value="Transparent" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.5" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="dx:SvgImageHelper.State" TargetName="Icon" Value="Hover" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="dx:SvgImageHelper.State" TargetName="Icon" Value="Pressed" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:LWKey Common.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="true">
            <dx:DXBorder Name="Bg" BorderThickness="1" Margin="1" />
            <DockPanel>
                <ContentPresenter
                    x:Name="Icon"
                    ContentSource="Icon"
                    Height="16"
                    HorizontalAlignment="Center"
                    Margin="4,0,2,0"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    VerticalAlignment="Center"
                    Width="16" />
                <Path
                    x:Name="GlyphPanel"
                    Fill="{TemplateBinding MenuItem.Foreground}"
                    FlowDirection="LeftToRight"
                    Margin="6,0,0,0"
                    Style="{StaticResource UIShape.Checked}"
                    VerticalAlignment="Center"
                    Visibility="Collapsed" />
                <ContentPresenter
                    ContentSource="Header"
                    Margin="{TemplateBinding MenuItem.Padding}"
                    RecognizesAccessKey="True"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    VerticalAlignment="Center" />
            </DockPanel>
            <Popup
                x:Name="PART_Popup"
                AllowsTransparency="true"
                Focusable="false"
                HorizontalOffset="1"
                IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                Placement="Bottom"
                PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                VerticalOffset="-1">
                <aero:SystemDropShadowChrome Name="Shdw" Color="Transparent">
                    <dx:DXBorder
                        Name="SubMenuBorder"
                        Background="{StaticResource ContextMenu_Background}"
                        BorderBrush="{StaticResource ContextMenu_Border}"
                        BorderThickness="1">
                        <ScrollViewer Name="SubMenuScrollViewer" Style="{StaticResource MenuScrollViewer}">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas
                                    Height="0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Width="0">
                                    <Rectangle
                                        Name="OpaqueRect"
                                        Fill="{Binding ElementName=SubMenuBorder, Path=Background}"
                                        Height="{Binding ElementName=SubMenuBorder, Path=ActualHeight}"
                                        Width="{Binding ElementName=SubMenuBorder, Path=ActualWidth}" />
                                </Canvas>
                                <dx:DXBorder>
                                    <ItemsPresenter
                                        Name="ItemsPresenter"
                                        Grid.IsSharedSizeScope="true"
                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                        KeyboardNavigation.TabNavigation="Cycle"
                                        Margin="1"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </dx:DXBorder>
                            </Grid>
                        </ScrollViewer>
                    </dx:DXBorder>
                </aero:SystemDropShadowChrome>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None" />
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible" />
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed" />
            </Trigger>
            <Trigger Property="Popup.HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5" />
                <Setter Property="Color" TargetName="Shdw" Value="#10000000" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Foreground" Value="{StaticResource MenuItem_HoverForeground}" />
                <Setter Property="Background" TargetName="Bg" Value="{StaticResource MenuItem_HoverBackground}" />
                <Setter Property="BorderBrush" TargetName="Bg" Value="{StaticResource MenuItem_HoverBorder}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Foreground" Value="{StaticResource MenuItem_PressedForeground}" />
                <Setter Property="Background" TargetName="Bg" Value="{StaticResource ContextMenuItem_SelectionBackground}" />
                <Setter Property="BorderBrush" TargetName="Bg" Value="{StaticResource ContextMenuItem_SelectionBorder}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter Property="Foreground" Value="{StaticResource MenuItem_Foreground}" />
                <Setter Property="BorderBrush" TargetName="Bg" Value="{StaticResource Brush.Focused}" />
                <Setter Property="Background" TargetName="Bg" Value="Transparent" />
            </Trigger>
            <Trigger Property="IsSubmenuOpen" Value="true">
                <Setter Property="Foreground" Value="{StaticResource MenuItem_PressedForeground}" />
                <Setter Property="BorderBrush" TargetName="Bg" Value="{StaticResource MenuItem_SelectionBorder}" />
                <Setter Property="Background" TargetName="Bg" Value="{StaticResource MenuItem_SelectionBackground}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.5" />
            </Trigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="SubMenuScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding ElementName=SubMenuScrollViewer, Path=VerticalOffset}" />
                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding ElementName=SubMenuScrollViewer, Path=HorizontalOffset}" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="dx:SvgImageHelper.State" TargetName="Icon" Value="Hover" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="dx:SvgImageHelper.State" TargetName="Icon" Value="Pressed" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Height" Value="18"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="Root" Background="Transparent">
                        <Path x:Name="Collapsed" Fill="{StaticResource Brush.Foreground}" Style="{StaticResource UIShape.Right}" />
                        <Path x:Name="Expanded"
                              Fill="{StaticResource Brush.Foreground}" Opacity="0" Style="{StaticResource UIShape.RightDown}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="Collapsed" Value="{StaticResource Brush.HoverForeground}"/>
                            <Setter Property="Fill" TargetName="Expanded" Value="{StaticResource Brush.HoverForeground}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Opacity" TargetName="Collapsed" Value="0"/>
                            <Setter Property="Opacity" TargetName="Expanded" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="18"/>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" Value="44"/>
                <Setter Property="MinWidth" Value="44"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="MenuItem.DefaultStyle" TargetType="{x:Type MenuItem}">
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxt:LWKey BarSvgPalette.SvgPaletteInMenu}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template" Value="{DynamicResource {dxt:LWKey Common.SubmenuItemTemplateKey}}" />
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Padding" Value="7,4,8,4" />
                <Setter Property="Template" Value="{DynamicResource {dxt:LWKey Common.TopLevelHeaderTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Padding" Value="7,3,8,3" />
                <Setter Property="Template" Value="{DynamicResource {dxt:LWKey Common.TopLevelItemTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Padding" Value="2,3" />
                <Setter Property="Template" Value="{DynamicResource {dxt:LWKey Common.SubmenuHeaderTemplateKey}}" />
                <Setter Property="Foreground" Value="{StaticResource ContextMenuItem_Foreground}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Padding" Value="2,3" />
                <Setter Property="Foreground" Value="{StaticResource ContextMenuItem_Foreground}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="dx:ThemeManager.IsTouchEnabled" Value="True" />
                    <Condition Property="Role" Value="TopLevelHeader" />
                </MultiTrigger.Conditions>
                <Setter Property="Padding" Value="7,15,8,15" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="dx:ThemeManager.IsTouchEnabled" Value="True" />
                    <Condition Property="Role" Value="TopLevelItem" />
                </MultiTrigger.Conditions>
                <Setter Property="Padding" Value="7,14,8,14" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="dx:ThemeManager.IsTouchEnabled" Value="True" />
                    <Condition Property="Role" Value="SubmenuHeader" />
                </MultiTrigger.Conditions>
                <Setter Property="Padding" Value="2,14" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="dx:ThemeManager.IsTouchEnabled" Value="True" />
                    <Condition Property="Role" Value="SubmenuItem" />
                </MultiTrigger.Conditions>
                <Setter Property="Padding" Value="2,14" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ScrollBar.DefaultStyle" TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="{dx:LWBrush 'Brush.Editor.Background, Win10Light=Brush.Button.Background'}" />
        <Setter Property="BorderThickness" Value="1,0,0,0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
        <Setter Property="Width" Value="17" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="dx:ScrollBarExtensions.ListeningScrollBarThumbDragDelta" Value="True" />
        <Setter Property="Template" Value="{DynamicResource {dxt:LWKey Common.VerticalScrollBarTemplate}}" />
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Orientation" Value="Vertical" />
                    <Condition Property="dx:ScrollBarExtensions.IsTouchScrollBarMode" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Width" Value="17" />
                    <Setter Property="MinWidth" Value="17" />
                    <Setter Property="Template" Value="{DynamicResource {dxt:LWKey ScrollBar.ScrollBarVertTouchTemplate}}" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Orientation" Value="Horizontal" />
                    <Condition Property="dx:ScrollBarExtensions.IsTouchScrollBarMode" Value="False" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{dx:LWBrush 'Brush.Editor.Background, Win10Light=Brush.Button.Background'}" />
                    <Setter Property="BorderThickness" Value="0,1,0,0" />
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="Width" Value="Auto" />
                    <Setter Property="Height" Value="17" />
                    <Setter Property="Template" Value="{DynamicResource {dxt:LWKey Common.HorizontalScrollBarTemplate}}" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Orientation" Value="Horizontal" />
                    <Condition Property="dx:ScrollBarExtensions.IsTouchScrollBarMode" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{StaticResource Brush.Button.Background}" />
                    <Setter Property="BorderBrush" Value="{StaticResource Brush.Border}" />
                    <Setter Property="Width" Value="Auto" />
                    <Setter Property="Height" Value="17" />
                    <Setter Property="Template" Value="{DynamicResource {dxt:LWKey ScrollBar.ScrollBarHorzTouchTemplate}}" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" Value="24" />
                <Setter Property="MinWidth" Value="24" />
            </Trigger>
            <Trigger Property="dx:ScrollBarExtensions.ScrollBarMode" Value="TouchOverlap">
                <Setter Property="dx:ScrollBarExtensions.IsTouchScrollBarMode" Value="True" />
                <Setter Property="dx:ScrollBarExtensions.ScrollViewerMouseMoved" Value="{Binding Path=(dx:ScrollBarExtensions.ScrollViewerMouseMoved), RelativeSource={RelativeSource TemplatedParent}}" />
                <Setter Property="dx:ScrollBarExtensions.ScrollViewerSizeChanged" Value="{Binding Path=(dx:ScrollBarExtensions.ScrollViewerSizeChanged), RelativeSource={RelativeSource TemplatedParent}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>