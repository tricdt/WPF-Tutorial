<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:aero="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <dxi:ThemeResourceDictionary Path="Core/StandardControls/_{ThemeCategory}.xaml" />
        <!--<dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Base.v24.1;component/Core/Core/Bars/Themes/Base/SubMenuBar/ScrollButtons.xaml"/>-->
    </ResourceDictionary.MergedDictionaries>

    <BorderGapMaskConverter x:Key="BorderGapMaskConverter" />


    <!--#region Base\\Core\Core\Themes\Base\StandardControls\StandardControlsBrushes.xaml-->


    <!-- MENU BRUSHES -->

    <!-- CONTEXT MENU BRUSHES -->
    <!--#endregion Base\\Core\Core\Themes\Base\StandardControls\StandardControlsBrushes.xaml-->

    <!--#region Base\\Core\Core\Themes\Base\StandardControls\Label.xaml-->
    <!-- General -->
    <!--#endregion Base\\Core\Core\Themes\Base\StandardControls\Label.xaml-->

    <!--#region Base\\Core\Core\Themes\Base\StandardControls\Button.xaml-->
    <!-- General -->

    <!-- ThemedWindowDialogButtonStyle -->
    <!--#endregion Base\\Core\Core\Themes\Base\StandardControls\Button.xaml-->

    <!--#region Base\\Core\Core\Themes\Base\StandardControls\CheckBox.xaml-->
    <!-- General -->
    <!--#endregion Base\\Core\Core\Themes\Base\StandardControls\CheckBox.xaml-->

    <!--#region Base\\Core\Core\Themes\Base\StandardControls\RadioButton.xaml-->
    <!-- General -->
    <!--#endregion Base\\Core\Core\Themes\Base\StandardControls\RadioButton.xaml-->

    <!--#region Base\\Core\Core\Themes\Base\StandardControls\TextBox.xaml-->


    <!-- General -->
    <!--#endregion Base\\Core\Core\Themes\Base\StandardControls\TextBox.xaml-->

    <!--#region Base\\Core\Core\Themes\Base\StandardControls\ScrollBarTouch.xaml-->
    <!-- General -->

    <!--#endregion Base\\Core\Core\Themes\Base\StandardControls\ScrollBarTouch.xaml-->

    <!--#region Base\\Core\Core\Themes\Base\StandardControls\ScrollBar.xaml-->
    <!--<Thickness x:Key="{dxt:LWKey Common.ScrollBarVerticalThumbMargin}">0</Thickness>
    <Thickness x:Key="{dxt:LWKey Common.ScrollBarHorizontalThumbMargin}">0</Thickness>-->


    <!-- General -->

    <!--<ControlTemplate x:Key="{dxt:LWKey Common.VerticalScrollBarPageButtonTemplate}" TargetType="{x:Type RepeatButton}">
        <dx:DXBorder Background="Transparent">
            <Rectangle Fill="{TemplateBinding Background}" Margin="{DynamicResource {dxt:LWKey Common.ScrollBarVerticalThumbMargin}}" Opacity="0.38" />
        </dx:DXBorder>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxt:LWKey Common.HorizontalScrollBarPageButtonTemplate}" TargetType="{x:Type RepeatButton}">
        <dx:DXBorder Background="Transparent">
            <Rectangle Fill="{TemplateBinding Background}" Margin="{DynamicResource {dxt:LWKey Common.ScrollBarHorizontalThumbMargin}}" Opacity="0.38" />
        </dx:DXBorder>
    </ControlTemplate>-->

    <!-- Button -->

    <!-- Thumb -->

    <!--<ControlTemplate x:Key="{dxt:LWKey Common.VerticalScrollBarThumbTemplate}" TargetType="{x:Type Thumb}">
        <dx:DXBorder Background="Transparent">
            <Rectangle
                x:Name="IsDefault"
                Fill="{TemplateBinding Background}"
                Height="{TemplateBinding Height}"
                Margin="{DynamicResource {dxt:LWKey Common.ScrollBarVerticalThumbMargin}}"
                MinHeight="{TemplateBinding MinHeight}"
                MinWidth="{TemplateBinding MinWidth}"
                Stroke="{TemplateBinding BorderBrush}"
                StrokeThickness="{TemplateBinding BorderThickness}"
                Width="{TemplateBinding Width}" />
        </dx:DXBorder>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="IsDefault" Value="0.38" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxt:LWKey Common.HorizontalScrollBarThumbTemplate}" TargetType="{x:Type Thumb}">
        <dx:DXBorder Background="Transparent">
            <Rectangle
                x:Name="IsDefault"
                Fill="{TemplateBinding Background}"
                Height="{TemplateBinding Height}"
                Margin="{DynamicResource {dxt:LWKey Common.ScrollBarHorizontalThumbMargin}}"
                MinHeight="{TemplateBinding MinHeight}"
                MinWidth="{TemplateBinding MinWidth}"
                Stroke="{TemplateBinding BorderBrush}"
                StrokeThickness="{TemplateBinding BorderThickness}"
                Width="{TemplateBinding Width}" />
        </dx:DXBorder>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="IsDefault" Value="0.38" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{dxt:LWKey Common.VerticalScrollBarThumbStyle}" BasedOn="{StaticResource ScrollBarThumb}" TargetType="{x:Type Thumb}">
        <Setter Property="Template" Value="{DynamicResource {dxt:LWKey Common.VerticalScrollBarThumbTemplate}}" />
    </Style>

    <Style x:Key="{dxt:LWKey Common.HorizontalScrollBarThumbStyle}" BasedOn="{StaticResource ScrollBarThumb}" TargetType="{x:Type Thumb}">
        <Setter Property="Template" Value="{DynamicResource {dxt:LWKey Common.HorizontalScrollBarThumbTemplate}}" />
    </Style>-->

    <!-- Thumb Size Keys -->

    <!-- Corner -->

    <!--<Style x:Key="{dxt:LWKey ScrollBar.ScrollingCornerStyle}" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource Brush.Button.Background}" />
    </Style>-->
    <!--#endregion Base\\Core\Core\Themes\Base\StandardControls\ScrollBar.xaml-->

    <!--#region Base\\Core\Core\Themes\Base\StandardControls\ScrollViewer.xaml-->
    <!-- General -->
    <!--#endregion Base\\Core\Core\Themes\Base\StandardControls\ScrollViewer.xaml-->

    <!--#region Base\\Core\Core\Themes\Base\StandardControls\ContextMenu.xaml-->


    <!-- Menu scroll -->

    <!-- Context Menu -->

    <!-- ContextMenu -->



    <!-- (3) Sub Item -->

    <ControlTemplate x:Key="{dxt:LWKey Common.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="true">
            <dx:DXBorder
                Name="Bg"
                Background="{TemplateBinding MenuItem.Background}"
                BorderBrush="{TemplateBinding MenuItem.BorderBrush}"
                BorderThickness="1"
                CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="24" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto" />
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="37" />
                    <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto" />
                    <ColumnDefinition Width="17" />
                </Grid.ColumnDefinitions>
                <ContentPresenter
                    x:Name="Icon"
                    ContentSource="Icon"
                    Margin="1"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    VerticalAlignment="Center" />
                <dx:DXBorder x:Name="GlyphPanel" Margin="1" Visibility="Hidden">
                    <Path
                        Name="Glyph"
                        Fill="{TemplateBinding Foreground}"
                        FlowDirection="LeftToRight"
                        Height="8"
                        Style="{StaticResource UIShape.Checked}"
                        VerticalAlignment="Center"
                        Width="8" />
                </dx:DXBorder>
                <ContentPresenter
                    Grid.Column="2"
                    ContentSource="Header"
                    Margin="{TemplateBinding MenuItem.Padding}"
                    RecognizesAccessKey="True"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    VerticalAlignment="Center" />
                <TextBlock
                    Grid.Column="4"
                    Margin="{TemplateBinding MenuItem.Padding}"
                    Text="{TemplateBinding MenuItem.InputGestureText}"
                    VerticalAlignment="Center" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible" />
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Foreground" Value="{StaticResource ContextMenuItem_HoverForeground}" />
                <Setter Property="Background" TargetName="Bg" Value="{StaticResource ContextMenuItem_HoverBackground}" />
                <Setter Property="BorderBrush" TargetName="Bg" Value="{StaticResource ContextMenuItem_HoverBorder}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Foreground" Value="{StaticResource ContextMenuItem_PressedForeground}" />
                <Setter Property="Background" TargetName="Bg" Value="{StaticResource ContextMenuItem_SelectionBackground}" />
                <Setter Property="BorderBrush" TargetName="Bg" Value="{StaticResource ContextMenuItem_SelectionBorder}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.5" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="dx:SvgImageHelper.State" TargetName="Icon" Value="Hover" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="dx:SvgImageHelper.State" TargetName="Icon" Value="Pressed" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- (4) Sub Item Header -->

    <ControlTemplate x:Key="{dxt:LWKey Common.SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="true">
            <dx:DXBorder
                Name="Bg"
                Background="{TemplateBinding MenuItem.Background}"
                BorderBrush="{TemplateBinding MenuItem.BorderBrush}"
                BorderThickness="1"
                CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="24" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto" />
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="37" />
                    <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto" />
                    <ColumnDefinition Width="17" />
                </Grid.ColumnDefinitions>
                <ContentPresenter
                    x:Name="Icon"
                    ContentSource="Icon"
                    Margin="0"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    VerticalAlignment="Center" />
                <dx:DXBorder x:Name="GlyphPanel" Margin="1" Visibility="Hidden">
                    <Path
                        Name="Glyph"
                        Fill="{TemplateBinding Foreground}"
                        FlowDirection="LeftToRight"
                        Height="8"
                        Style="{StaticResource UIShape.Checked}"
                        VerticalAlignment="Center"
                        Width="8" />
                </dx:DXBorder>
                <ContentPresenter
                    Grid.Column="2"
                    ContentSource="Header"
                    Margin="{TemplateBinding MenuItem.Padding}"
                    RecognizesAccessKey="True"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    VerticalAlignment="Center" />
                <TextBlock
                    Grid.Column="4"
                    Margin="{TemplateBinding MenuItem.Padding}"
                    Text="{TemplateBinding MenuItem.InputGestureText}"
                    Visibility="Collapsed" />
                <Path
                    Grid.Column="5"
                    Fill="{TemplateBinding MenuItem.Foreground}"
                    Margin="4,0,0,0"
                    Style="{StaticResource UIShape.Right}"
                    VerticalAlignment="Center" />
            </Grid>
            <Popup
                x:Name="PART_Popup"
                AllowsTransparency="true"
                Focusable="false"
                IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                Placement="Right"
                PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                VerticalOffset="-3">
                <aero:SystemDropShadowChrome Name="Shdw" Color="Transparent" CornerRadius="{dx:LWCornerRadius '0, Win11=8'}">
                    <dx:DXBorder
                        Name="SubMenuBorder"
                        CornerRadius="{dx:LWCornerRadius '0, Win11=8'}"
                        Background="{StaticResource ContextMenu_Background}"
                        BorderBrush="{StaticResource ContextMenu_Border}"
                        BorderThickness="1">
                        <ScrollViewer Name="SubMenuScrollViewer" Margin="{dx:LWThickness '0, Win11=2'}" Style="{StaticResource MenuScrollViewer}">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas
                                    Height="0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Width="0">
                                    <Rectangle
                                        Name="OpaqueRect"
                                        Fill="{Binding ElementName=SubMenuBorder, Path=Background}"
                                        Height="{Binding ElementName=SubMenuBorder, Path=ActualHeight}"
                                        Width="{Binding ElementName=SubMenuBorder, Path=ActualWidth}" />
                                </Canvas>
                                <dx:DXBorder>
                                    <ItemsPresenter
                                        Name="ItemsPresenter"
                                        Grid.IsSharedSizeScope="true"
                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                        KeyboardNavigation.TabNavigation="Cycle"
                                        Margin="1"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </dx:DXBorder>
                            </Grid>
                        </ScrollViewer>
                    </dx:DXBorder>
                </aero:SystemDropShadowChrome>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None" />
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible" />
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed" />
            </Trigger>
            <Trigger Property="Popup.HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5" />
                <Setter Property="Color" TargetName="Shdw" Value="#10000000" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Foreground" Value="{StaticResource ContextMenuItem_HoverForeground}" />
                <Setter Property="Background" TargetName="Bg" Value="{StaticResource ContextMenuItem_HoverBackground}" />
                <Setter Property="BorderBrush" TargetName="Bg" Value="{StaticResource ContextMenuItem_HoverBorder}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Foreground" Value="{StaticResource ContextMenuItem_PressedForeground}" />
                <Setter Property="Background" TargetName="Bg" Value="{StaticResource ContextMenuItem_SelectionBackground}" />
                <Setter Property="BorderBrush" TargetName="Bg" Value="{StaticResource ContextMenuItem_SelectionBorder}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.5" />
            </Trigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="SubMenuScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding ElementName=SubMenuScrollViewer, Path=VerticalOffset}" />
                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding ElementName=SubMenuScrollViewer, Path=HorizontalOffset}" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="dx:SvgImageHelper.State" TargetName="Icon" Value="Hover" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="dx:SvgImageHelper.State" TargetName="Icon" Value="Pressed" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- MenuItems Style -->
    <!--#endregion Base\\Core\Core\Themes\Base\StandardControls\ContextMenu.xaml-->

    <!--#region Base\\Core\Core\Themes\Base\StandardControls\Expander.xaml-->
    <Style x:Key="ExpanderHeaderFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Stroke="{dx:LWBrush 'Brush.Focused, Win11=Brush.Accent'}" StrokeDashArray="1 2" StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- General -->

    <!-- Buttons -->

    <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="Root" Background="Transparent">
                        <StackPanel Margin="{TemplateBinding Padding}" Orientation="Horizontal">
                            <Grid x:Name="Button" Height="16" Width="16">
                                <dx:DXBorder x:Name="IsDefault" Background="Transparent" CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
                                <Path x:Name="Collapsed" Fill="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ForegroundDark, Win11=Brush.Foreground.Primary'}" Style="{StaticResource UIShape.Up}" />
                                <Path
                                    x:Name="Expanded"
                                    Fill="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ForegroundDark, Win11=Brush.Foreground.Primary'}"
                                    Style="{StaticResource UIShape.Down}"
                                    Visibility="Collapsed" />
                            </Grid>
                            <ContentPresenter x:Name="Content" Margin="4,0,0,0" RecognizesAccessKey="True" />
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" TargetName="Collapsed" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="Expanded" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="Collapsed" Value="{dx:LWBrush 'Brush.SelectionForeground, VS2019Dark=Brush.Backstage.Focused, Win11=Brush.Foreground.Primary'}" />
                            <Setter Property="Fill" TargetName="Expanded" Value="{dx:LWBrush 'Brush.SelectionForeground, VS2019Dark=Brush.Backstage.Focused, Win11=Brush.Foreground.Primary'}" />
                            <Setter Property="Background" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.HoverBackground, Win11=Brush.ListItem.HoverBackground'}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="Collapsed" Value="{dx:LWBrush 'Brush.SelectionForeground, VS2019Dark=Brush.Backstage.Focused, Win11=Brush.Foreground.Primary'}" />
                            <Setter Property="Fill" TargetName="Expanded" Value="{dx:LWBrush 'Brush.SelectionForeground, VS2019Dark=Brush.Backstage.Focused, Win11=Brush.Foreground.Primary'}" />
                            <Setter Property="Background" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.SelectionBackground, Win11=Brush.ListItem.SelectionBackground'}" />
                        </Trigger>
                        <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                            <Setter Property="MinHeight" TargetName="Button" Value="44" />
                            <Setter Property="MinWidth" TargetName="Button" Value="44" />
                            <Setter Property="Margin" TargetName="Content" Value="14" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="Root" Background="Transparent">
                        <StackPanel Margin="{TemplateBinding Padding}" Orientation="Horizontal">
                            <Grid x:Name="Button" Height="16" Width="16">
                                <dx:DXBorder x:Name="IsDefault" Background="Transparent" CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
                                <Path x:Name="Collapsed" Fill="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ForegroundDark, Win11=Brush.Foreground.Primary'}" Style="{StaticResource UIShape.Down}" />
                                <Path
                                    x:Name="Expanded"
                                    Fill="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ForegroundDark, Win11=Brush.Foreground.Primary'}"
                                    Style="{StaticResource UIShape.Up}"
                                    Visibility="Collapsed" />
                            </Grid>
                            <ContentPresenter x:Name="Content" Margin="4,0,0,0" RecognizesAccessKey="True" />
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" TargetName="Collapsed" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="Expanded" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="Collapsed" Value="{dx:LWBrush 'Brush.SelectionForeground, VS2019Dark=Brush.Backstage.Focused, Win11=Brush.Foreground.Primary'}" />
                            <Setter Property="Fill" TargetName="Expanded" Value="{dx:LWBrush 'Brush.SelectionForeground, VS2019Dark=Brush.Backstage.Focused, Win11=Brush.Foreground.Primary'}" />
                            <Setter Property="Background" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.HoverBackground, Win11=Brush.ListItem.HoverBackground'}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="Collapsed" Value="{dx:LWBrush 'Brush.SelectionForeground, VS2019Dark=Brush.Backstage.Focused, Win11=Brush.Foreground.Primary'}" />
                            <Setter Property="Fill" TargetName="Expanded" Value="{dx:LWBrush 'Brush.SelectionForeground, VS2019Dark=Brush.Backstage.Focused, Win11=Brush.Foreground.Primary'}" />
                            <Setter Property="Background" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.SelectionBackground, Win11=Brush.ListItem.SelectionBackground'}" />
                        </Trigger>
                        <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                            <Setter Property="MinHeight" TargetName="Button" Value="44" />
                            <Setter Property="MinWidth" TargetName="Button" Value="44" />
                            <Setter Property="Margin" TargetName="Content" Value="14" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="Root" Background="Transparent">
                        <StackPanel Margin="{TemplateBinding Padding}" Orientation="Vertical">
                            <Grid x:Name="Button" Height="16" Width="16">
                                <dx:DXBorder x:Name="IsDefault" Background="Transparent" CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
                                <Path x:Name="Collapsed" Fill="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ForegroundDark, Win11=Brush.Foreground.Primary'}" Style="{StaticResource UIShape.Right}" />
                                <Path
                                    x:Name="Expanded"
                                    Fill="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ForegroundDark, Win11=Brush.Foreground.Primary'}"
                                    Style="{StaticResource UIShape.Left}"
                                    Visibility="Collapsed" />
                            </Grid>
                            <ContentPresenter x:Name="Content" RecognizesAccessKey="True" />
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" TargetName="Collapsed" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="Expanded" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="Collapsed" Value="{dx:LWBrush 'Brush.SelectionForeground, VS2019Dark=Brush.Backstage.Focused, Win11=Brush.Foreground.Primary'}" />
                            <Setter Property="Fill" TargetName="Expanded" Value="{dx:LWBrush 'Brush.SelectionForeground, VS2019Dark=Brush.Backstage.Focused, Win11=Brush.Foreground.Primary'}" />
                            <Setter Property="Background" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.HoverBackground, Win11=Brush.ListItem.HoverBackground'}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="Collapsed" Value="{dx:LWBrush 'Brush.SelectionForeground, VS2019Dark=Brush.Backstage.Focused, Win11=Brush.Foreground.Primary'}" />
                            <Setter Property="Fill" TargetName="Expanded" Value="{dx:LWBrush 'Brush.SelectionForeground, VS2019Dark=Brush.Backstage.Focused, Win11=Brush.Foreground.Primary'}" />
                            <Setter Property="Background" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.SelectionBackground, Win11=Brush.ListItem.SelectionBackground'}" />
                        </Trigger>
                        <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                            <Setter Property="MinHeight" TargetName="Button" Value="44" />
                            <Setter Property="MinWidth" TargetName="Button" Value="44" />
                            <Setter Property="Margin" TargetName="Content" Value="14" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="Root" Background="Transparent">
                        <StackPanel Margin="{TemplateBinding Padding}" Orientation="Vertical">
                            <Grid x:Name="Button" Height="16" Width="16">
                                <dx:DXBorder x:Name="IsDefault" Background="Transparent" CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
                                <Path x:Name="Collapsed" Fill="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ForegroundDark, Win11=Brush.Foreground.Primary'}" Style="{StaticResource UIShape.Left}" />
                                <Path
                                    x:Name="Expanded"
                                    Fill="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ForegroundDark, Win11=Brush.Foreground.Primary'}"
                                    Style="{StaticResource UIShape.Right}"
                                    Visibility="Collapsed" />
                            </Grid>
                            <ContentPresenter x:Name="Content" RecognizesAccessKey="True" />
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" TargetName="Collapsed" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="Expanded" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="Collapsed" Value="{dx:LWBrush 'Brush.SelectionForeground, VS2019Dark=Brush.Backstage.Focused, Win11=Brush.Foreground.Primary'}" />
                            <Setter Property="Fill" TargetName="Expanded" Value="{dx:LWBrush 'Brush.SelectionForeground, VS2019Dark=Brush.Backstage.Focused, Win11=Brush.Foreground.Primary'}" />
                            <Setter Property="Background" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.HoverBackground, Win11=Brush.ListItem.HoverBackground'}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="Collapsed" Value="{dx:LWBrush 'Brush.SelectionForeground, VS2019Dark=Brush.Backstage.Focused, Win11=Brush.Foreground.Primary'}" />
                            <Setter Property="Fill" TargetName="Expanded" Value="{dx:LWBrush 'Brush.SelectionForeground, VS2019Dark=Brush.Backstage.Focused, Win11=Brush.Foreground.Primary'}" />
                            <Setter Property="Background" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.SelectionBackground, Win11=Brush.ListItem.SelectionBackground'}" />
                        </Trigger>
                        <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                            <Setter Property="MinHeight" TargetName="Button" Value="44" />
                            <Setter Property="MinWidth" TargetName="Button" Value="44" />
                            <Setter Property="Margin" TargetName="Content" Value="14" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Expander -->
    <!--#endregion Base\\Core\Core\Themes\Base\StandardControls\Expander.xaml-->

    <!--#region Base\\Core\Core\Themes\Base\StandardControls\ProgressBar.xaml-->
    <!-- General -->
    <!--#endregion Base\\Core\Core\Themes\Base\StandardControls\ProgressBar.xaml-->

    <!--#region Base\\Core\Core\Themes\Base\StandardControls\PasswordBox.xaml-->
    <!-- General -->
    <!--#endregion Base\\Core\Core\Themes\Base\StandardControls\PasswordBox.xaml-->

    <!--#region Base\\Core\Core\Themes\Base\StandardControls\ListBoxItem.xaml-->
    <!-- General -->
    <!--#endregion Base\\Core\Core\Themes\Base\StandardControls\ListBoxItem.xaml-->

    <!--#region Base\\Core\Core\Themes\Base\StandardControls\ListBox.xaml-->
    <!-- General -->
    <!--#endregion Base\\Core\Core\Themes\Base\StandardControls\ListBox.xaml-->

    <!--#region Base\\Core\Core\Themes\Base\StandardControls\TabItem.xaml-->
    <!-- General -->
    <!--#endregion Base\\Core\Core\Themes\Base\StandardControls\TabItem.xaml-->

    <!--#region Base\\Core\Core\Themes\Base\StandardControls\TabControl.xaml-->
    <!-- General -->
    <!--#endregion Base\\Core\Core\Themes\Base\StandardControls\TabControl.xaml-->

    <!--#region Base\\Core\Core\Themes\Base\StandardControls\Separator.xaml-->
    <!-- General -->
    <!--#endregion Base\\Core\Core\Themes\Base\StandardControls\Separator.xaml-->

    <!--#region Base\\Core\Core\Themes\Base\StandardControls\ToolTip.xaml-->
    <!-- General -->
    <!--#endregion Base\\Core\Core\Themes\Base\StandardControls\ToolTip.xaml-->

    <!--#region Base\\Core\Core\Themes\Base\StandardControls\TreeViewItem.xaml-->

    <!-- General -->



    <!-- Item -->
    <!--#endregion Base\\Core\Core\Themes\Base\StandardControls\TreeViewItem.xaml-->

    <!--#region Base\\Core\Core\Themes\Base\StandardControls\TreeView.xaml-->
    <!-- General -->
    <!--#endregion Base\\Core\Core\Themes\Base\StandardControls\TreeView.xaml-->

    <!--#region Base\\Core\Core\Themes\Base\StandardControls\Page.xaml-->
    <!-- General -->
    <!--#endregion Base\\Core\Core\Themes\Base\StandardControls\Page.xaml-->

    <!--#region Base\\Core\Core\Themes\Base\StandardControls\Menu.xaml-->

    <!-- Menu Style -->
    <!--#endregion Base\\Core\Core\Themes\Base\StandardControls\Menu.xaml-->

    <!--#region Base\\Core\Core\Themes\Base\StandardControls\GridSplitter.xaml-->
    <Style x:Key="PreviewStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <dx:DXBorder Background="{StaticResource Brush.Delimiter}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- General -->
    <!--#endregion Base\\Core\Core\Themes\Base\StandardControls\GridSplitter.xaml-->

    <!--#region Base\\Core\Core\Themes\Base\StandardControls\GroupBox.xaml-->


    <!-- General -->

    <ControlTemplate x:Key="{dxt:LWKey GroupBox.ControlTemplate}" TargetType="{x:Type GroupBox}">
        <Grid SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="6" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="6" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="6" />
            </Grid.RowDefinitions>
            <dx:DXBorder
                Grid.Row="1"
                Grid.RowSpan="3"
                Grid.ColumnSpan="4"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{dx:LWCornerRadius '0, Win11=4'}"
                UseLayoutRounding="True">
                <dx:DXBorder.OpacityMask>
                    <MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="10">
                        <Binding ElementName="Header" Path="ActualWidth" />
                        <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
                        <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
                    </MultiBinding>
                </dx:DXBorder.OpacityMask>
            </dx:DXBorder>
            <dx:DXBorder
                x:Name="Header"
                Grid.Row="0"
                Grid.RowSpan="2"
                Grid.Column="1"
                Padding="8,1,0,0">
                <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </dx:DXBorder>
            <ContentPresenter
                Grid.Row="2"
                Grid.Column="1"
                Grid.ColumnSpan="2"
                Margin="{TemplateBinding Padding}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasHeader" Value="False">
                <Setter Property="Width" TargetName="Header" Value="0" />
                <Setter Property="Height" TargetName="Header" Value="17" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion Base\\Core\Core\Themes\Base\StandardControls\GroupBox.xaml-->


    <!--#region DEFAULT STYLES-->
    <Style x:Key="Label.DefaultStyle" TargetType="{x:Type Label}">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Foreground" Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
        <Setter Property="Padding" Value="0,3,0,3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <dx:DXBorder
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ContentPresenter
                            x:Name="Content"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="{TemplateBinding Padding}"
                            RecognizesAccessKey="True"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </dx:DXBorder>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="Content" Value="0.38" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding" Value="0,14,0,14" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ThemedWindowDialogButton.DefaultStyle" BasedOn="{StaticResource SimpleButton.DefaultStyle}" TargetType="{x:Type dx:ThemedWindowDialogButton}">
        <Setter Property="MinHeight" Value="22" />
        <Setter Property="MinWidth" Value="70" />
        <Setter Property="Margin" Value="2,0,2,0" />
        <Setter Property="AutomationProperties.AutomationId" Value="{Binding Path=Content, RelativeSource={RelativeSource Self}, Converter={dx:ThemedDialogButtonNameConverter}, FallbackValue={x:Static sys:String.Empty}, TargetNullValue={x:Static sys:String.Empty}}" />
        <Setter Property="AutomationProperties.Name" Value="{Binding Path=Content, RelativeSource={RelativeSource Self}, FallbackValue={x:Static sys:String.Empty}, TargetNullValue={x:Static sys:String.Empty}}" />
        <Setter Property="GlyphHeight" Value="16" />
    </Style>
    
    <Style x:Key="ScrollViewer.DefaultStyle" TargetType="{x:Type ScrollViewer}">
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Border}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <dx:DXBorder Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="Column1" Width="*" />
                                <ColumnDefinition x:Name="Column2" Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="Row1" Height="*" />
                                <RowDefinition x:Name="Row2" Height="Auto" />
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter
                                x:Name="PART_ScrollContentPresenter"
                                Grid.Row="0"
                                Grid.Column="0"
                                CanContentScroll="{TemplateBinding CanContentScroll}"
                                CanHorizontallyScroll="False"
                                CanVerticallyScroll="False"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Margin="{TemplateBinding Padding}" />
                            <ScrollBar
                                x:Name="PART_VerticalScrollBar"
                                Grid.Row="0"
                                Grid.Column="1"
                                AutomationProperties.AutomationId="VerticalScrollBar"
                                Cursor="Arrow"
                                Maximum="{TemplateBinding ScrollableHeight}"
                                Minimum="0"
                                Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                ViewportSize="{TemplateBinding ViewportHeight}"
                                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                            <ScrollBar
                                x:Name="PART_HorizontalScrollBar"
                                Grid.Row="1"
                                Grid.Column="0"
                                AutomationProperties.AutomationId="HorizontalScrollBar"
                                Cursor="Arrow"
                                Maximum="{TemplateBinding ScrollableWidth}"
                                Minimum="0"
                                Orientation="Horizontal"
                                Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                ViewportSize="{TemplateBinding ViewportWidth}"
                                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
                            <Rectangle
                                x:Name="corner"
                                Grid.Row="1"
                                Grid.Column="1"
                                Fill="{dx:LWBrush 'Brush.Button.Background, Office2019Black=#00000000, Office2019Colorful=Brush.Window.Background, Office2019HighContrast=Brush.Window.Background, VS2019Blue=Brush.Control.Background, Win10Dark=Brush.Editor.Background, Win11=Brush.Button.SimpleButtonBackground'}" />
                        </Grid>
                    </dx:DXBorder>
                    <ControlTemplate.Triggers>
                        <Trigger Property="dx:ScrollBarExtensions.ScrollBarMode" Value="TouchOverlap">
                            <Setter Property="Grid.RowSpan" TargetName="PART_ScrollContentPresenter" Value="2" />
                            <Setter Property="Grid.ColumnSpan" TargetName="PART_ScrollContentPresenter" Value="2" />
                            <Setter Property="Visibility" TargetName="corner" Value="Collapsed" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="dx:ScrollBarExtensions.ScrollBarMode" Value="TouchOverlap" />
                                <Condition Property="dx:ScrollBarExtensions.ScrollViewerOrientation" Value="Horizontal" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Grid.ColumnSpan" TargetName="PART_HorizontalScrollBar" Value="2" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="dx:ScrollBarExtensions.ScrollBarMode" Value="TouchOverlap" />
                                <Condition Property="dx:ScrollBarExtensions.ScrollViewerOrientation" Value="Vertical" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Grid.RowSpan" TargetName="PART_VerticalScrollBar" Value="2" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="dx:ScrollBarExtensions.AllowMouseScrolling" Value="True" />
        <Setter Property="dx:ScrollBarExtensions.ScrollBehavior" Value="{dx:ScrollViewerScrollBehavior}" />
        <Setter Property="dx:ScrollViewerTouchBehavior.IsEnabled" Value="True" />
    </Style>
    <Style x:Key="Expander.DefaultStyle" TargetType="{x:Type Expander}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Grid x:Name="Root" Background="Transparent">
                        <DockPanel>
                            <ToggleButton
                                x:Name="Header"
                                Content="{TemplateBinding Header}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                DockPanel.Dock="Top"
                                FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                FontStretch="{TemplateBinding FontStretch}"
                                FontStyle="{TemplateBinding FontStyle}"
                                FontWeight="{TemplateBinding FontWeight}"
                                Foreground="{TemplateBinding Foreground}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Margin="1"
                                Padding="{TemplateBinding Padding}"
                                Style="{StaticResource ExpanderDownHeaderStyle}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                            <ContentPresenter
                                x:Name="Button"
                                DockPanel.Dock="Bottom"
                                Focusable="false"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Visibility="Collapsed" />
                        </DockPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter Property="Visibility" TargetName="Button" Value="Visible" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter Property="DockPanel.Dock" TargetName="Button" Value="Right" />
                            <Setter Property="DockPanel.Dock" TargetName="Header" Value="Left" />
                            <Setter Property="Style" TargetName="Header" Value="{StaticResource ExpanderRightHeaderStyle}" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter Property="DockPanel.Dock" TargetName="Button" Value="Top" />
                            <Setter Property="DockPanel.Dock" TargetName="Header" Value="Bottom" />
                            <Setter Property="Style" TargetName="Header" Value="{StaticResource ExpanderUpHeaderStyle}" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter Property="DockPanel.Dock" TargetName="Button" Value="Left" />
                            <Setter Property="DockPanel.Dock" TargetName="Header" Value="Right" />
                            <Setter Property="Style" TargetName="Header" Value="{StaticResource ExpanderLeftHeaderStyle}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="Root" Value="0.38" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
    </Style>
    <Style x:Key="ListBox.DefaultStyle" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{dx:LWBrush 'Brush.Editor.Background, Win11=#00000000'}" />
        <Setter Property="BorderBrush" Value="{dx:LWBrush 'Brush.Border, Win11=Brush.PanelBorder'}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="{dx:LWThickness '1, Win11=2'}" />
        <Setter Property="Foreground" Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Grid x:Name="Root">
                        <dx:DXBorder
                            x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{dx:LWCornerRadius '0, Win11=7'}"/>
                        <ScrollViewer
                            x:Name="Content"
                            Focusable="False"
                            Margin="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="Border" Value="0.38" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="True" />
                                <Condition Property="dxi:VirtualizingPanelHelper.IsVirtualizingWhenGrouping" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="dxi:VirtualizingPanelHelper.CanVirtualizeWhenGrouping" Value="True" />
    </Style>
    <Style x:Key="TabControl.DefaultStyle" TargetType="{x:Type TabControl}">
        <Setter Property="Background" Value="{dx:LWBrush 'Brush.Control.Background, Office2019Black=Brush.Window.Background, Office2019Colorful=Brush.Window.Background, Office2019HighContrast=Brush.Window.Background, Win11=Brush.WindowBackground'}" />
        <Setter Property="BorderBrush" Value="{dx:LWBrush 'Brush.Border, Win11=Brush.PanelBorder'}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="11" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                            <RowDefinition x:Name="RowDefinition1" Height="*" />
                        </Grid.RowDefinitions>
                        <TabPanel
                            x:Name="HeaderPanel"
                            Grid.Row="0"
                            Grid.Column="0"
                            IsItemsHost="True"
                            KeyboardNavigation.TabIndex="1"
                            Margin="{dx:LWThickness '0, Win11=(8,0)'}"
                            Panel.ZIndex="1" />
                        <dx:DXBorder
                            x:Name="ContentPanel"
                            Grid.Row="1"
                            Grid.Column="0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{dx:LWCornerRadius '0, Win11=7'}"
                            KeyboardNavigation.DirectionalNavigation="Contained"
                            KeyboardNavigation.TabIndex="2"
                            KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter
                                x:Name="PART_SelectedContentHost"
                                ContentSource="SelectedContent"
                                dx:FrameworkElementHelper.ClipCornerRadius="{dx:LWDouble '0, Win11=7'}"
                                Margin="{TemplateBinding Padding}"/>
                        </dx:DXBorder>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*" />
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="{dx:LWThickness '0, Win11=(0,8)'}" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto" />
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1" />
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="{dx:LWThickness '0, Win11=(0,8)'}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="ContentPanel" Value="0.38" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding" Value="13" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="Separator.DefaultStyle" TargetType="{x:Type Separator}">
        <Setter Property="BorderBrush" Value="{dx:LWBrush 'Brush.Delimiter, Office2019Black=Brush.Editor.Delimiter, Win10Dark=Brush.AltBorder, Win11=Brush.Separator'}" />
        <Setter Property="BorderThickness" Value="0,1,0,0" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Margin" Value="0,2,0,2" />
        <Setter Property="MinHeight" Value="1" />
        <Setter Property="MinWidth" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <dx:DXBorder
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        MinHeight="{TemplateBinding MinHeight}"
                        MinWidth="{TemplateBinding MinWidth}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Margin" Value="0,14,0,14" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ToolTip.DefaultStyle" TargetType="{x:Type ToolTip}">
        <Setter Property="Background" Value="{dx:LWBrush 'Brush.Control.Background, Office2019Black=Brush.ControlLight.Background, VS2019Blue=Brush.Window.Background, VS2019Dark=Brush.HoverBackground'}" />
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ControlLight.Foreground, Win11=Brush.Foreground.Primary'}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Padding" Value="6,4,6,4" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolTip}">
                    <Grid>
                        <dx:DXBorder
                            Background="{TemplateBinding Background}"
                            CornerRadius="{dx:LWCornerRadius '0, Win11=7'}"
                            Margin="0,0,5,5">
                            <dx:DXBorder.Effect>
                                <DropShadowEffect
                                    x:Name="Shadow"
                                    BlurRadius="{dx:LWDouble '4, Win11=7'}"
                                    Color="{dx:LWColor '#FF000000, VS2019Blue=#00FFFFFF, VS2019Dark=#00FFFFFF, VS2019Light=#00FFFFFF'}"
                                    Direction="315"
                                    Opacity="0.14"
                                    ShadowDepth="3" />
                            </dx:DXBorder.Effect>
                        </dx:DXBorder>
                        <dx:DXBorder
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{dx:LWCornerRadius '0, Win11=7'}"
                            Margin="0,0,5,5"
                            Padding="{TemplateBinding Padding}">
                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                TextElement.FontFamily="{TemplateBinding FontFamily}"
                                TextElement.FontSize="{TemplateBinding FontSize}"
                                TextElement.FontStyle="{TemplateBinding FontStyle}"
                                TextElement.FontWeight="{TemplateBinding FontWeight}"
                                TextElement.Foreground="{TemplateBinding Foreground}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </dx:DXBorder>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="True" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding" Value="14" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TreeViewItem.DefaultStyle" TargetType="{x:Type TreeViewItem}">
        <Setter Property="dx:SvgImageHelper.State" Value="Normal" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
        <Setter Property="Foreground" Value="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ControlLight.Foreground, Win11=Brush.Foreground.Primary'}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="{dx:LWThickness '3, Win11=(8,5,3,7)'}" />
        <Setter Property="Margin" Value="{dx:LWThickness '0, Win11=(0,1)'}" />
        <Setter Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxt:LWKey Brushes.ContrastSvgPalette}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid x:Name="Root">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ButtonColumn" MinWidth="16" Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <ToggleButton
                            x:Name="Expander"
                            ClickMode="Press"
                            IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{StaticResource ExpandCollapseToggleStyle}" />
                        <dx:DXBorder
                            x:Name="IsDefault"
                            Grid.Column="1"
                            Grid.ColumnSpan="2"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="1"
                            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}"/>
                        <dx:DXBorder
                            x:Name="Content"
                            Grid.Column="1"
                            Grid.ColumnSpan="2"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}">
                            <ContentPresenter
                                x:Name="PART_Header"
                                ContentSource="Header"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}" />
                        </dx:DXBorder>
                        <ItemsPresenter
                            x:Name="ItemsHost"
                            Grid.Row="1"
                            Grid.Column="1"
                            Grid.ColumnSpan="2" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="Visibility" TargetName="Expander" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{dx:LWBrush 'Brush.SelectionForeground, Office2019Black=Brush.ControlLight.SelectionForeground, VS2019Blue=Brush.Foreground, VS2019Light=Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
                            <Setter Property="Background" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.HoverBackground, Office2019Black=Brush.ControlLight.SelectionBackground, Office2019HighContrast=Brush.SelectionBackground, VS2019Blue=Brush.ControlLight.SelectionBackground, Win11=Brush.ListItem.HoverBackground'}" />
                            <Setter Property="BorderBrush" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.HoverBackground, Office2019Black=Brush.ControlLight.SelectionBackground, Office2019Colorful=Brush.HoverBorder, VS2019Blue=Brush.ControlLight.HoverBorder, VS2019Light=Brush.HoverBorder, Win11=Brush.ListItem.HoverBackground'}" />
                            <Setter Property="dx:SvgImageHelper.State" Value="Pressed" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsSelectionActive" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{dx:LWBrush 'Brush.SelectionForeground, Office2019Black=Brush.ControlLight.SelectionForeground, VS2019Blue=Brush.Foreground, VS2019Light=Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
                            <Setter Property="Background" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.HoverBackground, Office2019Black=Brush.ControlLight.SelectionBackground, Office2019Colorful=Brush.SelectionBackground, Office2019HighContrast=Brush.SelectionBackground, VS2019Blue=Brush.ControlLight.HoverBackground, Win11=Brush.ListItem.HoverBackground'}" />
                            <Setter Property="BorderBrush" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.HoverBackground, Office2019Black=Brush.ControlLight.SelectionBackground, Office2019Colorful=Brush.SelectionBorder, VS2019Blue=Brush.ControlLight.HoverBorder, Win11=Brush.ListItem.HoverBackground'}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" SourceName="Content" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{dx:LWBrush 'Brush.HoverForeground, Office2019Black=Brush.ControlLight.HoverForeground, Win11=Brush.Foreground.Primary'}" />
                            <Setter Property="Background" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.HoverBackground, Office2019Black=Brush.ControlLight.HoverBackground, VS2019Blue=Brush.ControlLight.HoverBackground, Win11=Brush.ListItem.HoverBackground'}" />
                            <Setter Property="BorderBrush" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.HoverBackground, Office2019Black=Brush.ControlLight.HoverBackground, VS2019Blue=Brush.ControlLight.HoverBorder, Win11=Brush.ListItem.HoverBackground'}" />
                            <Setter Property="dx:SvgImageHelper.State" Value="Hover" />
                        </MultiTrigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Foreground" Value="{dx:LWBrush 'Brush.SelectionForeground, Office2019Black=Brush.ControlLight.SelectionForeground, VS2019Dark=Brush.Backstage.Focused, Win11=Brush.Foreground.Primary'}" />
                            <Setter Property="Background" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.SelectionBackground, Office2019Black=Brush.ControlLight.SelectionBackground, VS2019Blue=Brush.ControlLight.SelectionBackground, Win11=Brush.ListItem.SelectionBackground'}" />
                            <Setter Property="BorderBrush" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.SelectionBackground, Office2019Black=Brush.ControlLight.SelectionBackground, Office2019Colorful=Brush.SelectionBorder, Office2019HighContrast=Brush.SelectionBorder, VS2019Blue=Brush.ControlLight.SelectionBorder, VS2019Light=Brush.SelectionBorder, Win11=Brush.ListItem.SelectionBackground'}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="Content" Value="{dx:LWDouble '0.38, Win11=1'}" />
                            <Setter Property="Foreground" Value="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ControlLight.Foreground, Win11=Brush.Foreground.Disabled'}" />
                        </Trigger>
                        <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                            <Setter Property="MinWidth" TargetName="ButtonColumn" Value="44" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding" Value="14,13,14,13" />
            </Trigger>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="True">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TreeView.DefaultStyle" TargetType="{x:Type TreeView}">
        <Setter Property="Background" Value="{dx:LWBrush 'Brush.Editor.Background, VS2019Dark=Brush.Control.Background, Win11=#00000000'}" />
        <Setter Property="BorderBrush" Value="{dx:LWBrush 'Brush.Border, Win11=Brush.PanelBorder'}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <dx:DXBorder
                        x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{dx:LWCornerRadius '0, Win11=7'}"
                        Padding="{dx:LWThickness '0, Win11=2'}">
                        <ScrollViewer
                            x:Name="Content"
                            CanContentScroll="False"
                            Focusable="False"
                            Padding="{TemplateBinding Padding}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </dx:DXBorder>
                    <ControlTemplate.Triggers>
                        <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                            <Setter Property="CanContentScroll" TargetName="Content" Value="True" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True" />
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="Page.DefaultStyle" BasedOn="{StaticResource {x:Type Page}}" TargetType="{x:Type Page}">
        <Setter Property="Foreground" Value="{DynamicResource {dxt:LWKey ThemeColors.BlackForegroundColor}}" />
        <Setter Property="Background" Value="{DynamicResource {dxt:LWKey FloatingContainer.FloatingContainerBackground}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Page}">
                    <dx:DXBorder Background="{TemplateBinding Background}">
                        <ContentPresenter ClipToBounds="true" Content="{TemplateBinding Content}" />
                    </dx:DXBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GridSplitter.DefaultStyle" TargetType="{x:Type GridSplitter}">
        <Setter Property="Background" Value="{dx:LWBrush 'Brush.Border, Win11=Brush.Separator'}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="PreviewStyle" Value="{StaticResource PreviewStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridSplitter}">
                    <Grid Background="Transparent" Margin="{TemplateBinding Margin}" Panel.ZIndex="200">
                        <dx:DXBorder x:Name="Border" Background="Transparent" Margin="-3">
                            <dx:DXBorder
                                x:Name="IsDefault"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Margin="3"
                                MinHeight="1"
                                MinWidth="1" />
                        </dx:DXBorder>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush Color="{dx:LWColor 'Color.HoverBackground, Win11=Color.Border'}" />
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush Color="{dx:LWColor 'Color.SelectionBackground, Win11=Color.Foreground.AltMuted'}" />
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                            <Setter Property="Margin" TargetName="Border" Value="-12" />
                            <Setter Property="Margin" TargetName="IsDefault" Value="12" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GroupBox.DefaultStyle" TargetType="{x:Type GroupBox}">
        <Setter Property="Padding" Value="6,8" />
        <Setter Property="BorderBrush" Value="{dx:LWBrush 'Brush.Border, Win10Dark=Brush.AltBorder, Win11=Brush.PanelBorder'}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template" Value="{DynamicResource {dxt:LWKey GroupBox.ControlTemplate}}" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding" Value="14" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="GroupFrame.DefaultStyle" TargetType="{x:Type dx:GroupFrame}">
        <Setter Property="Foreground" Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
        <Setter Property="Padding" Value="12,8,12,12" />
        <Setter Property="Template" Value="{DynamicResource {dxt:LWKey GroupBox.ControlTemplate}}" />
        <Setter Property="dx:FocusHelper2.Focusable" Value="False" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding" Value="14" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion DEFAULT STYLES-->


</ResourceDictionary>