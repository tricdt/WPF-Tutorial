<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:data="clr-namespace:DevExpress.Xpf.Core;assembly=DevExpress.Data.Desktop.v24.1"
    xmlns:dx="clr-namespace:DevExpress.Xpf.Core;assembly=DevExpress.Xpf.Core.v24.1"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dxeh="clr-namespace:DevExpress.Xpf.Editors.Helpers;assembly=DevExpress.Xpf.Core.v24.1"
    xmlns:dxei="clr-namespace:DevExpress.Xpf.Editors.Internal;assembly=DevExpress.Xpf.Core.v24.1"
    xmlns:dxet="clr-namespace:DevExpress.Xpf.Editors.Themes;assembly=DevExpress.Xpf.Core.v24.1"
    xmlns:dxi="clr-namespace:DevExpress.Xpf.Core.Native;assembly=DevExpress.Xpf.Core.v24.1"
    xmlns:dxt="clr-namespace:DevExpress.Xpf.Utils.Themes;assembly=DevExpress.Xpf.Core.v24.1"
    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm">

    <ResourceDictionary.MergedDictionaries>
        <dxi:ThemeResourceDictionary Path="Core/Editors/Editors.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <dxi:RenderDropDownArrowTemplateSelector x:Key="RenderDropDownArrowTemplateSelector" />
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <dxeh:BrushToSvgPaletteConverter x:Key="BrushToSvgPaletteConverter" />
    <dx:EmbeddedResourceImageConverter x:Key="EmbeddedResourceImageConverter" />
    <dxe:MemoEditIconIndexConverter x:Key="MemoEditIconIndexConverter" />


    <!--#region Editors\Themes\Generic\InplaceBaseEdit.xaml-->
    <SolidColorBrush x:Key="ArrowBrush" Color="{StaticResource {dxt:LWKey SpinEdit.ArrowBrushColor}}" />


    <dxei:InplaceBaseEditTemplateSelector x:Key="{dxt:LWKey InplaceBaseEdit.TextEditInplaceTemplateSelector}" />
    <dxei:InplaceButtonInfoTemplateSelector x:Key="{dxt:LWKey InplaceBaseEdit.ButtonInfoTemplateSelector}" />
    <dxei:DefaultButtonInfoTemplateSelector x:Key="{dxt:LWKey InplaceBaseEdit.DefaultButtonInfoTemplateSelector}" />
    <dxei:ValidationErrorTemplateSelector x:Key="{dxt:LWKey InplaceBaseEdit.ValidationErrorTemplateSelector}" />
    <dxei:RenderButtonTemplateSelector x:Key="{dxt:LWKey InplaceBaseEdit.RenderButtonContainerTemplateSelector}" />

    <dxi:RenderTemplate x:Key="{dxt:LWKey InplaceBaseEdit.ImageButtonInfoGlyphTemplate}">
        <dxi:RenderPanel Name="root">
            <dxi:RenderImage Name="PART_Image" Width="16" Height="16" />
        </dxi:RenderPanel>
        <dxi:RenderTemplate.Triggers>
            <dxi:RenderBinding
                DependencyProperty="{x:Static dxe:ImageButtonInfo.GlyphProperty}"
                TargetProperty="Source"
                ValueSource="DataContext"
                TargetName="PART_Image" />
            <dxi:RenderStateGroup Name="TouchStates">
                <dxi:RenderStateTrigger Name="NonTouch" />
                <dxi:RenderStateTrigger Name="Touch">
                    <dxi:RenderSetter TargetName="root" Property="MinWidth" Value="42" />
                </dxi:RenderStateTrigger>
            </dxi:RenderStateGroup>
        </dxi:RenderTemplate.Triggers>
    </dxi:RenderTemplate>
    <dxi:RenderTemplate x:Key="{dxt:LWKey InplaceBaseEdit.DateEditButtonInfoGlyphTemplate}">
        <dxi:RenderPanel Name="root2">
            <dxi:RenderImage Name="PART_Image" Width="16" Height="16" />
        </dxi:RenderPanel>
        <dxi:RenderTemplate.Triggers>
            <dxi:RenderBinding
                Converter="{StaticResource BrushToSvgPaletteConverter}"
                ConverterParamenter="BlackColor"
                DependencyProperty="{x:Static dxe:ImageButtonInfo.ForegroundProperty}"
                TargetProperty="SvgPalette"
                ValueSource="DataContext"
                TargetName="PART_Image" />
            <dxi:RenderBinding
                DependencyProperty="{x:Static dxe:ImageButtonInfo.GlyphProperty}"
                TargetProperty="Source"
                ValueSource="DataContext"
                TargetName="PART_Image" />
            <dxi:RenderStateGroup Name="TouchStates">
                <dxi:RenderStateTrigger Name="NonTouch" />
                <dxi:RenderStateTrigger Name="Touch">
                    <dxi:RenderSetter TargetName="root2" Property="MinWidth" Value="42" />
                </dxi:RenderStateTrigger>
            </dxi:RenderStateGroup>
        </dxi:RenderTemplate.Triggers>
    </dxi:RenderTemplate>

    <DataTemplate x:Key="{dxt:LWKey InplaceBaseEdit.ValidationErrorToolTipTemplate}">
        <TextBlock Text="{Binding Path=ErrorContent}" TextWrapping="Wrap" />
    </DataTemplate>
    <DataTemplate x:Key="{dxt:LWKey InplaceBaseEdit.TrimmedTextToolTipTemplate}">
        <TextBlock Text="{Binding}" TextWrapping="Wrap" />
    </DataTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey InplaceBaseEdit.RealContentPresenterTemplate}">
        <dxi:RenderRealContentPresenter Name="PART_ContentPresenter" />
    </dxi:RenderTemplate>
    <dxi:RenderTemplate x:Key="{dxt:LWKey InplaceBaseEdit.ContentPresenterTemplate}">
        <dxi:RenderContentPresenter Name="PART_ContentPresenter" />
    </dxi:RenderTemplate>
    <dxi:RenderTemplate x:Key="{dxt:LWKey InplaceBaseEdit.TextContentPresenterTemplate}">
        <dxi:RenderTextBlock Name="textBlock" ClipToBounds="True" />
        <dxi:RenderTemplate.Triggers>
            <dxi:RenderBinding TargetProperty="Text" TargetName="textBlock" />
        </dxi:RenderTemplate.Triggers>
    </dxi:RenderTemplate>
    <dxi:RenderTemplate x:Key="{dxt:LWKey InplaceBaseEdit.TextEditInplaceActiveTemplate}">
        <dxei:RenderBaseEdit Name="PART_Editor" />
    </dxi:RenderTemplate>
    <dxi:RenderTemplate x:Key="{dxt:LWKey InplaceBaseEdit.CheckEditInplaceInactiveTemplate}">
        <dxi:RenderPanel Name="PART_Root" LayoutProvider="{dxi:DockPanelLayoutProvider LastChildFill=True}" UseLayoutRounding="True">
            <dxi:RenderContentControl
                Name="PART_ErrorProvider"
                Margin="{StaticResource {dxt:LWKey InplaceBaseEdit.ValidationErrorPadding}}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Dock="Left"
                PreferRenderTemplate="false"
                RenderContentTemplateSelector="{StaticResource {dxt:LWKey InplaceBaseEdit.ValidationErrorTemplateSelector}}"
                Visibility="Collapsed" />
            <dxe:EditorRenderCheckBox
                Name="PART_Editor"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                UsePropagatedIsMouseOver="True" />
        </dxi:RenderPanel>
    </dxi:RenderTemplate>
    <dxi:RenderTemplate x:Key="{dxt:LWKey InplaceBaseEdit.RenderImageCheckBoxTemplate}">
        <dxi:RenderPanel Name="Root" LayoutProvider="{dxi:DockPanelLayoutProvider LastChildFill=True}">
            <dxi:RenderPanel Dock="Left" FlowDirection="LeftToRight">
                <dxi:RenderContentControl
                    Name="PART_ErrorProvider"
                    Margin="{StaticResource {dxt:LWKey InplaceBaseEdit.ValidationErrorPadding}}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Dock="Left"
                    PreferRenderTemplate="false"
                    RenderContentTemplateSelector="{StaticResource {dxt:LWKey InplaceBaseEdit.ValidationErrorTemplateSelector}}"
                    Visibility="Collapsed" />
                <dxi:RenderImage Name="PART_Image" Width="14" Height="14" />
            </dxi:RenderPanel>
            <dxi:RenderContentPresenter Name="PART_ContentPresenter" Visibility="Collapsed" />
        </dxi:RenderPanel>
        <dxi:RenderTemplate.Triggers>
            <dxi:RenderTrigger DependencyProperty="{x:Static dx:ThemeManager.IsTouchEnabledProperty}" ValueSource="Chrome" Value="True">
                <dxi:RenderSetter TargetName="PART_Image" Property="MinWidth" Value="40" />
                <dxi:RenderSetter TargetName="PART_Image" Property="MinHeight" Value="40" />
            </dxi:RenderTrigger>
        </dxi:RenderTemplate.Triggers>
    </dxi:RenderTemplate>
    <dxi:RenderTemplate x:Key="{dxt:LWKey InplaceBaseEdit.RenderImageWithTemplateCheckBoxTemplate}">
        <dxi:RenderPanel Name="Root" LayoutProvider="{dxe:EditorRenderCheckBoxLayoutProvider LastChildFill=True}">
            <dxi:RenderPanel Dock="Left">
                <dxi:RenderContentControl
                    Name="PART_ErrorProvider"
                    Margin="{StaticResource {dxt:LWKey InplaceBaseEdit.ValidationErrorPadding}}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Dock="Left"
                    PreferRenderTemplate="false"
                    RenderContentTemplateSelector="{StaticResource {dxt:LWKey InplaceBaseEdit.ValidationErrorTemplateSelector}}"
                    Visibility="Collapsed" />
                <dxi:RenderContentPresenter Name="PART_Image" />
            </dxi:RenderPanel>
            <dxi:RenderContentPresenter Name="PART_ContentPresenter" Visibility="Collapsed" />
        </dxi:RenderPanel>
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey InplaceBaseEdit.CommonBaseEditInplaceInactiveTemplate}">
        <dxi:RenderPanel>
            <dxi:RenderControl Name="PART_Border" Visibility="Collapsed" />
            <dxi:RenderPanel Name="PART_Root" LayoutProvider="{dxi:DockPanelLayoutProvider LastChildFill=True}">
                <dxi:RenderContentControl
                    Name="PART_ErrorProvider"
                    Margin="{StaticResource {dxt:LWKey InplaceBaseEdit.ValidationErrorPadding}}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Dock="Left"
                    PreferRenderTemplate="false"
                    RenderContentTemplateSelector="{StaticResource {dxt:LWKey InplaceBaseEdit.ValidationErrorTemplateSelector}}"
                    Visibility="Collapsed" />
                <dxi:RenderItemsControl
                    Name="PART_LeftButtons"
                    Margin="{StaticResource {dxt:LWKey ButtonEdit.ButtonEditPadding}}"
                    Dock="Left"
                    ItemTemplateSelector="{StaticResource {dxt:LWKey InplaceBaseEdit.RenderButtonContainerTemplateSelector}}"
                    Visibility="Collapsed">
                    <dxi:RenderItemsControl.ItemPanelTemplate>
                        <dxi:RenderPanel LayoutProvider="{x:Static dxe:ButtonsPanelLayoutProvider.ButtonsPanelInstance}" />
                    </dxi:RenderItemsControl.ItemPanelTemplate>
                </dxi:RenderItemsControl>
                <dxi:RenderItemsControl
                    Name="PART_RightButtons"
                    Margin="{StaticResource {dxt:LWKey ButtonEdit.ButtonEditPadding}}"
                    Dock="Right"
                    ItemTemplateSelector="{StaticResource {dxt:LWKey InplaceBaseEdit.RenderButtonContainerTemplateSelector}}"
                    Visibility="Collapsed">
                    <dxi:RenderItemsControl.ItemPanelTemplate>
                        <dxi:RenderPanel LayoutProvider="{x:Static dxe:ButtonsPanelLayoutProvider.ButtonsPanelInstance}" />
                    </dxi:RenderItemsControl.ItemPanelTemplate>
                </dxi:RenderItemsControl>
                <dxi:RenderTextBlock
                    Name="PART_Editor"
                    Margin="{StaticResource {dxt:LWKey InplaceBaseEdit.TextEditPadding}}"
                    AllowGlyphRunRendering="{x:Static data:CompatibilitySettings.AllowGlyphRunRenderingInInplaceEditors}"
                    ClipToBounds="True" />
            </dxi:RenderPanel>
            <dxi:RenderControl Name="PART_Glow" Visibility="Collapsed" />
        </dxi:RenderPanel>
        <dxi:RenderTemplate.Triggers>
            <dxi:RenderStateGroup Name="TouchStates">
                <dxi:RenderStateTrigger Name="NonTouch" />
                <dxi:RenderStateTrigger Name="Touch">
                    <dxi:RenderSetter TargetName="PART_Editor" Property="Margin" Value="13" />
                </dxi:RenderStateTrigger>
            </dxi:RenderStateGroup>
        </dxi:RenderTemplate.Triggers>
    </dxi:RenderTemplate>
    <ControlTemplate x:Key="{dxt:LWKey InplaceBaseEdit.SelectedItemImageTemplate}" TargetType="{x:Type dxei:EditorControlStub}">
        <DockPanel MinHeight="20" LastChildFill="True">
            <dxei:ImagePresenter x:Name="PART_Image" Padding="{StaticResource {dxt:LWKey ComboBoxEdit.SelectedItemImagePadding}}" DockPanel.Dock="Left" />
            <ContentPresenter x:Name="PART_ContentPresenter" Margin="{StaticResource {dxt:LWKey ComboBoxEdit.SelectedItemContentPadding}}" />
        </DockPanel>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:LWKey InplaceBaseEdit.SelectedItemTemplate}" TargetType="{x:Type dxei:EditorControlStub}">
        <ContentPresenter x:Name="PART_ContentPresenter" MinHeight="16" Margin="{DynamicResource {dxt:LWKey ComboBoxEdit.SelectedItemContentPadding}}" />
    </ControlTemplate>
    <dxi:RenderTemplate x:Key="{dxt:LWKey InplaceBaseEdit.CommonBaseEditInplaceInactiveTemplateWithDisplayTemplate}">
        <dxi:RenderPanel>
            <dxi:RenderControl Name="PART_Border" Visibility="Collapsed" />
            <dxi:RenderPanel Name="PART_Root" Margin="{StaticResource {dxt:LWKey InplaceBaseEdit.TextEditBorderThickness}}" LayoutProvider="{dxi:DockPanelLayoutProvider LastChildFill=True}">
                <dxi:RenderContentControl
                    Name="PART_ErrorProvider"
                    Margin="{StaticResource {dxt:LWKey InplaceBaseEdit.ValidationErrorPadding}}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Dock="Left"
                    PreferRenderTemplate="false"
                    RenderContentTemplateSelector="{StaticResource {dxt:LWKey InplaceBaseEdit.ValidationErrorTemplateSelector}}"
                    Visibility="Collapsed" />
                <dxi:RenderItemsControl
                    Name="PART_LeftButtons"
                    Margin="{StaticResource {dxt:LWKey ButtonEdit.ButtonEditPadding}}"
                    Dock="Left"
                    ItemTemplateSelector="{StaticResource {dxt:LWKey InplaceBaseEdit.RenderButtonContainerTemplateSelector}}"
                    Visibility="Collapsed">
                    <dxi:RenderItemsControl.ItemPanelTemplate>
                        <dxi:RenderPanel LayoutProvider="{dxe:ButtonsPanelLayoutProvider}" />
                    </dxi:RenderItemsControl.ItemPanelTemplate>
                </dxi:RenderItemsControl>
                <dxi:RenderItemsControl
                    Name="PART_RightButtons"
                    Margin="{StaticResource {dxt:LWKey ButtonEdit.ButtonEditPadding}}"
                    Dock="Right"
                    ItemTemplateSelector="{StaticResource {dxt:LWKey InplaceBaseEdit.RenderButtonContainerTemplateSelector}}"
                    Visibility="Collapsed">
                    <dxi:RenderItemsControl.ItemPanelTemplate>
                        <dxi:RenderPanel LayoutProvider="{dxe:ButtonsPanelLayoutProvider}" />
                    </dxi:RenderItemsControl.ItemPanelTemplate>
                </dxi:RenderItemsControl>
                <dxei:RenderEditorControl Name="PART_Editor" />
            </dxi:RenderPanel>
            <dxi:RenderControl Name="PART_Glow" Visibility="Collapsed" />
        </dxi:RenderPanel>
        <dxi:RenderTemplate.Triggers>
            <dxi:ConditionalRenderBinding
                DependencyProperty="{x:Static dxi:AppearanceOptions.BorderThicknessProperty}"
                TargetProperty="Margin"
                ValueSource="TemplatedParent"
                TargetName="PART_Root">
                <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasBorderThicknessProperty}" ValueSource="TemplatedParent" Value="True" />
            </dxi:ConditionalRenderBinding>
        </dxi:RenderTemplate.Triggers>
    </dxi:RenderTemplate>
    <dxi:RenderTemplate x:Key="{dxt:LWKey InplaceBaseEdit.InformationErrorTemplate}">
        <dxi:RenderImage
            Width="14"
            Height="14"
            Source="{dx:ImageSelector Source='pack://application:,,,/DevExpress.Xpf.Core.v24.1;component/Editors/Images/info.png'}"
            Stretch="Fill"
            SvgPalette="{dxei:ValidationErrorSvgPaletteProvider}" />
    </dxi:RenderTemplate>
    <dxi:RenderTemplate x:Key="{dxt:LWKey InplaceBaseEdit.WarningErrorTemplate}">
        <dxi:RenderImage
            Width="14"
            Height="14"
            Source="{dx:ImageSelector Source='pack://application:,,,/DevExpress.Xpf.Core.v24.1;component/Editors/Images/warning.png'}"
            Stretch="Fill"
            SvgPalette="{dxei:ValidationErrorSvgPaletteProvider}" />
    </dxi:RenderTemplate>
    <dxi:RenderTemplate x:Key="{dxt:LWKey InplaceBaseEdit.CriticalErrorTemplate}">
        <dxi:RenderImage
            Width="14"
            Height="14"
            Source="{dx:ImageSelector Source='pack://application:,,,/DevExpress.Xpf.Core.v24.1;component/Editors/Images/error.png'}"
            Stretch="Fill"
            SvgPalette="{dxei:ValidationErrorSvgPaletteProvider}" />
    </dxi:RenderTemplate>
    <dxi:RenderTemplate x:Key="{dxt:LWKey InplaceBaseEdit.ValidationErrorTemplate}">
        <dxi:ErrorRenderControl />
    </dxi:RenderTemplate>
    <dxi:RenderTemplate x:Key="{dxt:LWKey InplaceBaseEdit.RenderRealButtonContainerTemplate}">
        <dxe:RenderButtonContainer Name="PART_ButtonContainer" />
        <dxi:RenderTemplate.Triggers>
            <dxi:RenderBinding
                DependencyProperty="{x:Static dxe:ButtonInfo.TemplateProperty}"
                TargetProperty="ContentTemplate"
                ValueSource="DataContext"
                TargetName="PART_ButtonContainer" />
            <dxi:RenderBinding TargetProperty="Content" ValueSource="DataContext" TargetName="PART_ButtonContainer" />
        </dxi:RenderTemplate.Triggers>
    </dxi:RenderTemplate>
    <dxi:RenderTemplate x:Key="{dxt:LWKey InplaceBaseEdit.TextEditInplaceInactiveTemplate}">
        <dxi:RenderTextBlock
            Name="PART_Editor"
            Margin="{StaticResource {dxt:LWKey InplaceBaseEdit.TextEditPadding}}"
            AllowGlyphRunRendering="{x:Static data:CompatibilitySettings.AllowGlyphRunRenderingInInplaceEditors}"
            ClipToBounds="True" />
        <dxi:RenderTemplate.Triggers>
            <dxi:RenderStateGroup Name="TouchStates">
                <dxi:RenderStateTrigger Name="NonTouch" />
                <dxi:RenderStateTrigger Name="Touch">
                    <dxi:RenderSetter TargetName="PART_Editor" Property="Margin" Value="13" />
                </dxi:RenderStateTrigger>
            </dxi:RenderStateGroup>
        </dxi:RenderTemplate.Triggers>
    </dxi:RenderTemplate>
    <dxi:RenderTemplate x:Key="{dxt:LWKey InplaceBaseEdit.RenderSpinButtonTemplate}">
        <dxi:RenderPanel>
            <dxe:EditorRenderButton
                Name="PART_SpinUpButton"
                AllowMouseCapturing="true"
                ButtonKind="Repeat"
                Content="{StaticResource ArrowBrush}"
                Dock="Top"
                RenderContentTemplateSelector="{dxei:RenderSpinButtonUpGlyphTemplateSelector}"
                RenderTemplateSelector="{dxei:RenderSpinButtonUpTemplateSelector}"
                UsePropagatedIsMouseOver="True" />
            <dxe:EditorRenderButton
                Name="PART_SpinDownButton"
                AllowMouseCapturing="true"
                ButtonKind="Repeat"
                Content="{StaticResource ArrowBrush}"
                Dock="Bottom"
                RenderContentTemplateSelector="{dxei:RenderSpinButtonDownGlyphTemplateSelector}"
                RenderTemplateSelector="{dxei:RenderSpinButtonDownTemplateSelector}"
                UsePropagatedIsMouseOver="True" />
        </dxi:RenderPanel>
        <dxi:RenderTemplate.Triggers>
            <dxi:RenderTrigger DependencyProperty="{x:Static dxe:SpinButtonInfo.SpinStyleProperty}" ValueSource="DataContext" Value="Horizontal">
                <dxi:RenderSetter TargetName="PART_SpinUpButton" Property="RenderTemplateSelector" Value="{dxei:RenderSpinButtonRightTemplateSelector}" />
                <dxi:RenderSetter TargetName="PART_SpinUpButton" Property="RenderContentTemplateSelector" Value="{dxei:RenderSpinButtonRightGlyphTemplateSelector}" />
                <dxi:RenderSetter TargetName="PART_SpinUpButton" Property="Dock" Value="Right" />

                <dxi:RenderSetter TargetName="PART_SpinDownButton" Property="RenderTemplateSelector" Value="{dxei:RenderSpinButtonLeftTemplateSelector}" />
                <dxi:RenderSetter TargetName="PART_SpinDownButton" Property="RenderContentTemplateSelector" Value="{dxei:RenderSpinButtonLeftGlyphTemplateSelector}" />
                <dxi:RenderSetter TargetName="PART_SpinDownButton" Property="Dock" Value="Left" />
            </dxi:RenderTrigger>
        </dxi:RenderTemplate.Triggers>
    </dxi:RenderTemplate>
    <ControlTemplate x:Key="{dxt:LWKey InplaceBaseEdit.AutoCompleteBoxTemplate}">
        <dxei:TokenEditor x:Name="PART_Editor" ScrollViewer.VerticalScrollBarVisibility="Hidden" />
    </ControlTemplate>
    <dxi:RenderTemplate x:Key="{dxt:LWKey InplaceBaseEdit.RenderSpinButtonContainerTemplate}">
        <dxi:RenderContentControl
            Name="PART_SpinButton"
            HorizontalContentAlignment="Stretch"
            VerticalContentAlignment="Stretch"
            RenderContentTemplate="{StaticResource {dxt:LWKey InplaceBaseEdit.RenderSpinButtonTemplate}}" />
        <dxi:RenderTemplate.Triggers>
            <dxi:RenderBinding TargetProperty="Content" ValueSource="DataContext" TargetName="PART_SpinButton" />
        </dxi:RenderTemplate.Triggers>
    </dxi:RenderTemplate>
    <dxi:RenderTemplate x:Key="{dxt:LWKey InplaceBaseEdit.RenderButtonContainerTemplate}">
        <dxe:EditorRenderButton
            Name="PART_Button"
            AllowMouseCapturing="true"
            PreferRenderTemplate="true"
            RenderTemplateSelector="{StaticResource {dxt:LWKey InplaceBaseEdit.DefaultButtonInfoTemplateSelector}}"
            UsePropagatedIsMouseOver="true" />
    </dxi:RenderTemplate>
    <dxi:RenderTemplate x:Key="{dxt:LWKey InplaceBaseEdit.ButtonEditStandaloneWithTextTemplate}">
        <dxi:RenderPanel LayoutProvider="{dxi:GridPanelLayoutProvider}">
            <dxi:RenderContentControl Name="PART_Border" RenderTemplate="{StaticResource {dxt:LWKey InplaceBaseEdit.TextEditBorderTemplate}}" />
            <dxi:RenderPanel Name="PART_Root" Margin="{StaticResource {dxt:LWKey InplaceBaseEdit.TextEditBorderThickness}}" LayoutProvider="{dxi:DockPanelLayoutProvider LastChildFill=True}">
                <dxi:RenderContentControl
                    Name="PART_ErrorProvider"
                    Margin="{StaticResource {dxt:LWKey InplaceBaseEdit.ValidationErrorPadding}}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Dock="Left"
                    PreferRenderTemplate="false"
                    RenderContentTemplateSelector="{StaticResource {dxt:LWKey InplaceBaseEdit.ValidationErrorTemplateSelector}}"
                    Visibility="Collapsed" />
                <dxi:RenderItemsControl
                    Name="PART_LeftButtons"
                    Margin="{StaticResource {dxt:LWKey ButtonEdit.ButtonEditPadding}}"
                    Dock="Left"
                    ItemTemplateSelector="{StaticResource {dxt:LWKey InplaceBaseEdit.RenderButtonContainerTemplateSelector}}"
                    Visibility="Collapsed">
                    <dxi:RenderItemsControl.ItemPanelTemplate>
                        <dxi:RenderPanel LayoutProvider="{dxe:ButtonsPanelLayoutProvider}" />
                    </dxi:RenderItemsControl.ItemPanelTemplate>
                </dxi:RenderItemsControl>
                <dxi:RenderItemsControl
                    Name="PART_RightButtons"
                    Margin="{StaticResource {dxt:LWKey ButtonEdit.ButtonEditPadding}}"
                    Dock="Right"
                    ItemTemplateSelector="{StaticResource {dxt:LWKey InplaceBaseEdit.RenderButtonContainerTemplateSelector}}"
                    Visibility="Collapsed">
                    <dxi:RenderItemsControl.ItemPanelTemplate>
                        <dxi:RenderPanel LayoutProvider="{dxe:ButtonsPanelLayoutProvider}" />
                    </dxi:RenderItemsControl.ItemPanelTemplate>
                </dxi:RenderItemsControl>
                <dxei:RenderStandaloneEditorControl Name="PART_Editor" />
            </dxi:RenderPanel>
            <dxi:RenderContentControl Name="PART_Focus" RenderTemplate="{StaticResource {dxt:LWKey InplaceBaseEdit.HoverBorderTemplate}}" Visibility="Collapsed" />
        </dxi:RenderPanel>
        <dxi:RenderTemplate.Triggers>
            <dxi:ConditionalRenderBinding
                DependencyProperty="{x:Static dxi:AppearanceOptions.BorderThicknessProperty}"
                TargetProperty="Margin"
                ValueSource="TemplatedParent"
                TargetName="PART_Root">
                <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasBorderThicknessProperty}" ValueSource="TemplatedParent" Value="True" />
            </dxi:ConditionalRenderBinding>
            <dxi:RenderBinding
                Converter="{StaticResource BooleanToVisibilityConverter}"
                DependencyProperty="{x:Static dxe:ButtonEdit.ActualShowLeftButtonsProperty}"
                TargetProperty="Visibility"
                ValueSource="DataContext"
                TargetName="PART_LeftButtons" />
            <dxi:RenderBinding
                DependencyProperty="{x:Static dxe:ButtonEdit.LeftButtonsProperty}"
                TargetProperty="ItemsSource"
                ValueSource="DataContext"
                TargetName="PART_LeftButtons" />
            <dxi:RenderBinding
                Converter="{StaticResource BooleanToVisibilityConverter}"
                DependencyProperty="{x:Static dxe:ButtonEdit.ActualShowRightButtonsProperty}"
                TargetProperty="Visibility"
                ValueSource="DataContext"
                TargetName="PART_RightButtons" />
            <dxi:RenderBinding
                DependencyProperty="{x:Static dxe:ButtonEdit.RightButtonsProperty}"
                TargetProperty="ItemsSource"
                ValueSource="DataContext"
                TargetName="PART_RightButtons" />
            <dxi:RenderTrigger DependencyProperty="{x:Static dxe:BaseEdit.ShowBorderProperty}" ValueSource="DataContext" Value="False">
                <dxi:RenderSetter TargetName="PART_Border" Property="Visibility" Value="Collapsed" />
                <dxi:RenderSetter TargetName="PART_Root" Property="Margin" Value="0" />
            </dxi:RenderTrigger>
            <dxi:RenderTrigger DependencyProperty="{x:Static dxe:BaseEdit.HasValidationErrorProperty}" ValueSource="DataContext" Value="True">
                <dxi:RenderSetter TargetName="PART_ErrorProvider" Property="Visibility" Value="Visible" />
            </dxi:RenderTrigger>
            <dxi:RenderBinding
                DependencyProperty="{x:Static dxe:BaseEdit.ValidationErrorProperty}"
                TargetProperty="Content"
                ValueSource="DataContext"
                TargetName="PART_ErrorProvider" />
            <dxi:RenderBinding
                DependencyProperty="{x:Static dxe:BaseEdit.ActualEditorControlTemplateProperty}"
                TargetProperty="Template"
                ValueSource="DataContext"
                TargetName="PART_Editor" />
            <dxi:RenderBinding
                DependencyProperty="{x:Static dxe:BaseEdit.ValidationErrorTemplateProperty}"
                TargetProperty="ContentTemplate"
                ValueSource="DataContext"
                TargetName="PART_ErrorProvider" />
            <dxi:RenderTrigger DependencyProperty="{x:Static FrameworkElement.IsKeyboardFocusWithinProperty}" ValueSource="DataContext" Value="True">
                <dxi:RenderSetter TargetName="PART_Focus" Property="Visibility" Value="Visible" />
            </dxi:RenderTrigger>
        </dxi:RenderTemplate.Triggers>
    </dxi:RenderTemplate>

    <dxi:RenderTemplate x:Key="{dxt:LWKey InplaceBaseEdit.ButtonEditStandaloneWithoutTextTemplate}">
        <dxi:RenderPanel LayoutProvider="{dxi:GridPanelLayoutProvider}">
            <dxi:RenderContentControl Name="PART_Border" RenderTemplate="{StaticResource {dxt:LWKey InplaceBaseEdit.TextEditBorderTemplate}}" />
            <dxi:RenderPanel Name="PART_Root" Margin="{StaticResource {dxt:LWKey InplaceBaseEdit.TextEditBorderThickness}}" LayoutProvider="{dxi:DockPanelLayoutProvider LastChildFill=True}">
                <dxi:RenderContentControl
                    Name="PART_ErrorProvider"
                    Margin="{StaticResource {dxt:LWKey InplaceBaseEdit.ValidationErrorPadding}}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Dock="Left"
                    PreferRenderTemplate="false"
                    RenderContentTemplateSelector="{StaticResource {dxt:LWKey InplaceBaseEdit.ValidationErrorTemplateSelector}}"
                    Visibility="Collapsed" />
                <dxi:RenderPanel LayoutProvider="{dxi:DockPanelLayoutProvider LastChildFill=True}">
                    <dxi:RenderTextBlock Text=" " Visibility="Hidden" />
                    <dxi:RenderItemsControl
                        Name="PART_RightButtons"
                        Margin="{StaticResource {dxt:LWKey ButtonEdit.ButtonEditPadding}}"
                        Dock="Right"
                        ItemTemplateSelector="{StaticResource {dxt:LWKey InplaceBaseEdit.RenderButtonContainerTemplateSelector}}">
                        <dxi:RenderItemsControl.ItemPanelTemplate>
                            <dxi:RenderPanel LayoutProvider="{dxe:ButtonsPanelLayoutProvider}" />
                        </dxi:RenderItemsControl.ItemPanelTemplate>
                    </dxi:RenderItemsControl>
                </dxi:RenderPanel>
            </dxi:RenderPanel>
            <dxi:RenderContentControl Name="PART_Focus" RenderTemplate="{StaticResource {dxt:LWKey InplaceBaseEdit.HoverBorderTemplate}}" Visibility="Collapsed" />
        </dxi:RenderPanel>
        <dxi:RenderTemplate.Triggers>
            <dxi:ConditionalRenderBinding
                DependencyProperty="{x:Static dxi:AppearanceOptions.BorderThicknessProperty}"
                TargetProperty="Margin"
                ValueSource="TemplatedParent"
                TargetName="PART_Root">
                <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasBorderThicknessProperty}" ValueSource="TemplatedParent" Value="True" />
            </dxi:ConditionalRenderBinding>
            <dxi:RenderBinding
                Converter="{StaticResource BooleanToVisibilityConverter}"
                DependencyProperty="{x:Static dxe:ButtonEdit.ActualShowRightButtonsProperty}"
                TargetProperty="Visibility"
                ValueSource="DataContext"
                TargetName="PART_RightButtons" />
            <dxi:RenderBinding
                DependencyProperty="{x:Static dxe:ButtonEdit.RightButtonsProperty}"
                TargetProperty="ItemsSource"
                ValueSource="DataContext"
                TargetName="PART_RightButtons" />
            <dxi:RenderTrigger DependencyProperty="{x:Static dxe:BaseEdit.ShowBorderProperty}" ValueSource="DataContext" Value="False">
                <dxi:RenderSetter TargetName="PART_Border" Property="Visibility" Value="Collapsed" />
                <dxi:RenderSetter TargetName="PART_Root" Property="Margin" Value="0" />
            </dxi:RenderTrigger>
            <dxi:RenderTrigger DependencyProperty="{x:Static dxe:BaseEdit.HasValidationErrorProperty}" ValueSource="DataContext" Value="True">
                <dxi:RenderSetter TargetName="PART_ErrorProvider" Property="Visibility" Value="Visible" />
            </dxi:RenderTrigger>
            <dxi:RenderBinding
                DependencyProperty="{x:Static dxe:BaseEdit.ValidationErrorProperty}"
                TargetProperty="Content"
                ValueSource="DataContext"
                TargetName="PART_ErrorProvider" />
            <dxi:RenderBinding
                DependencyProperty="{x:Static dxe:BaseEdit.ValidationErrorTemplateProperty}"
                TargetProperty="ContentTemplate"
                ValueSource="DataContext"
                TargetName="PART_ErrorProvider" />
            <dxi:RenderTrigger DependencyProperty="{x:Static FrameworkElement.IsKeyboardFocusWithinProperty}" ValueSource="DataContext" Value="True">
                <dxi:RenderSetter TargetName="PART_Focus" Property="Visibility" Value="Visible" />
            </dxi:RenderTrigger>
        </dxi:RenderTemplate.Triggers>
    </dxi:RenderTemplate>
    <dxi:RenderTemplate x:Key="{dxt:LWKey InplaceBaseEdit.ButtonEditStandaloneTemplate}">
        <dxi:RenderContentControl Name="PART_Root" RenderTemplate="{StaticResource {dxt:LWKey InplaceBaseEdit.ButtonEditStandaloneWithTextTemplate}}" />
        <dxi:RenderTemplate.Triggers>
            <dxi:ConditionalRenderBinding
                DependencyProperty="{x:Static dxi:AppearanceOptions.BorderThicknessProperty}"
                TargetProperty="Margin"
                ValueSource="TemplatedParent"
                TargetName="PART_Root">
                <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasBorderThicknessProperty}" ValueSource="TemplatedParent" Value="True" />
            </dxi:ConditionalRenderBinding>
            <dxi:RenderTrigger DependencyProperty="{x:Static dxe:ButtonEdit.ShowTextProperty}" ValueSource="DataContext" Value="false">
                <dxi:RenderSetter TargetName="PART_Root" Property="RenderTemplate" Value="{StaticResource {dxt:LWKey InplaceBaseEdit.ButtonEditStandaloneWithoutTextTemplate}}" />
            </dxi:RenderTrigger>
        </dxi:RenderTemplate.Triggers>
    </dxi:RenderTemplate>
    <ControlTemplate x:Key="{dxt:LWKey ButtonEdit.LightweightTemplate}" TargetType="{x:Type dxe:ButtonEdit}">
        <dxi:Chrome x:Name="PART_Chrome" RenderTemplate="{StaticResource {dxt:LWKey InplaceBaseEdit.ButtonEditStandaloneTemplate}}" />
    </ControlTemplate>
    <dxi:RenderTemplate x:Key="{dxt:LWKey InplaceBaseEdit.TextEditStandaloneTemplate}">
        <dxi:RenderPanel LayoutProvider="{dxi:GridPanelLayoutProvider}">
            <dxi:RenderContentControl Name="PART_Border" RenderTemplate="{StaticResource {dxt:LWKey InplaceBaseEdit.TextEditBorderTemplate}}" />
            <dxi:RenderPanel Name="PART_Root" Margin="{StaticResource {dxt:LWKey InplaceBaseEdit.TextEditBorderThickness}}" LayoutProvider="{dxi:DockPanelLayoutProvider LastChildFill=True}">
                <dxi:RenderContentControl
                    Name="PART_ErrorProvider"
                    Margin="{StaticResource {dxt:LWKey InplaceBaseEdit.ValidationErrorPadding}}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Dock="Left"
                    PreferRenderTemplate="false"
                    RenderContentTemplateSelector="{StaticResource {dxt:LWKey InplaceBaseEdit.ValidationErrorTemplateSelector}}"
                    Visibility="Collapsed" />
                <dxei:RenderStandaloneEditorControl Name="PART_Editor" />
            </dxi:RenderPanel>
            <dxi:RenderContentControl Name="PART_Focus" RenderTemplate="{StaticResource {dxt:LWKey InplaceBaseEdit.HoverBorderTemplate}}" Visibility="Collapsed" />
        </dxi:RenderPanel>
        <dxi:RenderTemplate.Triggers>
            <dxi:RenderTrigger DependencyProperty="{x:Static dxe:BaseEdit.ShowBorderProperty}" ValueSource="DataContext" Value="False">
                <dxi:RenderSetter TargetName="PART_Border" Property="Visibility" Value="Collapsed" />
                <dxi:RenderSetter TargetName="PART_Root" Property="Margin" Value="0" />
            </dxi:RenderTrigger>
            <dxi:RenderTrigger DependencyProperty="{x:Static dxe:BaseEdit.HasValidationErrorProperty}" ValueSource="DataContext" Value="True">
                <dxi:RenderSetter TargetName="PART_ErrorProvider" Property="Visibility" Value="Visible" />
            </dxi:RenderTrigger>
            <dxi:RenderBinding
                DependencyProperty="{x:Static dxe:BaseEdit.ValidationErrorProperty}"
                TargetProperty="Content"
                ValueSource="DataContext"
                TargetName="PART_ErrorProvider" />
            <dxi:RenderBinding
                DependencyProperty="{x:Static dxe:BaseEdit.ActualEditorControlTemplateProperty}"
                TargetProperty="Template"
                ValueSource="DataContext"
                TargetName="PART_Editor" />
            <dxi:RenderBinding
                DependencyProperty="{x:Static dxe:BaseEdit.ValidationErrorTemplateProperty}"
                TargetProperty="ContentTemplate"
                ValueSource="DataContext"
                TargetName="PART_ErrorProvider" />
            <dxi:RenderTrigger DependencyProperty="{x:Static dxe:BaseEdit.IsKeyboardFocusWithinProperty}" ValueSource="DataContext" Value="True">
                <dxi:RenderSetter TargetName="PART_Focus" Property="Visibility" Value="Visible" />
            </dxi:RenderTrigger>
        </dxi:RenderTemplate.Triggers>
    </dxi:RenderTemplate>
    <ControlTemplate x:Key="{dxt:LWKey TextEdit.LightweightTemplate}" TargetType="{x:Type dxe:TextEdit}">
        <dxi:Chrome RenderTemplate="{StaticResource {dxt:LWKey InplaceBaseEdit.TextEditStandaloneTemplate}}" />
    </ControlTemplate>
    <!--#endregion Editors\Themes\Generic\InplaceBaseEdit.xaml-->

    <!--#region Editors\Themes\Generic\TextEdit.xaml-->
    <Thickness x:Key="{dxt:LWKey TextEdit.WatermarkTextBlockMargin}">2,0</Thickness>

    <ControlTemplate x:Key="{dxt:LWKey BaseEdit.EmptyBorderTemplate}" TargetType="ContentControl">
        <ContentPresenter />
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:LWKey BaseEdit.TextEditBorderTemplate}" TargetType="ContentControl">
        <Grid>
            <dxi:Chrome RenderTemplate="{StaticResource {dxt:LWKey InplaceBaseEdit.TextEditBorderTemplate}}" />
            <ContentPresenter Name="borderContainer" Margin="{StaticResource {dxt:LWKey InplaceBaseEdit.TextEditBorderThickness}}" />
            <dxi:Chrome dxeh:ControlHelper.ShowFocusedState="{Binding Path=(dxeh:ControlHelper.ShowFocusedState), RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" RenderTemplate="{StaticResource {dxt:LWKey InplaceBaseEdit.HoverBorderTemplate}}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="dxi:AppearanceOptions.HasBorderThickness" Value="True">
                <Setter TargetName="borderContainer" Property="Margin" Value="{Binding Path=(dxi:AppearanceOptions.BorderThickness), RelativeSource={RelativeSource TemplatedParent}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:LWKey BaseEdit.CommonBorderTemplate}" TargetType="ContentControl">
        <Grid>
            <dxi:Chrome RenderTemplate="{StaticResource {dxt:LWKey InplaceBaseEdit.CommonBorderTemplate}}" />
            <ContentPresenter Name="borderContainer" Margin="{StaticResource {dxt:LWKey InplaceBaseEdit.CommonBorderThickness}}" />
            <dxi:Chrome dxeh:ControlHelper.ShowFocusedState="{Binding Path=(dxeh:ControlHelper.ShowFocusedState), RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" RenderTemplate="{StaticResource {dxt:LWKey InplaceBaseEdit.HoverBorderTemplate}}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="dxi:AppearanceOptions.HasBorderThickness" Value="True">
                <Setter TargetName="borderContainer" Property="Margin" Value="{Binding Path=(dxi:AppearanceOptions.BorderThickness), RelativeSource={RelativeSource TemplatedParent}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:LWKey BaseEdit.CommonBorderDecorationTemplate}" TargetType="Control">
        <dxi:Chrome RenderTemplate="{StaticResource {dxt:LWKey InplaceBaseEdit.CommonBorderTemplate}}" />
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:LWKey BaseEdit.TextEditBorderDecorationTemplate}" TargetType="Control">
        <dxi:Chrome RenderTemplate="{StaticResource {dxt:LWKey InplaceBaseEdit.TextEditBorderTemplate}}" />
    </ControlTemplate>

    <ControlTemplate x:Key="{dxt:LWKey TextEdit.Template}" TargetType="{x:Type dxe:TextEdit}">
        <ContentControl
            x:Name="PART_Root"
            HorizontalContentAlignment="Stretch"
            VerticalContentAlignment="Stretch"
            dx:FocusHelper2.Focusable="False"
            dxe:EditorAppearanceProperties.FocusedBorderBrush="{Binding Path=(dxe:EditorAppearanceProperties.FocusedBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"
            dxe:EditorAppearanceProperties.ReadOnlyBackground="{Binding Path=(dxe:EditorAppearanceProperties.ReadOnlyBackground), RelativeSource={RelativeSource TemplatedParent}}"
            dxe:EditorAppearanceProperties.ReadOnlyBorderBrush="{Binding Path=(dxe:EditorAppearanceProperties.ReadOnlyBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"
            dxeh:ControlHelper.IsReadOnly="{TemplateBinding IsReadOnly}"
            dxeh:ControlHelper.ShowFocusedState="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource TemplatedParent}}"
            dxi:AppearanceOptions.BorderThickness="{Binding Path=(dxi:AppearanceOptions.BorderThickness), RelativeSource={RelativeSource TemplatedParent}}"
            dxi:AppearanceOptions.CornerRadius="{Binding Path=(dxi:AppearanceOptions.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
            dxi:AppearanceOptions.HasBorderThickness="{Binding Path=(dxi:AppearanceOptions.HasBorderThickness), RelativeSource={RelativeSource TemplatedParent}}"
            dxi:AppearanceOptions.HasCornerRadius="{Binding Path=(dxi:AppearanceOptions.HasCornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Template="{TemplateBinding ActualBorderTemplate}">
            <Grid SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" x:Name="PART_FirstRow"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Label Grid.Row="0" Grid.Column="1" x:Name="PART_Label"
                       Content="{TemplateBinding Label}" Visibility="Collapsed" VerticalAlignment="Bottom"
                       Margin="{DynamicResource {dxt:LWKey EmbeddedEditorLabels.Margin}}"
                       Padding="{DynamicResource {dxt:LWKey EmbeddedEditorLabels.Padding}}"
                       FontSize="{DynamicResource {dxt:LWKey EmbeddedEditorLabels.FontSize}}"
                       Foreground="{DynamicResource {dxt:LWKey EmbeddedEditorLabels.Foreground}}"/>
                <dxe:ErrorControl Grid.Row="0" Grid.RowSpan="2" Grid.Column="0" x:Name="PART_ErrorPresenter" />
                <dxe:EditorControl Grid.Row="1" Grid.Column="1" x:Name="PART_Content" Template="{TemplateBinding ActualEditorControlTemplate}" />
            </Grid>
        </ContentControl>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=ShowBorder, RelativeSource={RelativeSource Self}}" Value="true">
                <Setter TargetName="PART_ErrorPresenter" Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxt:LWKey InplaceBaseEdit.ValidationErrorSvgPalette}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Label, RelativeSource={RelativeSource Self}, Converter={StaticResource StringIsNotNullOrEmptyConverter}}"
                         Value="True">
                <Setter TargetName="PART_Label" Property="Visibility" Value="Visible"/>
                <Setter TargetName="PART_Content" Property="Margin" Value="{DynamicResource {dxt:LWKey EmbeddedEditorLabels.ContentMargin}}"/>
            </DataTrigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter TargetName="PART_Label" Property="Margin" Value="15,2,0,7" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion Editors\Themes\Generic\TextEdit.xaml-->

    <!--#region Editors\Themes\Generic\ToggleSwitch.xaml-->
    <dxi:RenderTemplate x:Key="{dxt:LWKey ToggleSwitch.RenderTemplate}">
        <dxi:RenderPanel>
            <dxi:RenderPanel Name="PART_RootPanel" UseLayoutRounding="True">
                <dxi:RenderPanel Name="PART_SwitchPanel" LayoutProvider="{dxi:GridPanelLayoutProvider}">
                    <dxi:RenderContentControl
                        Name="PART_SwitchBorder"
                        HorizontalContentAlignment="Stretch"
                        VerticalContentAlignment="Stretch"
                        PreferRenderTemplate="False"
                        RenderContentTemplate="{StaticResource {dxt:LWKey ToggleSwitch.SwitchBorderTemplate}}"
                        UsePropagatedIsMouseOver="True" />
                    <dxei:RenderToggleSwitchThumbContainer Name="PART_ThumbContainer">
                        <dxi:RenderContentControl
                            Name="PART_Thumb"
                            HorizontalContentAlignment="Stretch"
                            VerticalContentAlignment="Stretch"
                            PreferRenderTemplate="False"
                            RenderContentTemplate="{StaticResource {dxt:LWKey ToggleSwitch.SwitchThumbTemplate}}"
                            UsePropagatedIsMouseOver="True" />
                    </dxei:RenderToggleSwitchThumbContainer>
                </dxi:RenderPanel>
                <dxi:RenderContentControl
                    Name="PART_UncheckedStateContent"
                    HorizontalContentAlignment="Stretch"
                    VerticalContentAlignment="Stretch"
                    ClipToBounds="True"
                    Opacity="0"
                    PreferRenderTemplate="False"
                    RenderContentTemplate="{StaticResource {dxt:LWKey ToggleSwitch.UncheckedStateContentTemplate}}"
                    UseLayoutRounding="False" />
                <dxi:RenderContentControl
                    Name="PART_CheckedStateContent"
                    HorizontalContentAlignment="Stretch"
                    VerticalContentAlignment="Stretch"
                    ClipToBounds="True"
                    Opacity="0"
                    PreferRenderTemplate="False"
                    RenderContentTemplate="{StaticResource {dxt:LWKey ToggleSwitch.CheckedStateContentTemplate}}"
                    UseLayoutRounding="False" />
                <dxi:RenderContentControl
                    Name="PART_UndefinedStateContent"
                    HorizontalContentAlignment="Stretch"
                    VerticalContentAlignment="Stretch"
                    ClipToBounds="True"
                    Opacity="0"
                    PreferRenderTemplate="False"
                    RenderContentTemplate="{StaticResource {dxt:LWKey ToggleSwitch.UndefinedStateContentTemplate}}"
                    UseLayoutRounding="False" />
            </dxi:RenderPanel>
        </dxi:RenderPanel>
        <dxi:RenderTemplate.Triggers>

            <dxi:RenderBinding
                DependencyProperty="{x:Static dxe:ToggleSwitch.ActualCheckedStateContentProperty}"
                TargetProperty="Content"
                ValueSource="TemplatedParent"
                TargetName="PART_CheckedStateContent" />
            <dxi:RenderBinding
                DependencyProperty="{x:Static dxe:ToggleSwitch.ActualUncheckedStateContentProperty}"
                TargetProperty="Content"
                ValueSource="TemplatedParent"
                TargetName="PART_UncheckedStateContent" />
            <dxi:RenderBinding
                DependencyProperty="{x:Static dxe:ToggleSwitch.ActualUndefinedStateContentProperty}"
                TargetProperty="Content"
                ValueSource="TemplatedParent"
                TargetName="PART_UndefinedStateContent" />
            <dxi:RenderBinding
                DependencyProperty="{x:Static dxe:ToggleSwitch.ActualCheckedStateContentTemplateProperty}"
                TargetProperty="ContentTemplate"
                ValueSource="TemplatedParent"
                TargetName="PART_CheckedStateContent" />
            <dxi:RenderBinding
                DependencyProperty="{x:Static dxe:ToggleSwitch.ActualUncheckedStateContentTemplateProperty}"
                TargetProperty="ContentTemplate"
                ValueSource="TemplatedParent"
                TargetName="PART_UncheckedStateContent" />
            <dxi:RenderBinding
                DependencyProperty="{x:Static dxe:ToggleSwitch.ActualUndefinedStateContentTemplateProperty}"
                TargetProperty="ContentTemplate"
                ValueSource="TemplatedParent"
                TargetName="PART_UndefinedStateContent" />
            <dxi:RenderBinding
                DependencyProperty="{x:Static dxe:ToggleSwitch.ToggleSwitchWidthProperty}"
                TargetProperty="Width"
                ValueSource="TemplatedParent"
                TargetName="PART_SwitchPanel" />
            <dxi:RenderBinding
                DependencyProperty="{x:Static dxe:ToggleSwitch.ToggleSwitchHeightProperty}"
                TargetProperty="Height"
                ValueSource="TemplatedParent"
                TargetName="PART_SwitchPanel" />
            <dxi:RenderBinding
                DependencyProperty="{x:Static dxe:ToggleSwitch.SwitchThumbTemplateProperty}"
                TargetProperty="ContentTemplate"
                ValueSource="TemplatedParent"
                TargetName="PART_Thumb" />
            <dxi:RenderBinding
                DependencyProperty="{x:Static dxe:ToggleSwitch.SwitchBorderTemplateProperty}"
                TargetProperty="ContentTemplate"
                ValueSource="TemplatedParent"
                TargetName="PART_SwitchBorder" />
            <dxi:MultiRenderTrigger>
                <dxi:MultiRenderTrigger.Conditions>
                    <dxi:RenderCondition DependencyProperty="{x:Static dxe:ToggleSwitch.HasCheckedStateContentProperty}" Value="True" />
                    <dxi:RenderConditionGroup Operator="Or">
                        <dxi:RenderCondition DependencyProperty="{x:Static dxe:ToggleSwitch.IsCheckedProperty}" Value="True" />
                        <dxi:RenderCondition DependencyProperty="{x:Static dxe:ToggleSwitch.ContentPlacementProperty}" Value="Both" />
                    </dxi:RenderConditionGroup>
                </dxi:MultiRenderTrigger.Conditions>
                <dxi:RenderSetter TargetName="PART_CheckedStateContent" Property="Opacity" Value="1" />
            </dxi:MultiRenderTrigger>
            <dxi:MultiRenderTrigger>
                <dxi:MultiRenderTrigger.Conditions>
                    <dxi:RenderCondition DependencyProperty="{x:Static dxe:ToggleSwitch.HasUncheckedStateContentProperty}" Value="True" />
                    <dxi:RenderConditionGroup Operator="Or">
                        <dxi:RenderCondition DependencyProperty="{x:Static dxe:ToggleSwitch.IsCheckedProperty}" Value="False" />
                        <dxi:RenderCondition DependencyProperty="{x:Static dxe:ToggleSwitch.ContentPlacementProperty}" Value="Both" />
                    </dxi:RenderConditionGroup>
                </dxi:MultiRenderTrigger.Conditions>
                <dxi:RenderSetter TargetName="PART_UncheckedStateContent" Property="Opacity" Value="1" />
            </dxi:MultiRenderTrigger>
            <dxi:MultiRenderTrigger>
                <dxi:MultiRenderTrigger.Conditions>
                    <dxi:RenderCondition DependencyProperty="{x:Static dxe:ToggleSwitch.HasUndefinedStateContentProperty}" Value="True" />
                    <dxi:RenderCondition DependencyProperty="{x:Static dxe:ToggleSwitch.IsThreeStateProperty}" Value="True" />
                    <dxi:RenderCondition DependencyProperty="{x:Static dxe:ToggleSwitch.IsCheckedProperty}" Value="{x:Null}" />
                    <dxi:RenderConditionGroup Operator="Or">
                        <dxi:RenderCondition DependencyProperty="{x:Static dxe:ToggleSwitch.ContentPlacementProperty}" Value="Near" />
                        <dxi:RenderCondition DependencyProperty="{x:Static dxe:ToggleSwitch.ContentPlacementProperty}" Value="Far" />
                    </dxi:RenderConditionGroup>
                </dxi:MultiRenderTrigger.Conditions>
                <dxi:RenderSetter TargetName="PART_UndefinedStateContent" Property="Opacity" Value="1" />
            </dxi:MultiRenderTrigger>
        </dxi:RenderTemplate.Triggers>
    </dxi:RenderTemplate>

    <ControlTemplate x:Key="{dxt:LWKey ToggleSwitch.Template}" TargetType="{x:Type dxe:ToggleSwitch}">
        <dxei:ToggleSwitchButtonChrome x:Name="PART_Owner" RenderTemplate="{StaticResource {dxt:LWKey ToggleSwitch.RenderTemplate}}" />
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="PART_Owner" Property="Opacity" Value="{StaticResource {dxt:LWKey ToggleSwitch.DisabledStateOpacity}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:LWKey ToggleSwitch.InplaceTemplate}" TargetType="{x:Type dxe:ToggleSwitch}">
        <dxei:ToggleSwitchButtonChrome x:Name="PART_Owner" RenderTemplate="{StaticResource {dxt:LWKey ToggleSwitch.RenderTemplate}}" />
    </ControlTemplate>
    <!--#endregion Editors\Themes\Generic\ToggleSwitch.xaml-->

    <!--#region Editors\Themes\Generic\MemoEdit.xaml-->

    <!-- PROCESS SETTERS WITH BINDING -->

    <Style x:Key="{dxt:LWKey MemoEdit.MemoStyle}" TargetType="dxe:TextEdit">
        <Setter Property="MaxLength" Value="{Binding Path=Tag.MaxLength, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="IsReadOnly" Value="{Binding Path=Tag.IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="ShowBorder" Value="False" />
        <Setter Property="Foreground" Value="{Binding Path=Tag.Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="TextWrapping" Value="{Binding Path=Tag.MemoTextWrapping, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="AcceptsReturn" Value="{Binding Path=Tag.MemoAcceptsReturn, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="SelectAllOnGotFocus" Value="False" />
        <Setter Property="AcceptsTab" Value="{Binding Path=Tag.MemoAcceptsTab, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="VerticalScrollBarVisibility" Value="{Binding Path=Tag.MemoVerticalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="HorizontalScrollBarVisibility" Value="{Binding Path=Tag.MemoHorizontalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}}" />
    </Style>
    <ControlTemplate x:Key="{dxt:LWKey MemoEdit.PopupContentTemplate}" TargetType="ContentControl">
        <Grid Style="{DynamicResource {dxt:LWKey MemoEdit.MemoBackgroundStyle}}">
            <dxe:TextEdit x:Name="PART_PopupContent" Style="{DynamicResource {dxt:LWKey MemoEdit.MemoStyle}}" />
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:LWKey MemoEdit.DisplayIconTemplate}">
        <Grid x:Name="PART_Editor" Margin="{Binding Path=(dxe:BaseEdit.OwnerEdit).Padding, RelativeSource={RelativeSource Self}}" Background="Transparent">
            <TextBlock x:Name="HeightHolder" Margin="{DynamicResource {dxt:LWKey MemoEdit.InplaceMargin}}" Text=" " />
            <dx:DXBorder Background="{Binding Path=(dxe:BaseEdit.OwnerEdit).Background}" />
            <dxi:MultiContentControl x:Name="PART_Icon" VisibleChildIndex="{Binding Path=(dxe:BaseEdit.OwnerEdit).Text, Converter={StaticResource MemoEditIconIndexConverter}}">
                <dx:PixelSnapper HorizontalAlignment="Center" VerticalAlignment="Center">
                    <dx:DXImage
                        Width="16"
                        Height="16"
                        dx:WpfSvgPalette.Palette="{DynamicResource {dxt:LWKey Brushes.GrayScaleSvgPalette}}"
                        Source="/DevExpress.Xpf.Core.v24.1;component/Editors/Images/MemoEdit/DefaultIcon.svg"
                        Stretch="Fill" />
                </dx:PixelSnapper>
                <dx:PixelSnapper HorizontalAlignment="Center" VerticalAlignment="Center">
                    <dx:DXImage
                        Width="16"
                        Height="16"
                        dx:WpfSvgPalette.Palette="{DynamicResource {dxt:LWKey BaseEdit.DefaultIconSvgPalette}}"
                        Source="/DevExpress.Xpf.Core.v24.1;component/Editors/Images/MemoEdit/DefaultIcon.svg"
                        Stretch="Fill" />
                </dx:PixelSnapper>
            </dxi:MultiContentControl>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter TargetName="HeightHolder" Property="Padding" Value="14,13" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:LWKey MemoEdit.EditNonEditableIconInplaceTemplate}">
        <Grid x:Name="PART_Editor" Margin="{Binding Path=(dxe:BaseEdit.OwnerEdit).Padding, RelativeSource={RelativeSource Self}}" Background="Transparent">
            <TextBlock x:Name="HeightHolder" Margin="{DynamicResource {dxt:LWKey MemoEdit.InplaceMargin}}" Text=" " />
            <dx:DXBorder Margin="{Binding Path=(dxe:BaseEdit.OwnerEdit).Padding, RelativeSource={RelativeSource Self}}" Background="{Binding Path=(dxe:BaseEdit.OwnerEdit).Background}" />
            <dxi:MultiContentControl x:Name="PART_Icon" VisibleChildIndex="{Binding Path=(dxe:BaseEdit.OwnerEdit).Text, Converter={StaticResource MemoEditIconIndexConverter}}">
                <dx:PixelSnapper HorizontalAlignment="Center" VerticalAlignment="Center">
                    <dx:DXImage
                        Width="16"
                        Height="16"
                        dx:WpfSvgPalette.Palette="{DynamicResource {dxt:LWKey Brushes.GrayScaleSvgPalette}}"
                        Source="/DevExpress.Xpf.Core.v24.1;component/Editors/Images/MemoEdit/DefaultIcon.svg"
                        Stretch="Fill" />
                </dx:PixelSnapper>
                <dx:PixelSnapper HorizontalAlignment="Center" VerticalAlignment="Center">
                    <dx:DXImage
                        Width="16"
                        Height="16"
                        dx:WpfSvgPalette.Palette="{DynamicResource {dxt:LWKey BaseEdit.DefaultIconSvgPalette}}"
                        Source="/DevExpress.Xpf.Core.v24.1;component/Editors/Images/MemoEdit/DefaultIcon.svg"
                        Stretch="Fill" />
                </dx:PixelSnapper>
            </dxi:MultiContentControl>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter TargetName="HeightHolder" Property="Padding" Value="14,13" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:LWKey MemoEdit.EditNonEditableIconTemplate}">
        <Grid x:Name="PART_Editor" Margin="{Binding Path=(dxe:BaseEdit.OwnerEdit).Padding, RelativeSource={RelativeSource Self}}" Background="Transparent">
            <TextBlock x:Name="HeightHolder" Margin="2,3" Text=" " />
            <dx:DXBorder Margin="{Binding Path=(dxe:BaseEdit.OwnerEdit).Padding, RelativeSource={RelativeSource Self}}" Background="{Binding Path=(dxe:BaseEdit.OwnerEdit).Background}" />
            <dxi:MultiContentControl x:Name="PART_Icon" VisibleChildIndex="{Binding Path=(dxe:BaseEdit.OwnerEdit).Text, Converter={StaticResource MemoEditIconIndexConverter}}">
                <dx:PixelSnapper HorizontalAlignment="Center" VerticalAlignment="Center">
                    <dx:DXImage
                        Width="16"
                        Height="16"
                        dx:WpfSvgPalette.Palette="{DynamicResource {dxt:LWKey Brushes.GrayScaleSvgPalette}}"
                        Source="/DevExpress.Xpf.Core.v24.1;component/Editors/Images/MemoEdit/DefaultIcon.svg"
                        Stretch="Fill" />
                </dx:PixelSnapper>
                <dx:PixelSnapper HorizontalAlignment="Center" VerticalAlignment="Center">
                    <dx:DXImage
                        Width="16"
                        Height="16"
                        dx:WpfSvgPalette.Palette="{DynamicResource {dxt:LWKey BaseEdit.DefaultIconSvgPalette}}"
                        Source="/DevExpress.Xpf.Core.v24.1;component/Editors/Images/MemoEdit/DefaultIcon.svg"
                        Stretch="Fill" />
                </dx:PixelSnapper>
            </dxi:MultiContentControl>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter TargetName="HeightHolder" Property="Padding" Value="12,11" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion Editors\Themes\Generic\MemoEdit.xaml-->
    <ControlTemplate x:Key="{dxt:LWKey ImageEdit.EditTemplate}">
        <Grid x:Name="PART_Container" Margin="{TemplateBinding Padding}" Background="{dx:LWBrush '#00FFFFFF, Win11=Brush.Button.Background'}" Style="{DynamicResource {dxt:LWKey ImageEdit.ContentStyle}}">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Image x:Name="PART_Editor"
                    Effect="{Binding Path=(dxe:BaseEdit.OwnerEdit).ImageEffect, RelativeSource={RelativeSource TemplatedParent}}"
                    Margin="{Binding Path=(dxe:BaseEdit.OwnerEdit).Padding, RelativeSource={RelativeSource TemplatedParent}}"
                    Source="{Binding Path=(dxe:BaseEdit.OwnerEdit).Source, RelativeSource={RelativeSource TemplatedParent}}"
                    Stretch="{Binding Path=(dxe:BaseEdit.OwnerEdit).Stretch, RelativeSource={RelativeSource TemplatedParent}}" />
            <ContentControl dx:FocusHelper2.Focusable="False" Template="{Binding Path=(dxe:BaseEdit.OwnerEdit).EmptyContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).HasImage, Converter={StaticResource inverseBoolToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
            <dxe:FlyoutControl x:Name="PART_MenuFlyout" AnimationDuration="00:00:00.1" Background="Transparent" BorderThickness="0" HorizontalAlignment="Center" OpenOnHover="True"
                    PlacementTarget="{Binding Path=(dxe:BaseEdit.OwnerEdit)}" VerticalAlignment="Bottom">
                <dxe:FlyoutControl.Settings>
                    <dxe:FlyInSettings />
                </dxe:FlyoutControl.Settings>
                <dxmvvm:Interaction.Behaviors>
                    <dxmvvm:EventToCommand Command="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).CanShowMenuPopupCommand}" EventName="Opening" PassEventArgsToCommand="True" />
                </dxmvvm:Interaction.Behaviors>
                <ContentControl Focusable="False" Template="{Binding Path=(dxe:BaseEdit.OwnerEdit).MenuContainerTemplate}">
                    <ContentControl Focusable="False" Template="{Binding Path=(dxe:BaseEdit.OwnerEdit).MenuTemplate}" />
                </ContentControl>
            </dxe:FlyoutControl>
            <dx:DXBorder x:Name="PART_InplaceMenu" Grid.Row="1" Background="{dx:LWBrush 'Brush.Backstage.Window.Background, Win10Dark=Brush.Backstage.Button.Background, Win11=Brush.Control.Background'}"
                        Padding="8,2,0,2" Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).InplaceMenuVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                <ContentControl Template="{Binding Path=(dxe:BaseEdit.OwnerEdit).MenuTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
            </dx:DXBorder>
        </Grid>
    </ControlTemplate>

</ResourceDictionary>