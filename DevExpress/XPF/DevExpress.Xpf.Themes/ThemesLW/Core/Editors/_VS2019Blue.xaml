<?xml version="1.0" encoding="utf-8" ?>
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:aero="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
    xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys"
    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
    xmlns:dxbi="http://schemas.devexpress.com/winfx/2008/xaml/bars/internal"
    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm">
    <ResourceDictionary.MergedDictionaries>
        <dxi:ThemeResourceDictionary Path="Common/{ThemeName}/Common.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <!--#region Editors-->
    <SolidColorBrush x:Key="{dxt:LWKey TrackBarEdit.Background}" Color="{StaticResource Color.Window.Background}" />
    <Thickness x:Key="{dxt:LWKey Buttons.DefaultBorderThickness}">1</Thickness>
    <dxe:DateNavigatorStateAppearance
        x:Key="{dxt:LWKey DateNavigator.AppearanceDisabledState}"
        Background="Transparent"
        BorderBrush="Transparent"
        Opacity="0.2"
        PriorityIndex="8" />
    <dxe:DateNavigatorStateAppearance
        x:Key="{dxt:LWKey DateNavigator.AppearanceFocusedState}"
        BorderBrush="{StaticResource Brush.Focused}"
        BorderThickness="1"
        PriorityIndex="5" />
    <dxe:DateNavigatorStateAppearance x:Key="{dxt:LWKey DateNavigator.AppearanceHolidayState}" Foreground="{StaticResource Brush.Custom.Red}" PriorityIndex="10" />
    <dxe:DateNavigatorStateAppearance x:Key="{dxt:LWKey DateNavigator.AppearanceInactiveState}" Opacity="0.38" PriorityIndex="2" />
    <dxe:DateNavigatorStateAppearance
        x:Key="{dxt:LWKey DateNavigator.AppearanceMouseOverState}"
        Background="{StaticResource Brush.HoverBackground}"
        BorderBrush="{StaticResource Brush.HoverBorder}"
        BorderThickness="1"
        Foreground="{StaticResource Brush.HoverForeground}"
        Opacity="1"
        PriorityIndex="6" />
    <dxe:DateNavigatorStateAppearance x:Key="{dxt:LWKey DateNavigator.AppearanceNormalState}" Foreground="{StaticResource Brush.Foreground}" PriorityIndex="1" />
    <dxe:DateNavigatorStateAppearance
        x:Key="{dxt:LWKey DateNavigator.AppearanceSelectedState}"
        Background="{StaticResource Brush.SelectionBackground}"
        BorderBrush="{StaticResource Brush.SelectionBorder}"
        BorderThickness="1"
        Foreground="{StaticResource Brush.SelectionForeground}"
        PriorityIndex="7" />
    <dxe:DateNavigatorStateAppearance x:Key="{dxt:LWKey DateNavigator.AppearanceSpecialDateState}" FontWeight="Bold" PriorityIndex="9" />
    <dxe:DateNavigatorStateAppearance
        x:Key="{dxt:LWKey DateNavigator.AppearanceTodayState}"
        Background="{StaticResource Brush.Control.NeutralBackground}"
        BorderBrush="{StaticResource Brush.Control.NeutralBackground}"
        BorderThickness="1"
        Foreground="{StaticResource Brush.Foreground}"
        PriorityIndex="3" />
    <dxe:DateNavigatorCellAppearance
        x:Key="{dxt:LWKey DateNavigator.Appearance}"
        DisabledState="{StaticResource {dxt:LWKey DateNavigator.AppearanceDisabledState}}"
        FocusedState="{StaticResource {dxt:LWKey DateNavigator.AppearanceFocusedState}}"
        HolidayState="{StaticResource {dxt:LWKey DateNavigator.AppearanceHolidayState}}"
        InactiveState="{StaticResource {dxt:LWKey DateNavigator.AppearanceInactiveState}}"
        MouseOverState="{StaticResource {dxt:LWKey DateNavigator.AppearanceMouseOverState}}"
        NormalState="{StaticResource {dxt:LWKey DateNavigator.AppearanceNormalState}}"
        SelectedState="{StaticResource {dxt:LWKey DateNavigator.AppearanceSelectedState}}"
        SpecialDateState="{StaticResource {dxt:LWKey DateNavigator.AppearanceSpecialDateState}}"
        TodayState="{StaticResource {dxt:LWKey DateNavigator.AppearanceTodayState}}" />
    <Thickness x:Key="{dxt:LWKey ComboBoxEdit.SelectedItemImagePadding}">3,0,0,0</Thickness>
    <Thickness x:Key="{dxt:LWKey ComboBoxEdit.SelectedItemContentPadding}">3,2,3,2</Thickness>
    <ControlTemplate x:Key="{dxt:LWKey EditorListBox.ItemTemplate}" TargetType="{x:Type dxe:ListBoxEditItem}">
        <Grid x:Name="Root" MinHeight="20">
            <Rectangle
                x:Name="IsFocus"
                Opacity="0"
                Stroke="{StaticResource Brush.HoverForeground}"
                StrokeDashArray="1 2"
                StrokeThickness="1" />
            <dx:DXBorder
                x:Name="IsDefault"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}" />
            <DockPanel HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" LastChildFill="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                <dxei:ImagePresenter DockPanel.Dock="Left" Padding="{StaticResource {dxt:LWKey ComboBoxEdit.SelectedItemImagePadding}}" />
                <dx:ContentContainer x:Name="Content" Margin="{StaticResource {dxt:LWKey ComboBoxEdit.SelectedItemContentPadding}}">
                    <ContentPresenter />
                </dx:ContentContainer>
            </DockPanel>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="Foreground" TargetName="Content" Value="{StaticResource Brush.SelectionForeground}" />
                <Setter Property="Opacity" TargetName="IsFocus" Value="1" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource Brush.ControlLight.SelectionBackground}" />
                <Setter Property="Foreground" TargetName="Content" Value="{StaticResource Brush.SelectionForeground}" />
                <Setter Property="BorderBrush" Value="{StaticResource Brush.ControlLight.SelectionBorder}" />
                <Setter Property="Opacity" TargetName="IsFocus" Value="0" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="IsFocused" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" TargetName="Content" Value="{StaticResource Brush.SelectionForeground}" />
                <Setter Property="Background" Value="{StaticResource Brush.Unfocused}" />
                <Setter Property="BorderBrush" Value="{StaticResource Brush.Unfocused}" />
            </MultiTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(dxe:BaseEdit.OwnerEdit).AllowItemHighlighting, RelativeSource={RelativeSource Self}}" Value="True" />
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" TargetName="Content" Value="{StaticResource Brush.HoverForeground}" />
                <Setter Property="Background" Value="{StaticResource Brush.ControlLight.HoverBackground}" />
                <Setter Property="BorderBrush" Value="{StaticResource Brush.ControlLight.HoverBorder}" />
            </MultiDataTrigger>
            <Trigger Property="dxi:AppearanceOptions.HasPadding" Value="True">
                <Setter Property="Margin" TargetName="Content" Value="{Binding Path=Padding, RelativeSource={RelativeSource TemplatedParent}}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsKeyboardFocused" Value="True" />
                    <Condition Property="dxe:EditorAppearanceProperties.HasFocusedBorderBrush" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Stroke" TargetName="IsFocus" Value="{Binding Path=(dxe:EditorAppearanceProperties.FocusedBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="Root" Value="0.38" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Margin" TargetName="Content" Value="14" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="{dxt:LWKey Buttons.ImageButtonGlyphStyle}" TargetType="{x:Type Image}">
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Margin" Value="2,0" />
    </Style>
    <!--#endregion Editors-->
</ResourceDictionary>