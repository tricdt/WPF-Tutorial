<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
    xmlns:cs="colorscheme_ignorable_uri"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
    mc:Ignorable="cs">

    <ResourceDictionary.MergedDictionaries>
        <dxi:ThemeResourceDictionary Path="Core/Controls/_{ThemeCategory}.xaml" />
        <dxi:ThemeResourceDictionary Path="Core/Controls/TabControl.Generic.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <dxmvvm:ObjectToObjectConverter x:Key="colorIsTransparentConverter" DefaultTarget="False">
        <dxmvvm:MapItem Source="{x:Static Colors.Transparent}" Target="True" />
    </dxmvvm:ObjectToObjectConverter>


    <!--#region Base\Core\Core\TabControl\Themes\UIPreset.xaml-->
    <!-- General -->
    <!--#endregion Base\Core\Core\TabControl\Themes\UIPreset.xaml-->

    <!--#region Base\Core\Core\TabControl\Themes\UICustom.xaml-->
    <!-- General -->
    <!--#endregion Base\Core\Core\TabControl\Themes\UICustom.xaml-->

    <!--#region Base\Core\Core\TabControl\Themes\UICore.xaml-->
    <!-- General -->
    <!--#endregion Base\Core\Core\TabControl\Themes\UICore.xaml-->

    <!--#region Base\Core\Core\TabControl\Themes\TabButtons.xaml-->

    <!-- Data Template -->

    <DataTemplate x:Key="{dxt:LWKey DXTabControl.ButtonNormalBackground}">
        <dx:DXBorder Background="Transparent" BorderBrush="Transparent" BorderThickness="1" />
    </DataTemplate>

    <DataTemplate x:Key="{dxt:LWKey DXTabControl.ButtonHoverBackground}">
        <dx:DXBorder Background="{dx:LWBrush 'Brush.HoverBackground, VS2019Blue=Brush.ControlLight.HoverBackground, Win11=Brush.ListItem.HoverBackground'}" BorderBrush="{dx:LWBrush 'Brush.HoverBorder, VS2019Blue=Brush.ControlLight.HoverBorder, Win11=Brush.ListItem.HoverBorder'}" BorderThickness="1" />
    </DataTemplate>

    <DataTemplate x:Key="{dxt:LWKey DXTabControl.ButtonPressedBackground}">
        <dx:DXBorder Background="{dx:LWBrush 'Brush.SelectionBackground, Win11=Brush.ListItem.SelectionBackground'}" BorderBrush="{dx:LWBrush 'Brush.SelectionBorder, Win11=Brush.ListItem.SelectionBorder'}" BorderThickness="1" />
    </DataTemplate>

    <!-- Style -->

    <Style x:Key="HeaderPanelButtonStyle" BasedOn="{StaticResource ButtonDefaultStyle}" TargetType="{x:Type ButtonBase}">
        <Setter Property="Content" Value="{dxi:GlyphControlViewInfo Size=0}" />
        <Setter Property="Foreground" Value="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ForegroundDark, Win11=Brush.Foreground.Primary'}" />
        <Setter Property="Height" Value="17" />
        <Setter Property="Width" Value="17" />
        <Setter Property="dxi:TabOrientablePanel.ChildMargin" Value="2,0,2,0" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" Value="44" />
                <Setter Property="MinWidth" Value="44" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ForegroundDark, Office2019HighContrast=Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxt:LWKey DXTabItem.CloseButtonStyle}" BasedOn="{StaticResource ButtonDefaultStyle}" TargetType="{x:Type Button}">
        <Setter Property="Content" Value="{dxi:GlyphControlViewInfo Size=-1}" />
        <Setter Property="Foreground" Value="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ForegroundDark, Win11=Brush.Foreground.Primary'}" />
        <Setter Property="Height" Value="14" />
        <Setter Property="Margin" Value="7,0,-5,0" />
        <Setter Property="Width" Value="14" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ForegroundDark, Office2019HighContrast=Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" Value="44" />
                <Setter Property="MinWidth" Value="44" />
                <Setter Property="Margin" Value="14,-15,-11,-15" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxt:LWKey DXTabControl.CloseButtonStyle}" BasedOn="{StaticResource HeaderPanelButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Content" Value="{dxi:GlyphControlViewInfo Size=0}" />
    </Style>

    <Style x:Key="{dxt:LWKey DXTabControl.PanelNewButtonStyle}" BasedOn="{StaticResource HeaderPanelButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Content" Value="{dxi:GlyphControlViewInfo Size=0}" />
        <Setter Property="dxi:TabOrientablePanel.ChildMargin" Value="5,0,3,0" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="dxi:TabOrientablePanel.ChildMargin" Value="10,0,6,0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxt:LWKey DXTabControl.MainNewButtonStyle}" BasedOn="{StaticResource HeaderPanelButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Content" Value="{dxi:GlyphControlViewInfo Size=0}" />
    </Style>

    <Style x:Key="{dxt:LWKey DXTabControl.PrevButtonStyle}" BasedOn="{StaticResource HeaderPanelButtonStyle}" TargetType="{x:Type RepeatButton}">
        <Setter Property="Content" Value="{dxi:GlyphControlViewInfo Size=0}" />
    </Style>

    <Style x:Key="{dxt:LWKey DXTabControl.NextButtonStyle}" BasedOn="{StaticResource HeaderPanelButtonStyle}" TargetType="{x:Type RepeatButton}">
        <Setter Property="Content" Value="{dxi:GlyphControlViewInfo Size=0}" />
    </Style>

    <Style x:Key="{dxt:LWKey DXTabControl.MenuButtonStyle}" BasedOn="{StaticResource HeaderPanelButtonStyle}" TargetType="{x:Type ToggleButton}">
        <Setter Property="Content" Value="{dxi:GlyphControlViewInfo Size=0}" />
    </Style>
    <!--#endregion Base\Core\Core\TabControl\Themes\TabButtons.xaml-->

    <!--#region Base\Core\Core\TabControl\Themes\TabContent.xaml-->
    <!-- Data Template -->

    <DataTemplate x:Key="{dxt:LWKey DXTabControl.Background}">
        <dxi:TabBorder
            BorderBackground="{dx:LWBrush 'Brush.Control.Background, Office2019=Brush.Window.Background, Win11=Brush.WindowBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.Border, Win11=Brush.PanelBorder'}"
            BorderCornerRadius="{dx:LWCornerRadius '0, Win11=7'}"
            BorderMode="BorderBrush"
            BorderThickness="1"
            ViewInfo="{Binding}" />
    </DataTemplate>

    <!-- Style -->

    <Style x:Key="{dxt:LWKey DXTabControl.ContentStyle}">
        <Setter Property="dx:FrameworkElementHelper.ClipCornerRadius" Value="{dx:LWDouble '0, Win11=7'}" />
    </Style>
    <!--#endregion Base\Core\Core\TabControl\Themes\TabContent.xaml-->

    <!--#region Base\Core\Core\TabControl\Themes\TabItem.xaml-->


    <!-- Data Template -->

    <DataTemplate x:Key="{dxt:LWKey DXTabItem.NormalBackground}">
        <dxi:TabBorder
            BackgroundMode="None"
            BorderCornerRadius="{dx:LWCornerRadius '0, Win11=4'}"
            BorderMargin="0,-2,0,0"
            BorderMode="None"
            HoldBorderCornerRadius="{dx:LWCornerRadius '0, Win11=4'}"
            ViewInfo="{Binding}" />
    </DataTemplate>

    <DataTemplate x:Key="{dxt:LWKey DXTabItem.HoverBackground}">
        <dxi:TabBorder
            x:Name="IsDefault"
            BackgroundMode="None"
            BorderBackground="{dx:LWBrush 'Brush.HoverBackground, Office2019Black=Brush.Backstage.HoverBackground, Office2019Colorful=#00000000, Office2019HighContrast=#00000000, VS2019Blue=Brush.Window.HeaderButton.HoverBackground, Win10=Brush.Control.Background, Win11=Brush.ListItem.HoverBackground'}"
            BorderCornerRadius="{dx:LWCornerRadius '0, Win11=(4,4,0,0)'}"
            BorderMargin="0,-2,1,1"
            BorderMode="None"
            HoldBorderCornerRadius="{dx:LWCornerRadius '0, Win11=4'}"
            HoldBorderMargin="0,0,1,1"
            HoldBorderThickness="0"
            ViewInfo="{Binding}" />
        <DataTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="BorderMargin" TargetName="IsDefault" Value="0,0,1,0" />
                <Setter Property="HoldBorderMargin" TargetName="IsDefault" Value="0,0,1,0" />
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="{dxt:LWKey DXTabItem.SelectedBackground}">
        <dxi:TabBorder
            x:Name="IsDefault"
            BackgroundMode="None"
            BorderBackground="{dx:LWBrush 'Brush.Control.Background, Office2019Black=Brush.Window.Background, Office2019Colorful=Brush.Window.Background, Office2019HighContrast=Brush.Window.Background, Win11=Brush.PanelBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.Border, Win11=Brush.PanelBorder'}"
            BorderMargin="0,-2,1,-1"
            BorderMode="BorderBrush"
            BorderThickness="1,1,1,0"
            HoldBorderMargin="0,0,1,1"
            HoldBorderThickness="1"
            ViewInfo="{Binding}"
            BorderCornerRadius="{dx:LWCornerRadius '0, Win11=(4,4,0,0)'}"
            HoldBorderCornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
    </DataTemplate>

    <!-- Styles -->

    <Style x:Key="{dxt:LWKey DXTabControl.PanelContainerStyle}" BasedOn="{StaticResource PanelContainerDefaultStyle}" TargetType="{x:Type dxi:TabPanelContainer}">
        <Setter Property="HoldMargin" Value="0,0,-1,0" />
        <Setter Property="HoldPadding" Value="0" />
        <Setter Property="NormalMargin" Value="{dx:LWThickness '(0,0,0,-1), Win11=(9,0,9,-1)'}" />
        <Setter Property="NormalPadding" Value="0,2,1,1" />
    </Style>

    <Style x:Key="{dxt:LWKey DXTabItem.SeparatorStyle}" TargetType="{x:Type ContentPresenter}">
        <Setter Property="Visibility" Value="Collapsed" />
    </Style>
    <!--#endregion Base\Core\Core\TabControl\Themes\TabItem.xaml-->

    <!--#region Base\Core\Core\TabControl\Themes\TabWindow.xaml-->
    <!-- Templates -->

    <DataTemplate x:Key="{dxt:LWKey DXTabbedWindow.HeaderTemplate}" />

    <DataTemplate x:Key="{dxt:LWKey DXTabbedWindow.BorderTemplate}">
        <dx:DXBorder
            x:Name="Root"
            Background="{dx:LWBrush 'Brush.Window.Background, Office2019HighContrast=Brush.Backstage.Window.Background, VS2019Blue=Brush.ControlDark.Background, Win11=Brush.WindowBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.Backstage.Window.Background, Win11=Brush.Backstage.Background'}"
            BorderThickness="1" />
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dx:FloatingContainer.IsActive)}" Value="False">
                <Setter Property="BorderBrush" TargetName="Root" Value="{dx:LWBrush 'Brush.Border, Win11=Brush.WindowBorder'}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!-- Styles -->

    <Style x:Key="{dxt:LWKey DXTabbedWindow.MainContainerStyle}" TargetType="Panel">
        <Setter Property="Margin" Value="1" />
    </Style>

    <Style x:Key="{dxt:LWKey DXTabbedWindow.CaptionPresenterStyle}" TargetType="ContentPresenter">
        <!--<Setter Property="Margin" Value="6,0,0,0" />-->
    </Style>

    <Style x:Key="{dxt:LWKey DXTabbedWindow.ContentBorderStyle}" TargetType="Border">
        <Setter Property="Margin" Value="6,0,6,6" />
    </Style>

    <Style x:Key="{dxt:LWKey DXTabbedWindow.ControlContainerStyle}" BasedOn="{StaticResource DefaultButtonContainerStyle}" TargetType="ItemsControl" />

    <Style x:Key="{dxt:LWKey DXTabbedWindow.ButtonContainerStyle}" BasedOn="{StaticResource DefaultButtonContainerStyle}" TargetType="ItemsControl">
        <!--<Setter Property="Margin" Value="0,0,6,6" />-->
    </Style>

    <Style x:Key="WindowButtonStyle" BasedOn="{StaticResource WindowButtonDefaultStyle}" TargetType="Button">
        <Setter Property="Height" Value="16" />
        <Setter Property="Width" Value="16" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" Value="44" />
                <Setter Property="MinWidth" Value="44" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Buttons -->

    <Style x:Key="{dxt:LWKey DXTabbedWindow.MinimizeButtonStyle}" BasedOn="{StaticResource WindowButtonStyle}" TargetType="{x:Type Button}" />

    <Style x:Key="{dxt:LWKey DXTabbedWindow.RestoreButtonStyle}" BasedOn="{StaticResource WindowButtonStyle}" TargetType="{x:Type Button}" />

    <Style x:Key="{dxt:LWKey DXTabbedWindow.MaximizeButtonStyle}" BasedOn="{StaticResource WindowButtonStyle}" TargetType="{x:Type Button}" />

    <Style x:Key="{dxt:LWKey DXTabbedWindow.CloseButtonStyle}" BasedOn="{StaticResource WindowButtonStyle}" TargetType="{x:Type Button}" />
    <!--#endregion Base\Core\Core\TabControl\Themes\TabWindow.xaml-->

    <!--#region Base\Core\Core\TabControl\Base.xaml-->
    <!--#endregion Base\Core\Core\TabControl\Base.xaml-->


    <!--#region DEFAULT STYLES-->
    <Style x:Key="DXTabControl.DefaultStyle" TargetType="{x:Type dx:DXTabControl}" BasedOn="{StaticResource TabControlDefaultStyle}">
        <Setter Property="Padding" Value="12" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding" Value="8" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DXTabItem.DefaultStyle" BasedOn="{StaticResource TabItemDefaultStyle}" TargetType="{x:Type dx:DXTabItem}">
        <Setter Property="Padding" Value="{dx:LWThickness '(12,3,12,3), Win11=(12,5,12,7)'}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{dx:LWBrush 'Brush.HoverForeground, Office2019Colorful=Brush.Focused, Office2019HighContrast=Brush.Focused, Win11=Brush.Foreground.Primary'}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="{dx:LWBrush 'Brush.Focused, Office2019Black=Brush.Foreground, VS2019Blue=Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="IsFocused" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{dx:LWBrush 'Brush.Focused, Office2019Black=Brush.Foreground, VS2019Blue=Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="IsFocused" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{dx:LWBrush 'Brush.Focused, Office2019Black=Brush.Foreground, VS2019Blue=Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            </MultiTrigger>
            <DataTrigger Binding="{Binding 'BackgroundColor', RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource colorIsTransparentConverter}}" Value="False">
                <Setter Property="Foreground" Value="{Binding 'BackgroundColor', RelativeSource={RelativeSource Mode=Self}, Converter={dxmvvm:ColorToBrushConverter CustomA=#FF}}" />
            </DataTrigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding" Value="14" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion DEFAULT STYLES-->


</ResourceDictionary>