<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <dxi:ThemeResourceDictionary Path="Core/Controls/_Base.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <sys:Boolean x:Key="{dxt:LWKey ThemedWindow.RoundWindowCorners}">False</sys:Boolean>
    <SolidColorBrush x:Key="{dxt:LWKey SuperTip.Foreground}" Color="{dx:LWColor 'Office2019Black=Color.ControlLight.Foreground, Office2019Colorful=Color.Foreground, Office2019HighContrast=Color.Foreground'}" />
    <SolidColorBrush x:Key="{dxt:LWKey FloatingContainer.FloatingContainerBackground}" Color="{StaticResource Color.Window.Background}" />
    <SolidColorBrush x:Key="{dxt:LWKey DXWindow.AeroWindowContainerBackground}" Color="{StaticResource Color.Backstage.Window.Background}" />
    <SolidColorBrush x:Key="{dxt:LWKey SearchPanel.ButtonBorderBrush}" Color="{StaticResource Color.Delimiter}" />
    <SolidColorBrush x:Key="{dxt:LWKey SearchPanel.SearchPanelBorderBrush}" Color="{StaticResource Color.Delimiter}" />
    <SolidColorBrush x:Key="{dxt:LWKey SearchPanel.SearchPanelBackgroundBrush}" Color="{StaticResource Color.Delimiter}" />
    <SolidColorBrush x:Key="{dxt:LWKey SearchPanel.SearchPanelTextBrush}" Color="{StaticResource Color.Foreground}" />
    <SolidColorBrush x:Key="{dxt:LWKey SearchPanel.SearchPanelGlyphBrush}" Color="{StaticResource Color.Foreground}" />
    <SolidColorBrush x:Key="{dxt:LWKey DXWindow.BorderEffectActiveColor}" Color="{StaticResource Color.Backstage.Window.Background}" />
    <SolidColorBrush x:Key="{dxt:LWKey DXWindow.BorderEffectInactiveColor}" Color="{StaticResource Color.Border}" />
    <SolidColorBrush x:Key="{dxt:LWKey DXWindow.FloatingContainerActiveBodyBorder}" Color="{StaticResource Color.Border}" />
    <SolidColorBrush x:Key="{dxt:LWKey DXWindow.FloatingContainerInactiveBodyBorder}" Color="{StaticResource Color.Border}" />
    <SolidColorBrush x:Key="{dxt:LWKey DXWindow.FloatingContainerInactiveBackground}" Color="{StaticResource Color.Window.Background}" />
    <SolidColorBrush x:Key="{dxt:LWKey DXWindow.FloatingContainerBorder}" Color="{dx:LWColor 'Office2019Black=Color.Border, Office2019Colorful=Color.Backstage.Window.Background, Office2019HighContrast=Color.Backstage.Window.Background'}" />
    <SolidColorBrush x:Key="{dxt:LWKey DXWindow.FloatingContainerInactiveBorder}" Color="{StaticResource Color.Border}" />
    <SolidColorBrush x:Key="{dxt:LWKey DXWindow.FloatingContainerBackground}" Color="{StaticResource Color.Window.Background}" />
    <SolidColorBrush x:Key="{dxt:LWKey DXWindow.ActiveHeaderBackground}" Color="{dx:LWColor 'Office2019Black=Color.Window.Background, Office2019Colorful=Color.Window.Background, Office2019HighContrast=Color.Backstage.Window.Background'}" />
    <SolidColorBrush x:Key="{dxt:LWKey DXWindow.InactiveHeaderBackground}" Color="{StaticResource Color.Window.Background}" />
    <SolidColorBrush x:Key="{dxt:LWKey FloatingContainer.FloatingContainerDefaultButtonForegroundNormalState}" Color="{StaticResource Color.Foreground}" />
    <SolidColorBrush x:Key="{dxt:LWKey FloatingContainer.FloatingContainerDefaultButtonForegroundMouseOverState}" Color="{dx:LWColor 'Office2019Black=Color.Foreground, Office2019Colorful=Color.Backstage.Foreground, Office2019HighContrast=Color.HoverForeground'}" />
    <SolidColorBrush x:Key="{dxt:LWKey FloatingContainer.FloatingContainerDefaultButtonForegroundPressedState}" Color="{dx:LWColor 'Office2019Black=Color.Foreground, Office2019Colorful=Color.Backstage.Foreground, Office2019HighContrast=Color.SelectionForeground'}" />
    <SolidColorBrush x:Key="{dxt:LWKey FloatingContainer.FloatingContainerCloseButtonForegroundNormalState}" Color="{StaticResource Color.Foreground}" />
    <SolidColorBrush x:Key="{dxt:LWKey FloatingContainer.FloatingContainerCloseButtonForegroundMouseOverState}" Color="{dx:LWColor 'Office2019Black=Color.Foreground, Office2019Colorful=Color.Backstage.Foreground, Office2019HighContrast=Color.HoverForeground'}" />
    <SolidColorBrush x:Key="{dxt:LWKey FloatingContainer.FloatingContainerCloseButtonForegroundPressedState}" Color="{dx:LWColor 'Office2019Black=Color.Foreground, Office2019Colorful=Color.Backstage.Foreground, Office2019HighContrast=Color.SelectionForeground'}" />
    <dx:ColorStaticResource x:Key="{dxt:LWKey AcrylicThemedWindow.AcrylicColor}" Color="{StaticResource Color.Window.Background}" />
    <SolidColorBrush x:Key="{dxt:LWKey ThemedWindow.WindowActiveBackground}" Color="{StaticResource Color.Window.Background}" />
    <SolidColorBrush x:Key="{dxt:LWKey ThemedWindow.WindowActiveBorderBrush}" Color="{dx:LWColor 'Office2019Black=Color.Border, Office2019Colorful=Color.Border, Office2019HighContrast=Color.Backstage.Window.Background'}" />
    <SolidColorBrush x:Key="{dxt:LWKey ThemedWindow.WindowActiveContentBackground}" Color="{StaticResource Color.Window.Background}" />
    <SolidColorBrush x:Key="{dxt:LWKey ThemedWindow.WindowActiveContentBorderBrush}" Color="{StaticResource Color.Border}" />
    <SolidColorBrush x:Key="{dxt:LWKey ThemedWindow.WindowInactiveBackground}" Color="{StaticResource Color.Window.Background}" />
    <SolidColorBrush x:Key="{dxt:LWKey ThemedWindow.WindowInactiveBorderBrush}" Color="{StaticResource Color.Border}" />
    <SolidColorBrush x:Key="{dxt:LWKey ThemedWindow.WindowInactiveContentBackground}" Color="{StaticResource Color.Window.Background}" />
    <SolidColorBrush x:Key="{dxt:LWKey ThemedWindow.WindowInactiveContentBorderBrush}" Color="{StaticResource Color.Border}" />
    <SolidColorBrush x:Key="{dxt:LWKey ThemedWindow.WindowTitleForeground}" Color="{StaticResource Color.Foreground}" />
    <SolidColorBrush x:Key="{dxt:LWKey ThemedWindow.WindowRibbonTitleForeground}" Color="{StaticResource Color.Backstage.Foreground}" />
    <SolidColorBrush x:Key="{dxt:LWKey ThemedWindow.WindowContentForeground}" Color="{StaticResource Color.Foreground}" />
    <SolidColorBrush x:Key="{dxt:LWKey ThemedWindow.HeaderControlBoxBackground}" Color="Transparent" />
    <SolidColorBrush x:Key="{dxt:LWKey ThemedWindow.HeaderControlBoxBorderBrush}" Color="Transparent" />
    <SolidColorBrush x:Key="{dxt:LWKey ThemedWindow.WindowActiveHeaderBackground}" Color="{dx:LWColor 'Office2019Black=Color.Window.Background, Office2019Colorful=Color.Window.Background, Office2019HighContrast=Color.Backstage.Window.Background'}" />
    <SolidColorBrush x:Key="{dxt:LWKey ThemedWindow.WindowInactiveHeaderBackground}" Color="{StaticResource Color.Window.Background}" />
    <SolidColorBrush x:Key="{dxt:LWKey ThemedWindow.WindowRibbonActiveHeaderBackground}" Color="{StaticResource Color.Backstage.Window.Background}" />
    <SolidColorBrush x:Key="{dxt:LWKey ThemedWindow.WindowRibbonInactiveHeaderBackground}" Color="{dx:LWColor 'Office2019Black=Color.Backstage.Window.Background, Office2019Colorful=Color.Backstage.Window.Background, Office2019HighContrast=Color.Window.Background'}" />
    <SolidColorBrush x:Key="{dxt:LWKey ThemedWindow.BackButtonForegroundNormalState}" Color="{StaticResource Color.Foreground}" />
    <SolidColorBrush x:Key="{dxt:LWKey ThemedWindow.BackButtonForegroundMouseoverState}" Color="{dx:LWColor 'Office2019Black=Color.HoverForeground, Office2019Colorful=Color.Backstage.Foreground, Office2019HighContrast=Color.HoverForeground'}" />
    <SolidColorBrush x:Key="{dxt:LWKey ThemedWindow.BackButtonForegroundPressedState}" Color="{dx:LWColor 'Office2019Black=Color.SelectionForeground, Office2019Colorful=Color.Backstage.Foreground, Office2019HighContrast=Color.SelectionForeground'}" />
    <SolidColorBrush x:Key="{dxt:LWKey DragDrop.DropMarkerBackground}" Color="{StaticResource Color.Editor.Background}" />
    <SolidColorBrush x:Key="{dxt:LWKey DragDrop.DropMarkerBorderBrush}" Color="{StaticResource Color.Focused}" />
    <SolidColorBrush x:Key="{dxt:LWKey DragDrop.DragHintBackground}" Color="{StaticResource Color.Control.Background}" />
    <SolidColorBrush x:Key="{dxt:LWKey DragDrop.DragHintBorderBrush}" Color="{StaticResource Color.Border}" />
    <SolidColorBrush x:Key="{dxt:LWKey DragDrop.DragHintCaptionForeground}" Color="{StaticResource Color.Focused}" />
    <SolidColorBrush x:Key="{dxt:LWKey DragDrop.DragHintDescriptionForeground}" Color="{StaticResource Color.Foreground}" />
    <dx:BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <CornerRadius x:Key="{dxt:LWKey DragDrop.DragHintCornerRadius}">0</CornerRadius>
    <sys:Double x:Key="{dxt:LWKey DXWindow.InactiveHeaderOpacity}">0.38</sys:Double>
    <Thickness x:Key="{dxt:LWKey DXWindow.ResizeBorderThickness}">5</Thickness>
    <Thickness x:Key="{dxt:LWKey DXWindow.FloatingContainerBodyMargin}">5,0,5,5</Thickness>
    <sys:Double x:Key="{dxt:LWKey DXWindow.FloatingContainerClipCornerRadius}">0</sys:Double>
    <Thickness x:Key="{dxt:LWKey DXWindow.FloatingContainerBorderPadding}">1</Thickness>
    <Thickness x:Key="{dxt:LWKey DXWindow.BorderEffectOffset}">1</Thickness>
    <Thickness x:Key="{dxt:LWKey DXWindow.BorderEffectLeftMargins}">0,10,0,10</Thickness>
    <Thickness x:Key="{dxt:LWKey DXWindow.BorderEffectRightMargins}">0,10,0,10</Thickness>
    <Thickness x:Key="{dxt:LWKey DXWindow.BorderEffectTopMargins}">0</Thickness>
    <Thickness x:Key="{dxt:LWKey DXWindow.BorderEffectBottomMargins}">0</Thickness>
    <Thickness x:Key="{dxt:LWKey FloatingContainer.FloatingContainerHeaderDockMargin}">0</Thickness>
    <Thickness x:Key="{dxt:LWKey FloatingContainer.HeaderItemsControlMargin}">0</Thickness>
    <sys:Double x:Key="{dxt:LWKey DXWindow.AeroWindowBorderSize}">8</sys:Double>
    <Thickness x:Key="{dxt:LWKey DXWindow.AeroWindowResizeBorderThickness}">9</Thickness>
    <sys:Double x:Key="{dxt:LWKey ThemedWindow.WindowInactiveHeaderOpacity}">0.62</sys:Double>
    <sys:Double x:Key="{dxt:LWKey ThemedWindow.WindowIconHeight}">16</sys:Double>
    <sys:Double x:Key="{dxt:LWKey ThemedWindow.WindowIconWidth}">16</sys:Double>
    <sys:Double x:Key="{dxt:LWKey ThemedWindow.WindowTitleFontSize}">12</sys:Double>
    <Thickness x:Key="{dxt:LWKey ThemedWindow.WindowBorderThickness}">1</Thickness>
    <Thickness x:Key="{dxt:LWKey ThemedWindow.WindowContentBorderThickness}">0</Thickness>
    <Thickness x:Key="{dxt:LWKey ThemedWindow.WindowRibbonContentBorderThickness}">0</Thickness>
    <Thickness x:Key="{dxt:LWKey ThemedWindow.HeaderNormalPadding}">0</Thickness>
    <Thickness x:Key="{dxt:LWKey ThemedWindow.WindowNormalPadding}">5,0,5,5</Thickness>
    <sys:Double x:Key="{dxt:LWKey ThemedWindow.TabbedModeDefaultTopMargin}">5</sys:Double>
    <Thickness x:Key="{dxt:LWKey ThemedWindow.HeaderRibbonPadding}">0</Thickness>
    <Thickness x:Key="{dxt:LWKey ThemedWindow.WindowRibbonPadding}">0</Thickness>
    <Thickness x:Key="{dxt:LWKey ThemedWindow.SizeGripMargin}">0,0,5,5</Thickness>
    <Thickness x:Key="{dxt:LWKey ThemedWindow.WindowIconMargin}">8,0,3,0</Thickness>
    <Thickness x:Key="{dxt:LWKey ThemedWindow.WindowTitleControlMargin}">5,0,5,0</Thickness>
    <Thickness x:Key="{dxt:LWKey ThemedWindow.WindowToolbarMargin}">5,0,0,0</Thickness>
    <Thickness x:Key="{dxt:LWKey ThemedWindow.HeaderControlBoxBorderThickness}">0</Thickness>
    <FontWeight x:Key="{dxt:LWKey ThemedWindow.WindowTitleFontWeight}">Normal</FontWeight>
    <FontWeight x:Key="{dxt:LWKey DragDrop.DragHintCaptionFontWeight}">Bold</FontWeight>
    <sys:Double x:Key="{dxt:LWKey DragDrop.DragHintCaptionFontSize}">12</sys:Double>
    <VerticalAlignment x:Key="{dxt:LWKey ThemedWindow.HeaderControlBoxVerticalAlignment}">Top</VerticalAlignment>
    <dx:WindowTitleAlignment x:Key="{dxt:LWKey ThemedWindow.WindowTitleAlignment}">Left</dx:WindowTitleAlignment>
    <sys:Double x:Key="{dxt:LWKey ThemedWindow.WindowHeaderHeight}">32</sys:Double>
    <SolidColorBrush x:Key="{dxt:LWKey ThemedBorder.BackgroundBrush}" Color="{StaticResource Color.Window.Background}" />
    <SolidColorBrush x:Key="{dxt:LWKey ThemedBorder.BorderBrush}" Color="{StaticResource Color.Border}" />
    <SolidColorBrush x:Key="{dxt:LWKey Badges.ErrorForeground}" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="{dxt:LWKey Badges.WarningForeground}" Color="{dx:LWColor 'Office2019Black=#FFFFFFFF, Office2019Colorful=#FFFFFFFF, Office2019HighContrast=#FF000000'}" />
    <SolidColorBrush x:Key="{dxt:LWKey Badges.SuccessForeground}" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="{dxt:LWKey Badges.InformationForeground}" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="{dxt:LWKey Badges.InformationBackground}" Color="{dx:LWColor 'Office2019Black=#FF5988CD, Office2019Colorful=#FF4371A0, Office2019HighContrast=#FF007FFF'}" />
    <SolidColorBrush x:Key="{dxt:LWKey Badges.InformationBorderBrush}" Color="{dx:LWColor 'Office2019Black=#FF5988CD, Office2019Colorful=#FF4371A0, Office2019HighContrast=#FF007FFF'}" />
    <SolidColorBrush x:Key="{dxt:LWKey Format.FormatRedTextBrush}" Color="{dx:LWColor '#D9A61200, Office2019Black=#FFF66464'}"/>
    <SolidColorBrush x:Key="{dxt:LWKey Format.FormatRedFillBrush}" Color="{dx:LWColor '#3FDC5E55, Office2019Colorful=#E9FFD9D9, Office2019HighContrast=#E9FF9C9C'}"/>
    <SolidColorBrush x:Key="{dxt:LWKey Format.FormatYellowTextBrush}" Color="{dx:LWColor '#D99C6500, Office2019Black=#FFFFA23F'}"/>
    <SolidColorBrush x:Key="{dxt:LWKey Format.FormatYellowFillBrush}" Color="{dx:LWColor '#E9FFF5D9, Office2019Black=#3FDC9A2C, Office2019HighContrast=#E9FFE499'}"/>
    <SolidColorBrush x:Key="{dxt:LWKey Format.FormatGreenTextBrush}" Color="{dx:LWColor '#D9158800, Office2019Black=#FF64D664'}"/>
    <SolidColorBrush x:Key="{dxt:LWKey Format.FormatGreenFillBrush}" Color="{dx:LWColor '#E9D9FFD9, Office2019Black=#3F6EB664, Office2019HighContrast=#E997DE97'}"/>
    <dx:ColorStaticResource x:Key="{dxt:LWKey Format.ColorScaleWhite}" Color="{dx:LWColor 'Office2019Black=#26000000, Office2019Colorful=Color.Editor.Background, Office2019HighContrast=Color.Editor.Background'}" />
    <SolidColorBrush x:Key="{dxt:LWKey Format.DataBarZeroLineColor}" Color="{dx:LWColor 'Office2019Black=Color.Editor.Background, Office2019Colorful=Color.Focused, Office2019HighContrast=Color.Focused'}" />
    <DataTemplate x:Key="{dxt:LWKey FloatingContainer.FloatingContainerCloseButtonGlyph}">
        <Path Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}" Style="{StaticResource UIShape.WindowClose}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxt:LWKey FloatingContainer.FloatingContainerRestoreButtonGlyph}">
        <Path Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}" Style="{StaticResource UIShape.WindowRestore}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxt:LWKey FloatingContainer.FloatingContainerMinimizeButtonGlyph}">
        <Path Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}" Style="{StaticResource UIShape.WindowMinimize}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxt:LWKey FloatingContainer.FloatingContainerMaximizeButtonGlyph}">
        <Path Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}" Style="{StaticResource UIShape.WindowMaximize}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxt:LWKey FloatingContainer.FloatingContainerCaptionTemplate}">
        <dx:DXWindowSmartCenteringPanel HorizontalAlignment="Stretch">
            <TextBlock
                x:Name="PART_Text"
                FontWeight="Bold"
                Foreground="{StaticResource Brush.Foreground}"
                IsHitTestVisible="False"
                Margin="8"
                Text="{Binding Path=(dx:FloatingContainer.FloatingContainer).Caption, RelativeSource={RelativeSource AncestorType=ContentPresenter}}"
                TextTrimming="WordEllipsis" />
        </dx:DXWindowSmartCenteringPanel>
        <DataTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Margin" Value="14" />
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <Style x:Key="{dxt:LWKey FloatingContainer.DXWindowIconStyle}" TargetType="{x:Type Image}">
        <Setter Property="Margin" Value="8" />
        <Setter Property="Stretch" Value="None" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Margin" Value="14" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <SolidColorBrush x:Key="{dxt:LWKey RibbonHeaderItems.RibbonDefaultButtonForegroundNormalState}" Color="{dx:LWColor 'Office2019Black=Color.Foreground, Office2019Colorful=Color.Window.Background, Office2019HighContrast=Color.Foreground'}" />
    <SolidColorBrush x:Key="{dxt:LWKey RibbonHeaderItems.RibbonDefaultButtonForegroundMouseOverState}" Color="{dx:LWColor 'Office2019Black=Color.Foreground, Office2019Colorful=Color.Window.Background, Office2019HighContrast=Color.HoverForeground'}" />
    <SolidColorBrush x:Key="{dxt:LWKey RibbonHeaderItems.RibbonDefaultButtonForegroundPressedState}" Color="{dx:LWColor 'Office2019Black=Color.Foreground, Office2019Colorful=Color.Window.Background, Office2019HighContrast=Color.SelectionForeground'}" />
    <SolidColorBrush x:Key="{dxt:LWKey RibbonHeaderItems.RibbonCloseButtonForegroundNormalState}" Color="{dx:LWColor 'Office2019Black=Color.Foreground, Office2019Colorful=Color.Window.Background, Office2019HighContrast=Color.Foreground'}" />
    <SolidColorBrush x:Key="{dxt:LWKey RibbonHeaderItems.RibbonCloseButtonForegroundMouseOverState}" Color="{dx:LWColor 'Office2019Black=Color.Foreground, Office2019Colorful=Color.Window.Background, Office2019HighContrast=Color.HoverForeground'}" />
    <SolidColorBrush x:Key="{dxt:LWKey RibbonHeaderItems.RibbonCloseButtonForegroundPressedState}" Color="{dx:LWColor 'Office2019Black=Color.Foreground, Office2019Colorful=Color.Window.Background, Office2019HighContrast=Color.SelectionForeground'}" />
    <DataTemplate x:Key="{dxt:LWKey RibbonHeaderItems.RibbonCloseButtonGlyph}">
        <Path Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}" Style="{StaticResource UIShape.WindowClose}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxt:LWKey RibbonHeaderItems.RibbonRestoreButtonGlyph}">
        <Path Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}" Style="{StaticResource UIShape.WindowRestore}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxt:LWKey RibbonHeaderItems.RibbonMinimizeButtonGlyph}">
        <Path Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}" Style="{StaticResource UIShape.WindowMinimize}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxt:LWKey RibbonHeaderItems.RibbonMaximizeButtonGlyph}">
        <Path Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}" Style="{StaticResource UIShape.WindowMaximize}" />
    </DataTemplate>
    <Style x:Key="{dxt:LWKey ThemedWindow.BackButtonStyle}" TargetType="{x:Type dx:ThemedWindowBackButton}">
        <Setter Property="Height" Value="32" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template" Value="{DynamicResource {dxt:LWKey ThemedWindow.BackButtonTemplate}}" />
        <Setter Property="Visibility" Value="Collapsed" />
        <Setter Property="Width" Value="46" />
        <Setter Property="dxi:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
    </Style>
    <ControlTemplate x:Key="{dxt:LWKey PopupBase.BorderTemplate}" TargetType="{x:Type dx:PopupBorderControl}">
        <Grid Name="Root">
            <dx:DXBorder x:Name="PART_Shadowborder" Background="{StaticResource Brush.Editor.Background}" Margin="0,0,5,5">
                <dx:DXBorder.Effect>
                    <DropShadowEffect
                        x:Name="Shadow"
                        BlurRadius="4"
                        Direction="315"
                        Opacity="0.14"
                        ShadowDepth="3" />
                </dx:DXBorder.Effect>
            </dx:DXBorder>
            <dx:DXBorder
                x:Name="PART_Border"
                Background="{dx:LWBrush 'Office2019Black=Brush.Window.Background, Office2019Colorful=Brush.Editor.Background, Office2019HighContrast=Brush.Editor.Background'}"
                BorderBrush="{StaticResource Brush.Border}"
                BorderThickness="1"
                Height="{TemplateBinding ContentHeight}"
                Margin="0,0,5,5"
                MaxHeight="{TemplateBinding ContentMaxHeight}"
                MaxWidth="{TemplateBinding ContentMaxWidth}"
                MinHeight="{TemplateBinding ContentMinHeight}"
                MinWidth="{TemplateBinding ContentMinWidth}"
                Width="{TemplateBinding ContentWidth}">
                <ContentPresenter x:Name="PART_ContentPresenter" />
            </dx:DXBorder>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxb:BarManagerHelper.Popup).(dxi:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Background" TargetName="PART_Border" Value="{Binding Path=(dxb:BarManagerHelper.Popup).(dxi:AppearanceOptions.Background), RelativeSource={RelativeSource Self}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxb:BarManagerHelper.Popup).(dxi:AppearanceOptions.HasBorderBrush), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="BorderBrush" TargetName="PART_Border" Value="{Binding Path=(dxb:BarManagerHelper.Popup).(dxi:AppearanceOptions.BorderBrush), RelativeSource={RelativeSource Self}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxb:BarManagerHelper.Popup).(dxi:AppearanceOptions.HasBorderThickness), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="BorderThickness" TargetName="PART_Border" Value="{Binding Path=(dxb:BarManagerHelper.Popup).(dxi:AppearanceOptions.BorderThickness), RelativeSource={RelativeSource Self}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxb:BarManagerHelper.Popup).(dxi:AppearanceOptions.HasCornerRadius), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="CornerRadius" TargetName="PART_Border" Value="{Binding Path=(dxb:BarManagerHelper.Popup).(dxi:AppearanceOptions.CornerRadius), RelativeSource={RelativeSource Self}}" />
                <Setter Property="CornerRadius" TargetName="PART_Shadowborder" Value="{Binding Path=(dxb:BarManagerHelper.Popup).(dxi:AppearanceOptions.CornerRadius), RelativeSource={RelativeSource Self}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxb:BarManagerHelper.Popup).(dxi:AppearanceOptions.HasPadding), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Margin" TargetName="PART_ContentPresenter" Value="{Binding Path=(dxb:BarManagerHelper.Popup).(dxi:AppearanceOptions.Padding), RelativeSource={RelativeSource Self}}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:LWKey FloatingContainer.FloatingContainerCloseButtonBackgroundPressedState}">
        <dx:DXBorder x:Name="CloseButtonPressedState" Background="{StaticResource Brush.Window.CloseButton.SelectionBackground}" />
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=ActualRoundCorners, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dx:ThemedWindow}}, FallbackValue=False}" Value="true">
                <Setter Property="CornerRadius" TargetName="CloseButtonPressedState" Value="0,7,0,0" />
            </DataTrigger>
            <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}" Value="Maximized">
                <Setter Property="CornerRadius" TargetName="CloseButtonPressedState" Value="0,0,0,0" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:LWKey FloatingContainer.FloatingContainerCloseButtonBackgroundMouseOverState}">
        <dx:DXBorder x:Name="CloseButtonMouseOverState" Background="{StaticResource Brush.Window.CloseButton.HoverBackground}" />
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=ActualRoundCorners, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dx:ThemedWindow}}, FallbackValue=False}" Value="true">
                <Setter Property="CornerRadius" TargetName="CloseButtonMouseOverState" Value="0,7,0,0" />
            </DataTrigger>
            <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}" Value="Maximized">
                <Setter Property="CornerRadius" TargetName="CloseButtonMouseOverState" Value="0,0,0,0" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>