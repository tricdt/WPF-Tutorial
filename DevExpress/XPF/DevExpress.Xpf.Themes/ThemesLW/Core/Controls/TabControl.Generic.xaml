<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:dx="clr-namespace:DevExpress.Xpf.Core;assembly=DevExpress.Xpf.Core.v24.1"
    xmlns:dxb="clr-namespace:DevExpress.Xpf.Bars;assembly=DevExpress.Xpf.Core.v24.1"
    xmlns:dxi="clr-namespace:DevExpress.Xpf.Core.Native;assembly=DevExpress.Xpf.Core.v24.1"
    xmlns:dxmvvm="clr-namespace:DevExpress.Mvvm.UI;assembly=DevExpress.Xpf.Core.v24.1"
    xmlns:dxmvvmi="clr-namespace:DevExpress.Mvvm.UI.Interactivity;assembly=DevExpress.Xpf.Core.v24.1"
    xmlns:dxt="clr-namespace:DevExpress.Xpf.Utils.Themes;assembly=DevExpress.Xpf.Core.v24.1"
    xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal">


    <Duration x:Key="ScrollAnimationDuration">0:0:0.25</Duration>
    <Duration x:Key="MouseOverAnimationDuration">0:0:0.15</Duration>
    <sys:Int32 x:Key="ScrollButtonInterval">100</sys:Int32>
    <dxi:DXTabControlHeaderMenuTemplateSelector x:Key="headerMenuSelector" />
    <dxmvvm:ObjectToObjectConverter x:Key="HideButtonShowModeToVisibilityConverter" DefaultTarget="Collapsed">
        <dxmvvm:MapItem Source="InHeaderArea" Target="Visible" />
        <dxmvvm:MapItem Source="InAllTabsAndHeaderArea" Target="Visible" />
        <dxmvvm:MapItem Source="InActiveTabAndHeaderArea" Target="Visible" />
    </dxmvvm:ObjectToObjectConverter>
    <dxmvvm:ObjectToObjectConverter x:Key="HeaderLocationIsRightOrBottom" DefaultTarget="False">
        <dxmvvm:MapItem Source="Right" Target="True" />
        <dxmvvm:MapItem Source="Bottom" Target="True" />
    </dxmvvm:ObjectToObjectConverter>


    <!--#region TabControl\Themes\Generic.Window.xaml-->
    <Style x:Key="DefaultButtonContainerStyle" TargetType="ItemsControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ItemsControl">
                    <ItemsPresenter VerticalAlignment="Stretch" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <DockPanel LastChildFill="False" />
                    <!--<StackPanel Orientation="Horizontal" VerticalAlignment="Center"/>-->
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="WindowButtonDefaultStyle" TargetType="ButtonBase">
        <Setter Property="Width" Value="22" />
        <Setter Property="Height" Value="22" />
        <Setter Property="Focusable" Value="False" />
    </Style>
    <ControlTemplate x:Key="DXWindowEmptyTemplate" TargetType="{x:Type dx:DXWindow}">
        <Grid x:Name="Root_Grid">
            <dx:DXBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                <AdornerDecorator x:Name="PART_WindowAdornerDecorator" ClipToBounds="True">
                    <ContentPresenter x:Name="PART_RootContentPresenter" ContentTemplate="{TemplateBinding ActualWindowTemplate}">
                        <ContentPresenter.Content>
                            <dx:DXBorder />
                        </ContentPresenter.Content>
                    </ContentPresenter>
                </AdornerDecorator>
            </dx:DXBorder>
        </Grid>
    </ControlTemplate>
    <DataTemplate x:Key="emptyWindowTemplate" />



    <Style x:Key="AeroButtonContainerStyle" BasedOn="{StaticResource DefaultButtonContainerStyle}" TargetType="ItemsControl">
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Width" Value="{Binding Path=(dx:DXWindow.AeroControlBoxWidth), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dx:DXWindow}}" />
        <Setter Property="Height" Value="{Binding Path=(dx:DXWindow.AeroControlBoxHeight), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dx:DXWindow}}" />
        <Setter Property="Margin" Value="{Binding Path=(dx:DXWindow.AeroControlBoxMargin), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dx:DXWindow}}" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ButtonBase">
                    <Setter Property="Width" Value="0" />
                    <Setter Property="Height" Value="0" />
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="DXTabbedWindowTemplate" TargetType="{x:Type dx:DXTabbedWindow}">
        <Grid x:Name="Root_Grid" UseLayoutRounding="True">
            <dx:DXBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                <AdornerDecorator x:Name="PART_WindowAdornerDecorator" ClipToBounds="True">
                    <Grid x:Name="PART_RootContentPresenter">
                        <ContentPresenter x:Name="FloatingContainerBorder" ContentTemplate="{DynamicResource {dxt:LWKey DXTabbedWindow.BorderTemplate}}" />
                        <Grid x:Name="MainContainer" Style="{DynamicResource {dxt:LWKey DXTabbedWindow.MainContainerStyle}}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto">
                                    <RowDefinition.MinHeight>
                                        <MultiBinding>
                                            <MultiBinding.Converter>
                                                <dxi:DXTabbedWindowHeaderSizeConverter />
                                            </MultiBinding.Converter>
                                            <Binding Path="TabHeaderSize" RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Path="HeaderIndentInNormalState" RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Path="HeaderIndentInMaximizedState" RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Path="WindowState" RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Path="TabbedWindowMode" RelativeSource="{RelativeSource TemplatedParent}" />
                                        </MultiBinding>
                                    </RowDefinition.MinHeight>
                                </RowDefinition>
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <ContentPresenter x:Name="Header" Grid.RowSpan="2" ContentTemplate="{DynamicResource {dxt:LWKey DXTabbedWindow.HeaderTemplate}}" />

                            <Thumb x:Name="PART_DragWidget" Grid.RowSpan="2" Template="{DynamicResource {dxt:LWKey FloatingContainer.FloatingContainerDragWidgetTemplate}}" />

                            <dx:DXWindowHeader x:Name="PART_Header" Panel.ZIndex="100" IsAeroModeEnabled="False">
                                <DockPanel LastChildFill="True">
                                    <Decorator DockPanel.Dock="Right">
                                        <dxmvvmi:Interaction.Behaviors>
                                            <dxmvvm:DependencyPropertyBehavior Binding="{Binding RelativeSource={RelativeSource AncestorType=dx:DXTabbedWindow}, Path=ButtonContainerActualWidth, Mode=OneWayToSource}" EventName="SizeChanged" PropertyName="ActualWidth" />
                                        </dxmvvmi:Interaction.Behaviors>
                                        <ItemsControl
                                            x:Name="ButtonContainer"
                                            dx:HeaderItemControl.CloseTemplateProvider="{DynamicResource {dxt:LWKey DXWindow.HeaderItemControlCloseTemplateProvider}}"
                                            dx:HeaderItemControl.CommonTemplateProvider="{DynamicResource {dxt:LWKey DXWindow.HeaderItemControlCommonTemplateProvider}}"
                                            Style="{DynamicResource {dxt:LWKey DXTabbedWindow.ButtonContainerStyle}}"
                                            UseLayoutRounding="True">

                                            <dx:ThemedWindowHeaderItemsControl x:Name="PART_HeaderCustomItems" Style="{DynamicResource {dxt:LWKey DXTabbedWindow.ControlContainerStyle}}" />

                                            <dx:HeaderItemControl x:Name="PART_Minimize" Style="{DynamicResource {dxt:LWKey FloatingContainer.FloatingContainerHeaderButtonStyle}}" />
                                            <dx:HeaderItemControl x:Name="PART_Restore" Style="{DynamicResource {dxt:LWKey FloatingContainer.FloatingContainerHeaderButtonStyle}}" Visibility="{Binding Path=(dx:FloatingContainer.IsMaximized), Converter={dx:BooleanToVisibilityConverter Invert=False}, RelativeSource={RelativeSource Self}}" />
                                            <dx:HeaderItemControl x:Name="PART_Maximize" Style="{DynamicResource {dxt:LWKey FloatingContainer.FloatingContainerHeaderButtonStyle}}" Visibility="{Binding Path=(dx:FloatingContainer.IsMaximized), Converter={dx:BooleanToVisibilityConverter Invert=True}, RelativeSource={RelativeSource Self}}" />
                                            <dx:HeaderItemControl x:Name="PART_CloseButton" Style="{DynamicResource {dxt:LWKey FloatingContainer.FloatingContainerHeaderCloseButtonStyle}}" />
                                        </ItemsControl>
                                    </Decorator>
                                    <dxi:DXTabbedWindowHeaderDecorator x:Name="HeaderPresented" TabbedWindowMode="{TemplateBinding TabbedWindowMode}">
                                        <dxmvvmi:Interaction.Behaviors>
                                            <dxmvvm:DependencyPropertyBehavior Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CaptionActualWidth, Mode=OneWayToSource}" EventName="SizeChanged" PropertyName="ActualWidth" />
                                        </dxmvvmi:Interaction.Behaviors>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Image
                                                x:Name="PART_Icon"
                                                Grid.Column="0"
                                                Source="{Binding Path=(dx:FloatingContainer.FloatingContainer).Icon, RelativeSource={RelativeSource AncestorType=ContentPresenter}}"
                                                Style="{DynamicResource {dxt:LWKey FloatingContainer.DXWindowIconStyle}}" />
                                            <ContentPresenter
                                                x:Name="PART_CaptionContentPresenter"
                                                Grid.Column="1"
                                                ContentTemplate="{DynamicResource {dxt:LWKey FloatingContainer.FloatingContainerCaptionTemplate}}"
                                                Style="{DynamicResource {dxt:LWKey DXTabbedWindow.CaptionPresenterStyle}}" />
                                        </Grid>
                                    </dxi:DXTabbedWindowHeaderDecorator>
                                </DockPanel>
                            </dx:DXWindowHeader>
                            <Decorator x:Name="FloatingContainerBodyContainer" Grid.Row="1" Grid.RowSpan="2">
                                <Decorator.Margin>
                                    <MultiBinding>
                                        <MultiBinding.Converter>
                                            <dxi:DXTabbedWindowMarginConverter />
                                        </MultiBinding.Converter>
                                        <Binding Path="TabHeaderSize" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="TabbedWindowMode" RelativeSource="{RelativeSource TemplatedParent}" />
                                    </MultiBinding>
                                </Decorator.Margin>
                                <dx:DXBorder x:Name="FloatingContainerBody" Style="{DynamicResource {dxt:LWKey DXTabbedWindow.ContentBorderStyle}}">
                                    <Grid>
                                        <ContentPresenter
                                            x:Name="PART_ContainerContent"
                                            Content="{TemplateBinding Content}"
                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                            DataContext="{TemplateBinding DataContext}"
                                            UseLayoutRounding="{TemplateBinding UseLayoutRounding}" />
                                        <Grid
                                            x:Name="PART_StatusPanel"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Bottom"
                                            Visibility="Collapsed">
                                            <Thumb
                                                x:Name="PART_SizeGrip"
                                                Width="16"
                                                Height="16"
                                                Cursor="SizeNWSE"
                                                Template="{DynamicResource {dxt:LWKey FloatingContainer.FloatingContainerSizeGripTemplate}}" />
                                        </Grid>
                                    </Grid>
                                </dx:DXBorder>
                            </Decorator>
                        </Grid>
                        <Control
                            x:Name="PART_ResizeFrame"
                            Focusable="False"
                            Template="{DynamicResource {dxt:LWKey FloatingContainer.FloatingContainerResizeFrame}}"
                            Visibility="{Binding Path=(dx:FloatingContainer.IsMaximized), RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanToVisibilityConverter Inverse=True}}" />
                    </Grid>
                </AdornerDecorator>
            </dx:DXBorder>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsAeroMode" Value="True">
                <Setter TargetName="FloatingContainerBorder" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="Header" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_Header" Property="IsAeroModeEnabled" Value="True" />
                <Setter TargetName="ButtonContainer" Property="Style" Value="{StaticResource AeroButtonContainerStyle}" />
            </Trigger>
            <Trigger Property="TabbedWindowMode" Value="Compact">
                <Setter TargetName="Header" Property="Grid.Row" Value="1" />
                <Setter TargetName="Header" Property="Grid.RowSpan" Value="1" />
                <Setter TargetName="PART_DragWidget" Property="Grid.Row" Value="1" />
                <Setter TargetName="PART_DragWidget" Property="Grid.RowSpan" Value="1" />
                <Setter TargetName="PART_Header" Property="Grid.Row" Value="1" />
                <Setter TargetName="FloatingContainerBodyContainer" Property="Grid.Row" Value="2" />
                <Setter TargetName="FloatingContainerBodyContainer" Property="Grid.RowSpan" Value="1" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=(dx:FloatingContainer.FloatingContainer).AllowSizing, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter TargetName="PART_ResizeFrame" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_StatusPanel" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="WindowDefaultStyle" TargetType="{x:Type dx:DXTabbedWindow}">
        <Setter Property="ResizeMode" Value="CanResize" />
        <Setter Property="ResizeBorderThicknessInAeroMode" Value="{DynamicResource {dxt:LWKey DXWindow.AeroWindowResizeBorderThickness}}" />
        <Setter Property="ResizeBorderThickness" Value="{DynamicResource {dxt:LWKey DXWindow.ResizeBorderThickness}}" />
        <Setter Property="BorderEffectOffset" Value="{DynamicResource {dxt:LWKey DXWindow.BorderEffectOffset}}" />
        <Setter Property="BorderEffectActiveColor" Value="{DynamicResource {dxt:LWKey DXWindow.BorderEffectActiveColor}}" />
        <Setter Property="BorderEffectInactiveColor" Value="{DynamicResource {dxt:LWKey DXWindow.BorderEffectInactiveColor}}" />
        <Setter Property="BorderEffectLeftMargins" Value="{DynamicResource {dxt:LWKey DXWindow.BorderEffectLeftMargins}}" />
        <Setter Property="BorderEffectRightMargins" Value="{DynamicResource {dxt:LWKey DXWindow.BorderEffectRightMargins}}" />
        <Setter Property="BorderEffectTopMargins" Value="{DynamicResource {dxt:LWKey DXWindow.BorderEffectTopMargins}}" />
        <Setter Property="BorderEffectBottomMargins" Value="{DynamicResource {dxt:LWKey DXWindow.BorderEffectBottomMargins}}" />
        <Setter Property="AeroBorderSize" Value="{DynamicResource {dxt:LWKey DXWindow.AeroWindowBorderSize}}" />
        <Setter Property="AeroWindowTemplate" Value="{StaticResource emptyWindowTemplate}" />
        <Setter Property="WindowTemplate" Value="{StaticResource emptyWindowTemplate}" />
        <Setter Property="Template" Value="{StaticResource DXTabbedWindowTemplate}" />
        <Setter Property="HeaderIndentInNormalState" Value="14" />
        <Setter Property="HeaderIndentInMaximizedState" Value="4" />
        <Style.Triggers>
            <Trigger Property="HasContent" Value="False">
                <Setter Property="Template" Value="{StaticResource DXWindowEmptyTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DXTabbedWindow.DefaultStyle" TargetType="{x:Type dx:DXTabbedWindow}" BasedOn="{StaticResource WindowDefaultStyle}">
        <Setter Property="Foreground" Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
    </Style>
    <!--#endregion TabControl\Themes\Generic.Window.xaml-->

    <!--#region TabControl\Themes\Generic.xaml-->
    <Style x:Key="PanelContainerDefaultStyle" TargetType="{x:Type dxi:TabPanelContainer}">
        <Setter Property="NormalMargin" Value="4,0,3,-1" />
        <Setter Property="NormalPadding" Value="0,2,0,1" />
        <Setter Property="HoldMargin" Value="0,0,-1,0" />
        <Setter Property="HoldPadding" Value="0,0,0,0" />
    </Style>
    <Style x:Key="TabControlGlyphDefaultStyle" TargetType="{x:Type dxi:GlyphControl}">
        <Setter Property="GlyphLeftTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="dxi:GlyphControl">
                    <Path
                        x:Name="PART_Path"
                        Width="5"
                        Height="9"
                        Margin="{TemplateBinding Padding}"
                        Data="F1 M 4,0L 5,0L 5,9L 4,9L 4,8L 3,8L 3,7L 2,7L 2,6L 1,6L 1,5L 0,5L 0,4L 1,4L 1,3L 2,3L 2,2L 3,2L 3,1L 4,1L 4,0 Z "
                        Fill="{TemplateBinding Background}"
                        Stretch="Fill" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="GlyphRightTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="dxi:GlyphControl">
                    <Path
                        x:Name="PART_Path"
                        Width="5"
                        Height="9"
                        Margin="{TemplateBinding Padding}"
                        Data="F1 M 0,0L 1,0L 1,1L 2,1L 2,2L 3,2L 3,3L 4,3L 4,4L 5,4L 5,5L 4,5L 4,6L 3,6L 3,7L 2,7L 2,8L 1,8L 1,9L 0,9L 0,0 Z "
                        Fill="{TemplateBinding Background}"
                        Stretch="Fill" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="GlyphUpTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="dxi:GlyphControl">
                    <Path
                        x:Name="PART_Path"
                        Width="9"
                        Height="5"
                        Margin="{TemplateBinding Padding}"
                        Data="F1 M 1.52588e-005,7.00006L 11,7.00006L 5.99998,0L 4.99998,0L 1.52588e-005,7.00006 Z "
                        Fill="{TemplateBinding Background}"
                        Stretch="Fill" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="GlyphDownTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="dxi:GlyphControl">
                    <Path
                        x:Name="PART_Path"
                        Width="9"
                        Height="5"
                        Margin="{TemplateBinding Padding}"
                        Data="F1 M 0,0L 11,0L 5.99995,7L 4.99995,7L 0,0 Z "
                        Fill="{TemplateBinding Background}"
                        Stretch="Fill" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="GlyphPlusTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="dxi:GlyphControl">
                    <Path
                        x:Name="PART_Path"
                        Width="9"
                        Height="9"
                        Margin="{TemplateBinding Padding}"
                        Data="F1 M 1,4L 4,4L 4,1L 5,1L 5,4L 8,4L 8,5L 5,5L 5,8L 4,8L 4,5L 1,5L 1,4 Z "
                        Fill="{TemplateBinding Background}"
                        Stretch="Fill" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="GlyphCloseTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="dxi:GlyphControl">
                    <Path
                        x:Name="PART_Path"
                        Width="7"
                        Height="7"
                        Margin="{TemplateBinding Padding}"
                        Data="F1 M 385,283L 386,283L 388,285L 390,283L 391,283L 391,284L 389,286L 391,288L 391,289L 390,289L 388,287L 386,289L 385,289L 385,288L 387,286L 385,284L 385,283 Z "
                        Fill="{TemplateBinding Background}"
                        Stretch="Fill" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="TabItemDefaultGlyphTemplate">
        <Image
            x:Name="icon"
            Margin="0,0,4,0"
            Source="{Binding}"
            Stretch="None" />
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding}" Value="{x:Null}">
                <Setter TargetName="icon" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <Style x:Key="ButtonDefaultStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="Padding" Value="0" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxi:GlyphControl Background="{Binding (TextBlock.Foreground), RelativeSource={RelativeSource Self}}" GlyphViewInfo="{Binding}" Style="{StaticResource TabControlGlyphDefaultStyle}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="normal" Margin="{TemplateBinding Padding}" ContentTemplate="{DynamicResource {dxt:LWKey DXTabControl.ButtonNormalBackground}}" />
                        <ContentPresenter
                            x:Name="hover"
                            Margin="{TemplateBinding Padding}"
                            ContentTemplate="{DynamicResource {dxt:LWKey DXTabControl.ButtonHoverBackground}}"
                            Opacity="0" />
                        <ContentPresenter
                            x:Name="pressed"
                            Margin="{TemplateBinding Padding}"
                            ContentTemplate="{DynamicResource {dxt:LWKey DXTabControl.ButtonPressedBackground}}"
                            Opacity="0" />
                        <ContentPresenter
                            x:Name="content"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            TextBlock.Foreground="{TemplateBinding Foreground}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="hover" Storyboard.TargetProperty="Opacity" To="0" Duration="{StaticResource MouseOverAnimationDuration}" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="hover" Storyboard.TargetProperty="Opacity" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="pressed" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="pressed" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="content" Storyboard.TargetProperty="Opacity" To="0.35" Duration="0:0:0.0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <dxi:TabPanelSelector x:Key="TabPanelSelector">
        <dxi:TabPanelSelector.MultiLineView>
            <ItemsPanelTemplate>
                <dxi:TabPanelMultiLineView
                    HeaderLocation="{Binding Tag.HeaderLocation, RelativeSource={RelativeSource Self}}"
                    IsHoldMode="{Binding Tag.FixedHeaders, RelativeSource={RelativeSource Self}}"
                    IsStretchedHorizontally="{Binding Tag.HeaderAutoFill, RelativeSource={RelativeSource Self}}"
                    IsStretchedVertically="False"
                    SelectedIndex="{Binding SelectedIndex, RelativeSource={RelativeSource AncestorType=dx:DXTabControl}}"
                    Tag="{Binding Path=Tag.MultiLineView, RelativeSource={RelativeSource TemplatedParent}}" />
            </ItemsPanelTemplate>
        </dxi:TabPanelSelector.MultiLineView>
        <dxi:TabPanelSelector.ScrollView>
            <ItemsPanelTemplate>
                <dxi:TabPanelScrollView
                    AllowAnimation="{Binding Tag.AllowAnimation, RelativeSource={RelativeSource Self}}"
                    HeaderLocation="{Binding Tag.HeaderLocation, RelativeSource={RelativeSource Self}}"
                    IsStretchedHorizontally="{Binding Tag.HeaderAutoFill, RelativeSource={RelativeSource Self}}"
                    SelectedIndex="{Binding SelectedIndex, RelativeSource={RelativeSource AncestorType=dx:DXTabControl}}"
                    Tag="{Binding Path=Tag.ScrollView, RelativeSource={RelativeSource TemplatedParent}}">
                    <dxi:TabPanelScrollView.ScrollAnimation>
                        <DoubleAnimation Duration="{StaticResource ScrollAnimationDuration}" />
                    </dxi:TabPanelScrollView.ScrollAnimation>
                </dxi:TabPanelScrollView>
            </ItemsPanelTemplate>
        </dxi:TabPanelSelector.ScrollView>
        <dxi:TabPanelSelector.StretchView>
            <ItemsPanelTemplate>
                <dxi:TabPanelStretchView
                    ActiveChildMinSize="{Binding Tag.SelectedTabMinSize, RelativeSource={RelativeSource Self}}"
                    DragDropMode="{Binding Tag.DragDropMode, RelativeSource={RelativeSource Self}}"
                    HeaderLocation="{Binding Tag.HeaderLocation, RelativeSource={RelativeSource Self}}"
                    NormalChildMinSize="{Binding Tag.TabMinSize, RelativeSource={RelativeSource Self}}"
                    NormalChildSize="{Binding Tag.TabNormalSize, RelativeSource={RelativeSource Self}}"
                    Owner="{Binding Tag, RelativeSource={RelativeSource Self}}"
                    PinChildLeftSize="{Binding Tag.PinnedTabSize, RelativeSource={RelativeSource Self}}"
                    PinChildRightSize="{Binding Tag.PinnedTabSize, RelativeSource={RelativeSource Self}}"
                    SelectedIndex="{Binding SelectedIndex, RelativeSource={RelativeSource AncestorType=dx:DXTabControl}}"
                    Tag="{Binding Path=Tag.StretchView, RelativeSource={RelativeSource TemplatedParent}}" />
            </ItemsPanelTemplate>
        </dxi:TabPanelSelector.StretchView>
    </dxi:TabPanelSelector>

    <ControlTemplate x:Key="TabControlDefaultTemplate" TargetType="{x:Type dx:DXTabControl}">
        <dxi:TabLayoutPanel KeyboardNavigation.TabNavigation="Local" UseLayoutRounding="True" ViewInfo="{TemplateBinding ViewInfo}">
            <dxi:TabLayoutPanel.LayoutDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </dxi:TabLayoutPanel.LayoutDefinitions>
            <dxi:TabOrientablePanel
                x:Name="PART_HeaderContainer"
                Panel.ZIndex="1"
                dxi:TabLayoutPanel.LayoutPosition="0"
                Indent="{TemplateBinding PanelIndent}"
                ViewInfo="{TemplateBinding ViewInfo}">
                <dxmvvmi:Interaction.Behaviors>
                    <dxmvvm:EventToCommand Command="{Binding View.ScrollView.ScrollToSelectedCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="False" EventName="SizeChanged" />
                </dxmvvmi:Interaction.Behaviors>
                <dxi:TabOrientablePanel.HorizontalLayout>
                    <dxi:OrientableLayout>
                        <dxi:OrientableLayout.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </dxi:OrientableLayout.ColumnDefinitions>
                    </dxi:OrientableLayout>
                </dxi:TabOrientablePanel.HorizontalLayout>
                <dxi:TabOrientablePanel.VerticalLayout>
                    <dxi:OrientableLayout>
                        <dxi:OrientableLayout.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </dxi:OrientableLayout.RowDefinitions>
                    </dxi:OrientableLayout>
                </dxi:TabOrientablePanel.VerticalLayout>
                <ContentPresenter
                    x:Name="PART_ControlBoxLeft"
                    dxi:TabOrientablePanel.HColumn="0"
                    dxi:TabOrientablePanel.VRow="7"
                    Content="{TemplateBinding ControlBoxLeft}" />
                <dxi:TabPanelContainer
                    x:Name="PART_TabPanelContainer"
                    dxi:TabOrientablePanel.HColumn="1"
                    dxi:TabOrientablePanel.VRow="6"
                    ClipToBounds="True"
                    Style="{DynamicResource {dxt:LWKey DXTabControl.PanelContainerStyle}}"
                    ViewInfo="{TemplateBinding ViewInfo}">
                    <dxmvvmi:Interaction.Behaviors>
                        <!--<dxmvvm:EventToCommand EventName="SizeChanged" Command="{Binding View.ScrollView.ScrollToSelectedCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="False"/>-->
                        <dxmvvm:EventToCommand Command="{Binding View.ScrollView.UpdateScrollButtonsCommand, RelativeSource={RelativeSource TemplatedParent}}" EventName="LayoutUpdated" />
                        <dxmvvm:EventToCommand Command="{Binding View.ScrollView.ScrollOnMouseWheelCommand, RelativeSource={RelativeSource TemplatedParent}}" EventName="MouseWheel" PassEventArgsToCommand="True" />
                    </dxmvvmi:Interaction.Behaviors>
                    <ItemsPresenter
                        KeyboardNavigation.DirectionalNavigation="Cycle"
                        KeyboardNavigation.TabIndex="1"
                        KeyboardNavigation.TabNavigation="Once"
                        Tag="{TemplateBinding View}" />
                    <dxi:TabPanelContainer.ControlBox>
                        <StackPanel Orientation="{Binding Path=ViewInfo.Orientation, RelativeSource={RelativeSource TemplatedParent}}">
                            <Button
                                x:Name="PART_PanelNewButton"
                                dxi:GlyphControl.GlyphControlMode="Plus"
                                Command="{Binding View.ActualNewTabCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{DynamicResource {dxt:LWKey DXTabControl.PanelNewButtonStyle}}"
                                Visibility="{Binding View.PanelNewButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}" />
                            <ContentPresenter x:Name="PART_ControlBoxPanel" Content="{TemplateBinding ControlBoxPanel}" />
                        </StackPanel>
                    </dxi:TabPanelContainer.ControlBox>
                </dxi:TabPanelContainer>
                <ContentPresenter
                    x:Name="PART_ControlBoxRight"
                    dxi:TabOrientablePanel.HColumn="2"
                    dxi:TabOrientablePanel.VRow="5"
                    Content="{TemplateBinding ControlBoxRight}" />
                <RepeatButton
                    x:Name="PART_PrevButton"
                    dxi:GlyphControl.GlyphControlMode="Left"
                    dxi:TabOrientablePanel.HColumn="3"
                    dxi:TabOrientablePanel.VRow="3"
                    Command="{Binding View.ScrollView.ScrollPrevCommand, RelativeSource={RelativeSource TemplatedParent}}"
                    Interval="{StaticResource ScrollButtonInterval}"
                    Style="{DynamicResource {dxt:LWKey DXTabControl.PrevButtonStyle}}"
                    Visibility="{Binding View.ScrollView.IsScrollPrevButtonVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanToVisibilityConverter}, FallbackValue=Collapsed}" />
                <RepeatButton
                    x:Name="PART_NextButton"
                    dxi:GlyphControl.GlyphControlMode="Right"
                    dxi:TabOrientablePanel.HColumn="4"
                    dxi:TabOrientablePanel.VRow="4"
                    Command="{Binding View.ScrollView.ScrollNextCommand, RelativeSource={RelativeSource TemplatedParent}}"
                    Interval="{StaticResource ScrollButtonInterval}"
                    Style="{DynamicResource {dxt:LWKey DXTabControl.NextButtonStyle}}"
                    Visibility="{Binding View.ScrollView.IsScrollNextButtonVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanToVisibilityConverter}, FallbackValue=Collapsed}" />
                <Grid dxi:TabOrientablePanel.HColumn="5" dxi:TabOrientablePanel.VRow="2" Visibility="{Binding View.ShowHeaderMenu, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanToVisibilityConverter}}">
                    <ToggleButton
                        x:Name="PART_HeaderMenu"
                        dxi:GlyphControl.GlyphControlMode="Down"
                        IsChecked="{Binding MenuInfo.IsMenuOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                        IsHitTestVisible="{Binding IsOpen, ElementName=PART_HeaderMenuPopup, Converter={dxmvvm:BooleanNegationConverter}}"
                        Style="{DynamicResource {dxt:LWKey DXTabControl.MenuButtonStyle}}" />
                    <dxb:PopupMenu
                        x:Name="PART_HeaderMenuPopup"
                        IsOpen="{Binding Path=IsChecked, ElementName=PART_HeaderMenu}"
                        Placement="Right"
                        PlacementTarget="{Binding ElementName=PART_HeaderMenu}">
                        <dxb:BarLinkContainerItem
                            x:Name="PART_HeaderMenuPopupItemsContainer"
                            IsPrivate="True"
                            ItemLinksSource="{Binding MenuInfo.Items, RelativeSource={RelativeSource TemplatedParent}}"
                            ItemTemplateSelector="{StaticResource headerMenuSelector}" />
                    </dxb:PopupMenu>
                </Grid>
                <Button
                    x:Name="PART_CloseButton"
                    dxi:GlyphControl.GlyphControlMode="Close"
                    dxi:TabOrientablePanel.HColumn="6"
                    dxi:TabOrientablePanel.VRow="1"
                    Command="{Binding View.CloseTabCommand, RelativeSource={RelativeSource TemplatedParent}}"
                    Style="{DynamicResource {dxt:LWKey DXTabControl.CloseButtonStyle}}"
                    Visibility="{Binding View.HideButtonShowMode, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource HideButtonShowModeToVisibilityConverter}}" />
                <Button
                    x:Name="PART_MainNewButton"
                    dxi:GlyphControl.GlyphControlMode="Plus"
                    dxi:TabOrientablePanel.HColumn="7"
                    dxi:TabOrientablePanel.VRow="0"
                    Command="{Binding View.ActualNewTabCommand, RelativeSource={RelativeSource TemplatedParent}}"
                    Style="{DynamicResource {dxt:LWKey DXTabControl.MainNewButtonStyle}}"
                    Visibility="{Binding View.MainNewButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}" />
            </dxi:TabOrientablePanel>
            <Grid Name="PART_ContentContainer" dxi:TabLayoutPanel.LayoutPosition="1">
                <ContentPresenter Content="{TemplateBinding ViewInfo}" ContentTemplate="{TemplateBinding BackgroundTemplate}" />
                <dx:DXBorder Padding="1">
                    <Grid
                        Name="PART_ContentHost"
                        Grid.Row="1"
                        Margin="{TemplateBinding Padding}"
                        IsEnabled="{TemplateBinding SelectedItemIsEnabled}"
                        Style="{DynamicResource {dxt:LWKey DXTabControl.ContentStyle}}"
                        UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ContentPresenter x:Name="PART_ContentHeader" Grid.Row="0" Content="{TemplateBinding ContentHeader}" />
                        <ContentPresenter x:Name="PART_ContentFooter" Grid.Row="2" Content="{TemplateBinding ContentFooter}" />
                        <Grid Name="PART_ContentHostPresenter" Grid.Row="1">
                            <dxi:TabControlContentPresenter
                                x:Name="PART_SelectedContentHost"
                                ActualHorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                ActualVerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding SelectedItemContent}"
                                ContentStringFormat="{TemplateBinding SelectedItemContentStringFormat}"
                                ContentTemplate="{TemplateBinding SelectedItemContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding SelectedItemContentTemplateSelector}"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Local"
                                TextBlock.Foreground="{TemplateBinding Foreground}" />
                            <dxi:FastRenderPanel
                                x:Name="PART_FastRenderPanel"
                                ContentCacheMode="{TemplateBinding TabContentCacheMode}"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Local"
                                TextBlock.Foreground="{TemplateBinding Foreground}" />
                        </Grid>
                    </Grid>
                </dx:DXBorder>
            </Grid>
        </dxi:TabLayoutPanel>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding ViewInfo.HeaderLocation, RelativeSource={RelativeSource Self}}" Value="None">
                <Setter TargetName="PART_HeaderContainer" Property="Height" Value="0" />
                <Setter TargetName="PART_HeaderContainer" Property="Width" Value="0" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ViewInfo.Orientation, RelativeSource={RelativeSource Self}}" Value="Vertical">
                <Setter TargetName="PART_PrevButton" Property="dxi:GlyphControl.GlyphControlMode" Value="Up" />
                <Setter TargetName="PART_NextButton" Property="dxi:GlyphControl.GlyphControlMode" Value="Down" />
                <Setter TargetName="PART_HeaderMenu" Property="dxi:GlyphControl.GlyphControlMode" Value="Right" />
            </DataTrigger>
            <DataTrigger Binding="{Binding MenuInfo.HasItems, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter TargetName="PART_HeaderMenu" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="TabControlDefaultTemplate.ContentHost" TargetType="{x:Type dx:DXTabControl}">
        <dxi:TabLayoutPanel KeyboardNavigation.TabNavigation="Local" UseLayoutRounding="True" ViewInfo="{TemplateBinding ViewInfo}">
            <dxi:TabLayoutPanel.LayoutDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </dxi:TabLayoutPanel.LayoutDefinitions>
            <dxi:TabOrientablePanel
                x:Name="PART_HeaderContainer"
                Panel.ZIndex="1"
                dxi:TabLayoutPanel.LayoutPosition="0"
                Indent="{TemplateBinding PanelIndent}"
                ViewInfo="{TemplateBinding ViewInfo}">
                <dxmvvmi:Interaction.Behaviors>
                    <dxmvvm:EventToCommand Command="{Binding View.ScrollView.ScrollToSelectedCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="False" EventName="SizeChanged" />
                </dxmvvmi:Interaction.Behaviors>
                <dxi:TabOrientablePanel.HorizontalLayout>
                    <dxi:OrientableLayout>
                        <dxi:OrientableLayout.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </dxi:OrientableLayout.ColumnDefinitions>
                    </dxi:OrientableLayout>
                </dxi:TabOrientablePanel.HorizontalLayout>
                <dxi:TabOrientablePanel.VerticalLayout>
                    <dxi:OrientableLayout>
                        <dxi:OrientableLayout.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </dxi:OrientableLayout.RowDefinitions>
                    </dxi:OrientableLayout>
                </dxi:TabOrientablePanel.VerticalLayout>
                <ContentPresenter
                    x:Name="PART_ControlBoxLeft"
                    dxi:TabOrientablePanel.HColumn="0"
                    dxi:TabOrientablePanel.VRow="7"
                    Content="{TemplateBinding ControlBoxLeft}" />
                <dxi:TabPanelContainer
                    x:Name="PART_TabPanelContainer"
                    dxi:TabOrientablePanel.HColumn="1"
                    dxi:TabOrientablePanel.VRow="6"
                    ClipToBounds="True"
                    Style="{DynamicResource {dxt:LWKey DXTabControl.PanelContainerStyle}}"
                    ViewInfo="{TemplateBinding ViewInfo}">
                    <dxmvvmi:Interaction.Behaviors>
                        <!--<dxmvvm:EventToCommand EventName="SizeChanged" Command="{Binding View.ScrollView.ScrollToSelectedCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="False"/>-->
                        <dxmvvm:EventToCommand Command="{Binding View.ScrollView.UpdateScrollButtonsCommand, RelativeSource={RelativeSource TemplatedParent}}" EventName="LayoutUpdated" />
                        <dxmvvm:EventToCommand Command="{Binding View.ScrollView.ScrollOnMouseWheelCommand, RelativeSource={RelativeSource TemplatedParent}}" EventName="MouseWheel" PassEventArgsToCommand="True" />
                    </dxmvvmi:Interaction.Behaviors>
                    <ItemsPresenter
                        KeyboardNavigation.DirectionalNavigation="Cycle"
                        KeyboardNavigation.TabIndex="1"
                        KeyboardNavigation.TabNavigation="Once"
                        Tag="{TemplateBinding View}" />
                    <dxi:TabPanelContainer.ControlBox>
                        <StackPanel Orientation="{Binding Path=ViewInfo.Orientation, RelativeSource={RelativeSource TemplatedParent}}">
                            <Button
                                x:Name="PART_PanelNewButton"
                                dxi:GlyphControl.GlyphControlMode="Plus"
                                Command="{Binding View.ActualNewTabCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{DynamicResource {dxt:LWKey DXTabControl.PanelNewButtonStyle}}"
                                Visibility="{Binding View.PanelNewButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}" />
                            <ContentPresenter x:Name="PART_ControlBoxPanel" Content="{TemplateBinding ControlBoxPanel}" />
                        </StackPanel>
                    </dxi:TabPanelContainer.ControlBox>
                </dxi:TabPanelContainer>
                <ContentPresenter
                    x:Name="PART_ControlBoxRight"
                    dxi:TabOrientablePanel.HColumn="2"
                    dxi:TabOrientablePanel.VRow="5"
                    Content="{TemplateBinding ControlBoxRight}" />
                <RepeatButton
                    x:Name="PART_PrevButton"
                    dxi:GlyphControl.GlyphControlMode="Left"
                    dxi:TabOrientablePanel.HColumn="3"
                    dxi:TabOrientablePanel.VRow="3"
                    Command="{Binding View.ScrollView.ScrollPrevCommand, RelativeSource={RelativeSource TemplatedParent}}"
                    Interval="{StaticResource ScrollButtonInterval}"
                    Style="{DynamicResource {dxt:LWKey DXTabControl.PrevButtonStyle}}"
                    Visibility="{Binding View.ScrollView.IsScrollPrevButtonVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanToVisibilityConverter}, FallbackValue=Collapsed}" />
                <RepeatButton
                    x:Name="PART_NextButton"
                    dxi:GlyphControl.GlyphControlMode="Right"
                    dxi:TabOrientablePanel.HColumn="4"
                    dxi:TabOrientablePanel.VRow="4"
                    Command="{Binding View.ScrollView.ScrollNextCommand, RelativeSource={RelativeSource TemplatedParent}}"
                    Interval="{StaticResource ScrollButtonInterval}"
                    Style="{DynamicResource {dxt:LWKey DXTabControl.NextButtonStyle}}"
                    Visibility="{Binding View.ScrollView.IsScrollNextButtonVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanToVisibilityConverter}, FallbackValue=Collapsed}" />
                <Grid dxi:TabOrientablePanel.HColumn="5" dxi:TabOrientablePanel.VRow="2" Visibility="{Binding View.ShowHeaderMenu, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanToVisibilityConverter}}">
                    <ToggleButton
                        x:Name="PART_HeaderMenu"
                        dxi:GlyphControl.GlyphControlMode="Down"
                        IsChecked="{Binding MenuInfo.IsMenuOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                        IsHitTestVisible="{Binding IsOpen, ElementName=PART_HeaderMenuPopup, Converter={dxmvvm:BooleanNegationConverter}}"
                        Style="{DynamicResource {dxt:LWKey DXTabControl.MenuButtonStyle}}" />
                    <dxb:PopupMenu
                        x:Name="PART_HeaderMenuPopup"
                        IsOpen="{Binding Path=IsChecked, ElementName=PART_HeaderMenu}"
                        Placement="Right"
                        PlacementTarget="{Binding ElementName=PART_HeaderMenu}">
                        <dxb:BarLinkContainerItem
                            x:Name="PART_HeaderMenuPopupItemsContainer"
                            IsPrivate="True"
                            ItemLinksSource="{Binding MenuInfo.Items, RelativeSource={RelativeSource TemplatedParent}}"
                            ItemTemplateSelector="{StaticResource headerMenuSelector}" />
                    </dxb:PopupMenu>
                </Grid>
                <Button
                    x:Name="PART_CloseButton"
                    dxi:GlyphControl.GlyphControlMode="Close"
                    dxi:TabOrientablePanel.HColumn="6"
                    dxi:TabOrientablePanel.VRow="1"
                    Command="{Binding View.CloseTabCommand, RelativeSource={RelativeSource TemplatedParent}}"
                    Style="{DynamicResource {dxt:LWKey DXTabControl.CloseButtonStyle}}"
                    Visibility="{Binding View.HideButtonShowMode, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource HideButtonShowModeToVisibilityConverter}}" />
                <Button
                    x:Name="PART_MainNewButton"
                    dxi:GlyphControl.GlyphControlMode="Plus"
                    dxi:TabOrientablePanel.HColumn="7"
                    dxi:TabOrientablePanel.VRow="0"
                    Command="{Binding View.ActualNewTabCommand, RelativeSource={RelativeSource TemplatedParent}}"
                    Style="{DynamicResource {dxt:LWKey DXTabControl.MainNewButtonStyle}}"
                    Visibility="{Binding View.MainNewButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}" />
            </dxi:TabOrientablePanel>
            <Grid Name="PART_ContentContainer" dxi:TabLayoutPanel.LayoutPosition="1">
                <ContentPresenter Content="{TemplateBinding ViewInfo}" ContentTemplate="{TemplateBinding BackgroundTemplate}" />
                <dx:DXBorder Padding="1">
                    <Grid
                        Name="PART_ContentHost"
                        Grid.Row="1"
                        Margin="{TemplateBinding Padding}"
                        IsEnabled="{TemplateBinding SelectedItemIsEnabled}"
                        UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ContentPresenter x:Name="PART_ContentHeader" Grid.Row="0" Content="{TemplateBinding ContentHeader}" />
                        <ContentPresenter x:Name="PART_ContentFooter" Grid.Row="2" Content="{TemplateBinding ContentFooter}" />
                        <dxi:ContentHostPresenter
                            x:Name="PART_ContentHostPresenter"
                            Grid.Row="1"
                            Content="{TemplateBinding ContentHost}"
                            ContentCacheMode="{TemplateBinding TabContentCacheMode}">
                            <dxi:ContentHostPresenter.RegularContentPresenter>
                                <dxi:TabControlContentPresenter
                                    x:Name="PART_SelectedContentHost"
                                    ActualHorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    ActualVerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding SelectedItemContent}"
                                    ContentStringFormat="{TemplateBinding SelectedItemContentStringFormat}"
                                    ContentTemplate="{TemplateBinding SelectedItemContentTemplate}"
                                    ContentTemplateSelector="{TemplateBinding SelectedItemContentTemplateSelector}"
                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                    KeyboardNavigation.TabIndex="2"
                                    KeyboardNavigation.TabNavigation="Local"
                                    TextBlock.Foreground="{TemplateBinding Foreground}" />
                            </dxi:ContentHostPresenter.RegularContentPresenter>
                            <dxi:ContentHostPresenter.FastContentPresenter>
                                <dxi:FastRenderPanel
                                    x:Name="PART_FastRenderPanel"
                                    ContentCacheMode="{TemplateBinding TabContentCacheMode}"
                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                    KeyboardNavigation.TabIndex="2"
                                    KeyboardNavigation.TabNavigation="Local"
                                    TextBlock.Foreground="{TemplateBinding Foreground}" />
                            </dxi:ContentHostPresenter.FastContentPresenter>
                        </dxi:ContentHostPresenter>
                    </Grid>
                </dx:DXBorder>
            </Grid>
        </dxi:TabLayoutPanel>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding ViewInfo.HeaderLocation, RelativeSource={RelativeSource Self}}" Value="None">
                <Setter TargetName="PART_HeaderContainer" Property="Height" Value="0" />
                <Setter TargetName="PART_HeaderContainer" Property="Width" Value="0" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ViewInfo.Orientation, RelativeSource={RelativeSource Self}}" Value="Vertical">
                <Setter TargetName="PART_PrevButton" Property="dxi:GlyphControl.GlyphControlMode" Value="Up" />
                <Setter TargetName="PART_NextButton" Property="dxi:GlyphControl.GlyphControlMode" Value="Down" />
                <Setter TargetName="PART_HeaderMenu" Property="dxi:GlyphControl.GlyphControlMode" Value="Right" />
            </DataTrigger>
            <DataTrigger Binding="{Binding MenuInfo.HasItems, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter TargetName="PART_HeaderMenu" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="TabItemDefaultTemplate" TargetType="{x:Type dx:DXTabItem}">
        <Grid ToolTip="{TemplateBinding ToolTip}" UseLayoutRounding="True">
            <ContentPresenter x:Name="normal" Content="{TemplateBinding ViewInfo}" ContentTemplate="{TemplateBinding NormalBackgroundTemplate}" />
            <ContentPresenter
                x:Name="hover"
                Content="{TemplateBinding ViewInfo}"
                ContentTemplate="{TemplateBinding HoverBackgroundTemplate}"
                Opacity="0" />
            <ContentPresenter
                x:Name="selected"
                Content="{TemplateBinding ViewInfo}"
                ContentTemplate="{TemplateBinding SelectedBackgroundTemplate}"
                Opacity="0" />
            <ContentPresenter
                x:Name="focused"
                Content="{TemplateBinding ViewInfo}"
                ContentTemplate="{TemplateBinding FocusedBackgroundTemplate}"
                Opacity="0" />
            <dxi:HeaderContainerPresenter x:Name="container" ChildMinHeight="{Binding Path=(dxi:TabPanelBase.ChildMinHeight), RelativeSource={RelativeSource TemplatedParent}}" ViewInfo="{TemplateBinding ViewInfo}">
                <Grid UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <dxi:TabHeaderSmartPresenter x:Name="content" Margin="{TemplateBinding Padding}" IsSelected="{TemplateBinding IsSelected}">
                        <dxi:TabHeaderSmartPresenter.IconBox>
                            <Grid>
                                <ContentPresenter
                                    x:Name="oldIcon"
                                    Width="{TemplateBinding IconWidth}"
                                    Height="{TemplateBinding IconHeight}"
                                    Margin="0,0,4,0"
                                    VerticalAlignment="Center"
                                    Content="{TemplateBinding Icon}"
                                    Focusable="False" />
                                <ContentPresenter
                                    x:Name="icon"
                                    VerticalAlignment="Center"
                                    Content="{TemplateBinding Glyph}"
                                    ContentTemplate="{TemplateBinding GlyphTemplate}"
                                    Focusable="False" />
                            </Grid>
                        </dxi:TabHeaderSmartPresenter.IconBox>
                        <dxi:TabHeaderSmartPresenter.ContentBox>
                            <dxi:TrimContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="Center"
                                ContentSource="Header"
                                DisableToolTipWhenFullyVisible="{Binding ShowToolTipForNonTrimmedHeader, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanNegationConverter}}"
                                RecognizesAccessKey="True"
                                ToolTipOwner="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
                        </dxi:TabHeaderSmartPresenter.ContentBox>
                        <dxi:TabHeaderSmartPresenter.ControlBox>
                            <Button
                                x:Name="PART_CloseButton"
                                VerticalAlignment="Center"
                                Command="{TemplateBinding ActualCloseCommand}"
                                Style="{DynamicResource {dxt:LWKey DXTabItem.CloseButtonStyle}}"
                                Visibility="{TemplateBinding ActualHideButtonVisibility}" />
                        </dxi:TabHeaderSmartPresenter.ControlBox>
                    </dxi:TabHeaderSmartPresenter>
                    <ContentPresenter Grid.Column="1" ContentSource="{x:Null}" Style="{DynamicResource {dxt:LWKey DXTabItem.SeparatorStyle}}" />
                </Grid>
            </dxi:HeaderContainerPresenter>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="focused" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unfocused" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="hover" Storyboard.TargetProperty="Opacity" To="0" Duration="{StaticResource MouseOverAnimationDuration}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="hover" Storyboard.TargetProperty="Opacity" To="1" Duration="{StaticResource MouseOverAnimationDuration}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="container" Storyboard.TargetProperty="Opacity" To="0.35" Duration="0:0:0.0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="SelectionStates">
                    <VisualState x:Name="Unselected" />
                    <VisualState x:Name="Selected">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="selected" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="oldIcon" Property="Visibility" Value="Collapsed" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="TabControlDefaultStyle" TargetType="{x:Type dx:DXTabControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Contained" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template" Value="{StaticResource TabControlDefaultTemplate}" />
        <Setter Property="BackgroundTemplate" Value="{DynamicResource {dxt:LWKey DXTabControl.Background}}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="dxcn:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="ItemsPanel" Value="{Binding View, RelativeSource={RelativeSource Self}, Converter={StaticResource TabPanelSelector}}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ContentHostTemplate, RelativeSource={RelativeSource Self}, Converter={dxmvvm:ObjectToBooleanConverter}}" Value="True">
                <Setter Property="Template" Value="{StaticResource TabControlDefaultTemplate.ContentHost}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TabItemDefaultStyle" TargetType="{x:Type dx:DXTabItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template" Value="{StaticResource TabItemDefaultTemplate}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="GlyphTemplate" Value="{StaticResource TabItemDefaultGlyphTemplate}" />
        <Setter Property="NormalBackgroundTemplate" Value="{DynamicResource {dxt:LWKey DXTabItem.NormalBackground}}" />
        <Setter Property="HoverBackgroundTemplate" Value="{DynamicResource {dxt:LWKey DXTabItem.HoverBackground}}" />
        <Setter Property="SelectedBackgroundTemplate" Value="{DynamicResource {dxt:LWKey DXTabItem.SelectedBackground}}" />
        <Setter Property="FocusedBackgroundTemplate" Value="{DynamicResource {dxt:LWKey DXTabItem.FocusedBackground}}" />
    </Style>
    <!--#endregion TabControl\Themes\Generic.xaml-->
</ResourceDictionary>