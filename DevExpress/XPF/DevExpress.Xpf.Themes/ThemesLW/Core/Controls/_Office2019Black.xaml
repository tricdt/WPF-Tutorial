<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:aero="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
    xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys"
    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
    xmlns:dxbi="http://schemas.devexpress.com/winfx/2008/xaml/bars/internal"
    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm">

    <ResourceDictionary.MergedDictionaries>
        <dxi:ThemeResourceDictionary Path="Common/{ThemeName}/Common.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--#region Common-->
    <!--#endregion Common-->
    <dxi:SplitButtonsSeparatorThicknessConverter x:Key="separatorThicknessConverter" />
    <dxi:RenderTemplate x:Key="{dxt:LWKey DropDownButton.BorderTemplate}">
        <dxi:RenderPanel>
            <dxi:RenderBorder
                Name="IsDefault"
                Background="{StaticResource Brush.Button.Background}"
                BorderBrush="{StaticResource Brush.Border}"
                BorderThickness="1" />
            <dxi:RenderBorder
                Name="IsFocused"
                BorderBrush="{StaticResource Brush.Focused}"
                BorderThickness="1"
                Visibility="Collapsed" />
            <dxi:RenderBorder
                Name="IsDefaulted"
                BorderBrush="{StaticResource Brush.Focused}"
                BorderThickness="1"
                Visibility="Collapsed" />
        </dxi:RenderPanel>
        <dxi:RenderTemplate.Triggers>
            <dxi:RenderTrigger DependencyProperty="{x:Static dx:ThemeManager.IsTouchEnabledProperty}" Value="True" ValueSource="TemplatedParent">
                <dxi:RenderSetter Property="MinWidth" TargetName="IsDefault" Value="44" />
                <dxi:RenderSetter Property="MinHeight" TargetName="IsDefault" Value="44" />
            </dxi:RenderTrigger>
            <dxi:RenderStateGroup Name="FocusStates">
                <dxi:RenderStateTrigger Name="Unfocused">
                    <dxi:RenderSetter Property="Visibility" TargetName="IsFocused" Value="Collapsed" />
                </dxi:RenderStateTrigger>
                <dxi:RenderStateTrigger Name="Focused">
                    <dxi:RenderSetter Property="Visibility" TargetName="IsFocused" Value="Visible" />
                </dxi:RenderStateTrigger>
            </dxi:RenderStateGroup>
            <dxi:RenderStateGroup Name="DefaultedStates">
                <dxi:RenderStateTrigger Name="NotDefaulted">
                    <dxi:RenderSetter Property="Visibility" TargetName="IsDefaulted" Value="Collapsed" />
                </dxi:RenderStateTrigger>
                <dxi:RenderStateTrigger Name="IsDefaulted">
                    <dxi:RenderSetter Property="Visibility" TargetName="IsDefaulted" Value="Visible" />
                </dxi:RenderStateTrigger>
            </dxi:RenderStateGroup>
            <dxi:RenderStateGroup Name="VisualStates">
                <dxi:RenderStateTrigger Name="Normal">
                    <dxi:RenderSetter Property="Background" TargetName="IsDefault" Value="{StaticResource Brush.Button.Background}" />
                    <dxi:RenderSetter Property="BorderBrush" TargetName="IsDefault" Value="{StaticResource Brush.Border}" />
                </dxi:RenderStateTrigger>
                <dxi:RenderStateTrigger Name="MouseOver">
                    <dxi:RenderSetter Property="Background" TargetName="IsDefault" Value="{StaticResource Brush.ControlLight.HoverBackground}" />
                    <dxi:RenderSetter Property="BorderThickness" TargetName="IsDefault" Value="1" />
                    <dxi:RenderSetter Property="BorderBrush" TargetName="IsDefault" Value="{StaticResource Brush.Border}" />
                </dxi:RenderStateTrigger>
                <dxi:RenderStateTrigger Name="Pressed">
                    <dxi:RenderSetter Property="Background" TargetName="IsDefault" Value="{StaticResource Brush.ControlLight.SelectionBackground}" />
                    <dxi:RenderSetter Property="BorderBrush" TargetName="IsDefault" Value="{StaticResource Brush.Border}" />
                </dxi:RenderStateTrigger>
                <dxi:RenderStateTrigger Name="Checked">
                    <dxi:RenderSetter Property="Background" TargetName="IsDefault" Value="{StaticResource Brush.ControlLight.SelectionBackground}" />
                    <dxi:RenderSetter Property="BorderBrush" TargetName="IsDefault" Value="{StaticResource Brush.Border}" />
                </dxi:RenderStateTrigger>
            </dxi:RenderStateGroup>
            <dxi:ConditionalRenderBinding
                DependencyProperty="{x:Static dxi:AppearanceOptions.BackgroundProperty}"
                TargetName="IsDefault"
                TargetProperty="Background"
                ValueSource="TemplatedParent">
                <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasBackgroundProperty}" Value="True" ValueSource="TemplatedParent" />
                <dxi:RenderCondition DependencyProperty="{x:Static dx:SimpleButton.IsMouseOverProperty}" Value="False" ValueSource="TemplatedParent" />
            </dxi:ConditionalRenderBinding>
            <dxi:ConditionalRenderBinding
                DependencyProperty="{x:Static dxi:AppearanceOptions.BackgroundProperty}"
                TargetName="IsDefault"
                TargetProperty="Background"
                ValueSource="TemplatedParent">
                <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasBackgroundProperty}" Value="True" ValueSource="TemplatedParent" />
                <dxi:RenderCondition DependencyProperty="{x:Static dx:SimpleButton.IsMouseOverProperty}" Value="True" ValueSource="TemplatedParent" />
                <dxi:RenderCondition DependencyProperty="{x:Static dxi:SimpleButtonsAppearanceHelper.IsBackgroundSetStyleTriggerProperty}" Value="True" ValueSource="TemplatedParent" />
            </dxi:ConditionalRenderBinding>
            <dxi:ConditionalRenderBinding
                DependencyProperty="{x:Static dxi:AppearanceOptions.BorderBrushProperty}"
                TargetName="IsDefault"
                TargetProperty="BorderBrush"
                ValueSource="TemplatedParent">
                <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasBorderBrushProperty}" Value="True" ValueSource="TemplatedParent" />
            </dxi:ConditionalRenderBinding>
            <dxi:ConditionalRenderBinding
                DependencyProperty="{x:Static dxi:AppearanceOptions.BorderThicknessProperty}"
                TargetName="IsDefault"
                TargetProperty="BorderThickness"
                ValueSource="TemplatedParent">
                <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasBorderThicknessProperty}" Value="True" ValueSource="TemplatedParent" />
            </dxi:ConditionalRenderBinding>
            <dxi:ConditionalRenderBinding
                DependencyProperty="{x:Static dxi:AppearanceOptions.BorderThicknessProperty}"
                TargetName="IsFocused"
                TargetProperty="BorderThickness"
                ValueSource="TemplatedParent">
                <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasBorderThicknessProperty}" Value="True" ValueSource="TemplatedParent" />
            </dxi:ConditionalRenderBinding>
            <dxi:ConditionalRenderBinding
                DependencyProperty="{x:Static dxi:AppearanceOptions.CornerRadiusProperty}"
                TargetName="IsDefault"
                TargetProperty="CornerRadius"
                ValueSource="TemplatedParent">
                <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasCornerRadiusProperty}" Value="True" ValueSource="TemplatedParent" />
            </dxi:ConditionalRenderBinding>
            <dxi:ConditionalRenderBinding
                DependencyProperty="{x:Static dxi:AppearanceOptions.CornerRadiusProperty}"
                TargetName="IsDefaulted"
                TargetProperty="CornerRadius"
                ValueSource="TemplatedParent">
                <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasCornerRadiusProperty}" Value="True" ValueSource="TemplatedParent" />
            </dxi:ConditionalRenderBinding>
            <dxi:ConditionalRenderBinding
                DependencyProperty="{x:Static dxi:AppearanceOptions.CornerRadiusProperty}"
                TargetName="IsFocused"
                TargetProperty="CornerRadius"
                ValueSource="TemplatedParent">
                <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasCornerRadiusProperty}" Value="True" ValueSource="TemplatedParent" />
            </dxi:ConditionalRenderBinding>
        </dxi:RenderTemplate.Triggers>
    </dxi:RenderTemplate>
    <!--#region Controls-->
    <SolidColorBrush x:Key="{dxt:LWKey Badges.ErrorBackground}" Color="#FFD14E4E" />
    <SolidColorBrush x:Key="{dxt:LWKey Badges.ErrorBorderBrush}" Color="#FFD14E4E" />
    <SolidColorBrush x:Key="{dxt:LWKey Badges.WarningBackground}" Color="#FFD1784E" />
    <SolidColorBrush x:Key="{dxt:LWKey Badges.WarningBorderBrush}" Color="#FFD1784E" />
    <SolidColorBrush x:Key="{dxt:LWKey Badges.SuccessBackground}" Color="#FF569867" />
    <SolidColorBrush x:Key="{dxt:LWKey Badges.SuccessBorderBrush}" Color="#FF569867" />
    <Color x:Key="{dxt:LWKey Format.ColorScaleRed}">
        #FFA14849
    </Color>
    <Color x:Key="{dxt:LWKey Format.ColorScaleYellow}">
        #FFA19450
    </Color>
    <Color x:Key="{dxt:LWKey Format.ColorScaleGreen}">
        #FF488658
    </Color>
    <Color x:Key="{dxt:LWKey Format.ColorScaleBlue}">
        #FF406087
    </Color>
    <Color x:Key="{dxt:LWKey Format.DataBarNegativeColor}">
        #B6DC5E55
    </Color>
    <Color x:Key="{dxt:LWKey Format.DataBarRedColor}">
        #B6DC5E55
    </Color>
    <Color x:Key="{dxt:LWKey Format.DataBarOrangeColor}">
        #B6DC9A2C
    </Color>
    <Color x:Key="{dxt:LWKey Format.DataBarGreenColor}">
        #B66EB664
    </Color>
    <Color x:Key="{dxt:LWKey Format.DataBarLightBlueColor}">
        #B629AFC3
    </Color>
    <Color x:Key="{dxt:LWKey Format.DataBarBlueColor}">
        #B65D79DE
    </Color>
    <Color x:Key="{dxt:LWKey Format.DataBarPurpleColor}">
        #B6B16AC7
    </Color>
    <Style x:Key="TabControlGlyphDefaultStyle" TargetType="{x:Type dxi:GlyphControl}">
        <Setter Property="GlyphCloseTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="dxi:GlyphControl">
                    <Path x:Name="PART_Path" Fill="{StaticResource Brush.ForegroundDark}" Style="{StaticResource UIShape.Navigation.Plus}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" TargetName="PART_Path" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="GlyphDownTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="dxi:GlyphControl">
                    <Path x:Name="PART_Path" Fill="{StaticResource Brush.ForegroundDark}" Style="{StaticResource UIShape.Down}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="PART_Path" Value="{StaticResource Brush.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="GlyphLeftTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="dxi:GlyphControl">
                    <Path x:Name="PART_Path" Fill="{StaticResource Brush.ForegroundDark}" Style="{StaticResource UIShape.Left}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="PART_Path" Value="{StaticResource Brush.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="GlyphPlusTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="dxi:GlyphControl">
                    <Path x:Name="PART_Path" Fill="{StaticResource Brush.ForegroundDark}" Style="{StaticResource UIShape.Navigation.Plus}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="PART_Path" Value="{StaticResource Brush.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="GlyphRightTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="dxi:GlyphControl">
                    <Path x:Name="PART_Path" Fill="{StaticResource Brush.ForegroundDark}" Style="{StaticResource UIShape.Right}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="PART_Path" Value="{StaticResource Brush.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="GlyphUpTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="dxi:GlyphControl">
                    <Path x:Name="PART_Path" Fill="{StaticResource Brush.ForegroundDark}" Style="{StaticResource UIShape.Up}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="PART_Path" Value="{StaticResource Brush.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion Controls-->

    <!--#region Button-->
    <dxi:RenderTemplate x:Key="{dxt:LWKey DropDownButton.ArrowBorderTemplate}">
        <dxi:RenderPanel>
            <dxi:RenderBorder
                Name="IsDefault"
                Background="{StaticResource Brush.Button.Background}"
                BorderBrush="{StaticResource Brush.Border}"
                BorderThickness="1" />
            <dxi:RenderBorder
                Name="IsFocused"
                BorderBrush="{StaticResource Brush.Focused}"
                BorderThickness="1"
                Visibility="Collapsed" />
            <dxi:RenderBorder
                Name="IsDefaulted"
                BorderBrush="{StaticResource Brush.Focused}"
                BorderThickness="1"
                Visibility="Collapsed" />
        </dxi:RenderPanel>
        <dxi:RenderTemplate.Triggers>
            <dxi:RenderTrigger DependencyProperty="{x:Static dx:ThemeManager.IsTouchEnabledProperty}" Value="True" ValueSource="TemplatedParent">
                <dxi:RenderSetter Property="MinWidth" TargetName="IsDefault" Value="44" />
                <dxi:RenderSetter Property="MinHeight" TargetName="IsDefault" Value="44" />
            </dxi:RenderTrigger>
            <dxi:RenderStateGroup Name="FocusStates">
                <dxi:RenderStateTrigger Name="Unfocused">
                    <dxi:RenderSetter Property="Visibility" TargetName="IsFocused" Value="Collapsed" />
                </dxi:RenderStateTrigger>
                <dxi:RenderStateTrigger Name="Focused">
                    <dxi:RenderSetter Property="Visibility" TargetName="IsFocused" Value="Visible" />
                </dxi:RenderStateTrigger>
            </dxi:RenderStateGroup>
            <dxi:RenderStateGroup Name="DefaultedStates">
                <dxi:RenderStateTrigger Name="NotDefaulted">
                    <dxi:RenderSetter Property="Visibility" TargetName="IsDefaulted" Value="Collapsed" />
                </dxi:RenderStateTrigger>
                <dxi:RenderStateTrigger Name="IsDefaulted">
                    <dxi:RenderSetter Property="Visibility" TargetName="IsDefaulted" Value="Visible" />
                </dxi:RenderStateTrigger>
            </dxi:RenderStateGroup>
            <dxi:RenderStateGroup Name="VisualStates">
                <dxi:RenderStateTrigger Name="Normal">
                    <dxi:RenderSetter Property="Background" TargetName="IsDefault" Value="{StaticResource Brush.Button.Background}" />
                    <dxi:RenderSetter Property="BorderBrush" TargetName="IsDefault" Value="{StaticResource Brush.Border}" />
                </dxi:RenderStateTrigger>
                <dxi:RenderStateTrigger Name="MouseOver">
                    <dxi:RenderSetter Property="Background" TargetName="IsDefault" Value="{StaticResource Brush.ControlLight.HoverBackground}" />
                    <dxi:RenderSetter Property="BorderThickness" TargetName="IsDefault" Value="1" />
                    <dxi:RenderSetter Property="BorderBrush" TargetName="IsDefault" Value="{StaticResource Brush.Border}" />
                </dxi:RenderStateTrigger>
                <dxi:RenderStateTrigger Name="Pressed">
                    <dxi:RenderSetter Property="Background" TargetName="IsDefault" Value="{StaticResource Brush.ControlLight.SelectionBackground}" />
                    <dxi:RenderSetter Property="BorderBrush" TargetName="IsDefault" Value="{StaticResource Brush.Border}" />
                </dxi:RenderStateTrigger>
                <dxi:RenderStateTrigger Name="Checked">
                    <dxi:RenderSetter Property="Background" TargetName="IsDefault" Value="{StaticResource Brush.ControlLight.SelectionBackground}" />
                    <dxi:RenderSetter Property="BorderBrush" TargetName="IsDefault" Value="{StaticResource Brush.Border}" />
                </dxi:RenderStateTrigger>
            </dxi:RenderStateGroup>
            <dxi:ConditionalRenderBinding
                DependencyProperty="{x:Static dxbi:BarItemAppearanceOptions.ArrowBackgroundProperty}"
                TargetName="IsDefault"
                TargetProperty="Background"
                ValueSource="TemplatedParent">
                <dxi:RenderCondition DependencyProperty="{x:Static dxbi:BarItemAppearanceOptions.HasArrowBackgroundProperty}" Value="True" ValueSource="TemplatedParent" />
                <dxi:RenderCondition DependencyProperty="{x:Static dx:SplitButton.IsMouseOverArrowProperty}" Value="False" ValueSource="TemplatedParent" />
            </dxi:ConditionalRenderBinding>
            <dxi:ConditionalRenderBinding
                DependencyProperty="{x:Static dxbi:BarItemAppearanceOptions.ArrowBackgroundProperty}"
                TargetName="IsDefault"
                TargetProperty="Background"
                ValueSource="TemplatedParent">
                <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasBackgroundProperty}" Value="True" ValueSource="TemplatedParent" />
                <dxi:RenderCondition DependencyProperty="{x:Static dx:SimpleButton.IsMouseOverProperty}" Value="True" ValueSource="TemplatedParent" />
                <dxi:RenderCondition DependencyProperty="{x:Static dxi:SimpleButtonsAppearanceHelper.IsArrowBackgroundSetStyleTriggerProperty}" Value="True" ValueSource="TemplatedParent" />
            </dxi:ConditionalRenderBinding>
            <dxi:ConditionalRenderBinding
                DependencyProperty="{x:Static dxbi:BarItemAppearanceOptions.ArrowBorderBrushProperty}"
                TargetName="IsDefault"
                TargetProperty="BorderBrush"
                ValueSource="TemplatedParent">
                <dxi:RenderCondition DependencyProperty="{x:Static dxbi:BarItemAppearanceOptions.HasArrowBorderBrushProperty}" Value="True" ValueSource="TemplatedParent" />
            </dxi:ConditionalRenderBinding>
            <dxi:ConditionalRenderBinding
                DependencyProperty="{x:Static dxbi:BarItemAppearanceOptions.ArrowBorderThicknessProperty}"
                TargetName="IsDefault"
                TargetProperty="BorderThickness"
                ValueSource="TemplatedParent">
                <dxi:RenderCondition DependencyProperty="{x:Static dxbi:BarItemAppearanceOptions.HasArrowBorderThicknessProperty}" Value="True" ValueSource="TemplatedParent" />
            </dxi:ConditionalRenderBinding>
            <dxi:ConditionalRenderBinding
                DependencyProperty="{x:Static dxbi:BarItemAppearanceOptions.ArrowBorderThicknessProperty}"
                TargetName="IsFocused"
                TargetProperty="BorderThickness"
                ValueSource="TemplatedParent">
                <dxi:RenderCondition DependencyProperty="{x:Static dxbi:BarItemAppearanceOptions.HasArrowBorderThicknessProperty}" Value="True" ValueSource="TemplatedParent" />
            </dxi:ConditionalRenderBinding>
            <dxi:ConditionalRenderBinding
                DependencyProperty="{x:Static dxbi:BarItemAppearanceOptions.ArrowCornerRadiusProperty}"
                TargetName="IsDefault"
                TargetProperty="CornerRadius"
                ValueSource="TemplatedParent">
                <dxi:RenderCondition DependencyProperty="{x:Static dxbi:BarItemAppearanceOptions.HasArrowCornerRadiusProperty}" Value="True" ValueSource="TemplatedParent" />
            </dxi:ConditionalRenderBinding>
            <dxi:ConditionalRenderBinding
                DependencyProperty="{x:Static dxbi:BarItemAppearanceOptions.ArrowCornerRadiusProperty}"
                TargetName="IsDefaulted"
                TargetProperty="CornerRadius"
                ValueSource="TemplatedParent">
                <dxi:RenderCondition DependencyProperty="{x:Static dxbi:BarItemAppearanceOptions.HasArrowCornerRadiusProperty}" Value="True" ValueSource="TemplatedParent" />
            </dxi:ConditionalRenderBinding>
            <dxi:ConditionalRenderBinding
                DependencyProperty="{x:Static dxbi:BarItemAppearanceOptions.ArrowCornerRadiusProperty}"
                TargetName="IsFocused"
                TargetProperty="CornerRadius"
                ValueSource="TemplatedParent">
                <dxi:RenderCondition DependencyProperty="{x:Static dxbi:BarItemAppearanceOptions.HasArrowCornerRadiusProperty}" Value="True" ValueSource="TemplatedParent" />
            </dxi:ConditionalRenderBinding>
            <!-- APPEARANCE END -->
        </dxi:RenderTemplate.Triggers>
    </dxi:RenderTemplate>
    <dxi:RenderTemplate x:Key="{dxt:LWKey DropDownButton.SeparatorBorderTemplate}">
        <dxi:RenderPanel>
            <dxi:RenderBorder
                Name="IsDefault"
                Background="{StaticResource Brush.Button.Background}"
                BorderBrush="{StaticResource Brush.Border}"
                BorderThickness="1,0,0,0" />
            <dxi:RenderBorder
                Name="IsFocused"
                BorderBrush="{StaticResource Brush.Focused}"
                BorderThickness="1,0,0,0"
                Visibility="Collapsed" />
            <dxi:RenderBorder
                Name="IsDefaulted"
                BorderBrush="{StaticResource Brush.Focused}"
                BorderThickness="1,0,0,0"
                Visibility="Collapsed" />
        </dxi:RenderPanel>
        <dxi:RenderTemplate.Triggers>
            <dxi:RenderStateGroup Name="FocusStates">
                <dxi:RenderStateTrigger Name="Unfocused">
                    <dxi:RenderSetter Property="Visibility" TargetName="IsFocused" Value="Collapsed" />
                </dxi:RenderStateTrigger>
                <dxi:RenderStateTrigger Name="Focused">
                    <dxi:RenderSetter Property="Visibility" TargetName="IsFocused" Value="Visible" />
                </dxi:RenderStateTrigger>
            </dxi:RenderStateGroup>
            <dxi:RenderStateGroup Name="DefaultedStates">
                <dxi:RenderStateTrigger Name="NotDefaulted">
                    <dxi:RenderSetter Property="Visibility" TargetName="IsDefaulted" Value="Collapsed" />
                </dxi:RenderStateTrigger>
                <dxi:RenderStateTrigger Name="IsDefaulted">
                    <dxi:RenderSetter Property="Visibility" TargetName="IsDefaulted" Value="Visible" />
                </dxi:RenderStateTrigger>
            </dxi:RenderStateGroup>
            <dxi:RenderStateGroup Name="VisualStates">
                <dxi:RenderStateTrigger Name="Normal">
                    <dxi:RenderSetter Property="BorderBrush" TargetName="IsDefault" Value="{StaticResource Brush.Border}" />
                </dxi:RenderStateTrigger>
                <dxi:RenderStateTrigger Name="MouseOver">
                    <dxi:RenderSetter Property="BorderBrush" TargetName="IsDefault" Value="{StaticResource Brush.Border}" />
                </dxi:RenderStateTrigger>
                <dxi:RenderStateTrigger Name="Pressed">
                    <dxi:RenderSetter Property="BorderBrush" TargetName="IsDefault" Value="{StaticResource Brush.Border}" />
                </dxi:RenderStateTrigger>
                <dxi:RenderStateTrigger Name="Checked">
                    <dxi:RenderSetter Property="BorderBrush" TargetName="IsDefault" Value="{StaticResource Brush.Border}" />
                </dxi:RenderStateTrigger>
            </dxi:RenderStateGroup>
            <!-- APPEARANCE BEGIN -->
            <dxi:ConditionalRenderBinding
                DependencyProperty="{x:Static dxi:AppearanceOptions.BorderBrushProperty}"
                TargetName="IsDefault"
                TargetProperty="BorderBrush"
                ValueSource="TemplatedParent">
                <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasBorderBrushProperty}" Value="True" ValueSource="TemplatedParent" />
            </dxi:ConditionalRenderBinding>
            <dxi:ConditionalRenderBinding
                DependencyProperty="{x:Static dxi:SplitButtonAppearanceOptions.SeparatorThicknessProperty}"
                TargetName="IsDefault"
                TargetProperty="BorderThickness"
                ValueSource="TemplatedParent">
                <dxi:RenderCondition DependencyProperty="{x:Static dxi:SplitButtonAppearanceOptions.HasSeparatorThicknessProperty}" Value="True" ValueSource="TemplatedParent" />
            </dxi:ConditionalRenderBinding>
            <dxi:ConditionalRenderBinding
                DependencyProperty="{x:Static dxi:SplitButtonAppearanceOptions.SeparatorThicknessProperty}"
                TargetName="IsFocused"
                TargetProperty="BorderThickness"
                ValueSource="TemplatedParent">
                <dxi:RenderCondition DependencyProperty="{x:Static dxi:SplitButtonAppearanceOptions.HasSeparatorThicknessProperty}" Value="True" ValueSource="TemplatedParent" />
            </dxi:ConditionalRenderBinding>
            <!-- APPEARANCE END -->
        </dxi:RenderTemplate.Triggers>
    </dxi:RenderTemplate>
    <dxi:RenderTemplate x:Key="{dxt:LWKey DropDownButton.ContentBorderTemplate}">
        <dxi:RenderPanel>
            <dxi:RenderBorder
                Name="IsDefault"
                Background="{StaticResource Brush.Button.Background}"
                BorderBrush="{StaticResource Brush.Border}"
                BorderThickness="1" />
            <dxi:RenderBorder
                Name="IsFocused"
                BorderBrush="{StaticResource Brush.Focused}"
                BorderThickness="1"
                Visibility="Collapsed" />
            <dxi:RenderBorder
                Name="IsDefaulted"
                BorderBrush="{StaticResource Brush.Focused}"
                BorderThickness="1"
                Visibility="Collapsed" />
        </dxi:RenderPanel>
        <dxi:RenderTemplate.Triggers>
            <dxi:RenderTrigger DependencyProperty="{x:Static dx:ThemeManager.IsTouchEnabledProperty}" Value="True" ValueSource="TemplatedParent">
                <dxi:RenderSetter Property="MinWidth" TargetName="IsDefault" Value="44" />
                <dxi:RenderSetter Property="MinHeight" TargetName="IsDefault" Value="44" />
            </dxi:RenderTrigger>
            <dxi:RenderStateGroup Name="FocusStates">
                <dxi:RenderStateTrigger Name="Unfocused">
                    <dxi:RenderSetter Property="Visibility" TargetName="IsFocused" Value="Collapsed" />
                </dxi:RenderStateTrigger>
                <dxi:RenderStateTrigger Name="Focused">
                    <dxi:RenderSetter Property="Visibility" TargetName="IsFocused" Value="Visible" />
                </dxi:RenderStateTrigger>
            </dxi:RenderStateGroup>
            <dxi:RenderStateGroup Name="DefaultedStates">
                <dxi:RenderStateTrigger Name="NotDefaulted">
                    <dxi:RenderSetter Property="Visibility" TargetName="IsDefaulted" Value="Collapsed" />
                </dxi:RenderStateTrigger>
                <dxi:RenderStateTrigger Name="IsDefaulted">
                    <dxi:RenderSetter Property="Visibility" TargetName="IsDefaulted" Value="Visible" />
                </dxi:RenderStateTrigger>
            </dxi:RenderStateGroup>
            <dxi:RenderStateGroup Name="VisualStates">
                <dxi:RenderStateTrigger Name="Normal">
                    <dxi:RenderSetter Property="Background" TargetName="IsDefault" Value="{StaticResource Brush.Button.Background}" />
                    <dxi:RenderSetter Property="BorderBrush" TargetName="IsDefault" Value="{StaticResource Brush.Border}" />
                </dxi:RenderStateTrigger>
                <dxi:RenderStateTrigger Name="MouseOver">
                    <dxi:RenderSetter Property="Background" TargetName="IsDefault" Value="{StaticResource Brush.ControlLight.HoverBackground}" />
                    <dxi:RenderSetter Property="BorderThickness" TargetName="IsDefault" Value="1" />
                    <dxi:RenderSetter Property="BorderBrush" TargetName="IsDefault" Value="{StaticResource Brush.Border}" />
                </dxi:RenderStateTrigger>
                <dxi:RenderStateTrigger Name="Pressed">
                    <dxi:RenderSetter Property="Background" TargetName="IsDefault" Value="{StaticResource Brush.ControlLight.SelectionBackground}" />
                    <dxi:RenderSetter Property="BorderBrush" TargetName="IsDefault" Value="{StaticResource Brush.Border}" />
                </dxi:RenderStateTrigger>
                <dxi:RenderStateTrigger Name="Checked">
                    <dxi:RenderSetter Property="Background" TargetName="IsDefault" Value="{StaticResource Brush.ControlLight.SelectionBackground}" />
                    <dxi:RenderSetter Property="BorderBrush" TargetName="IsDefault" Value="{StaticResource Brush.Border}" />
                </dxi:RenderStateTrigger>
            </dxi:RenderStateGroup>
            <!-- APPEARANCE BEGIN -->
            <dxi:ConditionalRenderBinding
                DependencyProperty="{x:Static dxi:AppearanceOptions.BackgroundProperty}"
                TargetName="IsDefault"
                TargetProperty="Background"
                ValueSource="TemplatedParent">
                <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasBackgroundProperty}" Value="True" ValueSource="TemplatedParent" />
                <dxi:RenderCondition DependencyProperty="{x:Static dx:SimpleButton.IsMouseOverProperty}" Value="False" ValueSource="TemplatedParent" />
            </dxi:ConditionalRenderBinding>
            <dxi:ConditionalRenderBinding
                DependencyProperty="{x:Static dxi:AppearanceOptions.BackgroundProperty}"
                TargetName="IsDefault"
                TargetProperty="Background"
                ValueSource="TemplatedParent">
                <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasBackgroundProperty}" Value="True" ValueSource="TemplatedParent" />
                <dxi:RenderCondition DependencyProperty="{x:Static dx:SimpleButton.IsMouseOverProperty}" Value="True" ValueSource="TemplatedParent" />
                <dxi:RenderCondition DependencyProperty="{x:Static dxi:SimpleButtonsAppearanceHelper.IsBackgroundSetStyleTriggerProperty}" Value="True" ValueSource="TemplatedParent" />
            </dxi:ConditionalRenderBinding>
            <dxi:ConditionalRenderBinding
                DependencyProperty="{x:Static dxi:AppearanceOptions.BackgroundProperty}"
                TargetName="IsDefault"
                TargetProperty="Background"
                ValueSource="TemplatedParent">
                <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasBackgroundProperty}" Value="True" ValueSource="TemplatedParent" />
                <dxi:RenderCondition DependencyProperty="{x:Static dx:SplitButton.IsMouseOverArrowProperty}" Value="True" ValueSource="TemplatedParent" />
            </dxi:ConditionalRenderBinding>
            <dxi:ConditionalRenderBinding
                DependencyProperty="{x:Static dxi:AppearanceOptions.BorderBrushProperty}"
                TargetName="IsDefault"
                TargetProperty="BorderBrush"
                ValueSource="TemplatedParent">
                <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasBorderBrushProperty}" Value="True" ValueSource="TemplatedParent" />
            </dxi:ConditionalRenderBinding>
            <dxi:ConditionalRenderBinding
                DependencyProperty="{x:Static dxi:AppearanceOptions.BorderThicknessProperty}"
                TargetName="IsDefault"
                TargetProperty="BorderThickness"
                ValueSource="TemplatedParent">
                <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasBorderThicknessProperty}" Value="True" ValueSource="TemplatedParent" />
            </dxi:ConditionalRenderBinding>
            <dxi:ConditionalRenderBinding
                DependencyProperty="{x:Static dxi:AppearanceOptions.BorderThicknessProperty}"
                TargetName="IsFocused"
                TargetProperty="BorderThickness"
                ValueSource="TemplatedParent">
                <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasBorderThicknessProperty}" Value="True" ValueSource="TemplatedParent" />
            </dxi:ConditionalRenderBinding>
            <dxi:ConditionalRenderBinding
                DependencyProperty="{x:Static dxbi:BarItemAppearanceOptions.ContentCornerRadiusProperty}"
                TargetName="IsDefault"
                TargetProperty="CornerRadius"
                ValueSource="TemplatedParent">
                <dxi:RenderCondition DependencyProperty="{x:Static dxbi:BarItemAppearanceOptions.HasContentCornerRadiusProperty}" Value="True" ValueSource="TemplatedParent" />
            </dxi:ConditionalRenderBinding>
            <dxi:ConditionalRenderBinding
                DependencyProperty="{x:Static dxbi:BarItemAppearanceOptions.ContentCornerRadiusProperty}"
                TargetName="IsDefaulted"
                TargetProperty="CornerRadius"
                ValueSource="TemplatedParent">
                <dxi:RenderCondition DependencyProperty="{x:Static dxbi:BarItemAppearanceOptions.HasContentCornerRadiusProperty}" Value="True" ValueSource="TemplatedParent" />
            </dxi:ConditionalRenderBinding>
            <dxi:ConditionalRenderBinding
                DependencyProperty="{x:Static dxbi:BarItemAppearanceOptions.ContentCornerRadiusProperty}"
                TargetName="IsFocused"
                TargetProperty="CornerRadius"
                ValueSource="TemplatedParent">
                <dxi:RenderCondition DependencyProperty="{x:Static dxbi:BarItemAppearanceOptions.HasContentCornerRadiusProperty}" Value="True" ValueSource="TemplatedParent" />
            </dxi:ConditionalRenderBinding>
            <!-- APPEARANCE END -->
        </dxi:RenderTemplate.Triggers>
    </dxi:RenderTemplate>
    <dxi:RenderTemplate x:Key="{dxt:LWKey DropDownButton.RenderSplitButtonTemplate}">
        <dxi:RenderPanel Name="PART_GlyphContentAndArrow">
            <dxi:RenderButtonBorder Name="PART_GlyphContentAndArrowBorder" RenderTemplate="{StaticResource {dxt:LWKey DropDownButton.BorderTemplate}}" Visibility="Visible" />
            <dxi:RenderPanel Name="PART_RootPanel" LayoutProvider="{dxi:DockPanelLayoutProvider LastChildFill=True}">
                <dxi:RenderPanel Name="PART_Arrow">
                    <dxi:RenderButtonBorder Name="PART_ArrowBorder" RenderTemplate="{StaticResource {dxt:LWKey DropDownButton.ArrowBorderTemplate}}" />
                    <dxi:RenderBorder Name="PART_ArrowThicknessBorder">
                        <dxi:RenderPanel Name="PART_ArrowRenderPanel">
                            <dxi:RenderImage
                                Name="PART_ArrowGlyph"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                ShouldCalcDpiAwareThickness="False"
                                Stretch="None"
                                Visibility="Visible" />
                            <dxi:RenderControl
                                Name="PART_DefaultArrowGlyph"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RenderTemplateSelector="{dxi:RenderDropDownArrowTemplateSelector}"
                                ShouldCalcDpiAwareThickness="False"
                                Visibility="Collapsed" />
                        </dxi:RenderPanel>
                    </dxi:RenderBorder>
                </dxi:RenderPanel>
                <dxi:RenderButtonBorder Name="PART_SeparatorBorder" RenderTemplate="{StaticResource {dxt:LWKey DropDownButton.SeparatorBorderTemplate}}" />
                <dxi:RenderPanel Name="PART_GlyphAndContent" HorizontalAlignment="Stretch">
                    <dxi:RenderButtonBorder Name="PART_GlyphAndContentBorder" RenderTemplate="{StaticResource {dxt:LWKey DropDownButton.ContentBorderTemplate}}" />
                    <dxi:RenderBorder Name="PART_ContentThicknessBorder">
                        <dxi:RenderBorder Name="PART_ContentPaddingBorder">
                            <dxi:RenderPanel
                                Name="PART_ContentRenderPanel"
                                HorizontalAlignment="Stretch"
                                LayoutProvider="{dxi:DockPanelLayoutProvider LastChildFill=True}"
                                ShouldCalcDpiAwareThickness="False">
                                <dxi:RenderImage
                                    Name="PART_Glyph"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Dock="Left"
                                    Stretch="Uniform"
                                    StretchDirection="DownOnly" />
                                <dxi:RenderBorder Name="PART_Offset" Dock="Left" />
                                <dxi:RenderContentPresenter Name="PART_ContentPresenter" />
                            </dxi:RenderPanel>
                        </dxi:RenderBorder>
                    </dxi:RenderBorder>
                </dxi:RenderPanel>
            </dxi:RenderPanel>
        </dxi:RenderPanel>
        <dxi:RenderTemplate.Triggers>
            <dxi:RenderBinding
                DependencyProperty="{x:Static dx:DropDownButtonBase.ForegroundProperty}"
                TargetProperty="Foreground"
                ValueSource="TemplatedParent"
                TargetName="PART_ContentPresenter" />
            <dxi:RenderBinding
                DependencyProperty="{x:Static dx:DropDownButtonBase.GlyphProperty}"
                TargetProperty="Source"
                ValueSource="TemplatedParent"
                TargetName="PART_Glyph" />
            <dxi:RenderBinding
                DependencyProperty="{x:Static dx:DropDownButtonBase.ArrowGlyphProperty}"
                TargetProperty="Source"
                ValueSource="TemplatedParent"
                TargetName="PART_ArrowGlyph" />
            <dxi:RenderBinding
                DependencyProperty="{x:Static dx:DropDownButtonBase.GlyphToContentOffsetProperty}"
                TargetProperty="Width"
                ValueSource="TemplatedParent"
                TargetName="PART_Offset" />
            <dxi:RenderBinding
                DependencyProperty="{x:Static dx:DropDownButtonBase.GlyphToContentOffsetProperty}"
                TargetProperty="Height"
                ValueSource="TemplatedParent"
                TargetName="PART_Offset" />
            <dxi:RenderBinding
                DependencyProperty="{x:Static dx:DropDownButtonBase.GlyphAlignmentProperty}"
                TargetProperty="Dock"
                ValueSource="TemplatedParent"
                TargetName="PART_Glyph" />
            <dxi:RenderBinding
                DependencyProperty="{x:Static dx:SimpleButton.GlyphWidthProperty}"
                TargetProperty="Width"
                ValueSource="TemplatedParent"
                TargetName="PART_Glyph" />
            <dxi:RenderBinding
                DependencyProperty="{x:Static dx:SimpleButton.GlyphHeightProperty}"
                TargetProperty="Height"
                ValueSource="TemplatedParent"
                TargetName="PART_Glyph" />
            <dxi:RenderBinding
                DependencyProperty="{x:Static dx:DropDownButtonBase.ArrowAlignmentProperty}"
                TargetProperty="Dock"
                ValueSource="TemplatedParent"
                TargetName="PART_Arrow" />
            <dxi:RenderBinding DependencyProperty="{x:Static dx:DropDownButtonBase.ContentProperty}" ValueSource="TemplatedParent" TargetName="PART_ContentPresenter" />
            <dxi:RenderBinding DependencyProperty="{x:Static dx:DropDownButtonBase.ContentTemplateProperty}" ValueSource="TemplatedParent" TargetName="PART_ContentPresenter" />
            <dxi:RenderBinding
                DependencyProperty="{x:Static dx:SimpleButton.VerticalContentAlignmentProperty}"
                TargetProperty="VerticalAlignment"
                ValueSource="TemplatedParent"
                TargetName="PART_ContentRenderPanel" />
            <dxi:RenderBinding
                DependencyProperty="{x:Static dx:SimpleButton.HorizontalContentAlignmentProperty}"
                TargetProperty="HorizontalAlignment"
                ValueSource="TemplatedParent"
                TargetName="PART_ContentRenderPanel" />
            <dxi:RenderBinding
                DependencyProperty="{x:Static ContentControl.PaddingProperty}"
                TargetProperty="Margin"
                ValueSource="TemplatedParent"
                TargetName="PART_ContentPaddingBorder" />
            <dxi:RenderBinding
                DependencyProperty="{x:Static dx:DropDownButtonBase.BorderThicknessProperty}"
                TargetProperty="Margin"
                ValueSource="TemplatedParent"
                TargetName="PART_ContentThicknessBorder" />
            <dxi:RenderBinding
                DependencyProperty="{x:Static dx:DropDownButtonBase.ArrowPaddingProperty}"
                TargetProperty="Margin"
                ValueSource="TemplatedParent"
                TargetName="PART_DefaultArrowGlyph" />
            <dxi:RenderBinding
                DependencyProperty="{x:Static dx:DropDownButtonBase.ArrowPaddingProperty}"
                TargetProperty="Margin"
                ValueSource="TemplatedParent"
                TargetName="PART_ArrowGlyph" />
            <dxi:RenderBinding
                DependencyProperty="{x:Static dx:SplitButton.ArrowBorderThicknessProperty}"
                TargetProperty="Margin"
                ValueSource="TemplatedParent"
                TargetName="PART_ArrowThicknessBorder" />
            <dxi:RenderBinding
                Converter="{StaticResource separatorThicknessConverter}"
                DependencyProperty="{x:Static dx:SplitButton.SeparatorThicknessProperty}"
                TargetProperty="Margin"
                ValueSource="TemplatedParent"
                TargetName="PART_SeparatorBorder" />
            <dxi:RenderTrigger DependencyProperty="{x:Static dx:DropDownButtonBase.ArrowGlyphProperty}" ValueSource="TemplatedParent" Value="{x:Null}">
                <dxi:RenderSetter TargetName="PART_ArrowGlyph" Property="Visibility" Value="Collapsed" />
                <dxi:RenderSetter TargetName="PART_DefaultArrowGlyph" Property="Visibility" Value="Visible" />
            </dxi:RenderTrigger>
            <dxi:RenderTrigger DependencyProperty="{x:Static dx:DropDownButtonBase.GlyphAlignmentProperty}" ValueSource="TemplatedParent" Value="Left">
                <dxi:RenderSetter TargetName="PART_Glyph" Property="Dock" Value="Left" />
                <dxi:RenderSetter TargetName="PART_Offset" Property="Dock" Value="Left" />
                <dxi:RenderSetter TargetName="PART_ContentPresenter" Property="Dock" Value="Right" />
            </dxi:RenderTrigger>
            <dxi:RenderTrigger DependencyProperty="{x:Static dx:DropDownButtonBase.GlyphAlignmentProperty}" ValueSource="TemplatedParent" Value="Right">
                <dxi:RenderSetter TargetName="PART_Glyph" Property="Dock" Value="Right" />
                <dxi:RenderSetter TargetName="PART_Offset" Property="Dock" Value="Right" />
                <dxi:RenderSetter TargetName="PART_ContentPresenter" Property="Dock" Value="Left" />
            </dxi:RenderTrigger>
            <dxi:RenderTrigger DependencyProperty="{x:Static dx:DropDownButtonBase.GlyphAlignmentProperty}" ValueSource="TemplatedParent" Value="Top">
                <dxi:RenderSetter TargetName="PART_Glyph" Property="Dock" Value="Top" />
                <dxi:RenderSetter TargetName="PART_Offset" Property="Dock" Value="Top" />
                <dxi:RenderSetter TargetName="PART_ContentPresenter" Property="Dock" Value="Bottom" />
                <dxi:RenderSetter TargetName="PART_ContentPresenter" Property="HorizontalAlignment" Value="Center" />
            </dxi:RenderTrigger>
            <dxi:RenderTrigger DependencyProperty="{x:Static dx:DropDownButtonBase.GlyphAlignmentProperty}" ValueSource="TemplatedParent" Value="Bottom">
                <dxi:RenderSetter TargetName="PART_Glyph" Property="Dock" Value="Bottom" />
                <dxi:RenderSetter TargetName="PART_Offset" Property="Dock" Value="Bottom" />
                <dxi:RenderSetter TargetName="PART_ContentPresenter" Property="Dock" Value="Top" />
                <dxi:RenderSetter TargetName="PART_ContentPresenter" Property="HorizontalAlignment" Value="Center" />
            </dxi:RenderTrigger>
            <dxi:RenderTrigger DependencyProperty="{x:Static dx:DropDownButtonBase.ArrowAlignmentProperty}" ValueSource="TemplatedParent" Value="Left">
                <dxi:RenderSetter TargetName="PART_GlyphAndContent" Property="Dock" Value="Right" />
                <dxi:RenderSetter TargetName="PART_GlyphAndContentBorder" Property="Placement" Value="Right" />
                <dxi:RenderSetter TargetName="PART_SeparatorBorder" Property="Dock" Value="Left" />
                <dxi:RenderSetter TargetName="PART_Arrow" Property="Dock" Value="Left" />
                <dxi:RenderSetter TargetName="PART_ArrowBorder" Property="Placement" Value="Left" />
            </dxi:RenderTrigger>
            <dxi:RenderTrigger DependencyProperty="{x:Static dx:DropDownButtonBase.ArrowAlignmentProperty}" ValueSource="TemplatedParent" Value="Right">
                <dxi:RenderSetter TargetName="PART_GlyphAndContent" Property="Dock" Value="Left" />
                <dxi:RenderSetter TargetName="PART_GlyphAndContentBorder" Property="Placement" Value="Left" />
                <dxi:RenderSetter TargetName="PART_SeparatorBorder" Property="Dock" Value="Right" />
                <dxi:RenderSetter TargetName="PART_Arrow" Property="Dock" Value="Right" />
                <dxi:RenderSetter TargetName="PART_ArrowBorder" Property="Placement" Value="Right" />
            </dxi:RenderTrigger>
            <dxi:RenderTrigger DependencyProperty="{x:Static dx:DropDownButtonBase.ArrowAlignmentProperty}" ValueSource="TemplatedParent" Value="Top">
                <dxi:RenderSetter TargetName="PART_GlyphAndContent" Property="Dock" Value="Bottom" />
                <dxi:RenderSetter TargetName="PART_GlyphAndContentBorder" Property="Placement" Value="Bottom" />
                <dxi:RenderSetter TargetName="PART_SeparatorBorder" Property="Dock" Value="Top" />
                <dxi:RenderSetter TargetName="PART_Arrow" Property="Dock" Value="Top" />
                <dxi:RenderSetter TargetName="PART_ArrowBorder" Property="Placement" Value="Top" />
            </dxi:RenderTrigger>
            <dxi:RenderTrigger DependencyProperty="{x:Static dx:DropDownButtonBase.ArrowAlignmentProperty}" ValueSource="TemplatedParent" Value="Bottom">
                <dxi:RenderSetter TargetName="PART_GlyphAndContent" Property="Dock" Value="Top" />
                <dxi:RenderSetter TargetName="PART_GlyphAndContentBorder" Property="Placement" Value="Top" />
                <dxi:RenderSetter TargetName="PART_SeparatorBorder" Property="Dock" Value="Bottom" />
                <dxi:RenderSetter TargetName="PART_Arrow" Property="Dock" Value="Bottom" />
                <dxi:RenderSetter TargetName="PART_ArrowBorder" Property="Placement" Value="Bottom" />
            </dxi:RenderTrigger>
            <dxi:RenderBinding
                Converter="{dx:BooleanToVisibilityConverter Invert=True}"
                ConverterParamenter="HiddenOnFalse"
                DependencyProperty="{x:Static dx:SimpleButton.IsAsyncOperationInProgressProperty}"
                TargetProperty="Visibility"
                ValueSource="TemplatedParent"
                TargetName="PART_ContentPresenter" />
        </dxi:RenderTemplate.Triggers>
    </dxi:RenderTemplate>
    <!--#endregion Button-->
    <ControlTemplate x:Key="{dxt:LWKey DropDownButton.SplitButtonTemplate}" TargetType="{x:Type ButtonBase}">
        <dxi:DropDownButtonChrome x:Name="PART_Owner" RenderTemplate="{StaticResource {dxt:LWKey DropDownButton.RenderSplitButtonTemplate}}" />
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="PART_Owner" Property="Opacity" Value="{StaticResource {dxt:LWKey DropDownButton.ButtonOpacity}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>