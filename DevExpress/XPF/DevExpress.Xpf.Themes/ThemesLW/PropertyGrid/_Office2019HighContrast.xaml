<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
    xmlns:dxprgt="http://schemas.devexpress.com/winfx/2008/xaml/propertygrid/themekeys"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
    xmlns:dxprg="http://schemas.devexpress.com/winfx/2008/xaml/propertygrid"
    xmlns:dxprgi="http://schemas.devexpress.com/winfx/2008/xaml/propertygrid/internal"
    xmlns:dxbi="http://schemas.devexpress.com/winfx/2008/xaml/bars/internal"
    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal">
    <ResourceDictionary.MergedDictionaries>
        <dxi:ThemeResourceDictionary Path="Common/{ThemeName}/Common.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <!--#region DefaultStyles.xaml-->
    <Style x:Key="CategoryHeaderRowControl.DefaultStyleBase" TargetType="{x:Type dxprgi:CategoryHeaderRowControl}">
        <Setter Property="Template" Value="{DynamicResource {dxprgt:LWKey PropertyGridView.CategoryHeaderTemplate}}" />
        <Setter Property="Margin" Value="{DynamicResource {dxprgt:LWKey PropertyGridView.CategoryHeaderMargin}}" />
        <Setter Property="Padding" Value="{DynamicResource {dxprgt:LWKey PropertyGridView.CategoryHeaderPadding}}" />
        <Setter Property="Foreground" Value="{StaticResource Brush.Foreground}" />
        <Setter Property="StringTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding Header}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="GlyphTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dx:DXImage
                        dxb:ImageColorizer.Color="{Binding Path=(TextElement.Foreground).(SolidColorBrush.Color), RelativeSource={RelativeSource Self}}"
                        dxb:ImageColorizer.IsEnabled="{Binding Path=Definition.ColorizeGlyph}"
                        Source="{Binding Path=Glyph, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxprgi:CategoryHeaderRowControl}}}"
                        Stretch="None" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource Brush.HoverForeground}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="{StaticResource Brush.SelectionForeground}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <dxi:RenderTemplate x:Key="{dxprgt:LWKey VSViewRenderTemplate.Expander}">
        <dxi:RenderPanel Name="Root" Height="16" Width="16">
            <dxi:RenderViewBox>
                <dxi:RenderPanel Name="RootUnscaled" Height="16" Width="16">
                    <dxbi:RenderArrowPath
                        Name="GlyphCollapsed"
                        Data="F1 M 0,0 0,8 4,4 0,0 Z "
                        Height="8"
                        Stretch="Fill"
                        Width="4" />
                    <dxbi:RenderArrowPath
                        Name="GlyphExpanded"
                        Data="F1 M 6,0 6,6 0,6 6,0 Z "
                        Height="6"
                        Opacity="0"
                        Stretch="Fill"
                        Width="6" />
                </dxi:RenderPanel>
            </dxi:RenderViewBox>
        </dxi:RenderPanel>
        <dxi:RenderTemplate.Triggers>
            <dxi:RenderStateGroup Name="CommonStates">
                <dxi:RenderStateTrigger Name="Normal" />
                <dxi:RenderStateTrigger Name="MouseOver" />
                <dxi:RenderStateTrigger Name="Pressed" />
            </dxi:RenderStateGroup>
            <dxi:RenderStateGroup Name="CheckedStates">
                <dxi:RenderStateTrigger Name="Checked">
                    <dxi:RenderSetter Property="Opacity" TargetName="GlyphExpanded" Value="1" />
                    <dxi:RenderSetter Property="Opacity" TargetName="GlyphCollapsed" Value="0" />
                </dxi:RenderStateTrigger>
                <dxi:RenderStateTrigger Name="Unchecked" />
            </dxi:RenderStateGroup>
            <dxi:RenderTrigger DependencyProperty="{x:Static dx:ThemeManager.IsTouchEnabledProperty}" Value="True">
                <dxi:RenderSetter Property="Width" TargetName="Root" Value="24" />
                <dxi:RenderSetter Property="Height" TargetName="Root" Value="24" />
                <dxi:RenderSetter Property="Margin" TargetName="Root" Value="10" />
            </dxi:RenderTrigger>
        </dxi:RenderTemplate.Triggers>
    </dxi:RenderTemplate>
    <!--#endregion DefaultStyles.xaml-->
</ResourceDictionary>