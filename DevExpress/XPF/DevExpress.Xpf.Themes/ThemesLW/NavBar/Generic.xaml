<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
    xmlns:dxn="clr-namespace:DevExpress.Xpf.NavBar;assembly=DevExpress.Xpf.NavBar.v24.1"
    xmlns:dxnp="clr-namespace:DevExpress.Xpf.NavBar.Platform;assembly=DevExpress.Xpf.NavBar.v24.1"
    xmlns:dxnt="clr-namespace:DevExpress.Xpf.NavBar.Themes;assembly=DevExpress.Xpf.NavBar.v24.1">


    <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <dxn:SelectItemCommandProvider x:Key="SelectItemCommandProvider" />
    <dxn:ScrollUpCommandProvider x:Key="ScrollUpCommandProvider" />
    <dxn:ScrollDownCommandProvider x:Key="ScrollDownCommandProvider" />
    <dxn:IsActiveToAnimationProgressConverter x:Key="IsActiveToAnimationProgressConverter" />
    <dxn:ShowMoreGroupsCommandProvider x:Key="ShowMoreGroupsCommandProvider" />
    <dxn:ShowFewerGroupsCommandProvider x:Key="ShowFewerGroupsCommandProvider" />
    <dxn:OrientationToCursorConverter x:Key="OrientationToCursorConverter" />
    <dxn:EnabledToOpacityConverter x:Key="EnabledToOpacityConverter" />


    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.NavBar\DevExpress.Xpf.NavBar\Themes\Generic\CommonElements.xaml-->
    <DataTemplate x:Key="{dxnt:LWKey CommonElements.ItemContentTemplate}">
        <dxn:ImageAndTextDecorator
            x:Name="itemContent"
            ContentSource="{Binding Path=ContextElement.Content, RelativeSource={RelativeSource TemplatedParent}}"
            ContentStyle="{DynamicResource {dxnt:LWKey NavBarItemControl.ItemTextStyle}}"
            ImageDocking="{Binding Path=(dxn:NavBarViewBase.LayoutSettings).ImageDocking, RelativeSource={RelativeSource TemplatedParent}}"
            ImageSource="{Binding Path=ContextElement.ImageSource, RelativeSource={RelativeSource TemplatedParent}}"
            ImageStyle="{DynamicResource {dxnt:LWKey NavBarItemControl.ItemImageStyle}}"
            Style="{DynamicResource {dxnt:LWKey CommonElements.ItemContentDecoratorStyle}}" />
    </DataTemplate>
    <ControlTemplate x:Key="{dxnt:LWKey CommonElements.ItemTemplate}" TargetType="dxn:NavBarItemControl">
        <ContentControl x:Name="PART_Border" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}" Template="{DynamicResource {dxnt:LWKey CommonElements.ItemBorderTemplate}}">
            <dxn:ImageAndTextContentPresenter
                x:Name="item"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                dx:FocusHelper2.Focusable="False"
                Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}, Converter={dxn:NavBarItemToSourceObjectConverter}}"
                ContentTemplate="{Binding Path=DataContext.Template, RelativeSource={RelativeSource TemplatedParent}}"
                ContextElement="{Binding DataContext, RelativeSource={RelativeSource TemplatedParent}}"
                ImageFallbackSize="16"
                Style="{DynamicResource {dxnt:LWKey NavBarItemControl.ItemStyle}}" />
        </ContentControl>
    </ControlTemplate>

    <Style x:Key="{dxnt:LWKey CommonElements.GroupVisualStyle}" TargetType="ButtonBase">
        <Setter Property="dxn:NavBarViewBase.FontSettings" Value="{Binding ActualFontSettings}" />
        <Setter Property="IsManipulationEnabled" Value="False" />
        <Setter Property="Control.Foreground" Value="{DynamicResource {dxnt:LWKey CommonElements.GroupForegroundBrush}}" />

        <Setter Property="dxn:NavBarViewBase.DisplayMode">
            <Setter.Value>
                <dxn:DisplayMode>ImageAndText</dxn:DisplayMode>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxnt:LWKey CommonElements.ItemVisualStyle}" TargetType="dxn:NavBarItemControl" />
    <ItemsPanelTemplate x:Key="{dxnt:LWKey CommonElements.ItemsPanelTemplate}">
        <StackPanel x:Name="itemsPanel" Orientation="{Binding Path=NavBar.View.ItemsPanelOrientation}" />
    </ItemsPanelTemplate>
    <Style x:Key="{dxnt:LWKey CommonElements.DefaultGroupControlPresenterStyle}" TargetType="dx:XPFContentPresenter">
        <Setter Property="ContentTemplate" Value="{Binding Path=ActualGroupContentTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
    </Style>
    <DataTemplate x:Key="{dxnt:LWKey CommonElements.GroupContainerTemplate}">
        <dxn:NavPaneContentPresenter
            x:Name="groupContainerPresenter"
            ActualContent="{Binding Content}"
            ContentTemplate="{Binding ContentTemplate}"
            DataContext="{Binding Converter={dxn:FrameworkElementInfoSLCompatibilityConverter ConvertToInfo=False}}" />
    </DataTemplate>
    <ControlTemplate x:Key="{dxnt:LWKey SideBar.SmoothScrollTemplate}" TargetType="ContentControl">
        <dxn:GroupScrollableContentControl x:Name="scrollableContent" Content="{TemplateBinding Content}" Orientation="{Binding Path=NavBar.View.ItemsPanelOrientation}">
            <!--<ContentPresenter />-->
        </dxn:GroupScrollableContentControl>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxnt:LWKey SideBar.NoScrollTemplate}" TargetType="ContentControl">
        <ContentPresenter />
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.NavBar\DevExpress.Xpf.NavBar\Themes\Generic\CommonElements.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.NavBar\DevExpress.Xpf.NavBar\Themes\Generic\NavBarGroupControl.xaml-->


    <Style x:Key="{dxnt:LWKey NavBarGroupControl.HeaderStyle}" TargetType="dx:XPFContentPresenter">
        <Setter Property="dxn:NavBarViewBase.ImageSettings" Value="{Binding ActualImageSettings}" />
        <Setter Property="dxn:NavBarViewBase.LayoutSettings" Value="{Binding ActualLayoutSettings}" />
        <Setter Property="dxn:NavBarViewBase.DisplayMode" Value="{Binding ActualDisplayMode}" />
        <Setter Property="ContentTemplateSelector" Value="{Binding Path=ActualHeaderTemplateSelector}" />
    </Style>
    <Style x:Key="{dxnt:LWKey NavBarGroupControl.GroupImageStyle}" TargetType="Image">
        <Setter Property="FlowDirection" Value="LeftToRight" />
    </Style>
    <Style x:Key="{dxnt:LWKey NavBarGroupControl.GroupTextStyle}" TargetType="ContentControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="{dxnt:LWKey NavBarGroupControl.ItemTemplate}">
        <dxn:NavBarItemControl
            Content="{Binding Converter={dxn:FrameworkElementInfoSLCompatibilityConverter}}"
            ContentTemplate="{Binding Path=Template}"
            ContentTemplateSelector="{Binding Path=Group.ActualItemTemplateSelector}"
            DataContext="{Binding Converter={dxn:FrameworkElementInfoSLCompatibilityConverter ConvertToInfo=False}}"
            Focusable="{Binding Path=Group.NavBar.View.Focusable}"
            Style="{Binding Path=ActualVisualStyle}"
            Template="{Binding Path=Group.NavBar.View.ItemControlTemplate}"
            Visibility="{Binding Path=IsVisible, Converter={StaticResource BoolToVisibilityConverter}}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxnt:LWKey NavBarGroupControl.GroupItemsTemplate}">
        <dxn:NavBarItemsControl
            x:Name="groupItemsPresenter"
            dx:FocusHelper2.Focusable="False"
            DataContext="{Binding Converter={dxn:FrameworkElementInfoSLCompatibilityConverter ConvertToInfo=False}}"
            ItemTemplate="{DynamicResource {dxnt:LWKey NavBarGroupControl.ItemTemplate}}"
            ItemsPanel="{Binding Path=NavBar.View.ItemsPanelTemplate}"
            ItemsSourceCore="{Binding Path=SynchronizedItems}" />
    </DataTemplate>
    <Style x:Key="{dxnt:LWKey NavBarGroupControl.OverflowGroupItemStyle}" TargetType="Image">
        <Setter Property="Height" Value="{Binding Path=(dxn:NavBarViewBase.ImageSettings).Height, RelativeSource={RelativeSource TemplatedParent}, FallbackValue=24}" />
        <Setter Property="Width" Value="{Binding Path=(dxn:NavBarViewBase.ImageSettings).Width, RelativeSource={RelativeSource TemplatedParent}, FallbackValue=24}" />
        <Setter Property="Stretch" Value="{Binding Path=(dxn:NavBarViewBase.ImageSettings).Stretch, RelativeSource={RelativeSource TemplatedParent}, FallbackValue=Uniform}" />
        <Setter Property="StretchDirection" Value="{Binding Path=(dxn:NavBarViewBase.ImageSettings).StretchDirection, RelativeSource={RelativeSource TemplatedParent}, FallbackValue=Both}" />
        <Setter Property="FlowDirection" Value="LeftToRight" />
    </Style>
    <ControlTemplate x:Key="{dxnt:LWKey CommonElements.NormalScrollTemplate}" TargetType="ContentControl">
        <ScrollViewer Margin="0,0,1,0" Padding="0" BorderThickness="0">
            <dxmvvm:Interaction.Behaviors>
                <dx:ScrollViewerTouchBehavior Orientation="Vertical" />
            </dxmvvm:Interaction.Behaviors>
            <ScrollViewer.VerticalScrollBarVisibility>
                <Binding Path="NavBar.View.NavBarViewKind">
                    <Binding.Converter>
                        <dxn:NavBarViewKindToScrollBarVisibilityConverter />
                    </Binding.Converter>
                </Binding>
            </ScrollViewer.VerticalScrollBarVisibility>
            <ContentPresenter />
        </ScrollViewer>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxnt:LWKey CommonElements.SmoothScrollTemplate}" TargetType="ContentControl">
        <dxn:GroupScrollableContentControl
            x:Name="scrollableContent"
            dx:FocusHelper2.Focusable="False"
            Content="{TemplateBinding Content}"
            Orientation="{Binding Path=NavBar.View.ItemsPanelOrientation}">
            <dxn:GroupScrollableContentControl.AllowScrolling>
                <MultiBinding>
                    <MultiBinding.Bindings>
                        <Binding Path="NavBar.View" />
                        <Binding Path="NavBar.View.Orientation" />
                    </MultiBinding.Bindings>
                    <MultiBinding.Converter>
                        <dxn:NavBarViewToAllowScrollingConverter />
                    </MultiBinding.Converter>
                </MultiBinding>

            </dxn:GroupScrollableContentControl.AllowScrolling>
            <!--<ContentPresenter />-->
        </dxn:GroupScrollableContentControl>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxnt:LWKey NavigationPanePopup.SmoothScrollTemplate}" TargetType="ContentControl">
        <dxn:NavPaneScrollableContentControl x:Name="scrollableContent" dx:FocusHelper2.Focusable="False" Orientation="{Binding Path=NavBar.View.ItemsPanelOrientation}">
            <dxn:NavPaneScrollableContentControl.AllowScrolling>
                <Binding Path="NavBar.View.NavBarViewKind">
                    <Binding.Converter>
                        <dxn:NavBarViewKindToBooleanConverter />
                    </Binding.Converter>
                </Binding>
            </dxn:NavPaneScrollableContentControl.AllowScrolling>
            <ContentPresenter />
        </dxn:NavPaneScrollableContentControl>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.NavBar\DevExpress.Xpf.NavBar\Themes\Generic\NavBarGroupControl.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.NavBar\DevExpress.Xpf.NavBar\Themes\Generic\NavBarItemControl.xaml-->
    <Style x:Key="{dxnt:LWKey NavBarItemControl.ItemStyle}" TargetType="dx:XPFContentPresenter">
        <Setter Property="dxn:NavBarViewBase.ImageSettings" Value="{Binding ImageSettings, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="dxn:NavBarViewBase.LayoutSettings" Value="{Binding LayoutSettings, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="dxn:NavBarViewBase.DisplayMode" Value="{Binding DisplayMode, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ContentTemplateSelector" Value="{Binding ContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
    </Style>
    <Style x:Key="{dxnt:LWKey NavBarItemControl.ItemImageStyle}" TargetType="Image">
        <Setter Property="FlowDirection" Value="LeftToRight" />
    </Style>
    <Style x:Key="{dxnt:LWKey NavBarItemControl.ItemTextStyle}" TargetType="ContentControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.NavBar\DevExpress.Xpf.NavBar\Themes\Generic\NavBarItemControl.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.NavBar\DevExpress.Xpf.NavBar\Themes\Generic\ExplorerBar.xaml-->


    <Style x:Key="{dxnt:LWKey ExplorerBar.GroupControlStyle}" TargetType="dxn:NavBarGroupControl">
        <Setter Property="Focusable" Value="{Binding Path=NavBar.View.Focusable}" />
        <Setter Property="GroupItemsControlTemplate" Value="{DynamicResource {dxnt:LWKey NavBarGroupControl.GroupItemsTemplate}}" />
        <Setter Property="GroupContentPresenterTemplate" Value="{DynamicResource {dxnt:LWKey CommonElements.GroupContainerTemplate}}" />
        <Setter Property="Template" Value="{DynamicResource {dxnt:LWKey ExplorerBar.ExplorerBarGroupTemplate}}" />
    </Style>
    <ControlTemplate x:Key="{dxnt:LWKey ExplorerBar.ScrollableContentControlTemplate}" TargetType="dxn:ScrollableContentControl">
        <dxnp:XPFDockPanel LastChildFill="True">
            <dxn:NavBarRepeatButton
                x:Name="up"
                dxi:RoutedCommandHelper.Command="{StaticResource ScrollUpCommandProvider}"
                dxi:RoutedCommandHelper.CommandTarget="{Binding ElementName=scroller}"
                dxnp:XPFDockPanel.Dock="Top"
                ClickMode="{Binding Path=View.(dxn:ScrollingSettings.ClickMode)}"
                Focusable="{Binding Path=View.Focusable}"
                Interval="100"
                Orientation="{Binding Path=View.Orientation}"
                Template="{Binding Path=ButtonUpTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
            <dxn:NavBarRepeatButton
                x:Name="down"
                dxi:RoutedCommandHelper.Command="{StaticResource ScrollDownCommandProvider}"
                dxi:RoutedCommandHelper.CommandTarget="{Binding ElementName=scroller}"
                dxnp:XPFDockPanel.Dock="Bottom"
                ClickMode="{Binding Path=View.(dxn:ScrollingSettings.ClickMode)}"
                Focusable="{Binding Path=View.Focusable}"
                Interval="100"
                Orientation="{Binding Path=View.Orientation}"
                Template="{Binding Path=ButtonDownTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
            <dxn:NavBarSmoothScroller
                x:Name="scroller"
                dxnp:XPFDockPanel.Dock="Top"
                ButtonDown="{Binding ElementName=down}"
                ButtonUp="{Binding ElementName=up}"
                Orientation="{Binding Path=Orientation, RelativeSource={RelativeSource TemplatedParent}}"
                ScrollSpeed="{Binding Path=View.(dxn:ScrollingSettings.ScrollSpeed)}">
                <dxn:NavBarSmoothScroller.IsManipulationEnabled>
                    <Binding Path="View.(dxn:ScrollingSettings.IsManipulationEnabled)" />
                </dxn:NavBarSmoothScroller.IsManipulationEnabled>
                <dxn:NavBarSmoothScroller.Acceleration>
                    <Binding Path="View.(dxn:ScrollingSettings.AccelerationRatio)" />
                </dxn:NavBarSmoothScroller.Acceleration>
                <dxn:NavBarSmoothScroller.Deceleration>
                    <Binding Path="View.(dxn:ScrollingSettings.DecelerationRatio)" />
                </dxn:NavBarSmoothScroller.Deceleration>
                <ContentPresenter x:Name="contentPresenter" />
            </dxn:NavBarSmoothScroller>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="OrientationStates">
                    <VisualState Name="Vertical" />
                    <VisualState Name="Horizontal">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="up" Storyboard.TargetProperty="(dxnp:XPFDockPanel.Dock)" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Dock>Left</Dock>

                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="down" Storyboard.TargetProperty="(dxnp:XPFDockPanel.Dock)" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Dock>Right</Dock>

                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="AllowScrollStates">
                    <VisualState Name="AllowScrollFalse">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="up" Storyboard.TargetProperty="Visibility" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="down" Storyboard.TargetProperty="Visibility" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="AllowScrollTrue" />
                </VisualStateGroup>
                <VisualStateGroup Name="NavBarViewKindStates">
                    <VisualState Name="NavBarViewKindNormal" />
                    <VisualState Name="ExplorerBar" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </dxnp:XPFDockPanel>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxnt:LWKey ExplorerBar.NormalScrollTemplate}" TargetType="ContentControl">
        <ScrollViewer Padding="0" BorderThickness="0">
            <dxmvvm:Interaction.Behaviors>
                <dx:ScrollViewerTouchBehavior Orientation="Vertical" />
            </dxmvvm:Interaction.Behaviors>
            <ContentPresenter />
        </ScrollViewer>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxnt:LWKey ExplorerBar.SmoothScrollTemplate}" TargetType="ContentControl">
        <dxn:ExplorerBarScrollableContentControl x:Name="scrollablecc" Orientation="{Binding Path=View.Orientation}">
            <ContentPresenter />
        </dxn:ExplorerBarScrollableContentControl>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxnt:LWKey ExplorerBar.ExplorerBarViewControlTemplate}">
        <Grid x:Name="grid">
            <Grid.DataContext>
                <Binding Path="NavBar" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
            </Grid.DataContext>
            <dxn:ScrollControl x:Name="scrollControl" ScrollBarControlTemplate="{DynamicResource {dxnt:LWKey ExplorerBar.NormalScrollTemplate}}" ScrollButtonsControlTemplate="{DynamicResource {dxnt:LWKey ExplorerBar.SmoothScrollTemplate}}">

                <dxn:NavBarGroupItemsControl x:Name="Groups" ItemContainerStyle="{DynamicResource {dxnt:LWKey ExplorerBar.GroupControlStyle}}" ViewKind="ExplorerBar">
                    <dxn:NavBarGroupItemsControl.Focusable>
                        <Binding Path="View.Focusable" />
                    </dxn:NavBarGroupItemsControl.Focusable>
                </dxn:NavBarGroupItemsControl>
            </dxn:ScrollControl>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OrientationStates">
                    <VisualState x:Name="Vertical" />
                    <VisualState x:Name="Horizontal">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(dxn:NavBarAnimationOptions.HorizontalExpand)" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <dx:HorizontalExpandMode>FromRightToLeft</dx:HorizontalExpandMode>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(dxn:NavBarAnimationOptions.VerticalExpand)" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <dx:VerticalExpandMode>None</dx:VerticalExpandMode>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <!-- Moved from themed part -->

    <ControlTemplate x:Key="{dxnt:LWKey ExplorerBar.ExplorerBarGroupTemplate}" TargetType="dxn:NavBarGroupControl">
        <StackPanel dxn:NavBarAnimationOptions.AnimationProgress="{Binding Path=AnimationProgress, ElementName=PART_DXExpander}" Orientation="{Binding Path=NavBar.View.Orientation}">
            <dx:LayoutTransformPanel Orientation="{Binding Path=NavBar.View.Orientation}">
                <dxn:NavBarGroupHeader
                    x:Name="groupHeader"
                    AnimationProgress="{Binding Path=AnimationProgress, ElementName=PART_DXExpander}"
                    Style="{Binding Path=ActualVisualStyle}"
                    Template="{Binding Path=ActualGroupHeaderTemplate}" />
            </dx:LayoutTransformPanel>
            <dx:DXExpander
                x:Name="PART_DXExpander"
                MinWidth="{Binding Path=NavBar.View.(dxn:NavBarAnimationOptions.MinWidth)}"
                MinHeight="{Binding Path=NavBar.View.(dxn:NavBarAnimationOptions.MinHeight)}"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                dxn:NavBarAnimationOptions.AnimationProgress="{Binding Path=(dxn:NavBarAnimationOptions.AnimationProgress)}"
                dxn:NavBarAnimationOptions.CollapseStoryboard="{Binding Path=NavBar.View.(dxn:NavBarAnimationOptions.CollapseStoryboard)}"
                dxn:NavBarAnimationOptions.ExpandStoryboard="{Binding Path=NavBar.View.(dxn:NavBarAnimationOptions.ExpandStoryboard)}"
                dxn:NavBarAnimationOptions.IsAnimationEnabled="{Binding AnimateGroupExpansion}"
                dxn:NavBarAnimationOptions.IsExpanded="{Binding Path=IsExpanded}"
                AnimationProgress="{Binding Path=IsExpanded, Mode=OneTime, Converter={StaticResource IsActiveToAnimationProgressConverter}}"
                HorizontalExpand="{Binding Path=NavBar.View.(dxn:NavBarAnimationOptions.HorizontalExpand)}"
                StretchChild="{Binding Path=NavBar.View.(dxn:NavBarAnimationOptions.StretchChild)}"
                VerticalExpand="{Binding Path=NavBar.View.(dxn:NavBarAnimationOptions.VerticalExpand)}">
                <dxn:GroupItemsContainer dx:FocusHelper2.Focusable="False" AnimationProgress="{Binding Path=AnimationProgress, ElementName=PART_DXExpander}">
                    <dx:LayoutTransformPanel Clockwise="True" Orientation="{Binding Path=NavBar.View.Orientation}">
                        <dx:XPFContentPresenter Name="groupHeaderContentPresenter" Content="{Binding Converter={dxn:FrameworkElementInfoSLCompatibilityConverter}}" Style="{DynamicResource {dxnt:LWKey CommonElements.DefaultGroupControlPresenterStyle}}" />
                    </dx:LayoutTransformPanel>
                </dxn:GroupItemsContainer>
            </dx:DXExpander>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OrientationStates">
                    <VisualState x:Name="Vertical" />
                    <VisualState x:Name="Horizontal">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_DXExpander" Storyboard.TargetProperty="HorizontalAlignment">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <HorizontalAlignment>Stretch</HorizontalAlignment>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.VerticalAlignment="Stretch" Storyboard.TargetName="PART_DXExpander" Storyboard.TargetProperty="VerticalAlignment" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </StackPanel>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=DisplaySource}" Value="Content">
                <Setter TargetName="groupHeaderContentPresenter" Property="ContentTemplate" Value="{DynamicResource {dxnt:LWKey CommonElements.GroupContainerTemplate}}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.NavBar\DevExpress.Xpf.NavBar\Themes\Generic\ExplorerBar.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.NavBar\DevExpress.Xpf.NavBar\Themes\Generic\NavigationPane.xaml-->


    <ControlTemplate x:Key="{dxnt:LWKey NavigationPane.CollapsedActiveGroupItemsTemplate}" TargetType="dxn:CollapsedActiveGroupItem">
        <dxn:CollapsedActiveGroupItemContentPresenter IsPressed="{TemplateBinding IsPressed}" IsSelected="{TemplateBinding IsChecked}" Style="{DynamicResource {dxnt:LWKey NavigationPane.ItemBackgroundStyle}}">
            <dxn:ImageAndTextContentPresenter
                x:Name="item"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                dx:FocusHelper2.Focusable="False"
                dxn:NavBarViewBase.DisplayMode="{Binding Content.DisplayMode, RelativeSource={RelativeSource TemplatedParent}}"
                dxn:NavBarViewBase.ImageSettings="{Binding Content.ImageSettings, RelativeSource={RelativeSource TemplatedParent}}"
                dxn:NavBarViewBase.LayoutSettings="{Binding Content.LayoutSettings, RelativeSource={RelativeSource TemplatedParent}}"
                Content="{Binding Content.Content, Converter={dxn:NavBarItemToSourceObjectConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                ContentTemplate="{DynamicResource {dxnt:LWKey CommonElements.ItemContentTemplate}}"
                ContextElement="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
                ImageFallbackSize="16"
                IsHitTestVisible="False" />
        </dxn:CollapsedActiveGroupItemContentPresenter>
    </ControlTemplate>
    <Style x:Key="{dxnt:LWKey NavigationPane.CollapsedActiveGroupItemsContainerStyle}" TargetType="ToggleButton">
        <Setter Property="Template" Value="{DynamicResource {dxnt:LWKey NavigationPane.CollapsedActiveGroupItemsTemplate}}" />
        <Setter Property="Content" Value="{Binding}" />
        <Setter Property="Command" Value="{Binding Path=Command}" />
        <Setter Property="CommandParameter" Value="{Binding Path=CommandParameter}" />
        <Setter Property="CommandTarget" Value="{Binding Path=CommandTarget}" />
        <Setter Property="dxn:NavBarViewBase.FontSettings" Value="{Binding Path=ActualFontSettings}" />
    </Style>
    <Style x:Key="{dxnt:LWKey NavigationPane.ItemVisualStyleInPopup}" TargetType="dxn:NavBarItemControl">
        <Setter Property="FontSettings" Value="{Binding ActualFontSettings}" />
        <Setter Property="ImageSettings" Value="{Binding ActualImageSettings}" />
        <Setter Property="DisplayMode" Value="{Binding ActualDisplayMode}" />
        <Setter Property="LayoutSettings" Value="{Binding ActualLayoutSettings}" />
        <Setter Property="Control.Foreground" Value="{DynamicResource {dxnt:LWKey CommonElements.ItemForegroundBrushInPopup}}" />
    </Style>
    <ControlTemplate x:Key="{dxnt:LWKey NavigationPane.GroupControlTemplate}" TargetType="dxn:NavBarGroupControl">
        <Grid>
            <ContentPresenter />
            <dxn:NavPaneFlyoutControl
                x:Name="PART_NavPaneFlyout"
                Padding="0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                StaysOpen="True">
                <dxe:FlyoutControl.Settings>
                    <dxe:FlyoutSettings Placement="Top" />
                </dxe:FlyoutControl.Settings>
            </dxn:NavPaneFlyoutControl>
        </Grid>
    </ControlTemplate>


    <ItemsPanelTemplate x:Key="{dxnt:LWKey NavigationPane.ButtonGroupControlItemsPanel}">
        <dxn:NavPaneGroupButtonPanel />
    </ItemsPanelTemplate>

    <Style x:Key="{dxnt:LWKey NavigationPane.ButtonGroupControlStyle}" TargetType="dxn:NavPaneGroupButtonPanelControl">
        <Setter Property="ItemsPanel" Value="{DynamicResource {dxnt:LWKey NavigationPane.ButtonGroupControlItemsPanel}}" />
    </Style>

    <Style x:Key="{dxnt:LWKey NavigationPane.GroupButtonItemsContainerStyle}" TargetType="dxn:NavBarGroupControl">
        <Setter Property="dx:FocusHelper2.Focusable">
            <Setter.Value>
                <sys:Boolean>False</sys:Boolean>
            </Setter.Value>
        </Setter>
        <Setter Property="Template" Value="{DynamicResource {dxnt:LWKey NavigationPane.GroupControlTemplate}}" />
    </Style>
    <Style x:Key="{dxnt:LWKey NavigationPane.OverflowGroupItemsContainerStyle}" TargetType="dxn:NavBarGroupControl">
        <Setter Property="dx:FocusHelper2.Focusable">
            <Setter.Value>
                <sys:Boolean>False</sys:Boolean>
            </Setter.Value>
        </Setter>
        <Setter Property="Template" Value="{DynamicResource {dxnt:LWKey NavigationPane.GroupControlTemplate}}" />
    </Style>
    <Style x:Key="{dxnt:LWKey NavigationPaneButtonPanel.ButtonPanelStyle}" TargetType="ContentControl" />
    <ControlTemplate x:Key="{dxnt:LWKey NavigationPane.OverflowPanel}">
        <ItemsPresenter />
    </ControlTemplate>
    <Style x:Key="{dxnt:LWKey NavigationPanePopup.PopupWindowStyle}" TargetType="dxn:NavPanePopup">
        <Setter Property="AllowsTransparency" Value="true" />
        <Setter Property="HorizontalOffset" Value="1" />
        <Setter Property="Placement" Value="Right" />
    </Style>
    <Style x:Key="{dxnt:LWKey NavigationPane.CollapsedActiveGruopItemsControlStyle}" TargetType="dxn:CollapsedActiveGroupItemsControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxn:CollapsedActiveGroupItemsControl">
                    <dx:LayoutTransformPanel DockPanel.Dock="Top" Orientation="Horizontal">
                        <DockPanel>
                            <ItemsPresenter x:Name="items" DockPanel.Dock="Right" Visibility="Visible" />
                        </DockPanel>
                    </dx:LayoutTransformPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <dxn:CollapsedActiveGroupItemsPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource {dxnt:LWKey NavigationPane.CollapsedActiveGroupItemsContainerStyle}}" />
    </Style>
    <Style x:Key="{dxnt:LWKey NavigationPane.CollapsedActiveGroupStyle}" TargetType="dxn:CollapsedActiveGroupControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxn:CollapsedActiveGroupControl">
                    <Grid>
                        <Control IsHitTestVisible="False" Template="{DynamicResource {dxnt:LWKey NavigationPane.CollapsedActiveGroupBackgroundTemplate}}" />
                        <dx:LayoutTransformPanel HorizontalAlignment="Center" Orientation="Horizontal">
                            <dxn:CollapsedActiveGroupDefaultElement
                                x:Name="defaultItem"
                                HorizontalAlignment="Right"
                                Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=View.NavBar.ActiveGroup, Converter={dxn:NavBarGroupToNavBarItemConverter}}"
                                IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DefaultIsChecked, Mode=TwoWay}"
                                Template="{DynamicResource {dxnt:LWKey NavigationPane.CollapsedActiveGroupItemsTemplate}}" />
                        </dx:LayoutTransformPanel>
                        <dxn:CollapsedActiveGroupItemsControl
                            x:Name="items"
                            HorizontalAlignment="Center"
                            ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Group.CollapsedNavPaneItems}"
                            ShowMode="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ShowMode, Mode=TwoWay}"
                            Style="{DynamicResource {dxnt:LWKey NavigationPane.CollapsedActiveGruopItemsControlStyle}}" />
                        <dxn:CollapsedActiveGroup
                            x:Name="legacyDefaultItem"
                            Grid.Row="0"
                            dx:FocusHelper2.Focusable="False"
                            dxn:NavigationPaneView.Element="CollapsedActiveGroup"
                            IsChecked="{Binding Path=DefaultIsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{Binding Path=ActualVisualStyle}"
                            Template="{Binding Path=NavBar.View.CollapsedActiveGroupControlTemplate}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ShowMode" Value="MaximizedDefaultItem">
                            <Setter TargetName="defaultItem" Property="HorizontalAlignment" Value="Stretch" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="{dxnt:LWKey NavigationPaneGroupClient.ActiveGroupTemplate}" TargetType="dxn:NavPaneActiveGroupControl">
        <dxnp:XPFDockPanel>
            <dx:LayoutTransformPanel x:Name="panel" dxnp:XPFDockPanel.Dock="Top" Orientation="{TemplateBinding Orientation}">
                <dxn:NavBarGroupHeader x:Name="groupHeader" Style="{Binding Path=ActualVisualStyle}" Template="{Binding Path=ActualGroupHeaderTemplate}" />
            </dx:LayoutTransformPanel>
            <Grid>
                <dxnp:XPFDockPanel
                    x:Name="collapsedGroupContent"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    IsHitTestVisible="False">
                    <dxn:NavPanePopup
                        x:Name="popup"
                        ActualParent="{Binding ElementName=ItemsContainer}"
                        IsOpen="{Binding Path=DefaultIsChecked, ElementName=collapsedActiveGroupControl, Mode=TwoWay}"
                        Orientation="{Binding Path=NavBar.View.Orientation}"
                        PlacementTarget="{Binding ElementName=collapsedActiveGroupControl}"
                        Style="{DynamicResource {dxnt:LWKey NavigationPanePopup.PopupWindowStyle}}">


                        <dxn:NavPanePopupWindowContent x:Name="popupContent">
                            <dxn:NavBarGroupContentPresenter
                                x:Name="PopupGroupContentPresenter"
                                ActualContent="{Binding Path=DataContext, Converter={dxn:FrameworkElementInfoSLCompatibilityConverter ConvertToInfo=True}, RelativeSource={RelativeSource TemplatedParent}}"
                                ContentDataTemplate="{TemplateBinding GroupContentPresenterTemplate}"
                                DisplaySource="{Binding Path=DataContext.DisplaySource, RelativeSource={RelativeSource TemplatedParent}}"
                                ItemsDataTemplate="{TemplateBinding GroupItemsControlTemplate}"
                                ShowContent="False" />
                        </dxn:NavPanePopupWindowContent>
                    </dxn:NavPanePopup>
                    <dxn:CollapsedActiveGroupControl x:Name="collapsedActiveGroupControl" Group="{Binding Path=NavBar.ActiveGroup}" Style="{DynamicResource {dxnt:LWKey NavigationPane.CollapsedActiveGroupStyle}}" />

                </dxnp:XPFDockPanel>
                <dxn:GroupItemsContainer x:Name="ItemsContainer" dx:FocusHelper2.Focusable="False" Opacity="{Binding Path=(dxn:NavBarAnimationOptions.AnimationProgress)}">
                    <dx:LayoutTransformPanel Clockwise="True" Orientation="{Binding Path=NavBar.View.Orientation}">
                        <dxn:NavBarGroupContentPresenter
                            x:Name="ActiveGroupHeaderContentPresenter"
                            ActualContent="{Binding Path=DataContext, Converter={dxn:FrameworkElementInfoSLCompatibilityConverter ConvertToInfo=True}, RelativeSource={RelativeSource TemplatedParent}}"
                            ContentDataTemplate="{TemplateBinding GroupContentPresenterTemplate}"
                            DisplaySource="{Binding Path=DataContext.DisplaySource, RelativeSource={RelativeSource TemplatedParent}}"
                            ItemsDataTemplate="{TemplateBinding GroupItemsControlTemplate}"
                            ShowContent="False" />
                    </dx:LayoutTransformPanel>
                </dxn:GroupItemsContainer>
            </Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="ExpandState">
                    <VisualState x:Name="Expanded">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ActiveGroupHeaderContentPresenter" Storyboard.TargetProperty="ShowContent" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <sys:Boolean>True</sys:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Collapsed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PopupGroupContentPresenter" Storyboard.TargetProperty="ShowContent" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <sys:Boolean>True</sys:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItemsContainer" Storyboard.TargetProperty="IsHitTestVisible" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <sys:Boolean>False</sys:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="OrientationStates">
                    <VisualState x:Name="Vertical" />
                    <VisualState x:Name="Horizontal">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="panel" Storyboard.TargetProperty="(dxnp:XPFDockPanel.Dock)" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Dock>Left</Dock>

                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ShowState">
                    <VisualState x:Name="ShowItems" />
                    <VisualState x:Name="ShowContent">
                        <Storyboard>
                            <!--<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ActiveGroupHeaderContentPresenter" Storyboard.TargetProperty="Content">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Null}"/>
                            </ObjectAnimationUsingKeyFrames>-->
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="collapsedGroupContent" Storyboard.TargetProperty="IsHitTestVisible" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <sys:Boolean>True</sys:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItemsContainer" Storyboard.TargetProperty="IsHitTestVisible" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <sys:Boolean>False</sys:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </dxnp:XPFDockPanel>
    </ControlTemplate>
    <Style x:Key="{dxnt:LWKey NavigationPane.GroupControlStyle}" TargetType="dxn:NavPaneActiveGroupControl">
        <Setter Property="Focusable" Value="{Binding Path=Group.NavBar.View.Focusable, RelativeSource={RelativeSource Mode=Self}}" />
        <Setter Property="GroupItemsControlTemplate" Value="{DynamicResource {dxnt:LWKey NavBarGroupControl.GroupItemsTemplate}}" />
        <Setter Property="GroupContentPresenterTemplate" Value="{DynamicResource {dxnt:LWKey CommonElements.GroupContainerTemplate}}" />
        <Setter Property="Template" Value="{DynamicResource {dxnt:LWKey NavigationPaneGroupClient.ActiveGroupTemplate}}" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
    </Style>
    <ControlTemplate x:Key="{dxnt:LWKey NavigationPaneOverflowPanel.MenuItemTemplate}" TargetType="MenuItem">
        <dx:DXBorder>
            <Grid>
                <dx:DXBorder x:Name="border" CornerRadius="2" Padding="1" Opacity="0">
                    <dx:DXBorder.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FF5E81B4" Offset="0" />
                            <GradientStop Color="#FF4B6FA5" Offset="1" />
                        </LinearGradientBrush>
                    </dx:DXBorder.Background>
                </dx:DXBorder>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0">
                        <Path x:Name="glyph" Visibility="Collapsed" Fill="Black" Data="M0,2L0,4.8 2.5,7.4 7.1,2.8 7.1,0 2.5,4.6z" VerticalAlignment="Center" Margin="12,0,0,0" />
                        <ContentPresenter x:Name="icon" Margin="12,3,0,3" Visibility="Visible" ContentSource="Icon" />
                    </Grid>
                    <dx:MeasurePixelSnapper Margin="12,3" Grid.Column="1">
                        <ContentPresenter x:Name="text" ContentSource="Header" TextElement.Foreground="Black" RecognizesAccessKey="True" />
                    </dx:MeasurePixelSnapper>
                    <Path x:Name="arrow" Grid.Column="2" Fill="Black" Data="M0,0 L0,8 L4,4 z" Visibility="Collapsed" VerticalAlignment="Center" Margin="5,0,5,0" />
                    <Popup x:Name="popup" AllowsTransparency="True" IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" Focusable="false" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                        <Grid>
                            <dx:DXBorder x:Name="shadow" Margin="3,3,0,0" CornerRadius="4" Background="#FF000000" Opacity="0.15" />
                            <dx:DXBorder x:Name="popupBorder" Background="#FF062B63" Padding="1" Margin="0,0,3,3" CornerRadius="2">
                                <dx:DXBorder x:Name="background" CornerRadius="1" Background="#FFFFFFFF">
                                    <StackPanel Background="Transparent" IsItemsHost="True" Margin="1" />
                                </dx:DXBorder>
                            </dx:DXBorder>
                        </Grid>
                    </Popup>
                </Grid>
            </Grid>
        </dx:DXBorder>
        <ControlTemplate.Triggers>
            <Trigger Property="Role" Value="SubMenuHeader">
                <Setter Property="Visibility" Value="Visible" TargetName="arrow" />
            </Trigger>
            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter Property="PopupAnimation" Value="None" TargetName="popup" />
            </Trigger>
            <Trigger Property="IsCheckable" Value="True">
                <Setter Property="Visibility" Value="Hidden" TargetName="glyph" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Visibility" Value="Visible" TargetName="glyph" />
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed" TargetName="icon" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Visibility" Value="Visible" TargetName="border" />
                <Setter Property="Control.Foreground" Value="White" TargetName="text" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Control.Foreground" Value="#FF9A9A9A" TargetName="text" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="{dxnt:LWKey NavigationPane.MenuItemStyle}" TargetType="MenuItem">
        <Setter Property="Template" Value="{StaticResource {dxnt:LWKey NavigationPaneOverflowPanel.MenuItemTemplate}}" />
    </Style>
    <Style x:Key="{dxnt:LWKey NavigationPane.MenuItemContainerStyle}" BasedOn="{StaticResource {dxnt:LWKey NavigationPane.MenuItemStyle}}" TargetType="MenuItem">
        <Setter Property="Header" Value="{Binding Path=Header}" />
        <Setter Property="IsCheckable" Value="True" />
        <Setter Property="IsChecked" Value="{Binding Path=NavigationPaneVisible, Mode=TwoWay}" />
        <Setter Property="Visibility" Value="{Binding Path=IsVisible, Converter={StaticResource BoolToVisibilityConverter}}" />
    </Style>
    <ControlTemplate x:Key="{dxnt:LWKey NavigationPane.ViewTemplate}" TargetType="dxn:NavigationPaneView">
        <dx:DXExpander
            Name="PART_DXExpander"
            MinWidth="{Binding Path=(dxn:NavBarAnimationOptions.MinWidth), RelativeSource={RelativeSource TemplatedParent}}"
            MinHeight="{Binding Path=(dxn:NavBarAnimationOptions.MinHeight), RelativeSource={RelativeSource TemplatedParent}}"
            dxn:NavBarAnimationOptions.CollapseStoryboard="{Binding Path=(dxn:NavBarAnimationOptions.CollapseStoryboard), RelativeSource={RelativeSource TemplatedParent}}"
            dxn:NavBarAnimationOptions.ExpandStoryboard="{Binding Path=(dxn:NavBarAnimationOptions.ExpandStoryboard), RelativeSource={RelativeSource TemplatedParent}}"
            dxn:NavBarAnimationOptions.IsExpanded="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
            AnimationProgress="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Mode=OneTime, Converter={StaticResource IsActiveToAnimationProgressConverter}}"
            HorizontalExpand="{Binding Path=(dxn:NavBarAnimationOptions.HorizontalExpand), RelativeSource={RelativeSource TemplatedParent}}"
            StretchChild="{Binding Path=(dxn:NavBarAnimationOptions.StretchChild), RelativeSource={RelativeSource TemplatedParent}}"
            VerticalExpand="{Binding Path=(dxn:NavBarAnimationOptions.VerticalExpand), RelativeSource={RelativeSource TemplatedParent}}">
            <ContentPresenter x:Name="PART_NavPaneContentPresenter" Content="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OrientationStates">
                    <VisualState x:Name="Vertical" />
                    <VisualState x:Name="Horizontal">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(dxn:NavBarAnimationOptions.HorizontalExpand)" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <dx:HorizontalExpandMode>None</dx:HorizontalExpandMode>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(dxn:NavBarAnimationOptions.VerticalExpand)" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <dx:VerticalExpandMode>FromBottomToTop</dx:VerticalExpandMode>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ExpandState">
                    <VisualState x:Name="Expanded" />
                    <VisualState x:Name="Collapsed" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </dx:DXExpander>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxnt:LWKey NavigationPaneButtonPanel.ButtonPanel}">
        <ContentControl dx:FocusHelper2.Focusable="False" Style="{DynamicResource {dxnt:LWKey NavigationPaneButtonPanel.ButtonPanelStyle}}" Template="{DynamicResource {dxnt:LWKey NavigationPaneButtonPanel.ButtonPanelTemplate}}">
            <ItemsPresenter />
        </ContentControl>
    </ControlTemplate>

    <DataTemplate x:Key="{dxnt:LWKey NavigationPane.DefaultNavPaneGroupButtonTemplate}">
        <dx:LayoutTransformPanel Orientation="{Binding NavBar.View.Orientation}">
            <dxn:NavPaneGroupButton
                x:Name="button"
                dxn:NavigationPaneView.Element="GroupButtonPanel"
                Content="{Binding Converter={dxn:FrameworkElementInfoSLCompatibilityConverter}}"
                ContentTemplateSelector="{Binding Path=ActualNavPaneGroupButtonTemplateSelector}"
                DataContext="{Binding Converter={dxn:FrameworkElementInfoSLCompatibilityConverter ConvertToInfo=False}}"
                Focusable="{Binding Path=NavBar.View.Focusable}"
                Style="{Binding Path=ActualVisualStyle}"
                Template="{Binding Path=NavBar.View.GroupButtonControlTemplate}" />
        </dx:LayoutTransformPanel>
    </DataTemplate>
    <DataTemplate x:Key="{dxnt:LWKey NavigationPaneOverflowPanel.NavPaneOverflowGroupButtonTemplate}">
        <dxn:NavPaneXPFButton
            dxn:NavigationPaneView.Element="OverflowPanel"
            Content="{Binding Converter={dxn:FrameworkElementInfoSLCompatibilityConverter}}"
            ContentTemplateSelector="{Binding Path=ActualNavPaneOverflowGroupTemplateSelector}"
            DataContext="{Binding Converter={dxn:FrameworkElementInfoSLCompatibilityConverter ConvertToInfo=False}}"
            Focusable="{Binding Path=NavBar.View.Focusable}"
            Style="{Binding Path=ActualVisualStyle}"
            Template="{Binding Path=NavBar.View.OverflowGroupControlTemplate}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxnt:LWKey NavigationPane.ViewContentTemplate}">
        <dxn:NavigationPanePanel
            x:Name="NavigationPane"
            dxn:ThumbDragManager.DownDragDelta="20"
            dxn:ThumbDragManager.Orientation="{Binding Path=Orientation, RelativeSource={RelativeSource Self}}"
            dxn:ThumbDragManager.Thumb="{Binding ElementName=PART_Thumb}"
            dxn:ThumbDragManager.UpDragDelta="20"
            DataContext="{Binding Path=NavBar}"
            Orientation="{Binding Path=View.Orientation}">
            <dxn:NavigationPanePanel.ActiveGroup>
                <dxn:NavPaneActiveGroupControl x:Name="activeGroup" DataContext="{Binding Path=DataContext.NavBar.ActiveGroup, RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource {dxnt:LWKey NavigationPane.GroupControlStyle}}" />
            </dxn:NavigationPanePanel.ActiveGroup>
            <dxn:NavigationPanePanel.Splitter>
                <dxn:NavPaneSplitter x:Name="PART_Thumb" Cursor="{Binding Path=View.Orientation, Converter={StaticResource OrientationToCursorConverter}}" Visibility="{Binding Path=View.ActualIsSplitterVisible, Converter={StaticResource BoolToVisibilityConverter}}" />
            </dxn:NavigationPanePanel.Splitter>

            <dxn:NavigationPanePanel.GroupsControl>

                <dxn:NavPaneGroupButtonPanelControl
                    x:Name="groupButtonPanel"
                    dx:FocusHelper2.Focusable="False"
                    ItemContainerStyle="{DynamicResource {dxnt:LWKey NavigationPane.GroupButtonItemsContainerStyle}}"
                    ItemTemplate="{DynamicResource {dxnt:LWKey NavigationPane.DefaultNavPaneGroupButtonTemplate}}"
                    ItemsSourceCore="{Binding Path=View.ItemsControlGroups, Converter={dxn:NavBarGroupCollectionConverter}}"
                    Style="{DynamicResource {dxnt:LWKey NavigationPane.ButtonGroupControlStyle}}"
                    Template="{DynamicResource {dxnt:LWKey NavigationPaneButtonPanel.ButtonPanel}}" />
            </dxn:NavigationPanePanel.GroupsControl>

            <dxn:NavigationPanePanel.OverflowPanel>
                <dxn:NavPaneOverflowPanel x:Name="overflowControl" Visibility="{Binding Path=View.ActualIsOverflowPanelVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                    <dxnp:XPFDockPanel LastChildFill="False">
                        <dxn:NavPaneDropDownMenuControl x:Name="dropDownControl" />

                        <dxn:NavPaneItemsControl
                            x:Name="overflowPanel"
                            dx:FocusHelper2.Focusable="False"
                            dxnp:XPFDockPanel.Dock="Right"
                            ItemContainerStyle="{DynamicResource {dxnt:LWKey NavigationPane.OverflowGroupItemsContainerStyle}}"
                            ItemTemplate="{DynamicResource {dxnt:LWKey NavigationPaneOverflowPanel.NavPaneOverflowGroupButtonTemplate}}"
                            ItemsSourceCore="{Binding Path=View.OverflowPanelGroups, Converter={dxn:NavBarGroupCollectionConverter}}"
                            Template="{DynamicResource {dxnt:LWKey NavigationPane.OverflowPanel}}">

                            <dxn:NavPaneItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <dxn:NavPaneItemsControlPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </dxn:NavPaneItemsControl.ItemsPanel>
                        </dxn:NavPaneItemsControl>
                    </dxnp:XPFDockPanel>
                </dxn:NavPaneOverflowPanel>
            </dxn:NavigationPanePanel.OverflowPanel>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OrientationStates">
                    <VisualState x:Name="Vertical">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Thumb" Storyboard.TargetProperty="(dx:CursorHelper.Cursor)" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <dx:CursorType>SizeNS</dx:CursorType>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Horizontal">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Thumb" Storyboard.TargetProperty="(dx:CursorHelper.Cursor)" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <dx:CursorType>SizeWE</dx:CursorType>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="activeGroup" Storyboard.TargetProperty="MinHeight" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <sys:Double>0</sys:Double>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </dxn:NavigationPanePanel>
    </DataTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.NavBar\DevExpress.Xpf.NavBar\Themes\Generic\NavigationPane.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.NavBar\DevExpress.Xpf.NavBar\Themes\Generic\SideBar.xaml-->



    <ControlTemplate x:Key="{dxnt:LWKey SideBar.NormalScrollTemplate}" TargetType="ContentControl">
        <ScrollViewer Margin="0,0,0,0" Padding="0" BorderThickness="0">
            <dxmvvm:Interaction.Behaviors>
                <dx:ScrollViewerTouchBehavior Orientation="Vertical" />
            </dxmvvm:Interaction.Behaviors>
            <ScrollViewer.VerticalScrollBarVisibility>
                <Binding Path="NavBar.View.NavBarViewKind">
                    <Binding.Converter>
                        <dxn:NavBarViewKindToScrollBarVisibilityConverter />
                    </Binding.Converter>
                </Binding>
            </ScrollViewer.VerticalScrollBarVisibility>
            <ContentPresenter />
        </ScrollViewer>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxnt:LWKey SideBar.SideBarGroupTemplate}" TargetType="dxn:NavBarGroupControl">
        <dxnp:XPFDockPanel dxn:NavBarAnimationOptions.AnimationProgress="{Binding Path=AnimationProgress, ElementName=PART_DXExpander}">
            <dx:LayoutTransformPanel x:Name="panel" dxnp:XPFDockPanel.Dock="Top" Orientation="{Binding Path=NavBar.View.Orientation}">
                <dxn:SideBarHeader
                    x:Name="groupHeader"
                    AnimationProgress="{Binding Path=AnimationProgress, ElementName=PART_DXExpander}"
                    Style="{Binding Path=ActualVisualStyle}"
                    Template="{Binding Path=ActualGroupHeaderTemplate}">
                    <dxn:SideBarHeader.Focusable>
                        <Binding Path="NavBar.View.Focusable" />
                    </dxn:SideBarHeader.Focusable>
                    <!--<dxi:RoutedCommandHelper.Command>
                        <dxn:SetActiveGroupCommandProvider />
                    </dxi:RoutedCommandHelper.Command>
                    <dxi:RoutedCommandHelper.CommandParameter>
                        <Binding />
                    </dxi:RoutedCommandHelper.CommandParameter>-->
                </dxn:SideBarHeader>
            </dx:LayoutTransformPanel>
            <dxn:GroupItemsContainer
                MaxWidth="{Binding Path=NavBar.View.SideBarPanel.ResidualSize.Width}"
                MaxHeight="{Binding Path=NavBar.View.SideBarPanel.ResidualSize.Height}"
                dx:FocusHelper2.Focusable="False"
                AnimationProgress="{Binding Path=AnimationProgress, ElementName=PART_DXExpander}">
                <dxn:SideBarLayoutTransformPanel Clockwise="True" Orientation="{Binding Path=NavBar.View.Orientation}">
                    <dx:DXExpander
                        x:Name="PART_DXExpander"
                        dxn:NavBarAnimationOptions.CollapseStoryboard="{Binding Path=NavBar.View.(dxn:NavBarAnimationOptions.CollapseStoryboard)}"
                        dxn:NavBarAnimationOptions.ExpandStoryboard="{Binding Path=NavBar.View.(dxn:NavBarAnimationOptions.ExpandStoryboard)}"
                        dxn:NavBarAnimationOptions.IsAnimationEnabled="{Binding AnimateGroupExpansion}"
                        dxn:NavBarAnimationOptions.IsExpanded="{Binding Path=IsActive}"
                        AnimationProgress="{Binding Path=IsActive, Mode=OneTime, Converter={StaticResource IsActiveToAnimationProgressConverter}}"
                        HorizontalExpand="{Binding Path=NavBar.View.(dxn:NavBarAnimationOptions.HorizontalExpand)}"
                        StretchChild="{Binding Path=NavBar.View.(dxn:NavBarAnimationOptions.StretchChild)}"
                        VerticalExpand="{Binding Path=NavBar.View.(dxn:NavBarAnimationOptions.VerticalExpand)}">
                        <dx:DXExpander.Collapsing>
                            <Binding Mode="TwoWay" Path="IsCollapsing" />
                        </dx:DXExpander.Collapsing>
                        <dx:DXExpander.Expanding>
                            <Binding Mode="TwoWay" Path="IsExpanding" />
                        </dx:DXExpander.Expanding>
                        <dxn:ScrollControl
                            x:Name="scrollControl"
                            NoScrollControlTemplate="{DynamicResource {dxnt:LWKey SideBar.NoScrollTemplate}}"
                            ScrollBarControlTemplate="{DynamicResource {dxnt:LWKey SideBar.NormalScrollTemplate}}"
                            ScrollButtonsControlTemplate="{DynamicResource {dxnt:LWKey SideBar.SmoothScrollTemplate}}">

                            <!--<dx:LayoutTransformPanel Orientation="{Binding Path=NavBar.View.Orientation}">
                                <Grid  Margin="2,1,2,1">
                                    <dx:LayoutTransformPanel Orientation="{Binding Path=NavBar.View.Orientation}" Clockwise="True">-->
                            <dx:XPFContentPresenter Name="groupHeaderContentPresenter" Content="{Binding Converter={dxn:FrameworkElementInfoSLCompatibilityConverter ConvertToInfo=True}}" Style="{DynamicResource {dxnt:LWKey CommonElements.DefaultGroupControlPresenterStyle}}" />
                            <!--</dx:LayoutTransformPanel>
                                </Grid>
                            </dx:LayoutTransformPanel>-->
                        </dxn:ScrollControl>
                    </dx:DXExpander>
                </dxn:SideBarLayoutTransformPanel>
            </dxn:GroupItemsContainer>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OrientationStates">
                    <VisualState x:Name="Vertical" />
                    <VisualState x:Name="Horizontal">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="panel" Storyboard.TargetProperty="dxnp:XPFDockPanel.Dock" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Dock>Left</Dock>

                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </dxnp:XPFDockPanel>
    </ControlTemplate>
    <Style x:Key="{dxnt:LWKey SideBar.GroupControlStyle}" TargetType="dxn:NavBarGroupControl">
        <Setter Property="dx:FocusHelper2.Focusable">
            <Setter.Value>
                <sys:Boolean>False</sys:Boolean>
            </Setter.Value>
        </Setter>
        <Setter Property="GroupItemsControlTemplate" Value="{DynamicResource {dxnt:LWKey NavBarGroupControl.GroupItemsTemplate}}" />
        <Setter Property="GroupContentPresenterTemplate" Value="{DynamicResource {dxnt:LWKey CommonElements.GroupContainerTemplate}}" />
        <Setter Property="Template" Value="{DynamicResource {dxnt:LWKey SideBar.SideBarGroupTemplate}}" />
    </Style>
    <ControlTemplate x:Key="{dxnt:LWKey SideBar.ViewTemplate}">
        <dxn:NavBarGroupItemsControl x:Name="Groups" ItemContainerStyle="{DynamicResource {dxnt:LWKey SideBar.GroupControlStyle}}" ViewKind="SideBar">
            <dxn:NavBarGroupItemsControl.DataContext>
                <Binding Path="NavBar" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
            </dxn:NavBarGroupItemsControl.DataContext>
            <dxn:NavBarGroupItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <dxn:SideBarPanel ActiveGroupMinHeight="{Binding Path=View.ActiveGroupMinHeight}" Orientation="{Binding Path=View.Orientation}" />
                </ItemsPanelTemplate>
            </dxn:NavBarGroupItemsControl.ItemsPanel>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OrientationStates">
                    <VisualState x:Name="Vertical" />
                    <VisualState x:Name="Horizontal">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(dxn:NavBarAnimationOptions.HorizontalExpand)" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <dx:HorizontalExpandMode>FromRightToLeft</dx:HorizontalExpandMode>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(dxn:NavBarAnimationOptions.VerticalExpand)" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <dx:VerticalExpandMode>None</dx:VerticalExpandMode>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </dxn:NavBarGroupItemsControl>
        <!--</dxn:ScrollableContentControl>-->
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.NavBar\DevExpress.Xpf.NavBar\Themes\Generic\SideBar.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.NavBar\DevExpress.Xpf.NavBar\Themes\Generic\DefaultStyles.xaml-->
    <Style x:Key="NavBarGroupDefaultStyle" TargetType="{x:Type dxn:NavBarGroup}">
        <Setter Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=NavBar.Foreground}" />
    </Style>
    <Style x:Key="ImageAndTextDecoratorDefaultStyle" TargetType="{x:Type dxn:ImageAndTextDecorator}">
        <Setter Property="dx:FocusHelper2.Focusable">
            <Setter.Value>
                <sys:Boolean>False</sys:Boolean>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxn:ImageAndTextDecorator">
                    <Grid x:Name="grid" dx:FocusHelper2.Focusable="False">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="column1" Width="Auto" />
                            <ColumnDefinition x:Name="column2" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="row1" />
                            <RowDefinition x:Name="row2" Height="Auto" />
                        </Grid.RowDefinitions>
                        <dx:DXImage
                            x:Name="PART_Image"
                            dx:FocusHelper2.Focusable="False"
                            IgnoreUseLayoutRoundingCheck="true"
                            Source="{TemplateBinding ImageSource}"
                            Style="{TemplateBinding ImageStyle}" />
                        <dx:MeasurePixelSnapperContentControl
                            x:Name="PART_Content"
                            dx:FocusHelper2.Focusable="False"
                            Content="{TemplateBinding ContentSource}"
                            SnapperType="Around"
                            Style="{TemplateBinding ContentStyle}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NavPaneItemsControlDefaultStyle" TargetType="{x:Type dxn:NavPaneItemsControl}">
        <Setter Property="ClipToBounds" Value="true" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <dxn:NavPaneItemsControlPanel Orientation="{Binding Path=View.Orientation}" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NavBarRepeatButtonDefaultStyle" TargetType="{x:Type dxn:NavBarRepeatButton}">
        <Setter Property="Visibility" Value="Collapsed" />
    </Style>
    <Style x:Key="NavBarControlDefaultStyle" TargetType="{x:Type dxn:NavBarControl}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxn:NavBarControl">
                    <dx:DXArranger>
                        <Grid>
                            <dx:DXBorder Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <dxn:NavBarViewPresenter View="{TemplateBinding View}" />
                            </dx:DXBorder>
                        </Grid>
                    </dx:DXArranger>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>
    <Style x:Key="NavBarItemControlDefaultStyle" TargetType="{x:Type dxn:NavBarItemControl}">
        <Setter Property="FontSettings" Value="{Binding ActualFontSettings}" />
        <Setter Property="ImageSettings" Value="{Binding ActualImageSettings}" />
        <Setter Property="DisplayMode" Value="{Binding ActualDisplayMode}" />
        <Setter Property="LayoutSettings" Value="{Binding ActualLayoutSettings}" />
        <Setter Property="Foreground" Value="{Binding Group.NavBar.View.ItemForeground}" />
    </Style>


    <Style x:Key="{dxnt:LWKey CommonElements.NavBarViewBaseStyle}" TargetType="dxn:NavBarViewBase">
        <Setter Property="ItemForeground" Value="{DynamicResource {dxnt:LWKey CommonElements.ItemForegroundBrush}}" />
        <Setter Property="HeaderTemplate" Value="{DynamicResource {dxnt:LWKey CommonElements.HeaderTemplate}}" />
        <Setter Property="GroupHeaderTemplate" Value="{DynamicResource {dxnt:LWKey CommonElements.GroupHeaderTemplate}}" />
        <Setter Property="ItemTemplate" Value="{DynamicResource {dxnt:LWKey CommonElements.ItemContentTemplate}}" />
        <Setter Property="ItemControlTemplate" Value="{DynamicResource {dxnt:LWKey CommonElements.ItemTemplate}}" />
        <Setter Property="ItemsPanelTemplate" Value="{DynamicResource {dxnt:LWKey CommonElements.ItemsPanelTemplate}}" />
        <Setter Property="dxn:ScrollingSettings.ClickMode" Value="Hover" />
        <Setter Property="GroupVisualStyle" Value="{DynamicResource {dxnt:LWKey CommonElements.GroupVisualStyle}}" />
        <Setter Property="dxn:ScrollingSettings.ScrollSpeed" Value="300" />
        <Setter Property="Foreground" Value="{DynamicResource {dxnt:LWKey CommonElements.ItemForegroundBrush}}" />
        <Setter Property="ItemFontSettings" Value="{DynamicResource {dxnt:LWKey CommonElements.ViewItemFontSettings}}" />
        <Setter Property="GroupFontSettings" Value="{DynamicResource {dxnt:LWKey CommonElements.ViewGroupFontSettings}}" />
        <Setter Property="ItemImageSettings" Value="{DynamicResource {dxnt:LWKey CommonElements.ViewItemImageSettings}}" />
        <Setter Property="GroupImageSettings" Value="{DynamicResource {dxnt:LWKey CommonElements.ViewGroupImageSettings}}" />
        <Setter Property="ItemLayoutSettings" Value="{DynamicResource {dxnt:LWKey CommonElements.ViewItemLayoutSettings}}" />
        <Setter Property="GroupLayoutSettings" Value="{DynamicResource {dxnt:LWKey CommonElements.ViewGroupLayoutSettings}}" />
        <Setter Property="ItemDisplayMode" Value="{DynamicResource {dxnt:LWKey CommonElements.ViewItemDisplayMode}}" />
        <Setter Property="GroupDisplayMode" Value="{DynamicResource {dxnt:LWKey CommonElements.ViewGroupDisplayMode}}" />

        <Setter Property="dxn:ScrollingSettings.AccelerationRatio" Value="200" />
        <Setter Property="dxn:ScrollingSettings.DecelerationRatio" Value="600" />
        <Setter Property="dxn:NavBarAnimationOptions.ExpandStoryboard" Value="{DynamicResource {dxnt:LWKey CommonElements.DefaultExpandingStoryboard}}" />
        <Setter Property="dxn:NavBarAnimationOptions.CollapseStoryboard" Value="{DynamicResource {dxnt:LWKey CommonElements.DefaultCollapsingStoryboard}}" />
    </Style>
    <Style x:Key="NavBarGroupItemsControlDefaultStyle" TargetType="{x:Type dxn:NavBarGroupItemsControl}">
        <Setter Property="Template" Value="{DynamicResource {dxnt:LWKey CommonElements.NavBarGroupItemsControlTemplate}}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <dxn:NavBarPositionPanel x:Name="navBarPanel" Orientation="{Binding Path=View.Orientation}" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExplorerBarScrollableContentControlDefaultStyle" TargetType="{x:Type dxn:ExplorerBarScrollableContentControl}">
        <Setter Property="ButtonUpTemplate" Value="{DynamicResource {dxnt:LWKey CommonElements.ScrollUpButtonTemplate}}" />
        <Setter Property="ButtonDownTemplate" Value="{DynamicResource {dxnt:LWKey CommonElements.ScrollDownButtonTemplate}}" />
        <Setter Property="Template" Value="{DynamicResource {dxnt:LWKey ExplorerBar.ScrollableContentControlTemplate}}" />
        <Setter Property="NotAllowScrollingTemplate" Value="{DynamicResource {dxnt:LWKey CommonElements.ScrollessContentControlTemplate}}" />
    </Style>
    <Style x:Key="ExplorerBarViewDefaultStyle" BasedOn="{StaticResource {dxnt:LWKey CommonElements.NavBarViewBaseStyle}}" TargetType="{x:Type dxn:ExplorerBarView}">
        <Setter Property="Template" Value="{DynamicResource {dxnt:LWKey ExplorerBar.ExplorerBarViewControlTemplate}}" />
        <Setter Property="dxn:NavBarAnimationOptions.HorizontalExpand" Value="None" />
        <Setter Property="dxn:NavBarAnimationOptions.VerticalExpand" Value="FromBottomToTop" />
        <Setter Property="dxn:NavBarAnimationOptions.StretchChild" Value="False" />
        <Setter Property="dxn:NavBarAnimationOptions.MinWidth" Value="0" />
        <Setter Property="dxn:NavBarAnimationOptions.MinHeight" Value="0" />
    </Style>
    <Style x:Key="NavPaneScrollableContentControlDefaultStyle" TargetType="{x:Type dxn:NavPaneScrollableContentControl}">
        <Setter Property="ButtonUpTemplate" Value="{DynamicResource {dxnt:LWKey NavigationPanePopup.ScrollUpButtonTemplate}}" />
        <Setter Property="ButtonDownTemplate" Value="{DynamicResource {dxnt:LWKey NavigationPanePopup.ScrollDownButtonTemplate}}" />
        <Setter Property="Template" Value="{DynamicResource {dxnt:LWKey CommonElements.ScrollableContentControlTemplate}}" />
        <Setter Property="NotAllowScrollingTemplate" Value="{DynamicResource {dxnt:LWKey CommonElements.ScrollessContentControlTemplate}}" />
    </Style>
    <Style x:Key="NavPaneSplitterDefaultStyle" TargetType="{x:Type dxn:NavPaneSplitter}">
        <Setter Property="Template" Value="{DynamicResource {dxnt:LWKey NavigationPaneSplitter.SplitterTemplate}}" />
        <Setter Property="Height" Value="Auto" />
    </Style>
    <Style x:Key="NavPaneExpandButtonDefaultStyle" TargetType="{x:Type dxn:NavPaneExpandButton}">
        <Setter Property="Template" Value="{DynamicResource {dxnt:LWKey NavigationPaneHeader.ExpandButtonTemplate}}" />
        <Setter Property="Focusable" Value="{Binding Path=NavBar.View.Focusable}" />
        <Setter Property="dxi:RoutedCommandHelper.Command">
            <Setter.Value>
                <dxn:ChangeNavPaneExpandedCommandProvider />
            </Setter.Value>
        </Setter>
        <Setter Property="dxi:RoutedCommandHelper.CommandParameter" Value="{Binding}" />
        <Setter Property="HorizontalAlignment" Value="Right" />
    </Style>
    <Style x:Key="NavPanePopupWindowFrameDefaultStyle" TargetType="{x:Type dxn:NavPanePopupWindowFrame}">
        <Setter Property="Template" Value="{DynamicResource {dxnt:LWKey NavigationPanePopup.PopupWindowFrameTemplate}}" />
    </Style>
    <Style x:Key="NavPaneOverflowPanelDefaultStyle" TargetType="{x:Type dxn:NavPaneOverflowPanel}">
        <Setter Property="dx:FocusHelper2.Focusable">
            <Setter.Value>
                <sys:Boolean>False</sys:Boolean>
            </Setter.Value>
        </Setter>
        <Setter Property="Template" Value="{DynamicResource {dxnt:LWKey NavigationPaneOverflowPanel.OverflowPanelTemplate}}" />
    </Style>
    <Style x:Key="NavigationPaneViewDefaultStyle" BasedOn="{StaticResource {dxnt:LWKey CommonElements.NavBarViewBaseStyle}}" TargetType="{x:Type dxn:NavigationPaneView}">
        <Setter Property="ExpandedTemplate" Value="{DynamicResource {dxnt:LWKey NavigationPane.ViewContentTemplate}}" />
        <Setter Property="CollapsedTemplate" Value="{DynamicResource {dxnt:LWKey NavigationPane.ViewContentTemplate}}" />
        <Setter Property="CollapsedActiveGroupControlTemplate" Value="{DynamicResource {dxnt:LWKey NavigationPaneGroupClient.CollapsedActiveGroupTemplate}}" />
        <Setter Property="GroupButtonTemplate" Value="{DynamicResource {dxnt:LWKey NavigationPaneButtonPanel.GroupContentTemplate}}" />
        <Setter Property="GroupButtonControlTemplate" Value="{DynamicResource {dxnt:LWKey NavigationPaneButtonPanel.GroupTemplate}}" />
        <Setter Property="OverflowGroupControlTemplate" Value="{DynamicResource {dxnt:LWKey NavigationPaneOverflowPanel.OverflowGroupTemplate}}" />
        <Setter Property="OverflowGroupTemplate" Value="{DynamicResource {dxnt:LWKey NavigationPaneOverflowPanel.OverflowGroupContentTemplate}}" />
        <Setter Property="Template" Value="{DynamicResource {dxnt:LWKey NavigationPane.ViewTemplate}}" />
        <Setter Property="ActiveGroupMinHeight" Value="100" />
        <Setter Property="dxn:NavBarAnimationOptions.HorizontalExpand" Value="FromRightToLeft" />
        <Setter Property="dxn:NavBarAnimationOptions.VerticalExpand" Value="None" />
        <Setter Property="dxn:NavBarAnimationOptions.StretchChild" Value="True" />
        <Setter Property="dxn:NavBarAnimationOptions.MinWidth" Value="36" />
        <Setter Property="dxn:NavBarAnimationOptions.MinHeight" Value="36" />
        <Setter Property="ItemVisualStyleInPopup" Value="{DynamicResource {dxnt:LWKey NavigationPane.ItemVisualStyleInPopup}}" />
    </Style>
    <Style x:Key="SideBarViewDefaultStyle" BasedOn="{StaticResource {dxnt:LWKey CommonElements.NavBarViewBaseStyle}}" TargetType="{x:Type dxn:SideBarView}">
        <Setter Property="Template" Value="{DynamicResource {dxnt:LWKey SideBar.ViewTemplate}}" />
        <Setter Property="dxn:NavBarAnimationOptions.HorizontalExpand" Value="None" />
        <Setter Property="dxn:NavBarAnimationOptions.VerticalExpand" Value="FromBottomToTop" />
    </Style>


    <Style x:Key="ExplorerBarExpandButtonDefaultStyle" TargetType="{x:Type dxn:ExplorerBarExpandButton}">
        <Setter Property="Template" Value="{DynamicResource {dxnt:LWKey ExplorerBar.ExpandButtonTemplate}}" />
        <Setter Property="Focusable" Value="{Binding Path=NavBar.View.Focusable}" />
        <Setter Property="HorizontalAlignment" Value="Right" />
    </Style>
    <Style x:Key="GroupScrollableContentControlDefaultStyle" TargetType="{x:Type dxn:GroupScrollableContentControl}">
        <Setter Property="ButtonUpTemplate" Value="{DynamicResource {dxnt:LWKey CommonElements.ScrollUpGroupButtonTemplate}}" />
        <Setter Property="ButtonDownTemplate" Value="{DynamicResource {dxnt:LWKey CommonElements.ScrollDownGroupButtonTemplate}}" />
        <Setter Property="Template" Value="{DynamicResource {dxnt:LWKey CommonElements.ScrollableContentControlTemplate}}" />
        <Setter Property="NotAllowScrollingTemplate" Value="{DynamicResource {dxnt:LWKey CommonElements.ScrollessContentControlTemplate}}" />
    </Style>
    <Style x:Key="GroupItemsContainerDefaultStyle" TargetType="{x:Type dxn:GroupItemsContainer}">
        <Style.Setters>
            <Setter Property="Template" Value="{DynamicResource {dxnt:LWKey CommonElements.GroupItemsContainerTemplate}}" />
        </Style.Setters>
    </Style>
    <Style x:Key="NavPaneDropDownMenuControlDefaultStyle" TargetType="{x:Type dxn:NavPaneDropDownMenuControl}">
        <Setter Property="Focusable" Value="{Binding Path=View.Focusable}" />
        <Setter Property="Margin" Value="2,2,2,2" />
        <Setter Property="dxnp:XPFDockPanel.Dock" Value="Right" />
        <Setter Property="Template" Value="{DynamicResource {dxnt:LWKey NavigationPaneOverflowPanel.DropDownButtonTemplate}}" />
    </Style>
    <Style x:Key="NavPanePopupWindowContentDefaultStyle" TargetType="{x:Type dxn:NavPanePopupWindowContent}">
        <Setter Property="MinWidth" Value="100" />
        <Setter Property="Template" Value="{DynamicResource {dxnt:LWKey NavigationPanePopup.PopupWindowContentTemplate}}" />
    </Style>
    <Style x:Key="NavPaneDefaultIconDefaultStyle" TargetType="{x:Type dxn:NavPaneDefaultIcon}">
        <Setter Property="Template" Value="{DynamicResource {dxnt:LWKey NavigationPaneOverflowPanel.DefaultIconTemplate}}" />
    </Style>
    <Style x:Key="NavBarItemsControlDefaultStyle" BasedOn="{StaticResource {x:Type ItemsControl}}" TargetType="{x:Type dxn:NavBarItemsControl}">
        <Setter Property="Margin" Value="{DynamicResource {dxnt:LWKey NavBarGroupControl.NavBarItemsControlMargin}}" />
    </Style>
    <Style x:Key="NavPaneContentPresenterDefaultStyle" TargetType="{x:Type dxn:NavPaneContentPresenter}">
        <Setter Property="Margin" Value="{DynamicResource {dxnt:LWKey CommonElements.GroupContentMargin}}" />
    </Style>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.NavBar\DevExpress.Xpf.NavBar\Themes\Generic\DefaultStyles.xaml-->

</ResourceDictionary>