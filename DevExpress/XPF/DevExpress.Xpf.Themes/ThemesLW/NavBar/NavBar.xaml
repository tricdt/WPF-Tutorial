<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:cs="colorscheme_ignorable_uri"
    xmlns:dxnt="http://schemas.devexpress.com/winfx/2008/xaml/navbar/themekeys"
    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxn="http://schemas.devexpress.com/winfx/2008/xaml/navbar"
    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
    xmlns:dxnp="clr-namespace:DevExpress.Xpf.NavBar.Platform;assembly=DevExpress.Xpf.NavBar.v24.1"
    mc:Ignorable="cs">

    <ResourceDictionary.MergedDictionaries>
        <dxi:ThemeResourceDictionary Path="NavBar/_{ThemeCategory}.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <dx:BoolToVisibilityInverseConverter x:Key="BoolToVisibilityInverseConverter" />
    <dxn:BooleanToOpacityConverter x:Key="BooleanToOpacityConverter" />
    <dxn:NavBarViewKindToScrollBarVisibilityConverter x:Key="NavBarViewKindToScrollBarVisibilityConverter" />
    <dxn:ScrollUpCommandProvider x:Key="ScrollUpCommandProvider" />
    <dxn:ScrollDownCommandProvider x:Key="ScrollDownCommandProvider" />
    <dxn:SourceToVisibilityConverter x:Key="SourceToVisibilityConverter" />


    <!--#region Base\NavBar\Base\UICore.xaml-->




    <!-- Common -->
    <!--#endregion Base\NavBar\Base\UICore.xaml-->

    <!--#region Base\NavBar\Base\UIPreset.xaml-->
    <Thickness x:Key="{dxnt:LWKey CommonElements.GroupContentMargin}">0</Thickness>
    <Thickness x:Key="{dxnt:LWKey NavBarGroupControl.NavBarItemsControlMargin}">0</Thickness>




    <!-- Converters -->

    <!-- Resources -->

    <!-- Font -->

    <dxn:FontSettings x:Key="{dxnt:LWKey CommonElements.ViewItemFontSettings}" />

    <!-- Image -->

    <dxn:ImageSettings
        x:Key="{dxnt:LWKey CommonElements.ViewItemImageSettings}"
        Height="16"
        Stretch="Uniform"
        StretchDirection="Both"
        Width="16" />

    <dxn:ImageSettings
        x:Key="{dxnt:LWKey CommonElements.ViewGroupImageSettings}"
        Height="24"
        Stretch="Uniform"
        StretchDirection="Both"
        Width="24" />

    <!-- Layout -->

    <dxn:LayoutSettings
        x:Key="{dxnt:LWKey CommonElements.ViewItemLayoutSettings}"
        ImageDocking="Left"
        ImageHorizontalAlignment="Left"
        ImageVerticalAlignment="Center"
        TextHorizontalAlignment="Stretch"
        TextVerticalAlignment="Center" />

    <dxn:LayoutSettings
        x:Key="{dxnt:LWKey CommonElements.ViewGroupLayoutSettings}"
        ImageDocking="Left"
        ImageHorizontalAlignment="Left"
        ImageVerticalAlignment="Center"
        TextHorizontalAlignment="Stretch"
        TextVerticalAlignment="Center" />

    <!-- Display Mode -->

    <dxn:DisplayMode x:Key="{dxnt:LWKey CommonElements.ViewItemDisplayMode}">ImageAndText</dxn:DisplayMode>

    <dxn:DisplayMode x:Key="{dxnt:LWKey CommonElements.ViewGroupDisplayMode}">ImageAndText</dxn:DisplayMode>
    <!--#endregion Base\NavBar\Base\UIPreset.xaml-->

    <!--#region Base\NavBar\Base\CommonElements.xaml-->
    <!-- General -->

    <Storyboard x:Key="{dxnt:LWKey CommonElements.DefaultCollapsingStoryboard}">
        <DoubleAnimation Duration="0:0:0.5" Storyboard.TargetName="PART_DXExpander" Storyboard.TargetProperty="AnimationProgress" To="0" />
    </Storyboard>

    <Storyboard x:Key="{dxnt:LWKey CommonElements.DefaultExpandingStoryboard}">
        <DoubleAnimation Duration="0:0:0.5" Storyboard.TargetName="PART_DXExpander" Storyboard.TargetProperty="AnimationProgress" To="1" />
    </Storyboard>
    <!--#endregion Base\NavBar\Base\CommonElements.xaml-->

    <!--#region Base\NavBar\Base\ScrollButtons.xaml-->
    <!-- General -->

    <ControlTemplate x:Key="{dxnt:LWKey CommonElements.ScrollUpButtonTemplate}" TargetType="dxn:NavBarRepeatButton">
        <dx:LayoutTransformPanel x:Name="Root" Orientation="{TemplateBinding Orientation}">
            <dx:DXBorder
                x:Name="IsDefault"
                Background="Transparent"
                BorderBrush="{dx:LWBrush 'Brush.SelectionBackground, Office2019Black=Brush.Border, Office2019Colorful=Brush.Border, Office2019HighContrast=Brush.Border, VS2019Blue=Brush.Border, VS2019Dark=Brush.Border, VS2019Light=Brush.Border, Win11=Brush.ListItem.SelectionBackground'}"
                BorderThickness="0,0,0,1"
                Padding="4">
                <Path x:Name="Content" Fill="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ForegroundDark, Win11=Brush.Foreground.Primary'}" Style="{StaticResource UIShape.Up}" />
            </dx:DXBorder>
        </dx:LayoutTransformPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill" TargetName="Content" Value="{dx:LWBrush 'Brush.HoverForeground, VS2019Light=Brush.Focused, Win11=Brush.Foreground.Primary'}" />
                <Setter Property="Background" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.HoverBackground, Win11=Brush.ListItem.HoverBackground'}" />
                <Setter Property="BorderBrush" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.SelectionBackground, Office2019Black=Brush.HoverBorder, Office2019Colorful=Brush.HoverBorder, Office2019HighContrast=Brush.HoverBorder, VS2019Blue=Brush.HoverBorder, VS2019Dark=Brush.HoverBorder, VS2019Light=Brush.Focused, Win11=Brush.ListItem.SelectionBackground'}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Fill" TargetName="Content" Value="{dx:LWBrush 'Brush.SelectionForeground, VS2019Light=Brush.Backstage.Foreground, Win11=Brush.Foreground.Primary'}" />
                <Setter Property="Background" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.SelectionBackground, Win11=Brush.ListItem.SelectionBackground'}" />
                <Setter Property="BorderBrush" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.SelectionBackground, Office2019Black=Brush.SelectionBorder, Office2019Colorful=Brush.SelectionBorder, Office2019HighContrast=Brush.SelectionBorder, VS2019Blue=Brush.SelectionBorder, VS2019Dark=Brush.Focused, VS2019Light=Brush.Focused, Win11=Brush.ListItem.SelectionBackground'}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="Root" Value="0.38" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" TargetName="Root" Value="44" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxnt:LWKey CommonElements.ScrollDownButtonTemplate}" TargetType="dxn:NavBarRepeatButton">
        <dx:LayoutTransformPanel x:Name="Root" Orientation="{TemplateBinding Orientation}">
            <dx:DXBorder
                x:Name="IsDefault"
                Background="Transparent"
                BorderBrush="{dx:LWBrush 'Brush.SelectionBackground, Office2019Black=Brush.Border, Office2019Colorful=Brush.Border, Office2019HighContrast=Brush.Border, VS2019Blue=Brush.Border, VS2019Dark=Brush.Border, VS2019Light=Brush.Border, Win11=Brush.ListItem.SelectionBackground'}"
                BorderThickness="0,1,0,0"
                Padding="4">
                <Path x:Name="Content" Fill="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ForegroundDark, Win11=Brush.Foreground.Primary'}" Style="{StaticResource UIShape.Down}" />
            </dx:DXBorder>
        </dx:LayoutTransformPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill" TargetName="Content" Value="{dx:LWBrush 'Brush.HoverForeground, VS2019Light=Brush.Focused, Win11=Brush.Foreground.Primary'}" />
                <Setter Property="Background" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.HoverBackground, VS2019Blue=Brush.Window.HeaderButton.HoverBackground, Win11=Brush.ListItem.HoverBackground'}" />
                <Setter Property="BorderBrush" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.SelectionBackground, Office2019Black=Brush.HoverBorder, Office2019Colorful=Brush.HoverBorder, Office2019HighContrast=Brush.HoverBorder, VS2019Blue=Brush.HoverBorder, VS2019Dark=Brush.HoverBorder, VS2019Light=Brush.Focused, Win11=Brush.ListItem.SelectionBackground'}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Fill" TargetName="Content" Value="{dx:LWBrush 'Brush.SelectionForeground, VS2019Light=Brush.Backstage.Foreground, Win11=Brush.Foreground.Primary'}" />
                <Setter Property="Background" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.SelectionBackground, Win11=Brush.ListItem.SelectionBackground'}" />
                <Setter Property="BorderBrush" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.SelectionBackground, Office2019Black=Brush.SelectionBorder, Office2019Colorful=Brush.SelectionBorder, Office2019HighContrast=Brush.SelectionBorder, VS2019Blue=Brush.SelectionBorder, VS2019Dark=Brush.Focused, VS2019Light=Brush.Focused, Win11=Brush.ListItem.SelectionBackground'}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="Root" Value="0.38" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" TargetName="Root" Value="44" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Group -->

    <ControlTemplate x:Key="{dxnt:LWKey CommonElements.ScrollUpGroupButtonTemplate}" TargetType="dxn:NavBarRepeatButton">
        <dx:LayoutTransformPanel x:Name="Root" Orientation="{TemplateBinding Orientation}">
            <dx:DXBorder
                x:Name="IsDefault"
                Background="Transparent"
                BorderBrush="{dx:LWBrush 'Brush.SelectionBackground, Office2019Black=Brush.Border, Office2019Colorful=Brush.Border, Office2019HighContrast=Brush.Border, VS2019Blue=Brush.Border, VS2019Dark=Brush.Border, VS2019Light=Brush.Border, Win11=Brush.ListItem.SelectionBackground'}"
                BorderThickness="0,0,0,1"
                Padding="4">
                <Path x:Name="Content" Fill="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ForegroundDark, Win11=Brush.Foreground.Primary'}" Style="{StaticResource UIShape.Up}" />
            </dx:DXBorder>
        </dx:LayoutTransformPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill" TargetName="Content" Value="{dx:LWBrush 'Brush.HoverForeground, VS2019Light=Brush.Focused, Win11=Brush.Foreground.Primary'}" />
                <Setter Property="Background" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.HoverBackground, Win11=Brush.ListItem.HoverBackground'}" />
                <Setter Property="BorderBrush" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.SelectionBackground, Office2019Black=Brush.HoverBorder, Office2019Colorful=Brush.HoverBorder, Office2019HighContrast=Brush.HoverBorder, VS2019Blue=Brush.HoverBackground, VS2019Dark=Brush.HoverBorder, VS2019Light=Brush.Focused, Win11=Brush.ListItem.SelectionBackground'}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Fill" TargetName="Content" Value="{dx:LWBrush 'Brush.SelectionForeground, VS2019Light=Brush.Backstage.Foreground, Win11=Brush.Foreground.Primary'}" />
                <Setter Property="Background" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.SelectionBackground, Win11=Brush.ListItem.SelectionBackground'}" />
                <Setter Property="BorderBrush" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.SelectionBackground, Office2019Black=Brush.SelectionBorder, Office2019Colorful=Brush.SelectionBorder, Office2019HighContrast=Brush.SelectionBorder, VS2019Dark=Brush.Focused, VS2019Light=Brush.Focused, Win11=Brush.ListItem.SelectionBackground'}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="Root" Value="0.38" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" TargetName="Root" Value="44" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxnt:LWKey CommonElements.ScrollDownGroupButtonTemplate}" TargetType="dxn:NavBarRepeatButton">
        <dx:LayoutTransformPanel x:Name="Root" Orientation="{TemplateBinding Orientation}">
            <dx:DXBorder
                x:Name="IsDefault"
                Background="Transparent"
                BorderBrush="{dx:LWBrush 'Brush.SelectionBackground, Office2019Black=Brush.Border, Office2019Colorful=Brush.Border, Office2019HighContrast=Brush.Border, VS2019Blue=Brush.Border, VS2019Dark=Brush.Border, VS2019Light=Brush.Border, Win11=Brush.ListItem.SelectionBackground'}"
                BorderThickness="0,1,0,0"
                Padding="4">
                <Path x:Name="Content" Fill="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ForegroundDark, Win11=Brush.Foreground.Primary'}" Style="{StaticResource UIShape.Down}" />
            </dx:DXBorder>
        </dx:LayoutTransformPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill" TargetName="Content" Value="{dx:LWBrush 'Brush.HoverForeground, VS2019Light=Brush.Focused, Win11=Brush.Foreground.Primary'}" />
                <Setter Property="Background" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.HoverBackground, Win11=Brush.ListItem.HoverBackground'}" />
                <Setter Property="BorderBrush" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.SelectionBackground, Office2019Black=Brush.HoverBorder, Office2019Colorful=Brush.HoverBorder, Office2019HighContrast=Brush.HoverBorder, VS2019Blue=Brush.HoverBackground, VS2019Dark=Brush.HoverBorder, VS2019Light=Brush.Focused, Win11=Brush.ListItem.SelectionBackground'}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Fill" TargetName="Content" Value="{dx:LWBrush 'Brush.SelectionForeground, VS2019Light=Brush.Backstage.Foreground, Win11=Brush.Foreground.Primary'}" />
                <Setter Property="Background" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.SelectionBackground, Win11=Brush.ListItem.SelectionBackground'}" />
                <Setter Property="BorderBrush" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.SelectionBackground, Office2019Black=Brush.SelectionBorder, Office2019Colorful=Brush.SelectionBorder, Office2019HighContrast=Brush.SelectionBorder, VS2019Dark=Brush.Focused, VS2019Light=Brush.Focused, Win11=Brush.ListItem.SelectionBackground'}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="Root" Value="0.38" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" TargetName="Root" Value="44" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion Base\NavBar\Base\ScrollButtons.xaml-->

    <!--#region Base\NavBar\Base\ScrollableContent.xaml-->
    <!-- General -->

    <ControlTemplate x:Key="{dxnt:LWKey CommonElements.ScrollableContentControlTemplate}" TargetType="dxn:ScrollableContentControl">
        <dxnp:XPFDockPanel LastChildFill="True">
            <dxn:NavBarRepeatButton
                x:Name="Up"
                ClickMode="{Binding Path=NavBar.View.(dxn:ScrollingSettings.ClickMode)}"
                dxi:RoutedCommandHelper.Command="{StaticResource ScrollUpCommandProvider}"
                dxi:RoutedCommandHelper.CommandTarget="{Binding ElementName=Scroller}"
                Focusable="{Binding Path=NavBar.View.Focusable}"
                Interval="100"
                Orientation="{Binding Path=NavBar.View.Orientation}"
                Template="{TemplateBinding ButtonUpTemplate}"
                dxnp:XPFDockPanel.Dock="Top" />
            <dxn:NavBarRepeatButton
                x:Name="Down"
                ClickMode="{Binding Path=NavBar.View.(dxn:ScrollingSettings.ClickMode)}"
                dxi:RoutedCommandHelper.Command="{StaticResource ScrollDownCommandProvider}"
                dxi:RoutedCommandHelper.CommandTarget="{Binding ElementName=Scroller}"
                Focusable="{Binding Path=NavBar.View.Focusable}"
                Interval="100"
                Orientation="{Binding Path=NavBar.View.Orientation}"
                Template="{TemplateBinding ButtonDownTemplate}"
                dxnp:XPFDockPanel.Dock="Bottom" />
            <dxn:NavBarSmoothScroller
                x:Name="Scroller"
                ButtonDown="{Binding ElementName=Down}"
                ButtonUp="{Binding ElementName=Up}"
                Orientation="{TemplateBinding Orientation}"
                ScrollSpeed="{Binding Path=NavBar.View.(dxn:ScrollingSettings.ScrollSpeed)}"
                dxnp:XPFDockPanel.Dock="Top">
                <dxn:NavBarSmoothScroller.IsManipulationEnabled>
                    <Binding Path="NavBar.View.(dxn:ScrollingSettings.IsManipulationEnabled)" />
                </dxn:NavBarSmoothScroller.IsManipulationEnabled>
                <dxn:NavBarSmoothScroller.Acceleration>
                    <Binding Path="NavBar.View.(dxn:ScrollingSettings.AccelerationRatio)" />
                </dxn:NavBarSmoothScroller.Acceleration>
                <dxn:NavBarSmoothScroller.Deceleration>
                    <Binding Path="NavBar.View.(dxn:ScrollingSettings.DecelerationRatio)" />
                </dxn:NavBarSmoothScroller.Deceleration>
                <ContentPresenter x:Name="contentPresenter" />
            </dxn:NavBarSmoothScroller>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="OrientationStates">
                    <VisualState Name="Vertical" />
                    <VisualState Name="Horizontal">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Up" Storyboard.TargetProperty="(dxnp:XPFDockPanel.Dock)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Dock>Left</Dock>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Down" Storyboard.TargetProperty="(dxnp:XPFDockPanel.Dock)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Dock>Right</Dock>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="AllowScrollStates">
                    <VisualState Name="AllowScrollFalse">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Up" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Down" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="AllowScrollTrue" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </dxnp:XPFDockPanel>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=NavBar.View.NavBarViewKind}" Value="ExplorerBar" />
            <DataTrigger Binding="{Binding Path=NavBar.View.NavBarViewKind}" Value="NavigationPane" />
            <DataTrigger Binding="{Binding Path=NavBar.View.NavBarViewKind}" Value="SideBar" />
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxnt:LWKey CommonElements.ScrollessContentControlTemplate}" TargetType="dxn:ScrollableContentControl">
        <ContentPresenter x:Name="contentPresenter" />
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=NavBar.View.NavBarViewKind}" Value="ExplorerBar" />
            <DataTrigger Binding="{Binding Path=NavBar.View.NavBarViewKind}" Value="NavigationPane" />
            <DataTrigger Binding="{Binding Path=NavBar.View.NavBarViewKind}" Value="SideBar" />
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion Base\NavBar\Base\ScrollableContent.xaml-->

    <!--#region Base\NavBar\Base\Header.xaml-->
    <!-- General -->

    <DataTemplate x:Key="{dxnt:LWKey CommonElements.HeaderTemplate}">
        <dxn:ImageAndTextDecorator
            x:Name="groupContent"
            ContentSource="{Binding Path=Header}"
            ContentStyle="{DynamicResource {dxnt:LWKey NavBarGroupControl.GroupTextStyle}}"
            DisplayModeImageMargin="3"
            DisplayModeTextMargin="3"
            DockingBottomContentMargin="3"
            DockingBottomImageMargin="3,-3,3,3"
            DockingLeftContentMargin="3"
            DockingLeftImageMargin="3,3,0,3"
            DockingRightContentMargin="3"
            DockingRightImageMargin="0,3,3,3"
            DockingTopContentMargin="3"
            DockingTopImageMargin="3,3,3,-3"
            ImageDocking="{Binding Path=(dxn:NavBarViewBase.LayoutSettings).ImageDocking, RelativeSource={RelativeSource TemplatedParent}}"
            ImageFallbackSize="24"
            ImageSource="{Binding Path=ImageSource}"
            ImageStyle="{DynamicResource {dxnt:LWKey NavBarGroupControl.GroupImageStyle}}" />
        <DataTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="ImageFallbackSize" TargetName="groupContent" Value="48" />
                <Setter Property="DockingLeftImageMargin" TargetName="groupContent" Value="8,6,0,6" />
                <Setter Property="DockingLeftContentMargin" TargetName="groupContent" Value="8,6" />
                <Setter Property="DockingRightImageMargin" TargetName="groupContent" Value="0,6,8,6" />
                <Setter Property="DockingRightContentMargin" TargetName="groupContent" Value="8,6" />
                <Setter Property="DockingBottomImageMargin" TargetName="groupContent" Value="8,-6,8,6" />
                <Setter Property="DockingBottomContentMargin" TargetName="groupContent" Value="8,6" />
                <Setter Property="DockingTopImageMargin" TargetName="groupContent" Value="8,6,8,-6" />
                <Setter Property="DockingTopContentMargin" TargetName="groupContent" Value="8,6" />
                <Setter Property="DisplayModeImageMargin" TargetName="groupContent" Value="8,6" />
                <Setter Property="DisplayModeTextMargin" TargetName="groupContent" Value="8,6" />
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <ControlTemplate x:Key="{dxnt:LWKey CommonElements.GroupHeaderTemplate}" TargetType="dxn:NavBarGroupHeader">
        <Grid x:Name="Root" Background="Transparent" MinHeight="32">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <dxn:ImageAndTextContentPresenter
                x:Name="groupHeaderLabel"
                Grid.Column="0"
                Content="{Binding Converter={dxn:FrameworkElementInfoSLCompatibilityConverter ConvertToInfo=True}}"
                Foreground="{TemplateBinding Foreground}"
                ImageFallbackSize="24"
                Style="{DynamicResource {dxnt:LWKey NavBarGroupControl.HeaderStyle}}" />
            <dx:PixelSnapper Grid.Column="1" Margin="8,2">
                <Grid>
                    <dxn:ExplorerBarExpandButton x:Name="explorerBarExpandButton" dxi:RoutedCommandHelper.CommandParameter="{Binding}" />
                    <dxn:NavPaneExpandButton x:Name="navPaneExpandButton" dxi:RoutedCommandHelper.CommandParameter="{Binding}" Visibility="Collapsed" />
                </Grid>
            </dx:PixelSnapper>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" TargetName="Root" Value="44" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion Base\NavBar\Base\Header.xaml-->

    <!--#region Base\NavBar\Base\Item.xaml-->
    <!-- General -->

    <ControlTemplate x:Key="{dxnt:LWKey CommonElements.ItemBorderTemplate}" TargetType="{x:Type ContentControl}">
        <Grid x:Name="Root" Margin="{dx:LWThickness '0, Win11=(0,0,0,1)'}">
            <dx:DXBorder
                x:Name="IsDefault"
                Background="Transparent"
                BorderBrush="Transparent"
                BorderThickness="1"
                CornerRadius="{dx:LWCornerRadius '0, Win11=4'}"/>
            <dxn:ItemForegroundWrapper x:Name="wrapper" Owner="{Binding RelativeSource={RelativeSource TemplatedParent}}" OwnerForeground="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
            <ContentPresenter x:Name="item" Margin="{dx:LWThickness '0, Win11=(4,2,4,3)'}" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                    <VisualState Name="Normal" />
                    <VisualState Name="MouseOverState">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.HoverBackground, VS2019Blue=Color.ControlLight.HoverBackground, Win11=Color.ListItem.HoverBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.HoverBorder, VS2019Blue=Color.ControlLight.HoverBorder, Win11=Color.ListItem.HoverBorder'}" />
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="wrapper" Storyboard.TargetProperty="OwnerForeground">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="{dx:LWColor 'Color.HoverForeground, Office2019Black=Color.Foreground, Win11=Color.Foreground.Primary'}" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="PressedState">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.SelectionBackground, VS2019Blue=Color.ControlLight.SelectionBackground, Win11=Color.ListItem.SelectionBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.SelectionBorder, VS2019Blue=Color.ControlLight.SelectionBorder, Win11=Color.ListItem.SelectionBorder'}" />
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="wrapper" Storyboard.TargetProperty="OwnerForeground">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="{dx:LWColor 'Color.SelectionForeground, Office2019Black=Color.Foreground, Win11=Color.Foreground.Primary'}" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="DisabledStates">
                    <VisualState x:Name="EnabledState" />
                    <VisualState x:Name="DisabledState">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.38" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="SelectedStates">
                    <VisualState x:Name="Unselected" />
                    <VisualState x:Name="Selected">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.SelectionBackground, VS2019Blue=Color.ControlLight.SelectionBackground, Win11=Color.ListItem.SelectionBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.SelectionBorder, VS2019Blue=Color.ControlLight.SelectionBorder, Win11=Color.ListItem.SelectionBorder'}" />
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="wrapper" Storyboard.TargetProperty="OwnerForeground">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="{dx:LWColor 'Color.SelectionForeground, Office2019Black=Color.Foreground, Win11=Color.Foreground.Primary'}" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <!-- Resources -->

    <Style x:Key="{dxnt:LWKey CommonElements.ItemContentDecoratorStyle}" TargetType="{x:Type dxn:ImageAndTextDecorator}">
        <Setter Property="DisplayModeImageMargin" Value="3" />
        <Setter Property="DisplayModeTextMargin" Value="3" />
        <Setter Property="DockingBottomContentMargin" Value="3" />
        <Setter Property="DockingBottomImageMargin" Value="3,-3,3,3" />
        <Setter Property="DockingLeftContentMargin" Value="3" />
        <Setter Property="DockingLeftImageMargin" Value="3,3,0,3" />
        <Setter Property="DockingRightContentMargin" Value="3" />
        <Setter Property="DockingRightImageMargin" Value="0,3,3,3" />
        <Setter Property="DockingTopContentMargin" Value="3" />
        <Setter Property="DockingTopImageMargin" Value="3,3,3,-3" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="DisplayModeImageMargin" Value="14" />
                <Setter Property="DisplayModeTextMargin" Value="14" />
                <Setter Property="DockingBottomContentMargin" Value="14" />
                <Setter Property="DockingBottomImageMargin" Value="14,-14,14,14" />
                <Setter Property="DockingLeftContentMargin" Value="14" />
                <Setter Property="DockingLeftImageMargin" Value="14,14,0,14" />
                <Setter Property="DockingRightContentMargin" Value="14" />
                <Setter Property="DockingRightImageMargin" Value="0,14,14,14" />
                <Setter Property="DockingTopContentMargin" Value="14" />
                <Setter Property="DockingTopImageMargin" Value="14,14,14,-14" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Item -->

    <ControlTemplate x:Key="{dxnt:LWKey CommonElements.NavBarGroupItemsControlTemplate}" TargetType="{x:Type dxn:NavBarGroupItemsControl}">
        <ItemsPresenter />
    </ControlTemplate>

    <ControlTemplate x:Key="{dxnt:LWKey CommonElements.GroupItemsContainerTemplate}" TargetType="dxn:GroupItemsContainer">
        <Grid x:Name="Root">
            <dx:LayoutTransformPanel Orientation="{Binding Path=NavBar.View.Orientation}">
                <dx:DXBorder x:Name="Border" HorizontalAlignment="Stretch" />
            </dx:LayoutTransformPanel>
            <dxn:ScrollControl
                x:Name="scrollControl"
                dx:FocusHelper2.Focusable="False"
                ScrollBarControlTemplate="{DynamicResource {dxnt:LWKey CommonElements.NormalScrollTemplate}}"
                ScrollButtonsControlTemplate="{DynamicResource {dxnt:LWKey CommonElements.SmoothScrollTemplate}}"
                ScrollViewer.HorizontalScrollBarVisibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=NavBarViewKind, Converter={StaticResource NavBarViewKindToScrollBarVisibilityConverter}}">
                <dx:LayoutTransformPanel Orientation="{Binding Path=NavBar.View.Orientation}">
                    <ContentPresenter x:Name="Content" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                </dx:LayoutTransformPanel>
            </dxn:ScrollControl>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="ExplorerBarItemsOrContentEmptyStates">
                    <VisualState Name="ExplorerBarItemsOrContentNotEmpty" />
                    <VisualState Name="ExplorerBarItemsOrContentEmpty">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="Border" Storyboard.TargetProperty="Height">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <sys:Double>30</sys:Double>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>
    <!--#endregion Base\NavBar\Base\Item.xaml-->

    <!--#region Base\NavBar\Base\NavigationPane\HeaderStyle.xaml-->
    <!-- General -->

    <Style x:Key="{dxnt:LWKey NavigationPaneHeader.OverflowButtonHeaderStyle}" TargetType="dx:XPFContentPresenter">
        <Setter Property="dxn:NavBarViewBase.DisplayMode" Value="{Binding ActualDisplayMode}" />
        <Setter Property="dxn:NavBarViewBase.ImageSettings" Value="{Binding ActualImageSettings}" />
        <Setter Property="dxn:NavBarViewBase.LayoutSettings" Value="{Binding ActualLayoutSettings}" />
    </Style>

    <Style x:Key="{dxnt:LWKey NavigationPaneHeader.GroupButtonHeaderStyle}" TargetType="dx:XPFContentPresenter">
        <Setter Property="dxn:NavBarViewBase.DisplayMode" Value="{Binding ActualDisplayMode}" />
        <Setter Property="dxn:NavBarViewBase.ImageSettings" Value="{Binding ActualImageSettings}" />
        <Setter Property="dxn:NavBarViewBase.LayoutSettings" Value="{Binding ActualLayoutSettings}" />
    </Style>
    <!--#endregion Base\NavBar\Base\NavigationPane\HeaderStyle.xaml-->

    <!--#region Base\NavBar\Base\NavigationPane\ScrollButtons.xaml-->
    <!-- General -->

    <ControlTemplate x:Key="{dxnt:LWKey NavigationPanePopup.ScrollUpButtonTemplate}" TargetType="dxn:NavBarRepeatButton">
        <dx:LayoutTransformPanel x:Name="Root" Orientation="{TemplateBinding Orientation}">
            <dx:DXBorder
                Background="Transparent"
                BorderBrush="{StaticResource Brush.Border}"
                BorderThickness="0,0,0,1"
                Padding="4">
                <Path x:Name="Path" Style="{StaticResource UIShape.Up}" />
            </dx:DXBorder>
        </dx:LayoutTransformPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" TargetName="Path" Value="1" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" TargetName="Path" Value="1" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="Root" Value="0.38" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" TargetName="Root" Value="44" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxnt:LWKey NavigationPanePopup.ScrollDownButtonTemplate}" TargetType="dxn:NavBarRepeatButton">
        <dx:LayoutTransformPanel x:Name="Root" Orientation="{TemplateBinding Orientation}">
            <dx:DXBorder
                Background="Transparent"
                BorderBrush="{StaticResource Brush.Border}"
                BorderThickness="0,1,0,0"
                Padding="4">
                <Path x:Name="Path" Style="{StaticResource UIShape.Down}" />
            </dx:DXBorder>
        </dx:LayoutTransformPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" TargetName="Path" Value="1" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" TargetName="Path" Value="1" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="Root" Value="0.38" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" TargetName="Root" Value="44" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion Base\NavBar\Base\NavigationPane\ScrollButtons.xaml-->

    <!--#region Base\NavBar\Base\NavigationPane\Popup.xaml-->
    <!-- General -->

    <ControlTemplate x:Key="{dxnt:LWKey NavigationPanePopup.PopupSideThumbTemplate}" TargetType="dxn:NavPanePopupSizeGrip">
        <dx:DXBorder Background="Transparent" />
    </ControlTemplate>

    <Style x:Key="{dxnt:LWKey NavigationPanePopup.PopupSideThumbStyle}" TargetType="dxn:NavPanePopupSizeGrip">
        <Setter Property="Cursor" Value="SizeWE" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Width" Value="3" />
    </Style>

    <!-- Size Grip -->

    <ControlTemplate x:Key="{dxnt:LWKey NavigationPanePopup.SizeGripTemplate}" TargetType="dxn:NavPanePopupSizeGrip">
        <Path Margin="3" Style="{StaticResource UIShape.SizeGrip}" />
    </ControlTemplate>

    <Style x:Key="{dxnt:LWKey NavigationPanePopup.SizeGripStyle}" TargetType="dxn:NavPanePopupSizeGrip">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="SizeWE" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Width" Value="Auto" />
    </Style>

    <!-- Popup -->

    <ControlTemplate x:Key="{dxnt:LWKey NavigationPanePopup.PopupWindowFrameTemplate}" TargetType="dxn:NavPanePopupWindowFrame">
        <dx:DXBorder
            x:Name="Root"
            Background="{StaticResource Brush.Editor.Background}"
            BorderBrush="{StaticResource Brush.Border}"
            BorderThickness="1">
            <ContentPresenter />
        </dx:DXBorder>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" TargetName="Root" Value="44" />
                <Setter Property="MinWidth" TargetName="Root" Value="44" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxnt:LWKey NavigationPanePopup.PopupWindowContentTemplate}" TargetType="{x:Type dxn:NavPanePopupWindowContent}">
        <dxn:NavPanePopupWindowFrame>
            <Grid Margin="1">
                <dxn:ScrollControl
                    x:Name="scrollControl"
                    dx:FocusHelper2.Focusable="False"
                    ScrollBarControlTemplate="{DynamicResource {dxnt:LWKey CommonElements.NormalScrollTemplate}}"
                    ScrollButtonsControlTemplate="{DynamicResource {dxnt:LWKey NavigationPanePopup.SmoothScrollTemplate}}">
                    <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                </dxn:ScrollControl>
                <dxn:NavPanePopupSizeGrip Style="{DynamicResource {dxnt:LWKey NavigationPanePopup.SizeGripStyle}}" Template="{DynamicResource {dxnt:LWKey NavigationPanePopup.SizeGripTemplate}}" />
            </Grid>
        </dxn:NavPanePopupWindowFrame>
    </ControlTemplate>
    <!--#endregion Base\NavBar\Base\NavigationPane\Popup.xaml-->



    <!--#region Base\NavBar\Base\NavigationPane\Item.xaml-->
    <!-- Resources -->

    <!-- NOTE. Uznat' ispolzuetysa li gde -->

    <Style x:Key="{dxnt:LWKey NavigationPane.ItemBackgroundStyle}" TargetType="dxn:CollapsedActiveGroupItemContentPresenter">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxn:CollapsedActiveGroupItemContentPresenter">
                    <Grid x:Name="Root">
                        <dx:DXBorder x:Name="IsDefault" Background="Transparent" />
                        <ContentPresenter />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.HoverBackground, Win11=Brush.ListItem.HoverBackground'}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.SelectionBackground, Win11=Brush.ListItem.SelectionBackground'}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.SelectionBackground, Win11=Brush.ListItem.SelectionBackground'}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="Root" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion Base\NavBar\Base\NavigationPane\Item.xaml-->

    <!--#region Base\NavBar\Base\NavigationPane\Group.xaml-->
    <!-- General -->

    <ControlTemplate x:Key="{dxnt:LWKey NavigationPane.CollapsedActiveGroupBackgroundTemplate}" />

    <ControlTemplate x:Key="{dxnt:LWKey NavigationPaneGroupClient.CollapsedActiveGroupTemplate}" TargetType="ToggleButton">
        <Grid x:Name="Root">
            <dx:DXBorder x:Name="IsDefault" Background="Transparent" VerticalAlignment="Stretch" />
            <dxn:ImageAndTextContentPresenter
                x:Name="content"
                Content="{Binding Converter={dxn:FrameworkElementInfoSLCompatibilityConverter}}"
                Foreground="{TemplateBinding Foreground}"
                HorizontalAlignment="Center"
                ImageFallbackSize="24"
                Orientation="{Binding NavBar.View.Orientation}"
                Style="{DynamicResource {dxnt:LWKey NavBarGroupControl.HeaderStyle}}"
                VerticalAlignment="Center" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                    <VisualState Name="Normal" />
                    <VisualState Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.HoverBackground, Office2019Black=#00000000, Office2019Colorful=#00000000, Office2019HighContrast=#00000000, VS2019Blue=Color.ControlLight.HoverBackground, Win11=Color.ListItem.HoverBackground'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="Pressed">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.SelectionBackground, Office2019Black=#00000000, Office2019Colorful=#00000000, Office2019HighContrast=#00000000, VS2019Blue=Color.ControlLight.SelectionBackground, Win11=Color.ListItem.SelectionBackground'}" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="ForegroundStates">
                    <VisualState Name="NormalForeground" />
                    <VisualState Name="CustomForeground" />
                </VisualStateGroup>
                <VisualStateGroup Name="OrientationStates">
                    <VisualState Name="Vertical" />
                    <VisualState Name="Horizontal" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" TargetName="Root" Value="44" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <DataTemplate x:Key="{dxnt:LWKey NavigationPaneButtonPanel.GroupContentTemplate}">
        <Grid>
            <dx:MeasurePixelSnapperContentControl
                Content="Wg"
                dx:FocusHelper2.Focusable="False"
                SnapperType="Around"
                Style="{DynamicResource {dxnt:LWKey NavBarGroupControl.GroupTextStyle}}"
                Width="0" />
            <dxn:NavPaneImageAndTextDecorator
                x:Name="groupButtonContent"
                ContentSource="{Binding Path=Header}"
                ContentStyle="{DynamicResource {dxnt:LWKey NavBarGroupControl.GroupTextStyle}}"
                DockingBottomContentMargin="3"
                DockingBottomImageMargin="3"
                DockingLeftContentMargin="3"
                DockingLeftImageMargin="3"
                DockingRightContentMargin="6"
                DockingRightImageMargin="3"
                DockingTopContentMargin="3"
                DockingTopImageMargin="3"
                GroupButtonCollapsedImageMargin="3"
                ImageDocking="{Binding Path=(dxn:NavBarViewBase.LayoutSettings).ImageDocking, RelativeSource={RelativeSource TemplatedParent}}"
                ImageFallbackSize="24"
                ImageSource="{Binding Path=ImageSource}"
                ImageStyle="{DynamicResource {dxnt:LWKey NavBarGroupControl.GroupImageStyle}}" />
        </Grid>
    </DataTemplate>

    <ControlTemplate x:Key="{dxnt:LWKey NavigationPaneButtonPanel.GroupTemplate}" TargetType="dxn:NavPaneGroupButton">
        <Grid x:Name="Root" Background="Transparent" MinHeight="32">
            <dx:DXBorder
                x:Name="IsDefault"
                Background="Transparent"
                BorderBrush="Transparent"
                BorderThickness="1"
                VerticalAlignment="Stretch" />
            <dxn:ImageAndTextContentPresenter
                x:Name="Content"
                Foreground="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ForegroundDark, Win11=Brush.Foreground.Primary'}"
                ImageFallbackSize="24"
                Style="{DynamicResource {dxnt:LWKey NavigationPaneHeader.GroupButtonHeaderStyle}}" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                    <VisualState Name="Normal" />
                    <VisualState Name="IsMouseOver">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.HoverBackground, Office2019Black=#00000000, Office2019Colorful=#00000000, Office2019HighContrast=#00000000, VS2019Blue=Color.ControlLight.HoverBackground, Win11=Color.ListItem.HoverBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.HoverBorder, Office2019Black=#00000000, Office2019Colorful=#00000000, Office2019HighContrast=#00000000, VS2019Blue=Color.ControlLight.HoverBorder, Win11=Color.ListItem.HoverBorder'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.HoverForeground, Office2019Black=Color.Foreground, Office2019Colorful=Color.Focused, Office2019HighContrast=Color.Focused, Win11=Color.Foreground.Primary'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="IsPressed">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.SelectionBackground, Office2019Black=#00000000, Office2019Colorful=#00000000, Office2019HighContrast=#00000000, VS2019Blue=Color.ControlLight.SelectionBackground, Win11=Color.ListItem.SelectionBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.SelectionBorder, Office2019Black=#00000000, Office2019Colorful=#00000000, Office2019HighContrast=#00000000, VS2019Blue=Color.ControlLight.SelectionBorder, Win11=Color.ListItem.SelectionBorder'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.SelectionForeground, Office2019Black=Color.Foreground, Office2019Colorful=Color.Focused, Office2019HighContrast=Color.Focused, Win11=Color.Foreground.Primary'}" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="IsActiveStates">
                    <VisualState Name="IsActiveTrue">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.SelectionBackground, Office2019Black=#00000000, Office2019Colorful=#00000000, Office2019HighContrast=#00000000, VS2019Blue=Color.ControlLight.SelectionBackground, Win11=Color.ListItem.SelectionBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.SelectionBorder, Office2019Black=#00000000, Office2019Colorful=#00000000, Office2019HighContrast=#00000000, VS2019Blue=Color.ControlLight.SelectionBorder, Win11=Color.ListItem.SelectionBorder'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.SelectionForeground, Office2019Black=Color.Foreground, Office2019Colorful=Color.Focused, Office2019HighContrast=Color.Focused, Win11=Color.Foreground.Primary'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="IsActiveFalse" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="ExpandStates">
                    <VisualState x:Name="Expanded" />
                    <VisualState x:Name="Collapsed" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="OrientationStates">
                    <VisualState x:Name="Vertical" />
                    <VisualState x:Name="Horizontal" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=NavBar.View.IsExpanded}" Value="False">
                <Setter Property="ToolTip" Value="{Binding Path=Header}" />
            </DataTrigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" TargetName="Root" Value="44" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Panel -->

    <ControlTemplate x:Key="{dxnt:LWKey NavigationPaneButtonPanel.ButtonPanelTemplate}" TargetType="ContentControl">
        <dxn:NavPaneGroupButtonPanelContentPresenter />
    </ControlTemplate>
    <!--#endregion Base\NavBar\Base\NavigationPane\Group.xaml-->

    <!--#region Base\NavBar\Base\NavigationPane\Overflow.xaml-->
    <!-- General -->

    <ControlTemplate x:Key="{dxnt:LWKey NavigationPaneOverflowPanel.DefaultIconTemplate}" TargetType="dxn:NavPaneDefaultIcon">
        <Grid Height="20" Width="20">
            <Path Data="F1 M 0,4 16,4 16,20 0,20 0,4 Z M 4,0, 20,0 20,16 17,16 17,3 4,3 4,0 Z" Fill="{TemplateBinding Foreground}" Stretch="Fill" />
        </Grid>
    </ControlTemplate>

    <DataTemplate x:Key="{dxnt:LWKey NavigationPaneOverflowPanel.OverflowGroupContentTemplate}">
        <Grid x:Name="overflowGroupContent">
            <Grid.ToolTip>
                <Binding Path="Header" />
            </Grid.ToolTip>
            <Image
                x:Name="PART_Image"
                Source="{Binding Path=ImageSource}"
                Style="{DynamicResource {dxnt:LWKey NavBarGroupControl.OverflowGroupItemStyle}}"
                Visibility="{Binding Path=Source, RelativeSource={RelativeSource Mode=Self}, ConverterParameter=Collapsed, Converter={StaticResource SourceToVisibilityConverter}}" />
            <dxn:NavPaneDefaultIcon
                x:Name="defaultIcon"
                Height="{Binding Path=Height, ElementName=PART_Image}"
                Visibility="{Binding Path=Source, ElementName=PART_Image, ConverterParameter=Visible, Converter={StaticResource SourceToVisibilityConverter}}"
                Width="{Binding Path=Width, ElementName=PART_Image}" />
        </Grid>
        <DataTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" TargetName="overflowGroupContent" Value="44" />
                <Setter Property="MinWidth" TargetName="overflowGroupContent" Value="44" />
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <ControlTemplate x:Key="{dxnt:LWKey NavigationPaneOverflowPanel.OverflowGroupTemplate}" TargetType="Button">
        <Grid
            x:Name="Root"
            Background="Transparent"
            Margin="2"
            MinHeight="32"
            MinWidth="32">
            <dx:DXBorder
                x:Name="IsDefault"
                Background="Transparent"
                BorderBrush="Transparent"
                BorderThickness="1" />
            <dxn:ImageAndTextContentPresenter
                x:Name="Content"
                Foreground="{TemplateBinding Foreground}"
                ImageFallbackSize="24"
                Style="{DynamicResource {dxnt:LWKey NavigationPaneHeader.OverflowButtonHeaderStyle}}" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                    <VisualState Name="Normal" />
                    <VisualState Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.HoverBackground, Win11=Color.ListItem.HoverBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.HoverBorder, VS2019Blue=Color.HoverBackground, Win11=Color.ListItem.HoverBorder'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.HoverForeground, Office2019Colorful=Color.Focused, Office2019HighContrast=Color.Focused, VS2019Dark=Color.Focused, VS2019Light=Color.Focused, Win11=Color.Foreground.Primary'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="IsPressed">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.SelectionBackground, Win11=Color.ListItem.SelectionBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.SelectionBorder, VS2019Blue=Color.SelectionBackground, Win11=Color.ListItem.SelectionBorder'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.SelectionForeground, Office2019Black=Color.HoverForeground, Office2019Colorful=Color.Focused, Office2019HighContrast=Color.Focused, VS2019Dark=Color.Backstage.Focused, Win11=Color.Foreground.Primary'}" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxnt:LWKey NavigationPaneOverflowPanel.OverflowPanelTemplate}" TargetType="dxn:NavPaneOverflowPanel">
        <dx:LayoutTransformPanel Orientation="{Binding View.Orientation}">
            <dx:DXBorder
                x:Name="overflowPanelBorder"
                BorderBrush="{dx:LWBrush 'Brush.Delimiter, Office2019Black=Brush.Border, Office2019Colorful=Brush.Border, Office2019HighContrast=Brush.Border'}"
                BorderThickness="0,1,0,0"
                Margin="0,1,0,0">
                <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
            </dx:DXBorder>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="SplitterBehaviorStates">
                    <VisualState x:Name="WithSplitter" />
                    <VisualState x:Name="WithoutSplitter">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="1" Storyboard.TargetName="overflowPanelBorder" Storyboard.TargetProperty="Padding" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </dx:LayoutTransformPanel>
    </ControlTemplate>
    <!--#endregion Base\NavBar\Base\NavigationPane\Overflow.xaml-->


</ResourceDictionary>