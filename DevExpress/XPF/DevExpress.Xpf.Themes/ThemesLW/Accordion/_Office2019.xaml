<?xml version="1.0" encoding="utf-8" ?>
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:dxa="http://schemas.devexpress.com/winfx/2008/xaml/accordion"
    xmlns:dxat="http://schemas.devexpress.com/winfx/2008/xaml/accordion/themekeys"
    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxai="http://schemas.devexpress.com/winfx/2008/xaml/accordion/internal"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors">
    <ResourceDictionary.MergedDictionaries>
        <dxi:ThemeResourceDictionary Path="Accordion/_{ThemeName}.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <dxmvvm:ObjectToObjectConverter x:Key="FlipHorizontalConverter" DefaultTarget="1">
        <dxmvvm:MapItem Source="True" Target="-1" />
    </dxmvvm:ObjectToObjectConverter>
    <SolidColorBrush x:Key="{dxat:LWKey AccordionItem.ItemHeaderDefaultForeground}" Color="{StaticResource Color.Foreground}" />
    <SolidColorBrush x:Key="{dxat:LWKey AccordionItem.ItemHeaderHoverForeground}" Color="{StaticResource Color.HoverForeground}" />
    <SolidColorBrush x:Key="{dxat:LWKey AccordionItem.ItemHeaderPressedForeground}" Color="{StaticResource Color.SelectionForeground}" />
    <SolidColorBrush x:Key="{dxat:LWKey AccordionItem.ItemHeaderDisabledForeground}" Color="{StaticResource Color.Foreground}" />
    <SolidColorBrush x:Key="{dxat:LWKey AccordionItem.ItemHeaderFocusedForeground}" Color="{StaticResource Color.Foreground}" />
    <SolidColorBrush x:Key="{dxat:LWKey AccordionItem.ItemHeaderSelectedForeground}" Color="{StaticResource Color.SelectionForeground}" />
    <SolidColorBrush x:Key="{dxat:LWKey AccordionItem.ItemHeaderSelectedInactiveForeground}" Color="{StaticResource Color.SelectionForeground}" />
    <SolidColorBrush x:Key="{dxat:LWKey AccordionItem.RootItemHeaderDefaultForeground}" Color="{dx:LWColor 'Office2019Black=Color.ForegroundDark, Office2019Colorful=Color.Foreground, Office2019HighContrast=Color.Foreground'}" />
    <SolidColorBrush x:Key="{dxat:LWKey AccordionItem.RootItemHeaderHoverForeground}" Color="{dx:LWColor 'Office2019Black=Color.Foreground, Office2019Colorful=Color.Focused, Office2019HighContrast=Color.Focused'}" />
    <SolidColorBrush x:Key="{dxat:LWKey AccordionItem.RootItemHeaderPressedForeground}" Color="{dx:LWColor 'Office2019Black=Color.Foreground, Office2019Colorful=Color.Focused, Office2019HighContrast=Color.Focused'}" />
    <SolidColorBrush x:Key="{dxat:LWKey AccordionItem.RootItemHeaderDisabledForeground}" Color="{dx:LWColor 'Office2019Black=Color.ForegroundDark, Office2019Colorful=Color.Foreground, Office2019HighContrast=Color.Foreground'}" />
    <SolidColorBrush x:Key="{dxat:LWKey AccordionItem.RootItemHeaderFocusedForeground}" Color="{dx:LWColor 'Office2019Black=Color.Foreground, Office2019Colorful=Color.Focused, Office2019HighContrast=Color.Focused'}" />
    <SolidColorBrush x:Key="{dxat:LWKey AccordionItem.RootItemHeaderSelectedForeground}" Color="{dx:LWColor 'Office2019Black=Color.SelectionForeground, Office2019Colorful=Color.Focused, Office2019HighContrast=Color.Focused'}" />
    <SolidColorBrush x:Key="{dxat:LWKey AccordionItem.RootItemHeaderSelectedInactiveForeground}" Color="{dx:LWColor 'Office2019Black=Color.Foreground, Office2019Colorful=Color.Focused, Office2019HighContrast=Color.Focused'}" />
    <SolidColorBrush x:Key="{dxat:LWKey Accordion.Background}" Color="{StaticResource Color.Window.Background}" />
    <SolidColorBrush x:Key="{dxat:LWKey Accordion.BorderBrush}" Color="{StaticResource Color.Window.Background}" />
    <SolidColorBrush x:Key="{dxat:LWKey AccordionItem.TextForeground}" Color="{StaticResource Color.Foreground}" />
    <SolidColorBrush x:Key="{dxat:LWKey Accordion.SearchControlNullTextForeground}" Color="{dx:LWColor 'Office2019Black=Color.Foreground, Office2019Colorful=Color.Foreground, Office2019HighContrast=Color.AltForeground'}" Opacity="0.62" />
    <SolidColorBrush x:Key="{dxat:LWKey Accordion.SearchControlClearButtonFill}" Color="{StaticResource Color.Foreground}" />
    <SolidColorBrush x:Key="{dxat:LWKey Accordion.SearchControlSearchButtonFill}" Color="{StaticResource Color.Foreground}" />
    <SolidColorBrush x:Key="{dxat:LWKey Accordion.HeaderForeground}" Color="{StaticResource Color.Foreground}" />
    <ControlTemplate x:Key="{dxat:LWKey Accordion.CollapseButtonTemplate}" TargetType="ToggleButton">
        <Grid
            x:Name="Root"
            Background="Transparent"
            Height="{TemplateBinding Height}"
            Width="{TemplateBinding Width}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Unchecked">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Collapsed" Storyboard.TargetProperty="Opacity" To="0" />
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Expanded" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Collapsed" Storyboard.TargetProperty="Opacity" To="1" />
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Expanded" Storyboard.TargetProperty="Opacity" To="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Indeterminate" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{StaticResource Color.HoverBackground}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{StaticResource Color.HoverBorder}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="Expanded" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="{StaticResource Color.HoverForeground}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="Collapsed" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="{StaticResource Color.HoverForeground}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{StaticResource Color.SelectionBackground}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{StaticResource Color.SelectionBorder}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="Expanded" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="{StaticResource Color.SelectionForeground}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="Collapsed" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="{StaticResource Color.SelectionForeground}" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <dx:DXBorder
                x:Name="IsDefault"
                Background="Transparent"
                BorderBrush="Transparent"
                BorderThickness="1">
                <Grid>
                    <Path
                        x:Name="Collapsed"
                        Fill="{StaticResource Brush.Foreground}"
                        Opacity="0"
                        Style="{StaticResource UIShape.ArrowLeft}" />
                    <Path
                        x:Name="Expanded"
                        Fill="{dx:LWBrush 'Office2019Black=Brush.Backstage.Foreground, Office2019Colorful=Brush.Foreground, Office2019HighContrast=Brush.Foreground'}"
                        Opacity="0"
                        Style="{StaticResource UIShape.ArrowRight}" />
                </Grid>
            </dx:DXBorder>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxat:LWKey Accordion.DropDownMenuButtonTemplate}" TargetType="ToggleButton">
        <Grid
            x:Name="Root"
            Background="Transparent"
            MinHeight="32"
            MinWidth="32">
            <dx:DXBorder
                x:Name="IsDefault"
                Background="Transparent"
                BorderBrush="Transparent"
                BorderThickness="1" />
            <Path x:Name="Content" Fill="{StaticResource Brush.Foreground}" Style="{StaticResource UIShape.DropDownDots}" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                    <VisualState Name="Normal" />
                    <VisualState Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{StaticResource Color.HoverBackground}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{StaticResource Color.HoverBorder}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="{StaticResource Color.HoverForeground}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="Pressed">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{StaticResource Color.SelectionBackground}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{StaticResource Color.SelectionBorder}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="{StaticResource Color.SelectionForeground}" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" TargetName="Root" Value="44" />
                <Setter Property="MinWidth" TargetName="Root" Value="44" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <sys:Double x:Key="{dxat:LWKey AccordionItem.RootItemHeaderFontSize}">16</sys:Double>
    <FontWeight x:Key="{dxat:LWKey AccordionItem.RootItemHeaderFontWeight}">Normal</FontWeight>
    <sys:Double x:Key="{dxat:LWKey Accordion.HeaderFontSize}">16</sys:Double>
    <FontWeight x:Key="{dxat:LWKey Accordion.HeaderFontWeight}">Normal</FontWeight>
    <Thickness x:Key="Accordion.PopupWindowFrame.Margin">0,0,5,5</Thickness>
    <sys:Double x:Key="Accordion.PopupWindowFrame.Opacity">0.14</sys:Double>
    <FontWeight x:Key="{dxat:LWKey Accordion.CollapsedItemFontWeight}">Bold</FontWeight>
    <sys:Double x:Key="{dxat:LWKey AccordionItem.ItemExpandButtonSize}">14</sys:Double>
    <sys:Double x:Key="{dxat:LWKey AccordionItem.ExpandButtonContainerMinWidth}">18</sys:Double>
    <Thickness x:Key="{dxat:LWKey AccordionItem.HeaderElementsMargin}">3,3,0,3</Thickness>
    <Thickness x:Key="{dxat:LWKey Accordion.SearchControlMargin}">8,4,8,4</Thickness>
    <Thickness x:Key="{dxat:LWKey AccordionItem.ItemHeaderMargin}">3,0,3,0</Thickness>
    <Thickness x:Key="{dxat:LWKey AccordionItem.CollapsedItemGlyphMargin}">3,0,3,0</Thickness>
    <Thickness x:Key="{dxat:LWKey Accordion.CollapseButtonCheckedMargin}">7</Thickness>
    <Thickness x:Key="{dxat:LWKey AccordionItem.RootItemHeaderMargin}">4,0,4,0</Thickness>
    <dxa:ExpandButtonPosition x:Key="{dxat:LWKey Accordion.DefaultSubItemExpandButtonPosition}">Left</dxa:ExpandButtonPosition>
    <ControlTemplate x:Key="{dxat:LWKey AccordionItem.SelectionIndicatorTemplate}" TargetType="{x:Type dxa:AccordionItemBackgroundControl}">
        <dx:DXBorder Visibility="Collapsed" />
    </ControlTemplate>
    <ControlTemplate x:Key="{dxat:LWKey Accordion.PopupWindowFrameTemplate}" TargetType="ContentControl">
        <Grid x:Name="Root">
            <dx:DXBorder Background="{StaticResource Brush.Control.Background}" Margin="{StaticResource Accordion.PopupWindowFrame.Margin}">
                <dx:DXBorder.Effect>
                    <DropShadowEffect
                        x:Name="Shadow"
                        BlurRadius="4"
                        Direction="315"
                        Opacity="{StaticResource Accordion.PopupWindowFrame.Opacity}"
                        ShadowDepth="3" />
                </dx:DXBorder.Effect>
            </dx:DXBorder>
            <dx:DXBorder
                Background="{StaticResource Brush.Control.Background}"
                BorderBrush="{StaticResource Brush.Border}"
                BorderThickness="1"
                Margin="0,0,5,5">
                <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
            </dx:DXBorder>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxat:LWKey Accordion.SplitterTemplate}" TargetType="dxa:AccordionSplitter">
        <Grid x:Name="Root" Background="Transparent">
            <Path
                x:Name="Content"
                Fill="{StaticResource Brush.Foreground}"
                Margin="8"
                Style="{StaticResource UIShape.SizeGrip.Horizontal}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill" TargetName="Content" Value="{StaticResource Brush.Focused}" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" TargetName="Root" Value="44" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>