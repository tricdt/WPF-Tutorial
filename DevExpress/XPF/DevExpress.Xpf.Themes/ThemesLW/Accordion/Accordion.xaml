<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:dxa="http://schemas.devexpress.com/winfx/2008/xaml/accordion"
    xmlns:dxat="http://schemas.devexpress.com/winfx/2008/xaml/accordion/themekeys"
    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
    xmlns:cs="colorscheme_ignorable_uri"
    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxai="http://schemas.devexpress.com/winfx/2008/xaml/accordion/internal"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    mc:Ignorable="cs">

    <ResourceDictionary.MergedDictionaries>
        <dxi:ThemeResourceDictionary Path="Accordion/_{ThemeCategory}.xaml" />
        <dxi:ThemeResourceDictionary Path="Accordion/Generic.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Accordion\Base\UICustom.xaml-->
    <!-- General -->

    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Accordion\Base\UICustom.xaml-->
    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Accordion\Base\UIPreset.xaml-->
    <sys:Double x:Key="{dxat:LWKey AccordionItem.RootItemExpandButtonSize}">17</sys:Double>
    <sys:Double x:Key="{dxat:LWKey AccordionItem.RootItemHeaderHeight}">32</sys:Double>
    <sys:Double x:Key="{dxat:LWKey AccordionItem.DisabledItemOpacity}">0.38</sys:Double>
    <sys:Double x:Key="{dxat:LWKey AccordionItem.ItemHeaderFontSize}">12</sys:Double>
    <sys:Double x:Key="{dxat:LWKey AccordionItem.ItemHeaderHeight}">22</sys:Double>
    <sys:Double x:Key="{dxat:LWKey AccordionItem.ItemOffset}">18</sys:Double>
    <Thickness x:Key="{dxat:LWKey AccordionItem.RootItemContainerMargin}">0</Thickness>
    <Thickness x:Key="{dxat:LWKey AccordionItem.ItemHeaderContainerMargin}">0</Thickness>
    <FontWeight x:Key="{dxat:LWKey AccordionItem.ItemHeaderFontWeight}">Normal</FontWeight>
    <Thickness x:Key="{dxat:LWKey Accordion.BorderThickness}">0</Thickness>
    <Thickness x:Key="{dxat:LWKey Accordion.CollapseButtonMargin}">7</Thickness>
    <sys:Double x:Key="{dxat:LWKey Accordion.SearchControlMinHeight}">23</sys:Double>
    <Thickness x:Key="{dxat:LWKey Accordion.OverflowItemMargin}">0,0,1,1</Thickness>
    <Thickness x:Key="{dxat:LWKey Accordion.OverflowBackgroundPadding}">0,1,0,0</Thickness>
    <sys:Double x:Key="{dxat:LWKey Accordion.CollapsedItemFontSize}">12</sys:Double>
    <sys:Double x:Key="{dxat:LWKey Accordion.SearchControlFontSize}">12</sys:Double>

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Accordion\Base\Item.xaml-->
    <!-- Item -->

    <ControlTemplate x:Key="{dxat:LWKey AccordionItem.ItemBackgroundTemplate}" TargetType="dxa:AccordionItemBackgroundControl">
        <Grid x:Name="Root">
            <dx:DXBorder
                x:Name="IsDefault"
                Background="Transparent"
                BorderBrush="Transparent"
                BorderThickness="1"
                CornerRadius="{dx:LWCornerRadius '0, Win11=3'}"
                Margin="{dx:LWThickness '0, Win11=(5,1)'}" />
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ItemType" Value="SubItem" />
                    <Condition Property="ItemState" Value="Default" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="IsDefault" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" />
                <Setter Property="BorderBrush" TargetName="IsDefault" Value="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                <Setter Property="BorderThickness" TargetName="IsDefault" Value="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ItemType" Value="SubItem" />
                    <Condition Property="ItemState" Value="Hover" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.HoverBackground, VS2019Blue=Brush.ControlLight.HoverBackground, Win11=Brush.ListItem.HoverBackground'}" />
                <Setter Property="BorderBrush" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.HoverBorder, VS2019Blue=Brush.ControlLight.HoverBorder, Win10Dark=Brush.HoverBackground, Win10Light=Brush.HoverBackground, Win11=Brush.ListItem.HoverBorder'}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ItemType" Value="SubItem" />
                    <Condition Property="ItemState" Value="Pressed" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.SelectionBackground, VS2019Blue=Brush.ControlLight.SelectionBackground, Win11=Brush.ListItem.SelectionBackground'}" />
                <Setter Property="BorderBrush" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.SelectionBorder, VS2019Blue=Brush.ControlLight.SelectionBorder, Win11=Brush.ListItem.SelectionBorder'}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ItemType" Value="SubItem" />
                    <Condition Property="ItemState" Value="Selected" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.SelectionBackground, VS2019Blue=Brush.ControlLight.SelectionBackground, Win11=Brush.ListItem.SelectionBackground'}" />
                <Setter Property="BorderBrush" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.SelectionBorder, VS2019Blue=Brush.ControlLight.SelectionBorder, Win11=Brush.ListItem.SelectionBorder'}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ItemType" Value="SubItem" />
                    <Condition Property="ItemState" Value="SelectedInactive" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.HoverBackground, VS2019Blue=Brush.Unfocused, Win10Dark=Brush.Item.FadeSelection, Win10Light=Brush.Item.FadeSelection, Win11=Brush.ListItem.HoverBackground'}" />
                <Setter Property="BorderBrush" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.HoverBorder, VS2019Blue=Brush.Unfocused, Win10Dark=Brush.Item.FadeSelection, Win10Light=Brush.Item.FadeSelection, Win11=Brush.ListItem.HoverBorder'}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ItemType" Value="SubItem" />
                    <Condition Property="ItemState" Value="Disabled" />
                </MultiTrigger.Conditions>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ItemType" Value="RootItem" />
                    <Condition Property="ItemState" Value="Default" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="IsDefault" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" />
                <Setter Property="BorderBrush" TargetName="IsDefault" Value="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                <Setter Property="BorderThickness" TargetName="IsDefault" Value="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ItemType" Value="RootItem" />
                    <Condition Property="ItemState" Value="Hover" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.HoverBackground, Office2019Black=#00000000, Office2019Colorful=#00000000, Office2019HighContrast=#00000000, VS2019Blue=Brush.ControlLight.HoverBackground, Win11=Brush.ListItem.HoverBackground'}" />
                <Setter Property="BorderBrush" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.HoverBorder, Office2019Black=#00000000, Office2019Colorful=#00000000, Office2019HighContrast=#00000000, VS2019Blue=Brush.ControlLight.HoverBorder, Win11=Brush.ListItem.HoverBorder'}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ItemType" Value="RootItem" />
                    <Condition Property="ItemState" Value="Pressed" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.SelectionBackground, Office2019Black=#00000000, Office2019Colorful=#00000000, Office2019HighContrast=#00000000, VS2019Blue=Brush.ControlLight.SelectionBackground, Win11=Brush.ListItem.SelectionBackground'}" />
                <Setter Property="BorderBrush" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.SelectionBorder, Office2019Black=#00000000, Office2019Colorful=#00000000, Office2019HighContrast=#00000000, VS2019Blue=Brush.ControlLight.SelectionBorder, Win11=Brush.ListItem.SelectionBorder'}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ItemType" Value="RootItem" />
                    <Condition Property="ItemState" Value="Selected" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.SelectionBackground, Office2019Black=#00000000, Office2019Colorful=#00000000, Office2019HighContrast=#00000000, VS2019Blue=Brush.ControlLight.SelectionBackground, Win11=Brush.ListItem.SelectionBackground'}" />
                <Setter Property="BorderBrush" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.SelectionBorder, Office2019Black=#00000000, Office2019Colorful=#00000000, Office2019HighContrast=#00000000, VS2019Blue=Brush.ControlLight.SelectionBorder, Win11=Brush.ListItem.SelectionBorder'}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ItemType" Value="RootItem" />
                    <Condition Property="ItemState" Value="SelectedInactive" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.HoverBackground, Office2019Black=#00000000, Office2019Colorful=#00000000, Office2019HighContrast=#00000000, VS2019Blue=Brush.ControlLight.HoverBackground, Win11=Brush.ListItem.HoverBackground'}" />
                <Setter Property="BorderBrush" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.HoverBorder, Office2019Black=#00000000, Office2019Colorful=#00000000, Office2019HighContrast=#00000000, VS2019Blue=Brush.ControlLight.HoverBorder, Win11=Brush.ListItem.HoverBorder'}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ItemType" Value="RootItem" />
                    <Condition Property="ItemState" Value="Disabled" />
                </MultiTrigger.Conditions>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Collapsed -->

    <ControlTemplate x:Key="{dxat:LWKey Accordion.CollapsedItemTemplate}" TargetType="{x:Type dxe:ListBoxEditItem}">
        <Grid x:Name="Root">
            <dx:DXBorder
                x:Name="IsDefault"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{dx:LWCornerRadius '0, Win11=4'}" />
            <ContentControl
                x:Name="Content"
                Focusable="False"
                FocusVisualStyle="{x:Null}"
                FontSize="{TemplateBinding FontSize}"
                FontWeight="{TemplateBinding FontWeight}"
                Foreground="{DynamicResource {dxat:LWKey AccordionItem.ItemHeaderDefaultForeground}}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                <ContentPresenter
                    x:Name="contentPresenter"
                    Height="Auto"
                    Margin="0"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    Width="Auto" />
            </ContentControl>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsKeyboardFocused, RelativeSource={RelativeSource Self}}" Value="True" />
                    <Condition Binding="{Binding Path=IsSingleItemVisible, RelativeSource={RelativeSource AncestorType=dxai:CollapsedAccordionVirtualizingPanel}, FallbackValue=False}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" TargetName="Content" Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
                <Setter Property="Background" TargetName="IsDefault" Value="Transparent" />
                <Setter Property="BorderBrush" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.Focused, Win11=Brush.Accent'}" />
                <Setter Property="BorderThickness" TargetName="IsDefault" Value="1" />
            </MultiDataTrigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" TargetName="Content" Value="{dx:LWBrush 'Brush.SelectionForeground, Win11=Brush.Foreground.Primary'}" />
                <Setter Property="Background" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.SelectionBackground, Win11=Brush.ListItem.SelectionBackground, VS2019Blue=Brush.ControlLight.SelectionBackground'}" />
                <Setter Property="BorderBrush" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.SelectionBorder, Win11=Brush.ListItem.SelectionBorder, VS2019Blue=Brush.ControlLight.SelectionBorder'}" />
                <Setter Property="BorderThickness" TargetName="IsDefault" Value="1" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="IsFocused" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" TargetName="Content" Value="{dx:LWBrush 'Brush.SelectionForeground, Win11=Brush.Foreground.Primary'}" />
                <Setter Property="Background" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.SelectionBackground, Win11=Brush.ListItem.SelectionBackground, VS2019Blue=Brush.Delimiter'}" />
                <Setter Property="BorderBrush" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.SelectionBorder, Win11=Brush.ListItem.SelectionBorder, VS2019Blue=Brush.Delimiter'}" />
                <Setter Property="Opacity" TargetName="IsDefault" Value="0.62" />
                <Setter Property="BorderThickness" TargetName="IsDefault" Value="1" />
            </MultiTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="False" />
                    <Condition Binding="{Binding Path=Owner.AllowItemHighlighting, RelativeSource={RelativeSource Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" TargetName="Content" Value="{dx:LWBrush 'Brush.HoverForeground, Win11=Brush.Foreground.Primary'}" />
                <Setter Property="Background" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.HoverBackground, Win11=Brush.ListItem.HoverBackground, VS2019Blue=Brush.ControlLight.HoverBackground'}" />
                <Setter Property="BorderBrush" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.HoverBorder, Win10=Brush.HoverBackground, Win11=Brush.ListItem.HoverBorder, VS2019Blue=Brush.ControlLight.HoverBorder'}" />
                <Setter Property="BorderThickness" TargetName="IsDefault" Value="1" />
            </MultiDataTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="Root" Value="0.38" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Remove duplicate
    <ControlTemplate x:Key="{dxat:LWKey Accordion.SplitterTemplate}" TargetType="dxa:AccordionSplitter">
        <Grid x:Name="Root"
              Background="Transparent">
            <Path x:Name="Content"
                  Fill="{StaticResource Brush.Foreground}"
                  Margin="8"
                  Style="{StaticResource UIShape.SizeGrip.Horizontal}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill"
                        TargetName="Content"
                        Value="{StaticResource Brush.Focused}"/>
                <Setter Property="Background"
                        TargetName="Root"
                        Value="Transparent"/>
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight"
                        TargetName="Root"
                        Value="44"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>-->

    <ControlTemplate x:Key="{dxat:LWKey Accordion.OverflowBackgroundTemplate}" TargetType="ContentControl">
        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <dx:DXBorder x:Name="Background" Background="{dx:LWBrush '#00000000, Office2019Black=Brush.Control.NeutralBackground, Office2019Colorful=Brush.Control.NeutralBackground, Win11=#00FFFFFF, Win10Dark=Brush.Control.NeutralBackground'}" Opacity="0.26" />
            <dx:DXBorder x:Name="IsDefault" BorderBrush="{dx:LWBrush 'Brush.Delimiter, Win10Dark=Brush.AltBorder'}" BorderThickness="0,1,0,0" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxat:LWKey Accordion.HeaderBackgroundTemplate}" TargetType="ContentControl">
        <dx:DXBorder Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <ContentPresenter/>
        </dx:DXBorder>
    </ControlTemplate>

    <!-- Remove duplicate
    <ControlTemplate x:Key="{dxat:LWKey Accordion.HeaderForeground}" TargetType="ContentControl">
        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <dx:DXBorder x:Name="overflowPanelBorder"
                    BorderBrush="{StaticResource Brush.Foreground}"
                    BorderThickness="0,1,0,0"/>
        </Grid>
    </ControlTemplate>-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Accordion\Base\Item.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Accordion\Base\PopupWindow.xaml-->
    <!-- General -->

    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Accordion\Base\PopupWindow.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Accordion\Base\Splitter.xaml-->
    <!-- General -->

    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Accordion\Base\Splitter.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Accordion\Base.xaml-->
    <!-- General -->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Accordion\Base.xaml-->


</ResourceDictionary>