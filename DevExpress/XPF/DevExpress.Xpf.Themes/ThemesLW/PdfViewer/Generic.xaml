<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
    xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys"
    xmlns:dxdo="http://schemas.devexpress.com/winfx/2008/xaml/docking"
    xmlns:dxdob="clr-namespace:DevExpress.Xpf.Docking.Base;assembly=DevExpress.Xpf.Docking.v24.1"
    xmlns:dxdove="http://schemas.devexpress.com/winfx/2008/xaml/docking/visualelements"
    xmlns:dxdv="http://schemas.devexpress.com/winfx/2008/xaml/documentviewer"
    xmlns:dxdvt="http://schemas.devexpress.com/winfx/2008/xaml/documentviewer/themekeys"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dxedp="clr-namespace:DevExpress.Xpf.Editors.DataPager;assembly=DevExpress.Xpf.Core.v24.1"
    xmlns:dxet="clr-namespace:DevExpress.Xpf.Editors.Themes;assembly=DevExpress.Xpf.Core.v24.1"
    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
    xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys"
    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
    xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol"
    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
    xmlns:dxpdf="clr-namespace:DevExpress.Xpf.PdfViewer;assembly=DevExpress.Xpf.PdfViewer.v24.1"
    xmlns:dxpdfd="clr-namespace:DevExpress.Pdf;assembly=DevExpress.Pdf.v24.1.Drawing"
    xmlns:dxpdfi="clr-namespace:DevExpress.Xpf.PdfViewer.Internal;assembly=DevExpress.Xpf.PdfViewer.v24.1"
    xmlns:dxpdft="clr-namespace:DevExpress.Xpf.PdfViewer.Themes;assembly=DevExpress.Xpf.PdfViewer.v24.1"
    xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon"
    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">


    <dxdv:CheckBarItemTemplateSelector x:Key="checkItemTemplateSelector" />
    <dxpdf:PdfCheckBarItemTemplateSelector x:Key="pdfCheckItemTemplateSelector" />
    <dxpdf:CustomBookmarkChildrenSelector x:Key="bookmarkSelector" />
    <sys:Boolean x:Key="TrueBoolean">True</sys:Boolean>
    <sys:Boolean x:Key="FalseBoolean">False</sys:Boolean>
    <dxpdf:CursorModeToCanMouseScrollConverter x:Key="cursorModeToCanMouseScrollConverter" />
    <dxpdf:CursorModeToSelectionVisibilityConverter x:Key="cursorModeToSelectionVisibilityConverter" />
    <dxpdf:DocumentHasPagesVisibilityConverter x:Key="DocumentHasPagesVisibilityConverter" />
    <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
    <dxmvvm:ObjectToObjectConverter x:Key="autoHideConverter">
        <dxmvvm:MapItem>
            <dxmvvm:MapItem.Source>
                <dxpdf:NavigationPanelsLayout>DockPanel</dxpdf:NavigationPanelsLayout>
            </dxmvvm:MapItem.Source>
            <dxmvvm:MapItem.Target>
                <dxdob:AutoHideMode>Default</dxdob:AutoHideMode>
            </dxmvvm:MapItem.Target>
        </dxmvvm:MapItem>
        <dxmvvm:MapItem>
            <dxmvvm:MapItem.Source>
                <dxpdf:NavigationPanelsLayout>Popup</dxpdf:NavigationPanelsLayout>
            </dxmvvm:MapItem.Source>
            <dxmvvm:MapItem.Target>
                <dxdob:AutoHideMode>Default</dxdob:AutoHideMode>
            </dxmvvm:MapItem.Target>
        </dxmvvm:MapItem>
        <dxmvvm:MapItem>
            <dxmvvm:MapItem.Source>
                <dxpdf:NavigationPanelsLayout>Tab</dxpdf:NavigationPanelsLayout>
            </dxmvvm:MapItem.Source>
            <dxmvvm:MapItem.Target>
                <dxdob:AutoHideMode>Inline</dxdob:AutoHideMode>
            </dxmvvm:MapItem.Target>
        </dxmvvm:MapItem>
    </dxmvvm:ObjectToObjectConverter>
    <dxmvvm:ObjectToObjectConverter x:Key="autoHideExpandStateConverter">
        <dxmvvm:MapItem>
            <dxmvvm:MapItem.Source>
                <dxpdf:PdfOutlinesViewerState>Collapsed</dxpdf:PdfOutlinesViewerState>
            </dxmvvm:MapItem.Source>
            <dxmvvm:MapItem.Target>
                <dxdob:AutoHideExpandState>Hidden</dxdob:AutoHideExpandState>
            </dxmvvm:MapItem.Target>
        </dxmvvm:MapItem>
        <dxmvvm:MapItem>
            <dxmvvm:MapItem.Source>
                <dxpdf:PdfOutlinesViewerState>Visible</dxpdf:PdfOutlinesViewerState>
            </dxmvvm:MapItem.Source>
            <dxmvvm:MapItem.Target>
                <dxdob:AutoHideExpandState>Visible</dxdob:AutoHideExpandState>
            </dxmvvm:MapItem.Target>
        </dxmvvm:MapItem>
        <dxmvvm:MapItem>
            <dxmvvm:MapItem.Source>
                <dxpdf:PdfOutlinesViewerState>Expanded</dxpdf:PdfOutlinesViewerState>
            </dxmvvm:MapItem.Source>
            <dxmvvm:MapItem.Target>
                <dxdob:AutoHideExpandState>Expanded</dxdob:AutoHideExpandState>
            </dxmvvm:MapItem.Target>
        </dxmvvm:MapItem>
    </dxmvvm:ObjectToObjectConverter>
    <dxmvvm:ObjectToObjectConverter x:Key="autoHideAttachmentsExpandStateConverter">
        <dxmvvm:MapItem>
            <dxmvvm:MapItem.Source>
                <dxpdf:PdfAttachmentsViewerState>Collapsed</dxpdf:PdfAttachmentsViewerState>
            </dxmvvm:MapItem.Source>
            <dxmvvm:MapItem.Target>
                <dxdob:AutoHideExpandState>Hidden</dxdob:AutoHideExpandState>
            </dxmvvm:MapItem.Target>
        </dxmvvm:MapItem>
        <dxmvvm:MapItem>
            <dxmvvm:MapItem.Source>
                <dxpdf:PdfAttachmentsViewerState>Visible</dxpdf:PdfAttachmentsViewerState>
            </dxmvvm:MapItem.Source>
            <dxmvvm:MapItem.Target>
                <dxdob:AutoHideExpandState>Visible</dxdob:AutoHideExpandState>
            </dxmvvm:MapItem.Target>
        </dxmvvm:MapItem>
        <dxmvvm:MapItem>
            <dxmvvm:MapItem.Source>
                <dxpdf:PdfAttachmentsViewerState>Expanded</dxpdf:PdfAttachmentsViewerState>
            </dxmvvm:MapItem.Source>
            <dxmvvm:MapItem.Target>
                <dxdob:AutoHideExpandState>Expanded</dxdob:AutoHideExpandState>
            </dxmvvm:MapItem.Target>
        </dxmvvm:MapItem>
    </dxmvvm:ObjectToObjectConverter>
    <dxmvvm:ObjectToObjectConverter x:Key="autoHideThumbnailsExpandStateConverter">
        <dxmvvm:MapItem>
            <dxmvvm:MapItem.Source>
                <dxpdf:PdfThumbnailsViewerState>Collapsed</dxpdf:PdfThumbnailsViewerState>
            </dxmvvm:MapItem.Source>
            <dxmvvm:MapItem.Target>
                <dxdob:AutoHideExpandState>Hidden</dxdob:AutoHideExpandState>
            </dxmvvm:MapItem.Target>
        </dxmvvm:MapItem>
        <dxmvvm:MapItem>
            <dxmvvm:MapItem.Source>
                <dxpdf:PdfThumbnailsViewerState>Visible</dxpdf:PdfThumbnailsViewerState>
            </dxmvvm:MapItem.Source>
            <dxmvvm:MapItem.Target>
                <dxdob:AutoHideExpandState>Visible</dxdob:AutoHideExpandState>
            </dxmvvm:MapItem.Target>
        </dxmvvm:MapItem>
        <dxmvvm:MapItem>
            <dxmvvm:MapItem.Source>
                <dxpdf:PdfThumbnailsViewerState>Expanded</dxpdf:PdfThumbnailsViewerState>
            </dxmvvm:MapItem.Source>
            <dxmvvm:MapItem.Target>
                <dxdob:AutoHideExpandState>Expanded</dxdob:AutoHideExpandState>
            </dxmvvm:MapItem.Target>
        </dxmvvm:MapItem>
    </dxmvvm:ObjectToObjectConverter>
    <dxmvvm:ObjectToObjectConverter x:Key="autoHideCommentViewerExpandStateConverter">
        <dxmvvm:MapItem>
            <dxmvvm:MapItem.Source>
                <dxpdf:PdfCommentViewerState>Collapsed</dxpdf:PdfCommentViewerState>
            </dxmvvm:MapItem.Source>
            <dxmvvm:MapItem.Target>
                <dxdob:AutoHideExpandState>Hidden</dxdob:AutoHideExpandState>
            </dxmvvm:MapItem.Target>
        </dxmvvm:MapItem>
        <dxmvvm:MapItem>
            <dxmvvm:MapItem.Source>
                <dxpdf:PdfCommentViewerState>Visible</dxpdf:PdfCommentViewerState>
            </dxmvvm:MapItem.Source>
            <dxmvvm:MapItem.Target>
                <dxdob:AutoHideExpandState>Visible</dxdob:AutoHideExpandState>
            </dxmvvm:MapItem.Target>
        </dxmvvm:MapItem>
        <dxmvvm:MapItem>
            <dxmvvm:MapItem.Source>
                <dxpdf:PdfCommentViewerState>Expanded</dxpdf:PdfCommentViewerState>
            </dxmvvm:MapItem.Source>
            <dxmvvm:MapItem.Target>
                <dxdob:AutoHideExpandState>Expanded</dxdob:AutoHideExpandState>
            </dxmvvm:MapItem.Target>
        </dxmvvm:MapItem>
    </dxmvvm:ObjectToObjectConverter>
    <dxmvvm:ObjectToObjectConverter x:Key="autoHideSignatureViewerExpandStateConverter">
        <dxmvvm:MapItem>
            <dxmvvm:MapItem.Source>
                <dxpdf:PdfSignatureViewerState>Collapsed</dxpdf:PdfSignatureViewerState>
            </dxmvvm:MapItem.Source>
            <dxmvvm:MapItem.Target>
                <dxdob:AutoHideExpandState>Hidden</dxdob:AutoHideExpandState>
            </dxmvvm:MapItem.Target>
        </dxmvvm:MapItem>
        <dxmvvm:MapItem>
            <dxmvvm:MapItem.Source>
                <dxpdf:PdfSignatureViewerState>Visible</dxpdf:PdfSignatureViewerState>
            </dxmvvm:MapItem.Source>
            <dxmvvm:MapItem.Target>
                <dxdob:AutoHideExpandState>Visible</dxdob:AutoHideExpandState>
            </dxmvvm:MapItem.Target>
        </dxmvvm:MapItem>
        <dxmvvm:MapItem>
            <dxmvvm:MapItem.Source>
                <dxpdf:PdfSignatureViewerState>Expanded</dxpdf:PdfSignatureViewerState>
            </dxmvvm:MapItem.Source>
            <dxmvvm:MapItem.Target>
                <dxdob:AutoHideExpandState>Expanded</dxdob:AutoHideExpandState>
            </dxmvvm:MapItem.Target>
        </dxmvvm:MapItem>
    </dxmvvm:ObjectToObjectConverter>
    <dxmvvm:ObjectToObjectConverter x:Key="autoHideLayersViewerExpandStateConverter">
        <dxmvvm:MapItem>
            <dxmvvm:MapItem.Source>
                <dxpdf:PdfLayersViewerState>Collapsed</dxpdf:PdfLayersViewerState>
            </dxmvvm:MapItem.Source>
            <dxmvvm:MapItem.Target>
                <dxdob:AutoHideExpandState>Hidden</dxdob:AutoHideExpandState>
            </dxmvvm:MapItem.Target>
        </dxmvvm:MapItem>
        <dxmvvm:MapItem>
            <dxmvvm:MapItem.Source>
                <dxpdf:PdfLayersViewerState>Visible</dxpdf:PdfLayersViewerState>
            </dxmvvm:MapItem.Source>
            <dxmvvm:MapItem.Target>
                <dxdob:AutoHideExpandState>Visible</dxdob:AutoHideExpandState>
            </dxmvvm:MapItem.Target>
        </dxmvvm:MapItem>
        <dxmvvm:MapItem>
            <dxmvvm:MapItem.Source>
                <dxpdf:PdfLayersViewerState>Expanded</dxpdf:PdfLayersViewerState>
            </dxmvvm:MapItem.Source>
            <dxmvvm:MapItem.Target>
                <dxdob:AutoHideExpandState>Expanded</dxdob:AutoHideExpandState>
            </dxmvvm:MapItem.Target>
        </dxmvvm:MapItem>
    </dxmvvm:ObjectToObjectConverter>
    <dxdove:NotNullConverter x:Key="notNullConverter" />
    <dxedp:DataPagerPageCountToTitleConverter x:Key="DataPagerPageCountToTitleConverter" />
    <dxedp:DataPagerPageIndexToPageNumberConverter x:Key="DataPagerPageIndexToPageNumberConverter" />
    <dxedp:DataPagerCurrentPageEditMaxValueConverter x:Key="DataPagerCurrentPageEditMaxValueConverter" />
    <dxedp:DataPagerCurrentPageEditMinValueConverter x:Key="DataPagerCurrentPageEditMinValueConverter" />
    <dxedp:DataPagerPageExtract x:Key="DataPagerPageExtract" />
    <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <dxpdf:DataPagerPageNumberConverter x:Key="dataPagerPageNumberConverter" />
    <dxpdf:PrintRangeToVisiblityConverter x:Key="PrintRangeToVisiblityConverter" />
    <dxe:EditorLocalizer x:Key="localizer" />
    <dxpdf:PdfViewerStringIdConverter x:Key="PdfViewerStringIdConverter" />
    <dxpdfi:ChangeTypeConverter x:Key="changeTypeConverter" SourceType="{x:Type sys:Int16}" TargetType="{x:Type sys:Int32}" />
    <dxpdfi:ChangeTypeConverter x:Key="pdfPrintScaleModeConverter" SourceType="{x:Type dxpdfd:PdfPrintScaleMode}" TargetType="{x:Type sys:Int32}" />
    <dxpdfi:ChangeTypeConverter x:Key="pdfPrintPageOrientationConverter" SourceType="{x:Type dxpdfd:PdfPrintPageOrientation}" TargetType="{x:Type sys:Int32}" />
    <dxpdfi:PrintRangeConverter x:Key="printRangeConverter" />
    <dxpdfi:PrintRangeToRangeEditEnabledConverter x:Key="printRangeToRangeEditEnabledConverter" />
    <dxpdfi:ScaleModeToScaleEditEnabledConverter x:Key="scaleModeToScaleEditEnabledConverter" />
    <dxpdfi:IEnumerableToPagedCollectionConverter x:Key="IEnumerableToPagedCollectionConverter" />
    <dxpdfi:PrinterTypeToImageConverter x:Key="printerTypeToImageConverter" />
    <dxpdfi:SizeChangedEventArgsConverter x:Key="sizeChangedEventArgsConverter" />
    <dxpdfi:PdfPrintPageOrientationConverter x:Key="pdfPrintPageOrientationEnumConverter" />
    <dxpdf:CommentViewerCellTemplateSelector x:Key="CommentViewerCellTemplateSelector" />
    <dxmvvm:BooleanToObjectConverter x:Key="boolToWrapConverter">
        <dxmvvm:BooleanToObjectConverter.TrueValue>
            <TextWrapping>WrapWithOverflow</TextWrapping>
        </dxmvvm:BooleanToObjectConverter.TrueValue>
        <dxmvvm:BooleanToObjectConverter.FalseValue>
            <TextWrapping>NoWrap</TextWrapping>
        </dxmvvm:BooleanToObjectConverter.FalseValue>
    </dxmvvm:BooleanToObjectConverter>
    <dxpdf:PdfOutlinesViewerNodeSelector x:Key="imagesSelector" />
    <dxpdf:PdfSignaturesViewerNodeImageSelector x:Key="signatureStatesSelector"/>
    <dxpdf:PdfLayersViewerNodeImageSelector x:Key="layersStatesSelector"/>
    <dxpdf:ObjectToTypeStringConverter x:Key="objectToTypeStringConverter"/>
    <dxpdf:PdfColorToColorConverter x:Key="pdfColorConverter" />
    <dxpdf:PdfItalicToItalicConverter x:Key="pdfItalicConverter" />
    <dxpdf:PdfBoldToBoldConverter x:Key="pdfBoldConverter" />
    <dxpdf:DrawingColorToColorConverter x:Key="DrawingColorToColorConverter" />


    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.PdfViewer\DevExpress.Xpf.PdfViewer\Themes\Generic\DefaultStyles.xaml-->
    <Thickness x:Key="{dxpdft:LWKey PdfViewer.PdfPresenterControlMargin}">0</Thickness>
    <Thickness x:Key="{dxpdft:LWKey PdfViewer.PdfPresenterControlBorderThickness}">0</Thickness>
    <SolidColorBrush x:Key="{dxpdft:LWKey PdfViewer.PdfPresenterControlBorderBrush}" Color="Transparent" />
    <Thickness x:Key="{dxpdft:LWKey PdfViewer.PdfOutlinesViewerControlToolBarBorderThickness}">0</Thickness>
    <SolidColorBrush x:Key="{dxpdft:LWKey PdfViewer.PdfOutlinesViewerControlToolBarBorderBrush}" Color="Transparent" />
    <Thickness x:Key="{dxpdft:LWKey PdfViewer.PdfCommentViewerControlToolBarBorderThickness}">0</Thickness>
    <SolidColorBrush x:Key="{dxpdft:LWKey PdfViewer.PdfCommentViewerControlToolBarBorderBrush}" Color="Transparent" />

    <Style x:Key="{dxpdft:LWKey PdfViewer.BarButtonItemStyle}" TargetType="{x:Type dxb:BarButtonItem}">
        <Setter Property="Content" Value="{Binding Path=Caption}" />
        <Setter Property="Hint" Value="{Binding Path=Hint}" />
        <Setter Property="Glyph" Value="{Binding Path=SmallGlyph, Converter={dxpdf:PdfUriToBitmapImageConverter}}" />
        <Setter Property="LargeGlyph" Value="{Binding Path=LargeGlyph, Converter={dxpdf:PdfUriToBitmapImageConverter}}" />
        <Setter Property="GlyphAlignment" Value="Top" />
    </Style>
    <Style x:Key="{dxpdft:LWKey PdfViewer.BarStaticItemStyle}" TargetType="{x:Type dxb:BarStaticItem}">
        <Setter Property="Content" Value="{Binding}" />
        <Setter Property="Hint" Value="{Binding Path=Hint}" />
        <Setter Property="Glyph" Value="{Binding Path=SmallGlyph, Converter={dxpdf:PdfUriToBitmapImageConverter}}" />
        <Setter Property="LargeGlyph" Value="{Binding Path=LargeGlyph, Converter={dxpdf:PdfUriToBitmapImageConverter}}" />
        <Setter Property="GlyphAlignment" Value="Top" />
        <Setter Property="ContentTemplate" Value="{DynamicResource {dxpdft:LWKey PdfViewer.BarStaticItemContentTemplate}}" />
    </Style>
    <Style x:Key="{dxpdft:LWKey PdfViewer.BarCheckItemStyle}" TargetType="{x:Type dxb:BarCheckItem}">
        <Setter Property="Content" Value="{Binding Path=Caption}" />
        <Setter Property="Hint" Value="{Binding Path=Hint}" />
        <Setter Property="Glyph" Value="{Binding Path=SmallGlyph, Converter={dxpdf:PdfUriToBitmapImageConverter}}" />
        <Setter Property="LargeGlyph" Value="{Binding Path=LargeGlyph, Converter={dxpdf:PdfUriToBitmapImageConverter}}" />
        <Setter Property="GlyphAlignment" Value="Top" />
        <Setter Property="CommandParameter" Value="{Binding Path=CommandValue}" />
        <Setter Property="IsChecked" Value="{Binding Path=IsChecked}" />
    </Style>
    <Style x:Key="{dxpdft:LWKey PdfViewer.BarSplitButtonItemStyle}" TargetType="{x:Type dxb:BarSplitButtonItem}">
        <Setter Property="Content" Value="{Binding Path=Caption}" />
        <Setter Property="Hint" Value="{Binding Path=Hint}" />
        <Setter Property="Glyph" Value="{Binding Path=SmallGlyph, Converter={dxpdf:PdfUriToBitmapImageConverter}}" />
        <Setter Property="LargeGlyph" Value="{Binding Path=LargeGlyph, Converter={dxpdf:PdfUriToBitmapImageConverter}}" />
        <Setter Property="GlyphAlignment" Value="Top" />
    </Style>
    <Style x:Key="{dxpdft:LWKey PdfViewer.PdfBarCommentItemStyle}" TargetType="{x:Type dxb:BarSplitCheckItem}">
        <Setter Property="Content" Value="{Binding Path=Caption}" />
        <Setter Property="Hint" Value="{Binding Path=Hint}" />
        <Setter Property="Glyph" Value="{Binding Path=SmallGlyph, Converter={dxpdf:PdfUriToBitmapImageConverter}}" />
        <Setter Property="LargeGlyph" Value="{Binding Path=LargeGlyph, Converter={dxpdf:PdfUriToBitmapImageConverter}}" />
        <Setter Property="GlyphAlignment" Value="Top" />
        <Setter Property="CommandParameter" Value="{Binding Path=CommandValue}" />
        <Setter Property="IsChecked" Value="{Binding Path=IsChecked}" />
    </Style>
    <Style x:Key="{dxpdft:LWKey PdfViewer.BarSubItemStyle}" TargetType="{x:Type dxb:BarSubItem}">
        <Setter Property="Content" Value="{Binding Path=Caption}" />
        <Setter Property="Hint" Value="{Binding Path=Hint}" />
        <Setter Property="Glyph" Value="{Binding Path=SmallGlyph, Converter={dxpdf:PdfUriToBitmapImageConverter}}" />
        <Setter Property="LargeGlyph" Value="{Binding Path=LargeGlyph, Converter={dxpdf:PdfUriToBitmapImageConverter}}" />
        <Setter Property="GlyphAlignment" Value="Top" />
        <Setter Property="ItemLinksSource" Value="{Binding Path=Items}" />
        <Setter Property="ItemTemplateSelector" Value="{StaticResource pdfCheckItemTemplateSelector}" />
    </Style>
    <Style x:Key="{dxpdft:LWKey PdfViewer.PdfPagesSelectorStyle}" TargetType="{x:Type dxpdf:PdfPagesSelector}">
        <Setter Property="Template" Value="{DynamicResource {dxpdft:LWKey PdfViewer.PdfPageSelectorTemplate}}" />
        <Setter Property="Focusable" Value="False" />
    </Style>
    <Style x:Key="{dxpdft:LWKey PdfViewer.PdfPrintDialogStyle}" TargetType="{x:Type dx:ThemedWindow}">
        <Setter Property="SizeToContent" Value="WidthAndHeight" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="dxe:ValidationService.IsValidationContainer" Value="True" />
    </Style>
    <Style x:Key="{dxpdft:LWKey PdfViewer.TreeViewStyle}" TargetType="{x:Type dxg:TreeListView}">
        <Setter Property="ChildNodesSelector" Value="{StaticResource bookmarkSelector}" />
        <Setter Property="TreeDerivationMode" Value="ChildNodesSelector" />
        <Setter Property="AutoWidth" Value="true" />
        <Setter Property="NavigationStyle" Value="Row" />
        <Setter Property="ShowHorizontalLines" Value="False" />
        <Setter Property="ShowVerticalLines" Value="false" />
        <Setter Property="ShowColumnHeaders" Value="False" />
        <Setter Property="ShowIndicator" Value="False" />
        <Setter Property="ExpandStateFieldName" Value="Expanded" />
        <Setter Property="FadeSelectionOnLostFocus" Value="False" />
        <Setter Property="ExpandCollapseNodesOnNavigation" Value="True" />
    </Style>
    <Style x:Key="{dxpdft:LWKey PdfViewer.PdfOutlinesViewerPanelStyle}" TargetType="{x:Type dxdo:LayoutPanel}">
        <Setter Property="Caption" Value="{dxpdf:PdfViewerControlLocalizedString OutlinesViewerPanelCaption}" />
        <Setter Property="AllowFloat" Value="False" />
        <Setter Property="AllowMove" Value="True" />
        <Setter Property="ShowCaptionImage" Value="False" />
        <Setter Property="ItemWidth" Value="300" />
        <Setter Property="AutoHidden" Value="True" />
        <Setter Property="FloatOnDoubleClick" Value="False" />
        <Setter Property="ShowCloseButton" Value="False" />
        <Setter Property="dxdo:AutoHideGroup.AutoHideSize" Value="300,300" />
    </Style>
    <Style x:Key="{dxpdft:LWKey PdfViewer.PdfAttachmentsViewerPanelStyle}" TargetType="{x:Type dxdo:LayoutPanel}">
        <Setter Property="Caption" Value="{dxpdf:PdfViewerControlLocalizedString AttachmentsViewerPanelCaption}" />
        <Setter Property="AllowFloat" Value="False" />
        <Setter Property="AllowMove" Value="True" />
        <Setter Property="ShowCaptionImage" Value="False" />
        <Setter Property="ItemWidth" Value="300" />
        <Setter Property="AutoHidden" Value="True" />
        <Setter Property="FloatOnDoubleClick" Value="False" />
        <Setter Property="ShowCloseButton" Value="False" />
        <Setter Property="dxdo:AutoHideGroup.AutoHideSize" Value="300,300" />
    </Style>
    <Style x:Key="{dxpdft:LWKey PdfViewer.PdfCommentViewerPanelStyle}" TargetType="{x:Type dxdo:LayoutPanel}">
        <Setter Property="Caption" Value="{dxpdf:PdfViewerControlLocalizedString CommentViewerPanelCaption}" />
        <Setter Property="AllowFloat" Value="False" />
        <Setter Property="AllowMove" Value="True" />
        <Setter Property="ShowCaptionImage" Value="False" />
        <Setter Property="ItemWidth" Value="300" />
        <Setter Property="AutoHidden" Value="True" />
        <Setter Property="FloatOnDoubleClick" Value="False" />
        <Setter Property="ShowCloseButton" Value="False" />
        <Setter Property="dxdo:AutoHideGroup.AutoHideSize" Value="300,300" />
    </Style>
    <Style x:Key="{dxpdft:LWKey PdfViewer.PdfSignatureViewerPanelStyle}" TargetType="{x:Type dxdo:LayoutPanel}">
        <Setter Property="Caption" Value="{dxpdf:PdfViewerControlLocalizedString SignatureViewerPanelCaption}"/>
        <Setter Property="AllowFloat" Value="False"/>
        <Setter Property="AllowMove" Value="True"/>
        <Setter Property="ShowCaptionImage" Value="False"/>
        <Setter Property="ItemWidth" Value="300"/>
        <Setter Property="AutoHidden" Value="True"/>
        <Setter Property="FloatOnDoubleClick" Value="False"/>
        <Setter Property="ShowCloseButton" Value="False"/>
        <Setter Property="dxdo:AutoHideGroup.AutoHideSize" Value="300,300"/>
    </Style>
    <Style x:Key="{dxpdft:LWKey PdfViewer.PdfLayersViewerPanelStyle}" TargetType="{x:Type dxdo:LayoutPanel}">
        <Setter Property="Caption" Value="{dxpdf:PdfViewerControlLocalizedString LayersViewerPanelCaption}"/>
        <Setter Property="AllowFloat" Value="False"/>
        <Setter Property="AllowMove" Value="True"/>
        <Setter Property="ShowCaptionImage" Value="False"/>
        <Setter Property="ItemWidth" Value="300"/>
        <Setter Property="AutoHidden" Value="True"/>
        <Setter Property="FloatOnDoubleClick" Value="False"/>
        <Setter Property="ShowCloseButton" Value="False"/>
        <Setter Property="dxdo:AutoHideGroup.AutoHideSize" Value="300,300"/>
    </Style>
    <Style x:Key="{dxpdft:LWKey PdfViewer.PdfThumbnailsViewerPanelStyle}" TargetType="{x:Type dxdo:LayoutPanel}">
        <Setter Property="Caption" Value="{dxpdf:PdfViewerControlLocalizedString ThumbnailsViewerPanelCaption}" />
        <Setter Property="AllowFloat" Value="False" />
        <Setter Property="AllowMove" Value="True" />
        <Setter Property="ShowCaptionImage" Value="False" />
        <Setter Property="ItemWidth" Value="300" />
        <Setter Property="AutoHidden" Value="True" />
        <Setter Property="FloatOnDoubleClick" Value="False" />
        <Setter Property="ShowCloseButton" Value="False" />
        <Setter Property="dxdo:AutoHideGroup.AutoHideSize" Value="300,300" />
    </Style>
    <Style x:Key="{dxpdft:LWKey PdfViewer.PdfMarkupToolPropertiesDialogStyle}" TargetType="{x:Type dx:ThemedWindow}">
        <Setter Property="SizeToContent" Value="WidthAndHeight" />
        <Setter Property="ResizeMode" Value="NoResize" />
    </Style>
    <Style x:Key="{dxpdft:LWKey PdfViewer.PdfMarkupAnnotationPropertiesDialogStyle}" TargetType="{x:Type dx:ThemedWindow}">
        <Setter Property="SizeToContent" Value="WidthAndHeight" />
        <Setter Property="ResizeMode" Value="NoResize" />
    </Style>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.PdfViewer\DevExpress.Xpf.PdfViewer\Themes\Generic\DefaultStyles.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.PdfViewer\DevExpress.Xpf.PdfViewer\Themes\Generic.xaml-->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.PdfViewer\DevExpress.Xpf.PdfViewer\Themes\Generic.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.PdfViewer\DevExpress.Xpf.PdfViewer\Themes\Generic\Templates.xaml-->
    <Thickness x:Key="{dxpdft:LWKey PdfViewer.PagePaddingThickness}">5</Thickness>


    <DataTemplate x:Key="{dxpdft:LWKey PdfViewer.BarStaticItemContentTemplate}">
        <StackPanel Orientation="Horizontal">
            <dxe:SpinEdit
                x:Name="editor"
                MinWidth="30"
                AllowDefaultButton="False"
                AllowRoundOutOfRangeValue="True"
                EditValue="{Binding Path=CurrentPageNumber, Mode=TwoWay}"
                IsFloatValue="False"
                MinValue="1"
                SelectAllOnGotFocus="True"
                ValidateOnTextInput="True">
                <dxmvvm:Interaction.Triggers>
                    <dxmvvm:EventToCommand
                        Command="{Binding Path=Command}"
                        EventArgsConverter="{dx:TargetStaticResource textEditEditValueChangedConverter, TargetDictionary={dxi:ThemeResourceDictionary Path='DocumentViewer/Generic.xaml'}}"
                        EventName="EditValueChanged"
                        PassEventArgsToCommand="True" />
                </dxmvvm:Interaction.Triggers>
            </dxe:SpinEdit>
            <TextBlock VerticalAlignment="Center" Text=" / " />
            <TextBlock VerticalAlignment="Center" Text="{Binding Path=PagesCount}" />
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="{dxpdft:LWKey PdfViewer.PdfBarCommentItemContentTemplate}">
        <dxe:ColorEdit ShowDefaultColorButton="False" ShowNoColorButton="False" Color="{Binding Path=CommentColor, Mode=TwoWay}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxpdft:LWKey PdfViewer.PopupMenuItemTemplate}">
        <dxb:BarButtonItem Command="{Binding Path=Command}" Content="{Binding Path=Caption}" Glyph="{Binding Path=SmallGlyph, Converter={dxpdf:PdfUriToBitmapImageConverter}}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxpdft:LWKey PdfViewer.PopupMenuMRUItemTemplate}">
        <dxb:BarButtonItem
            Command="{Binding Path=Command}"
            CommandParameter="{Binding Path=DocumentSource}"
            Content="{Binding Path=Name}"
            Glyph="{Binding Path=SmallGlyph, Converter={dxpdf:PdfUriToBitmapImageConverter}}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxpdft:LWKey PdfViewer.SetPageLayoutItemTemplate}">
        <dxb:BarCheckItem
            AllowUncheckInGroup="True"
            Command="{Binding Path=Command}"
            CommandParameter="{Binding Path=PageLayout}"
            Content="{Binding Path=Caption}"
            Glyph="{Binding Path=SmallGlyph, Converter={dxpdf:PdfUriToBitmapImageConverter}}"
            GlyphAlignment="Top"
            GroupIndex="{Binding Path=GroupIndex}"
            Hint="{Binding Path=Hint}"
            IsChecked="{Binding Path=IsChecked}"
            KeyGesture="{Binding Path=KeyGesture}"
            LargeGlyph="{Binding Path=LargeGlyph, Converter={dxpdf:PdfUriToBitmapImageConverter}}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxpdft:LWKey PdfViewer.RibbonTemplate}">
        <Grid>
            <dxmvvm:Interaction.Behaviors>
                <dx:SplashScreenManagerService SplashScreenType="dxpdfi:PdfSplashScreen" />
            </dxmvvm:Interaction.Behaviors>
            <dxb:BarManager>
                <dxb:BarManager.Items>
                    <dxpdf:SelectToolBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.SelectTool}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.SelectToolCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <dxpdf:HandToolBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.HandTool}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.HandToolCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <dxpdf:MarqueeZoomBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.MarqueeZoom}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.MarqueeZoomCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <dxpdf:CopyBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.Copy}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.CopyCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <dxpdf:HighlightSelectedTextBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.HighlightSelectedText}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.HighlightSelectedTextCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <dxpdf:StrikethroughSelectedTextBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.StrikethroughSelectedText}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.StrikethroughSelectedTextCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <dxpdf:UnderlineSelectedTextButtonBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.UnderlineSelectedText}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.UnderlineSelectedTextCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <dxdv:PreviousViewBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.PreviousView}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.PreviousViewCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <dxdv:NextViewBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.NextView}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.NextViewCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <dxdv:ClockwiseRotateBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.ClockwiseRotate}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.ClockwiseRotateCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <dxdv:CounterClockwiseRotateBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.CounterClockwiseRotate}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.CounterClockwiseRotateCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <dxpdf:PrintDocumentBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.PrintContext}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.PrintDocumentCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <dxpdf:FindTextBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.FindContext}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.ShowFindTextCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{StaticResource TrueBoolean}" />
                    <dxpdf:SelectAllBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.SelectAll}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.SelectAllCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <dxpdf:PropertiesBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.Properties}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.ShowPropertiesCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <dxpdf:DeleteAnnotationBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.DeleteAnnotation}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.DeleteAnnotationCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <dxpdf:AnnotationPropertiesBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.AnnotationProperties}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.ShowAnnotationPropertiesCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                </dxb:BarManager.Items>
                <Grid DataContext="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).DataContext, RelativeSource={RelativeSource TemplatedParent}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <dxr:RibbonControl
                        dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.Ribbon}"
                        RibbonStyle="Office2010"
                        RibbonTitleBarVisibility="Collapsed"
                        ToolbarShowMode="Hide">
                        <dxmvvm:Interaction.Behaviors>
                            <dxpdf:PdfControllerBehavior Actions="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.RibbonActions, RelativeSource={RelativeSource TemplatedParent}}" ExecutionMode="OnEvent">
                                <dxpdf:PdfControllerBehavior.Triggers>
                                    <dxb:ActionTrigger EventName="Loaded" ExecuteOnce="True" />
                                </dxpdf:PdfControllerBehavior.Triggers>
                            </dxpdf:PdfControllerBehavior>
                            <dxpdf:PdfControllerBehavior Actions="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.ContextMenuActions, RelativeSource={RelativeSource TemplatedParent}}" ExecutionMode="OnEvent" />
                        </dxmvvm:Interaction.Behaviors>
                        <dxr:RibbonDefaultPageCategory dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.DefaultPageCategory}">
                            <dxr:RibbonPage dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.MainRibbonPage}" Caption="{dxpdf:PdfViewerControlLocalizedString BarCaption}">
                                <dxr:RibbonPage.GroupCollectionTemplate>
                                    <DataTemplate>
                                        <ItemsControl>
                                            <dxr:RibbonPageGroup dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.FileRibbonGroup}" Caption="{dxpdf:PdfViewerControlLocalizedString FileRibbonGroupCaption}">
                                                <dxpdf:OpenDocumentFromWebBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.OpenFromWeb}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.OpenDocumentFromWebCommand, RelativeSource={RelativeSource Self}}" />
                                                <dxpdf:SaveAsBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.SaveAs}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.SaveAsCommand, RelativeSource={RelativeSource Self}}" />
                                                <dxdv:CloseDocumentBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.Close}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.CloseDocumentCommand, RelativeSource={RelativeSource Self}}" />
                                                <dxpdf:PrintDocumentBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.Print}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.PrintDocumentCommand, RelativeSource={RelativeSource Self}}" />
                                            </dxr:RibbonPageGroup>
                                            <dxr:RibbonPageGroup dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.FindRibbonGroup}" Caption="{dxpdf:PdfViewerControlLocalizedString FindRibbonGroupCaption}">
                                                <dxpdf:FindTextBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.Find}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.ShowFindTextCommand, RelativeSource={RelativeSource Self}}" CommandParameter="{StaticResource TrueBoolean}" />
                                            </dxr:RibbonPageGroup>
                                            <dxr:RibbonPageGroup dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.NavigationRibbonGroup}" Caption="{dxpdf:PdfViewerControlLocalizedString NavigationRibbonGroupCaption}">
                                                <dxdv:PreviousPageBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.PreviousPage}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.PreviousPageCommand, RelativeSource={RelativeSource Self}}" />
                                                <dxdv:NextPageBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.NextPage}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.NextPageCommand, RelativeSource={RelativeSource Self}}" />
                                                <dxdv:PaginationRibbonItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.Pagination}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.PaginationCommand, RelativeSource={RelativeSource Self}}" />
                                            </dxr:RibbonPageGroup>
                                            <dxr:RibbonPageGroup dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.ZoomRibbonGroup}" Caption="{dxpdf:PdfViewerControlLocalizedString ViewRibbonGroupCaption}">
                                                <dxdv:ZoomInBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.ZoomIn}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.ZoomInCommand, RelativeSource={RelativeSource Self}}" />
                                                <dxdv:ZoomOutBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.ZoomOut}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.ZoomOutCommand, RelativeSource={RelativeSource Self}}" />
                                                <dxdv:ZoomBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.Zoom}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.ZoomCommand, RelativeSource={RelativeSource Self}}" />
                                                <dxb:BarItemSeparator dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.PageLayoutSeparator}" />
                                                <dxpdf:PageLayoutBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.PageLayout}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.PageLayoutCommand, RelativeSource={RelativeSource Self}}" CommandParameter="{StaticResource TrueBoolean}" />
                                            </dxr:RibbonPageGroup>
                                        </ItemsControl>
                                    </DataTemplate>
                                </dxr:RibbonPage.GroupCollectionTemplate>
                            </dxr:RibbonPage>
                            <dxr:RibbonPage dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.CommentRibbonPage}" Caption="{dxpdf:PdfViewerControlLocalizedString BarCommentCaption}">
                                <dxr:RibbonPage.GroupCollectionTemplate>
                                    <DataTemplate>
                                        <ItemsControl>
                                            <dxr:RibbonPageGroup dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.CommentTextRibbonGroup}" Caption="{dxpdf:PdfViewerControlLocalizedString CommentTextRibbonGroupCaption}">
                                                <dxpdf:HighlightTextBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.HighlightText}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.HighlightTextToolCommand, RelativeSource={RelativeSource Self}}" />
                                                <dxpdf:StrikethroughTextBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.StrikethroughText}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.StrikethroughTextToolCommand, RelativeSource={RelativeSource Self}}" />
                                                <dxpdf:UnderlineTextBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.UnderlineText}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.UnderlineTextToolCommand, RelativeSource={RelativeSource Self}}" />
                                            </dxr:RibbonPageGroup>
                                            <dxr:RibbonPageGroup dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.CommentNoteRibbonGroup}" Caption="{dxpdf:PdfViewerControlLocalizedString CommentNoteRibbonGroupCaption}">
                                                <dxpdf:StickyNoteBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.StickyNote}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.StickyNoteCommand, RelativeSource={RelativeSource Self}}" />
                                            </dxr:RibbonPageGroup>
                                        </ItemsControl>
                                    </DataTemplate>
                                </dxr:RibbonPage.GroupCollectionTemplate>
                            </dxr:RibbonPage>
                            <dxr:RibbonPage dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.FormDataRibbonPage}" Caption="{dxpdf:PdfViewerControlLocalizedString BarFormDataCaption}" IsVisible="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).PropertyProvider.IsFormDataPageVisible, RelativeSource={RelativeSource TemplatedParent}}">
                                <dxr:RibbonPage.GroupCollectionTemplate>
                                    <DataTemplate>
                                        <ItemsControl>
                                            <dxr:RibbonPageGroup dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.FormDataRibbonGroup}" Caption="{dxpdf:PdfViewerControlLocalizedString FormDataRibbonGroupCaption}">
                                                <dxpdf:ImportBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.Import}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.ImportFormDataCommand, RelativeSource={RelativeSource Self}}" />
                                                <dxpdf:ExportBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.Export}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.ExportFormDataCommand, RelativeSource={RelativeSource Self}}" />
                                            </dxr:RibbonPageGroup>
                                        </ItemsControl>
                                    </DataTemplate>
                                </dxr:RibbonPage.GroupCollectionTemplate>
                            </dxr:RibbonPage>
                        </dxr:RibbonDefaultPageCategory>
                    </dxr:RibbonControl>
                    <dxdo:DockLayoutManager Grid.Row="1" AutoHideExpandMode="MouseDown" AutoHideMode="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).NavigationPanelsLayout, Mode=OneWay, RelativeSource={RelativeSource Self}, Converter={StaticResource autoHideConverter}}">
                        <dxmvvm:Interaction.Behaviors>
                            <dxpdf:ShowingDockHintsAttachedBehavior />
                        </dxmvvm:Interaction.Behaviors>
                        <dxdo:LayoutGroup x:Name="Root" Margin="0">
                            <dxdo:LayoutPanel
                                x:Name="thumbnailsViewerPanel"
                                AutoHideExpandState="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualThumbnailsViewerSettings.ThumbnailsViewerState, Converter={StaticResource autoHideThumbnailsExpandStateConverter}, RelativeSource={RelativeSource Self}, Mode=TwoWay}"
                                Style="{DynamicResource {dxpdft:LWKey PdfViewer.PdfThumbnailsViewerPanelStyle}}"
                                Visibility="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).HasThumbnails, RelativeSource={RelativeSource TemplatedParent}, Converter={dx:BooleanToVisibilityConverter}}">
                                <dxpdf:PdfThumbnailsViewerControl
                                    x:Name="thumbnailsViewer"
                                    IsTabStop="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).AcceptsTab, RelativeSource={RelativeSource TemplatedParent}}"
                                    KeyboardNavigation.TabNavigation="None"
                                    PageRotation="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).PageRotation, RelativeSource={RelativeSource TemplatedParent}}"
                                    SelectedPageNumber="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).CurrentPageNumber, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                    Settings="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualThumbnailsViewerSettings, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualThumbnailsViewerSettings.ThumbnailsViewerStyle, RelativeSource={RelativeSource TemplatedParent}}" />
                            </dxdo:LayoutPanel>
                            <dxdo:LayoutPanel
                                x:Name="outlinesViewerPanel"
                                AutoHideExpandState="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualDocumentMapSettings.OutlinesViewerState, Converter={StaticResource autoHideExpandStateConverter}, RelativeSource={RelativeSource Self}, Mode=TwoWay}"
                                Style="{DynamicResource {dxpdft:LWKey PdfViewer.PdfOutlinesViewerPanelStyle}}"
                                Visibility="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).HasOutlines, RelativeSource={RelativeSource TemplatedParent}, Converter={dx:BooleanToVisibilityConverter}}">
                                <dxpdf:PdfOutlinesViewerControl
                                    x:Name="outlinesViewer"
                                    IsTabStop="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).AcceptsTab, RelativeSource={RelativeSource TemplatedParent}}"
                                    KeyboardNavigation.TabNavigation="None"
                                    Settings="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualDocumentMapSettings, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualDocumentMapSettings.OutlinesViewerStyle, RelativeSource={RelativeSource TemplatedParent}}" />
                            </dxdo:LayoutPanel>
                            <dxdo:LayoutPanel
                                x:Name="attachmentsViewerPanel"
                                AutoHideExpandState="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualAttachmentsViewerSettings.AttachmentsViewerState, Converter={StaticResource autoHideAttachmentsExpandStateConverter}, RelativeSource={RelativeSource Self}, Mode=TwoWay}"
                                Style="{DynamicResource {dxpdft:LWKey PdfViewer.PdfAttachmentsViewerPanelStyle}}"
                                Visibility="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).HasAttachments, RelativeSource={RelativeSource TemplatedParent}, Converter={dx:BooleanToVisibilityConverter}}">
                                <dxpdf:PdfAttachmentsViewerControl
                                    x:Name="attachmentsViewer"
                                    IsTabStop="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).AcceptsTab, RelativeSource={RelativeSource TemplatedParent}}"
                                    KeyboardNavigation.TabNavigation="None"
                                    Settings="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualAttachmentsViewerSettings, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualAttachmentsViewerSettings.AttachmentsViewerStyle, RelativeSource={RelativeSource TemplatedParent}}" />
                            </dxdo:LayoutPanel>
                            <dxdo:LayoutPanel
                                x:Name="commentViewerPanel"
                                AutoHideExpandState="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommentViewerSettings.CommentViewerState, Converter={StaticResource autoHideCommentViewerExpandStateConverter}, RelativeSource={RelativeSource Self}, Mode=TwoWay}"
                                Style="{DynamicResource {dxpdft:LWKey PdfViewer.PdfCommentViewerPanelStyle}}"
                                Visibility="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).HasComments, RelativeSource={RelativeSource TemplatedParent}, Converter={dx:BooleanToVisibilityConverter}}">
                                <dxpdf:PdfCommentViewerControl
                                    x:Name="commentViewer"
                                    IsTabStop="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).AcceptsTab, RelativeSource={RelativeSource TemplatedParent}}"
                                    KeyboardNavigation.TabNavigation="None"
                                    Settings="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommentViewerSettings, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommentViewerSettings.CommentViewerStyle, RelativeSource={RelativeSource TemplatedParent}}" />
                            </dxdo:LayoutPanel>
                            <dxdo:LayoutPanel
                                x:Name="signaturesViewerPanel"
                                AutoHideExpandState="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualSignaturesViewerSettings.SignatureViewerState, Converter={StaticResource autoHideSignatureViewerExpandStateConverter},  RelativeSource={RelativeSource Self}, Mode=TwoWay}" 
                                Style="{DynamicResource {dxpdft:LWKey PdfViewer.PdfSignatureViewerPanelStyle}}"
                                Visibility="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).HasSignatures, RelativeSource={RelativeSource TemplatedParent}, Converter={dx:BooleanToVisibilityConverter}}">
                                <dxpdf:PdfSignaturesViewerControl
                                    KeyboardNavigation.TabNavigation="None"
                                    IsTabStop="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).AcceptsTab, RelativeSource={RelativeSource TemplatedParent}}"
                                    x:Name="signaturesViewer"
                                    Settings="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualSignaturesViewerSettings, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualSignaturesViewerSettings.SignatureViewerStyle, RelativeSource={RelativeSource TemplatedParent}}"></dxpdf:PdfSignaturesViewerControl>
                            </dxdo:LayoutPanel>
                            <dxdo:LayoutPanel
                                x:Name="layersViewerPanel"
                                AutoHideExpandState="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualLayersViewerSettings.LayersViewerState, Converter={StaticResource autoHideLayersViewerExpandStateConverter},  RelativeSource={RelativeSource Self}, Mode=TwoWay}" 
                                Style="{DynamicResource {dxpdft:LWKey PdfViewer.PdfLayersViewerPanelStyle}}"
                                Visibility="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).HasLayers, RelativeSource={RelativeSource TemplatedParent}, Converter={dx:BooleanToVisibilityConverter}}">
                                <dxpdf:PdfLayersViewerControl
                                    KeyboardNavigation.TabNavigation="None"
                                    IsTabStop="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).AcceptsTab, RelativeSource={RelativeSource TemplatedParent}}"
                                    x:Name="layersViewer"
                                    Settings="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualLayersViewerSettings, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualLayersViewerSettings.LayersViewerStyle, RelativeSource={RelativeSource TemplatedParent}}"></dxpdf:PdfLayersViewerControl>
                            </dxdo:LayoutPanel>
                            <dxdo:LayoutPanel ShowBorder="False" ShowCaption="False">
                                <dxpdf:PdfPresenterControl IsTabStop="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).AcceptsTab, RelativeSource={RelativeSource TemplatedParent}}">
                                    <dxb:BarManager.DXContextMenu>
                                        <dxb:PopupMenu dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.ContextMenu}" ItemLinksSourceElementGeneratesUniqueBarItem="True" />
                                    </dxb:BarManager.DXContextMenu>
                                </dxpdf:PdfPresenterControl>
                            </dxdo:LayoutPanel>
                        </dxdo:LayoutGroup>
                    </dxdo:DockLayoutManager>
                    <dxpdf:StartScreenControl
                        Grid.Row="1"
                        NumberOfRecentFiles="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).NumberOfRecentFiles, RelativeSource={RelativeSource Self}}"
                        RecentFiles="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).RecentFiles, RelativeSource={RelativeSource Self}}"
                        ShowOpenFileButton="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ShowOpenFileOnStartScreen, RelativeSource={RelativeSource Self}}"
                        Visibility="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).PropertyProvider.IsStartScreenVisible, RelativeSource={RelativeSource Self}, Converter={StaticResource booleanToVisibilityConverter}}" />
                    <TextBlock
                        Grid.Row="1"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Text="{dxpdf:PdfViewerControlLocalizedString MessageDocumentHasNoPages}"
                        Visibility="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).Document.Pages, RelativeSource={RelativeSource Self}, FallbackValue=Collapsed, Converter={StaticResource DocumentHasPagesVisibilityConverter}}" />
                </Grid>
            </dxb:BarManager>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="{dxpdft:LWKey PdfViewer.BarsTemplate}">
        <Grid>
            <dxmvvm:Interaction.Behaviors>
                <dx:SplashScreenManagerService SplashScreenType="dxpdfi:PdfSplashScreen" />
            </dxmvvm:Interaction.Behaviors>
            <dxb:BarManager>
                <dxb:BarManager.Items>
                    <dxpdf:SelectToolBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.SelectTool}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.SelectToolCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <dxpdf:HandToolBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.HandTool}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.HandToolCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <dxpdf:MarqueeZoomBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.MarqueeZoom}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.MarqueeZoomCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <dxpdf:CopyBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.Copy}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.CopyCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <dxpdf:HighlightSelectedTextBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.HighlightSelectedText}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.HighlightSelectedTextCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <dxpdf:StrikethroughSelectedTextBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.StrikethroughSelectedText}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.StrikethroughSelectedTextCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <dxpdf:UnderlineSelectedTextButtonBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.UnderlineSelectedText}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.UnderlineSelectedTextCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <dxdv:PreviousViewBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.PreviousView}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.PreviousViewCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <dxdv:NextViewBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.NextView}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.NextViewCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <dxdv:ClockwiseRotateBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.ClockwiseRotate}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.ClockwiseRotateCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <dxdv:CounterClockwiseRotateBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.CounterClockwiseRotate}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.CounterClockwiseRotateCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <dxpdf:PrintDocumentBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.PrintContext}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.PrintDocumentCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <dxpdf:FindTextBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.FindContext}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.ShowFindTextCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{StaticResource TrueBoolean}" />
                    <dxpdf:SelectAllBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.SelectAll}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.SelectAllCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <dxpdf:PropertiesBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.Properties}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.ShowPropertiesCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <dxpdf:DeleteAnnotationBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.DeleteAnnotation}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.DeleteAnnotationCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <dxpdf:AnnotationPropertiesBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.AnnotationProperties}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.ShowAnnotationPropertiesCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                </dxb:BarManager.Items>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <dxb:ToolBarControl
                        dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.Bar}"
                        AllowCustomizationMenu="False"
                        AllowQuickCustomization="False"
                        GlyphSize="Small">
                        <dxmvvm:Interaction.Behaviors>
                            <dxpdf:PdfControllerBehavior Actions="{Binding Path=(dxdv:DocumentViewerControl.ActualViewer).ActualCommandProvider.Actions, RelativeSource={RelativeSource TemplatedParent}}" ExecutionMode="OnEvent">
                                <dxpdf:PdfControllerBehavior.Triggers>
                                    <dxb:ActionTrigger EventName="Loaded" ExecuteOnce="True" />
                                </dxpdf:PdfControllerBehavior.Triggers>
                            </dxpdf:PdfControllerBehavior>
                            <dxpdf:PdfControllerBehavior Actions="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.ContextMenuActions, RelativeSource={RelativeSource TemplatedParent}}" ExecutionMode="OnEvent" />
                        </dxmvvm:Interaction.Behaviors>
                        <dxb:ToolBarControl.Items>
                            <dxpdf:OpenDocumentFromWebBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.OpenFromWeb}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.OpenDocumentFromWebCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                            <dxpdf:SaveAsBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.SaveAs}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.SaveAsCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                            <dxdv:CloseDocumentBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.Close}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.CloseDocumentCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                            <dxpdf:PrintDocumentBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.Print}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.PrintDocumentCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                            <dxb:BarItemLinkSeparator />
                            <dxpdf:ImportBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.Import}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.ImportFormDataCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                            <dxpdf:ExportBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.Export}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.ExportFormDataCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                            <dxb:BarItemLinkSeparator />
                            <dxpdf:FindTextBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.Find}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.ShowFindTextCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{StaticResource TrueBoolean}" />
                            <dxb:BarItemLinkSeparator />
                            <dxdv:PreviousPageBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.PreviousPage}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.PreviousPageCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                            <dxdv:NextPageBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.NextPage}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.NextPageCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                            <dxdv:PaginationBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.Pagination}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.PaginationCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                            <dxb:BarItemLinkSeparator />
                            <dxdv:ZoomInBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.ZoomIn}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.ZoomInCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                            <dxdv:ZoomOutBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.ZoomOut}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.ZoomOutCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                            <dxdv:ZoomBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.Zoom}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.ZoomCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                            <dxb:BarItemLinkSeparator />
                            <dxpdf:PageLayoutBarItem dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.PageLayout}" Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.PageLayoutCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{StaticResource TrueBoolean}" />
                        </dxb:ToolBarControl.Items>
                    </dxb:ToolBarControl>
                    <dxdo:DockLayoutManager
                        Grid.Row="1"
                        AutoHideExpandMode="MouseDown"
                        AutoHideMode="Inline"
                        DataContext="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).DataContext, RelativeSource={RelativeSource TemplatedParent}}">
                        <dxdo:LayoutGroup x:Name="Root" Margin="0">
                            <dxdo:LayoutPanel
                                x:Name="thumbnailsViewerPanel"
                                AutoHideExpandState="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualThumbnailsViewerSettings.ThumbnailsViewerState, Converter={StaticResource autoHideThumbnailsExpandStateConverter}, RelativeSource={RelativeSource Self}, Mode=TwoWay}"
                                Style="{DynamicResource {dxpdft:LWKey PdfViewer.PdfThumbnailsViewerPanelStyle}}"
                                Visibility="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).HasThumbnails, RelativeSource={RelativeSource TemplatedParent}, Converter={dx:BooleanToVisibilityConverter}}">
                                <dxpdf:PdfThumbnailsViewerControl
                                    x:Name="thumbnailsViewer"
                                    IsTabStop="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).AcceptsTab, RelativeSource={RelativeSource TemplatedParent}}"
                                    KeyboardNavigation.TabNavigation="None"
                                    SelectedPageNumber="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).CurrentPageNumber, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                    Settings="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualThumbnailsViewerSettings, RelativeSource={RelativeSource TemplatedParent}}" />
                            </dxdo:LayoutPanel>
                            <dxdo:LayoutPanel
                                x:Name="autoHidePanel"
                                AutoHideExpandState="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualDocumentMapSettings.OutlinesViewerState, Converter={StaticResource autoHideExpandStateConverter}, RelativeSource={RelativeSource Self}, Mode=TwoWay}"
                                Style="{DynamicResource {dxpdft:LWKey PdfViewer.PdfOutlinesViewerPanelStyle}}"
                                Visibility="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).HasOutlines, RelativeSource={RelativeSource TemplatedParent}, Converter={dx:BooleanToVisibilityConverter}}">
                                <dxpdf:PdfOutlinesViewerControl
                                    x:Name="outlinesViewer"
                                    IsTabStop="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).AcceptsTab, RelativeSource={RelativeSource TemplatedParent}}"
                                    KeyboardNavigation.TabNavigation="None"
                                    Settings="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualDocumentMapSettings, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualDocumentMapSettings.OutlinesViewerStyle, RelativeSource={RelativeSource TemplatedParent}}" />
                            </dxdo:LayoutPanel>
                            <dxdo:LayoutPanel AutoHideExpandState="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualAttachmentsViewerSettings.AttachmentsViewerState, Converter={StaticResource autoHideAttachmentsExpandStateConverter}, RelativeSource={RelativeSource Self}, Mode=TwoWay}" Style="{DynamicResource {dxpdft:LWKey PdfViewer.PdfAttachmentsViewerPanelStyle}}" Visibility="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).HasAttachments, RelativeSource={RelativeSource TemplatedParent}, Converter={dx:BooleanToVisibilityConverter}}">
                                <dxpdf:PdfAttachmentsViewerControl
                                    x:Name="attachmentsViewer"
                                    IsTabStop="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).AcceptsTab, RelativeSource={RelativeSource TemplatedParent}}"
                                    KeyboardNavigation.TabNavigation="None"
                                    Settings="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualAttachmentsViewerSettings, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualAttachmentsViewerSettings.AttachmentsViewerStyle, RelativeSource={RelativeSource TemplatedParent}}" />
                            </dxdo:LayoutPanel>
                            <dxdo:LayoutPanel
                                x:Name="commentViewerPanel"
                                AutoHideExpandState="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommentViewerSettings.CommentViewerState, Converter={StaticResource autoHideCommentViewerExpandStateConverter}, RelativeSource={RelativeSource Self}, Mode=TwoWay}"
                                Style="{DynamicResource {dxpdft:LWKey PdfViewer.PdfCommentViewerPanelStyle}}"
                                Visibility="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).HasComments, RelativeSource={RelativeSource TemplatedParent}, Converter={dx:BooleanToVisibilityConverter}}">
                                <dxpdf:PdfCommentViewerControl
                                    x:Name="commentViewer"
                                    IsTabStop="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).AcceptsTab, RelativeSource={RelativeSource TemplatedParent}}"
                                    KeyboardNavigation.TabNavigation="None"
                                    Settings="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommentViewerSettings, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommentViewerSettings.CommentViewerStyle, RelativeSource={RelativeSource TemplatedParent}}" />
                            </dxdo:LayoutPanel>
                            <dxdo:LayoutPanel
                                x:Name="signaturesViewerPanel"
                                AutoHideExpandState="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualSignaturesViewerSettings.SignatureViewerState, Converter={StaticResource autoHideSignatureViewerExpandStateConverter},  RelativeSource={RelativeSource Self}, Mode=TwoWay}" 
                                Style="{DynamicResource {dxpdft:LWKey PdfViewer.PdfSignatureViewerPanelStyle}}"
                                Visibility="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).HasSignatures, RelativeSource={RelativeSource TemplatedParent}, Converter={dx:BooleanToVisibilityConverter}}">
                                <dxpdf:PdfSignaturesViewerControl
                                    KeyboardNavigation.TabNavigation="None"
                                    IsTabStop="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).AcceptsTab, RelativeSource={RelativeSource TemplatedParent}}"
                                    x:Name="signaturesViewer"
                                    Settings="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualSignaturesViewerSettings, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualSignaturesViewerSettings.SignatureViewerStyle, RelativeSource={RelativeSource TemplatedParent}}"></dxpdf:PdfSignaturesViewerControl>
                            </dxdo:LayoutPanel>
                            <dxdo:LayoutPanel
                                x:Name="layersViewerPanel"
                                AutoHideExpandState="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualLayersViewerSettings.LayersViewerState, Converter={StaticResource autoHideLayersViewerExpandStateConverter},  RelativeSource={RelativeSource Self}, Mode=TwoWay}" 
                                Style="{DynamicResource {dxpdft:LWKey PdfViewer.PdfLayersViewerPanelStyle}}"
                                Visibility="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).HasLayers, RelativeSource={RelativeSource TemplatedParent}, Converter={dx:BooleanToVisibilityConverter}}">
                                <dxpdf:PdfLayersViewerControl
                                    KeyboardNavigation.TabNavigation="None"
                                    IsTabStop="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).AcceptsTab, RelativeSource={RelativeSource TemplatedParent}}"
                                    x:Name="layersViewer"
                                    Settings="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualLayersViewerSettings, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualLayersViewerSettings.LayersViewerStyle, RelativeSource={RelativeSource TemplatedParent}}"></dxpdf:PdfLayersViewerControl>
                            </dxdo:LayoutPanel>
                            <dxdo:LayoutPanel ShowBorder="False" ShowCaption="False">
                                <dxpdf:PdfPresenterControl IsTabStop="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).AcceptsTab, RelativeSource={RelativeSource TemplatedParent}}">
                                    <dxb:BarManager.DXContextMenu>
                                        <dxb:PopupMenu dxpdf:PdfViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.ContextMenu}" />
                                    </dxb:BarManager.DXContextMenu>
                                </dxpdf:PdfPresenterControl>
                            </dxdo:LayoutPanel>
                        </dxdo:LayoutGroup>
                    </dxdo:DockLayoutManager>
                    <dxpdf:StartScreenControl
                        Grid.Row="1"
                        NumberOfRecentFiles="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).NumberOfRecentFiles, RelativeSource={RelativeSource Self}}"
                        RecentFiles="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).RecentFiles, RelativeSource={RelativeSource Self}}"
                        ShowOpenFileButton="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ShowOpenFileOnStartScreen, RelativeSource={RelativeSource Self}}"
                        Visibility="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).PropertyProvider.IsStartScreenVisible, RelativeSource={RelativeSource Self}, Converter={StaticResource booleanToVisibilityConverter}}" />
                    <TextBlock
                        Grid.Row="1"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Text="{dxpdf:PdfViewerControlLocalizedString MessageDocumentHasNoPages}"
                        Visibility="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).Document.Pages, RelativeSource={RelativeSource Self}, FallbackValue=Collapsed, Converter={StaticResource DocumentHasPagesVisibilityConverter}}" />
                </Grid>
            </dxb:BarManager>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="{dxpdft:LWKey PdfViewer.PresenterTemplate}">
        <Grid>
            <dxmvvm:Interaction.Behaviors>
                <dx:SplashScreenManagerService SplashScreenType="dxpdfi:PdfSplashScreen" />
            </dxmvvm:Interaction.Behaviors>
            <dxdo:DockLayoutManager AutoHideExpandMode="MouseDown" AutoHideMode="Inline" DataContext="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).DataContext, RelativeSource={RelativeSource TemplatedParent}}">
                <dxdo:LayoutGroup x:Name="Root" Margin="0">
                    <dxdo:LayoutPanel
                        x:Name="thumbnailsViewerPanel"
                        AutoHideExpandState="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualThumbnailsViewerSettings.ThumbnailsViewerState, Converter={StaticResource autoHideThumbnailsExpandStateConverter}, RelativeSource={RelativeSource Self}, Mode=TwoWay}"
                        Style="{DynamicResource {dxpdft:LWKey PdfViewer.PdfThumbnailsViewerPanelStyle}}"
                        Visibility="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).HasThumbnails, RelativeSource={RelativeSource TemplatedParent}, Converter={dx:BooleanToVisibilityConverter}}">
                        <dxpdf:PdfThumbnailsViewerControl
                            x:Name="thumbnailsViewer"
                            IsTabStop="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).AcceptsTab, RelativeSource={RelativeSource TemplatedParent}}"
                            KeyboardNavigation.TabNavigation="None"
                            SelectedPageNumber="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).CurrentPageNumber, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                            Settings="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualThumbnailsViewerSettings, RelativeSource={RelativeSource TemplatedParent}}" />
                    </dxdo:LayoutPanel>
                    <dxdo:LayoutPanel
                        x:Name="autoHidePanel"
                        AutoHideExpandState="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualDocumentMapSettings.OutlinesViewerState, Converter={StaticResource autoHideExpandStateConverter}, RelativeSource={RelativeSource Self}, Mode=TwoWay}"
                        Style="{DynamicResource {dxpdft:LWKey PdfViewer.PdfOutlinesViewerPanelStyle}}"
                        Visibility="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).HasOutlines, RelativeSource={RelativeSource TemplatedParent}, Converter={dx:BooleanToVisibilityConverter}}">
                        <dxpdf:PdfOutlinesViewerControl
                            x:Name="outlinesViewer"
                            IsTabStop="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).AcceptsTab, RelativeSource={RelativeSource TemplatedParent}}"
                            KeyboardNavigation.TabNavigation="None"
                            Settings="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualDocumentMapSettings, RelativeSource={RelativeSource Self}}"
                            Style="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualDocumentMapSettings.OutlinesViewerStyle, RelativeSource={RelativeSource TemplatedParent}}" />
                    </dxdo:LayoutPanel>
                    <dxdo:LayoutPanel AutoHideExpandState="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualAttachmentsViewerSettings.AttachmentsViewerState, Converter={StaticResource autoHideAttachmentsExpandStateConverter}, RelativeSource={RelativeSource Self}, Mode=TwoWay}" Style="{DynamicResource {dxpdft:LWKey PdfViewer.PdfAttachmentsViewerPanelStyle}}" Visibility="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).HasAttachments, RelativeSource={RelativeSource TemplatedParent}, Converter={dx:BooleanToVisibilityConverter}}">
                        <dxpdf:PdfAttachmentsViewerControl
                            x:Name="attachmentsViewer"
                            IsTabStop="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).AcceptsTab, RelativeSource={RelativeSource TemplatedParent}}"
                            KeyboardNavigation.TabNavigation="None"
                            Settings="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualAttachmentsViewerSettings, RelativeSource={RelativeSource Self}}"
                            Style="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualAttachmentsViewerSettings.AttachmentsViewerStyle, RelativeSource={RelativeSource TemplatedParent}}" />
                    </dxdo:LayoutPanel>
                    <dxdo:LayoutPanel ShowBorder="False" ShowCaption="False">
                        <dxpdf:PdfPresenterControl IsTabStop="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).AcceptsTab, RelativeSource={RelativeSource TemplatedParent}}" />
                    </dxdo:LayoutPanel>
                </dxdo:LayoutGroup>
            </dxdo:DockLayoutManager>
            <dxpdf:StartScreenControl
                NumberOfRecentFiles="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).NumberOfRecentFiles, RelativeSource={RelativeSource Self}}"
                RecentFiles="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).RecentFiles, RelativeSource={RelativeSource Self}}"
                ShowOpenFileButton="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ShowOpenFileOnStartScreen, RelativeSource={RelativeSource Self}}"
                Visibility="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).PropertyProvider.IsStartScreenVisible, RelativeSource={RelativeSource Self}, Converter={StaticResource booleanToVisibilityConverter}}" />
            <TextBlock
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="{dxpdf:PdfViewerControlLocalizedString MessageDocumentHasNoPages}"
                Visibility="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).Document.Pages, RelativeSource={RelativeSource Self}, FallbackValue=Collapsed, Converter={StaticResource DocumentHasPagesVisibilityConverter}}" />
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="{dxpdft:LWKey PdfViewer.PdfFlyoutControlPaginationTemplate}">
        <Grid Margin="10,0,10,0">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).CurrentPageNumber, RelativeSource={RelativeSource TemplatedParent}}" />
                <TextBlock Text=" / " />
                <TextBlock Text="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).PageCount, RelativeSource={RelativeSource TemplatedParent}}" />
            </StackPanel>
        </Grid>
    </DataTemplate>
    <ControlTemplate x:Key="{dxpdft:LWKey PdfViewer.PdfPresenterControlTemplate}" TargetType="{x:Type dxpdf:PdfPresenterControl}">
        <dx:DXBorder
            Margin="{DynamicResource {dxpdft:LWKey PdfViewer.PdfPresenterControlMargin}}"
            Background="{DynamicResource {dxpdft:LWKey PdfViewer.PdfPresenterControlBackgroundBrush}}"
            BorderBrush="{DynamicResource {dxpdft:LWKey PdfViewer.PdfPresenterControlBorderBrush}}"
            BorderThickness="{DynamicResource {dxpdft:LWKey PdfViewer.PdfPresenterControlBorderThickness}}"
            Focusable="False">
            <Grid>
                <dxe:NativeImage x:Name="PART_NativeImage" IsTabStop="False" />
                <dxpdf:PdfPagesSelector
                    x:Name="PART_ItemsControl"
                    Background="Transparent"
                    IsSearchControlVisible="{TemplateBinding IsSearchControlVisible}"
                    SearchParameter="{TemplateBinding SearchParameter}"
                    Style="{DynamicResource {dxpdft:LWKey PdfViewer.PdfPagesSelectorStyle}}"
                    VirtualizingStackPanel.VirtualizationMode="Recycling">
                    <dxpdf:PdfPagesSelector.ItemsPanel>
                        <ItemsPanelTemplate>
                            <dxdv:DocumentViewerPanel />
                        </ItemsPanelTemplate>
                    </dxpdf:PdfPagesSelector.ItemsPanel>
                </dxpdf:PdfPagesSelector>
                <dxpdf:SelectionCanvas SelectionRectangle="{TemplateBinding SelectionRectangle}" Visibility="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).CursorMode, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource cursorModeToSelectionVisibilityConverter}}" />
            </Grid>
        </dx:DXBorder>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxpdft:LWKey PdfViewer.Template}" TargetType="{x:Type dxpdf:PdfViewerControl}">
        <ContentControl
            Grid.RowSpan="3"
            Grid.ColumnSpan="3"
            Content="{TemplateBinding ActualCommandProvider}"
            ContentTemplate="{TemplateBinding ActualBarsTemplate}"
            Focusable="False" />
    </ControlTemplate>
    <ControlTemplate x:Key="ScrollViewerTemplate" TargetType="{x:Type dxpdf:DXScrollViewer}">
        <Grid x:Name="Grid" Margin="{TemplateBinding Margin}" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <ScrollContentPresenter
                x:Name="PART_ScrollContentPresenter"
                Margin="{TemplateBinding Padding}"
                CanContentScroll="{TemplateBinding CanContentScroll}"
                CanHorizontallyScroll="False"
                CanVerticallyScroll="False">
                <Grid.RowSpan>
                    <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}">
                        <Binding.Converter>
                            <dx:EnumToObjectConverter DefaultValue="1">
                                <dx:EnumToObjectConverter.Values>
                                    <dx:EnumObjectProvider x:Key="TouchOverlap" Value="2" />
                                </dx:EnumToObjectConverter.Values>
                            </dx:EnumToObjectConverter>
                        </Binding.Converter>
                    </Binding>
                </Grid.RowSpan>
                <Grid.ColumnSpan>
                    <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}">
                        <Binding.Converter>
                            <dx:EnumToObjectConverter DefaultValue="1">
                                <dx:EnumToObjectConverter.Values>
                                    <dx:EnumObjectProvider x:Key="TouchOverlap" Value="2" />
                                </dx:EnumToObjectConverter.Values>
                            </dx:EnumToObjectConverter>
                        </Binding.Converter>
                    </Binding>
                </Grid.ColumnSpan>
            </ScrollContentPresenter>
            <ScrollBar
                x:Name="PART_VerticalScrollBar"
                Grid.Row="0"
                Grid.Column="1"
                AutomationProperties.AutomationId="VerticalScrollBar"
                Cursor="Arrow"
                Maximum="{TemplateBinding ScrollableHeight}"
                Minimum="0"
                ViewportSize="{TemplateBinding ViewportHeight}"
                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
                <Grid.RowSpan>
                    <MultiBinding>
                        <MultiBinding.Bindings>
                            <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource Self}" />
                            <Binding Path="(dx:ScrollBarExtensions.ScrollViewerOrientation)" RelativeSource="{RelativeSource TemplatedParent}" />
                        </MultiBinding.Bindings>
                        <MultiBinding.Converter>
                            <dx:VerticalScrollBarRowSpanConverter />
                        </MultiBinding.Converter>
                    </MultiBinding>
                </Grid.RowSpan>
            </ScrollBar>
            <ScrollBar
                x:Name="PART_HorizontalScrollBar"
                Grid.Row="1"
                Grid.Column="0"
                AutomationProperties.AutomationId="HorizontalScrollBar"
                Cursor="Arrow"
                Maximum="{TemplateBinding ScrollableWidth}"
                Minimum="0"
                Orientation="Horizontal"
                ViewportSize="{TemplateBinding ViewportWidth}"
                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
                <Grid.ColumnSpan>
                    <MultiBinding>
                        <MultiBinding.Bindings>
                            <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource Self}" />
                            <Binding Path="(dx:ScrollBarExtensions.ScrollViewerOrientation)" RelativeSource="{RelativeSource TemplatedParent}" />
                        </MultiBinding.Bindings>
                        <MultiBinding.Converter>
                            <dx:HorizontalScrollBarRowSpanConverter />
                        </MultiBinding.Converter>
                    </MultiBinding>
                </Grid.ColumnSpan>
            </ScrollBar>
            <dx:DXBorder
                x:Name="Corner"
                Grid.Row="1"
                Grid.Column="1"
                Style="{DynamicResource {dxt:LWKey ScrollBar.ScrollingCornerStyle}}">
                <dx:DXBorder.Visibility>
                    <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}">
                        <Binding.Converter>
                            <dx:EnumToObjectConverter DefaultValue="Visible">
                                <dx:EnumToObjectConverter.Values>
                                    <dx:EnumObjectProvider x:Key="TouchOverlap" Value="Collapsed" />
                                </dx:EnumToObjectConverter.Values>
                            </dx:EnumToObjectConverter>
                        </Binding.Converter>
                    </Binding>
                </dx:DXBorder.Visibility>
            </dx:DXBorder>
            <dxe:FlyoutControl
                x:Name="PART_FlyoutControl"
                VerticalAlignment="Center"
                AllowMoveAnimation="False"
                ContentTemplate="{DynamicResource {dxpdft:LWKey PdfViewer.PdfFlyoutControlPaginationTemplate}}"
                IsOpen="False"
                PlacementTarget="{Binding ElementName=PART_VerticalScrollBar}">
                <dxe:FlyoutControl.Settings>
                    <dxe:FlyoutSettings Placement="Left" ShowIndicator="True" />
                </dxe:FlyoutControl.Settings>
            </dxe:FlyoutControl>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxpdft:LWKey PdfViewer.PdfPageSelectorTemplate}" TargetType="{x:Type dxpdf:PdfPagesSelector}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="{Binding Path=VerticalScrollBarWidth, ElementName=PART_ScrollViewer}" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <dxdv:DocumentPresenterDecorator
                x:Name="PART_Decorator"
                Grid.RowSpan="2"
                Grid.ColumnSpan="2"
                FocusVisualStyle="{x:Null}"
                Focusable="True"
                IsManipulationEnabled="True"
                KeyboardNavigation.IsTabStop="False">
                <dxpdf:DXScrollViewer
                    x:Name="PART_ScrollViewer"
                    Padding="{TemplateBinding Padding}"
                    dx:ScrollBarExtensions.ScrollBehavior="{dx:ScrollViewerScrollBehavior}"
                    dx:ScrollViewerTouchBehavior.IsEnabled="True"
                    CanContentScroll="True"
                    CanMouseScroll="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).CursorMode, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource cursorModeToCanMouseScrollConverter}}"
                    Focusable="false"
                    HorizontalScrollBarVisibility="Visible"
                    Template="{StaticResource ScrollViewerTemplate}"
                    VerticalScrollBarVisibility="Visible">
                    <dxmvvm:Interaction.Behaviors>
                        <dxpdf:CursorAttachedBehavior CursorMode="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).CursorMode, RelativeSource={RelativeSource TemplatedParent}}" />
                        <dx:ScrollViewerTouchBehavior Orientation="Vertical" />
                    </dxmvvm:Interaction.Behaviors>
                    <ItemsPresenter x:Name="PART_ItemsPresenter" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </dxpdf:DXScrollViewer>
            </dxdv:DocumentPresenterDecorator>
            <dx:DXExpander
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                FlowDirection="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).FlowDirection, RelativeSource={RelativeSource TemplatedParent}}"
                HorizontalExpand="FromLeftToRight"
                IsExpanded="{TemplateBinding IsSearchControlVisible}"
                Opacity="{Binding Path=AnimationProgress, RelativeSource={RelativeSource Self}}">
                <dxdv:SearchControlContainer IsSearchControlVisible="{TemplateBinding IsSearchControlVisible}" SearchParameter="{TemplateBinding SearchParameter}" />
            </dx:DXExpander>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxpdft:LWKey PdfViewer.SelectionCanvasTemplate}" TargetType="{x:Type dxpdf:SelectionCanvas}">
        <Canvas x:Name="PART_SelectionCanvas" ClipToBounds="True">
            <ContentControl
                Canvas.Left="{Binding Path=(SelectionRectangle).X, RelativeSource={RelativeSource TemplatedParent}}"
                Canvas.Top="{Binding Path=(SelectionRectangle).Y, RelativeSource={RelativeSource TemplatedParent}}"
                Width="{Binding Path=(SelectionRectangle).Width, RelativeSource={RelativeSource TemplatedParent}}"
                Height="{Binding Path=(SelectionRectangle).Height, RelativeSource={RelativeSource TemplatedParent}}"
                Content="{TemplateBinding SelectionRectangle}"
                ContentTemplate="{DynamicResource {dxpdft:LWKey PdfViewer.SelectionCanvasContentTemplate}}"
                Focusable="False" />
        </Canvas>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxpdft:LWKey PdfViewer.StartScreenControlTemplate}" TargetType="{x:Type dxpdf:StartScreenControl}">
        <Grid>
            <dx:DXBorder Background="{DynamicResource {dxpdft:LWKey PdfViewer.PdfPresenterControlBackgroundBrush}}">
                <StackPanel Margin="75,50,75,50" Orientation="Vertical">
                    <TextBlock Margin="0,0,0,25" FontSize="16" Text="{dxpdf:PdfViewerControlLocalizedString RecentDocumentsCaption}">
                        <TextBlock.Foreground>
                            <SolidColorBrush Color="{DynamicResource {dxpdft:LWKey PdfViewer.StartScreenCaptionForegroundColor}}" />
                        </TextBlock.Foreground>
                    </TextBlock>
                    <ItemsControl Margin="0,0,0,20" Focusable="False" ItemsSource="{TemplateBinding ActualRecentFiles}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Button
                                    Margin="0,0,0,3"
                                    Command="{Binding Path=Command}"
                                    CommandParameter="{Binding Path=DocumentSource}"
                                    Content="{Binding Path=Name}"
                                    Cursor="Hand"
                                    Focusable="False"
                                    Template="{DynamicResource {dxpdft:LWKey PdfViewer.StartScreenDocumentLinkTemplate}}" />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <Button
                        Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.OpenDocumentCommand, RelativeSource={RelativeSource TemplatedParent}}"
                        Content="{dxpdf:PdfViewerControlLocalizedString OpenDocumentCaption}"
                        Cursor="Hand"
                        Focusable="False"
                        Template="{DynamicResource {dxpdft:LWKey PdfViewer.StartScreenOpenDocumentTemplate}}"
                        Visibility="{Binding Path=ShowOpenFileButton, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource booleanToVisibilityConverter}}" />
                </StackPanel>
            </dx:DXBorder>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxpdft:LWKey PdfViewer.StartScreenDocumentLinkTemplate}" TargetType="{x:Type Button}">
        <dx:DXBorder Background="Transparent">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Image
                    Width="16"
                    Height="16"
                    Margin="0,0,7,0"
                    Source="{dxpdf:PdfResource Images/RecentDocument_16x16.png}" />
                <ContentPresenter Grid.Column="1" HorizontalAlignment="Left">
                    <TextBlock.Foreground>
                        <SolidColorBrush Color="{DynamicResource {dxpdft:LWKey PdfViewer.StartScreenDocumentLinkForegroundColor}}" />
                    </TextBlock.Foreground>
                </ContentPresenter>
            </Grid>
        </dx:DXBorder>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxpdft:LWKey PdfViewer.StartScreenOpenDocumentTemplate}" TargetType="{x:Type Button}">
        <dx:DXBorder Background="Transparent">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Image
                    Width="16"
                    Height="16"
                    Margin="0,0,7,0"
                    Source="{dxpdf:PdfResource Images/Open_16x16.png}" />
                <ContentPresenter Grid.Column="1" HorizontalAlignment="Left">
                    <TextBlock.Foreground>
                        <SolidColorBrush Color="{DynamicResource {dxpdft:LWKey PdfViewer.StartScreenOpenDocumentForegroundColor}}" />
                    </TextBlock.Foreground>
                </ContentPresenter>
            </Grid>
        </dx:DXBorder>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxpdft:LWKey PdfViewer.PdfBarContainerControlTemplate}" TargetType="{x:Type dxb:BarContainerControl}">
        <ItemsPresenter x:Name="PART_ItemsPresenter" Margin="{TemplateBinding Padding}" />
    </ControlTemplate>
    <ControlTemplate x:Key="{dxpdft:LWKey PdfViewer.PdfBarControlTemplate}" TargetType="{x:Type dxb:BarControl}">
        <ContentControl Focusable="False" IsTabStop="False">
            <ItemsPresenter x:Name="PART_ItemsPresenter" />
        </ContentControl>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxpdft:LWKey PdfViewer.LoadingProgressControlTemplate}" TargetType="{x:Type dxpdf:LoadingProgressControl}">
        <dx:DXBorder Background="White" BorderBrush="Black" BorderThickness="1">
            <StackPanel Margin="12" Orientation="Vertical">
                <TextBlock Text="{TemplateBinding Message}" TextTrimming="CharacterEllipsis">
                    <TextBlock.Foreground>
                        <SolidColorBrush Color="{DynamicResource {dxpdft:LWKey PdfViewer.LoadingDocumentLinkForegroundColor}}" />
                    </TextBlock.Foreground>
                </TextBlock>
                <dxe:ProgressBarEdit
                    Height="20"
                    Margin="0,12,0,0"
                    Maximum="{TemplateBinding TotalProgress}"
                    Value="{TemplateBinding Progress}">
                    <dxe:ProgressBarEdit.StyleSettings>
                        <dxe:ProgressBarMarqueeStyleSettings />
                    </dxe:ProgressBarEdit.StyleSettings>
                </dxe:ProgressBarEdit>
            </StackPanel>
        </dx:DXBorder>
    </ControlTemplate>
    <dx:BoolToObjectConverter x:Key="IsAutoNumericButtonCountToButtonContainerTemplateConverter" FalseValue="{DynamicResource {dxt:LWKey DataPager.FixedNumericButtonCountButtonContainerTemplate}}" TrueValue="{DynamicResource {dxt:LWKey DataPager.AutoNumericButtonCountButtonContainerTemplate}}" />
    <ControlTemplate x:Key="{dxpdft:LWKey PdfViewer.PrintDialogDataPagerTemplate}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <StackPanel
                Grid.Column="0"
                Margin="0,0,16,0"
                Orientation="Horizontal"
                Tag="1"
                Visibility="{Binding ShowTotalPageCount, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}">
                <TextBlock VerticalAlignment="Center" Text="{Binding Source={StaticResource localizer}, Converter={StaticResource DataPagerPageExtract}}" />
                <dxe:SpinEdit
                    Margin="4,0,4,0"
                    AllowRoundOutOfRangeValue="True"
                    EditValue="{Binding CurrentPageParams, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource DataPagerPageIndexToPageNumberConverter}, Mode=TwoWay}"
                    IsFloatValue="False"
                    MaxValue="{Binding Path=PageCount, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource DataPagerCurrentPageEditMaxValueConverter}}"
                    MinValue="{Binding Path=PageCount, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource DataPagerCurrentPageEditMinValueConverter}}"
                    ShowEditorButtons="False"
                    ValidateOnTextInput="False" />
                <TextBlock VerticalAlignment="Center" Text="{Binding PageCount, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource DataPagerPageCountToTitleConverter}}" />
                <TextBlock VerticalAlignment="Center" Text="{Binding Path=PdfViewModel.CurrentPreviewPageNumber, Converter={StaticResource dataPagerPageNumberConverter}}" Visibility="{Binding Path=PdfViewModel.PrintRange, Converter={StaticResource PrintRangeToVisiblityConverter}}" />
            </StackPanel>
            <ContentControl
                Grid.Column="1"
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                Template="{DynamicResource {dxt:LWKey DataPager.ButtonAreaBorderTemplate}}">
                <dxedp:DataPagerButtonContainer x:Name="PART_ButtonContainer" dxedp:DataPager.DataPager="{Binding Path=(dxedp:DataPager.DataPager), RelativeSource={RelativeSource TemplatedParent}}" Template="{Binding Path=IsAutoNumericButtonCount, Converter={StaticResource IsAutoNumericButtonCountToButtonContainerTemplateConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
            </ContentControl>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxpdft:LWKey PdfViewer.StickyNotesEditDisplayTemplate}">
        <dx:DXBorder
            x:Name="PART_Editor"
            Width="10"
            Height="10"
            Background="Red" />
    </ControlTemplate>
    <DataTemplate x:Key="{dxpdft:LWKey PdfViewer.PdfPrintEditorTemplate}">
        <Grid>
            <dxmvvm:Interaction.Behaviors>
                <dxpdfi:PdfPrintEditorAttachedBehavior HasValidationError="{Binding Path=(dxe:ValidationService.HasValidationError), RelativeSource={RelativeSource TemplatedParent}}" />
            </dxmvvm:Interaction.Behaviors>
            <dxlc:DockLayoutControl x:Name="PART_DockLayoutControl" Margin="5" AllowItemSizing="True">
                <dxlc:LayoutGroup
                    x:Name="PART_DockPreviewPart"
                    Width="427"
                    Margin="5"
                    dxlc:DockLayoutControl.Dock="Left"
                    Orientation="Vertical">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <dxe:ImageEdit
                            x:Name="PART_ImagePreview"
                            Grid.Row="0"
                            Margin="0,0,0,10"
                            EditValue="{Binding Path=PdfViewModel.PreviewImageBytes, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                            ShowMenu="False"
                            Stretch="None" />
                        <dxpdfi:PrintDialogDataPager
                            Grid.Row="1"
                            HorizontalAlignment="Center"
                            DisplayMode="FirstLastPreviousNext"
                            IsTotalItemCountFixed="True"
                            PageSize="1"
                            ShowTotalPageCount="True"
                            Source="{Binding Path=PdfViewModel.PageNumbers, Converter={StaticResource IEnumerableToPagedCollectionConverter}}"
                            PageIndex="{Binding Path=PdfViewModel.PagePreviewIndex, Mode=TwoWay}" />
                    </Grid>
                </dxlc:LayoutGroup>
                <dxlc:LayoutGroup
                    x:Name="PART_DockClientPart"
                    MinWidth="425"
                    Margin="5"
                    dxlc:DockLayoutControl.AllowHorizontalSizing="True"
                    dxlc:DockLayoutControl.Dock="Client"
                    ItemLabelsAlignment="Local"
                    Orientation="Vertical">
                    <dxlc:LayoutItem AddColonToLabel="True" Label="{Binding Source={x:Null}, Converter={StaticResource PdfViewerStringIdConverter}, ConverterParameter=PrintDialogPrinterName}">
                        <dxlc:LayoutGroup Orientation="Horizontal">
                            <dxlc:LayoutItem VerticalAlignment="Center" VerticalContentAlignment="Center">
                                <dxe:ComboBoxEdit
                                    Margin="5,0,0,0"
                                    ApplyItemTemplateToSelectedItem="True"
                                    IsTextEditable="False"
                                    ItemsSource="{Binding Path=PdfViewModel.PrinterItems}"
                                    SelectedIndex="{Binding Path=PdfViewModel.PrinterIndex}">
                                    <dxe:ComboBoxEdit.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <Image Source="{Binding Path=PrinterType, Converter={StaticResource printerTypeToImageConverter}}" />
                                                <TextBlock Margin="2,2,4,2" VerticalAlignment="Center" Text="{Binding Path=DisplayName}" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </dxe:ComboBoxEdit.ItemTemplate>
                                </dxe:ComboBoxEdit>
                            </dxlc:LayoutItem>
                            <dxlc:LayoutItem Width="{DynamicResource {dxpdft:LWKey PdfViewer.PrintDialogRightColumnWidth}}" VerticalAlignment="Center" VerticalContentAlignment="Center">
                                <Button Command="{Binding Path=PreferencesCommand}" Content="{Binding Source={x:Null}, Converter={StaticResource PdfViewerStringIdConverter}, ConverterParameter=PrintDialogPrinterPreferences}" />
                            </dxlc:LayoutItem>
                        </dxlc:LayoutGroup>
                    </dxlc:LayoutItem>
                    <dxlc:LayoutItem AddColonToLabel="True" Label="{Binding Source={x:Null}, Converter={StaticResource PdfViewerStringIdConverter}, ConverterParameter=PrintDialogStatus}">
                        <TextBlock Margin="5,0,0,0" Text="{Binding Path=PdfViewModel.PrinterStatus}" />
                    </dxlc:LayoutItem>
                    <dxlc:LayoutItem AddColonToLabel="True" Label="{Binding Source={x:Null}, Converter={StaticResource PdfViewerStringIdConverter}, ConverterParameter=PrintDialogLocation}">
                        <TextBlock Margin="5,0,0,0" Text="{Binding Path=PdfViewModel.PrinterLocation}" />
                    </dxlc:LayoutItem>
                    <dxlc:LayoutItem AddColonToLabel="True" Label="{Binding Source={x:Null}, Converter={StaticResource PdfViewerStringIdConverter}, ConverterParameter=PrintDialogComment}">
                        <TextBlock Margin="5,0,0,0">
                            <dxmvvm:Interaction.Behaviors>
                                <dxpdfi:TextBlockTextTrimmingBehavior MaxLength="75" Text="{Binding Path=PdfViewModel.PrinterComment}" />
                            </dxmvvm:Interaction.Behaviors>
                        </TextBlock>
                    </dxlc:LayoutItem>
                    <dxlc:LayoutItem AddColonToLabel="True" Label="{Binding Source={x:Null}, Converter={StaticResource PdfViewerStringIdConverter}, ConverterParameter=PrintDialogDocumentsInQueue}">
                        <TextBlock Margin="5,0,0,0" Text="{Binding Path=PdfViewModel.PrinterDocumentsInQueue}" />
                    </dxlc:LayoutItem>
                    <dxlc:LayoutItem AddColonToLabel="True" Label="{Binding Source={x:Null}, Converter={StaticResource PdfViewerStringIdConverter}, ConverterParameter=PrintDialogNumberOfCopies}">
                        <dxlc:LayoutGroup Margin="5,0,0,0" Orientation="Horizontal" View="Group">
                            <dxlc:LayoutItem>
                                <dxe:SpinEdit
                                    AllowRoundOutOfRangeValue="True"
                                    EditValue="{Binding Path=PdfViewModel.Copies, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource changeTypeConverter}, Mode=TwoWay}"
                                    IsFloatValue="False"
                                    MaxValue="32767"
                                    MinValue="1" />
                            </dxlc:LayoutItem>
                            <dxlc:LayoutItem Width="{DynamicResource {dxpdft:LWKey PdfViewer.PrintDialogRightColumnWidth}}" VerticalAlignment="Center">
                                <dxe:CheckEdit
                                    VerticalAlignment="Center"
                                    Content="{Binding Source={x:Null}, Converter={StaticResource PdfViewerStringIdConverter}, ConverterParameter=PrintDialogCollate}"
                                    EditValue="{Binding Path=PdfViewModel.Collate, Mode=TwoWay}"
                                    IsEnabled="{Binding Path=PdfViewModel.AllowCollate}" />
                            </dxlc:LayoutItem>
                        </dxlc:LayoutGroup>
                    </dxlc:LayoutItem>
                    <dxlc:LayoutItem Margin="0,10,0,0" AddColonToLabel="True" Label="{Binding Source={x:Null}, Converter={StaticResource PdfViewerStringIdConverter}, ConverterParameter=PrintDialogPageRange}">
                        <dxe:ListBoxEdit
                            Margin="5,0,0,0"
                            HorizontalContentAlignment="Stretch"
                            Background="{x:Null}"
                            SelectedIndex="{Binding Path=PdfViewModel.PrintRange, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource printRangeConverter}}"
                            ShowBorder="False">
                            <dxe:ListBoxEdit.StyleSettings>
                                <dxe:RadioListBoxEditStyleSettings />
                            </dxe:ListBoxEdit.StyleSettings>
                            <dxe:ListBoxEditItem>
                                <TextBlock Text="{Binding Source={x:Null}, Converter={StaticResource PdfViewerStringIdConverter}, ConverterParameter=PrintDialogPageRangeAll}" />
                            </dxe:ListBoxEditItem>
                            <dxe:ListBoxEditItem>
                                <TextBlock Text="{Binding Source={x:Null}, Converter={StaticResource PdfViewerStringIdConverter}, ConverterParameter=PrintDialogPageRangeCurrent}" />
                            </dxe:ListBoxEditItem>
                            <dxe:ListBoxEditItem>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" VerticalAlignment="Center" Text="{Binding Source={x:Null}, Converter={StaticResource PdfViewerStringIdConverter}, ConverterParameter=PrintDialogPageRangePages}" />
                                    <dxe:TextEdit
                                        Grid.Column="1"
                                        Margin="10,0,0,0"
                                        VerticalAlignment="Center"
                                        EditValue="{Binding Path=(DataContext).PdfViewModel.PageRangeText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        IsEnabled="{Binding Path=(DataContext).PdfViewModel.AllowSomePages}"
                                        Mask="(\d+(-\d+)?)(,(\d+(-\d+)?))*"
                                        MaskShowPlaceHolders="False"
                                        MaskType="RegEx"
                                        Tag="{Binding Path=(DataContext).PdfViewModel.PageRangeText, ValidatesOnDataErrors=True}"
                                        ValidateOnTextInput="True" />
                                    <TextBlock
                                        Grid.Column="2"
                                        Width="{DynamicResource {dxpdft:LWKey PdfViewer.PrintDialogRightColumnWidth}}"
                                        Margin="5,0,0,0"
                                        VerticalAlignment="Center"
                                        IsEnabled="False"
                                        Text="{Binding Source={x:Null}, Converter={StaticResource PdfViewerStringIdConverter}, ConverterParameter=PrintDialogPageRangePagesExample}" />
                                </Grid>
                            </dxe:ListBoxEditItem>
                        </dxe:ListBoxEdit>
                    </dxlc:LayoutItem>
                    <dxlc:LayoutItem Margin="0,10,0,0" AddColonToLabel="True" Label="{Binding Source={x:Null}, Converter={StaticResource PdfViewerStringIdConverter}, ConverterParameter=PrintDialogPageSizing}">
                        <dxe:ListBoxEdit
                            Margin="5,0,0,0"
                            Background="{x:Null}"
                            SelectedIndex="{Binding Path=PdfViewModel.ScaleMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource pdfPrintScaleModeConverter}}"
                            ShowBorder="False">
                            <dxe:ListBoxEdit.StyleSettings>
                                <dxe:RadioListBoxEditStyleSettings />
                            </dxe:ListBoxEdit.StyleSettings>
                            <dxe:ListBoxEditItem>
                                <TextBlock Text="{Binding Source={x:Null}, Converter={StaticResource PdfViewerStringIdConverter}, ConverterParameter=PrintDialogPageSizingFit}" />
                            </dxe:ListBoxEditItem>
                            <dxe:ListBoxEditItem>
                                <TextBlock Text="{Binding Source={x:Null}, Converter={StaticResource PdfViewerStringIdConverter}, ConverterParameter=PrintDialogPageSizingActualSize}" />
                            </dxe:ListBoxEditItem>
                            <dxe:ListBoxEditItem>
                                <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                                    <TextBlock VerticalAlignment="Center" Text="{Binding Source={x:Null}, Converter={StaticResource PdfViewerStringIdConverter}, ConverterParameter=PrintDialogPageSizingCustomScale}" />
                                    <dxe:SpinEdit
                                        Margin="10,0,0,0"
                                        VerticalAlignment="Center"
                                        AllowRoundOutOfRangeValue="True"
                                        EditValue="{Binding Path=(DataContext).PdfViewModel.Scale, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, Converter={StaticResource changeTypeConverter}}"
                                        IsEnabled="{Binding Path=(DataContext).PdfViewModel.ScaleMode, Converter={StaticResource scaleModeToScaleEditEnabledConverter}}"
                                        Mask="P"
                                        MaskShowPlaceHolders="False"
                                        MaskUseAsDisplayFormat="True"
                                        MaxValue="500"
                                        MinValue="0"
                                        ValidateOnTextInput="False" />
                                </StackPanel>
                            </dxe:ListBoxEditItem>
                        </dxe:ListBoxEdit>
                    </dxlc:LayoutItem>
                    <dxlc:LayoutItem Margin="0,10,0,0" AddColonToLabel="True" Label="{Binding Source={x:Null}, Converter={StaticResource PdfViewerStringIdConverter}, ConverterParameter=PrintDialogOrientation}">
                        <dxe:ListBoxEdit
                            Margin="5,0,0,0"
                            Background="{x:Null}"
                            ItemsSource="{dxe:EnumItemsSource EnumType={x:Type dxpdfd:PdfPrintPageOrientation}, NameConverter={StaticResource pdfPrintPageOrientationEnumConverter}}"
                            SelectedIndex="{Binding Path=PdfViewModel.PageOrientation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource pdfPrintPageOrientationConverter}}"
                            ShowBorder="False">
                            <dxe:ListBoxEdit.StyleSettings>
                                <dxe:RadioListBoxEditStyleSettings />
                            </dxe:ListBoxEdit.StyleSettings>
                        </dxe:ListBoxEdit>
                    </dxlc:LayoutItem>
                    <dxlc:LayoutItem Margin="0,10,0,0" AddColonToLabel="True" Label="{Binding Source={x:Null}, Converter={StaticResource PdfViewerStringIdConverter}, ConverterParameter=PrintDialogPaperSource}">
                        <Grid Margin="5,0,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="{DynamicResource {dxpdft:LWKey PdfViewer.PrintDialogRightColumnGridLength}}" />
                            </Grid.ColumnDefinitions>
                            <dxe:ComboBoxEdit
                                Grid.Column="0"
                                Margin="0,0,4,0"
                                IsTextEditable="False"
                                ItemsSource="{Binding Path=PdfViewModel.PaperSources}"
                                SelectedIndex="{Binding Path=PdfViewModel.PaperSourceIndex}" />
                        </Grid>
                    </dxlc:LayoutItem>
                    <dxlc:LayoutItem AddColonToLabel="True" Label="{Binding Source={x:Null}, Converter={StaticResource PdfViewerStringIdConverter}, ConverterParameter=PrintDialogFilePath}">
                        <dxlc:LayoutGroup Margin="5,0,0,0">
                            <dxlc:LayoutItem>
                                <dxe:ButtonEdit
                                    x:Name="PART_PrintFileSelectButton"
                                    AllowDefaultButton="False"
                                    AllowNullInput="False"
                                    EditValue="{Binding Path=PdfViewModel.PrintFileName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                    IsEnabled="{Binding Path=PdfViewModel.PrintToFile}"
                                    Tag="{Binding Path=PdfViewModel.PrintFileName, ValidatesOnDataErrors=True}">
                                    <dxe:ButtonEdit.Buttons>
                                        <dxe:ButtonInfo Command="{Binding Path=FileSelectCommand}" GlyphKind="Regular" />
                                    </dxe:ButtonEdit.Buttons>
                                </dxe:ButtonEdit>
                            </dxlc:LayoutItem>
                            <dxlc:LayoutItem Width="{DynamicResource {dxpdft:LWKey PdfViewer.PrintDialogRightColumnWidth}}" VerticalAlignment="Center">
                                <dxe:CheckEdit VerticalAlignment="Center" Content="{Binding Source={x:Null}, Converter={StaticResource PdfViewerStringIdConverter}, ConverterParameter=PrintDialogPrintToFile}" EditValue="{Binding Path=PdfViewModel.PrintToFile, Mode=TwoWay}" />
                            </dxlc:LayoutItem>
                        </dxlc:LayoutGroup>
                    </dxlc:LayoutItem>
                </dxlc:LayoutGroup>
            </dxlc:DockLayoutControl>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="{dxpdft:LWKey PdfViewer.StickyNotesEditToolTipTemplate}">
        <StackPanel>
            <TextBlock FontWeight="Bold" Text="{Binding Path=Title}" />
            <Separator Margin="0,10,0,0" />
            <TextBlock Text="{Binding Path=EditValue}" />
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="{dxpdft:LWKey PdfViewer.PdfCommentViewerItemHeaderTemplate}">
        <TextBlock x:Name="PART_GroupHeader" Margin="10" Text="{Binding Path=Row}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxpdft:LWKey PdfViewer.PdfCommentViewerItemTemplate}">
        <dx:DXBorder x:Name="PART_CommentViewerItemBorder" BorderThickness="0">
            <Grid Margin="10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <dx:DXImage Grid.Row="0" Grid.Column="0" />
                <TextBlock
                    Grid.Row="0"
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    FontWeight="Bold"
                    Text="{Binding Path=Row.Author}" />
                <dxe:CheckEdit
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="3"
                    Margin="8,0,0,0"
                    Padding="0"
                    VerticalAlignment="Top"
                    EditValue="{Binding Path=Row.Marked, Mode=TwoWay}" />
                <TextBlock
                    Grid.Row="1"
                    Grid.Column="0"
                    Grid.ColumnSpan="4"
                    Foreground="{DynamicResource {dxpdft:LWKey PdfViewer.PdfCommentViewerCommentDateForegroundBrush}}"
                    Text="{Binding Path=Row.Subject}" />
                <TextBlock
                    Grid.Row="2"
                    Grid.Column="0"
                    Grid.ColumnSpan="4"
                    VerticalAlignment="Center"
                    Foreground="{DynamicResource {dxpdft:LWKey PdfViewer.PdfCommentViewerCommentDateForegroundBrush}}"
                    Text="{Binding Path=Row.ModificationDate, Converter={dxpdf:CommentViewerDateConverter}}"
                    ToolTip="{Binding Path=Row.ModificationDate.DateTime}" />
                <dxe:TextEdit
                    x:Name="PART_Editor"
                    Grid.Row="3"
                    Grid.Column="0"
                    Grid.ColumnSpan="4"
                    Margin="{Binding Path=(dxpdf:PdfCommentViewerControl.AllowEditingCurrentEditor), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxg:GridRow}}, Converter={dxpdf:CommentViewerEditorMarginConverter}}"
                    Padding="1"
                    AcceptsReturn="True"
                    IsReadOnly="{Binding Path=(dxpdf:PdfCommentViewerControl.AllowEditingCurrentEditor), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxg:GridRow}}, Converter={dx:BoolInverseConverter}, Mode=TwoWay}"
                    ShowBorderInInplaceMode="{Binding Path=(dxpdf:PdfCommentViewerControl.AllowEditingCurrentEditor), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxg:GridRow}}}"
                    TextWrapping="WrapWithOverflow">
                    <dxe:TextEdit.Visibility>
                        <MultiBinding Converter="{dxpdf:CommentViewerCommentEditorVisibilityConverter}">
                            <Binding Path="EditValue" RelativeSource="{RelativeSource Self}" />
                            <Binding Path="IsReadOnly" RelativeSource="{RelativeSource Self}" />
                        </MultiBinding>
                    </dxe:TextEdit.Visibility>
                </dxe:TextEdit>
                <ItemsControl
                    Grid.Row="4"
                    Grid.Column="0"
                    Grid.ColumnSpan="4"
                    Margin="0,8,0,0">
                    <dxmvvm:Interaction.Behaviors>
                        <dxpdf:CommentViewerReviewsItemsControlBehavior ItemsSource="{Binding Path=Row.Reviews}" />
                    </dxmvvm:Interaction.Behaviors>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Margin="0,0,8,0" Orientation="Horizontal">
                                <dx:DXImage
                                    Width="16"
                                    Height="16"
                                    Margin="0,0,4,0"
                                    Source="{Binding Path=Status, Converter={dxpdf:CommentViewerStatusToImageConverter}}"
                                    ToolTip="{Binding Path=Authors}" />
                                <TextBlock Text="{Binding Path=Count}" />
                            </StackPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <StackPanel
                    x:Name="PART_ReplyEditorPanel"
                    Grid.Row="5"
                    Grid.Column="0"
                    Grid.ColumnSpan="4"
                    Margin="0,8,0,0"
                    Orientation="Vertical">
                    <StackPanel.Visibility>
                        <MultiBinding Converter="{dxpdf:CommentViewerCommentReplyEditorVisibilityConverter}">
                            <Binding Path="IsFocusedCell" RelativeSource="{RelativeSource TemplatedParent}" />
                            <Binding ElementName="PART_Editor" Path="IsReadOnly" />
                            <Binding Path="(dxpdf:PdfCommentViewerControl.CommentViewer).ActualSettings.AllowCommentReplies" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type dxg:GridRow}}" />
                        </MultiBinding>
                    </StackPanel.Visibility>
                    <dxe:TextEdit
                        x:Name="PART_AddReplyTextEdit"
                        MinHeight="60"
                        Margin="0,0,0,4"
                        VerticalContentAlignment="Top"
                        AcceptsReturn="True"
                        TextWrapping="WrapWithOverflow" />
                    <Button Command="{x:Static dxpdf:PdfCommentViewerCommands.AddReplyCommand}" CommandTarget="{Binding ElementName=PART_TreeListControl}" Content="{dxpdf:PdfViewerControlLocalizedString CommentViewerAddStickyNoteReply}">
                        <Button.CommandParameter>
                            <MultiBinding Converter="{dxpdf:CommentViewerAddReplyConverter}">
                                <Binding ElementName="PART_TreeListControl" Path="CurrentItem" />
                                <Binding ElementName="PART_AddReplyTextEdit" Path="EditValue" />
                            </MultiBinding>
                        </Button.CommandParameter>
                    </Button>
                </StackPanel>
            </Grid>
        </dx:DXBorder>
        <DataTemplate.Triggers>
            <Trigger SourceName="PART_Editor" Property="IsReadOnly" Value="False">
                <Setter TargetName="PART_Editor" Property="Padding" Value="0" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=IsFocusedCell, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                <Setter TargetName="PART_CommentViewerItemBorder" Property="Background" Value="{DynamicResource {dxpdft:LWKey PdfViewer.PdfCommentViewerSelectionBrush}}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <ControlTemplate x:Key="{dxpdft:LWKey PdfViewer.PdfCommentViewerItemContainerTemplate}" TargetType="{x:Type ContentControl}">
        <dx:DXBorder
            Padding="8"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="0,1,0,0">
            <ContentPresenter />
        </dx:DXBorder>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxpdft:LWKey PdfViewer.PdfCommentViewerControlTemplate}" TargetType="{x:Type dxpdf:PdfCommentViewerControl}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <dx:DXBorder BorderBrush="{DynamicResource {dxpdft:LWKey PdfViewer.PdfCommentViewerControlToolBarBorderBrush}}" BorderThickness="{DynamicResource {dxpdft:LWKey PdfViewer.PdfCommentViewerControlToolBarBorderThickness}}">
                <dxb:ToolBarControl AllowQuickCustomization="False" ShowDragWidget="False" UseWholeRow="True">
                    <dxdv:ShowOptionsBarItem dxdv:DocumentViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.CommentViewerShowOptions}" Glyph="{dxpdf:PdfResource Images/Comments/Menu_16x16.png}" IsEnabled="{TemplateBinding HasComments}">
                        <dxb:BarButtonItem
                            dxdv:DocumentViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.CommentViewerExpandAll}"
                            Command="{x:Static dxpdf:PdfCommentViewerCommands.ExpandAllCommand}"
                            CommandTarget="{Binding ElementName=PART_TreeListControl}"
                            Content="{dxpdf:PdfViewerControlLocalizedString CommentViewerExpandAllCaption}" />
                        <dxb:BarButtonItem
                            dxdv:DocumentViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.CommentViewerCollapseAll}"
                            Command="{x:Static dxpdf:PdfCommentViewerCommands.CollapseAllCommand}"
                            CommandTarget="{Binding ElementName=PART_TreeListControl}"
                            Content="{dxpdf:PdfViewerControlLocalizedString CommentViewerCollapseAllCaption}" />
                    </dxdv:ShowOptionsBarItem>
                    <dxpdf:SortCommentsBarItem dxdv:DocumentViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.CommentViewerSort}" Glyph="{dxpdf:PdfResource Images/Comments/SortAsc_16x16.png}" IsEnabled="{TemplateBinding HasComments}">
                        <dxb:BarCheckItem
                            dxdv:DocumentViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.CommentViewerSortPage}"
                            Command="{x:Static dxpdf:PdfCommentViewerCommands.SortCommand}"
                            CommandParameter="Page"
                            CommandTarget="{Binding ElementName=PART_TreeListControl}"
                            Content="{dxpdf:PdfViewerControlLocalizedString CommentViewerSortPageCaption}"
                            IsChecked="{Binding Path=ActualSettings.Sort, RelativeSource={RelativeSource TemplatedParent}, Converter={dxpdf:CommentViewerSortToCheckedConverter}, ConverterParameter=Page}" />
                        <dxb:BarCheckItem
                            dxdv:DocumentViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.CommentViewerSortAuthor}"
                            Command="{x:Static dxpdf:PdfCommentViewerCommands.SortCommand}"
                            CommandParameter="Author"
                            CommandTarget="{Binding ElementName=PART_TreeListControl}"
                            Content="{dxpdf:PdfViewerControlLocalizedString CommentViewerSortAuthorCaption}"
                            IsChecked="{Binding Path=ActualSettings.Sort, RelativeSource={RelativeSource TemplatedParent}, Converter={dxpdf:CommentViewerSortToCheckedConverter}, ConverterParameter=Author}" />
                        <dxb:BarCheckItem
                            dxdv:DocumentViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.CommentViewerSortDate}"
                            Command="{x:Static dxpdf:PdfCommentViewerCommands.SortCommand}"
                            CommandParameter="Date"
                            CommandTarget="{Binding ElementName=PART_TreeListControl}"
                            Content="{dxpdf:PdfViewerControlLocalizedString CommentViewerSortDateCaption}"
                            IsChecked="{Binding Path=ActualSettings.Sort, RelativeSource={RelativeSource TemplatedParent}, Converter={dxpdf:CommentViewerSortToCheckedConverter}, ConverterParameter=Date}" />
                        <dxb:BarCheckItem
                            dxdv:DocumentViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.CommentViewerSortType}"
                            Command="{x:Static dxpdf:PdfCommentViewerCommands.SortCommand}"
                            CommandParameter="Type"
                            CommandTarget="{Binding ElementName=PART_TreeListControl}"
                            Content="{dxpdf:PdfViewerControlLocalizedString CommentViewerSortTypeCaption}"
                            IsChecked="{Binding Path=ActualSettings.Sort, RelativeSource={RelativeSource TemplatedParent}, Converter={dxpdf:CommentViewerSortToCheckedConverter}, ConverterParameter=Type}" />
                        <dxb:BarCheckItem
                            dxdv:DocumentViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.CommentViewerSortCheckmarkStatus}"
                            Command="{x:Static dxpdf:PdfCommentViewerCommands.SortCommand}"
                            CommandParameter="Checked"
                            CommandTarget="{Binding ElementName=PART_TreeListControl}"
                            Content="{dxpdf:PdfViewerControlLocalizedString CommentViewerSortCheckmarkStatusCaption}"
                            IsChecked="{Binding Path=ActualSettings.Sort, RelativeSource={RelativeSource TemplatedParent}, Converter={dxpdf:CommentViewerSortToCheckedConverter}, ConverterParameter=Checked}" />
                    </dxpdf:SortCommentsBarItem>
                    <dxpdf:FilterCommentsBarItem dxdv:DocumentViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.CommentViewerFilter}" Glyph="{dxpdf:PdfResource Images/Comments/Filter_16x16.png}" IsEnabled="{TemplateBinding HasComments}">
                        <dxmvvm:Interaction.Behaviors>
                            <dxpdf:CommentViewerFilterCommentsBarItemBehavior Filter="{Binding Path=ActualSettings.Filter, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" FilterItems="{Binding Path=ActualSettings.TreeViewModel.FilterItems, RelativeSource={RelativeSource TemplatedParent}}" />
                        </dxmvvm:Interaction.Behaviors>
                        <dxb:BarSubItem dxdv:DocumentViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.CommentViewerFilterAuthorGroup}" Content="{dxpdf:PdfViewerControlLocalizedString CommentViewerFilterAuthorGroupCaption}" IsVisible="False" />
                        <dxb:BarSubItem dxdv:DocumentViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.CommentViewerFilterTypeGroup}" Content="{dxpdf:PdfViewerControlLocalizedString CommentViewerFilterTypeGroupCaption}" IsVisible="False" />
                        <dxb:BarSubItem dxdv:DocumentViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.CommentViewerFilterStatusGroup}" Content="{dxpdf:PdfViewerControlLocalizedString CommentViewerFilterStatusGroupCaption}" IsVisible="False" />
                        <dxb:BarSubItem dxdv:DocumentViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.CommentViewerFilterCheckedGroup}" Content="{dxpdf:PdfViewerControlLocalizedString CommentViewerFilterCheckedGroupCaption}">
                            <dxb:BarCheckItem
                                dxdv:DocumentViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.CommentViewerFilterCheckedGroupChecked}"
                                Command="{x:Static dxpdf:PdfCommentViewerCommands.FilterCommand}"
                                CommandTarget="{Binding ElementName=PART_TreeListControl}"
                                Content="{dxpdf:PdfViewerControlLocalizedString CommentViewerFilterCheckedGroupCheckedCaption}">
                                <dxb:BarCheckItem.CommandParameter>
                                    <dxpdf:PdfCommentViewerFilterCommandParameter Type="Checked" Value="{StaticResource TrueBoolean}" />
                                </dxb:BarCheckItem.CommandParameter>
                            </dxb:BarCheckItem>
                            <dxb:BarCheckItem
                                dxdv:DocumentViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.CommentViewerFilterCheckedGroupUnchecked}"
                                Command="{x:Static dxpdf:PdfCommentViewerCommands.FilterCommand}"
                                CommandTarget="{Binding ElementName=PART_TreeListControl}"
                                Content="{dxpdf:PdfViewerControlLocalizedString CommentViewerFilterCheckedGroupUncheckedCaption}">
                                <dxb:BarCheckItem.CommandParameter>
                                    <dxpdf:PdfCommentViewerFilterCommandParameter Type="Checked" Value="{StaticResource FalseBoolean}" />
                                </dxb:BarCheckItem.CommandParameter>
                            </dxb:BarCheckItem>
                        </dxb:BarSubItem>
                        <dxb:BarItemSeparator />
                        <dxb:BarButtonItem dxdv:DocumentViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.CommentViewerFilterClearAll}" Command="{x:Static dxpdf:PdfCommentViewerCommands.ClearFilterCommand}" Content="{dxpdf:PdfViewerControlLocalizedString CommentViewerFilterClearAllCaption}" />
                    </dxpdf:FilterCommentsBarItem>
                    <dxdv:SearchBarStaticItem
                        dxdv:DocumentViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.CommentViewerSearch}"
                        AutoSizeMode="Fill"
                        ContentAlignment="Stretch"
                        IsEnabled="{TemplateBinding HasComments}">
                        <dxdv:SearchBarStaticItem.ContentTemplate>
                            <DataTemplate>
                                <dxe:ButtonEdit
                                    x:Name="PART_SearchButtonEdit"
                                    AllowDefaultButton="False"
                                    EditValue="{Binding Path=ActualSettings.Filter.SearchText, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxpdf:PdfCommentViewerControl}}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    EditValuePostDelay="1000"
                                    EditValuePostMode="Delayed"
                                    NullText="{dxpdf:PdfViewerControlLocalizedString CommentViewerSearchTextCaption}"
                                    NullValueButtonPlacement="EditBox"
                                    SelectAllOnGotFocus="True">
                                    <dxmvvm:Interaction.Behaviors>
                                        <dxmvvm:EventToCommand Command="{x:Static dxpdf:PdfCommentViewerCommands.FilterCommand}" CommandTarget="{Binding ElementName=PART_TreeListControl}" EventName="EditValueChanged">
                                            <dxmvvm:EventToCommand.CommandParameter>
                                                <dxpdf:PdfCommentViewerFilterCommandParameter Type="Search" />
                                            </dxmvvm:EventToCommand.CommandParameter>
                                        </dxmvvm:EventToCommand>
                                    </dxmvvm:Interaction.Behaviors>
                                </dxe:ButtonEdit>
                            </DataTemplate>
                        </dxdv:SearchBarStaticItem.ContentTemplate>
                    </dxdv:SearchBarStaticItem>
                </dxb:ToolBarControl>
            </dx:DXBorder>
            <dxpdf:CommentViewerTreeListControl
                x:Name="PART_TreeListControl"
                Grid.Row="1"
                ItemsSource="{Binding Path=ActualSource.Replies, RelativeSource={RelativeSource TemplatedParent}}"
                SelectionMode="None"
                ShowBorder="False">
                <dxg:TreeListControl.Columns>
                    <dxg:TreeListColumn FieldName="Contents" Width="*" CellTemplateSelector="{StaticResource CommentViewerCellTemplateSelector}" />
                </dxg:TreeListControl.Columns>
                <dxg:TreeListControl.View>
                    <dxg:TreeListView
                        x:Name="view"
                        AutoExpandAllNodes="True"
                        ChildNodesPath="Replies"
                        ShowColumnHeaders="False"
                        ShowIndicator="False"
                        ShowSearchPanelMode="Never"
                        TreeDerivationMode="ChildNodesSelector"
                        UseLightweightTemplates="None">
                        <dxmvvm:Interaction.Behaviors>
                            <dxmvvm:EventToCommand Command="{x:Static dxpdf:PdfCommentViewerCommands.EditCommand}" EventName="RowDoubleClick" />
                            <dxpdfi:PdfCommentViewerTreeListBehavior TreeViewModel="{Binding Path=ActualSettings.TreeViewModel, RelativeSource={RelativeSource TemplatedParent}}" />
                        </dxmvvm:Interaction.Behaviors>
                        <dxg:TreeListView.RowCellMenuCustomizations>
                            <dxb:BarButtonItem
                                dxdv:DocumentViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.CommentViewerEdit}"
                                Command="{x:Static dxpdf:PdfCommentViewerCommands.EditCommand}"
                                CommandParameter="{Binding Path=CurrentItem, ElementName=PART_TreeListControl}"
                                CommandTarget="{Binding ElementName=PART_TreeListControl}"
                                Content="{dxpdf:PdfViewerControlLocalizedString CommentViewerEditCaption}" />
                            <dxb:BarButtonItem
                                dxdv:DocumentViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.CommentViewerRemove}"
                                Command="{x:Static dxpdf:PdfCommentViewerCommands.RemoveCommand}"
                                CommandParameter="{Binding Path=CurrentItem, ElementName=PART_TreeListControl}"
                                CommandTarget="{Binding ElementName=PART_TreeListControl}"
                                Content="{dxpdf:PdfViewerControlLocalizedString CommentViewerRemoveCaption}" />
                            <dxb:BarSubItem dxdv:DocumentViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.CommentViewerSetStatus}" Content="{dxpdf:PdfViewerControlLocalizedString CommentViewerSetStatusCaption}" IsEnabled="{Binding Path=CurrentItem, ElementName=PART_TreeListControl, Converter={dxpdf:CommentViewerSetStatusIsEnabledConverter}}">
                                <dxb:BarButtonItem
                                    dxdv:DocumentViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.CommentViewerSetStatusNone}"
                                    Command="{x:Static dxpdf:PdfCommentViewerCommands.SetStatusCommand}"
                                    CommandParameter="{Binding Path=CurrentItem, ElementName=PART_TreeListControl, Converter={dxpdf:CommentViewerSetStatusConverter}, ConverterParameter=None}"
                                    CommandTarget="{Binding ElementName=PART_TreeListControl}"
                                    Content="{dxpdf:PdfViewerControlLocalizedString CommentViewerSetStatusNoneCaption}" />
                                <dxb:BarButtonItem
                                    dxdv:DocumentViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.CommentViewerSetStatusAccepted}"
                                    Command="{x:Static dxpdf:PdfCommentViewerCommands.SetStatusCommand}"
                                    CommandParameter="{Binding Path=CurrentItem, ElementName=PART_TreeListControl, Converter={dxpdf:CommentViewerSetStatusConverter}, ConverterParameter=Accepted}"
                                    CommandTarget="{Binding ElementName=PART_TreeListControl}"
                                    Content="{dxpdf:PdfViewerControlLocalizedString CommentViewerSetStatusAcceptedCaption}" />
                                <dxb:BarButtonItem
                                    dxdv:DocumentViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.CommentViewerSetStatusRejected}"
                                    Command="{x:Static dxpdf:PdfCommentViewerCommands.SetStatusCommand}"
                                    CommandParameter="{Binding Path=CurrentItem, ElementName=PART_TreeListControl, Converter={dxpdf:CommentViewerSetStatusConverter}, ConverterParameter=Rejected}"
                                    CommandTarget="{Binding ElementName=PART_TreeListControl}"
                                    Content="{dxpdf:PdfViewerControlLocalizedString CommentViewerSetStatusRejectedCaption}" />
                                <dxb:BarButtonItem
                                    dxdv:DocumentViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.CommentViewerSetStatusCancelled}"
                                    Command="{x:Static dxpdf:PdfCommentViewerCommands.SetStatusCommand}"
                                    CommandParameter="{Binding Path=CurrentItem, ElementName=PART_TreeListControl, Converter={dxpdf:CommentViewerSetStatusConverter}, ConverterParameter=Cancelled}"
                                    CommandTarget="{Binding ElementName=PART_TreeListControl}"
                                    Content="{dxpdf:PdfViewerControlLocalizedString CommentViewerSetStatusCancelledCaption}" />
                                <dxb:BarButtonItem
                                    dxdv:DocumentViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.CommentViewerSetStatusCompleted}"
                                    Command="{x:Static dxpdf:PdfCommentViewerCommands.SetStatusCommand}"
                                    CommandParameter="{Binding Path=CurrentItem, ElementName=PART_TreeListControl, Converter={dxpdf:CommentViewerSetStatusConverter}, ConverterParameter=Completed}"
                                    CommandTarget="{Binding ElementName=PART_TreeListControl}"
                                    Content="{dxpdf:PdfViewerControlLocalizedString CommentViewerSetStatusCompletedCaption}" />
                            </dxb:BarSubItem>
                            <dxb:BarButtonItem
                                dxdv:DocumentViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.CommentViewerProperties}"
                                Command="{x:Static dxpdf:PdfCommentViewerCommands.PropertiesCommand}"
                                CommandParameter="{Binding Path=CurrentItem, ElementName=PART_TreeListControl}"
                                CommandTarget="{Binding ElementName=PART_TreeListControl}"
                                Content="{dxpdf:PdfViewerControlLocalizedString CommentViewerPropertiesCaption}" />
                        </dxg:TreeListView.RowCellMenuCustomizations>
                    </dxg:TreeListView>
                </dxg:TreeListControl.View>
            </dxpdf:CommentViewerTreeListControl>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxpdft:LWKey PdfViewer.PdfOutlinesViewerControlTemplate}" TargetType="{x:Type dxpdf:PdfOutlinesViewerControl}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <dx:DXBorder BorderBrush="{DynamicResource {dxpdft:LWKey PdfViewer.PdfOutlinesViewerControlToolBarBorderBrush}}" BorderThickness="{DynamicResource {dxpdft:LWKey PdfViewer.PdfOutlinesViewerControlToolBarBorderThickness}}">
                <dxb:ToolBarControl AllowQuickCustomization="False" ShowDragWidget="False">
                    <dxdv:ShowOptionsBarItem dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.DocumentMapShowOptions}" Glyph="{dxpdf:PdfResource Images/Outlines/Menu_16x16.png}">
                        <dxb:BarButtonItem
                            dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.DocumentMapExpandCurrentNode}"
                            Command="{x:Static dxdv:DocumentMapCommands.ExpandCurrentNodeCommand}"
                            CommandParameter="{Binding Path=CurrentItem, ElementName=PART_GridControl}"
                            CommandTarget="{Binding ElementName=PART_TreeView}"
                            Content="{dxpdf:PdfViewerControlLocalizedString OutlinesViewerExpandCurrentCaption}"
                            IsVisible="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" />
                        <dxb:BarItemSeparator />
                        <dxb:BarButtonItem
                            dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.DocumentMapExpandTopLevelNode}"
                            Command="{x:Static dxdv:DocumentMapCommands.ExpandTopLevelNodesCommand}"
                            CommandTarget="{Binding ElementName=PART_TreeView}"
                            Content="{dxpdf:PdfViewerControlLocalizedString OutlinesViewerExpandTopLevelCaption}"
                            IsVisible="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" />
                        <dxb:BarButtonItem
                            dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.DocumentMapCollapseTopLevelNode}"
                            Command="{x:Static dxdv:DocumentMapCommands.CollapseTopLevelNodesCommand}"
                            CommandTarget="{Binding ElementName=PART_TreeView}"
                            Content="{dxpdf:PdfViewerControlLocalizedString OutlinesViewerCollapseTopLevelCaption}"
                            IsVisible="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" />
                        <dxb:BarItemSeparator />
                        <dxb:BarCheckItem dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.DocumentMapHideAfterUseNode}" Content="{dxpdf:PdfViewerControlLocalizedString OutlinesViewerHideAfterUseCaption}" IsChecked="{Binding Path=HideAfterUse, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        <dxb:BarItemSeparator />
                        <dxb:BarButtonItem
                            dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.DocumentMapGoToBookmark}"
                            Command="{x:Static dxdv:DocumentMapCommands.GoToNodeCommand}"
                            CommandParameter="{Binding Path=CurrentItem, ElementName=PART_GridControl}"
                            CommandTarget="{Binding ElementName=PART_TreeView}"
                            Content="{dxpdf:PdfViewerControlLocalizedString OutlinesViewerGoToCaption}" />
                        <dxb:BarButtonItem
                            Command="{x:Static dxpdf:PdfOutlinesViewerCommands.PrintCommand}"
                            CommandParameter="{Binding Path=SelectedItems, ElementName=PART_GridControl}"
                            CommandTarget="{Binding ElementName=PART_TreeView}"
                            Content="{dxpdf:PdfViewerControlLocalizedString OutlinesViewerPrintCaption}" />
                        <dxb:BarButtonItem
                            Command="{x:Static dxpdf:PdfOutlinesViewerCommands.PrintSectionCommand}"
                            CommandParameter="{Binding Path=SelectedItems, ElementName=PART_GridControl}"
                            CommandTarget="{Binding ElementName=PART_TreeView}"
                            Content="{dxpdf:PdfViewerControlLocalizedString OutlinesViewerPrintSectionCaption}" />
                        <dxb:BarItemSeparator />
                        <dxb:BarCheckItem Content="{dxpdf:PdfViewerControlLocalizedString OutlinesViewerWrapLongItemsCaption}" IsChecked="{Binding Path=WrapLongLines, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                    </dxdv:ShowOptionsBarItem>
                    <dxb:BarButtonItem
                        dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.DocumentMapExpandCurrentNodeButton}"
                        Alignment="Far"
                        BarItemDisplayMode="ContentAndGlyph"
                        Command="{x:Static dxdv:DocumentMapCommands.ExpandCurrentNodeCommand}"
                        CommandParameter="{Binding Path=CurrentItem, ElementName=PART_GridControl}"
                        CommandTarget="{Binding ElementName=PART_TreeView}"
                        Glyph="{dxpdf:PdfResource Images/Outlines/Expand_bookmark_16x16.png}"
                        Hint="{dxpdf:PdfViewerControlLocalizedString OutlinesViewerExpandCurrentCaption}" />
                </dxb:ToolBarControl>
            </dx:DXBorder>
            <dxg:GridControl
                x:Name="PART_GridControl"
                Grid.Row="1"
                ItemsSource="{TemplateBinding ActualSource}"
                SelectedItem="{Binding Path=ActualSettings.SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                SelectionMode="Row"
                ShowBorder="False">
                <dxmvvm:Interaction.Behaviors>
                    <dxmvvm:KeyToCommand
                        Command="{x:Static dxdv:DocumentMapCommands.GoToNodeCommand}"
                        CommandParameter="{Binding Path=CurrentItem, ElementName=PART_GridControl}"
                        EventName="PreviewKeyDown"
                        KeyGesture="Enter"
                        MarkRoutedEventsAsHandled="True" />
                    <dxmvvm:KeyToCommand
                        Command="{x:Static dxdv:DocumentMapCommands.GoToNodeCommand}"
                        CommandParameter="{Binding Path=CurrentItem, ElementName=PART_GridControl}"
                        EventName="PreviewKeyDown"
                        KeyGesture="Space"
                        MarkRoutedEventsAsHandled="True" />
                </dxmvvm:Interaction.Behaviors>
                <dxg:GridControl.View>
                    <dxg:TreeListView x:Name="PART_TreeView" Style="{TemplateBinding TreeViewStyle}">
                        <dxg:TreeListView.RowCellMenuCustomizations>
                            <dxb:BarButtonItem
                                Command="{x:Static dxdv:DocumentMapCommands.GoToNodeCommand}"
                                CommandParameter="{Binding Path=CurrentItem, ElementName=PART_GridControl}"
                                CommandTarget="{Binding ElementName=PART_GridControl}"
                                Content="{dxpdf:PdfViewerControlLocalizedString OutlinesViewerGoToCaption}" />
                            <dxb:BarButtonItem
                                Command="{x:Static dxpdf:PdfOutlinesViewerCommands.PrintCommand}"
                                CommandParameter="{Binding Path=SelectedItems, ElementName=PART_GridControl}"
                                CommandTarget="{Binding ElementName=PART_TreeView}"
                                Content="{dxpdf:PdfViewerControlLocalizedString OutlinesViewerPrintCaption}" />
                            <dxb:BarButtonItem
                                Command="{x:Static dxpdf:PdfOutlinesViewerCommands.PrintSectionCommand}"
                                CommandParameter="{Binding Path=SelectedItems, ElementName=PART_GridControl}"
                                CommandTarget="{Binding ElementName=PART_TreeView}"
                                Content="{dxpdf:PdfViewerControlLocalizedString OutlinesViewerPrintSectionCaption}" />
                            <dxb:BarItemSeparator />
                            <dxb:BarCheckItem Content="{dxpdf:PdfViewerControlLocalizedString OutlinesViewerWrapLongItemsCaption}" IsChecked="{Binding Path=WrapLongLines, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        </dxg:TreeListView.RowCellMenuCustomizations>
                        <dxmvvm:Interaction.Behaviors>
                            <dxmvvm:EventToCommand Command="{x:Static dxdv:DocumentMapCommands.GoToNodeCommand}" EventName="MouseLeftButtonUp">
                                <dxmvvm:EventToCommand.EventArgsConverter>
                                    <dxdv:MouseEventArgsToDataRowConverter ChangedButton="Left" />
                                </dxmvvm:EventToCommand.EventArgsConverter>
                            </dxmvvm:EventToCommand>
                        </dxmvvm:Interaction.Behaviors>
                    </dxg:TreeListView>
                </dxg:GridControl.View>
                <dxg:GridControl.Columns>
                    <dxg:GridColumn FieldName="Title">
                        <dxg:GridColumn.EditSettings>
                            <dxe:TextEditSettings TextWrapping="{Binding Path=WrapLongLines, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToWrapConverter}}" />
                        </dxg:GridColumn.EditSettings>
                        <dxg:GridColumn.CellTemplate>
                            <DataTemplate>
                                <dxe:InplaceBaseEdit x:Name="PART_Editor" FontStyle="{Binding Path=RowData.Row.Italic, Converter={StaticResource pdfItalicConverter}, RelativeSource={RelativeSource TemplatedParent}}" FontWeight="{Binding Path=RowData.Row.Bold, Converter={StaticResource pdfBoldConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding Path=RowData.Row.UseForeColor}" Value="true">
                                        <Setter TargetName="PART_Editor" Property="Foreground" Value="{Binding Path=RowData.Row.ForeColor, Converter={StaticResource pdfColorConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </dxg:GridColumn.CellTemplate>
                    </dxg:GridColumn>
                </dxg:GridControl.Columns>
            </dxg:GridControl>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxpdft:LWKey PdfViewer.PdfSignaturesViewerControlTemplate}" TargetType="{x:Type dxpdf:PdfSignaturesViewerControl}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <dxg:GridControl 
                Grid.Row="0"
                SelectionMode="Row"
                x:Name="PART_GridControl"
                ItemsSource="{TemplateBinding ActualSource}"
                ShowBorder="False">
                <dxg:GridControl.View>
                    <dxg:TreeListView ChildNodesPath="Children"
                        x:Name="PART_SignaturesTreeListControl" 
                        Style="{TemplateBinding TreeViewStyle}"
                        ShowNodeImages="True"
                        AutoExpandAllNodes="True"
                        NodeImageSelector="{StaticResource signatureStatesSelector}">
                        <dxmvvm:Interaction.Behaviors>
                            <dxmvvm:EventToCommand 
                                Command="{x:Static dxpdf:PdfSignaturesViewerCommands.ViewCertificateCommand}"
                                EventName="MouseDoubleClick">
                                <dxmvvm:EventToCommand.EventArgsConverter>
                            <dxdv:MouseEventArgsToDataRowConverter ChangedButton="Left"/>
                        </dxmvvm:EventToCommand.EventArgsConverter>
                            </dxmvvm:EventToCommand>
                        </dxmvvm:Interaction.Behaviors>
                        <dxg:TreeListView.CellStyle>
                            <Style TargetType="{x:Type dxg:LightweightCellEditor}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=RowData.Row, RelativeSource={RelativeSource Self}, Converter={StaticResource objectToTypeStringConverter}}" Value="PdfRootSignatureTreeListItem">
                                        <Setter Property="TextBlock.FontWeight" Value="Bold"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </dxg:TreeListView.CellStyle>
                        <dxg:TreeListView.RowCellMenuCustomizations>
                            <dxb:BarButtonItem x:Name="ShowSignatureProperties_BarButtonItem"
                                Content="{dxpdf:PdfViewerControlLocalizedString ShowSignaturePropertiesCaption}"
                                Command="{x:Static dxpdf:PdfSignaturesViewerCommands.ShowSignaturePropertiesCommand}" 
                                CommandParameter="{Binding Path=(dxg:GridPopupMenu.GridMenuInfo).View.DataControl.CurrentItem, RelativeSource={RelativeSource Self}}"
                                IsVisible="False">
                            </dxb:BarButtonItem>
                        </dxg:TreeListView.RowCellMenuCustomizations>
                    </dxg:TreeListView>
                </dxg:GridControl.View>
                <dxg:GridControl.Columns>
                    <dxg:GridColumn FieldName="Text">
                    </dxg:GridColumn>
                </dxg:GridControl.Columns>
            </dxg:GridControl>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=CurrentItem, ElementName=PART_GridControl, Converter={StaticResource objectToTypeStringConverter}}" Value="PdfRootSignatureTreeListItem">
                <Setter TargetName="ShowSignatureProperties_BarButtonItem" Property="IsVisible" Value="True"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxpdft:LWKey PdfViewer.PdfAttachmentsViewerControlTemplate}" TargetType="{x:Type dxpdf:PdfAttachmentsViewerControl}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <dxb:ToolBarControl AllowQuickCustomization="False" ShowDragWidget="False">
                <dxb:BarButtonItem
                    dxdv:DocumentViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.AttachmentsViewerOpen}"
                    Command="{x:Static dxpdf:PdfAttachmentsViewerCommands.OpenAttachmentCommand}"
                    CommandParameter="{Binding Path=CurrentItem, ElementName=PART_GridControl}"
                    CommandTarget="{Binding ElementName=PART_TableView}"
                    Content="{dxpdf:PdfViewerControlLocalizedString AttachmentsViewerOpenCaption}"
                    Glyph="{dxpdf:PdfResource Images/Preview_16x16.png}"
                    Hint="{dxpdf:PdfViewerControlLocalizedString AttachmentsViewerOpenDescription}" />
                <dxb:BarButtonItem
                    dxdv:DocumentViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.AttachmentsViewerSave}"
                    Command="{x:Static dxpdf:PdfAttachmentsViewerCommands.SaveAttachmentCommand}"
                    CommandParameter="{Binding Path=CurrentItem, ElementName=PART_GridControl}"
                    CommandTarget="{Binding ElementName=PART_TableView}"
                    Content="{dxpdf:PdfViewerControlLocalizedString AttachmentsViewerSaveCaption}"
                    Glyph="{dxpdf:PdfResource Images/Save_16x16.png}"
                    Hint="{dxpdf:PdfViewerControlLocalizedString AttachmentsViewerSaveDescription}" />
            </dxb:ToolBarControl>
            <dxg:GridControl
                x:Name="PART_GridControl"
                Grid.Row="1"
                ItemsSource="{TemplateBinding ActualSource}"
                SelectionMode="Row"
                ShowBorder="False">
                <dxg:GridControl.Columns>
                    <dxg:GridColumn FieldName="FileName" Binding="{Binding Path=RowData.Row.FileName}" Header="{dxpdf:PdfViewerControlLocalizedString AttachmentsViewerFileNameHeader}">
                        <dxg:GridColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Image Margin="4,0,4,0" Source="{Binding Path=RowData.Row.Icon}" />
                                    <dxe:TextEdit x:Name="PART_Editor" Grid.Column="1" />
                                </Grid>
                            </DataTemplate>
                        </dxg:GridColumn.CellTemplate>
                    </dxg:GridColumn>
                    <dxg:GridColumn FieldName="Description" Header="{dxpdf:PdfViewerControlLocalizedString AttachmentsViewerDescriptionHeader}" />
                    <dxg:GridColumn FieldName="ModificationDate" Header="{dxpdf:PdfViewerControlLocalizedString AttachmentsViewerModifiedHeader}" />
                    <dxg:GridColumn FieldName="Size" Header="{dxpdf:PdfViewerControlLocalizedString AttachmentsViewerSizeHeader}" />
                </dxg:GridControl.Columns>
                <dxmvvm:Interaction.Behaviors>
                    <dxmvvm:KeyToCommand
                        Command="{x:Static dxpdf:PdfAttachmentsViewerCommands.OpenAttachmentCommand}"
                        CommandParameter="{Binding Path=CurrentItem, ElementName=PART_GridControl}"
                        EventName="PreviewKeyDown"
                        KeyGesture="Enter"
                        MarkRoutedEventsAsHandled="True" />
                    <dxmvvm:KeyToCommand
                        Command="{x:Static dxpdf:PdfAttachmentsViewerCommands.OpenAttachmentCommand}"
                        CommandParameter="{Binding Path=CurrentItem, ElementName=PART_GridControl}"
                        EventName="PreviewKeyDown"
                        KeyGesture="Space"
                        MarkRoutedEventsAsHandled="True" />
                </dxmvvm:Interaction.Behaviors>
                <dxg:GridControl.View>
                    <dxg:TableView
                        x:Name="PART_TableView"
                        AllowEditing="False"
                        AllowGrouping="False"
                        NavigationStyle="Row"
                        ShowGroupPanel="False">
                        <dxmvvm:Interaction.Behaviors>
                            <dxmvvm:EventToCommand Command="{x:Static dxpdf:PdfAttachmentsViewerCommands.OpenAttachmentCommand}" EventName="MouseDoubleClick">
                                <dxmvvm:EventToCommand.EventArgsConverter>
                                    <dxdv:MouseEventArgsToDataRowConverter ChangedButton="Left" />
                                </dxmvvm:EventToCommand.EventArgsConverter>
                            </dxmvvm:EventToCommand>
                        </dxmvvm:Interaction.Behaviors>
                        <dxg:TableView.RowStyle>
                            <Style TargetType="dxg:RowControl">
                                <Setter Property="ToolTip" Value="{Binding Path=Row.Hint}" />
                            </Style>
                        </dxg:TableView.RowStyle>
                    </dxg:TableView>
                </dxg:GridControl.View>
            </dxg:GridControl>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxpdft:LWKey PdfViewer.PdfThumbnailsViewerControlTemplate}" TargetType="{x:Type dxpdf:PdfThumbnailsViewerControl}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <dxb:ToolBarControl Margin="0,0,0,5" AllowQuickCustomization="False" ShowDragWidget="False">
                <dxdv:ShowOptionsBarItem dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.DocumentMapShowOptions}" Glyph="{dxpdf:PdfResource Images/Outlines/Menu_16x16.png}">
                    <dxb:BarButtonItem Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.PrintPagesCommand, RelativeSource={RelativeSource TemplatedParent}}" Content="{dxpdf:PdfViewerControlLocalizedString ThumbnailsViewerPrintPagesCaption}" Hint="{dxpdf:PdfViewerControlLocalizedString ThumbnailsViewerPrintPagesDescription}" />
                    <dxb:BarItemSeparator />
                    <dxb:BarButtonItem Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.ZoomOutCommand, RelativeSource={RelativeSource TemplatedParent}}" Content="{dxpdf:PdfViewerControlLocalizedString ThumbnailsViewerZoomOutCaption}" Hint="{dxpdf:PdfViewerControlLocalizedString ThumbnailsViewerZoomOutDescription}" />
                    <dxb:BarButtonItem Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.ZoomInCommand, RelativeSource={RelativeSource TemplatedParent}}" Content="{dxpdf:PdfViewerControlLocalizedString ThumbnailsViewerZoomInCaption}" Hint="{dxpdf:PdfViewerControlLocalizedString ThumbnailsViewerZoomInDescription}" />
                </dxdv:ShowOptionsBarItem>
                <dxb:BarEditItem
                    Alignment="Far"
                    Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.ZoomTrackCommand, RelativeSource={RelativeSource TemplatedParent}}"
                    EditValue="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ZoomFactor, RelativeSource={RelativeSource TemplatedParent}}"
                    EditWidth="200">
                    <dxb:BarEditItem.EditSettings>
                        <dxe:TrackBarEditSettings
                            LargeStep="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualBehaviorProvider.LargeStep, RelativeSource={RelativeSource TemplatedParent}}"
                            Maximum="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualBehaviorProvider.MaxZoomValue, RelativeSource={RelativeSource TemplatedParent}}"
                            Minimum="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualBehaviorProvider.MinZoomValue, RelativeSource={RelativeSource TemplatedParent}}"
                            SmallStep="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualBehaviorProvider.SmallStep, RelativeSource={RelativeSource TemplatedParent}}"
                            TickFrequency="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualBehaviorProvider.SmallStep, RelativeSource={RelativeSource TemplatedParent}}">
                            <dxe:TrackBarEditSettings.StyleSettings>
                                <dxe:TrackBarZoomStyleSettings />
                            </dxe:TrackBarEditSettings.StyleSettings>
                        </dxe:TrackBarEditSettings>
                    </dxb:BarEditItem.EditSettings>
                    <dxb:BarEditItem.EditStyle>
                        <Style TargetType="{x:Type dxe:TrackBarEdit}">
                            <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <ItemsControl>
                                            <dxmvvm:EventToCommand Command="{x:Static dxpdf:PdfThumbnailsViewerCommands.ZoomCommand}" EventName="EditValueChanged" PassEventArgsToCommand="True">
                                                <dxmvvm:EventToCommand.EventArgsConverter>
                                                    <dxpdf:EditValueChangedEventArgsConverter />
                                                </dxmvvm:EventToCommand.EventArgsConverter>
                                            </dxmvvm:EventToCommand>
                                        </ItemsControl>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="IsMoveToPointEnabled" Value="True" />
                        </Style>
                    </dxb:BarEditItem.EditStyle>
                </dxb:BarEditItem>
            </dxb:ToolBarControl>
            <dxpdf:ThumbnailsViewerPresenterControl Grid.Row="1" PageDisplayMode="Wrap">
                <dxb:BarManager.DXContextMenu>
                    <dxb:PopupMenu>
                        <dxb:BarButtonItem Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.PrintPagesCommand, RelativeSource={RelativeSource TemplatedParent}}" Content="{dxpdf:PdfViewerControlLocalizedString ThumbnailsViewerPrintPagesCaption}" Hint="{dxpdf:PdfViewerControlLocalizedString ThumbnailsViewerPrintPagesDescription}" />
                        <dxb:BarItemLinkSeparator />
                        <dxb:BarButtonItem Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.ZoomOutCommand, RelativeSource={RelativeSource TemplatedParent}}" Content="{dxpdf:PdfViewerControlLocalizedString ThumbnailsViewerZoomOutCaption}" Hint="{dxpdf:PdfViewerControlLocalizedString ThumbnailsViewerZoomOutDescription}" />
                        <dxb:BarButtonItem Command="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).ActualCommandProvider.ZoomInCommand, RelativeSource={RelativeSource TemplatedParent}}" Content="{dxpdf:PdfViewerControlLocalizedString ThumbnailsViewerZoomInCaption}" Hint="{dxpdf:PdfViewerControlLocalizedString ThumbnailsViewerZoomInDescription}" />
                    </dxb:PopupMenu>
                </dxb:BarManager.DXContextMenu>
            </dxpdf:ThumbnailsViewerPresenterControl>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxpdft:LWKey PdfViewer.PdfLayersViewerControlTemplate}" TargetType="{x:Type dxpdf:PdfLayersViewerControl}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <dx:DXBorder BorderThickness="{DynamicResource {dxpdft:LWKey PdfViewer.PdfCommentViewerControlToolBarBorderThickness}}" BorderBrush="{DynamicResource {dxpdft:LWKey PdfViewer.PdfCommentViewerControlToolBarBorderBrush}}">
                <dxb:ToolBarControl UseWholeRow="True" ShowDragWidget="False" AllowQuickCustomization="False">
                    <dxdv:ShowOptionsBarItem Glyph="{dxpdf:PdfResource Images/Comments/Menu_16x16.png}"
										 dxdv:DocumentViewerControl.BarItemName="{x:Static dxpdf:DefaultPdfBarManagerItemNames.CommentViewerShowOptions}">
                        <dxb:BarButtonItem 
						    Content="{dxpdf:PdfViewerControlLocalizedString LayersViewerResetToInitialCaption}" 
						    Command="{x:Static dxpdf:PdfLayersViewerCommands.ResetToInitialCommand}" 
						    CommandTarget="{Binding ElementName=PART_TreeListControl}" />
                    </dxdv:ShowOptionsBarItem>
                </dxb:ToolBarControl>
            </dx:DXBorder>
            <dxg:TreeListControl
			    Grid.Row="1"
			    SelectionMode="None"
			    x:Name="PART_TreeListControl"
			    ItemsSource="{Binding Path=ActualSource, RelativeSource={RelativeSource TemplatedParent}}"
			    ShowBorder="False">
                <dxg:TreeListControl.Columns>
                    <dxg:TreeListColumn FieldName="Name" Width="*"/>
                </dxg:TreeListControl.Columns>
                <dxg:TreeListControl.View>
                    <dxg:TreeListView
                        TreeDerivationMode="ChildNodesSelector"
					    AutoExpandAllNodes="True"
					    ShowSearchPanelMode="Never"
					    ShowIndicator="False"
                        ShowNodeImages="True"
                        NavigationStyle="Row"
                        ShowVerticalLines="False"
                        ShowHorizontalLines="False"
                        TreeColumnFieldName="Name"  
					    x:Name="view"
					    ShowColumnHeaders="False"
					    ChildNodesPath="Children"
                        NodeImageSelector="{StaticResource layersStatesSelector}"
					    UseLightweightTemplates="None">
                    </dxg:TreeListView>
                </dxg:TreeListControl.View>
            </dxg:TreeListControl>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxpdft:LWKey PdfViewer.PdfThumbnailsViewerPresenterTemplate}" TargetType="{x:Type dxpdf:ThumbnailsViewerPresenterControl}">
        <Grid>
            <dxe:NativeImage x:Name="PART_NativeImage" IsTabStop="False" />
            <dxpdf:ThumbnailsViewerPagesSelector x:Name="PART_ItemsControl">
                <dxpdf:ThumbnailsViewerPagesSelector.ItemsPanel>
                    <ItemsPanelTemplate>
                        <dxdv:DocumentViewerPanel x:Name="PART_DocumentViewerPanel" />
                    </ItemsPanelTemplate>
                </dxpdf:ThumbnailsViewerPagesSelector.ItemsPanel>
            </dxpdf:ThumbnailsViewerPagesSelector>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxpdft:LWKey PdfViewer.PdfThumbnailsViewerPagesSelectorTemplate}" TargetType="{x:Type dxpdf:ThumbnailsViewerPagesSelector}">
        <Grid>
            <dxdv:DocumentPresenterDecorator
                x:Name="PART_Decorator"
                Grid.RowSpan="2"
                Grid.ColumnSpan="2"
                FocusVisualStyle="{x:Null}"
                Focusable="True"
                IsManipulationEnabled="True"
                KeyboardNavigation.IsTabStop="False">
                <dxpdf:DXScrollViewer
                    x:Name="PART_ScrollViewer"
                    Padding="{TemplateBinding Padding}"
                    dx:ScrollBarExtensions.ScrollBehavior="{dx:ScrollViewerScrollBehavior}"
                    dx:ScrollViewerTouchBehavior.IsEnabled="True"
                    CanContentScroll="True"
                    CanMouseScroll="False"
                    Focusable="false"
                    HorizontalScrollBarVisibility="Visible"
                    ShowFlyoutOnScroll="False"
                    Template="{StaticResource ScrollViewerTemplate}"
                    VerticalScrollBarVisibility="Visible">
                    <dxmvvm:Interaction.Behaviors>
                        <dx:ScrollViewerTouchBehavior Orientation="Vertical" />
                    </dxmvvm:Interaction.Behaviors>
                    <ItemsPresenter x:Name="PART_ItemsPresenter" />
                </dxpdf:DXScrollViewer>
            </dxdv:DocumentPresenterDecorator>
        </Grid>
    </ControlTemplate>
    <DataTemplate x:Key="{dxpdft:LWKey PdfViewer.PdfMarkupToolPropertiesDialogTemplate}">
        <dxlc:LayoutControl MinWidth="400" Orientation="Vertical">
            <dxlc:LayoutGroup Header="{Binding Source={x:Null}, Converter={StaticResource PdfViewerStringIdConverter}, ConverterParameter=AnnotationPropertyAppearanceGroupCaption}" Orientation="Vertical" View="GroupBox">
                <dxlc:LayoutItem AddColonToLabel="True" Label="{Binding Source={x:Null}, Converter={StaticResource PdfViewerStringIdConverter}, ConverterParameter=AnnotationPropertyColor}">
                    <dxe:PopupColorEdit Color="{Binding Path=Color, Mode=TwoWay, Converter={StaticResource DrawingColorToColorConverter}}" />
                </dxlc:LayoutItem>
                <dxlc:LayoutItem AddColonToLabel="True" Label="{Binding Source={x:Null}, Converter={StaticResource PdfViewerStringIdConverter}, ConverterParameter=AnnotationPropertyOpacity}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <dxe:TrackBarEdit
                            EditValue="{Binding Path=Opacity, Mode=TwoWay}"
                            EditValueType="{x:Type sys:Int32}"
                            LargeStep="10"
                            Maximum="100"
                            Minimum="0"
                            SmallStep="1"
                            TickFrequency="10" />
                        <dxe:SpinEdit
                            Grid.Column="1"
                            MinWidth="45"
                            Margin="5,0,0,0"
                            AllowDefaultButton="False"
                            AllowNullInput="False"
                            AllowRoundOutOfRangeValue="True"
                            EditValue="{Binding Path=Opacity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            EditValueType="{x:Type sys:Int32}"
                            Increment="1"
                            Mask="P0"
                            MaskType="Numeric"
                            MaskUseAsDisplayFormat="True"
                            MaxValue="100"
                            MinValue="0" />
                    </Grid>
                </dxlc:LayoutItem>
                <dxlc:LayoutItem AddColonToLabel="True" Label="{Binding Source={x:Null}, Converter={StaticResource PdfViewerStringIdConverter}, ConverterParameter=AnnotationPropertyMarkupType}">
                    <dxe:ComboBoxEdit
                        DisplayMember="DisplayName"
                        EditValue="{Binding Path=MarkupType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        ItemsSource="{dxpdf:PdfTextMarkupAnnotationTypeSource}"
                        ValueMember="Value" />
                </dxlc:LayoutItem>
            </dxlc:LayoutGroup>
            <dxlc:LayoutGroup Header="{Binding Source={x:Null}, Converter={StaticResource PdfViewerStringIdConverter}, ConverterParameter=AnnotationPropertyGeneralGroupCaption}" Orientation="Vertical" View="GroupBox">
                <dxlc:LayoutItem AddColonToLabel="True" Label="{Binding Source={x:Null}, Converter={StaticResource PdfViewerStringIdConverter}, ConverterParameter=AnnotationPropertyAuthor}">
                    <dxe:TextEdit Text="{Binding Path=Author, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </dxlc:LayoutItem>
                <dxlc:LayoutItem AddColonToLabel="True" Label="{Binding Source={x:Null}, Converter={StaticResource PdfViewerStringIdConverter}, ConverterParameter=AnnotationPropertySubject}">
                    <dxe:TextEdit Text="{Binding Path=Subject, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </dxlc:LayoutItem>
                <dxlc:LayoutItem AddColonToLabel="True" Label="{Binding Source={x:Null}, Converter={StaticResource PdfViewerStringIdConverter}, ConverterParameter=AnnotationPropertyModified}">
                    <TextBlock Text="{Binding Path=ModificationDate}" />
                </dxlc:LayoutItem>
                <dxlc:LayoutItem AddColonToLabel="True" Label="{Binding Source={x:Null}, Converter={StaticResource PdfViewerStringIdConverter}, ConverterParameter=AnnotationPropertyCreated}">
                    <TextBlock Text="{Binding Path=CreationDate}" />
                </dxlc:LayoutItem>
                <dxlc:LayoutItem AddColonToLabel="True" Label="{Binding Source={x:Null}, Converter={StaticResource PdfViewerStringIdConverter}, ConverterParameter=AnnotationPropertyComment}" LabelVerticalAlignment="Top">
                    <dxe:TextEdit
                        MinHeight="100"
                        VerticalContentAlignment="Stretch"
                        AcceptsReturn="True"
                        Text="{Binding Path=Comment, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        TextWrapping="Wrap" />
                </dxlc:LayoutItem>
            </dxlc:LayoutGroup>
        </dxlc:LayoutControl>
    </DataTemplate>
    <DataTemplate x:Key="{dxpdft:LWKey PdfViewer.PdfMarkupAnnotationPropertiesDialogTemplate}">
        <dxlc:LayoutControl MinWidth="400" Orientation="Vertical">
            <dxlc:LayoutGroup Header="{Binding Source={x:Null}, Converter={StaticResource PdfViewerStringIdConverter}, ConverterParameter=AnnotationPropertyAppearanceGroupCaption}" Orientation="Vertical" View="GroupBox">
                <dxlc:LayoutItem AddColonToLabel="True" Label="{Binding Source={x:Null}, Converter={StaticResource PdfViewerStringIdConverter}, ConverterParameter=AnnotationPropertyColor}">
                    <dxe:PopupColorEdit Color="{Binding Path=Color, Mode=TwoWay, Converter={StaticResource DrawingColorToColorConverter}}" />
                </dxlc:LayoutItem>
                <dxlc:LayoutItem AddColonToLabel="True" Label="{Binding Source={x:Null}, Converter={StaticResource PdfViewerStringIdConverter}, ConverterParameter=AnnotationPropertyOpacity}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <dxe:TrackBarEdit
                            EditValue="{Binding Path=Opacity, Mode=TwoWay}"
                            EditValueType="{x:Type sys:Int32}"
                            LargeStep="10"
                            Maximum="100"
                            Minimum="0"
                            SmallStep="1"
                            TickFrequency="10" />
                        <dxe:SpinEdit
                            Grid.Column="1"
                            MinWidth="45"
                            Margin="5,0,0,0"
                            AllowDefaultButton="False"
                            AllowNullInput="False"
                            AllowRoundOutOfRangeValue="True"
                            EditValue="{Binding Path=Opacity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            EditValueType="{x:Type sys:Int32}"
                            Increment="1"
                            Mask="P0"
                            MaskType="Numeric"
                            MaskUseAsDisplayFormat="True"
                            MaxValue="100"
                            MinValue="0" />
                    </Grid>
                </dxlc:LayoutItem>
                <dxlc:LayoutItem AddColonToLabel="True" Label="{Binding Source={x:Null}, Converter={StaticResource PdfViewerStringIdConverter}, ConverterParameter=AnnotationPropertiesIconCaption}" Visibility="{Binding Converter={dxpdf:MarkupAnnotationPropertiesDialogIconNameVisibilityConverter}}">
                    <dxe:ComboBoxEdit
                        ApplyItemTemplateToSelectedItem="True"
                        EditValue="{Binding Path=IconName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        IsTextEditable="False"
                        ItemsSource="{dxpdf:PdfTextMarkupIconTypeSource}"
                        ValueMember="Value">
                        <dxe:ComboBoxEdit.ItemTemplate>
                            <DataTemplate>
                                <dx:DXBorder Background="Transparent">
                                    <StackPanel Orientation="Horizontal">
                                        <dx:DXImage
                                            Width="14"
                                            Height="14"
                                            Margin="0,0,6,0"
                                            Source="{Binding Path=Icon, Converter={dxpdf:PdfUriToBitmapImageConverter}}" />
                                        <TextBlock Text="{Binding Path=DisplayName}" />
                                    </StackPanel>
                                </dx:DXBorder>
                            </DataTemplate>
                        </dxe:ComboBoxEdit.ItemTemplate>
                    </dxe:ComboBoxEdit>
                </dxlc:LayoutItem>
            </dxlc:LayoutGroup>
            <dxlc:LayoutGroup Header="{Binding Source={x:Null}, Converter={StaticResource PdfViewerStringIdConverter}, ConverterParameter=AnnotationPropertyGeneralGroupCaption}" Orientation="Vertical" View="GroupBox">
                <dxlc:LayoutItem AddColonToLabel="True" Label="{Binding Source={x:Null}, Converter={StaticResource PdfViewerStringIdConverter}, ConverterParameter=AnnotationPropertyAuthor}">
                    <dxe:TextEdit Text="{Binding Path=Author, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </dxlc:LayoutItem>
                <dxlc:LayoutItem AddColonToLabel="True" Label="{Binding Source={x:Null}, Converter={StaticResource PdfViewerStringIdConverter}, ConverterParameter=AnnotationPropertySubject}">
                    <dxe:TextEdit Text="{Binding Path=Subject, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </dxlc:LayoutItem>
                <dxlc:LayoutItem AddColonToLabel="True" Label="{Binding Source={x:Null}, Converter={StaticResource PdfViewerStringIdConverter}, ConverterParameter=AnnotationPropertyModified}">
                    <TextBlock Text="{Binding Path=ModificationDate}" />
                </dxlc:LayoutItem>
                <dxlc:LayoutItem AddColonToLabel="True" Label="{Binding Source={x:Null}, Converter={StaticResource PdfViewerStringIdConverter}, ConverterParameter=AnnotationPropertyCreated}">
                    <TextBlock Text="{Binding Path=CreationDate}" />
                </dxlc:LayoutItem>
                <dxlc:LayoutItem AddColonToLabel="True" Label="{Binding Source={x:Null}, Converter={StaticResource PdfViewerStringIdConverter}, ConverterParameter=AnnotationPropertyComment}" LabelVerticalAlignment="Top">
                    <dxe:TextEdit
                        MinHeight="100"
                        VerticalContentAlignment="Stretch"
                        AcceptsReturn="True"
                        Text="{Binding Path=Comment, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        TextWrapping="Wrap" />
                </dxlc:LayoutItem>
            </dxlc:LayoutGroup>
        </dxlc:LayoutControl>
    </DataTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.PdfViewer\DevExpress.Xpf.PdfViewer\Themes\Generic\Templates.xaml-->


    <!--#region DEFAULT STYLES-->

    <Style x:Key="PdfBarContainerControl.DefaultStyleBase" TargetType="{x:Type dxpdf:PdfBarContainerControl}">
        <Setter Property="ItemsPanel" Value="{DynamicResource {dxt:LWKey BarContainerControl.ItemsPanelTemplate}}" />
        <Setter Property="Template" Value="{DynamicResource {dxpdft:LWKey PdfViewer.PdfBarContainerControlTemplate}}" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Padding" Value="{Binding ActualPadding, RelativeSource={RelativeSource Mode=Self}}" />
    </Style>
    <Style x:Key="PdfBarControl.DefaultStyleBase" TargetType="{x:Type dxpdf:PdfBarControl}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="ItemsPanel" Value="{DynamicResource {dxt:LWKey BarControl.ItemsPanelTemplate}}" />
        <Setter Property="Template" Value="{DynamicResource {dxpdft:LWKey PdfViewer.PdfBarControlTemplate}}" />
    </Style>
    <Style x:Key="PdfPresenterControl.DefaultStyleBase" TargetType="{x:Type dxpdf:PdfPresenterControl}">
        <Setter Property="MinHeight" Value="10" />
        <Setter Property="Template" Value="{DynamicResource {dxpdft:LWKey PdfViewer.PdfPresenterControlTemplate}}" />
        <Setter Property="AllowCurrentPageHighlighting" Value="{Binding Path=(dxpdf:PdfViewerControl.ActualViewer).AllowCurrentPageHighlighting, RelativeSource={RelativeSource Self}}" />
        <Setter Property="FlowDirection" Value="LeftToRight" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    </Style>
    <Style x:Key="PdfPageControlItem.DefaultStyleBase" TargetType="{x:Type dxpdf:PdfPageControlItem}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="IsSelected" Value="{Binding Path=IsSelected}" />
        <Setter Property="Template" Value="{DynamicResource {dxpdft:LWKey PdfViewer.PdfPageControlItemTemplate}}" />
    </Style>
    <Style x:Key="PdfThumbnailPageControlItem.DefaultStyleBase" TargetType="{x:Type dxpdf:PdfThumbnailPageControlItem}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="IsSelected" Value="{Binding Path=IsSelected}" />
        <Setter Property="IsHighlighted" Value="{Binding Path=IsHighlighted}" />
        <Setter Property="Template" Value="{DynamicResource {dxpdft:LWKey PdfViewer.PdfThumbnailControlItemTemplate}}" />
    </Style>
    <Style x:Key="PdfViewerControl.DefaultStyleBase" TargetType="{x:Type dxpdf:PdfViewerControl}">
        <Style.Resources>
            <!-- TODO: Egorov - Need to get rid of these resources, ask Egorov why -->
            <Style x:Key="{dxdvt:LWKey DocumentViewer.BarSubItemStyle}" TargetType="{x:Type dxb:BarSubItem}">
                <Setter Property="Content" Value="{Binding Path=Caption}" />
                <Setter Property="Hint" Value="{Binding Path=Hint}" />
                <Setter Property="Glyph" Value="{Binding Path=SmallGlyph, Converter={dxpdf:PdfUriToBitmapImageConverter}}" />
                <Setter Property="LargeGlyph" Value="{Binding Path=LargeGlyph, Converter={dxpdf:PdfUriToBitmapImageConverter}}" />
                <Setter Property="GlyphAlignment" Value="Top" />
                <Setter Property="ItemLinksSource" Value="{Binding Path=Items}" />
                <Setter Property="ItemTemplateSelector" Value="{StaticResource checkItemTemplateSelector}" />
            </Style>
            <DataTemplate x:Key="{dxdvt:LWKey DocumentViewer.SetZoomFactorAndModeItemSeparatorTemplate}">
                <dxb:BarItemSeparator />
            </DataTemplate>
            <DataTemplate x:Key="{dxdvt:LWKey DocumentViewer.SetZoomFactorItemTemplate}">
                <dxb:BarCheckItem
                    AllowUncheckInGroup="True"
                    Command="{Binding Path=Command}"
                    CommandParameter="{Binding Path=ZoomFactor}"
                    Content="{Binding Path=Caption}"
                    Glyph="{Binding Path=SmallGlyph, Converter={dxpdf:PdfUriToBitmapImageConverter}}"
                    GlyphAlignment="Top"
                    GroupIndex="{Binding Path=GroupIndex}"
                    Hint="{Binding Path=Hint}"
                    IsChecked="{Binding Path=IsChecked}"
                    KeyGesture="{Binding Path=KeyGesture}"
                    LargeGlyph="{Binding Path=LargeGlyph, Converter={dxpdf:PdfUriToBitmapImageConverter}}" />
            </DataTemplate>
            <DataTemplate x:Key="{dxdvt:LWKey DocumentViewer.SetZoomModeItemTemplate}">
                <dxb:BarCheckItem
                    AllowUncheckInGroup="True"
                    Command="{Binding Path=Command}"
                    CommandParameter="{Binding Path=ZoomMode}"
                    Content="{Binding Path=Caption}"
                    Glyph="{Binding Path=SmallGlyph, Converter={dxpdf:PdfUriToBitmapImageConverter}}"
                    GlyphAlignment="Top"
                    GroupIndex="{Binding Path=GroupIndex}"
                    Hint="{Binding Path=Hint}"
                    IsChecked="{Binding Path=IsChecked}"
                    KeyGesture="{Binding Path=KeyGesture}"
                    LargeGlyph="{Binding Path=LargeGlyph, Converter={dxpdf:PdfUriToBitmapImageConverter}}" />
            </DataTemplate>
            <Style x:Key="{dxdvt:LWKey DocumentViewer.BarButtonItemStyle}" TargetType="{x:Type dxb:BarButtonItem}">
                <Setter Property="Content" Value="{Binding Path=Caption}" />
                <Setter Property="Hint" Value="{Binding Path=Hint}" />
                <Setter Property="Glyph" Value="{Binding Path=SmallGlyph, Converter={dxpdf:PdfUriToBitmapImageConverter}}" />
                <Setter Property="LargeGlyph" Value="{Binding Path=LargeGlyph, Converter={dxpdf:PdfUriToBitmapImageConverter}}" />
                <Setter Property="GlyphAlignment" Value="Top" />
            </Style>
            <Style x:Key="{dxdvt:LWKey DocumentViewer.BarPaginationItemStyle}" TargetType="{x:Type dxdv:PaginationBarItem}">
                <Setter Property="Content" Value="{Binding}" />
                <Setter Property="CommandParameter" Value="{Binding Path=CurrentPageNumber}" />
                <Setter Property="Hint" Value="{Binding Path=Hint}" />
                <Setter Property="Glyph" Value="{Binding Path=SmallGlyph, Converter={dxpdf:PdfUriToBitmapImageConverter}}" />
                <Setter Property="LargeGlyph" Value="{Binding Path=LargeGlyph, Converter={dxpdf:PdfUriToBitmapImageConverter}}" />
                <Setter Property="GlyphAlignment" Value="Top" />
                <Setter Property="ContentTemplate" Value="{DynamicResource {dxdvt:LWKey DocumentViewer.BarPaginationItemContentTemplate}}" />
                <Setter Property="GlyphSize" Value="Custom" />
                <Setter Property="CustomGlyphSize" Value="NaN,32" />
            </Style>
        </Style.Resources>
        <Setter Property="dx:ScrollBarExtensions.ScrollBehavior" Value="{dx:NativeScrollBehavior}" />
        <Setter Property="PagePadding" Value="{DynamicResource {dxpdft:LWKey PdfViewer.PagePaddingThickness}}" />
        <Setter Property="RibbonTemplate" Value="{DynamicResource {dxpdft:LWKey PdfViewer.RibbonTemplate}}" />
        <Setter Property="BarsTemplate" Value="{DynamicResource {dxpdft:LWKey PdfViewer.BarsTemplate}}" />
        <Setter Property="PresenterTemplate" Value="{DynamicResource {dxpdft:LWKey PdfViewer.PresenterTemplate}}" />
        <Setter Property="Template" Value="{DynamicResource {dxpdft:LWKey PdfViewer.Template}}" />
        <Setter Property="CaretColor" Value="{DynamicResource {dxpdft:LWKey PdfViewer.CaretColor}}" />
    </Style>
    <Style x:Key="SelectionCanvas.DefaultStyleBase" TargetType="{x:Type dxpdf:SelectionCanvas}">
        <Setter Property="Template" Value="{DynamicResource {dxpdft:LWKey PdfViewer.SelectionCanvasTemplate}}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsHitTestVisible" Value="False" />
    </Style>
    <Style x:Key="StartScreenControl.DefaultStyleBase" TargetType="{x:Type dxpdf:StartScreenControl}">
        <Setter Property="Template" Value="{DynamicResource {dxpdft:LWKey PdfViewer.StartScreenControlTemplate}}" />
        <Setter Property="Focusable" Value="False" />
    </Style>
    <Style x:Key="LoadingProgressControl.DefaultStyleBase" TargetType="{x:Type dxpdf:LoadingProgressControl}">
        <Setter Property="Template" Value="{DynamicResource {dxpdft:LWKey PdfViewer.LoadingProgressControlTemplate}}" />
    </Style>
    <!--<Style x:Key="StickyNotesEdit.DefaultStyleBase" TargetType="{x:Type dxpdf:StickyNotesEdit}" BasedOn="{StaticResource {x:Type dxe:BaseEdit}}">-->
    <Style x:Key="StickyNotesEdit.DefaultStyleBase" BasedOn="{dx:TargetStaticResource BaseEdit.DefaultStyleBase, TargetDictionary={dxi:ThemeResourceDictionary Path='Core/Editors/Editors.Generic.xaml'}}" TargetType="{x:Type dxpdf:StickyNotesEdit}">
        <Setter Property="DisplayTemplate" Value="{DynamicResource {dxpdft:LWKey PdfViewer.StickyNotesEditDisplayTemplate}}" />
        <Setter Property="EditTemplate" Value="{DynamicResource {dxpdft:LWKey PdfViewer.StickyNotesEditDisplayTemplate}}" />
    </Style>
    <Style x:Key="PrintDialogDataPager.DefaultStyleBase" TargetType="{x:Type dxpdfi:PrintDialogDataPager}">
        <Setter Property="Template" Value="{DynamicResource {dxpdft:LWKey PdfViewer.PrintDialogDataPagerTemplate}}" />
    </Style>
    <Style x:Key="PdfOutlinesViewerControl.DefaultStyleBase" TargetType="{x:Type dxpdf:PdfOutlinesViewerControl}">
        <Setter Property="TreeViewStyle" Value="{DynamicResource {dxpdft:LWKey PdfViewer.TreeViewStyle}}" />
        <Setter Property="Template" Value="{DynamicResource {dxpdft:LWKey PdfViewer.PdfOutlinesViewerControlTemplate}}" />
    </Style>
    <Style x:Key="PdfAttachmentsViewerControl.DefaultStyleBase" TargetType="{x:Type dxpdf:PdfAttachmentsViewerControl}">
        <Setter Property="Template" Value="{DynamicResource {dxpdft:LWKey PdfViewer.PdfAttachmentsViewerControlTemplate}}" />
    </Style>
    <Style x:Key="PdfThumbnailsViewerControl.DefaultStyleBase" TargetType="{x:Type dxpdf:PdfThumbnailsViewerControl}">
        <Setter Property="Template" Value="{DynamicResource {dxpdft:LWKey PdfViewer.PdfThumbnailsViewerControlTemplate}}" />
    </Style>
    <Style x:Key="PdfCommentViewerControl.DefaultStyleBase" TargetType="{x:Type dxpdf:PdfCommentViewerControl}">
        <Setter Property="Template" Value="{DynamicResource {dxpdft:LWKey PdfViewer.PdfCommentViewerControlTemplate}}" />
    </Style>
    <Style x:Key="PdfSignaturesViewerControl.DefaultStyleBase" TargetType="{x:Type dxpdf:PdfSignaturesViewerControl}">
        <Setter Property="TreeViewStyle" Value="{DynamicResource {dxpdft:LWKey PdfViewer.TreeViewStyle}}"/>
        <Setter Property="Template" Value="{DynamicResource {dxpdft:LWKey PdfViewer.PdfSignaturesViewerControlTemplate}}"/>
    </Style>
    <Style x:Key="PdfLayersViewerControl.DefaultStyleBase" TargetType="{x:Type dxpdf:PdfLayersViewerControl}">
        <Setter Property="Template" Value="{DynamicResource {dxpdft:LWKey PdfViewer.PdfLayersViewerControlTemplate}}"/>
    </Style>
    <Style x:Key="ThumbnailsViewerPresenterControl.DefaultStyleBase" TargetType="{x:Type dxpdf:ThumbnailsViewerPresenterControl}">
        <Setter Property="Template" Value="{DynamicResource {dxpdft:LWKey PdfViewer.PdfThumbnailsViewerPresenterTemplate}}" />
        <Setter Property="FlowDirection" Value="LeftToRight" />
    </Style>
    <Style x:Key="ThumbnailsViewerPagesSelector.DefaultStyleBase" TargetType="{x:Type dxpdf:ThumbnailsViewerPagesSelector}">
        <Setter Property="Template" Value="{DynamicResource {dxpdft:LWKey PdfViewer.PdfThumbnailsViewerPagesSelectorTemplate}}" />
        <Setter Property="Focusable" Value="False" />
    </Style>
    <!--#endregion DEFAULT STYLES-->
</ResourceDictionary>