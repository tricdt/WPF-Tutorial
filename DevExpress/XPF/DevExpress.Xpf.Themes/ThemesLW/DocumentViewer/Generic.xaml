<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
    xmlns:dxdv="clr-namespace:DevExpress.Xpf.DocumentViewer;assembly=DevExpress.Xpf.DocumentViewer.v24.1.Core"
    xmlns:dxdvt="clr-namespace:DevExpress.Xpf.DocumentViewer.Themes;assembly=DevExpress.Xpf.DocumentViewer.v24.1.Core"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
    xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon"
    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">


    <dxdv:CheckBarItemTemplateSelector x:Key="checkItemTemplateSelector" />
    <dxdv:TextEditEditValueChangedConverter x:Key="textEditEditValueChangedConverter" />


    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.PdfViewer\DevExpress.Xpf.DocumentViewer.Core\Themes\Generic\DefaultStyles.xaml-->
    <Style x:Key="{dxdvt:LWKey DocumentViewer.BarButtonItemStyle}" TargetType="{x:Type dxb:BarButtonItem}">
        <Setter Property="Content" Value="{Binding Path=Caption}" />
        <Setter Property="Hint" Value="{Binding Path=Hint}" />
        <Setter Property="Glyph" Value="{Binding Path=SmallGlyph, Converter={dxdv:UriToBitmapImageConverter}}" />
        <Setter Property="LargeGlyph" Value="{Binding Path=LargeGlyph, Converter={dxdv:UriToBitmapImageConverter}}" />
        <Setter Property="GlyphAlignment" Value="Top" />
    </Style>
    <Style x:Key="{dxdvt:LWKey DocumentViewer.BarPaginationItemStyle}" TargetType="{x:Type dxdv:PaginationBarItem}">
        <Setter Property="Content" Value="{Binding}" />
        <Setter Property="CommandParameter" Value="{Binding Path=CurrentPageNumber}" />
        <Setter Property="Hint" Value="{Binding Path=Hint}" />
        <Setter Property="Glyph" Value="{Binding Path=SmallGlyph, Converter={dxdv:UriToBitmapImageConverter}}" />
        <Setter Property="LargeGlyph" Value="{Binding Path=LargeGlyph, Converter={dxdv:UriToBitmapImageConverter}}" />
        <Setter Property="GlyphAlignment" Value="Top" />
        <Setter Property="ContentTemplate" Value="{DynamicResource {dxdvt:LWKey DocumentViewer.BarPaginationItemContentTemplate}}" />
        <Setter Property="GlyphSize" Value="Custom" />
        <Setter Property="CustomGlyphSize" Value="NaN,32" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="CustomGlyphSize" Value="NaN,44" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxdvt:LWKey DocumentViewer.RibbonPaginationItemStyle}" TargetType="{x:Type dxdv:PaginationRibbonItem}">
        <Setter Property="Content" Value="{Binding Path=PageCount, Converter={dxmvvm:FormatStringConverter FormatString={dxdv:DocumentViewerControlLocalizedStringExtension PaginationRibbonItemStringFormat}}}" />
        <Setter Property="CommandParameter" Value="{Binding Path=CurrentPageNumber}" />
        <Setter Property="Hint" Value="{Binding Path=Hint}" />
        <Setter Property="RibbonStyle" Value="Large" />
        <Setter Property="GlyphAlignment" Value="Top" />
        <Setter Property="GlyphTemplate" Value="{DynamicResource {dxdvt:LWKey DocumentViewer.RibbonPaginationItemGlyphTemplate}}" />
        <Setter Property="GlyphSize" Value="Custom" />
        <Setter Property="CustomGlyphSize" Value="NaN,32" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="CustomGlyphSize" Value="NaN,44" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxdvt:LWKey DocumentViewer.BarSubItemStyle}" TargetType="{x:Type dxb:BarSubItem}">
        <Setter Property="Content" Value="{Binding Path=Caption}" />
        <Setter Property="Hint" Value="{Binding Path=Hint}" />
        <Setter Property="Glyph" Value="{Binding Path=SmallGlyph, Converter={dxdv:UriToBitmapImageConverter}}" />
        <Setter Property="LargeGlyph" Value="{Binding Path=LargeGlyph, Converter={dxdv:UriToBitmapImageConverter}}" />
        <Setter Property="GlyphAlignment" Value="Top" />
        <Setter Property="ItemLinksSource" Value="{Binding Path=Items}" />
        <Setter Property="ItemTemplateSelector" Value="{StaticResource checkItemTemplateSelector}" />
    </Style>
    <Style x:Key="{dxdvt:LWKey DocumentViewer.TreeViewStyle}" TargetType="{x:Type dxg:TreeListView}">
        <Setter Property="ParentFieldName" Value="ParentId" />
        <Setter Property="KeyFieldName" Value="Id" />
        <Setter Property="AutoWidth" Value="true" />
        <Setter Property="NavigationStyle" Value="Row" />
        <Setter Property="ShowHorizontalLines" Value="False" />
        <Setter Property="ShowVerticalLines" Value="false" />
        <Setter Property="ShowColumnHeaders" Value="False" />
        <Setter Property="ShowIndicator" Value="False" />
        <Setter Property="ExpandStateFieldName" Value="IsExpanded" />
        <Setter Property="FadeSelectionOnLostFocus" Value="False" />
        <Setter Property="ExpandCollapseNodesOnNavigation" Value="True" />
    </Style>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.PdfViewer\DevExpress.Xpf.DocumentViewer.Core\Themes\Generic\DefaultStyles.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.PdfViewer\DevExpress.Xpf.DocumentViewer.Core\Themes\generic.xaml-->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.PdfViewer\DevExpress.Xpf.DocumentViewer.Core\Themes\generic.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.PdfViewer\DevExpress.Xpf.DocumentViewer.Core\Themes\Generic\Templates.xaml-->


    <DataTemplate x:Key="{dxdvt:LWKey DocumentViewer.SetZoomFactorAndModeItemSeparatorTemplate}">
        <dxb:BarItemSeparator />
    </DataTemplate>
    <DataTemplate x:Key="{dxdvt:LWKey DocumentViewer.SetZoomFactorItemTemplate}">
        <dxb:BarCheckItem
            AllowUncheckInGroup="True"
            Command="{Binding Path=Command}"
            CommandParameter="{Binding Path=ZoomFactor}"
            Content="{Binding Path=Caption}"
            Glyph="{Binding Path=SmallGlyph, Converter={dxdv:UriToBitmapImageConverter}}"
            GlyphAlignment="Top"
            GroupIndex="{Binding Path=GroupIndex}"
            Hint="{Binding Path=Hint}"
            IsChecked="{Binding Path=IsChecked}"
            KeyGesture="{Binding Path=KeyGesture}"
            LargeGlyph="{Binding Path=LargeGlyph, Converter={dxdv:UriToBitmapImageConverter}}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxdvt:LWKey DocumentViewer.SetZoomModeItemTemplate}">
        <dxb:BarCheckItem
            AllowUncheckInGroup="True"
            Command="{Binding Path=Command}"
            CommandParameter="{Binding Path=ZoomMode}"
            Content="{Binding Path=Caption}"
            Glyph="{Binding Path=SmallGlyph, Converter={dxdv:UriToBitmapImageConverter}}"
            GlyphAlignment="Top"
            GroupIndex="{Binding Path=GroupIndex}"
            Hint="{Binding Path=Hint}"
            IsChecked="{Binding Path=IsChecked}"
            KeyGesture="{Binding Path=KeyGesture}"
            LargeGlyph="{Binding Path=LargeGlyph, Converter={dxdv:UriToBitmapImageConverter}}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxdvt:LWKey DocumentViewer.BarToggleButtonTemplate}">
        <dxb:BarCheckItem
            AllowUncheckInGroup="True"
            Command="{Binding Path=Command}"
            Content="{Binding Path=Caption}"
            Glyph="{Binding Path=SmallGlyph, Converter={dxdv:UriToBitmapImageConverter}}"
            GlyphAlignment="Top"
            GroupIndex="{Binding Path=GroupIndex}"
            Hint="{Binding Path=Hint}"
            IsChecked="{Binding Path=IsChecked}"
            LargeGlyph="{Binding Path=LargeGlyph, Converter={dxdv:UriToBitmapImageConverter}}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxdvt:LWKey DocumentViewer.BarPaginationItemContentTemplate}">
        <StackPanel Orientation="Horizontal">
            <dxe:SpinEdit
                x:Name="editor"
                MinWidth="30"
                AllowDefaultButton="False"
                AllowRoundOutOfRangeValue="True"
                EditValue="{Binding Path=CurrentPageNumber, Mode=TwoWay}"
                IsFloatValue="False"
                SelectAllOnGotFocus="True"
                ShowError="False"
                ValidateOnTextInput="False">
                <dxmvvm:Interaction.Triggers>
                    <dxmvvm:EventToCommand
                        Command="{Binding Path=Command}"
                        EventArgsConverter="{StaticResource textEditEditValueChangedConverter}"
                        EventName="EditValueChanged"
                        PassEventArgsToCommand="True" />
                </dxmvvm:Interaction.Triggers>
                <dxmvvm:Interaction.Behaviors>
                    <dxdv:PaginationEditValueChangedBehavior />
                </dxmvvm:Interaction.Behaviors>
            </dxe:SpinEdit>
            <TextBlock VerticalAlignment="Center" Text=" / " />
            <TextBlock VerticalAlignment="Center" Text="{Binding Path=PageCount}" />
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="{dxdvt:LWKey DocumentViewer.RibbonPaginationItemGlyphTemplate}">
        <dxe:SpinEdit
            x:Name="editor"
            MinWidth="30"
            HorizontalContentAlignment="Center"
            AllowDefaultButton="False"
            AllowRoundOutOfRangeValue="True"
            EditValue="{Binding Path=Item.DataContext.CurrentPageNumber, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxb:BarItemLinkInfo}}}"
            IsFloatValue="False"
            SelectAllOnGotFocus="True"
            ShowError="False"
            ValidateOnTextInput="False">
            <dxe:SpinEdit.NullValue>
                <sys:Decimal />
            </dxe:SpinEdit.NullValue>
            <dxmvvm:Interaction.Behaviors>
                <dxdv:PaginationEditValueChangedBehavior />
            </dxmvvm:Interaction.Behaviors>
            <dxmvvm:Interaction.Triggers>
                <dxmvvm:EventToCommand
                    Command="{Binding Path=Command}"
                    EventArgsConverter="{StaticResource textEditEditValueChangedConverter}"
                    EventName="EditValueChanged"
                    PassEventArgsToCommand="True" />
            </dxmvvm:Interaction.Triggers>
        </dxe:SpinEdit>
    </DataTemplate>
    <DataTemplate x:Key="{dxdvt:LWKey DocumentViewer.RibbonTemplate}">
        <dxb:BarManager x:Name="PART_BarManager">
            <dxmvvm:Interaction.Behaviors>
                <dxdv:BarManagerActionAttachedBehavior />
                <dxb:ControllerBehavior Actions="{Binding Path=(dxdv:DocumentViewerControl.ActualViewer).ActualCommandProvider.Actions, RelativeSource={RelativeSource TemplatedParent}}" ExecutionMode="OnEvent">
                    <dxb:ControllerBehavior.Triggers>
                        <dxb:ActionTrigger EventName="Loaded" ExecuteOnce="True" />
                    </dxb:ControllerBehavior.Triggers>
                </dxb:ControllerBehavior>
            </dxmvvm:Interaction.Behaviors>
            <dxb:BarManager.Items>
                <dxdv:OpenDocumentBarItem dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.Open}" Command="{Binding Path=(dxdv:DocumentViewerControl.ActualViewer).ActualCommandProvider.OpenDocumentCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                <dxdv:CloseDocumentBarItem dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.Close}" Command="{Binding Path=(dxdv:DocumentViewerControl.ActualViewer).ActualCommandProvider.CloseDocumentCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                <dxdv:PreviousPageBarItem dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.PreviousPage}" Command="{Binding Path=(dxdv:DocumentViewerControl.ActualViewer).ActualCommandProvider.PreviousPageCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                <dxdv:NextPageBarItem dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.NextPage}" Command="{Binding Path=(dxdv:DocumentViewerControl.ActualViewer).ActualCommandProvider.NextPageCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                <dxdv:PaginationRibbonItem dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.Pagination}" Command="{Binding Path=(dxdv:DocumentViewerControl.ActualViewer).ActualCommandProvider.PaginationCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                <dxdv:ZoomInBarItem dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.ZoomIn}" Command="{Binding Path=(dxdv:DocumentViewerControl.ActualViewer).ActualCommandProvider.ZoomInCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                <dxdv:ZoomOutBarItem dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.ZoomOut}" Command="{Binding Path=(dxdv:DocumentViewerControl.ActualViewer).ActualCommandProvider.ZoomOutCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                <dxdv:ZoomBarItem dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.Zoom}" Command="{Binding Path=(dxdv:DocumentViewerControl.ActualViewer).ActualCommandProvider.ZoomCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                <dxdv:ClockwiseRotateBarItem dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.ClockwiseRotate}" Command="{Binding Path=(dxdv:DocumentViewerControl.ActualViewer).ActualCommandProvider.ClockwiseRotateCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                <dxdv:CounterClockwiseRotateBarItem dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.CounterClockwiseRotate}" Command="{Binding Path=(dxdv:DocumentViewerControl.ActualViewer).ActualCommandProvider.CounterClockwiseRotateCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                <dxdv:PreviousViewBarItem dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.PreviousView}" Command="{Binding Path=(dxdv:DocumentViewerControl.ActualViewer).ActualCommandProvider.PreviousViewCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                <dxdv:NextViewBarItem dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.NextView}" Command="{Binding Path=(dxdv:DocumentViewerControl.ActualViewer).ActualCommandProvider.NextViewCommand, RelativeSource={RelativeSource TemplatedParent}}" />
            </dxb:BarManager.Items>
            <DockPanel>
                <dxr:RibbonControl
                    dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.Ribbon}"
                    DockPanel.Dock="Top"
                    RibbonStyle="Office2010"
                    RibbonTitleBarVisibility="Collapsed"
                    ToolbarShowMode="Hide">
                    <dxmvvm:Interaction.Behaviors>
                        <dxb:ControllerBehavior Actions="{Binding Path=(dxdv:DocumentViewerControl.ActualViewer).ActualCommandProvider.RibbonActions, RelativeSource={RelativeSource TemplatedParent}}" ExecutionMode="OnEvent">
                            <dxb:ControllerBehavior.Triggers>
                                <dxb:ActionTrigger EventName="Loaded" ExecuteOnce="True" />
                            </dxb:ControllerBehavior.Triggers>
                        </dxb:ControllerBehavior>
                    </dxmvvm:Interaction.Behaviors>
                    <dxr:RibbonDefaultPageCategory>
                        <dxr:RibbonPage dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.MainRibbonPage}" Caption="{dxdv:DocumentViewerControlLocalizedString BarCaption}">
                            <dxr:RibbonPageGroup dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.FileRibbonGroup}" Caption="{dxdv:DocumentViewerControlLocalizedString FileRibbonGroupCaption}">
                                <dxb:BarItemLink BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.Open}" />
                                <dxb:BarItemLink BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.Close}" />
                            </dxr:RibbonPageGroup>
                            <dxr:RibbonPageGroup dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.NavigationRibbonGroup}" Caption="{dxdv:DocumentViewerControlLocalizedString NavigationRibbonGroupCaption}">
                                <dxb:BarItemLink BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.PreviousPage}" />
                                <dxb:BarItemLink BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.NextPage}" />
                                <dxb:BarItemLink BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.Pagination}" />
                                <dxb:BarItemLink BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.PreviousView}" />
                                <dxb:BarItemLink BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.NextView}" />
                            </dxr:RibbonPageGroup>
                            <dxr:RibbonPageGroup dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.ZoomRibbonGroup}" Caption="{dxdv:DocumentViewerControlLocalizedString ZoomRibbonGroupCaption}">
                                <dxb:BarItemLink BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.ZoomOut}" />
                                <dxb:BarItemLink BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.ZoomIn}" />
                                <dxb:BarItemLink BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.Zoom}" />
                            </dxr:RibbonPageGroup>
                            <dxr:RibbonPageGroup dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.RotateRibbonGroup}" Caption="{dxdv:DocumentViewerControlLocalizedString RotateRibbonGroupCaption}">
                                <dxb:BarItemLink BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.ClockwiseRotate}" />
                                <dxb:BarItemLink BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.CounterClockwiseRotate}" />
                            </dxr:RibbonPageGroup>
                        </dxr:RibbonPage>
                    </dxr:RibbonDefaultPageCategory>
                </dxr:RibbonControl>
                <Grid>
                    <dxdv:DocumentPresenterControl />
                </Grid>
            </DockPanel>
        </dxb:BarManager>
    </DataTemplate>
    <DataTemplate x:Key="{dxdvt:LWKey DocumentViewer.BarsTemplate}">
        <dxb:BarManager x:Name="PART_BarManager">
            <dxmvvm:Interaction.Behaviors>
                <dxdv:BarManagerActionAttachedBehavior />
                <dxb:ControllerBehavior Actions="{Binding Path=(dxdv:DocumentViewerControl.ActualViewer).ActualCommandProvider.Actions, RelativeSource={RelativeSource TemplatedParent}}" ExecutionMode="OnEvent">
                    <dxb:ControllerBehavior.Triggers>
                        <dxb:ActionTrigger EventName="Loaded" ExecuteOnce="True" />
                    </dxb:ControllerBehavior.Triggers>
                </dxb:ControllerBehavior>
            </dxmvvm:Interaction.Behaviors>
            <dxb:BarManager.Items>
                <dxdv:OpenDocumentBarItem dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.Open}" Command="{Binding Path=(dxdv:DocumentViewerControl.ActualViewer).ActualCommandProvider.OpenDocumentCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                <dxdv:CloseDocumentBarItem dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.Close}" Command="{Binding Path=(dxdv:DocumentViewerControl.ActualViewer).ActualCommandProvider.CloseDocumentCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                <dxdv:PreviousPageBarItem dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.PreviousPage}" Command="{Binding Path=(dxdv:DocumentViewerControl.ActualViewer).ActualCommandProvider.PreviousPageCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                <dxdv:NextPageBarItem dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.NextPage}" Command="{Binding Path=(dxdv:DocumentViewerControl.ActualViewer).ActualCommandProvider.NextPageCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                <dxdv:PaginationBarItem dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.Pagination}" Command="{Binding Path=(dxdv:DocumentViewerControl.ActualViewer).ActualCommandProvider.PaginationCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                <dxdv:ZoomInBarItem dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.ZoomIn}" Command="{Binding Path=(dxdv:DocumentViewerControl.ActualViewer).ActualCommandProvider.ZoomInCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                <dxdv:ZoomOutBarItem dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.ZoomOut}" Command="{Binding Path=(dxdv:DocumentViewerControl.ActualViewer).ActualCommandProvider.ZoomOutCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                <dxdv:ZoomBarItem dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.Zoom}" Command="{Binding Path=(dxdv:DocumentViewerControl.ActualViewer).ActualCommandProvider.ZoomCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                <dxdv:ClockwiseRotateBarItem dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.ClockwiseRotate}" Command="{Binding Path=(dxdv:DocumentViewerControl.ActualViewer).ActualCommandProvider.ClockwiseRotateCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                <dxdv:CounterClockwiseRotateBarItem dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.CounterClockwiseRotate}" Command="{Binding Path=(dxdv:DocumentViewerControl.ActualViewer).ActualCommandProvider.CounterClockwiseRotateCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                <dxdv:PreviousViewBarItem dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.PreviousView}" Command="{Binding Path=(dxdv:DocumentViewerControl.ActualViewer).ActualCommandProvider.PreviousViewCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                <dxdv:NextViewBarItem dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.NextView}" Command="{Binding Path=(dxdv:DocumentViewerControl.ActualViewer).ActualCommandProvider.NextViewCommand, RelativeSource={RelativeSource TemplatedParent}}" />
            </dxb:BarManager.Items>
            <dxb:BarManager.Bars>
                <dxb:Bar dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.Bar}" Caption="{dxdv:DocumentViewerControlLocalizedString BarCaption}">
                    <dxb:Bar.DockInfo>
                        <dxb:BarDockInfo ContainerType="Top" />
                    </dxb:Bar.DockInfo>
                    <dxb:Bar.ItemLinks>
                        <dxb:BarButtonItemLink BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.Open}" />
                        <dxb:BarButtonItemLink BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.Close}" />
                        <dxb:BarItemLinkSeparator />
                        <dxb:BarButtonItemLink BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.PreviousPage}" />
                        <dxb:BarButtonItemLink BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.NextPage}" />
                        <dxb:BarItemLinkSeparator />
                        <dxb:BarButtonItemLink BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.ZoomIn}" />
                        <dxb:BarButtonItemLink BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.ZoomOut}" />
                        <dxb:BarSubItemLink BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.Zoom}" />
                    </dxb:Bar.ItemLinks>
                </dxb:Bar>
            </dxb:BarManager.Bars>
            <Grid>
                <dxdv:DocumentPresenterControl />
            </Grid>
        </dxb:BarManager>
    </DataTemplate>
    <DataTemplate x:Key="{dxdvt:LWKey DocumentViewer.PresenterTemplate}">
        <dxdv:DocumentPresenterControl />
    </DataTemplate>
    <ControlTemplate x:Key="{dxdvt:LWKey DocumentViewer.Template}" TargetType="{x:Type dxdv:DocumentViewerControl}">
        <ContentControl
            Grid.RowSpan="3"
            Grid.ColumnSpan="3"
            Content="{TemplateBinding ActualCommandProvider}"
            ContentTemplate="{TemplateBinding ActualBarsTemplate}"
            Focusable="False" />
    </ControlTemplate>
    <ControlTemplate x:Key="{dxdvt:LWKey DocumentViewer.PageTemplate}" TargetType="{x:Type dxdv:PageControl}">
        <ItemsPresenter x:Name="PART_ItemsPresenter" />
    </ControlTemplate>
    <ControlTemplate x:Key="{dxdvt:LWKey DocumentViewer.PageControlItemTemplate}" TargetType="{x:Type dxdv:PageControlItem}">
        <dx:DXBorder Background="#10FF0000">
            <TextBlock Text="Sample page" />
        </dx:DXBorder>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxdvt:LWKey DocumentViewer.DocumentPresenterTemplate}" TargetType="{x:Type dxdv:DocumentPresenterControl}">
        <Grid>
            <dxe:NativeImage x:Name="PART_NativeImage" />
            <dxdv:DocumentViewerItemsControl x:Name="PART_ItemsControl">
                <dxdv:DocumentViewerItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <dxdv:DocumentViewerPanel x:Name="PART_DocumentViewerPanel" />
                    </ItemsPanelTemplate>
                </dxdv:DocumentViewerItemsControl.ItemsPanel>
            </dxdv:DocumentViewerItemsControl>
        </Grid>
    </ControlTemplate>
    <DataTemplate x:Key="{dxdvt:LWKey DocumentViewer.FlyoutControlPaginationTemplate}">
        <Grid Margin="10,0,10,0">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding Path=(dxdv:DocumentViewerControl.ActualViewer).CurrentPageNumber, RelativeSource={RelativeSource TemplatedParent}}" />
                <TextBlock Text=" / " />
                <TextBlock Text="{Binding Path=(dxdv:DocumentViewerControl.ActualViewer).PageCount, RelativeSource={RelativeSource TemplatedParent}}" />
            </StackPanel>
        </Grid>
    </DataTemplate>
    <ControlTemplate x:Key="ScrollViewerTemplate" TargetType="{x:Type dxdv:DXScrollViewer}">
        <Grid x:Name="Grid" Margin="{TemplateBinding Margin}" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <ScrollContentPresenter
                x:Name="PART_ScrollContentPresenter"
                Margin="{TemplateBinding Padding}"
                CanContentScroll="{TemplateBinding CanContentScroll}"
                CanHorizontallyScroll="False"
                CanVerticallyScroll="False">
                <Grid.RowSpan>
                    <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}">
                        <Binding.Converter>
                            <dx:EnumToObjectConverter DefaultValue="1">
                                <dx:EnumToObjectConverter.Values>
                                    <dx:EnumObjectProvider x:Key="TouchOverlap" Value="2" />
                                </dx:EnumToObjectConverter.Values>
                            </dx:EnumToObjectConverter>
                        </Binding.Converter>
                    </Binding>
                </Grid.RowSpan>
                <Grid.ColumnSpan>
                    <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}">
                        <Binding.Converter>
                            <dx:EnumToObjectConverter DefaultValue="1">
                                <dx:EnumToObjectConverter.Values>
                                    <dx:EnumObjectProvider x:Key="TouchOverlap" Value="2" />
                                </dx:EnumToObjectConverter.Values>
                            </dx:EnumToObjectConverter>
                        </Binding.Converter>
                    </Binding>
                </Grid.ColumnSpan>
            </ScrollContentPresenter>
            <ScrollBar
                x:Name="PART_VerticalScrollBar"
                Grid.Row="0"
                Grid.Column="1"
                AutomationProperties.AutomationId="VerticalScrollBar"
                Cursor="Arrow"
                Maximum="{TemplateBinding ScrollableHeight}"
                Minimum="0"
                ViewportSize="{TemplateBinding ViewportHeight}"
                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
                <Grid.RowSpan>
                    <MultiBinding>
                        <MultiBinding.Bindings>
                            <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource Self}" />
                            <Binding Path="(dx:ScrollBarExtensions.ScrollViewerOrientation)" RelativeSource="{RelativeSource TemplatedParent}" />
                        </MultiBinding.Bindings>
                        <MultiBinding.Converter>
                            <dx:VerticalScrollBarRowSpanConverter />
                        </MultiBinding.Converter>
                    </MultiBinding>
                </Grid.RowSpan>
            </ScrollBar>
            <ScrollBar
                x:Name="PART_HorizontalScrollBar"
                Grid.Row="1"
                Grid.Column="0"
                AutomationProperties.AutomationId="HorizontalScrollBar"
                Cursor="Arrow"
                Maximum="{TemplateBinding ScrollableWidth}"
                Minimum="0"
                Orientation="Horizontal"
                ViewportSize="{TemplateBinding ViewportWidth}"
                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
                <Grid.ColumnSpan>
                    <MultiBinding>
                        <MultiBinding.Bindings>
                            <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource Self}" />
                            <Binding Path="(dx:ScrollBarExtensions.ScrollViewerOrientation)" RelativeSource="{RelativeSource TemplatedParent}" />
                        </MultiBinding.Bindings>
                        <MultiBinding.Converter>
                            <dx:HorizontalScrollBarRowSpanConverter />
                        </MultiBinding.Converter>
                    </MultiBinding>
                </Grid.ColumnSpan>
            </ScrollBar>
            <dx:DXBorder
                x:Name="Corner"
                Grid.Row="1"
                Grid.Column="1"
                Style="{DynamicResource {dxt:LWKey ScrollBar.ScrollingCornerStyle}}">
                <dx:DXBorder.Visibility>
                    <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}">
                        <Binding.Converter>
                            <dx:EnumToObjectConverter DefaultValue="Visible">
                                <dx:EnumToObjectConverter.Values>
                                    <dx:EnumObjectProvider x:Key="TouchOverlap" Value="Collapsed" />
                                </dx:EnumToObjectConverter.Values>
                            </dx:EnumToObjectConverter>
                        </Binding.Converter>
                    </Binding>
                </dx:DXBorder.Visibility>
            </dx:DXBorder>
            <dxe:FlyoutControl
                x:Name="PART_FlyoutControl"
                VerticalAlignment="Center"
                AllowMoveAnimation="False"
                ContentTemplate="{DynamicResource {dxdvt:LWKey DocumentViewer.FlyoutControlPaginationTemplate}}"
                IsOpen="False"
                PlacementTarget="{Binding ElementName=PART_VerticalScrollBar}">
                <dxe:FlyoutControl.Settings>
                    <dxe:FlyoutSettings Placement="Left" ShowIndicator="True" />
                </dxe:FlyoutControl.Settings>
            </dxe:FlyoutControl>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxdvt:LWKey DocumentViewer.ItemsControlTemplate}" TargetType="{x:Type dxdv:DocumentViewerItemsControl}">
        <dxdv:DocumentPresenterDecorator
            x:Name="PART_Decorator"
            FocusVisualStyle="{x:Null}"
            Focusable="True"
            IsManipulationEnabled="True">
            <dxdv:DXScrollViewer
                x:Name="PART_ScrollViewer"
                Margin="0"
                CanContentScroll="True"
                Focusable="false"
                HorizontalScrollBarVisibility="Visible"
                Template="{StaticResource ScrollViewerTemplate}"
                VerticalScrollBarVisibility="Visible">
                <ItemsPresenter x:Name="PART_ItemsPresenter" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </dxdv:DXScrollViewer>
        </dxdv:DocumentPresenterDecorator>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxdvt:LWKey DocumentViewer.SearchControlContainerTemplate}" TargetType="{x:Type dxdv:SearchControlContainer}">
        <dxb:ToolBarControl
            dxb:BarManager.KeyGestureWorkingMode="AllKeyGesture"
            dxb:BarNameScope.IsScopeOwner="True"
            AllowCustomizationMenu="False"
            AllowQuickCustomization="False"
            BorderTemplate="{DynamicResource {dxdvt:LWKey DocumentViewer.DocumentViewerBarTemplate}}"
            GlyphSize="Small"
            IsTabStop="{Binding Path=(dxdv:SearchControlContainer.ActualSearchContainer).IsSearchControlVisible, RelativeSource={RelativeSource TemplatedParent}}"
            ShowBackground="False"
            ShowDragWidget="False"
            UseWholeRow="True">
            <dxdv:SearchBarStaticItem dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.Search}" Content="{TemplateBinding SearchParameter}">
                <dxdv:SearchBarStaticItem.ContentTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Margin="0,0,4,0" VerticalAlignment="Center" Text="{dxdv:DocumentViewerControlLocalizedString FindControlSearchCaption}" />
                            <dxe:TextEdit
                                Width="150"
                                Margin="0,0,4,0"
                                dxei:MVVMFocusBehavior.IsFocused="{Binding Path=(dxdv:SearchControlContainer.ActualSearchContainer).IsSearchControlVisible, RelativeSource={RelativeSource TemplatedParent}}"
                                EditValue="{Binding Path=Text, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                SelectAllOnGotFocus="True">
                                <dxe:TextEdit.InputBindings>
                                    <KeyBinding Key="Enter" Command="{Binding Path=(dxdv:SearchControlContainer.ActualSearchContainer).FindNextTextCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                                </dxe:TextEdit.InputBindings>
                            </dxe:TextEdit>
                        </StackPanel>
                    </DataTemplate>
                </dxdv:SearchBarStaticItem.ContentTemplate>
            </dxdv:SearchBarStaticItem>
            <dxdv:SearchBarSubItem dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.SearchSettings}" Content="{dxdv:DocumentViewerControlLocalizedString MessageSettingsCaption}" ItemClickBehaviour="None">
                <dxb:BarCheckItem dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.SearchCheckWholeWord}" Content="{dxdv:DocumentViewerControlLocalizedString FindControlWholeWordsOnly}" IsChecked="{Binding Path=SearchParameter.WholeWord, RelativeSource={RelativeSource TemplatedParent}}" />
                <dxb:BarCheckItem dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.SearchCheckCaseSensitive}" Content="{dxdv:DocumentViewerControlLocalizedString FindControlCaseSensitive}" IsChecked="{Binding Path=SearchParameter.IsCaseSensitive, RelativeSource={RelativeSource TemplatedParent}}" />
            </dxdv:SearchBarSubItem>
            <dxdv:SearchBarButtonItem
                dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.SearchPrevious}"
                Command="{Binding Path=FindPreviousTextCommand, RelativeSource={RelativeSource TemplatedParent}}"
                Content="{dxdv:DocumentViewerControlLocalizedString FindControlPrevious}"
                KeyGesture="Ctrl+Shift+G" />
            <dxdv:SearchBarButtonItem
                dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.SearchNext}"
                Command="{Binding Path=FindNextTextCommand, RelativeSource={RelativeSource TemplatedParent}}"
                Content="{dxdv:DocumentViewerControlLocalizedString FindControlNext}"
                KeyGesture="Ctrl+G" />
            <dxdv:SearchBarButtonItem
                dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.SearchClose}"
                Alignment="Far"
                Command="{Binding Path=CloseCommand, RelativeSource={RelativeSource TemplatedParent}}"
                Content="{dxdv:DocumentViewerControlLocalizedString FindControlClose}"
                KeyGesture="Escape" />
        </dxb:ToolBarControl>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxdvt:LWKey DocumentViewer.DocumentMapControlTemplate}" TargetType="{x:Type dxdv:DocumentMapControl}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <dxb:ToolBarControl ShowDragWidget="False">
                <dxdv:ShowOptionsBarItem dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.DocumentMapShowOptions}">
                    <dxb:BarButtonItem
                        dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.DocumentMapExpandCurrentNode}"
                        Command="{x:Static dxdv:DocumentMapCommands.ExpandCurrentNodeCommand}"
                        CommandTarget="{Binding ElementName=PART_TreeView}"
                        Content="{dxdv:DocumentViewerControlLocalizedString DocumentMapExpandCurrentCaption}"
                        IsVisible="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" />
                    <dxb:BarItemSeparator />
                    <dxb:BarButtonItem
                        dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.DocumentMapExpandTopLevelNode}"
                        Command="{x:Static dxdv:DocumentMapCommands.ExpandTopLevelNodesCommand}"
                        CommandTarget="{Binding ElementName=PART_TreeView}"
                        Content="{dxdv:DocumentViewerControlLocalizedString DocumentMapExpandTopLevelCaption}"
                        IsVisible="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" />
                    <dxb:BarButtonItem
                        dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.DocumentMapCollapseTopLevelNode}"
                        Command="{x:Static dxdv:DocumentMapCommands.CollapseTopLevelNodesCommand}"
                        CommandTarget="{Binding ElementName=PART_TreeView}"
                        Content="{dxdv:DocumentViewerControlLocalizedString DocumentMapCollapseTopLevelCaption}"
                        IsVisible="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" />
                    <dxb:BarItemSeparator />
                    <dxb:BarButtonItem
                        dxdv:DocumentViewerControl.BarItemName="{x:Static dxdv:DefaultBarManagerItemNames.DocumentMapGoToBookmark}"
                        Command="{x:Static dxdv:DocumentMapCommands.GoToNodeCommand}"
                        CommandParameter="{Binding Path=CurrentItem, ElementName=PART_GridControl}"
                        CommandTarget="{Binding ElementName=PART_TreeView}"
                        Content="{dxdv:DocumentViewerControlLocalizedString DocumentMapGoToCaption}" />
                </dxdv:ShowOptionsBarItem>
            </dxb:ToolBarControl>
            <dxg:GridControl
                x:Name="PART_GridControl"
                Grid.Row="1"
                ItemsSource="{TemplateBinding ActualSource}"
                SelectionMode="Row"
                ShowBorder="False">
                <dxmvvm:Interaction.Behaviors>
                    <dxmvvm:KeyToCommand
                        Command="{x:Static dxdv:DocumentMapCommands.GoToNodeCommand}"
                        CommandParameter="{Binding Path=CurrentItem, ElementName=PART_GridControl}"
                        EventName="PreviewKeyDown"
                        KeyGesture="Enter"
                        MarkRoutedEventsAsHandled="True" />
                    <dxmvvm:KeyToCommand
                        Command="{x:Static dxdv:DocumentMapCommands.GoToNodeCommand}"
                        CommandParameter="{Binding Path=CurrentItem, ElementName=PART_GridControl}"
                        EventName="PreviewKeyDown"
                        KeyGesture="Space"
                        MarkRoutedEventsAsHandled="True" />
                </dxmvvm:Interaction.Behaviors>
                <dxg:GridControl.View>
                    <dxg:TreeListView x:Name="PART_TreeView" Style="{TemplateBinding TreeViewStyle}">
                        <dxg:TreeListView.RowCellMenuCustomizations>
                            <dxb:BarButtonItem
                                Command="{x:Static dxdv:DocumentMapCommands.GoToNodeCommand}"
                                CommandParameter="{Binding Path=CurrentItem, ElementName=PART_GridControl}"
                                CommandTarget="{Binding ElementName=PART_GridControl}"
                                Content="{dxdv:DocumentViewerControlLocalizedString DocumentMapGoToCaption}" />
                        </dxg:TreeListView.RowCellMenuCustomizations>
                        <dxmvvm:Interaction.Behaviors>
                            <dxmvvm:EventToCommand Command="{x:Static dxdv:DocumentMapCommands.GoToNodeCommand}" EventName="MouseLeftButtonUp">
                                <dxmvvm:EventToCommand.EventArgsConverter>
                                    <dxdv:MouseEventArgsToDataRowConverter ChangedButton="Left" />
                                </dxmvvm:EventToCommand.EventArgsConverter>
                            </dxmvvm:EventToCommand>
                        </dxmvvm:Interaction.Behaviors>
                    </dxg:TreeListView>
                </dxg:GridControl.View>
                <dxg:GridControl.Columns>
                    <dxg:GridColumn FieldName="Title" />
                </dxg:GridControl.Columns>
            </dxg:GridControl>
        </Grid>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.PdfViewer\DevExpress.Xpf.DocumentViewer.Core\Themes\Generic\Templates.xaml-->


    <!--#region DEFAULT STYLES-->

    <Style x:Key="DocumentViewerControl.DefaultStyleBase" TargetType="{x:Type dxdv:DocumentViewerControl}">
        <Setter Property="Template" Value="{DynamicResource {dxdvt:LWKey DocumentViewer.Template}}" />
        <Setter Property="BarsTemplate" Value="{DynamicResource {dxdvt:LWKey DocumentViewer.BarsTemplate}}" />
        <Setter Property="RibbonTemplate" Value="{DynamicResource {dxdvt:LWKey DocumentViewer.RibbonTemplate}}" />
        <Setter Property="PresenterTemplate" Value="{DynamicResource {dxdvt:LWKey DocumentViewer.PresenterTemplate}}" />
    </Style>
    <Style x:Key="DocumentPresenterControl.DefaultStyleBase" TargetType="{x:Type dxdv:DocumentPresenterControl}">
        <Setter Property="Template" Value="{DynamicResource {dxdvt:LWKey DocumentViewer.DocumentPresenterTemplate}}" />
    </Style>
    <Style x:Key="DocumentViewerItemsControl.DefaultStyleBase" TargetType="{x:Type dxdv:DocumentViewerItemsControl}">
        <Setter Property="Template" Value="{DynamicResource {dxdvt:LWKey DocumentViewer.ItemsControlTemplate}}" />
        <Setter Property="Focusable" Value="False" />
    </Style>
    <Style x:Key="PageControl.DefaultStyleBase" TargetType="{x:Type dxdv:PageControl}">
        <Setter Property="Template" Value="{DynamicResource {dxdvt:LWKey DocumentViewer.PageTemplate}}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="PageDisplayMode" Value="Wrap">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <dxdv:PageControlPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="PageControlItem.DefaultStyleBase" TargetType="{x:Type dxdv:PageControlItem}">
        <Setter Property="Template" Value="{DynamicResource {dxdvt:LWKey DocumentViewer.PageControlItemTemplate}}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Focusable" Value="False" />
    </Style>
    <Style x:Key="SearchControlContainer.DefaultStyleBase" TargetType="{x:Type dxdv:SearchControlContainer}">
        <Setter Property="Template" Value="{DynamicResource {dxdvt:LWKey DocumentViewer.SearchControlContainerTemplate}}" />
        <Setter Property="Focusable" Value="False" />
    </Style>
    <Style x:Key="DocumentMapControl.DefaultStyleBase" TargetType="{x:Type dxdv:DocumentMapControl}">
        <Setter Property="TreeViewStyle" Value="{DynamicResource {dxdvt:LWKey DocumentViewer.TreeViewStyle}}" />
        <Setter Property="Template" Value="{DynamicResource {dxdvt:LWKey DocumentViewer.DocumentMapControlTemplate}}" />
    </Style>
    <!--#endregion DEFAULT STYLES-->
</ResourceDictionary>