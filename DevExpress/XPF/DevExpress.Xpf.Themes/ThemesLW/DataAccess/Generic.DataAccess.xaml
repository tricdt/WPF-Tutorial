<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:dawv="clr-namespace:DevExpress.DataAccess.Wizard.Views;assembly=DevExpress.DataAccess.v24.1"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
    xmlns:dxdadw="clr-namespace:DevExpress.Xpf.DataAccess.DataSourceWizard;assembly=DevExpress.Xpf.DataAccess.v24.1"
    xmlns:dxdadwn="clr-namespace:DevExpress.Xpf.DataAccess.DataSourceWizard.Native;assembly=DevExpress.Xpf.DataAccess.v24.1"
    xmlns:dxdai="clr-namespace:DevExpress.Xpf.DataAccess.Native;assembly=DevExpress.Xpf.DataAccess.v24.1"
    xmlns:dxdaid="clr-namespace:DevExpress.Xpf.DataAccess.Native.DataFederation;assembly=DevExpress.Xpf.DataAccess.v24.1"
    xmlns:dxdaie="clr-namespace:DevExpress.Xpf.DataAccess.Native.Editors;assembly=DevExpress.Xpf.DataAccess.v24.1"
    xmlns:dxdais="clr-namespace:DevExpress.Xpf.DataAccess.Native.Sql;assembly=DevExpress.Xpf.DataAccess.v24.1"
    xmlns:dxdal="clr-namespace:DevExpress.Xpf.DataAccess.Localization;assembly=DevExpress.Xpf.DataAccess.v24.1"
    xmlns:dxdaqb="clr-namespace:DevExpress.Xpf.DataAccess.QueryBuilder;assembly=DevExpress.Xpf.DataAccess.v24.1"
    xmlns:dxdaqbn="clr-namespace:DevExpress.Xpf.DataAccess.QueryBuilder.Native;assembly=DevExpress.Xpf.DataAccess.v24.1"
    xmlns:dxdat="clr-namespace:DevExpress.Xpf.DataAccess.Themes;assembly=DevExpress.Xpf.DataAccess.v24.1"
    xmlns:dxdau="clr-namespace:DevExpress.Xpf.DataAccess.Utils;assembly=DevExpress.Xpf.DataAccess.v24.1"
    xmlns:dxdiag="http://schemas.devexpress.com/winfx/2008/xaml/diagram"
    xmlns:dxdo="http://schemas.devexpress.com/winfx/2008/xaml/docking"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dxe1="clr-namespace:DevExpress.Xpf.Editors.Filtering;assembly=DevExpress.Xpf.Core.v24.1"
    xmlns:dxee="http://schemas.devexpress.com/winfx/2008/xaml/expressioneditor"
    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
    xmlns:dxfui="http://schemas.devexpress.com/winfx/2008/xaml/core/filteringui"
    xmlns:dxfui_local_native="http://schemas.devexpress.com/winfx/2008/xaml/core/filteringui/internal"
    xmlns:dxfuit="http://schemas.devexpress.com/winfx/2008/xaml/core/filteringui/themekeys"
    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
    xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys"
    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
    xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol"
    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
    xmlns:dxpn="http://schemas.devexpress.com/winfx/2008/xaml/printing/native"
    xmlns:dxprg="http://schemas.devexpress.com/winfx/2008/xaml/propertygrid">

    <ResourceDictionary.MergedDictionaries>
        <dxi:ThemeResourceDictionary Path="DataAccess/Generic.Pages.xaml" />
        <dxi:ThemeResourceDictionary Path="DataAccess/Generic.QueryBuilder.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <dxmvvm:ObjectToObjectConverter x:Key="modeLocalizationConverter">
        <dxmvvm:ObjectToObjectConverter.Map>
            <dxmvvm:MapItem Source="{x:Static dawv:ConfigureConnectionMode.Default}" Target="{dxdal:DataAccessUIStringId StringId=WizardPageConfigureEFConnection_DefaultConnection}" />
            <dxmvvm:MapItem Source="{x:Static dawv:ConfigureConnectionMode.New}" Target="{dxdal:DataAccessUIStringId StringId=WizardPageConfigureEFConnection_CustomConnection}" />
            <dxmvvm:MapItem Source="{x:Static dawv:ConfigureConnectionMode.Existing}" Target="{dxdal:DataAccessUIStringId StringId=WizardPageConfigureEFConnection_ChooseConnection}" />
        </dxmvvm:ObjectToObjectConverter.Map>
    </dxmvvm:ObjectToObjectConverter>
    <dxmvvm:BooleanToObjectConverter x:Key="booleanToTextCovnerter" FalseValue="{dxdal:DataAccessUIStringId StringId=WizardPageSaveConnection_SkipSaveCredentials}" TrueValue="{dxdal:DataAccessUIStringId StringId=WizardPageSaveConnection_SaveCredentials}" />
    <dxmvvm:BooleanToObjectConverter x:Key="booleanToTextJsonCovnerter" FalseValue="{dxdal:DataAccessUIStringId StringId=WizardPageSaveJsonConnection_SkipSaveRequestParameters}" TrueValue="{dxdal:DataAccessUIStringId StringId=WizardPageSaveJsonConnection_SaveRequestParameters}" />
    <dx:ObjectToVisibilityConverter x:Key="objectToVisibilityConverter" />
    <dxb:PopupMenu x:Key="QueryBuilderItemContextMenu">
        <dxb:BarButtonItem Command="{Binding Column.TemplatedParent.RenameTableCommand}" CommandParameter="{Binding View.DataControl.CurrentCellValue}" Content="{dxdal:DataAccessUIStringId StringId=QueryBuilder_Rename}">
            <dxb:BarButtonItem.IsVisible>
                <MultiBinding Converter="{dxdaie:UseQueryBuilderLightToCanExecuteCommandConverter}">
                    <Binding Path="View.DataControl.(dxdadw:QueryBuilder.QueryBuilder).UseQueryBuilderLight" />
                    <Binding Path="View.DataControl.(dxdadw:QueryBuilder.QueryBuilder).DisplayNameProvider" />
                </MultiBinding>
            </dxb:BarButtonItem.IsVisible>
        </dxb:BarButtonItem>
        <dxb:BarButtonItem Command="{Binding Column.TemplatedParent.RemoveTableCommand}" CommandParameter="{Binding View.DataControl.CurrentItem.Name}" Content="{dxdal:DataAccessUIStringId StringId=QueryBuilder_Delete}" />
    </dxb:PopupMenu>
    <dxmvvm:BooleanToObjectConverter x:Key="highlightedToFontWeightConveter" FalseValue="{x:Static FontWeights.Normal}" TrueValue="{x:Static FontWeights.Bold}" />
    <dxmvvm:BooleanToObjectConverter x:Key="booleanToTextConverter" FalseValue="{dxdal:DataAccessUIStringId StringId=WizardPageChooseObjectBindingMode_RetrieveData}" TrueValue="{dxdal:DataAccessUIStringId StringId=WizardPageChooseObjectBindingMode_RetrieveSchema}" />
    <dxmvvm:BooleanToObjectConverter x:Key="BooleanToDescriptionConverter" FalseValue="{dxdal:DataAccessUIStringId StringId=WizardPageChooseObjectBindingMode_RetrieveDataDescription}" TrueValue="{dxdal:DataAccessUIStringId StringId=WizardPageChooseObjectBindingMode_RetrieveSchemaDescription}" />
    <dxmvvm:BooleanToObjectConverter x:Key="booleanToTextConveter" FalseValue="{dxdal:DataAccessUIStringId StringId=WizardPageChooseObjectMember_BindToMember}" TrueValue="{dxdal:DataAccessUIStringId StringId=WizardPageChooseObjectMember_BindToObject}" />
    <Thickness x:Key="filterEditorItemMargin">0,0,4,0</Thickness>
    <dxfui_local_native:PaletteForegroundConverter x:Key="PaletteConverter" />

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\DataSourceWizard\DefaultWizardButtons.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\DataSourceWizard\DefaultWizardButtons.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\JoinEditor\ConditionControl.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\JoinEditor\ConditionControl.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\JoinEditor\ConditionEditorControl.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\JoinEditor\ConditionEditorControl.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\DataPreviewControl.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\DataPreviewControl.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\DataSourceWizardExpressionUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\DataSourceWizardExpressionUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\FilterControlEditorEx.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\FilterControlEditorEx.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\FilterControlEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\FilterControlEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\FilterStringEditorResources1.xaml-->
    <ControlTemplate x:Key="{dxdat:LWKey FilterStringEditor.FilterStringOneElementsInSecondOperandTemplate}">
        <dxdaie:FilterControlEditor
            EditMode="{Binding Path=Content.Content.EditMode, RelativeSource={RelativeSource Self}}"
            ExistingParameters="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).ExistingParameters, RelativeSource={RelativeSource Self}}"
            FilterPresenter="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).FilterPresenter, RelativeSource={RelativeSource Self}}"
            Index="0"
            Node="{Binding}"
            Operator="{Binding Path=AdditionalOperands[0]}"
            ParameterService="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).ParameterService, RelativeSource={RelativeSource Self}}"
            Properties="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).Properties, RelativeSource={RelativeSource Self}}"
            SelectedParameter="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).SelectedParameter, RelativeSource={RelativeSource Self}}"
            UseCascadeParameters="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).UseCascadeParameters, RelativeSource={RelativeSource Self}, UpdateSourceTrigger=PropertyChanged}" />
    </ControlTemplate>
    <ControlTemplate x:Key="{dxdat:LWKey FilterStringEditor.FilterStringTwoElementsInSecondOperandTemplate}">
        <StackPanel Orientation="Horizontal">
            <dxdaie:FilterControlEditor
                EditMode="{Binding Path=Content.Content.EditMode, RelativeSource={RelativeSource Self}}"
                ExistingParameters="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).ExistingParameters, RelativeSource={RelativeSource Self}}"
                FilterPresenter="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).FilterPresenter, RelativeSource={RelativeSource Self}}"
                Index="0"
                Node="{Binding}"
                Operator="{Binding Path=AdditionalOperands[0]}"
                ParameterService="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).ParameterService, RelativeSource={RelativeSource Self}}"
                Properties="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).Properties, RelativeSource={RelativeSource Self}}"
                SelectedParameter="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).SelectedParameter, RelativeSource={RelativeSource Self}}"
                UseCascadeParameters="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).UseCascadeParameters, RelativeSource={RelativeSource Self}}" />
            <TextBlock
                Margin="0,3,3,3"
                VerticalAlignment="Center"
                Foreground="Green"
                Text="{Binding Source={x:Null}, ConverterParameter=FilterClauseBetweenAnd, Converter={dxdai:EditorStringIdConverter}}" />
            <dxdaie:FilterControlEditor
                EditMode="{Binding Path=Content.Content.EditMode, RelativeSource={RelativeSource Self}}"
                ExistingParameters="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).ExistingParameters, RelativeSource={RelativeSource Self}}"
                FilterPresenter="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).FilterPresenter, RelativeSource={RelativeSource Self}}"
                Index="1"
                Node="{Binding}"
                Operator="{Binding Path=AdditionalOperands[1]}"
                ParameterService="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).ParameterService, RelativeSource={RelativeSource Self}}"
                Properties="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).Properties, RelativeSource={RelativeSource Self}}"
                SelectedParameter="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).SelectedParameter, RelativeSource={RelativeSource Self}}"
                UseCascadeParameters="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).UseCascadeParameters, RelativeSource={RelativeSource Self}}" />
        </StackPanel>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxdat:LWKey FilterStringEditor.FilterStringSeveralElementsInSecondOperandTemplate}">
        <StackPanel Orientation="Horizontal">
            <TextBlock
                Margin="0,3,0,3"
                VerticalAlignment="Center"
                Text="("
                Visibility="{Binding Path=AdditionalOperands.Count, Converter={dxdaie:AdditionalOperandsCountToVisibilityConverter}}" />
            <dxe1:AdditionalOperandsItemsControl ItemTemplate="{DynamicResource {dxdat:LWKey FilterStringEditor.QueryBuilderSomeValuesTemplate}}" ItemsPanel="{DynamicResource {dxt:LWKey FilterControl.SeveralElementsItemPanelTemplate}}" ItemsSource="{Binding Path=AdditionalOperands}" />
            <TextBlock
                Margin="-3,3,3,3"
                VerticalAlignment="Center"
                Text=")"
                Visibility="{Binding Path=AdditionalOperands.Count, Converter={dxdaie:AdditionalOperandsCountToVisibilityConverter}}" />
            <Button
                x:Name="PART_AddNewOperandButton"
                Margin="0,3,3,3"
                VerticalAlignment="Center"
                dx:FocusHelper2.Focusable="False"
                Command="{TemplateBinding Tag}"
                Cursor="Hand"
                Template="{DynamicResource {dxt:LWKey FilterControl.AddButtonTemplate}}">
                <ToolTipService.ToolTip>
                    <ToolTip Visibility="{Binding Owner.ShowToolTips, Converter={dxmvvm:BooleanToVisibilityConverter}}">
                        <StackPanel Orientation="Vertical">
                            <TextBlock Margin="0,0,0,4" FontWeight="Bold" Text="{Binding Source={x:Null}, ConverterParameter=FilterToolTipKeysAdd, Converter={dxdai:EditorStringIdConverter}}" />
                            <TextBlock Text="{Binding Source={x:Null}, ConverterParameter=FilterToolTipElementAdd, Converter={dxdai:EditorStringIdConverter}}" />
                        </StackPanel>
                    </ToolTip>
                </ToolTipService.ToolTip>
            </Button>
        </StackPanel>
    </ControlTemplate>
    <DataTemplate x:Key="{dxdat:LWKey FilterStringEditor.FilterStringSomeValuesTemplate}">
        <StackPanel Orientation="Horizontal">
            <TextBlock
                x:Name="TextBlock"
                Margin="-3,3,3,3"
                VerticalAlignment="Center"
                Text=","
                Visibility="{Binding Path=(dx:PositionStackPanel.Position), RelativeSource={RelativeSource TemplatedParent}, Converter={dxdaie:FirstToCollapsedConverter}}" />
            <dxdaie:FilterControlEditor
                EditMode="{Binding Path=Content.Content.EditMode, RelativeSource={RelativeSource Self}}"
                ExistingParameters="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).ExistingParameters, RelativeSource={RelativeSource Self}}"
                FilterPresenter="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).FilterPresenter, RelativeSource={RelativeSource Self}}"
                Index="{Binding Path=(dx:PositionStackPanel.Index), RelativeSource={RelativeSource TemplatedParent}}"
                Node="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}"
                Operator="{Binding}"
                ParameterService="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).ParameterService, RelativeSource={RelativeSource Self}}"
                Properties="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).Properties, RelativeSource={RelativeSource Self}}"
                SelectedParameter="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).SelectedParameter, RelativeSource={RelativeSource Self}}"
                UseCascadeParameters="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).UseCascadeParameters, RelativeSource={RelativeSource Self}}" />
        </StackPanel>
    </DataTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\FilterStringEditorResources1.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\FilterStringEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\FilterStringEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\FilterStringEditorResources.xaml-->
    <ControlTemplate x:Key="{dxdat:LWKey FilterStringEditor.OneElementsInSecondOperandTemplate}">
        <dxdaie:FilterControlEditorEx
            EditMode="{Binding Path=Content.Content.EditMode, RelativeSource={RelativeSource Self}}"
            Index="0"
            Node="{Binding}"
            Operator="{Binding Path=AdditionalOperands[0]}"
            ParameterService="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).ParameterService, RelativeSource={RelativeSource Self}}"
            SelectedParameter="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).SelectedParameter, RelativeSource={RelativeSource Self}}"
            UseCascadeParameters="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).UseCascadeParameters, RelativeSource={RelativeSource Self}, UpdateSourceTrigger=PropertyChanged}" />
    </ControlTemplate>

    <ControlTemplate x:Key="{dxdat:LWKey FilterStringEditor.TwoElementsInSecondOperandTemplate}">
        <StackPanel Orientation="Horizontal">
            <dxdaie:FilterControlEditorEx
                EditMode="{Binding Path=Content.Content.EditMode, RelativeSource={RelativeSource Self}}"
                Index="0"
                Node="{Binding}"
                Operator="{Binding Path=AdditionalOperands[0]}"
                ParameterService="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).ParameterService, RelativeSource={RelativeSource Self}}"
                SelectedParameter="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).SelectedParameter, RelativeSource={RelativeSource Self}}"
                UseCascadeParameters="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).UseCascadeParameters, RelativeSource={RelativeSource Self}}" />
            <TextBlock
                Margin="0,3,3,3"
                VerticalAlignment="Center"
                Foreground="Green"
                Text="{Binding Source={x:Null}, ConverterParameter=FilterClauseBetweenAnd, Converter={dxdai:EditorStringIdConverter}}" />
            <dxdaie:FilterControlEditorEx
                EditMode="{Binding Path=Content.Content.EditMode, RelativeSource={RelativeSource Self}}"
                Index="1"
                Node="{Binding}"
                Operator="{Binding Path=AdditionalOperands[1]}"
                ParameterService="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).ParameterService, RelativeSource={RelativeSource Self}}"
                SelectedParameter="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).SelectedParameter, RelativeSource={RelativeSource Self}}"
                UseCascadeParameters="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).UseCascadeParameters, RelativeSource={RelativeSource Self}}" />
        </StackPanel>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxdat:LWKey FilterStringEditor.SeveralElementsInSecondOperandTemplate}">
        <StackPanel Orientation="Horizontal">
            <TextBlock
                Margin="0,3,0,3"
                VerticalAlignment="Center"
                Text="("
                Visibility="{Binding Path=AdditionalOperands.Count, Converter={dxdaie:AdditionalOperandsCountToVisibilityConverter}}" />
            <dxe1:AdditionalOperandsItemsControl ItemTemplate="{DynamicResource {dxdat:LWKey FilterStringEditor.SomeValuesTemplate}}" ItemsPanel="{DynamicResource {dxt:LWKey FilterControl.SeveralElementsItemPanelTemplate}}" ItemsSource="{Binding Path=AdditionalOperands}" />
            <TextBlock
                Margin="-3,3,3,3"
                VerticalAlignment="Center"
                Text=")"
                Visibility="{Binding Path=AdditionalOperands.Count, Converter={dxdaie:AdditionalOperandsCountToVisibilityConverter}}" />
            <Button
                x:Name="PART_AddNewOperandButton"
                Margin="0,3,3,3"
                VerticalAlignment="Center"
                dx:FocusHelper2.Focusable="False"
                Command="{TemplateBinding Tag}"
                Cursor="Hand"
                Template="{DynamicResource {dxt:LWKey FilterControl.AddButtonTemplate}}">
                <ToolTipService.ToolTip>
                    <ToolTip Visibility="{Binding Owner.ShowToolTips, Converter={dxmvvm:BooleanToVisibilityConverter}}">
                        <StackPanel Orientation="Vertical">
                            <TextBlock Margin="0,0,0,4" FontWeight="Bold" Text="{Binding Source={x:Null}, ConverterParameter=FilterToolTipKeysAdd, Converter={dxdai:EditorStringIdConverter}}" />
                            <TextBlock Text="{Binding Source={x:Null}, ConverterParameter=FilterToolTipElementAdd, Converter={dxdai:EditorStringIdConverter}}" />
                        </StackPanel>
                    </ToolTip>
                </ToolTipService.ToolTip>
            </Button>
        </StackPanel>
    </ControlTemplate>

    <DataTemplate x:Key="{dxdat:LWKey FilterStringEditor.SomeValuesTemplate}">
        <StackPanel Orientation="Horizontal">
            <TextBlock
                x:Name="TextBlock"
                Margin="-3,3,3,3"
                VerticalAlignment="Center"
                Text=","
                Visibility="{Binding Path=(dx:PositionStackPanel.Position), RelativeSource={RelativeSource TemplatedParent}, Converter={dxdaie:FirstToCollapsedConverter}}" />
            <dxdaie:FilterControlEditorEx
                EditMode="{Binding Path=Content.Content.EditMode, RelativeSource={RelativeSource Self}}"
                Index="{Binding Path=(dx:PositionStackPanel.Index), RelativeSource={RelativeSource TemplatedParent}}"
                Node="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}"
                Operator="{Binding}"
                ParameterService="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).ParameterService, RelativeSource={RelativeSource Self}}"
                SelectedParameter="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).SelectedParameter, RelativeSource={RelativeSource Self}}"
                UseCascadeParameters="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).UseCascadeParameters, RelativeSource={RelativeSource Self}}" />
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="{dxdat:LWKey FilterStringEditor.CustomExpressionNodeEditorDataTemplate}">
        <dxdaie:FilterStringExpressionEditorContainer BindableExpression="{Binding Model.Expression, Mode=OneWayToSource}" CurrentColumnInfo="{Binding Model.Column, Mode=OneTime}" Parameters="{Binding Parameters}" />
    </DataTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\FilterStringEditorResources.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\JoinEditor\JoinEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\JoinEditor\JoinEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\MasterDetailEditor\DiagramMasterDetailEditorView.xaml-->
    <DataTemplate x:Key="{dxdat:LWKey DataAccess.LegacyMasterDetailEditorDialogServiceTemplate}">
        <ContentControl>
            <dx:DialogService>
                <dx:DialogService.DialogStyle>
                    <Style BasedOn="{StaticResource CustomFooterThemedWindowDialogStyle}" TargetType="{x:Type dx:ThemedWindow}">
                        <Setter Property="Width" Value="600" />
                        <Setter Property="Height" Value="350" />
                        <Setter Property="MinWidth" Value="420" />
                        <Setter Property="MinHeight" Value="240" />
                        <Setter Property="ResizeMode" Value="CanResize" />
                    </Style>
                </dx:DialogService.DialogStyle>
                <dx:DialogService.ViewTemplate>
                    <DataTemplate>
                        <dxdaie:MasterDetailEditor>
                            <dxdaie:LegacyMasterDetailEditorView />
                        </dxdaie:MasterDetailEditor>
                    </DataTemplate>
                </dx:DialogService.ViewTemplate>
            </dx:DialogService>
        </ContentControl>
    </DataTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\MasterDetailEditor\DiagramMasterDetailEditorView.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\MasterDetailEditor\LegacyMasterDetailEditorView.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\MasterDetailEditor\LegacyMasterDetailEditorView.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\EFParametersEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\EFParametersEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\PasswordRequestDialog.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\PasswordRequestDialog.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\QueryBuilderFilterControl.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\QueryBuilderFilterControl.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\QueryBuilderFilterControlEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\QueryBuilderFilterControlEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\QueryBuilderFilterStringEditorResources.xaml-->
    <ControlTemplate x:Key="{dxdat:LWKey FilterStringEditor.QueryBuilderOneElementsInSecondOperandTemplate}">
        <dxdaie:QueryBuilderFilterControlEditor
            EditMode="{Binding Path=Content.Content.EditMode, RelativeSource={RelativeSource Self}}"
            FiltersView="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).FiltersView, RelativeSource={RelativeSource Self}}"
            Index="0"
            Node="{Binding}"
            Operator="{Binding Path=AdditionalOperands[0]}"
            ParameterService="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).ParameterService, RelativeSource={RelativeSource Self}}"
            SelectedParameter="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).SelectedParameter, RelativeSource={RelativeSource Self}}"
            UseCascadeParameters="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).UseCascadeParameters, RelativeSource={RelativeSource Self}, UpdateSourceTrigger=PropertyChanged}" />
    </ControlTemplate>

    <ControlTemplate x:Key="{dxdat:LWKey FilterStringEditor.QueryBuilderTwoElementsInSecondOperandTemplate}">
        <StackPanel Orientation="Horizontal">
            <dxdaie:QueryBuilderFilterControlEditor
                EditMode="{Binding Path=Content.Content.EditMode, RelativeSource={RelativeSource Self}}"
                FiltersView="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).FiltersView, RelativeSource={RelativeSource Self}}"
                Index="0"
                Node="{Binding}"
                Operator="{Binding Path=AdditionalOperands[0]}"
                ParameterService="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).ParameterService, RelativeSource={RelativeSource Self}}"
                SelectedParameter="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).SelectedParameter, RelativeSource={RelativeSource Self}}"
                UseCascadeParameters="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).UseCascadeParameters, RelativeSource={RelativeSource Self}}" />
            <TextBlock
                Margin="0,3,3,3"
                VerticalAlignment="Center"
                Foreground="Green"
                Text="{Binding Source={x:Null}, ConverterParameter=FilterClauseBetweenAnd, Converter={dxdai:EditorStringIdConverter}}" />
            <dxdaie:QueryBuilderFilterControlEditor
                EditMode="{Binding Path=Content.Content.EditMode, RelativeSource={RelativeSource Self}}"
                FiltersView="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).FiltersView, RelativeSource={RelativeSource Self}}"
                Index="1"
                Node="{Binding}"
                Operator="{Binding Path=AdditionalOperands[1]}"
                ParameterService="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).ParameterService, RelativeSource={RelativeSource Self}}"
                SelectedParameter="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).SelectedParameter, RelativeSource={RelativeSource Self}}"
                UseCascadeParameters="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).UseCascadeParameters, RelativeSource={RelativeSource Self}}" />
        </StackPanel>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxdat:LWKey FilterStringEditor.QueryBuilderSeveralElementsInSecondOperandTemplate}">
        <StackPanel Orientation="Horizontal">
            <TextBlock
                Margin="0,3,0,3"
                VerticalAlignment="Center"
                Text="("
                Visibility="{Binding Path=AdditionalOperands.Count, Converter={dxdaie:AdditionalOperandsCountToVisibilityConverter}}" />
            <dxe1:AdditionalOperandsItemsControl ItemTemplate="{DynamicResource {dxdat:LWKey FilterStringEditor.QueryBuilderSomeValuesTemplate}}" ItemsPanel="{DynamicResource {dxt:LWKey FilterControl.SeveralElementsItemPanelTemplate}}" ItemsSource="{Binding Path=AdditionalOperands}" />
            <TextBlock
                Margin="-3,3,3,3"
                VerticalAlignment="Center"
                Text=")"
                Visibility="{Binding Path=AdditionalOperands.Count, Converter={dxdaie:AdditionalOperandsCountToVisibilityConverter}}" />
            <Button
                x:Name="PART_AddNewOperandButton"
                Margin="0,3,3,3"
                VerticalAlignment="Center"
                dx:FocusHelper2.Focusable="False"
                Command="{TemplateBinding Tag}"
                Cursor="Hand"
                Template="{DynamicResource {dxt:LWKey FilterControl.AddButtonTemplate}}">
                <ToolTipService.ToolTip>
                    <ToolTip Visibility="{Binding Owner.ShowToolTips, Converter={dxmvvm:BooleanToVisibilityConverter}}">
                        <StackPanel Orientation="Vertical">
                            <TextBlock Margin="0,0,0,4" FontWeight="Bold" Text="{Binding Source={x:Null}, ConverterParameter=FilterToolTipKeysAdd, Converter={dxdai:EditorStringIdConverter}}" />
                            <TextBlock Text="{Binding Source={x:Null}, ConverterParameter=FilterToolTipElementAdd, Converter={dxdai:EditorStringIdConverter}}" />
                        </StackPanel>
                    </ToolTip>
                </ToolTipService.ToolTip>
            </Button>
        </StackPanel>
    </ControlTemplate>

    <DataTemplate x:Key="{dxdat:LWKey FilterStringEditor.QueryBuilderSomeValuesTemplate}">
        <StackPanel Orientation="Horizontal">
            <TextBlock
                x:Name="TextBlock"
                Margin="-3,3,3,3"
                VerticalAlignment="Center"
                Text=","
                Visibility="{Binding Path=(dx:PositionStackPanel.Position), RelativeSource={RelativeSource TemplatedParent}, Converter={dxdaie:FirstToCollapsedConverter}}" />
            <dxdaie:QueryBuilderFilterControlEditor
                EditMode="{Binding Path=Content.Content.EditMode, RelativeSource={RelativeSource Self}}"
                FiltersView="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).FiltersView, RelativeSource={RelativeSource Self}}"
                Index="{Binding Path=(dx:PositionStackPanel.Index), RelativeSource={RelativeSource TemplatedParent}}"
                Node="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}"
                Operator="{Binding}"
                ParameterService="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).ParameterService, RelativeSource={RelativeSource Self}}"
                SelectedParameter="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).SelectedParameter, RelativeSource={RelativeSource Self}}"
                UseCascadeParameters="{Binding Path=(dxdaie:FilterStringUITypeEditorBase.Editor).UseCascadeParameters, RelativeSource={RelativeSource Self}}" />
        </StackPanel>
    </DataTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\QueryBuilderFilterStringEditorResources.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\QueryParameterEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\QueryParameterEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\ReportParameterEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\ReportParameterEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\ReportParameterEditor2.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\ReportParameterEditor2.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\ReportParameterPropertyGridControl.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\ReportParameterPropertyGridControl.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\SqlQueryEditor.xaml-->
    <dxdais:SqlQueryEditTemplateSelector x:Key="templateSelector">
        <dxdais:SqlQueryEditTemplateSelector.SelectQueryTemplate>
            <DataTemplate>
                <dxdadw:QueryBuilder
                    DisplayNameProvider="{Binding DisplayNameProvider}"
                    EditValue="{Binding ViewModel}"
                    ParameterService="{Binding ParameterService}"
                    UseLegacyExpressionEditor="false"
                    UseQueryBuilderLight="{Binding UseQueryBuilderLight}" />
            </DataTemplate>
        </dxdais:SqlQueryEditTemplateSelector.SelectQueryTemplate>
        <dxdais:SqlQueryEditTemplateSelector.StoredProcedureTemplate>
            <DataTemplate>
                <Grid>
                    <dxmvvm:Interaction.Behaviors>
                        <dx:DialogService Name="previewResults">
                            <dx:DialogService.DialogStyle>
                                <Style BasedOn="{StaticResource LegacyThemedWindowDialogStyleBase}" TargetType="{x:Type dx:ThemedWindow}">
                                    <Setter Property="ResizeMode" Value="CanResize" />
                                    <Setter Property="Width" Value="800" />
                                    <Setter Property="Height" Value="500" />
                                </Style>
                            </dx:DialogService.DialogStyle>
                            <dx:DialogService.ViewTemplate>
                                <DataTemplate>
                                    <dxdaie:DataPreviewControl Data="{Binding}" />
                                </DataTemplate>
                            </dx:DialogService.ViewTemplate>
                        </dx:DialogService>
                        <dx:DialogService Name="editParameters">
                            <dx:DialogService.DialogStyle>
                                <Style BasedOn="{StaticResource LegacyThemedWindowDialogStyleBase}" TargetType="{x:Type dx:ThemedWindow}">
                                    <Setter Property="Width" Value="500" />
                                    <Setter Property="Height" Value="420" />
                                </Style>
                            </dx:DialogService.DialogStyle>
                            <dx:DialogService.ViewTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <dxdaie:ParameterEditor EditValue="{Binding SelectedParameter}" ItemsSource="{Binding Parameters}" ParameterService="{Binding ParameterService}" />
                                        <dx:DialogFooter>
                                            <Grid>
                                                <UniformGrid HorizontalAlignment="Left" Columns="3">
                                                    <dx:DialogButton HorizontalAlignment="Left" Command="{Binding PreviewCommand}" Content="{dxdal:DataAccessUIStringId StringId=Button_Preview}" />
                                                </UniformGrid>
                                                <dx:DialogButton HorizontalAlignment="Right" Content="{dxdal:DataAccessUIStringId StringId=Button_OK}" DialogResult="OK" />
                                            </Grid>
                                        </dx:DialogFooter>
                                    </Grid>
                                </DataTemplate>
                            </dx:DialogService.ViewTemplate>
                        </dx:DialogService>
                    </dxmvvm:Interaction.Behaviors>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" SharedSizeGroup="ToolBarRow" />
                        <RowDefinition Height="auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <dxg:GridSearchControl
                        Name="PART_SearchControl"
                        Grid.Row="1"
                        Margin="0,0,0,12"
                        FindMode="Always"
                        NullText="{dxdal:DataAccessUIStringId StringId=StoredProcControl_Caption}"
                        SearchTextPostDelay="0"
                        ShowCloseButton="False"
                        ShowFindButton="True"
                        ShowMRUButton="False"
                        ShowSearchPanelMode="Always"
                        ShowSearchPanelNavigationButtons="False" />
                    <dxg:GridControl Grid.Row="2" ItemsSource="{Binding StoredProcedures}" SelectedItem="{Binding SelectedStoredProcedure}">
                        <dxg:GridColumn FieldName="DisplayName" Width="*" />
                        <dxg:GridControl.View>
                            <dxg:TableView
                                AllowGrouping="False"
                                AllowSorting="False"
                                NavigationStyle="Row"
                                SearchPanelPosition="Default"
                                ShowColumnHeaders="False"
                                ShowGroupFooters="False"
                                ShowGroupPanel="False"
                                ShowHorizontalLines="False"
                                ShowIndicator="False"
                                ShowSearchPanelMode="Never"
                                ShowVerticalLines="False">
                                <dxg:TableView.FormatConditions>
                                    <dxg:FormatCondition FieldName="IsValid" Value1="False" ValueRule="Equal">
                                        <dxg:FormatCondition.Format>
                                            <dxg:Format Foreground="Red" />
                                        </dxg:FormatCondition.Format>
                                    </dxg:FormatCondition>
                                </dxg:TableView.FormatConditions>
                            </dxg:TableView>
                        </dxg:GridControl.View>
                    </dxg:GridControl>
                    <dx:DialogFooter>
                        <Grid>
                            <UniformGrid HorizontalAlignment="Left" Columns="3">
                                <dx:DialogButton Command="{Binding PreviewResultsCommand}" Content="{dxdal:DataAccessUIStringId StringId=QueryBuilderButtons_PreviewResults}" DialogResult="{x:Null}" />
                                <dx:DialogButton Command="{Binding EditQueryParametersCommand}" Content="{dxdal:DataAccessUIStringId StringId=QueryBuilderButtons_EditParameters}" DialogResult="{x:Null}" />
                                <dx:DialogButton Content="{dxdal:DataAccessUIStringId StringId=QueryBuilderButtons_Filter}" DialogResult="{x:Null}" IsEnabled="False" />
                            </UniformGrid>
                            <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                <dx:DialogButton DialogResult="OK" />
                                <dx:DialogButton DialogResult="Cancel" />
                            </StackPanel>
                        </Grid>
                    </dx:DialogFooter>
                </Grid>
            </DataTemplate>
        </dxdais:SqlQueryEditTemplateSelector.StoredProcedureTemplate>
    </dxdais:SqlQueryEditTemplateSelector>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\SqlQueryEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\WizardTitle.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\WizardTitle.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\ChooseEFStoredProceduresEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\ChooseEFStoredProceduresEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\DataSourceWizard\DataSourceWizardControlBase.xaml-->
    <DataTemplate x:Key="footerTemplate">
        <dx:ThemedWindowDialogButtonsControl>
            <dxdadw:DefaultWizardButtons />
        </dx:ThemedWindowDialogButtonsControl>
    </DataTemplate>
    <DataTemplate x:Key="emptyFooterTemplate" />
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\DataSourceWizard\DataSourceWizardControlBase.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\DataSourceWizard\DataSourceWizardControl.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\DataSourceWizard\DataSourceWizardControl.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\MasterDetailEditor\MasterDetailEditor.xaml-->
    <Style x:Key="ImageOpacityTrigger" TargetType="{x:Type Image}">
        <Setter Property="Image.Opacity" Value="0.5" />
        <Style.Triggers>
            <Trigger Property="Image.IsMouseOver" Value="True">
                <Setter Property="Image.Opacity" Value="1.0" />
            </Trigger>
        </Style.Triggers>
    </Style>



    <Style x:Key="InvalidConditionTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsValid}" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {dxdat:LWKey ConditionControl.ErrorColor}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\MasterDetailEditor\MasterDetailEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\QueryBuilderFilterStringEditor.xaml-->
    <Style x:Key="baseWindowStyle" TargetType="{x:Type dx:DXWindow}">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="ShowInTaskbar" Value="False" />
        <Setter Property="ShowIcon" Value="False" />
        <Setter Property="WindowStyle" Value="ToolWindow" />
    </Style>



    <Style x:Key="newExternalParameterWindowStyle" BasedOn="{StaticResource baseWindowStyle}" TargetType="{x:Type dx:DXWindow}">
        <Setter Property="Width" Value="380" />
        <Setter Property="Height" Value="330" />
    </Style>

    <ControlTemplate x:Key="legacyTemplate" TargetType="{x:Type dxdaie:QueryBuilderFilterStringEditor}">
        <dxdaie:FilterControlEx
            x:Name="PART_FilterControl"
            DisplayNameProvider="{TemplateBinding DisplayNameProvider}"
            FilterCriteria="{Binding FilterCriteria, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            ShowGroupCommandsIcon="{TemplateBinding ShowGroupCommandsIcon}"
            ShowOperandTypeIcon="{TemplateBinding ShowOperandTypeIcon}">
            <dxdaie:FilterControlEx.Resources>
                <Style TargetType="{x:Type dxe1:FilterControlClauseNode}">
                    <Setter Property="SecondOperandsOneTemplate" Value="{DynamicResource {dxdat:LWKey FilterStringEditor.QueryBuilderOneElementsInSecondOperandTemplate}}" />
                    <Setter Property="SecondOperandsTwoTemplate" Value="{DynamicResource {dxdat:LWKey FilterStringEditor.QueryBuilderTwoElementsInSecondOperandTemplate}}" />
                    <Setter Property="SecondOperandsSeveralTemplate" Value="{DynamicResource {dxdat:LWKey FilterStringEditor.QueryBuilderSeveralElementsInSecondOperandTemplate}}" />
                </Style>
            </dxdaie:FilterControlEx.Resources>
            <dxmvvm:Interaction.Behaviors>
                <dxe:FilterControlColumnsBehavior AdditionalProperties="{Binding AdditionalProperties, RelativeSource={RelativeSource TemplatedParent}}" HiddenProperties="{Binding HiddenProperties, RelativeSource={RelativeSource TemplatedParent}}" ObjectType="{Binding ObjectType, RelativeSource={RelativeSource TemplatedParent}}" />
            </dxmvvm:Interaction.Behaviors>
        </dxdaie:FilterControlEx>
    </ControlTemplate>

    <ControlTemplate x:Key="template" TargetType="{x:Type dxdaie:QueryBuilderFilterStringEditor}">
        <dxfui:FilterEditorControl x:Name="PART_FilterControl" Context="{TemplateBinding FilterContext}" ShowCounts="False" AddNewCriteriaToBottom="True">
            <dxfui:FilterEditorControl.Resources>
                <DataTemplate x:Key="{dxgt:LWKey FilterEditor.CustomExpressionNodeBehaviorsTemplate}">
                    <ItemsControl>
                        <dxdaie:FilterStringExpressionEditorDialogService Parameters="{Binding Path=AssociatedObject.(dxdaie:FilterStringUITypeEditorBase.Editor).FiltersView.ExistingParameters, RelativeSource={RelativeSource Self}}">
                            <dxdaie:FilterStringExpressionEditorDialogService.DialogStyle>
                                <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                                    <Setter Property="Width" Value="750" />
                                    <Setter Property="Height" Value="580" />
                                    <Setter Property="MinWidth" Value="750" />
                                    <Setter Property="MinHeight" Value="580" />
                                </Style>
                            </dxdaie:FilterStringExpressionEditorDialogService.DialogStyle>
                        </dxdaie:FilterStringExpressionEditorDialogService>
                    </ItemsControl>
                </DataTemplate>
                <Style x:Key="{dxgt:LWKey FilterEditor.OperandEditorParameterStyle}" TargetType="{x:Type FrameworkElement}">
                    <Setter Property="Focusable" Value="True" />
                    <Setter Property="dxb:BarManager.MenuShowMouseButton" Value="LeftButton" />
                    <Setter Property="dxb:BarManager.DXContextMenuPlacement" Value="Bottom" />
                    <Setter Property="dxb:BarManager.DXContextMenu">
                        <Setter.Value>
                            <dxmvvm:ValueFactory>
                                <DataTemplate>
                                    <dxb:PopupMenu>
                                        <dxb:BarLinkContainerItem ItemLinksSource="{Binding Path=(dxdaie:QueryBuilderFilterStringEditor.Editor).FiltersView.ExistingParameters, Converter={dxdai:ParametersToParameterNamesConverter}, RelativeSource={RelativeSource Self}}">
                                            <dxb:BarLinkContainerItem.ItemTemplate>
                                                <DataTemplate>
                                                    <dxb:BarButtonItem Command="{Binding Path=(dxfui_local_native:FilterElementHelper.ValueItem).SelectParameterCommand, RelativeSource={RelativeSource Self}}" CommandParameter="{Binding}" Content="{Binding}" />
                                                </DataTemplate>
                                            </dxb:BarLinkContainerItem.ItemTemplate>
                                        </dxb:BarLinkContainerItem>
                                        <dxb:BarItemLinkSeparator />
                                        <dxb:BarButtonItem Command="{Binding Path=(dxdaie:QueryBuilderFilterStringEditor.Editor).AddQueryParameterCommand, RelativeSource={RelativeSource Self}}" Content="{dxdal:DataAccessUIStringId StringId=QueryFilter_AddQueryParameter}">
                                            <dxb:BarButtonItem.CommandParameter>
                                                <MultiBinding Converter="{dxdaie:FilterControlLeafToCreateParameterModelConverter}">
                                                    <Binding Converter="{dxdaie:FilterControlLeafToColumnTypeConverter}" Path="DataContext" RelativeSource="{RelativeSource AncestorType={x:Type dxfui:FilterEditorLeafControl}}" />
                                                    <Binding Path="(dxfui_local_native:FilterElementHelper.ValueItem).SelectParameterCommand" RelativeSource="{RelativeSource Self}" />
                                                </MultiBinding>
                                            </dxb:BarButtonItem.CommandParameter>
                                        </dxb:BarButtonItem>
                                        <dxb:BarSubItem Content="{dxdal:DataAccessUIStringId StringId=QueryFilter_BindTo}" IsVisible="{Binding Path=(dxdaie:QueryBuilderFilterStringEditor.Editor).ParameterService, Converter={dxdaie:ParameterServiceToBindToIsEnabledConverter}, RelativeSource={RelativeSource Self}}">
                                            <dxb:BarSubItem.Items>
                                                <dxb:BarLinkContainerItem ItemLinksSource="{Binding Path=(dxdaie:QueryBuilderFilterStringEditor.Editor).Parameters, Converter={dxdai:ParametersToParameterNamesConverter}, RelativeSource={RelativeSource Self}}">
                                                    <dxb:BarLinkContainerItem.ItemTemplate>
                                                        <DataTemplate>
                                                            <ContentControl>
                                                                <dxb:BarButtonItem Command="{Binding Path=(dxdaie:QueryBuilderFilterStringEditor.Editor).BindToExternalParameterCommand, RelativeSource={RelativeSource Self}}" Content="{Binding}">
                                                                    <dxb:BarButtonItem.CommandParameter>
                                                                        <MultiBinding Converter="{dxdaie:ExternalParameterToBindingModelConverter}">
                                                                            <Binding />
                                                                            <Binding Path="(dxfui_local_native:FilterElementHelper.ValueItem).SelectParameterCommand" RelativeSource="{RelativeSource Self}" />
                                                                        </MultiBinding>
                                                                    </dxb:BarButtonItem.CommandParameter>
                                                                </dxb:BarButtonItem>
                                                            </ContentControl>
                                                        </DataTemplate>
                                                    </dxb:BarLinkContainerItem.ItemTemplate>
                                                </dxb:BarLinkContainerItem>
                                                <dxb:BarItemLinkSeparator />
                                                <dxb:BarButtonItem Command="{Binding Path=(dxdaie:QueryBuilderFilterStringEditor.Editor).AddExternalParameterCommand, RelativeSource={RelativeSource Self}}" Content="{Binding Path=(dxdaie:QueryBuilderFilterStringEditor.Editor).ParameterService.AddParameterString, RelativeSource={RelativeSource Self}}" IsVisible="{Binding IsEnabled, RelativeSource={RelativeSource Self}}">
                                                    <dxb:BarButtonItem.CommandParameter>
                                                        <MultiBinding Converter="{dxdaie:FilterControlLeafToCreateParameterModelConverter}">
                                                            <Binding Converter="{dxdaie:FilterControlLeafToColumnTypeConverter}" Path="DataContext" RelativeSource="{RelativeSource AncestorType={x:Type dxfui:FilterEditorLeafControl}}" />
                                                            <Binding Path="(dxfui_local_native:FilterElementHelper.ValueItem).SelectParameterCommand" RelativeSource="{RelativeSource Self}" />
                                                        </MultiBinding>
                                                    </dxb:BarButtonItem.CommandParameter>
                                                </dxb:BarButtonItem>
                                            </dxb:BarSubItem.Items>
                                            <dxb:BarSubItem.ItemTemplate>
                                                <DataTemplate>
                                                    <ContentControl>
                                                        <dxb:BarButtonItem Command="{Binding FilterColumnCommand}" CommandParameter="{Binding Parameter}" Content="{Binding FilterColumn.ColumnCaption}" />
                                                    </ContentControl>
                                                </DataTemplate>
                                            </dxb:BarSubItem.ItemTemplate>
                                        </dxb:BarSubItem>
                                    </dxb:PopupMenu>
                                </DataTemplate>
                            </dxmvvm:ValueFactory>
                        </Setter.Value>
                    </Setter>
                </Style>
            </dxfui:FilterEditorControl.Resources>
            <dxmvvm:Interaction.Behaviors>
                <dxdai:FilterEditorControlCustomizationBehavior Parameters="{Binding ExistingParameters}" />
                <dxdai:FilterStringEditorGroupFieldsByTableBehavior />
            </dxmvvm:Interaction.Behaviors>
        </dxfui:FilterEditorControl>
    </ControlTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\QueryBuilderFilterStringEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\ParameterEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\ParameterEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\QueryBuilderParametersEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic\QueryBuilderParametersEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.DataAccess\Themes\Generic.xaml-->


    <!--#region DEFAULT STYLES-->

    <Style x:Key="DefaultWizardButtons.DefaultStyleBase" TargetType="dxdadw:DefaultWizardButtons">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxdadw:DefaultWizardButtons">
                    <ContentControl Content="{Binding}" ContentTemplate="{DynamicResource {dxdat:LWKey DataAccess.WizardDefaultFooterButtonsTemplate}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ConditionControl.DefaultStyleBase" TargetType="{x:Type dxdaie:ConditionControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdaie:ConditionControl}">
                    <StackPanel DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Orientation="Horizontal">
                        <StackPanel.Resources>
                            <Style x:Key="ContextMenuItemStyle" TargetType="{x:Type dxb:BarButtonItem}">
                                <Setter Property="Content" Value="{Binding Caption}" />
                                <Setter Property="Command" Value="{Binding Command}" />
                                <Setter Property="CommandParameter" Value="{Binding Value}" />
                            </Style>
                            <dxmvvm:ObjectToObjectConverter x:Key="StringValueToVisibilityConverter">
                                <dxmvvm:ObjectToObjectConverter.DefaultTarget>
                                    <Visibility>Visible</Visibility>
                                </dxmvvm:ObjectToObjectConverter.DefaultTarget>
                                <dxmvvm:MapItem Source="{x:Null}">
                                    <dxmvvm:MapItem.Target>
                                        <Visibility>Collapsed</Visibility>
                                    </dxmvvm:MapItem.Target>
                                </dxmvvm:MapItem>
                            </dxmvvm:ObjectToObjectConverter>
                            <dxb:PopupMenu
                                x:Key="LeftTableMenu"
                                MinWidth="100"
                                ItemLinksSource="{Binding LeftTableMenuItems}"
                                ItemStyle="{StaticResource ContextMenuItemStyle}" />
                            <dxb:PopupMenu x:Key="OperatorTypeMenu" MinWidth="100" ItemLinksSource="{Binding OperatorTypeMenuItems}">
                                <dxb:PopupMenu.ItemStyle>
                                    <Style BasedOn="{StaticResource ContextMenuItemStyle}" TargetType="{x:Type dxb:BarButtonItem}">
                                        <Setter Property="Glyph" Value="{Binding Value, Converter={dxdai:ImageNameToSourceConverter Folder=JoinEditor}}" />
                                    </Style>
                                </dxb:PopupMenu.ItemStyle>
                            </dxb:PopupMenu>
                        </StackPanel.Resources>
                        <TextBlock dxb:BarManager.DXContextMenu="{Binding AllowChangeMasterTable, Converter={dxmvvm:BooleanToObjectConverter TrueValue={StaticResource LeftTableMenu}, FalseValue={x:Null}}}" dxb:BarManager.MenuShowMouseButton="LeftRightButton" Text="{Binding LeftTable.ItemDisplayName, StringFormat='[{0}]', TargetNullValue={dxdal:DataAccessUIStringId StringId=JoinEditorEmptyTableText}, FallbackValue={dxdal:DataAccessUIStringId StringId=JoinEditorEmptyTableText}}">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Opacity" Value="1" />
                                    <Setter Property="TextDecorations" Value="None" />
                                    <Style.Triggers>
                                        <DataTrigger Value="False">
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{dxdai:TableBrushConverter}">
                                                    <Binding Path="Tables" />
                                                    <Binding Path="LeftTable" />
                                                </MultiBinding>
                                            </DataTrigger.Binding>
                                            <DataTrigger.Setters>
                                                <Setter Property="Foreground" Value="{DynamicResource {dxdat:LWKey ConditionControl.ErrorColor}}" />
                                            </DataTrigger.Setters>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding LeftTable}" Value="{x:Null}">
                                            <Setter Property="Opacity" Value="0.62" />
                                        </DataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                                                <Condition Binding="{Binding AllowChangeMasterTable}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter Property="TextDecorations" Value="Underline" />
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock Margin="5,0" Text="." Visibility="{Binding LeftTable, Converter={StaticResource StringValueToVisibilityConverter}}" />
                        <TextBlock dxb:BarManager.MenuShowMouseButton="LeftRightButton" Text="{Binding LeftColumn.ItemDisplayName, StringFormat='[{0}]', TargetNullValue={dxdal:DataAccessUIStringId StringId=JoinEditorEmptyColumnText}, FallbackValue={dxdal:DataAccessUIStringId StringId=JoinEditorEmptyColumnText}}" Visibility="{Binding LeftTable, Converter={StaticResource StringValueToVisibilityConverter}}">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Opacity" Value="1" />
                                    <Setter Property="TextDecorations" Value="None" />
                                    <Style.Triggers>
                                        <DataTrigger Value="False">
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{dxdai:ColumnBrushConverter}">
                                                    <Binding Path="Tables" />
                                                    <Binding Path="LeftColumn" />
                                                    <Binding Path="LeftTable" />
                                                </MultiBinding>
                                            </DataTrigger.Binding>
                                            <DataTrigger.Setters>
                                                <Setter Property="Foreground" Value="{DynamicResource {dxdat:LWKey ConditionControl.ErrorColor}}" />
                                            </DataTrigger.Setters>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding LeftColumn}" Value="{x:Null}">
                                            <Setter Property="Opacity" Value="0.62" />
                                        </DataTrigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="TextDecorations" Value="Underline" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                            <dxb:BarManager.DXContextMenu>
                                <dxb:PopupMenu MinWidth="100" ItemLinksSource="{Binding LeftColumnMenuItems}" ItemStyle="{StaticResource ContextMenuItemStyle}" />
                            </dxb:BarManager.DXContextMenu>
                        </TextBlock>
                        <dx:DXImage
                            Width="16"
                            Margin="5,0"
                            dxb:BarManager.DXContextMenu="{Binding AllowChangeOperatorType, Converter={dxmvvm:BooleanToObjectConverter TrueValue={StaticResource OperatorTypeMenu}, FalseValue={x:Null}}}"
                            dxb:BarManager.MenuShowMouseButton="LeftButton"
                            Source="{Binding OperatorType, Converter={dxdai:ImageNameToSourceConverter Folder=JoinEditor}}" />
                        <TextBlock dxb:BarManager.MenuShowMouseButton="LeftRightButton" Text="{Binding RightTable.ItemDisplayName, StringFormat='[{0}]', TargetNullValue={dxdal:DataAccessUIStringId StringId=JoinEditorEmptyTableText}, FallbackValue={dxdal:DataAccessUIStringId StringId=JoinEditorEmptyTableText}}">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Opacity" Value="1" />
                                    <Setter Property="TextDecorations" Value="None" />
                                    <Style.Triggers>
                                        <DataTrigger Value="False">
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{dxdai:TableBrushConverter}">
                                                    <Binding Path="Tables" />
                                                    <Binding Path="RightTable" />
                                                </MultiBinding>
                                            </DataTrigger.Binding>
                                            <DataTrigger.Setters>
                                                <Setter Property="Foreground" Value="{DynamicResource {dxdat:LWKey ConditionControl.ErrorColor}}" />
                                            </DataTrigger.Setters>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RightTable}" Value="{x:Null}">
                                            <Setter Property="Opacity" Value="0.62" />
                                        </DataTrigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="TextDecorations" Value="Underline" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                            <dxb:BarManager.DXContextMenu>
                                <dxb:PopupMenu MinWidth="100" ItemLinksSource="{Binding RightTableMenuItems}" ItemStyle="{StaticResource ContextMenuItemStyle}" />
                            </dxb:BarManager.DXContextMenu>
                        </TextBlock>
                        <TextBlock Margin="5,0" Text="." Visibility="{Binding RightTable, Converter={StaticResource StringValueToVisibilityConverter}}" />
                        <TextBlock dxb:BarManager.MenuShowMouseButton="LeftRightButton" Text="{Binding RightColumn.ItemDisplayName, StringFormat='[{0}]', TargetNullValue={dxdal:DataAccessUIStringId StringId=JoinEditorEmptyColumnText}, FallbackValue={dxdal:DataAccessUIStringId StringId=JoinEditorEmptyColumnText}}" Visibility="{Binding RightTable, Converter={StaticResource StringValueToVisibilityConverter}}">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Opacity" Value="1" />
                                    <Setter Property="TextDecorations" Value="None" />
                                    <Style.Triggers>
                                        <DataTrigger Value="False">
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{dxdai:ColumnBrushConverter}">
                                                    <Binding Path="Tables" />
                                                    <Binding Path="RightColumn" />
                                                    <Binding Path="RightTable" />
                                                </MultiBinding>
                                            </DataTrigger.Binding>
                                            <DataTrigger.Setters>
                                                <Setter Property="Foreground" Value="{DynamicResource {dxdat:LWKey ConditionControl.ErrorColor}}" />
                                            </DataTrigger.Setters>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RightColumn}" Value="{x:Null}">
                                            <Setter Property="Opacity" Value="0.62" />
                                        </DataTrigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="TextDecorations" Value="Underline" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                            <dxb:BarManager.DXContextMenu>
                                <dxb:PopupMenu MinWidth="100" ItemLinksSource="{Binding RightColumnMenuItems}" ItemStyle="{StaticResource ContextMenuItemStyle}" />
                            </dxb:BarManager.DXContextMenu>
                        </TextBlock>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ConditionEditorControl.DefaultStyleBase" TargetType="{x:Type dxdaie:ConditionEditorControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdaie:ConditionEditorControl}">
                    <dx:ThemedBorder BorderThickness="1">
                        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                            <ItemsControl ItemsSource="{TemplateBinding ItemsSource}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <StackPanel.Resources>
                                                <Style x:Key="ImageOpacityTrigger" TargetType="{x:Type Image}">
                                                    <Setter Property="Image.Opacity" Value="0.5" />
                                                    <Style.Triggers>
                                                        <Trigger Property="Image.IsMouseOver" Value="True">
                                                            <Setter Property="Image.Opacity" Value="1.0" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </StackPanel.Resources>
                                            <StackPanel Visibility="{Binding AllowAddItems, RelativeSource={RelativeSource AncestorType={x:Type dxdaie:ConditionEditorControl}}, Converter={dxmvvm:BooleanToVisibilityConverter}}">
                                                <dx:DXImage
                                                    Width="16"
                                                    Margin="2"
                                                    Source="{dxdai:DataAccessSvgImage Uri=Images/JoinEditor/Add.svg}"
                                                    Style="{StaticResource ImageOpacityTrigger}"
                                                    Visibility="{Binding IsDeletable, Converter={dxmvvm:BooleanToVisibilityConverter}}">
                                                    <dxmvvm:Interaction.Behaviors>
                                                        <dxmvvm:EventToCommand Command="{Binding AddCommand, RelativeSource={RelativeSource AncestorType={x:Type dxdaie:ConditionEditorControl}}}" CommandParameter="{Binding}" EventName="MouseLeftButtonDown" />
                                                    </dxmvvm:Interaction.Behaviors>
                                                </dx:DXImage>
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal" Visibility="{Binding IsDeletable, Converter={dxmvvm:BooleanToVisibilityConverter Inverse=True}}">
                                                <dx:DXImage
                                                    Width="16"
                                                    Margin="2"
                                                    Source="{dxdai:DataAccessSvgImage Uri=Images/JoinEditor/Remove.svg}"
                                                    Style="{StaticResource ImageOpacityTrigger}"
                                                    Visibility="{Binding AllowRemoveItems, RelativeSource={RelativeSource AncestorType={x:Type dxdaie:ConditionEditorControl}}, Converter={dxmvvm:BooleanToVisibilityConverter}}">
                                                    <dxmvvm:Interaction.Behaviors>
                                                        <dxmvvm:EventToCommand Command="{Binding RemoveCommand, RelativeSource={RelativeSource AncestorType={x:Type dxdaie:ConditionEditorControl}}}" CommandParameter="{Binding}" EventName="MouseLeftButtonDown" />
                                                    </dxmvvm:Interaction.Behaviors>
                                                </dx:DXImage>
                                                <dxdaie:ConditionControl
                                                    AllowChangeMasterTable="{Binding AllowChangeMasterTable, RelativeSource={RelativeSource AncestorType={x:Type dxdaie:ConditionEditorControl}}}"
                                                    AllowChangeOperatorType="{Binding AllowChangeOperatorType, RelativeSource={RelativeSource AncestorType={x:Type dxdaie:ConditionEditorControl}}}"
                                                    LeftColumn="{Binding LeftColumn}"
                                                    LeftTable="{Binding LeftTable}"
                                                    OperatorType="{Binding OperatorType}"
                                                    RightColumn="{Binding RightColumn}"
                                                    RightTable="{Binding RightTable}"
                                                    Tables="{Binding Tables}" />
                                            </StackPanel>
                                        </StackPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </ScrollViewer>
                    </dx:ThemedBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DataPreviewControl.DefaultStyleBase" TargetType="{x:Type dxdaie:DataPreviewControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdaie:DataPreviewControl}">
                    <dxlc:LayoutControl>
                        <dxg:GridControl ColumnsSource="{Binding Columns, RelativeSource={RelativeSource TemplatedParent}}" ItemsSource="{TemplateBinding Data}">
                            <dxg:GridControl.View>
                                <dxg:TableView
                                    AllowBestFit="True"
                                    AllowColumnFiltering="False"
                                    AllowEditing="False"
                                    AllowFilterEditor="False"
                                    AutoWidth="False"
                                    BestFitMaxRowCount="1000"
                                    IsColumnMenuEnabled="False"
                                    ShowFilterPanelMode="Never"
                                    ShowGroupPanel="False"
                                    ShowIndicator="False">
                                    <dxg:TableView.RowStyle>
                                        <Style TargetType="{x:Type dxg:RowControl}">
                                            <Setter Property="Height" Value="20" />
                                        </Style>
                                    </dxg:TableView.RowStyle>
                                </dxg:TableView>
                            </dxg:GridControl.View>
                        </dxg:GridControl>
                    </dxlc:LayoutControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DataSourceWizardExpressionUITypeEditor.DefaultStyleBase" TargetType="{x:Type dxdaie:DataSourceWizardExpressionUITypeEditor}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdaie:DataSourceWizardExpressionUITypeEditor}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <dxdaie:ExpressionEditor x:Name="expressionEditor" EditValue="{Binding EditValue, RelativeSource={RelativeSource TemplatedParent}}" EditorLogicFunc="{TemplateBinding EditorLogicFunc}" />
                        <dx:ThemedWindowDialogButtonsControl Grid.Row="1">
                            <dx:ThemedWindowDialogButton Command="{Binding SaveCommand, ElementName=expressionEditor}" DialogResult="OK" />
                            <dx:ThemedWindowDialogButton DialogResult="Cancel" />
                        </dx:ThemedWindowDialogButtonsControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FilterControlEditorEx.DefaultStyleBase" TargetType="{x:Type dxdaie:FilterControlEditorEx}">
        <Setter Property="ParametersColumnTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl
                        x:Name="PART_Parameters"
                        Margin="0,2,3,2"
                        VerticalAlignment="Center"
                        dxb:BarManager.MenuShowMouseButton="LeftButton"
                        Content="{Binding Path=Operator, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxdaie:FilterControlEditorEx}}, Converter={dxdaie:OperandParameterToParameterNameConverter}}"
                        Cursor="Hand"
                        Foreground="Blue"
                        Visibility="{Binding Path=OperandTypeButtonState, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxdaie:FilterControlEditorEx}}, Converter={dxdaie:NullableBoolToVisibilityConverter VisibleState=True}, UpdateSourceTrigger=PropertyChanged}">
                        <dxb:BarManager.DXContextMenu>
                            <dxb:PopupMenu ItemLinksSource="{Binding ParametersColumn, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxdaie:FilterControlEditorEx}}}">
                                <dxb:PopupMenu.ItemTemplate>
                                    <DataTemplate>
                                        <ContentControl>
                                            <dxb:BarButtonItem Command="{Binding FilterColumnCommand}" CommandParameter="{Binding Parameter}" Content="{Binding FilterColumn.ColumnCaption}" />
                                        </ContentControl>
                                    </DataTemplate>
                                </dxb:PopupMenu.ItemTemplate>
                            </dxb:PopupMenu>
                        </dxb:BarManager.DXContextMenu>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdaie:FilterControlEditorEx}">
                    <StackPanel Orientation="Horizontal">
                        <dxe:FieldInOperationButtonControl
                            x:Name="PART_Column"
                            Margin="1,1,0,1"
                            Node="{TemplateBinding Node}"
                            OperatorPropertyName="{Binding Path=Operator, RelativeSource={RelativeSource TemplatedParent}, Converter={dxdaie:OperatorPropertyNameConverter}}"
                            Template="{DynamicResource {dxt:LWKey FilterControl.FieldInOperationButtonTemplate}}"
                            Visibility="{Binding Path=OperandTypeButtonState, RelativeSource={RelativeSource TemplatedParent}, Converter={dxdaie:NullableBoolToVisibilityConverter VisibleState=False}, UpdateSourceTrigger=PropertyChanged}" />

                        <ContentControl Content="{x:Null}" ContentTemplate="{TemplateBinding ParametersColumnTemplate}" />

                        <dx:DXBorder
                            Name="PART_Stroke_Border"
                            Margin="0,0,3,0"
                            Padding="1"
                            CornerRadius="2"
                            Visibility="{Binding Path=OperandTypeButtonState, Converter={dxdaie:NullableBoolToVisibilityConverter VisibleState={x:Null}}, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}">
                            <dx:DXBorder.Background>
                                <SolidColorBrush x:Name="stroke_border_brush" />
                            </dx:DXBorder.Background>
                            <dx:DXBorder Name="border" CornerRadius="1">
                                <dx:DXBorder.Background>
                                    <SolidColorBrush x:Name="border_brush" />
                                </dx:DXBorder.Background>
                                <ContentPresenter Name="PART_EditorPresenter" />
                            </dx:DXBorder>
                        </dx:DXBorder>

                        <dxe:CheckEdit
                            x:Name="PART_ChangeOperandTypeButton"
                            Margin="0,0,3,0"
                            VerticalAlignment="Center"
                            Cursor="Hand"
                            EditValue="{Binding OperandTypeButtonState, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            IsThreeState="True"
                            Visibility="{Binding Path=Node.Owner.ShowOperandTypeIcon, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanToVisibilityConverter}}">
                            <ToolTipService.ToolTip>
                                <ToolTip Visibility="{Binding Node.Owner.ShowToolTips, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanToVisibilityConverter}}">
                                    <TextBlock Text="Switch operand between raw values, columns and parameters" />
                                </ToolTip>
                            </ToolTipService.ToolTip>

                            <dxe:CheckEdit.Template>
                                <ControlTemplate>
                                    <Grid
                                        Width="11"
                                        Height="11"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Background="Transparent">
                                        <Grid Visibility="{Binding EditValue, RelativeSource={RelativeSource TemplatedParent}, Converter={dxdaie:NullableBoolToVisibilityConverter VisibleState={x:Null}}, UpdateSourceTrigger=PropertyChanged}">
                                            <dx:DXImage Source="pack://application:,,,/DevExpress.Xpf.DataAccess.v24.1;component/Images/FilterControlNodes/edit-normal.png" />
                                            <dx:DXImage Source="pack://application:,,,/DevExpress.Xpf.DataAccess.v24.1;component/Images/FilterControlNodes/edit.png" Visibility="{Binding IsMouseOver, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
                                        </Grid>
                                        <Grid Visibility="{Binding EditValue, RelativeSource={RelativeSource TemplatedParent}, Converter={dxdaie:NullableBoolToVisibilityConverter VisibleState=False}, UpdateSourceTrigger=PropertyChanged}">
                                            <dx:DXImage Source="pack://application:,,,/DevExpress.Xpf.DataAccess.v24.1;component/Images/FilterControlNodes/list-normal.png" />
                                            <dx:DXImage Source="pack://application:,,,/DevExpress.Xpf.DataAccess.v24.1;component/Images/FilterControlNodes/list.png" Visibility="{Binding IsMouseOver, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
                                        </Grid>
                                        <Grid Visibility="{Binding EditValue, RelativeSource={RelativeSource TemplatedParent}, Converter={dxdaie:NullableBoolToVisibilityConverter VisibleState=True}, UpdateSourceTrigger=PropertyChanged}">
                                            <dx:DXImage Source="pack://application:,,,/DevExpress.Xpf.DataAccess.v24.1;component/Images/FilterControlNodes/parameter-normal.png" />
                                            <dx:DXImage Source="pack://application:,,,/DevExpress.Xpf.DataAccess.v24.1;component/Images/FilterControlNodes/parameter.png" Visibility="{Binding IsMouseOver, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </dxe:CheckEdit.Template>
                        </dxe:CheckEdit>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="EditModeStates">
                                <VisualState x:Name="InplaceActive">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border_brush" Storyboard.TargetProperty="Color" Duration="0">
                                            <DiscreteColorKeyFrame KeyTime="0:0:0" Value="#FFF2F2F2" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="stroke_border_brush" Storyboard.TargetProperty="Color" Duration="0">
                                            <DiscreteColorKeyFrame KeyTime="0:0:0" Value="#FFDFDFDF" />
                                        </ColorAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_EditorPresenter" Storyboard.TargetProperty="MinWidth" Duration="0">
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="50" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InplaceInactive">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border_brush" Storyboard.TargetProperty="Color" Duration="0">
                                            <DiscreteColorKeyFrame KeyTime="0:0:0" Value="Transparent" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="stroke_border_brush" Storyboard.TargetProperty="Color" Duration="0">
                                            <DiscreteColorKeyFrame KeyTime="0:0:0" Value="Transparent" />
                                        </ColorAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_EditorPresenter" Storyboard.TargetProperty="MinWidth" Duration="0">
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FilterControlEditor.DefaultStyleBase" BasedOn="{StaticResource FilterControlEditorEx.DefaultStyleBase}" TargetType="{x:Type dxdaie:FilterControlEditor}">
        <Setter Property="ParametersColumnTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl
                        x:Name="PART_Parameters"
                        Margin="0,2,3,2"
                        VerticalAlignment="Center"
                        dxb:BarManager.MenuShowMouseButton="LeftButton"
                        Content="{Binding Path=Operator, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxdaie:FilterControlEditor}}, Converter={dxdaie:OperandParameterToParameterNameConverter}}"
                        Cursor="Hand"
                        Foreground="Blue"
                        Visibility="{Binding Path=OperandTypeButtonState, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxdaie:FilterControlEditor}}, Converter={dxdaie:NullableBoolToVisibilityConverter VisibleState=True}, UpdateSourceTrigger=PropertyChanged}">
                        <ContentControl.Template>
                            <ControlTemplate>
                                <TextBlock Text="{Binding Content, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={dxdal:DataAccessUIStringId StringId=QueryFilter_SelectParameter}}">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <Trigger Property="Text" Value="{dxdal:DataAccessUIStringId StringId=QueryFilter_SelectParameter}">
                                                    <Setter Property="Foreground" Value="Gray" />
                                                    <Setter Property="TextDecorations" Value="Underline" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </ControlTemplate>
                        </ContentControl.Template>
                        <dxb:BarManager.DXContextMenu>
                            <dxb:PopupMenu ItemLinksSource="{Binding QueryParametersColumn, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxdaie:FilterControlEditor}}}">
                                <dxb:PopupMenu.ItemTemplateSelector>
                                    <dxdaie:PopUpMenuItemTemplateSelector>
                                        <dxdaie:PopUpMenuItemTemplateSelector.ItemTemplate>
                                            <DataTemplate>
                                                <ContentControl>
                                                    <dxb:BarButtonItem Command="{Binding FilterColumnCommand}" CommandParameter="{Binding Parameter}" Content="{Binding FilterColumn.ColumnCaption}" />
                                                </ContentControl>
                                            </DataTemplate>
                                        </dxdaie:PopUpMenuItemTemplateSelector.ItemTemplate>

                                        <dxdaie:PopUpMenuItemTemplateSelector.SubItemTemplate>
                                            <DataTemplate>
                                                <ContentControl>
                                                    <dxb:BarSubItem Content="{dxdal:DataAccessUIStringId StringId=QueryFilter_BindTo}" ItemLinksSource="{Binding ParametersColumn, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxdaie:FilterControlEditor}}}">
                                                        <dxb:BarSubItem.ItemTemplate>
                                                            <DataTemplate>
                                                                <ContentControl>
                                                                    <dxb:BarButtonItem Command="{Binding FilterColumnCommand}" CommandParameter="{Binding Parameter}" Content="{Binding FilterColumn.ColumnCaption}" />
                                                                </ContentControl>
                                                            </DataTemplate>
                                                        </dxb:BarSubItem.ItemTemplate>
                                                    </dxb:BarSubItem>
                                                </ContentControl>
                                            </DataTemplate>
                                        </dxdaie:PopUpMenuItemTemplateSelector.SubItemTemplate>
                                    </dxdaie:PopUpMenuItemTemplateSelector>
                                </dxb:PopupMenu.ItemTemplateSelector>
                            </dxb:PopupMenu>
                        </dxb:BarManager.DXContextMenu>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ReportParameterEditorTemplate" Value="{StaticResource newExternalParameterEditorDialogServiceTemplate}" />
        <Setter Property="QueryParameterEditorTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dx:DialogService DialogStyle="{StaticResource newParameterEditorWindowStyle}" DialogWindowStartupLocation="CenterOwner">
                            <dx:DialogService.ViewTemplate>
                                <DataTemplate>
                                    <dxdaie:QueryParameterEditor EditValue="{Binding QueryParameter}" />
                                </DataTemplate>
                            </dx:DialogService.ViewTemplate>
                        </dx:DialogService>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FilterStringEditor.DefaultStyleBase" TargetType="{x:Type dxdaie:FilterStringEditor}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdaie:FilterStringEditor}">
                    <dxe:FilterControl
                        x:Name="PART_FilterControl"
                        FilterCriteria="{Binding FilterCriteria, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        ShowGroupCommandsIcon="{TemplateBinding ShowGroupCommandsIcon}"
                        ShowOperandTypeIcon="{TemplateBinding ShowOperandTypeIcon}">
                        <dxe:FilterControl.Resources>
                            <Style TargetType="{x:Type dxe1:FilterControlClauseNode}">
                                <Setter Property="SecondOperandsOneTemplate" Value="{DynamicResource {dxdat:LWKey FilterStringEditor.FilterStringOneElementsInSecondOperandTemplate}}" />
                                <Setter Property="SecondOperandsTwoTemplate" Value="{DynamicResource {dxdat:LWKey FilterStringEditor.FilterStringTwoElementsInSecondOperandTemplate}}" />
                                <Setter Property="SecondOperandsSeveralTemplate" Value="{DynamicResource {dxdat:LWKey FilterStringEditor.FilterStringSeveralElementsInSecondOperandTemplate}}" />
                            </Style>
                        </dxe:FilterControl.Resources>
                        <dxmvvm:Interaction.Behaviors>
                            <dxe:FilterControlColumnsBehavior AdditionalProperties="{Binding Properties, RelativeSource={RelativeSource TemplatedParent}}" HiddenProperties="{Binding HiddenProperties, RelativeSource={RelativeSource TemplatedParent}}" ObjectType="{x:Type sys:Object}" />
                        </dxmvvm:Interaction.Behaviors>
                    </dxe:FilterControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="JoinEditorControl.DefaultStyleBase" TargetType="{x:Type dxdaie:JoinEditorControl}">
        <Setter Property="MessageBoxServiceTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dx:DXMessageBoxService />
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdaie:JoinEditorControl}">
                    <dxlc:LayoutControl Padding="12,12,12,0" Orientation="Vertical">
                        <dxlc:LayoutItem Label="{dxdal:DataAccessUIStringId StringId=JoinEditor_JoinType}">
                            <dxe:ComboBoxEdit
                                DisplayMember="Value"
                                EditValue="{Binding JoinType, RelativeSource={RelativeSource TemplatedParent}}"
                                IsTextEditable="False"
                                ItemsSource="{x:Static dxdai:ListsWithNamesValues.JoinTypes}"
                                ValueMember="Key" />
                        </dxlc:LayoutItem>
                        <dxlc:LayoutItem VerticalAlignment="Stretch">
                            <dxdaie:ConditionEditorControl AllowAddItems="{TemplateBinding AllowAddItems}" AllowRemoveItems="{TemplateBinding AllowRemoveItems}" ItemsSource="{TemplateBinding ItemsSource}" />
                        </dxlc:LayoutItem>
                    </dxlc:LayoutControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DiagramMasterDetailEditorView.DefaultStyleBase" TargetType="{x:Type dxdaie:DiagramMasterDetailEditorView}">
        <Style.Resources>
            <Style TargetType="{x:Type dxdiag:PageBackgroundControl}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <dx:BackgroundPanel />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdaie:DiagramMasterDetailEditorView}">
                    <dxdaie:MasterDetailEditorDiagramControl
                        CanvasSizeMode="Fill"
                        PageSize="320,240"
                        ScrollMode="Content"
                        ShowGrid="False"
                        ShowPageBreaks="False"
                        ShowRulers="False"
                        SnapToGrid="False"
                        SnapToItems="False"
                        Theme="{x:Null}">
                        <dxmvvm:Interaction.Behaviors>
                            <dxdaie:MasterDetailEditorDiagramDataBindingBehavior
                                ConnectorFromMember="MasterName"
                                ConnectorToMember="DetailName"
                                ConnectorsSource="{Binding Connectors, RelativeSource={RelativeSource TemplatedParent}}"
                                ConnectorsZOrder="InFrontOfItems"
                                EnableNotificationToSource="False"
                                ItemsPath="Columns"
                                ItemsSource="{Binding Queries, RelativeSource={RelativeSource TemplatedParent}}"
                                KeySelector="{dxdaie:MasterDetailKeySelector}">
                                <dxdaie:MasterDetailEditorDiagramDataBindingBehavior.ConnectorTemplate>
                                    <DataTemplate>
                                        <dxdaie:MasterDetailDiagramConnector Stroke="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}" StrokeThickness="1" />
                                    </DataTemplate>
                                </dxdaie:MasterDetailEditorDiagramDataBindingBehavior.ConnectorTemplate>
                                <dxdaie:MasterDetailEditorDiagramDataBindingBehavior.ItemTemplateSelector>
                                    <dxdaie:MasterDetailEditorDiagramViewDataTemplateSelector>
                                        <dxdaie:MasterDetailEditorDiagramViewDataTemplateSelector.TableTemplate>
                                            <DataTemplate>
                                                <dxdaie:MasterDetailQueryDiagramContainer
                                                    Width="250"
                                                    MinWidth="50"
                                                    Stroke="Black"
                                                    StrokeThickness="1">
                                                    <dxdaie:MasterDetailQueryDiagramContainer.Template>
                                                        <ControlTemplate TargetType="{x:Type dxdaie:MasterDetailQueryDiagramContainer}">
                                                            <Grid>
                                                                <dxe:ListBoxEdit />
                                                                <dxdiag:ShapePresenter
                                                                    x:Name="ShapePresenter"
                                                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                    Background="{TemplateBinding Background}"
                                                                    Content="{TemplateBinding Header}"
                                                                    ContentBackground="{TemplateBinding ContentBackground}"
                                                                    ContentPadding="{TemplateBinding HeaderPadding}"
                                                                    EditorBounds="{TemplateBinding EditorBounds}"
                                                                    Shape="{TemplateBinding ShapeGeometry}"
                                                                    ShowContent="True">
                                                                    <dxdiag:ShapePresenter.Template>
                                                                        <ControlTemplate TargetType="{x:Type dxdiag:ShapePresenter}">
                                                                            <TextBlock
                                                                                x:Name="name"
                                                                                Margin="10,5"
                                                                                FontWeight="Bold"
                                                                                Text="{Binding Name}"
                                                                                TextAlignment="Left"
                                                                                TextTrimming="CharacterEllipsis">
                                                                                <dxmvvm:Interaction.Behaviors>
                                                                                    <dxdaie:ContainerHeaderBehavior Padding="0,12,0,5" AllowAutoMinWidth="False" Container="{Binding TemplatedParent, RelativeSource={RelativeSource TemplatedParent}, Converter={dxdai:DependencyObjectToDiagramContainerConverter}}" />
                                                                                </dxmvvm:Interaction.Behaviors>
                                                                            </TextBlock>
                                                                            <ControlTemplate.Triggers>
                                                                                <DataTrigger Binding="{Binding Path=(dx:ThemeManager.TreeWalker).ThemeName, RelativeSource={RelativeSource TemplatedParent}}" Value="Office2010Black">
                                                                                    <Setter TargetName="name" Property="Foreground" Value="Black" />
                                                                                </DataTrigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>
                                                                    </dxdiag:ShapePresenter.Template>
                                                                </dxdiag:ShapePresenter>
                                                                <Canvas x:Name="ItemsPanel" Margin="{TemplateBinding ActualPadding}" ClipToBounds="True" />
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsTextEditMode" Value="True">
                                                                    <Trigger.Setters>
                                                                        <Setter TargetName="ShapePresenter" Property="ShowContent" Value="False" />
                                                                    </Trigger.Setters>
                                                                </Trigger>
                                                                <Trigger Property="ShowHeader" Value="False">
                                                                    <Trigger.Setters>
                                                                        <Setter TargetName="ShapePresenter" Property="ShowContent" Value="False" />
                                                                    </Trigger.Setters>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </dxdaie:MasterDetailQueryDiagramContainer.Template>
                                                    <dxmvvm:Interaction.Behaviors>
                                                        <dxdau:StackContainerBehavior />
                                                    </dxmvvm:Interaction.Behaviors>
                                                    <dxdiag:DiagramContainer.Bindings>
                                                        <dxdiag:DiagramBinding Expression="Name" PropertyName="Header" />
                                                    </dxdiag:DiagramContainer.Bindings>
                                                </dxdaie:MasterDetailQueryDiagramContainer>
                                            </DataTemplate>
                                        </dxdaie:MasterDetailEditorDiagramViewDataTemplateSelector.TableTemplate>
                                        <dxdaie:MasterDetailEditorDiagramViewDataTemplateSelector.ColumnTemplate>
                                            <DataTemplate>
                                                <dxdaie:MasterDetailColumnDiagramItem>
                                                    <TextBlock
                                                        Name="columnName"
                                                        Margin="10,2"
                                                        HorizontalAlignment="Left"
                                                        Opacity="{Binding Shadowed, Converter={dxmvvm:BooleanToObjectConverter TrueValue=0.5, FalseValue=1.0}}"
                                                        Text="{Binding Name}"
                                                        TextTrimming="CharacterEllipsis">
                                                        <TextBlock.Style>
                                                            <Style TargetType="TextBlock">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Path=(dx:ThemeManager.ThemeName), RelativeSource={RelativeSource AncestorType=Window}}" Value="Office2010Black">
                                                                        <Setter Property="Foreground" Value="Black" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>
                                                    <dxmvvm:Interaction.Behaviors>
                                                        <dxdaie:IncomingConnectorsRouteUpdater />
                                                    </dxmvvm:Interaction.Behaviors>
                                                </dxdaie:MasterDetailColumnDiagramItem>
                                            </DataTemplate>
                                        </dxdaie:MasterDetailEditorDiagramViewDataTemplateSelector.ColumnTemplate>
                                    </dxdaie:MasterDetailEditorDiagramViewDataTemplateSelector>
                                </dxdaie:MasterDetailEditorDiagramDataBindingBehavior.ItemTemplateSelector>
                            </dxdaie:MasterDetailEditorDiagramDataBindingBehavior>
                        </dxmvvm:Interaction.Behaviors>
                    </dxdaie:MasterDetailEditorDiagramControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LegacyMasterDetailEditorView.DefaultStyleBase" TargetType="{x:Type dxdaie:LegacyMasterDetailEditorView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdaie:LegacyMasterDetailEditorView}">
                    <Grid>
                        <dxe:ListBoxEdit Margin="-1" IsReadOnly="True" />
                        <ScrollViewer>
                            <ItemsControl Margin="2" ItemsSource="{Binding ViewModel.RelationGroups, RelativeSource={RelativeSource TemplatedParent}}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <dxdaie:RelationGroupEditor RelationGroup="{Binding}" />
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </ScrollViewer>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="EFParametersEditor.DefaultStyleBase" TargetType="{x:Type dxdaie:EFParametersEditor}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdaie:EFParametersEditor}">
                    <dxg:GridControl x:Name="PART_GridControl" ItemsSource="{Binding ViewModel.Records, RelativeSource={RelativeSource TemplatedParent}}">
                        <dxg:GridControl.Columns>
                            <dxg:GridColumn FieldName="Name" Header="{dxdal:DataAccessUIStringId StringId=ParametersColumn_Name}" />
                            <dxg:GridColumn FieldName="Type" Header="{dxdal:DataAccessUIStringId StringId=ParametersColumn_Type}">
                                <dxg:GridColumn.CellTemplate>
                                    <DataTemplate>
                                        <dxe:ComboBoxEdit x:Name="PART_Editor" IsTextEditable="False" ItemsSource="{Binding Path=(dxdaie:EFParametersEditor.Editor).ViewModel.Types, RelativeSource={RelativeSource Self}}">
                                            <dxe:ComboBoxEdit.DisplayTextConverter>
                                                <MultiBinding Converter="{dxdaie:TypeDisplayNameConverter}">
                                                    <Binding Path="(dxdaie:EFParametersEditor.Editor).ViewModel" RelativeSource="{RelativeSource Self}" />
                                                    <Binding Path="RowData.Row" />
                                                </MultiBinding>
                                            </dxe:ComboBoxEdit.DisplayTextConverter>
                                        </dxe:ComboBoxEdit>
                                    </DataTemplate>
                                </dxg:GridColumn.CellTemplate>
                            </dxg:GridColumn>
                            <dxg:GridColumn FieldName="IsExpression" Header="{dxdal:DataAccessUIStringId StringId=ParametersColumn_Expression}">
                                <dxg:GridColumn.EditSettings>
                                    <dxe:CheckEditSettings />
                                </dxg:GridColumn.EditSettings>
                            </dxg:GridColumn>
                            <dxg:GridColumn FieldName="Value" Header="{dxdal:DataAccessUIStringId StringId=ParametersColumn_Value}">
                                <dxg:GridColumn.CellTemplateSelector>
                                    <dxdaie:ParameterGridTemplateSelector2>
                                        <dxdaie:ParameterGridTemplateSelector2.ListBoxTemplate>
                                            <DataTemplate>
                                                <dxe:ComboBoxEdit x:Name="PART_Editor" IsTextEditable="False" ItemsSource="{Binding Path=RowData.Row.Value, Converter={dxdai:EnumToItemsSourceConverter}}" />
                                            </DataTemplate>
                                        </dxdaie:ParameterGridTemplateSelector2.ListBoxTemplate>
                                        <dxdaie:ParameterGridTemplateSelector2.DateTimeTemplate>
                                            <DataTemplate>
                                                <dxe:DateEdit x:Name="PART_Editor" IsTextEditable="False" />
                                            </DataTemplate>
                                        </dxdaie:ParameterGridTemplateSelector2.DateTimeTemplate>
                                        <dxdaie:ParameterGridTemplateSelector2.CheckBoxTemplate>
                                            <DataTemplate>
                                                <dxe:CheckEdit x:Name="PART_Editor" />
                                            </DataTemplate>
                                        </dxdaie:ParameterGridTemplateSelector2.CheckBoxTemplate>
                                        <dxdaie:ParameterGridTemplateSelector2.TextEditTemplate>
                                            <DataTemplate>
                                                <dxe:TextEdit x:Name="PART_Editor" />
                                            </DataTemplate>
                                        </dxdaie:ParameterGridTemplateSelector2.TextEditTemplate>
                                        <dxdaie:ParameterGridTemplateSelector2.ButtonEditTemplate>
                                            <DataTemplate>
                                                <dxe:ComboBoxEdit
                                                    x:Name="PART_Editor"
                                                    AllowDefaultButton="True"
                                                    IsTextEditable="True"
                                                    ItemsSource="{Binding Path=(dxdaie:EFParametersEditor.Editor).ViewModel.ExternalParameterExpressions, RelativeSource={RelativeSource Self}}"
                                                    ValidateOnTextInput="False">
                                                    <dxe:ComboBoxEdit.Buttons>
                                                        <dxe:ButtonInfo
                                                            Command="{Binding Path=(dxdaie:EFParametersEditor.Editor).RunExpressionEditorCommand, RelativeSource={RelativeSource Self}}"
                                                            CommandParameter="{Binding RowData.Row}"
                                                            GlyphKind="Regular"
                                                            ToolTip="Expression Editor..." />
                                                        <dxe:ButtonInfo
                                                            Command="{Binding Path=(dxdaie:EFParametersEditor.Editor).CreateExternalParameterCommand, RelativeSource={RelativeSource Self}}"
                                                            CommandParameter="{Binding RowData.Row}"
                                                            GlyphKind="Plus"
                                                            ToolTip="New Report Parameter..."
                                                            Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Self}, Converter={dx:BooleanToVisibilityConverter}}" />
                                                    </dxe:ComboBoxEdit.Buttons>
                                                </dxe:ComboBoxEdit>
                                            </DataTemplate>
                                        </dxdaie:ParameterGridTemplateSelector2.ButtonEditTemplate>
                                    </dxdaie:ParameterGridTemplateSelector2>
                                </dxg:GridColumn.CellTemplateSelector>
                            </dxg:GridColumn>
                        </dxg:GridControl.Columns>
                        <dxg:GridControl.View>
                            <dxg:TableView
                                AllowColumnFiltering="False"
                                AllowColumnMoving="False"
                                AutoWidth="True"
                                IsColumnMenuEnabled="False"
                                ShowGroupPanel="False"
                                ShowIndicator="False"
                                VerticalScrollbarVisibility="Auto">
                                <dxmvvm:Interaction.Behaviors>
                                    <dxdaie:ParameterGridBehavior2 />
                                </dxmvvm:Interaction.Behaviors>
                            </dxg:TableView>
                        </dxg:GridControl.View>
                        <dxmvvm:Interaction.Behaviors>
                            <dxdaie:ParameterEditorGridControlBehavior2 ViewModel="{Binding ViewModel, RelativeSource={RelativeSource TemplatedParent}}" />
                        </dxmvvm:Interaction.Behaviors>
                    </dxg:GridControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ExternalParameterEditorDialogServiceTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dx:DialogService DialogStyle="{StaticResource newParameterEditorWindowStyle}" DialogWindowStartupLocation="CenterOwner">
                            <dx:DialogService.ViewTemplate>
                                <DataTemplate>
                                    <dxdaie:ReportParameterEditor2 Parameter="{Binding Parameter}" />
                                </DataTemplate>
                            </dx:DialogService.ViewTemplate>
                        </dx:DialogService>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ExpressionEditorDialogServiceTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dx:DialogService DialogStyle="{StaticResource {dxdat:LWKey ExpressionEditorWindowTemplate.ExpressionEditorControlWindowStyle}}">
                            <dx:DialogService.ViewTemplateSelector>
                                <dxdaie:ParameterExpressionEditorViewTemplateSelector2>
                                    <dxdaie:ParameterExpressionEditorViewTemplateSelector2.ExpressionEditorTemplate>
                                        <DataTemplate>
                                            <dxdaie:DataSourceWizardExpressionUITypeEditor EditValue="{Binding ExpressionString}" ParameterService="{Binding ParameterService}" />
                                        </DataTemplate>
                                    </dxdaie:ParameterExpressionEditorViewTemplateSelector2.ExpressionEditorTemplate>
                                    <dxdaie:ParameterExpressionEditorViewTemplateSelector2.ExpressionEditorControlTemplate>
                                        <DataTemplate>
                                            <dxee:ExpressionEditorControl Context="{Binding ExpressionEditorContext}" EditValue="{Binding ExpressionString}">
                                                <dxmvvm:Interaction.Behaviors>
                                                    <dxdaie:ExpressionStringApplier Applier="{Binding ExpressionEditorApplier}" />
                                                </dxmvvm:Interaction.Behaviors>
                                            </dxee:ExpressionEditorControl>
                                        </DataTemplate>
                                    </dxdaie:ParameterExpressionEditorViewTemplateSelector2.ExpressionEditorControlTemplate>
                                </dxdaie:ParameterExpressionEditorViewTemplateSelector2>
                            </dx:DialogService.ViewTemplateSelector>
                        </dx:DialogService>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PasswordRequestDialog.DefaultStyleBase" TargetType="{x:Type dxdadwn:PasswordRequestDialog}">
        <Setter Property="OpenFileDialogServiceTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxmvvm:OpenFileDialogService />
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdadwn:PasswordRequestDialog}">
                    <Grid Margin="15">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.ColumnSpan="2" Margin="0,0,0,30" Text="{Binding JustificationText}" />
                        <TextBlock Grid.Row="1" Margin="0,0,3,0" Text="{dxdal:DataAccessUIStringId StringId=PasswordRequest_FileName}" />
                        <dxe:ButtonEdit
                            Grid.Row="1"
                            Grid.Column="1"
                            Margin="0,0,0,3"
                            AllowDefaultButton="False"
                            EditValue="{Binding FileName}">
                            <dxe:ButtonEdit.Buttons>
                                <dxe:ButtonInfo Command="{Binding SelectFileCommand, RelativeSource={RelativeSource TemplatedParent}}" GlyphKind="Regular" />
                            </dxe:ButtonEdit.Buttons>
                        </dxe:ButtonEdit>
                        <TextBlock Grid.Row="2" Margin="0,0,3,0" Text="{dxdal:DataAccessUIStringId StringId=PasswordRequest_Password}" />
                        <dxe:PasswordBoxEdit Grid.Row="2" Grid.Column="1" EditValue="{Binding Password}" />
                        <dxe:CheckEdit
                            Grid.Row="3"
                            Grid.ColumnSpan="2"
                            Content="{dxdal:DataAccessUIStringId StringId=PasswordRequest_SavePassword}"
                            EditValue="{Binding SavePassword}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="QueryBuilderViewBase.DefaultStyleBase" TargetType="{x:Type dxdaqb:QueryBuilderViewBase}">
        <Setter Property="QueryBuilderViewModel" Value="{Binding}" />
    </Style>
    <Style x:Key="QueryBuilderTableDiagramContainer.DefaultStyleBase" TargetType="{x:Type dxdaie:QueryBuilderTableDiagramContainer}">
        <Setter Property="Width" Value="{Binding Width}" />
        <Setter Property="CanEdit">
            <Setter.Value>
                <MultiBinding Converter="{dxdaie:UseQueryBuilderLightToCanExecuteCommandConverter}">
                    <Binding Path="(dxdadw:QueryBuilder.QueryBuilder).UseQueryBuilderLight" RelativeSource="{RelativeSource Self}" />
                    <Binding Path="(dxdadw:QueryBuilder.QueryBuilder).DisplayNameProvider" RelativeSource="{RelativeSource Self}" />
                </MultiBinding>

            </Setter.Value>
        </Setter>
        <Setter Property="Position" Value="{Binding Position}" />
        <Setter Property="Header" Value="{Binding DisplayName}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdaie:QueryBuilderTableDiagramContainer}">
                    <dx:ThemedBorder BorderThickness="1">
                        <Grid>
                            <dxdiag:ShapePresenter
                                x:Name="ShapePresenter"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Background="{TemplateBinding Background}"
                                Content="{TemplateBinding Header}"
                                ContentBackground="{TemplateBinding ContentBackground}"
                                ContentPadding="{TemplateBinding HeaderPadding}"
                                Shape="{TemplateBinding ShapeGeometry}"
                                ShowContent="True"
                                Stroke="Transparent"
                                StrokeThickness="0">
                                <dxdiag:ShapePresenter.Template>
                                    <ControlTemplate TargetType="{x:Type dxdiag:ShapePresenter}">
                                        <Grid Margin="10,5" VerticalAlignment="Top">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto" />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <dxe:CheckEdit Margin="0,0,4,0" VerticalAlignment="Center" EditValue="{Binding Selected}" />
                                            <TextBlock
                                                x:Name="name"
                                                Grid.Column="1"
                                                VerticalAlignment="Center"
                                                FontWeight="Bold"
                                                Text="{Binding DisplayName}"
                                                TextAlignment="Left"
                                                TextTrimming="CharacterEllipsis">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Path=IsMissing}" Value="True">
                                                                <Setter Property="Foreground" Value="#FFFF0000" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                            <dxmvvm:Interaction.Behaviors>
                                                <dxdaie:ContainerHeaderBehavior Padding="0,19,0,5" AllowAutoMinWidth="False" Container="{Binding TemplatedParent, RelativeSource={RelativeSource TemplatedParent}, Converter={dxdai:DependencyObjectToDiagramContainerConverter}}" />
                                            </dxmvvm:Interaction.Behaviors>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <DataTrigger Binding="{Binding Path=(dx:ThemeManager.TreeWalker).ThemeName, RelativeSource={RelativeSource TemplatedParent}}" Value="Office2010Black">
                                                <Setter TargetName="name" Property="Foreground" Value="Black" />
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </dxdiag:ShapePresenter.Template>
                            </dxdiag:ShapePresenter>
                            <Canvas x:Name="ItemsPanel" Margin="{TemplateBinding ActualPadding}" />
                        </Grid>
                    </dx:ThemedBorder>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsTextEditMode" Value="True">
                            <Trigger.Setters>
                                <Setter TargetName="ShapePresenter" Property="ShowContent" Value="False" />
                            </Trigger.Setters>
                        </Trigger>
                        <Trigger Property="ShowHeader" Value="False">
                            <Trigger.Setters>
                                <Setter TargetName="ShapePresenter" Property="ShowContent" Value="False" />
                            </Trigger.Setters>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="QueryBuilderColumnDiagramItem.DefaultStyleBase" BasedOn="{dx:TargetStaticResource DiagramContentItem.DefaultStyleBase, TargetDictionary={dxi:ThemeResourceDictionary Path='Diagram/Generic.xaml'}}" TargetType="{x:Type dxdaie:QueryBuilderColumnDiagramItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Content" Value="{Binding}" />
        <Setter Property="Height" Value="22" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid Margin="10,0" VerticalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <dxe:CheckEdit
                            Grid.Column="0"
                            Margin="0,0,4,0"
                            Cursor="Arrow"
                            EditValue="{Binding Selected}" />
                        <Grid Grid.Column="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock
                                VerticalAlignment="Center"
                                IsHitTestVisible="False"
                                Text="{Binding DisplayName, Converter={dxdaie:QueryBuilderSelectionDisplayNameConverter}, Mode=OneWay}"
                                TextAlignment="Left"
                                TextTrimming="CharacterEllipsis">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=(dx:ThemeManager.ThemeName), RelativeSource={RelativeSource AncestorType=Window}}" Value="Office2010Black">
                                                <Setter Property="Foreground" Value="Black" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=IsMissing}" Value="True">
                                                <Setter Property="Foreground" Value="#FFFF0000" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <StackPanel
                                Grid.Column="1"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Orientation="Horizontal">
                                <Button Content="{dxdai:DataAccessSvgImage Uri=Images/QueryBuilder/SortAsc.svg}" Style="{StaticResource glyphButtonStyle}" Visibility="{Binding SortedAsc, Converter={dx:BooleanToVisibilityConverter}}" />
                                <Button Content="{dxdai:DataAccessSvgImage Uri=Images/QueryBuilder/SortDesc.svg}" Style="{StaticResource glyphButtonStyle}" Visibility="{Binding SortedDesc, Converter={dx:BooleanToVisibilityConverter}}" />
                                <Button Content="{dxdai:DataAccessSvgImage Uri=Images/QueryBuilder/GroupBy.svg}" Style="{StaticResource glyphButtonStyle}" Visibility="{Binding GroupedBy, Converter={dx:BooleanToVisibilityConverter}}" />
                                <Button Content="{dxdai:DataAccessSvgImage Uri=Images/QueryBuilder/Summary.svg}" Style="{StaticResource glyphButtonStyle}" Visibility="{Binding Aggregated, Converter={dx:BooleanToVisibilityConverter}}" />
                                <Button
                                    Command="{Binding Path=(dxdadw:QueryBuilder.QueryBuilder).View.JoinTableCommand, RelativeSource={RelativeSource Self}}"
                                    CommandParameter="{Binding Id}"
                                    Content="{dxdai:DataAccessSvgImageExtension Uri=Images/QueryBuilder/JoinTable.svg}"
                                    Style="{StaticResource joinButtonStyle}"
                                    Visibility="{Binding ForeignKey, Converter={dxdaie:FKStateToBooleanConverter FKState=CanBeJoined}}" />
                            </StackPanel>
                        </Grid>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxdaie:IncomingConnectorsRouteUpdater />
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DiagramQueryBuilderView.DefaultStyleBase" BasedOn="{StaticResource QueryBuilderViewBase.DefaultStyleBase}" TargetType="{x:Type dxdaqb:DiagramQueryBuilderView}">
        <Style.Resources>
            <Style TargetType="{x:Type dxdiag:PageBackgroundControl}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <dx:BackgroundPanel />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdaqb:DiagramQueryBuilderView}">
                    <dx:ThemedBorder BorderThickness="1">
                        <dxdaie:QueryBuilderDiagramControl
                            x:Name="PART_DiagramControl"
                            Margin="1"
                            AllowDrop="True"
                            CanvasSizeMode="Fill"
                            PageSize="640,480"
                            ScrollMode="Content"
                            ShowGrid="False"
                            ShowPageBreaks="False"
                            ShowRulers="False"
                            SnapToGrid="False"
                            SnapToItems="False"
                            Theme="{x:Null}"
                            View="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                            <dxmvvm:Interaction.Behaviors>
                                <dxdaqb:QueryBuilderDiagramDataBindingBehavior
                                    ConnectorFromMember="From"
                                    ConnectorToMember="To"
                                    ConnectorsSource="{Binding Connectors, RelativeSource={RelativeSource TemplatedParent}}"
                                    EnableNotificationToSource="False"
                                    ItemsPath="Columns"
                                    ItemsSource="{Binding Items, RelativeSource={RelativeSource TemplatedParent}}"
                                    KeyMember="Id">
                                    <dxdaqb:QueryBuilderDiagramDataBindingBehavior.ConnectorTemplate>
                                        <DataTemplate>
                                            <dxdaie:QueryBuilderDiagramConnector
                                                CanCopy="False"
                                                CanDelete="False"
                                                CanDragBeginPoint="False"
                                                CanDragEndPoint="False"
                                                CanEdit="False"
                                                CanMove="False"
                                                CanResize="False"
                                                EndArrow="{Binding DataItem, Converter={dxdaie:JoinTypeToConnectorArrowTypeConverter}}"
                                                Stroke="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}"
                                                StrokeThickness="1"
                                                Type="{x:Static dxdiag:ConnectorType.RightAngle}" />
                                        </DataTemplate>
                                    </dxdaqb:QueryBuilderDiagramDataBindingBehavior.ConnectorTemplate>
                                </dxdaqb:QueryBuilderDiagramDataBindingBehavior>
                            </dxmvvm:Interaction.Behaviors>
                            <dxdaie:QueryBuilderDiagramControl.Resources>
                                <Style TargetType="{x:Type dxdiag:ItemEditorControl}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type dxdiag:ItemEditorControl}">
                                                <Grid Margin="3">
                                                    <Rectangle Stroke="#FFB9B9B9" StrokeDashArray="2,2" StrokeThickness="1" />
                                                    <TextBox
                                                        x:Name="Editor"
                                                        Margin="0,5"
                                                        AcceptsReturn="False"
                                                        AcceptsTab="False"
                                                        BorderThickness="0"
                                                        TextWrapping="Wrap">
                                                        <dxmvvm:Interaction.Behaviors>
                                                            <dxdaie:TableInplaceEditorBehavior />
                                                        </dxmvvm:Interaction.Behaviors>
                                                    </TextBox>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding Path=(dx:ThemeManager.TreeWalker).ThemeName, RelativeSource={RelativeSource TemplatedParent}}" Value="Office2010Black">
                                                        <Setter TargetName="Editor" Property="Foreground" Value="Black" />
                                                    </DataTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </dxdaie:QueryBuilderDiagramControl.Resources>
                        </dxdaie:QueryBuilderDiagramControl>
                    </dx:ThemedBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DF_QueryBuilderTableDiagramContainer.DefaultStyleBase" TargetType="{x:Type dxdaid:QueryBuilderTableDiagramContainer}">
        <Setter Property="Width" Value="{Binding Width}" />
        <Setter Property="Position" Value="{Binding Position}" />
        <Setter Property="Header" Value="{Binding DisplayName}" />
        <Setter Property="MinWidth" Value="125" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdaid:QueryBuilderTableDiagramContainer}">
                    <dx:ThemedBorder BorderThickness="1">
                        <Grid>
                            <dxdiag:ShapePresenter
                                x:Name="ShapePresenter"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Background="{TemplateBinding Background}"
                                Content="{TemplateBinding Header}"
                                ContentBackground="{TemplateBinding ContentBackground}"
                                ContentPadding="{TemplateBinding HeaderPadding}"
                                Shape="{TemplateBinding ShapeGeometry}"
                                ShowContent="True"
                                Stroke="Transparent"
                                StrokeThickness="0">
                                <dxdiag:ShapePresenter.Template>
                                    <ControlTemplate TargetType="{x:Type dxdiag:ShapePresenter}">
                                        <Grid Margin="10,5" VerticalAlignment="Top">
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto" />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <dxe:CheckEdit Margin="0,0,4,0" VerticalAlignment="Center" EditValue="{Binding Selected}" />
                                            <TextBlock
                                                x:Name="name"
                                                Grid.Column="1"
                                                VerticalAlignment="Center"
                                                FontWeight="Bold"
                                                Text="{Binding DisplayName}"
                                                TextAlignment="Left"
                                                TextTrimming="CharacterEllipsis" />
                                            <TextBlock
                                                Name="sourceName"
                                                Grid.Row="1"
                                                Grid.Column="1"
                                                Foreground="Gray"
                                                Opacity="0.7"
                                                Text="{Binding SourceName}"
                                                TextAlignment="Left"
                                                TextTrimming="CharacterEllipsis" />
                                            <dxmvvm:Interaction.Behaviors>
                                                <dxdaie:ContainerHeaderBehavior AllowAutoMinWidth="False" Container="{Binding TemplatedParent, RelativeSource={RelativeSource TemplatedParent}, Converter={dxdai:DependencyObjectToDiagramContainerConverter}}">
                                                    <dxdaie:ContainerHeaderBehavior.Padding>
                                                        <Binding Path="AssociatedObject.DataContext.SourceName" RelativeSource="{RelativeSource Self}">
                                                            <Binding.Converter>
                                                                <dxmvvm:ObjectToObjectConverter DefaultTarget="0,30,0,5">
                                                                    <dxmvvm:MapItem Source="{x:Null}" Target="0,19,0,5" />
                                                                </dxmvvm:ObjectToObjectConverter>
                                                            </Binding.Converter>
                                                        </Binding>
                                                    </dxdaie:ContainerHeaderBehavior.Padding>
                                                </dxdaie:ContainerHeaderBehavior>
                                            </dxmvvm:Interaction.Behaviors>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <DataTrigger Binding="{Binding Path=(dx:ThemeManager.TreeWalker).ThemeName, RelativeSource={RelativeSource TemplatedParent}}" Value="Office2010Black">
                                                <Setter TargetName="name" Property="Foreground" Value="Black" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding SourceName}" Value="{x:Null}">
                                                <Setter TargetName="sourceName" Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=IsMissing}" Value="True">
                                                <Setter TargetName="name" Property="Foreground" Value="#FFFF0000" />
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </dxdiag:ShapePresenter.Template>
                            </dxdiag:ShapePresenter>
                            <Canvas x:Name="ItemsPanel" Margin="{TemplateBinding ActualPadding}" />
                        </Grid>
                    </dx:ThemedBorder>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsTextEditMode" Value="True">
                            <Trigger.Setters>
                                <Setter TargetName="ShapePresenter" Property="ShowContent" Value="False" />
                            </Trigger.Setters>
                        </Trigger>
                        <Trigger Property="ShowHeader" Value="False">
                            <Trigger.Setters>
                                <Setter TargetName="ShapePresenter" Property="ShowContent" Value="False" />
                            </Trigger.Setters>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DF_QueryBuilderColumnDiagramItem.DefaultStyleBase" BasedOn="{dx:TargetStaticResource DiagramContentItem.DefaultStyleBase, TargetDictionary={dxi:ThemeResourceDictionary Path='Diagram/Generic.xaml'}}" TargetType="{x:Type dxdaid:QueryBuilderColumnDiagramItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Content" Value="{Binding}" />
        <Setter Property="Height" Value="22" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid Margin="10,0" VerticalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <dxe:CheckEdit
                            Grid.Column="0"
                            Margin="0,0,4,0"
                            Cursor="Arrow"
                            EditValue="{Binding Selected}" />
                        <Grid Grid.Column="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock
                                VerticalAlignment="Center"
                                IsHitTestVisible="False"
                                Text="{Binding DisplayName, Converter={dxdaie:QueryBuilderSelectionDisplayNameConverter}, Mode=OneWay}"
                                TextAlignment="Left"
                                TextTrimming="CharacterEllipsis">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=(dx:ThemeManager.ThemeName), RelativeSource={RelativeSource AncestorType=Window}}" Value="Office2010Black">
                                                <Setter Property="Foreground" Value="Black" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsMissing}" Value="True">
                                                <Setter Property="Foreground" Value="#FFFF0000" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxdaie:IncomingConnectorsRouteUpdater />
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="QueryBuilderControl.DefaultStyleBase" TargetType="dxdaid:QueryBuilderControl">
        <Setter Property="Template" Value="{StaticResource queryBuilderTemplate}" />
        <Setter Property="dx:ScrollBarExtensions.ScrollBarMode" Value="TouchOverlap" />
        <Setter Property="JoinEditorDialogServiceTemplate" Value="{StaticResource queryBuilderJoinEditorDialogServiceTemplate}" />
        <Setter Property="MessageBoxServiceTemplate" Value="{StaticResource queryBuilderMessageBoxServiceTemplate}" />
        <Setter Property="ExpressionEditorDialogServiceTemplate" Value="{StaticResource queryBuilderExpressionEditorServiceTemplate}" />
    </Style>
    <Style x:Key="LegacyQueryBuilderView.DefaultStyleBase" BasedOn="{StaticResource QueryBuilderViewBase.DefaultStyleBase}" TargetType="{x:Type dxdaqb:LegacyQueryBuilderView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdaqb:LegacyQueryBuilderView}">
                    <dxg:GridControl x:Name="PART_GridControl" AllowDrop="True" ItemsSource="{Binding Selection}">
                        <dxg:GridControl.Columns>
                            <dxg:GridColumn AllowEditing="False" Header="{dxdal:DataAccessUIStringId StringId=ParametersColumn_Name}">
                                <dxg:GridColumn.Binding>
                                    <MultiBinding Converter="{dxdaie:LegacyQueryBuilderViewSelectionDisplayNameConverter}" Mode="TwoWay">
                                        <Binding Mode="TwoWay" Path="Name" />
                                        <Binding Mode="OneWay" Path="View.DataControl.(dxdadw:QueryBuilder.QueryBuilder).DisplayNameProvider" />
                                        <Binding Mode="OneWay" Path="View.DataControl.(dxdadw:QueryBuilder.QueryBuilder).UseQueryBuilderLight" />
                                        <Binding Mode="OneWay" />
                                        <Binding Mode="OneWay" Path="View.DataControl.(dxdadw:QueryBuilder.QueryBuilder).EditValue.Selection" />
                                    </MultiBinding>
                                </dxg:GridColumn.Binding>
                                <dxg:GridColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid dxb:BarManager.DXContextMenu="{Binding RowData.Row, Converter={dxdaie:TreeListNodeToContextMenuConverter}, ConverterParameter={StaticResource QueryBuilderItemContextMenu}}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <dxe:TextEdit x:Name="PART_Editor">
                                                    <dxe:TextEdit.Style>
                                                        <Style TargetType="{x:Type dxe:TextEdit}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Path=RowData.Row.IsMissing}" Value="True">
                                                                    <Setter Property="Foreground" Value="#FFFF0000" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </dxe:TextEdit.Style>
                                                </dxe:TextEdit>

                                                <StackPanel Grid.Column="1" Orientation="Horizontal">
                                                    <dx:DXImage Source="{dx:DXImage Image=SortAsc_16x16.png}" Visibility="{Binding RowData.Row.SortedAsc, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
                                                    <dx:DXImage Source="{dx:DXImage Image=SortDesc_16x16.png}" Visibility="{Binding RowData.Row.SortedDesc, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
                                                    <dx:DXImage Source="{dx:DXImage Image=Group_16x16.png}" Visibility="{Binding RowData.Row.GroupedBy, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
                                                    <dx:DXImage Source="{dx:DXImage Image=Summary_16x16.png}" Visibility="{Binding RowData.Row.Aggregated, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
                                                </StackPanel>
                                            </Grid>
                                        </Grid>
                                    </DataTemplate>
                                </dxg:GridColumn.CellTemplate>
                            </dxg:GridColumn>
                            <dxg:GridColumn FieldName="Condition" AllowEditing="False" Header="{dxdal:DataAccessUIStringId StringId=JoinInformation}">
                                <dxg:GridColumn.CellTemplate>
                                    <DataTemplate>
                                        <dxe:ButtonEdit x:Name="PART_Editor" AllowDefaultButton="False">
                                            <dxe:ButtonEdit.EditValue>
                                                <MultiBinding Converter="{dxdaie:ConditionStringInfoToDisplayTextConverter}" Mode="OneWay">
                                                    <Binding Path="RowData.Row.Condition" />
                                                    <Binding Path="View.DataControl.(dxdadw:QueryBuilder.QueryBuilder).DisplayNameProvider" />
                                                    <Binding Path="View.DataControl.(dxdadw:QueryBuilder.QueryBuilder).UseQueryBuilderLight" />
                                                </MultiBinding>
                                            </dxe:ButtonEdit.EditValue>
                                            <dxe:ButtonEdit.Buttons>
                                                <dxe:ButtonInfo Command="{Binding Column.TemplatedParent.JoinTableCommand}" CommandParameter="{Binding RowData.Row.Id}" Visibility="{Binding RowData.Row.ForeignKey, Converter={dxdaie:FKStateToVisibilityConverter FKState=CanBeJoined}}">
                                                    <dxe:ButtonInfo.Content>
                                                        <dx:DXImage Width="16" Source="{dxdai:DataAccessSvgImageExtension Uri=Images/QueryBuilder/JoinTable.svg}" />
                                                    </dxe:ButtonInfo.Content>
                                                </dxe:ButtonInfo>
                                                <dxe:ButtonInfo Visibility="{Binding RowData.Row.ForeignKey, Converter={dxdaie:FKStateToVisibilityConverter FKState=AlreadyJoined}}">
                                                    <dxe:ButtonInfo.Content>
                                                        <dx:DXImage Width="16" Source="{dxdai:DataAccessSvgImageExtension Uri=Images/QueryBuilder/TableJoined.svg}" />
                                                    </dxe:ButtonInfo.Content>
                                                </dxe:ButtonInfo>
                                                <dxe:ButtonInfo Command="{Binding Column.TemplatedParent.OnEditJoinCommand}" CommandParameter="{Binding RowData.Row.Name}" GlyphKind="Regular">
                                                    <dxe:ButtonInfo.Visibility>
                                                        <MultiBinding Converter="{dxdaie:ConditionAndFKStateToVisibilityConverter}">
                                                            <Binding Path="RowData.Row.Condition" />
                                                            <Binding Path="RowData.Row.ForeignKey" />
                                                        </MultiBinding>
                                                    </dxe:ButtonInfo.Visibility>
                                                </dxe:ButtonInfo>
                                            </dxe:ButtonEdit.Buttons>
                                        </dxe:ButtonEdit>
                                    </DataTemplate>
                                </dxg:GridColumn.CellTemplate>
                            </dxg:GridColumn>
                        </dxg:GridControl.Columns>
                        <dxg:GridControl.View>
                            <dxg:TreeListView
                                AllowColumnFiltering="False"
                                AllowSorting="False"
                                AutoWidth="True"
                                CheckBoxFieldName="Selected"
                                EditorButtonShowMode="ShowAlways"
                                IsColumnMenuEnabled="False"
                                KeyFieldName="Id"
                                ParentFieldName="Parent"
                                ShowCheckboxes="True"
                                ShowIndicator="False"
                                VerticalScrollbarVisibility="Auto">
                                <dxmvvm:Interaction.Behaviors>
                                    <dxdai:ExpandTreeListNodeBehavior Depth="2" />
                                </dxmvvm:Interaction.Behaviors>
                            </dxg:TreeListView>
                        </dxg:GridControl.View>
                        <dxmvvm:Interaction.Behaviors>
                            <dxmvvm:EventToCommand
                                Command="{Binding AddSelectedItemCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                EventArgsConverter="{dxdaqbn:DragDropAvailableItemDataEventArgsConverter}"
                                EventName="Drop"
                                PassEventArgsToCommand="True" />
                        </dxmvvm:Interaction.Behaviors>
                    </dxg:GridControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="QueryBuilder.DefaultStyleBase" TargetType="{x:Type dxdadw:QueryBuilder}">
        <Setter Property="PreviewDialogServiceTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dx:DialogService>
                            <dx:DialogService.DialogStyle>
                                <Style BasedOn="{StaticResource LegacyThemedWindowDialogStyleBase}" TargetType="{x:Type dx:ThemedWindow}">
                                    <Setter Property="ResizeMode" Value="CanResize" />
                                    <Setter Property="Width" Value="800" />
                                    <Setter Property="Height" Value="500" />
                                </Style>
                            </dx:DialogService.DialogStyle>
                            <dx:DialogService.ViewTemplate>
                                <DataTemplate>
                                    <dxdaie:DataPreviewControl Data="{Binding}" />
                                </DataTemplate>
                            </dx:DialogService.ViewTemplate>
                        </dx:DialogService>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FilterDialogServiceTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dx:DialogService>
                            <dx:DialogService.DialogStyle>
                                <Style BasedOn="{StaticResource LegacyThemedWindowDialogStyleBase}" TargetType="{x:Type dx:ThemedWindow}">
                                    <Setter Property="ResizeMode" Value="CanResize" />
                                    <Setter Property="Width" Value="650" />
                                    <Setter Property="Height" Value="400" />
                                </Style>
                            </dx:DialogService.DialogStyle>
                            <dx:DialogService.ViewTemplate>
                                <DataTemplate>
                                    <dxdaie:QueryBuilderFilterControl EditValue="{Binding}" />
                                </DataTemplate>
                            </dx:DialogService.ViewTemplate>
                        </dx:DialogService>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="JoinEditorDialogServiceTemplate" Value="{StaticResource queryBuilderJoinEditorDialogServiceTemplate}" />
        <Setter Property="MessageBoxServiceTemplate" Value="{StaticResource queryBuilderMessageBoxServiceTemplate}" />
        <Setter Property="ExpressionEditorTemplate" Value="{StaticResource queryBuilderExpressionEditorServiceTemplate}" />
        <Setter Property="SplashScreenServiceTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dx:DXSplashScreenService SplashScreenStartupLocation="CenterOwner">
                            <dx:DXSplashScreenService.ViewTemplate>
                                <DataTemplate>
                                    <dx:WaitIndicator DeferedVisibility="True" />
                                </DataTemplate>
                            </dx:DXSplashScreenService.ViewTemplate>
                        </dx:DXSplashScreenService>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="QueryParametersEditorTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dx:DialogService>
                            <dx:DialogService.DialogStyle>
                                <Style BasedOn="{StaticResource LegacyThemedWindowDialogStyleBase}" TargetType="{x:Type dx:ThemedWindow}">
                                    <Setter Property="Width" Value="596" />
                                    <Setter Property="Height" Value="418" />
                                </Style>
                            </dx:DialogService.DialogStyle>
                            <dx:DialogService.ViewTemplate>
                                <DataTemplate>
                                    <dxdaie:QueryBuilderParametersEditor
                                        GetPreviewData="{Binding GetPreviewData}"
                                        ParameterService="{Binding ParameterService}"
                                        Parameters="{Binding Parameters}"
                                        UseLegacyExpressionEditor="{Binding UseLegacyExpressionEditor}" />
                                </DataTemplate>
                            </dx:DialogService.ViewTemplate>
                        </dx:DialogService>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdadw:QueryBuilder}">
                    <Grid DataContext="{TemplateBinding EditValue}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" SharedSizeGroup="ToolBarRow" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <dx:DXBorder>
                            <dxe:CheckEdit
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                Content="{dxdal:DataAccessUIStringId StringId=QueryBuilder_AllowEdit}"
                                EditValue="{Binding AllowEditSql, RelativeSource={RelativeSource TemplatedParent}}"
                                Visibility="{Binding IsSqlSupported, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
                            <dx:DXBorder.Visibility>
                                <MultiBinding>
                                    <Binding Path="EnableCustomSql" />
                                    <Binding Path="AllowEditSql" />
                                    <MultiBinding.Converter>
                                        <dxdai:EnableCustomSqlConverter />
                                    </MultiBinding.Converter>
                                </MultiBinding>
                            </dx:DXBorder.Visibility>
                        </dx:DXBorder>
                        <dxdo:DockLayoutManager Grid.Row="1" AllowCustomization="False">
                            <dxdo:DockLayoutManager.Resources>
                                <Style TargetType="dxdo:LayoutGroup">
                                    <Setter Property="DockItemInterval" Value="12" />
                                    <Setter Property="LayoutItemInterval" Value="12" />
                                </Style>
                            </dxdo:DockLayoutManager.Resources>
                            <dxdo:DockLayoutManager.LayoutRoot>
                                <dxdo:LayoutGroup Margin="0" AllowSplitters="True">
                                    <dxdo:LayoutGroup AllowSplitters="True" ItemWidth="*" Orientation="Vertical">
                                        <dxdo:LayoutControlItem ItemHeight="2*">
                                            <Grid>
                                                <dxg:GridControl CurrentItem="{Binding SelectedAvailableItem, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWayToSource, Converter={dxdaie:TableDataItemToAvailableItemDataOneWayToSourceConverter}}" ScrollViewer.VerticalScrollBarVisibility="Auto">
                                                    <dxg:GridControl.Resources>
                                                        <Style TargetType="{x:Type dxg:RowControl}">
                                                            <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
                                                                <Setter.Value>
                                                                    <DataTemplate>
                                                                        <ContentControl>
                                                                            <dxmvvm:EventToCommand Command="{Binding View.AddSelectedItemCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxdadw:QueryBuilder}}}" CommandParameter="{Binding Row.OriginalValue.Name}" EventName="MouseDoubleClick" />
                                                                        </ContentControl>
                                                                    </DataTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </dxg:GridControl.Resources>
                                                    <dxg:GridControl.View>
                                                        <dxg:TableView
                                                            AllowDragDrop="True"
                                                            AllowEditing="False"
                                                            IncrementalSearchMode="Enabled"
                                                            NavigationStyle="Row"
                                                            ShowColumnHeaders="False"
                                                            ShowDragDropHint="False"
                                                            ShowGroupPanel="False"
                                                            ShowHorizontalLines="False"
                                                            ShowIndicator="False"
                                                            ShowVerticalLines="False">
                                                            <dxmvvm:Interaction.Behaviors>
                                                                <dxmvvm:FocusBehavior EventName="Loaded" />
                                                                <dxdai:GridControlDragDropManager />
                                                                <dxdai:ProhibitDropToSelfBehavior />
                                                            </dxmvvm:Interaction.Behaviors>
                                                        </dxg:TableView>
                                                    </dxg:GridControl.View>

                                                    <dxg:GridControl.ItemsSource>
                                                        <MultiBinding Converter="{dxdaie:TableToAliasedTableConverter}">
                                                            <Binding Path="Available" />
                                                            <Binding Path="DisplayNameProvider" RelativeSource="{RelativeSource TemplatedParent}" />
                                                            <Binding Path="UseQueryBuilderLight" RelativeSource="{RelativeSource TemplatedParent}" />
                                                        </MultiBinding>
                                                    </dxg:GridControl.ItemsSource>

                                                    <dxg:GridControl.Columns>
                                                        <dxg:GridColumn FieldName="Icon" Width="20">
                                                            <dxg:GridColumn.CellTemplate>
                                                                <DataTemplate>
                                                                    <dx:DXImage
                                                                        Width="16"
                                                                        Height="16"
                                                                        Margin="4,0,0,0"
                                                                        VerticalAlignment="Center"
                                                                        Source="{Binding RowData.Row.OriginalValue.Type, Converter={dxdai:ImageNameToSourceConverter Folder=QueryBuilder}}" />
                                                                </DataTemplate>
                                                            </dxg:GridColumn.CellTemplate>
                                                        </dxg:GridColumn>

                                                        <dxg:GridColumn FieldName="ItemDisplayName" Width="*">
                                                            <dxg:GridColumn.CellTemplate>
                                                                <DataTemplate>
                                                                    <dxe:TextEdit
                                                                        x:Name="PART_Editor"
                                                                        VerticalAlignment="Center"
                                                                        IsReadOnly="True"
                                                                        Text="{Binding RowData.Row.ItemDisplayName, Mode=OneWay}">
                                                                        <dxe:TextEdit.Style>
                                                                            <Style TargetType="{x:Type dxe:TextEdit}">
                                                                                <Style.Triggers>
                                                                                    <DataTrigger Binding="{Binding RowData.Row.OriginalValue.Shadowed, Mode=OneWay}" Value="False">
                                                                                        <Setter Property="FontWeight" Value="Bold" />
                                                                                    </DataTrigger>
                                                                                </Style.Triggers>
                                                                            </Style>
                                                                        </dxe:TextEdit.Style>
                                                                    </dxe:TextEdit>
                                                                </DataTemplate>
                                                            </dxg:GridColumn.CellTemplate>
                                                        </dxg:GridColumn>
                                                    </dxg:GridControl.Columns>
                                                </dxg:GridControl>
                                            </Grid>
                                        </dxdo:LayoutControlItem>
                                        <dxdo:LayoutControlItem ItemHeight="1*">
                                            <dxlc:GroupBox Padding="0" Header="{TemplateBinding AvailableItemGroupBoxHeader}">
                                                <dxg:GridControl MaxHeight="500" ShowBorder="False">
                                                    <dxg:GridControl.ItemsSource>
                                                        <MultiBinding Converter="{dxdaie:TableColumnToAliasedColumnsConverter}">
                                                            <Binding Path="SelectedAvailableItem" RelativeSource="{RelativeSource TemplatedParent}" />
                                                            <Binding Path="DisplayNameProvider" RelativeSource="{RelativeSource TemplatedParent}" />
                                                            <Binding Path="UseQueryBuilderLight" RelativeSource="{RelativeSource TemplatedParent}" />
                                                        </MultiBinding>
                                                    </dxg:GridControl.ItemsSource>

                                                    <dxg:GridControl.Columns>
                                                        <dxg:GridColumn FieldName="ColumnDisplayName" Width="*" TextElement.FontWeight="Bold" />
                                                        <dxg:GridColumn FieldName="OriginalColumnInfo.Type" Width="*">
                                                            <dxg:GridColumn.EditSettings>
                                                                <dxe:TextEditSettings HorizontalContentAlignment="Right" />
                                                            </dxg:GridColumn.EditSettings>
                                                        </dxg:GridColumn>
                                                    </dxg:GridControl.Columns>
                                                    <dxg:GridControl.View>
                                                        <dxg:TableView
                                                            AllowEditing="False"
                                                            ShowColumnHeaders="False"
                                                            ShowHorizontalLines="False"
                                                            ShowIndicator="False"
                                                            ShowVerticalLines="False"
                                                            Style="{StaticResource WizardTableViewBaseStyle}"
                                                            VerticalScrollbarVisibility="Auto">
                                                            <dxg:TableView.CellTemplate>
                                                                <DataTemplate>
                                                                    <DockPanel LastChildFill="True">
                                                                        <dxdaie:ColumnResizeGrip
                                                                            Width="4"
                                                                            Cursor="SizeWE"
                                                                            DockPanel.Dock="Right"
                                                                            Visibility="Collapsed">
                                                                            <dxdaie:ColumnResizeGrip.Template>
                                                                                <ControlTemplate>
                                                                                    <dx:DXBorder Background="Transparent" />
                                                                                </ControlTemplate>
                                                                            </dxdaie:ColumnResizeGrip.Template>
                                                                        </dxdaie:ColumnResizeGrip>
                                                                        <dxe:InplaceBaseEdit Name="PART_Editor" />
                                                                    </DockPanel>
                                                                </DataTemplate>
                                                            </dxg:TableView.CellTemplate>
                                                        </dxg:TableView>
                                                    </dxg:GridControl.View>
                                                </dxg:GridControl>
                                            </dxlc:GroupBox>
                                        </dxdo:LayoutControlItem>
                                    </dxdo:LayoutGroup>
                                    <dxdo:LayoutGroup AllowSplitters="True" ItemWidth="4*" Orientation="Vertical">
                                        <dxdo:LayoutControlItem ItemHeight="*" Visibility="{Binding AllowEditSql, Converter={dxmvvm:BooleanToVisibilityConverter}, FallbackValue=Collapsed}">
                                            <dxe:TextEdit
                                                VerticalContentAlignment="Top"
                                                AcceptsReturn="True"
                                                AcceptsTab="True"
                                                EditValue="{Binding SqlText}"
                                                FontFamily="Courier New, Lucida Console">
                                                <dxe:TextEdit.IsReadOnly>
                                                    <MultiBinding>
                                                        <Binding Path="EnableCustomSql" />
                                                        <Binding Path="AllowEditSql" />
                                                        <MultiBinding.Converter>
                                                            <dxdai:SqlReadOnlyConverter />
                                                        </MultiBinding.Converter>
                                                    </MultiBinding>
                                                </dxe:TextEdit.IsReadOnly>
                                            </dxe:TextEdit>
                                        </dxdo:LayoutControlItem>
                                        <dxdo:LayoutGroup
                                            AllowSplitters="True"
                                            ItemHeight="2*"
                                            Orientation="Horizontal"
                                            Visibility="{Binding AllowEditSql, Converter={dxmvvm:BooleanToVisibilityConverter Inverse=True}, FallbackValue=Visible}">
                                            <dxdo:LayoutGroup>
                                                <dxdo:LayoutControlItem>
                                                    <ContentPresenter Content="{TemplateBinding View}" DataContext="{Binding}" />
                                                </dxdo:LayoutControlItem>
                                            </dxdo:LayoutGroup>
                                            <dxdo:LayoutGroup Visibility="{Binding UseQueryBuilderLight, Converter={dxmvvm:BooleanToVisibilityConverter Inverse=True}, RelativeSource={RelativeSource TemplatedParent}}">
                                                <dxdo:LayoutControlItem IsEnabled="{Binding EnableCustomSql}">
                                                    <dxe:TextEdit
                                                        VerticalContentAlignment="Top"
                                                        AcceptsReturn="True"
                                                        AcceptsTab="True"
                                                        EditValue="{Binding SqlText}"
                                                        FontFamily="Courier New, Lucida Console"
                                                        IsReadOnly="{Binding AllowEditSql, Converter={dxmvvm:BooleanNegationConverter}}" />
                                                </dxdo:LayoutControlItem>
                                            </dxdo:LayoutGroup>
                                        </dxdo:LayoutGroup>
                                        <dxdo:LayoutControlItem ItemHeight="*" Visibility="{Binding AllowEditSql, Converter={dxmvvm:BooleanToVisibilityConverter Inverse=True}, FallbackValue=Visible}">
                                            <dxg:GridControl ItemsSource="{Binding QueryGrid}">
                                                <dxg:GridControl.Columns>
                                                    <dxg:GridColumn FieldName="ColumnData" Width="2*" Header="{dxdal:DataAccessUIStringId StringId=QueryBuilderColumn}">
                                                        <dxg:GridColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <dxg:LookUpEdit
                                                                    x:Name="PART_Editor"
                                                                    AutoPopulateColumns="False"
                                                                    DisplayMember="ColumnDisplayName"
                                                                    IsTextEditable="False"
                                                                    ItemsSource="{Binding ColumnDataItems, RelativeSource={RelativeSource AncestorType={x:Type dxdadw:QueryBuilder}}}"
                                                                    PopupWidth="240"
                                                                    ValueMember="ColumnData">
                                                                    <dxg:LookUpEdit.PopupContentTemplate>
                                                                        <ControlTemplate>
                                                                            <dxg:GridControl Name="PART_GridControl">
                                                                                <dxg:GridControl.Columns>
                                                                                    <dxg:GridColumn FieldName="ColumnDisplayName" Header="{dxdal:DataAccessUIStringId StringId=QueryBuilderColumn}" />
                                                                                    <dxg:GridColumn FieldName="TableDisplayName" Header="{dxdal:DataAccessUIStringId StringId=QueryBuilderTable}" />
                                                                                </dxg:GridControl.Columns>
                                                                                <dxg:GridControl.View>
                                                                                    <dxg:TableView
                                                                                        AllowColumnFiltering="False"
                                                                                        AllowColumnMoving="False"
                                                                                        AutoWidth="True"
                                                                                        IsColumnMenuEnabled="False"
                                                                                        ShowIndicator="False" />
                                                                                </dxg:GridControl.View>
                                                                            </dxg:GridControl>
                                                                        </ControlTemplate>
                                                                    </dxg:LookUpEdit.PopupContentTemplate>
                                                                    <dxg:LookUpEdit.Buttons>
                                                                        <dxe:ButtonInfo
                                                                            Command="{Binding OnEditExpressionCommand, RelativeSource={RelativeSource AncestorType={x:Type dxdadw:QueryBuilder}}}"
                                                                            CommandParameter="{Binding RowData.Row}"
                                                                            GlyphKind="Regular"
                                                                            Visibility="{Binding UseQueryBuilderLight, Converter={dxmvvm:BooleanToVisibilityConverter Inverse=True}, RelativeSource={RelativeSource AncestorType={x:Type dxdadw:QueryBuilder}}}" />
                                                                    </dxg:LookUpEdit.Buttons>
                                                                </dxg:LookUpEdit>
                                                            </DataTemplate>
                                                        </dxg:GridColumn.CellTemplate>
                                                    </dxg:GridColumn>

                                                    <dxg:GridColumn
                                                        FieldName="Table"
                                                        Width="2*"
                                                        AllowEditing="False"
                                                        Header="{dxdal:DataAccessUIStringId StringId=QueryBuilderTable}">
                                                        <dxg:GridColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <TextBlock Margin="3,0,0,0" VerticalAlignment="Center" TextAlignment="Center">
                                                                    <TextBlock.Text>
                                                                        <MultiBinding Converter="{dxdaie:TableDisplayNameConverter}">
                                                                            <Binding Path="RowData.Row.Table" />
                                                                            <Binding Path="DisplayNameProvider" RelativeSource="{RelativeSource AncestorType={x:Type dxdadw:QueryBuilder}}" />
                                                                            <Binding Path="UseQueryBuilderLight" RelativeSource="{RelativeSource AncestorType={x:Type dxdadw:QueryBuilder}}" />
                                                                        </MultiBinding>
                                                                    </TextBlock.Text>
                                                                </TextBlock>
                                                            </DataTemplate>
                                                        </dxg:GridColumn.CellTemplate>
                                                    </dxg:GridColumn>


                                                    <dxg:GridColumn
                                                        FieldName="Alias"
                                                        Width="2*"
                                                        Header="{dxdal:DataAccessUIStringId StringId=QueryBuilderColumns_Alias}"
                                                        Visible="{Binding UseQueryBuilderLight, Converter={dxmvvm:BooleanNegationConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                                                    <dxg:GridColumn FieldName="Output" Width="*" Header="{dxdal:DataAccessUIStringId StringId=QueryBuilderColumns_Output}" />

                                                    <dxg:GridColumn FieldName="SortingType" Width="*" Header="{dxdal:DataAccessUIStringId StringId=QueryBuilderColumns_SortingType}">
                                                        <dxg:GridColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <dxe:ComboBoxEdit
                                                                    x:Name="PART_Editor"
                                                                    AllowNullInput="True"
                                                                    DisplayMember="Value"
                                                                    IsTextEditable="False"
                                                                    ItemsSource="{dxdaie:ListSortDirectionEnumItemsSource}"
                                                                    NullText="{dxdal:DataAccessUIStringId StringId=SortingTypeNone}"
                                                                    ShowCustomItems="True"
                                                                    ValueMember="Key" />
                                                            </DataTemplate>
                                                        </dxg:GridColumn.CellTemplate>
                                                    </dxg:GridColumn>
                                                    <dxg:GridColumn FieldName="SortOrder" Width="*" Header="{dxdal:DataAccessUIStringId StringId=QueryBuilderColumns_SortOrder}">
                                                        <dxg:GridColumn.EditSettings>
                                                            <dxe:SpinEditSettings AllowNullInput="True" IsFloatValue="False" MinValue="1" />
                                                        </dxg:GridColumn.EditSettings>
                                                    </dxg:GridColumn>
                                                    <dxg:GridColumn FieldName="GroupBy" Width="*" Header="{dxdal:DataAccessUIStringId StringId=QueryBuilderColumns_GroupBy}" />
                                                    <dxg:GridColumn FieldName="Aggregate" Width="*" Header="{dxdal:DataAccessUIStringId StringId=QueryBuilderColumns_Aggregate}">
                                                        <dxg:GridColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <dxe:ComboBoxEdit x:Name="PART_Editor" IsTextEditable="False" ItemsSource="{Binding Data.ColumnData, Converter={dxdaie:AggregateItemsSourceConverter}}" />
                                                            </DataTemplate>
                                                        </dxg:GridColumn.CellTemplate>
                                                    </dxg:GridColumn>
                                                </dxg:GridControl.Columns>
                                                <dxg:GridControl.View>
                                                    <dxg:TableView
                                                        AllowColumnFiltering="True"
                                                        AllowSorting="False"
                                                        EditorButtonShowMode="ShowOnlyInEditor"
                                                        EnableImmediatePosting="True"
                                                        Style="{StaticResource WizardTableViewBaseStyle}"
                                                        VerticalScrollbarVisibility="Auto">
                                                        <dxmvvm:Interaction.Behaviors>
                                                            <dxdaie:QueryGridEditorsController />
                                                        </dxmvvm:Interaction.Behaviors>
                                                    </dxg:TableView>
                                                </dxg:GridControl.View>
                                                <dxmvvm:Interaction.Behaviors>
                                                    <dxdaie:QueryGridBehavior DisplayNameProvider="{Binding DisplayNameProvider, RelativeSource={RelativeSource AncestorType={x:Type dxdadw:QueryBuilder}}}" UseQueryBuilderLight="{Binding UseQueryBuilderLight, RelativeSource={RelativeSource AncestorType={x:Type dxdadw:QueryBuilder}}}" />
                                                </dxmvvm:Interaction.Behaviors>
                                            </dxg:GridControl>
                                        </dxdo:LayoutControlItem>
                                    </dxdo:LayoutGroup>
                                </dxdo:LayoutGroup>
                            </dxdo:DockLayoutManager.LayoutRoot>
                        </dxdo:DockLayoutManager>
                        <dx:DialogFooter>
                            <Grid>
                                <UniformGrid HorizontalAlignment="Left" Columns="3">
                                    <dx:DialogButton Command="{Binding PreviewResultsCommand, RelativeSource={RelativeSource TemplatedParent}}" Content="{dxdal:DataAccessUIStringId StringId=QueryBuilderButtons_PreviewResults}" DialogResult="{x:Null}" />
                                    <dx:DialogButton Command="{Binding OnEditQueryParametersCommand, RelativeSource={RelativeSource TemplatedParent}}" Content="{dxdal:DataAccessUIStringId StringId=QueryBuilderButtons_EditParameters}" DialogResult="{x:Null}" />
                                    <dx:DialogButton
                                        Command="{Binding OnEditFilterCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                        Content="{dxdal:DataAccessUIStringId StringId=QueryBuilderButtons_Filter}"
                                        DialogResult="{x:Null}"
                                        IsEnabled="{Binding AllowEditSql, Converter={dxmvvm:BooleanNegationConverter}}" />
                                </UniformGrid>
                                <UniformGrid HorizontalAlignment="Right" Columns="2">
                                    <dx:DialogButton DialogResult="OK" />
                                    <dx:DialogButton DialogResult="Cancel" />
                                </UniformGrid>
                            </Grid>
                        </dx:DialogFooter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="dx:ScrollBarExtensions.ScrollBarMode" Value="TouchOverlap" />
    </Style>
    <Style x:Key="QueryBuilderFilterControl.DefaultStyleBase" TargetType="{x:Type dxdaie:QueryBuilderFilterControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdaie:QueryBuilderFilterControl}">
                    <Grid DataContext="{TemplateBinding EditValue}">
                        <dxlc:LayoutControl Orientation="Vertical">
                            <dxlc:LayoutGroup SelectedTabIndex="{Binding SelectedTabIndex}" View="Tabs">
                                <dxlc:LayoutGroup Header="{dxdal:DataAccessUIStringId StringId=FiltersView_Filter}">
                                    <dxdaie:QueryBuilderFilterStringEditor
                                        x:Name="FilterControl"
                                        AdditionalProperties="{Binding AdditionalProperties}"
                                        DisplayNameProvider="{Binding DisplayNameProvider}"
                                        EditValue="{Binding FilterString}"
                                        FiltersView="{Binding}"
                                        ObjectType="{x:Type dxdaie:Stub}"
                                        ParameterService="{Binding ParameterService}"
                                        ShowGroupCommandsIcon="True" />
                                </dxlc:LayoutGroup>
                                <dxlc:LayoutGroup Header="{dxdal:DataAccessUIStringId StringId=FiltersView_GroupFilter}" IsEnabled="{Binding GroupFilterEnabled, UpdateSourceTrigger=PropertyChanged}">
                                    <dxdaie:QueryBuilderFilterStringEditor
                                        x:Name="GroupFilterControl"
                                        AdditionalProperties="{Binding GroupFilterAdditionalProperties}"
                                        EditValue="{Binding GroupFilterString, UpdateSourceTrigger=PropertyChanged}"
                                        FiltersView="{Binding}"
                                        ObjectType="{x:Type dxdaie:Stub}"
                                        ParameterService="{Binding ParameterService}" />
                                </dxlc:LayoutGroup>
                            </dxlc:LayoutGroup>
                            <dxlc:LayoutGroup HorizontalAlignment="Left" Orientation="Horizontal">
                                <dxlc:LayoutItem>
                                    <dxe:CheckEdit Content="{dxdal:DataAccessUIStringId StringId=FiltersView_CheckText}" EditValue="{Binding RecordsLimitationEnabled, UpdateSourceTrigger=PropertyChanged}" />
                                </dxlc:LayoutItem>
                                <dxlc:LayoutItem>
                                    <dxe:TextEdit Width="50" EditValue="{Binding TopRecords, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding TopEditEnabled, UpdateSourceTrigger=PropertyChanged}" />
                                </dxlc:LayoutItem>
                                <dxlc:LayoutItem Label="{dxdal:DataAccessUIStringId StringId=FiltersView_TopAndSkipText}">
                                    <dxe:TextEdit Width="50" EditValue="{Binding SkipRecords, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding SkipEditEnabled, UpdateSourceTrigger=PropertyChanged}" />
                                </dxlc:LayoutItem>
                            </dxlc:LayoutGroup>
                            <dxlc:LayoutItem>
                                <dxe:CheckEdit Content="Select only distinct values" EditValue="{Binding Distinct, UpdateSourceTrigger=PropertyChanged}" />
                            </dxlc:LayoutItem>
                        </dxlc:LayoutControl>
                        <dx:DialogFooter>
                            <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                <dx:DialogButton Content="{dxdal:DataAccessUIStringId StringId=Button_OK}" DialogResult="OK">
                                    <dx:DialogButton.Command>
                                        <MultiBinding Converter="{dxdaie:CommandsToCommandConverter}">
                                            <Binding ElementName="FilterControl" Path="ApplyFilterCommand" />
                                            <Binding ElementName="GroupFilterControl" Path="ApplyFilterCommand" />
                                        </MultiBinding>
                                    </dx:DialogButton.Command>
                                </dx:DialogButton>
                                <dx:DialogButton Content="{dxdal:DataAccessUIStringId StringId=Button_Cancel}" DialogResult="Cancel" />
                            </StackPanel>
                        </dx:DialogFooter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="QueryBuilderFilterControlEditor.DefaultStyleBase" BasedOn="{StaticResource FilterControlEditorEx.DefaultStyleBase}" TargetType="{x:Type dxdaie:QueryBuilderFilterControlEditor}">
        <Setter Property="ParametersColumnTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl
                        x:Name="PART_Parameters"
                        Margin="0,2,3,2"
                        VerticalAlignment="Center"
                        dxb:BarManager.MenuShowMouseButton="LeftButton"
                        Content="{Binding Path=Operator, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxdaie:QueryBuilderFilterControlEditor}}, Converter={dxdaie:OperandParameterToParameterNameConverter}}"
                        Cursor="Hand"
                        Foreground="Blue"
                        Visibility="{Binding Path=OperandTypeButtonState, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxdaie:QueryBuilderFilterControlEditor}}, Converter={dxdaie:NullableBoolToVisibilityConverter VisibleState=True}, UpdateSourceTrigger=PropertyChanged}">
                        <ContentControl.Template>
                            <ControlTemplate>
                                <TextBlock Text="{Binding Content, RelativeSource={RelativeSource TemplatedParent}, TargetNullValue={dxdal:DataAccessUIStringId StringId=QueryFilter_SelectParameter}}">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <Trigger Property="Text" Value="{dxdal:DataAccessUIStringId StringId=QueryFilter_SelectParameter}">
                                                    <Setter Property="Foreground" Value="Gray" />
                                                    <Setter Property="TextDecorations" Value="Underline" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </ControlTemplate>
                        </ContentControl.Template>
                        <dxb:BarManager.DXContextMenu>
                            <dxb:PopupMenu ItemLinksSource="{Binding QueryParametersColumn, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxdaie:QueryBuilderFilterControlEditor}}}">
                                <dxb:PopupMenu.ItemTemplateSelector>
                                    <dxdaie:PopUpMenuItemTemplateSelector>
                                        <dxdaie:PopUpMenuItemTemplateSelector.ItemTemplate>
                                            <DataTemplate>
                                                <ContentControl>
                                                    <dxb:BarButtonItem Command="{Binding FilterColumnCommand}" CommandParameter="{Binding Parameter}" Content="{Binding FilterColumn.ColumnCaption}" />
                                                </ContentControl>
                                            </DataTemplate>
                                        </dxdaie:PopUpMenuItemTemplateSelector.ItemTemplate>

                                        <dxdaie:PopUpMenuItemTemplateSelector.SubItemTemplate>
                                            <DataTemplate>
                                                <ContentControl>
                                                    <dxb:BarSubItem Content="{dxdal:DataAccessUIStringId StringId=QueryFilter_BindTo}" ItemLinksSource="{Binding ParametersColumn, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxdaie:QueryBuilderFilterControlEditor}}}">
                                                        <dxb:BarSubItem.ItemTemplate>
                                                            <DataTemplate>
                                                                <ContentControl>
                                                                    <dxb:BarButtonItem Command="{Binding FilterColumnCommand}" CommandParameter="{Binding Parameter}" Content="{Binding FilterColumn.ColumnCaption}" />
                                                                </ContentControl>
                                                            </DataTemplate>
                                                        </dxb:BarSubItem.ItemTemplate>
                                                    </dxb:BarSubItem>
                                                </ContentControl>
                                            </DataTemplate>
                                        </dxdaie:PopUpMenuItemTemplateSelector.SubItemTemplate>
                                    </dxdaie:PopUpMenuItemTemplateSelector>
                                </dxb:PopupMenu.ItemTemplateSelector>
                            </dxb:PopupMenu>
                        </dxb:BarManager.DXContextMenu>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="QueryParameterEditorTemplate" Value="{Binding Path=(dxdaie:QueryBuilderFilterStringEditor.Editor).QueryParameterEditorTemplate, RelativeSource={RelativeSource Self}}" />
        <Setter Property="ReportParameterEditorTemplate" Value="{Binding Path=(dxdaie:QueryBuilderFilterStringEditor.Editor).ReportParameterEditorTemplate, RelativeSource={RelativeSource Self}}" />
    </Style>
    <Style x:Key="QueryParameterEditor.DefaultStyleBase" TargetType="{x:Type dxdaie:QueryParameterEditor}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdaie:QueryParameterEditor}">
                    <Grid>
                        <dxdaie:ReportParameterPropertyGridControl ReportParameter="{TemplateBinding EditValue}" />
                        <dx:DialogFooter>
                            <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                <dx:DialogButton DialogResult="OK" />
                                <dx:DialogButton DialogResult="Cancel" />
                            </StackPanel>
                        </dx:DialogFooter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ReportParameterEditor.DefaultStyleBase" TargetType="{x:Type dxdaie:ReportParameterEditor}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdaie:ReportParameterEditor}">
                    <Grid>
                        <dxdaie:ReportParameterPropertyGridControl ReportParameter="{TemplateBinding EditValue}" />
                        <dx:DialogFooter>
                            <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                <dx:DialogButton Command="{Binding SaveCommand, RelativeSource={RelativeSource TemplatedParent}}" DialogResult="OK" />
                                <dx:DialogButton DialogResult="Cancel" />
                            </StackPanel>
                        </dx:DialogFooter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ReportParameterEditor2.DefaultStyleBase" TargetType="{x:Type dxdaie:ReportParameterEditor2}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdaie:ReportParameterEditor2}">
                    <dxdaie:ReportParameterPropertyGridControl ReportParameter="{TemplateBinding Parameter}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ReportParameterPropertyGridControl.DefaultStyleBase" TargetType="{x:Type dxdaie:ReportParameterPropertyGridControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdaie:ReportParameterPropertyGridControl}">
                    <dxprg:PropertyGridControl
                        Margin="12"
                        Background="Transparent"
                        BorderThickness="0"
                        ExpandButtonsVisibility="Collapsed"
                        ExpandCategoriesWhenSelectedObjectChanged="True"
                        HighlightingMode="None"
                        RowPadding="0,3,0,3"
                        ScrollViewer.VerticalScrollBarVisibility="Auto"
                        SelectedObject="{Binding ReportParameter, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                        ShowCategories="Hidden"
                        ShowGridLines="False"
                        ShowMenu="OnMenuButtonClick"
                        ShowMenuButtonInRows="False"
                        ShowSearchBox="False"
                        ShowToolPanel="False"
                        SortMode="NoSort">
                        <dxprg:PropertyGridControl.PropertyDefinitions>
                            <dxprg:PropertyDefinition EditorHorizontalAlignment="Left" Type="{x:Type sys:Boolean}" />
                            <dxprg:PropertyDefinition IsReadOnly="False" Path="Description">
                                <dxprg:PropertyDefinition.EditSettings>
                                    <dxe:MemoEditSettings ShowIcon="False" TextWrapping="Wrap" />
                                </dxprg:PropertyDefinition.EditSettings>
                            </dxprg:PropertyDefinition>
                            <dxprg:PropertyDefinition IsReadOnly="False" Path="Type">
                                <dxprg:PropertyDefinition.CellTemplate>
                                    <DataTemplate>
                                        <dxe:ComboBoxEdit
                                            Name="PART_Editor"
                                            DisplayMember="Value"
                                            EditValue="{Binding Value, UpdateSourceTrigger=PropertyChanged}"
                                            IsTextEditable="False"
                                            ItemsSource="{x:Static dxdai:ListsWithNamesValues.ParameterTypes}"
                                            ValueMember="Key" />
                                    </DataTemplate>
                                </dxprg:PropertyDefinition.CellTemplate>
                            </dxprg:PropertyDefinition>
                            <dxprg:PropertyDefinition IsReadOnly="False" Path="Value">
                                <dxprg:PropertyDefinition.CellTemplateSelector>
                                    <dxdaie:ParameterPropertyGridTemplateSelector>
                                        <dxdaie:ParameterPropertyGridTemplateSelector.DateTimeTemplate>
                                            <DataTemplate>
                                                <dxe:DateEdit x:Name="PART_Editor" IsTextEditable="False" />
                                            </DataTemplate>
                                        </dxdaie:ParameterPropertyGridTemplateSelector.DateTimeTemplate>
                                        <dxdaie:ParameterPropertyGridTemplateSelector.CheckBoxTemplate>
                                            <DataTemplate>
                                                <dxe:CheckEdit x:Name="PART_Editor" />
                                            </DataTemplate>
                                        </dxdaie:ParameterPropertyGridTemplateSelector.CheckBoxTemplate>
                                        <dxdaie:ParameterPropertyGridTemplateSelector.TextEditTemplate>
                                            <DataTemplate>
                                                <dxe:TextEdit x:Name="PART_Editor" />
                                            </DataTemplate>
                                        </dxdaie:ParameterPropertyGridTemplateSelector.TextEditTemplate>
                                        <dxdaie:ParameterPropertyGridTemplateSelector.MultiValueTemplate>
                                            <DataTemplate>
                                                <dxe:ComboBoxEdit x:Name="PART_Editor" AllowDefaultButton="False" ValidateOnEnterKeyPressed="False">
                                                    <dxe:ComboBoxEdit.StyleSettings>
                                                        <dxe:TokenComboBoxStyleSettings EnableTokenWrapping="False" NewTokenPosition="Far" />
                                                    </dxe:ComboBoxEdit.StyleSettings>
                                                </dxe:ComboBoxEdit>
                                            </DataTemplate>
                                        </dxdaie:ParameterPropertyGridTemplateSelector.MultiValueTemplate>
                                        <dxdaie:ParameterPropertyGridTemplateSelector.NumericTemplate>
                                            <DataTemplate>
                                                <dxe:TextEdit Name="PART_Editor" MaskType="Numeric" />
                                            </DataTemplate>
                                        </dxdaie:ParameterPropertyGridTemplateSelector.NumericTemplate>
                                    </dxdaie:ParameterPropertyGridTemplateSelector>
                                </dxprg:PropertyDefinition.CellTemplateSelector>
                            </dxprg:PropertyDefinition>
                        </dxprg:PropertyGridControl.PropertyDefinitions>
                    </dxprg:PropertyGridControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SqlQueryEditor.DefaultStyleBase" TargetType="{x:Type dxdais:SqlQueryEditor}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdais:SqlQueryEditor}">
                    <ContentControl Content="{TemplateBinding Context}" ContentTemplateSelector="{StaticResource templateSelector}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="WizardTitle.DefaultStyleBase" TargetType="{x:Type dxdadwn:WizardTitle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdadwn:WizardTitle}">
                    <Grid Margin="-1,-1,-1,0">
                        <dxe:TextEdit IsHitTestVisible="False" IsReadOnly="True" />
                        <dx:BackgroundPanel Margin="1" />
                        <TextBlock Padding="12,15" Text="{TemplateBinding Title}" TextWrapping="Wrap" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ChooseEFStoredProceduresEditor.DefaultStyleBase" TargetType="{x:Type dxdaie:ChooseEFStoredProceduresEditor}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdaie:ChooseEFStoredProceduresEditor}">
                    <dxe:ListBoxEdit
                        Margin="10"
                        EditValue="{Binding EditValue, RelativeSource={RelativeSource TemplatedParent}}"
                        ItemsSource="{TemplateBinding ItemsSource}"
                        SelectionMode="Extended" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DataSourceWizardControlBase.DefaultStyleBase" TargetType="{x:Type dxdadw:DataSourceWizardControlBase}">
        <Setter Property="PageTemplateSelector">
            <Setter.Value>
                <dxdadw:DataSourceWizardPageTemplateSelector />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdadw:DataSourceWizardControlBase}">
                    <Grid dxe:ValidationService.IsValidationContainer="True">
                        <Grid.Resources>
                            <Style TargetType="dx:ThemedWindowDialogButtonsControl">
                                <Setter Property="Margin" Value="-2,0" />
                            </Style>
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <dxdadwn:WizardTitle Title="{Binding WizardNavigationModel.CurrentPage.Description, RelativeSource={RelativeSource TemplatedParent}}" ClipToBounds="True" />
                        <ContentControl
                            Grid.Row="1"
                            ClipToBounds="True"
                            Content="{Binding WizardNavigationModel.CurrentPage, RelativeSource={RelativeSource TemplatedParent}}"
                            ContentTemplateSelector="{TemplateBinding PageTemplateSelector}" />
                        <ContentControl Grid.Row="2" Content="{Binding WizardNavigationModel.CurrentPage, RelativeSource={RelativeSource TemplatedParent}}">
                            <ContentControl.ContentTemplate>
                                <Binding Converter="{dxmvvm:BooleanToObjectConverter FalseValue={StaticResource footerTemplate}, TrueValue={StaticResource emptyFooterTemplate}}" Path="WizardNavigationModel.CurrentPage.UseCustomFooter" RelativeSource="{RelativeSource TemplatedParent}" />
                            </ContentControl.ContentTemplate>
                        </ContentControl>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MessageBoxServiceTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dx:DXMessageBoxService />
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SplashScreenServiceTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dx:DXSplashScreenService SplashScreenStartupLocation="CenterOwner">
                            <dx:DXSplashScreenService.ViewTemplate>
                                <DataTemplate>
                                    <dx:WaitIndicator DeferedVisibility="True" />
                                </DataTemplate>
                            </dx:DXSplashScreenService.ViewTemplate>
                        </dx:DXSplashScreenService>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="OpenFileDialogServiceTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxmvvm:OpenFileDialogService />
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="QueryBuilderDialogServiceTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dx:DialogService>
                            <dx:DialogService.DialogStyle>
                                <Style BasedOn="{StaticResource DXDialogWindowStyleBase}" TargetType="{x:Type dx:DXDialogWindow}">
                                    <Setter Property="Width" Value="1280" />
                                    <Setter Property="Height" Value="720" />
                                </Style>
                            </dx:DialogService.DialogStyle>
                            <dx:DialogService.ViewTemplateSelector>
                                <dxdai:QueryBuilderDialogTemplateSelector>
                                    <dxdai:QueryBuilderDialogTemplateSelector.QueryBuilderTemplate>
                                        <DataTemplate>
                                            <dxdadw:QueryBuilder
                                                Margin="12,12,12,0"
                                                DisplayNameProvider="{Binding DisplayNameProvider}"
                                                EditValue="{Binding ViewModel}"
                                                ParameterService="{Binding ParameterService}"
                                                UseLayoutRounding="True"
                                                UseLegacyExpressionEditor="{Binding UseLegacyExpressionEditor}"
                                                UseQueryBuilderLight="{Binding UseQueryBuilderLight}"
                                                View="{Binding UseDiagramView, Converter={dxmvvm:BooleanToObjectConverter TrueValue={dxdaqb:DiagramQueryBuilderView}, FalseValue={dxdaqb:LegacyQueryBuilderView}}}" />
                                        </DataTemplate>
                                    </dxdai:QueryBuilderDialogTemplateSelector.QueryBuilderTemplate>
                                    <dxdai:QueryBuilderDialogTemplateSelector.FederatedQueryBuilderTemplate>
                                        <DataTemplate>
                                            <dxdaid:QueryBuilderControl Margin="12,12,12,0" Model="{Binding}" UseLayoutRounding="True" />
                                        </DataTemplate>
                                    </dxdai:QueryBuilderDialogTemplateSelector.FederatedQueryBuilderTemplate>
                                </dxdai:QueryBuilderDialogTemplateSelector>
                            </dx:DialogService.ViewTemplateSelector>
                        </dx:DialogService>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="PreviewDialogServiceTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dx:DialogService>
                            <dx:DialogService.DialogStyle>
                                <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="{x:Type dx:ThemedWindow}">
                                    <Setter Property="Width" Value="800" />
                                    <Setter Property="Height" Value="500" />
                                </Style>
                            </dx:DialogService.DialogStyle>
                            <dx:DialogService.ViewTemplate>
                                <DataTemplate>
                                    <dxdaie:DataPreviewControl Data="{Binding}" />
                                </DataTemplate>
                            </dx:DialogService.ViewTemplate>
                        </dx:DialogService>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="PasswordDialogServiceTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dx:DialogService>
                            <dx:DialogService.DialogStyle>
                                <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="{x:Type dx:ThemedWindow}">
                                    <Setter Property="Width" Value="400" />
                                    <Setter Property="SizeToContent" Value="Height" />
                                </Style>
                            </dx:DialogService.DialogStyle>
                            <dx:DialogService.ViewTemplate>
                                <DataTemplate>
                                    <dxdadwn:PasswordRequestDialog EditValue="{Binding}" />
                                </DataTemplate>
                            </dx:DialogService.ViewTemplate>
                        </dx:DialogService>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ChooseEFStoredProceduresDialogServiceTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dx:DialogService>
                            <dx:DialogService.DialogStyle>
                                <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="{x:Type dx:ThemedWindow}">
                                    <Setter Property="Width" Value="350" />
                                    <Setter Property="Height" Value="400" />
                                    <Setter Property="ResizeMode" Value="CanResize" />
                                </Style>
                            </dx:DialogService.DialogStyle>
                            <dx:DialogService.ViewTemplate>
                                <DataTemplate>
                                    <dxdaie:ChooseEFStoredProceduresEditor EditValue="{Binding EditValue}" ItemsSource="{Binding ItemsSource}" />
                                </DataTemplate>
                            </dx:DialogService.ViewTemplate>
                        </dx:DialogService>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MasterDetailDialogServiceTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dx:DialogService>
                            <dx:DialogService.DialogStyle>
                                <Style BasedOn="{StaticResource CustomFooterThemedWindowDialogStyle}" TargetType="{x:Type dx:ThemedWindow}">
                                    <Setter Property="Width" Value="600" />
                                    <Setter Property="Height" Value="430" />
                                    <Setter Property="MinWidth" Value="420" />
                                    <Setter Property="MinHeight" Value="240" />
                                    <Setter Property="ResizeMode" Value="CanResize" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=(dx:ThemeManager.IsTouchlineTheme), RelativeSource={RelativeSource Self}}" Value="True">
                                            <Setter Property="Width" Value="1350" />
                                            <Setter Property="Height" Value="750" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=(dx:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource Self}}" Value="True">
                                            <Setter Property="Width" Value="1350" />
                                            <Setter Property="Height" Value="750" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </dx:DialogService.DialogStyle>
                            <dx:DialogService.ViewTemplate>
                                <DataTemplate>
                                    <dxdaie:MasterDetailEditor />
                                </DataTemplate>
                            </dx:DialogService.ViewTemplate>
                        </dx:DialogService>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FilterEditorDialogServiceTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dx:DialogService>
                            <dx:DialogService.DialogStyle>
                                <Style BasedOn="{StaticResource LegacyThemedWindowDialogStyleBase}" TargetType="{x:Type dx:ThemedWindow}">
                                    <Setter Property="Width" Value="580" />
                                    <Setter Property="Height" Value="290" />
                                    <Setter Property="MinWidth" Value="210" />
                                    <Setter Property="MinHeight" Value="140" />
                                    <Setter Property="ResizeMode" Value="CanResize" />
                                </Style>
                            </dx:DialogService.DialogStyle>
                            <dx:DialogService.ViewTemplate>
                                <DataTemplate>
                                    <dxdaie:FilterStringEditor
                                        EditValue="{Binding FilterString}"
                                        ExistingParameters="{Binding ExistingParameters}"
                                        FilterPresenter="{Binding FilterPresenter}"
                                        ParameterService="{Binding ParameterService}"
                                        Properties="{Binding Properties}">
                                        <dxmvvm:Interaction.Behaviors>
                                            <dxdaie:FilterStringApplier Applier="{Binding FilterEditorApplier}" />
                                        </dxmvvm:Interaction.Behaviors>
                                    </dxdaie:FilterStringEditor>
                                </DataTemplate>
                            </dx:DialogService.ViewTemplate>
                        </dx:DialogService>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DataSourceWizardControl.DefaultStyleBase" BasedOn="{StaticResource DataSourceWizardControlBase.DefaultStyleBase}" TargetType="{x:Type dxdadw:DataSourceWizardControl}" />
    <Style x:Key="MasterDetailEditor.DefaultStyleBase" TargetType="{x:Type dxdaie:MasterDetailEditor}">
        <Setter Property="MasterDetailEditorViewModel" Value="{Binding}" />
        <Setter Property="UseLegacyMasterDetailEditor" Value="{Binding UseLegacyMasterDetailEditor}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdaie:MasterDetailEditor}">
                    <Grid dxpn:GridExtensions.RowDefinitions="*, auto">
                        <ContentPresenter Content="{TemplateBinding View}" DataContext="{Binding}" />
                        <dx:ThemedWindowDialogButtonsControl Grid.Row="1">
                            <dxe:HyperlinkEdit
                                Grid.Row="1"
                                HorizontalAlignment="Left"
                                Command="{Binding View.RemoveInvalidRelationsCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                Foreground="Red"
                                Text="{Binding View.InvalidRelations.Count, Converter={dxdaie:InvalidRelationsToErrorTextConverter}, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}, FallbackValue=0}"
                                ToolTipService.IsEnabled="False"
                                Visibility="{Binding View.InvalidRelations.Count, Converter={dxdaie:InvalidRelationsToLinkVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay, FallbackValue=0}" />
                            <dx:ThemedWindowDialogButton
                                HorizontalAlignment="Right"
                                Content="{dxdal:DataAccessUIStringId StringId=Button_OK}"
                                DialogResult="OK"
                                IsDefault="True" />
                            <dx:ThemedWindowDialogButton HorizontalAlignment="Right" Content="{dxdal:DataAccessUIStringId StringId=Button_Cancel}" DialogResult="Cancel" />
                        </dx:ThemedWindowDialogButtonsControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RelationGroupEditor.DefaultStyleBase" TargetType="{x:Type dxdaie:RelationGroupEditor}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdaie:RelationGroupEditor}">
                    <StackPanel HorizontalAlignment="Left" DataContext="{TemplateBinding RelationGroup}" Orientation="Vertical">
                        <TextBlock Style="{StaticResource InvalidConditionTextBlockStyle}" Text="{Binding Name}" />
                        <ItemsControl ItemsSource="{Binding Relations}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <dxdaie:RelationEditor Relation="{Binding}" />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        <Button dxb:BarManager.MenuShowMouseButton="LeftButton">
                            <dx:DXImage
                                Margin="2"
                                HorizontalAlignment="Left"
                                Source="{Binding Source=Add, Converter={dxdai:ImageNameToSourceConverter Folder=JoinEditor}}"
                                Stretch="None"
                                Style="{StaticResource ImageOpacityTrigger}" />
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <ContentPresenter Content="{TemplateBinding Content}" />
                                </ControlTemplate>
                            </Button.Template>
                            <dxb:BarManager.DXContextMenu>
                                <dxb:PopupMenu MinWidth="100" ItemLinksSource="{Binding AvailableDetailItems}">
                                    <dxb:PopupMenu.ItemStyle>
                                        <Style TargetType="{x:Type dxb:BarButtonItem}">
                                            <Setter Property="Content" Value="{Binding Name}" />
                                            <Setter Property="Command" Value="{Binding Command}" />
                                        </Style>
                                    </dxb:PopupMenu.ItemStyle>
                                </dxb:PopupMenu>
                            </dxb:BarManager.DXContextMenu>
                        </Button>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RelationEditor.DefaultStyleBase" TargetType="{x:Type dxdaie:RelationEditor}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdaie:RelationEditor}">
                    <StackPanel DataContext="{TemplateBinding Relation}" Orientation="Horizontal">
                        <Button Command="{Binding RemoveRelationCommand}">
                            <dx:DXImage
                                Margin="2"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                Source="{Binding Source=Remove, Converter={dxdai:ImageNameToSourceConverter Folder=JoinEditor}}"
                                Stretch="None"
                                Style="{StaticResource ImageOpacityTrigger}" />
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <ContentPresenter Content="{TemplateBinding Content}" />
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                        <StackPanel HorizontalAlignment="Left" Orientation="Vertical">
                            <TextBlock Style="{StaticResource InvalidConditionTextBlockStyle}" Text="{Binding Name}" />
                            <ItemsControl ItemsSource="{Binding Conditions}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <dxdaie:ConditionEditor
                                            AllowChangeMasterTable="True"
                                            AllowChangeOperatorType="False"
                                            AllowCopyRightTable="True"
                                            Condition="{Binding}" />
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ConditionEditor.DefaultStyleBase" TargetType="{x:Type dxdaie:ConditionEditor}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdaie:ConditionEditor}">
                    <dx:BackgroundPanel>
                        <StackPanel DataContext="{TemplateBinding Condition}" Orientation="Horizontal">
                            <Button Command="{Binding RemoveConditionCommand}">
                                <dx:DXImage
                                    Margin="2"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Source="{Binding Source=Remove, Converter={dxdai:ImageNameToSourceConverter Folder=JoinEditor}}"
                                    Stretch="None"
                                    Style="{StaticResource ImageOpacityTrigger}" />
                                <Button.Template>
                                    <ControlTemplate TargetType="Button">
                                        <ContentPresenter Content="{TemplateBinding Content}" />
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.Resources>
                                    <Style x:Key="ContextMenuItemStyle" TargetType="{x:Type dxb:BarButtonItem}">
                                        <Setter Property="Content" Value="{Binding Name}" />
                                        <Setter Property="Command" Value="{Binding Command}" />
                                    </Style>
                                    <dxmvvm:ObjectToObjectConverter x:Key="StringValueToVisibilityConverter">
                                        <dxmvvm:ObjectToObjectConverter.DefaultTarget>
                                            <Visibility>Visible</Visibility>
                                        </dxmvvm:ObjectToObjectConverter.DefaultTarget>
                                        <dxmvvm:MapItem Source="{x:Null}">
                                            <dxmvvm:MapItem.Target>
                                                <Visibility>Collapsed</Visibility>
                                            </dxmvvm:MapItem.Target>
                                        </dxmvvm:MapItem>
                                    </dxmvvm:ObjectToObjectConverter>
                                    <dxb:PopupMenu
                                        x:Key="LeftTableMenu"
                                        MinWidth="100"
                                        ItemLinksSource="{Binding LeftTableNames}"
                                        ItemStyle="{StaticResource ContextMenuItemStyle}" />
                                    <dxb:PopupMenu x:Key="OperatorTypeMenu" MinWidth="100" ItemLinksSource="{Binding OperatorTypeMenuItems}">
                                        <dxb:PopupMenu.ItemStyle>
                                            <Style BasedOn="{StaticResource ContextMenuItemStyle}" TargetType="{x:Type dxb:BarButtonItem}">
                                                <Setter Property="Glyph" Value="{Binding Value, Converter={dxdai:ImageNameToSourceConverter Folder=JoinEditor}}" />
                                            </Style>
                                        </dxb:PopupMenu.ItemStyle>
                                    </dxb:PopupMenu>
                                </StackPanel.Resources>
                                <TextBlock dxb:BarManager.DXContextMenu="{Binding AllowChangeMasterTable, Converter={dxmvvm:BooleanToObjectConverter TrueValue={StaticResource LeftTableMenu}, FalseValue={x:Null}}, RelativeSource={RelativeSource TemplatedParent}}" dxb:BarManager.MenuShowMouseButton="LeftRightButton" Text="{Binding LeftTableName, StringFormat='[{0}]', TargetNullValue={dxdal:DataAccessUIStringId StringId=JoinEditorEmptyTableText}}">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Opacity" Value="1" />
                                            <Setter Property="TextDecorations" Value="None" />
                                            <Style.Triggers>
                                                <DataTrigger Value="False">
                                                    <DataTrigger.Binding>
                                                        <MultiBinding Converter="{dxdai:ConditionEditorTableBrushConverter}">
                                                            <Binding Path="Tables" />
                                                            <Binding Path="LeftTableName" />
                                                        </MultiBinding>
                                                    </DataTrigger.Binding>
                                                    <DataTrigger.Setters>
                                                        <Setter Property="Foreground" Value="{DynamicResource {dxdat:LWKey ConditionControl.ErrorColor}}" />
                                                    </DataTrigger.Setters>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding LeftTableName}" Value="{x:Null}">
                                                    <Setter Property="Opacity" Value="0.62" />
                                                </DataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                                                        <Condition Binding="{Binding AllowChangeMasterTable, RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                                                    </MultiDataTrigger.Conditions>
                                                    <MultiDataTrigger.Setters>
                                                        <Setter Property="TextDecorations" Value="Underline" />
                                                    </MultiDataTrigger.Setters>
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <TextBlock Margin="5,0" Text="." Visibility="{Binding LeftTableName, Converter={StaticResource StringValueToVisibilityConverter}}" />
                                <TextBlock dxb:BarManager.MenuShowMouseButton="LeftRightButton" Text="{Binding LeftColumnName, StringFormat='[{0}]', TargetNullValue={dxdal:DataAccessUIStringId StringId=JoinEditorEmptyColumnText}}" Visibility="{Binding LeftTableName, Converter={StaticResource StringValueToVisibilityConverter}}">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Opacity" Value="1" />
                                            <Setter Property="TextDecorations" Value="None" />
                                            <Style.Triggers>
                                                <DataTrigger Value="False">
                                                    <DataTrigger.Binding>
                                                        <MultiBinding Converter="{dxdai:ConditionEditorColumnBrushConverter}">
                                                            <Binding Path="Tables" />
                                                            <Binding Path="LeftColumnName" />
                                                            <Binding Path="LeftTableName" />
                                                        </MultiBinding>
                                                    </DataTrigger.Binding>
                                                    <DataTrigger.Setters>
                                                        <Setter Property="Foreground" Value="{DynamicResource {dxdat:LWKey ConditionControl.ErrorColor}}" />
                                                    </DataTrigger.Setters>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding LeftColumnName}" Value="{x:Null}">
                                                    <Setter Property="Opacity" Value="0.62" />
                                                </DataTrigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="TextDecorations" Value="Underline" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                    <dxb:BarManager.DXContextMenu>
                                        <dxb:PopupMenu MinWidth="100" ItemLinksSource="{Binding LeftColumnNames}" ItemStyle="{StaticResource ContextMenuItemStyle}" />
                                    </dxb:BarManager.DXContextMenu>
                                </TextBlock>
                                <dx:DXImage
                                    Margin="5,0"
                                    dxb:BarManager.DXContextMenu="{Binding AllowChangeOperatorType, Converter={dxmvvm:BooleanToObjectConverter TrueValue={StaticResource OperatorTypeMenu}, FalseValue={x:Null}}, RelativeSource={RelativeSource TemplatedParent}}"
                                    dxb:BarManager.MenuShowMouseButton="LeftButton"
                                    Source="{Binding ConditionType, Converter={dxdai:ImageNameToSourceConverter Folder=JoinEditor}}" />
                                <TextBlock dxb:BarManager.MenuShowMouseButton="LeftRightButton" Text="{Binding RightTableName, StringFormat='[{0}]', TargetNullValue={dxdal:DataAccessUIStringId StringId=JoinEditorEmptyTableText}}">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Opacity" Value="1" />
                                            <Setter Property="TextDecorations" Value="None" />
                                            <Style.Triggers>
                                                <DataTrigger Value="False">
                                                    <DataTrigger.Binding>
                                                        <MultiBinding Converter="{dxdai:ConditionEditorTableBrushConverter}">
                                                            <Binding Path="Tables" />
                                                            <Binding Path="RightTableName" />
                                                        </MultiBinding>
                                                    </DataTrigger.Binding>
                                                    <DataTrigger.Setters>
                                                        <Setter Property="Foreground" Value="{DynamicResource {dxdat:LWKey ConditionControl.ErrorColor}}" />
                                                    </DataTrigger.Setters>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding RightTableName}" Value="{x:Null}">
                                                    <Setter Property="Opacity" Value="0.62" />
                                                </DataTrigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="TextDecorations" Value="Underline" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                    <dxb:BarManager.DXContextMenu>
                                        <dxb:PopupMenu MinWidth="100" ItemLinksSource="{Binding RightTableNames}" ItemStyle="{StaticResource ContextMenuItemStyle}" />
                                    </dxb:BarManager.DXContextMenu>
                                </TextBlock>
                                <TextBlock Margin="5,0" Text="." Visibility="{Binding RightTableName, Converter={StaticResource StringValueToVisibilityConverter}}" />
                                <TextBlock dxb:BarManager.MenuShowMouseButton="LeftRightButton" Text="{Binding RightColumnName, StringFormat='[{0}]', TargetNullValue={dxdal:DataAccessUIStringId StringId=JoinEditorEmptyColumnText}}" Visibility="{Binding RightTableName, Converter={StaticResource StringValueToVisibilityConverter}}">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Opacity" Value="1" />
                                            <Setter Property="TextDecorations" Value="None" />
                                            <Style.Triggers>
                                                <DataTrigger Value="False">
                                                    <DataTrigger.Binding>
                                                        <MultiBinding Converter="{dxdai:ConditionEditorColumnBrushConverter}">
                                                            <Binding Path="Tables" />
                                                            <Binding Path="RightColumnName" />
                                                            <Binding Path="RightTableName" />
                                                        </MultiBinding>
                                                    </DataTrigger.Binding>
                                                    <DataTrigger.Setters>
                                                        <Setter Property="Foreground" Value="{DynamicResource {dxdat:LWKey ConditionControl.ErrorColor}}" />
                                                    </DataTrigger.Setters>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding RightColumnName}" Value="{x:Null}">
                                                    <Setter Property="Opacity" Value="0.62" />
                                                </DataTrigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="TextDecorations" Value="Underline" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                    <dxb:BarManager.DXContextMenu>
                                        <dxb:PopupMenu MinWidth="100" ItemLinksSource="{Binding RightColumnNames}" ItemStyle="{StaticResource ContextMenuItemStyle}" />
                                    </dxb:BarManager.DXContextMenu>
                                </TextBlock>
                            </StackPanel>
                        </StackPanel>
                    </dx:BackgroundPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="QueryBuilderFilterStringEditor.DefaultStyleBase" TargetType="{x:Type dxdaie:QueryBuilderFilterStringEditor}">
        <Setter Property="Template" Value="{dxdai:FilterStringEditorControlTemplateSelector LegacyTemplate={StaticResource legacyTemplate}, Template={StaticResource template}}" />
        <Setter Property="ReportParameterEditorTemplate" Value="{StaticResource newExternalParameterEditorDialogServiceTemplate}" />
        <Setter Property="QueryParameterEditorTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dx:DialogService DialogStyle="{StaticResource newParameterEditorWindowStyle}" DialogWindowStartupLocation="CenterOwner">
                            <dx:DialogService.ViewTemplate>
                                <DataTemplate>
                                    <dxdaie:QueryParameterEditor EditValue="{Binding QueryParameter}" />
                                </DataTemplate>
                            </dx:DialogService.ViewTemplate>
                        </dx:DialogService>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ParameterEditor.DefaultStyleBase" TargetType="{x:Type dxdaie:ParameterEditor}">
        <Setter Property="ReportParameterEditorTemplate" Value="{StaticResource newExternalParameterEditorDialogServiceTemplate}" />
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxb:ToolBarControl
                        AllowCustomizationMenu="False"
                        AllowQuickCustomization="False"
                        ShowBackground="False"
                        ShowDragWidget="False">
                        <dxb:BarStaticItem BarItemDisplayMode="Content" Content="{Binding Path=(dxdaie:ParameterEditor.Editor).Title, RelativeSource={RelativeSource Self}}" ShowBorder="False">
                            <dxb:BarStaticItem.ContentTemplate>
                                <DataTemplate>
                                    <TextBlock FontWeight="Bold" Text="{Binding}" />
                                </DataTemplate>
                            </dxb:BarStaticItem.ContentTemplate>
                        </dxb:BarStaticItem>
                        <dxb:BarButtonItem
                            Alignment="Far"
                            BarItemDisplayMode="Default"
                            Command="{Binding Path=(dxdaie:ParameterEditor.Editor).MoveUpCommand, RelativeSource={RelativeSource Self}}"
                            Glyph="{dx:SvgImageSource Uri={dx:DataAccessResource Images/ArrowUp.svg}}" />
                        <dxb:BarButtonItem
                            Alignment="Far"
                            BarItemDisplayMode="Default"
                            Command="{Binding Path=(dxdaie:ParameterEditor.Editor).MoveDownCommand, RelativeSource={RelativeSource Self}}"
                            Glyph="{dx:SvgImageSource Uri={dx:DataAccessResource Images/ArrowDown.svg}}" />
                        <dxb:BarItemSeparator Alignment="Far" />
                        <dxb:BarButtonItem
                            Alignment="Far"
                            BarItemDisplayMode="Default"
                            Command="{Binding Path=(dxdaie:ParameterEditor.Editor).AddCommand, RelativeSource={RelativeSource Self}}"
                            Glyph="{dx:SvgImageSource Uri={dx:DataAccessResource Images/Add.svg}}" />
                        <dxb:BarButtonItem
                            Alignment="Far"
                            BarItemDisplayMode="Default"
                            Command="{Binding Path=(dxdaie:ParameterEditor.Editor).RemoveCommand, RelativeSource={RelativeSource Self}}"
                            Glyph="{dx:SvgImageSource Uri={dx:DataAccessResource Images/Trash.svg}}" />

                    </dxb:ToolBarControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ValidationRulesCollection">
            <Setter.Value>
                <dxdaie:ValidationRulesCollection>
                    <dxdaie:ParameterNameValidationRule ColumnName="Name" />
                </dxdaie:ValidationRulesCollection>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdaie:ParameterEditor}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <ContentControl Content="{Binding}" ContentTemplate="{TemplateBinding HeaderTemplate}" Visibility="{Binding ShowHeader, RelativeSource={RelativeSource TemplatedParent}, Converter={dx:BooleanToVisibilityConverter}}" />
                        <dxg:GridControl
                            x:Name="PART_GridControl"
                            Grid.Row="1"
                            ItemsSource="{TemplateBinding ItemsSource}"
                            SelectedItem="{Binding EditValue, RelativeSource={RelativeSource TemplatedParent}}"
                            Visibility="{Binding ActualShowPlaceholder, Converter={dxmvvm:BooleanToVisibilityConverter Inverse=True}, RelativeSource={RelativeSource TemplatedParent}}">
                            <dxg:GridControl.Resources>
                                <Style TargetType="{x:Type dxg:GroupRowExpandButton}">
                                    <Setter Property="Padding" Value="-10,0" />
                                </Style>
                                <dxmvvm:BooleanToObjectConverter x:Key="isFixedToTypeEditorTemplateConverter">
                                    <dxmvvm:BooleanToObjectConverter.FalseValue>
                                        <DataTemplate>
                                            <dxe:ComboBoxEdit
                                                DisplayMember="Value"
                                                DisplayTextConverter="{dxdaie:TypeToDisplayMemberConverter}"
                                                EditValue="{Binding RowData.Row.ParameterResultType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                IsTextEditable="False"
                                                ItemsSource="{x:Static dxdai:ListsWithNamesValues.ParameterTypes}"
                                                ShowBorder="False"
                                                ValueMember="Key" />
                                        </DataTemplate>
                                    </dxmvvm:BooleanToObjectConverter.FalseValue>
                                    <dxmvvm:BooleanToObjectConverter.TrueValue>
                                        <DataTemplate>
                                            <dxe:TextEdit
                                                DisplayTextConverter="{dxdaie:TypeToDisplayMemberConverter}"
                                                EditValue="{Binding RowData.Row.ParameterResultType, Mode=OneWay}"
                                                IsReadOnly="True"
                                                ShowBorder="False" />
                                        </DataTemplate>
                                    </dxmvvm:BooleanToObjectConverter.TrueValue>
                                </dxmvvm:BooleanToObjectConverter>
                            </dxg:GridControl.Resources>
                            <dxg:GridControl.Columns>
                                <dxg:GridColumn FieldName="Name" Header="{dxdal:DataAccessUIStringId StringId=ParametersColumn_Name}">
                                    <dxg:GridColumn.CellTemplate>
                                        <DataTemplate>
                                            <dxe:TextEdit Name="PART_Editor" IsReadOnly="{Binding RowData.Row.IsFixedParameter}" ShowBorder="False" />
                                        </DataTemplate>
                                    </dxg:GridColumn.CellTemplate>
                                </dxg:GridColumn>
                                <dxg:GridColumn FieldName="ParameterResultType" Header="{dxdal:DataAccessUIStringId StringId=ParametersColumn_Type}" Visible="{Binding Path=(dxdaie:ParameterEditorExtensions.ShowTypeColumn), RelativeSource={RelativeSource Self}}">
                                    <dxg:GridColumn.CellTemplate>
                                        <DataTemplate>
                                            <ContentControl Content="{Binding}" ContentTemplate="{Binding RowData.Row.IsFixedParameter, Converter={StaticResource isFixedToTypeEditorTemplateConverter}}" />
                                        </DataTemplate>
                                    </dxg:GridColumn.CellTemplate>
                                </dxg:GridColumn>
                                <dxg:GridColumn FieldName="IsExpression" EditSettings="{dxe:CheckSettings}" Header="{dxdal:DataAccessUIStringId StringId=ParametersColumn_Expression}" />
                                <dxg:GridColumn FieldName="Value" Header="{dxdal:DataAccessUIStringId StringId=ParametersColumn_Value}">
                                    <dxg:GridColumn.CellTemplateSelector>
                                        <dxdaie:ParameterGridTemplateSelector>
                                            <dxdaie:ParameterGridTemplateSelector.ListBoxTemplate>
                                                <DataTemplate>
                                                    <dxe:ComboBoxEdit x:Name="PART_Editor" IsTextEditable="False" ItemsSource="{Binding Path=RowData.Row.Value, Converter={dxdai:EnumToItemsSourceConverter}}" />
                                                </DataTemplate>
                                            </dxdaie:ParameterGridTemplateSelector.ListBoxTemplate>
                                            <dxdaie:ParameterGridTemplateSelector.DateTimeTemplate>
                                                <DataTemplate>
                                                    <dxe:DateEdit x:Name="PART_Editor" IsTextEditable="False" />
                                                </DataTemplate>
                                            </dxdaie:ParameterGridTemplateSelector.DateTimeTemplate>
                                            <dxdaie:ParameterGridTemplateSelector.CheckBoxTemplate>
                                                <DataTemplate>
                                                    <dxe:CheckEdit x:Name="PART_Editor" />
                                                </DataTemplate>
                                            </dxdaie:ParameterGridTemplateSelector.CheckBoxTemplate>
                                            <dxdaie:ParameterGridTemplateSelector.TextEditTemplate>
                                                <DataTemplate>
                                                    <dxe:TextEdit x:Name="PART_Editor" />
                                                </DataTemplate>
                                            </dxdaie:ParameterGridTemplateSelector.TextEditTemplate>
                                            <dxdaie:ParameterGridTemplateSelector.ButtonEditTemplate>
                                                <DataTemplate>
                                                    <dxe:ComboBoxEdit
                                                        x:Name="PART_Editor"
                                                        AllowDefaultButton="True"
                                                        IsTextEditable="True"
                                                        ItemsSource="{Binding Path=(dxdaie:ParameterEditor.Editor).ReportParametersNames, RelativeSource={RelativeSource Self}}"
                                                        ValidateOnTextInput="False">
                                                        <dxe:ComboBoxEdit.Buttons>
                                                            <dxe:ButtonInfo GlyphKind="Regular" ToolTip="Expression Editor...">
                                                                <dxmvvm:Interaction.Behaviors>
                                                                    <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" Content="{Binding AssociatedObject, RelativeSource={RelativeSource Self}}">
                                                                        <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                                                            <DataTemplate>
                                                                                <ContentControl>
                                                                                    <dx:DialogService>
                                                                                        <dx:DialogService.DialogStyle>
                                                                                            <Style BasedOn="{StaticResource {dxdat:LWKey ExpressionEditorWindowTemplate.ExpressionEditorControlWindowStyle}}" TargetType="{x:Type dx:ThemedWindow}">
                                                                                                <Setter Property="Title" Value="Expression Editor" />
                                                                                            </Style>
                                                                                        </dx:DialogService.DialogStyle>
                                                                                        <dx:DialogService.ViewTemplateSelector>
                                                                                            <dxdaie:ParameterExpressionEditorViewTemplateSelector>
                                                                                                <dxdaie:ParameterExpressionEditorViewTemplateSelector.ExpressionEditorTemplate>
                                                                                                    <DataTemplate>
                                                                                                        <dxdaie:DataSourceWizardExpressionUITypeEditor EditValue="{Binding Value}" ParameterService="{Binding Path=Content.(dxdaie:ParameterEditor.Editor).ParameterService}" />
                                                                                                    </DataTemplate>
                                                                                                </dxdaie:ParameterExpressionEditorViewTemplateSelector.ExpressionEditorTemplate>
                                                                                                <dxdaie:ParameterExpressionEditorViewTemplateSelector.ExpressionEditorControlTemplate>
                                                                                                    <DataTemplate>
                                                                                                        <Grid>
                                                                                                            <dxdaie:DataSourceWizardExpressionEditorControl x:Name="PART_Editor" EditValue="{Binding Value}" ParameterService="{Binding Path=Content.(dxdaie:ParameterEditor.Editor).ParameterService}" />
                                                                                                        </Grid>
                                                                                                    </DataTemplate>
                                                                                                </dxdaie:ParameterExpressionEditorViewTemplateSelector.ExpressionEditorControlTemplate>
                                                                                            </dxdaie:ParameterExpressionEditorViewTemplateSelector>
                                                                                        </dx:DialogService.ViewTemplateSelector>
                                                                                    </dx:DialogService>
                                                                                </ContentControl>
                                                                            </DataTemplate>
                                                                        </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                                                    </dxe:DialogServiceEditorBehavior>
                                                                </dxmvvm:Interaction.Behaviors>
                                                            </dxe:ButtonInfo>
                                                            <dxe:ButtonInfo
                                                                Command="{Binding Path=(dxdaie:ParameterEditor.Editor).CreateReportParameterCommand, RelativeSource={RelativeSource Self}}"
                                                                CommandParameter="{Binding Path=RowData.Row.ParameterResultType}"
                                                                GlyphKind="Plus"
                                                                ToolTip="New Report Parameter..."
                                                                Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Self}, Converter={dx:BooleanToVisibilityConverter}}" />
                                                        </dxe:ComboBoxEdit.Buttons>
                                                    </dxe:ComboBoxEdit>
                                                </DataTemplate>
                                            </dxdaie:ParameterGridTemplateSelector.ButtonEditTemplate>
                                            <dxdaie:ParameterGridTemplateSelector.GuildDataTemplate>
                                                <DataTemplate>
                                                    <dxe:TextEdit
                                                        x:Name="PART_Editor"
                                                        Mask="[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}"
                                                        MaskType="RegEx"
                                                        MaskUseAsDisplayFormat="True" />
                                                </DataTemplate>
                                            </dxdaie:ParameterGridTemplateSelector.GuildDataTemplate>
                                        </dxdaie:ParameterGridTemplateSelector>
                                    </dxg:GridColumn.CellTemplateSelector>
                                </dxg:GridColumn>
                                <dxg:GridColumn
                                    DisplayMemberBinding="{Binding RowData.Row, Converter={dxdai:ParameterViewModelToQueryNameConverter}, Mode=TwoWay, FallbackValue={x:Null}}"
                                    GroupIndex="0"
                                    Header="{dxdal:DataAccessUIStringId StringId=ParametersColumn_QueryName}"
                                    Visible="{Binding Path=(dxdaie:ParameterEditorExtensions.GroupByQuery), RelativeSource={RelativeSource Self}}" />
                            </dxg:GridControl.Columns>
                            <dxg:GridControl.View>
                                <dxg:TableView
                                    AllowColumnFiltering="False"
                                    AllowMoving="False"
                                    AllowResizing="False"
                                    AllowSorting="False"
                                    AutoWidth="True"
                                    EditorButtonShowMode="ShowAlways"
                                    ErrorsWatchMode="All"
                                    IsColumnMenuEnabled="False"
                                    LeftGroupAreaIndent="0"
                                    ShowGroupPanel="False"
                                    ShowGroupedColumns="False"
                                    ShowIndicator="False"
                                    VerticalScrollbarVisibility="Auto">
                                    <dxmvvm:Interaction.Behaviors>
                                        <dxdaie:ParameterGridBehavior />
                                    </dxmvvm:Interaction.Behaviors>
                                </dxg:TableView>
                            </dxg:GridControl.View>
                            <dxmvvm:Interaction.Behaviors>
                                <dxdaie:ParameterEditorGridControlBehavior />
                                <dxdaie:GridControlValidationRulesBehavior ValidationRules="{Binding Path=AssociatedObject.(dxdaie:ParameterEditor.Editor).ValidationRulesCollection, RelativeSource={RelativeSource Self}}" />
                            </dxmvvm:Interaction.Behaviors>
                        </dxg:GridControl>
                        <TextBlock
                            Grid.Row="1"
                            Opacity="0.7"
                            Text="{dxdal:DataAccessUIStringId StringId=Parameters_AddNewParameterPlaceholder}"
                            TextAlignment="Center"
                            Visibility="{Binding ActualShowPlaceholder, Converter={dx:BooleanToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="QueryBuilderParametersEditor.DefaultStyleBase" TargetType="{x:Type dxdaie:QueryBuilderParametersEditor}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdaie:QueryBuilderParametersEditor}">
                    <Grid>
                        <dxdaie:ParameterEditor
                            x:Name="parameterEditor"
                            EditValue="{Binding SelectedParameter, RelativeSource={RelativeSource TemplatedParent}}"
                            FixedParameters="False"
                            ItemsSource="{TemplateBinding Parameters}"
                            ParameterService="{TemplateBinding ParameterService}"
                            UseLegacyExpressionEditor="{TemplateBinding UseLegacyExpressionEditor}" />
                        <dx:DialogFooter>
                            <Grid>
                                <dx:DialogButton
                                    Alignment="Left"
                                    Command="{Binding OpenPreviewCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                    Content="{dxdal:DataAccessUIStringId StringId=Button_Preview}"
                                    DialogResult="{x:Null}" />
                                <dx:DialogButton
                                    Alignment="Left"
                                    Command="{Binding AddParameterCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                    Content="{dxdal:DataAccessUIStringId StringId=Button_Add}"
                                    DialogResult="{x:Null}" />
                                <dx:DialogButton
                                    Alignment="Left"
                                    Command="{Binding RemoveParameterCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                    Content="{dxdal:DataAccessUIStringId StringId=Button_Remove}"
                                    DialogResult="{x:Null}" />
                                <dx:DialogButton
                                    Alignment="Right"
                                    Command="{Binding SaveCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                    Content="{dxdal:DataAccessUIStringId StringId=Button_OK}"
                                    DialogResult="OK"
                                    IsEnabled="{Binding ElementName=parameterEditor, Path=HasErrors, Converter={dxmvvm:BooleanNegationConverter}}" />
                                <dx:DialogButton Alignment="Right" Content="{dxdal:DataAccessUIStringId StringId=Button_Cancel}" DialogResult="Cancel" />
                            </Grid>
                        </dx:DialogFooter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="PreviewTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dx:DialogService>
                            <dx:DialogService.DialogStyle>
                                <Style BasedOn="{StaticResource LegacyThemedWindowDialogStyleBase}" TargetType="{x:Type dx:ThemedWindow}">
                                    <Setter Property="ResizeMode" Value="CanResize" />
                                    <Setter Property="Width" Value="800" />
                                    <Setter Property="Height" Value="500" />
                                </Style>
                            </dx:DialogService.DialogStyle>
                            <dx:DialogService.ViewTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <dxdaie:DataPreviewControl Data="{Binding}" />
                                        <dx:DialogFooter>
                                            <dx:DialogButton HorizontalAlignment="Right" Content="{dxdal:DataAccessUIStringId StringId=Button_Close}" DialogResult="OK" />
                                        </dx:DialogFooter>
                                    </Grid>
                                </DataTemplate>
                            </dx:DialogService.ViewTemplate>
                        </dx:DialogService>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MessageBoxServiceTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dx:DXMessageBoxService />
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion DEFAULT STYLES-->
</ResourceDictionary>