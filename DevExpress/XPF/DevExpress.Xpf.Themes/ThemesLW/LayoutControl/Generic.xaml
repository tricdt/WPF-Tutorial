<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
    xmlns:dxlc="clr-namespace:DevExpress.Xpf.LayoutControl;assembly=DevExpress.Xpf.LayoutControl.v24.1"
    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">

    <!--#region Generic.xaml-->
    <ControlTemplate x:Key="LayoutItemCustomizationToolbar.RenamingEditElement" TargetType="TextBox">
        <dx:DXBorder
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="3"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}">
            <ScrollViewer
                x:Name="PART_ContentHost"
                Padding="{TemplateBinding Padding}"
                BorderThickness="0"
                IsTabStop="False" />
        </dx:DXBorder>
    </ControlTemplate>
    <Style x:Key="TileGroupHeader.EditorElement" TargetType="TextBox">
        <Setter Property="Margin" Value="-4" />
        <Setter Property="Padding" Value="2,4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <ScrollViewer
                        x:Name="PART_ContentHost"
                        Padding="{TemplateBinding Padding}"
                        BorderThickness="0"
                        IsTabStop="False"
                        Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion Generic.xaml-->

    <dxmvvm:ObjectToObjectConverter x:Key="BooleanChoiceIsTreeStateConv" DefaultTarget="False">
        <dxmvvm:MapItem Source="{x:Null}" Target="True" />
    </dxmvvm:ObjectToObjectConverter>
    <dxlc:Resources x:Key="Resources" />
    <SolidColorBrush x:Key="ToolBackground" Opacity="0.3" Color="Black" />
    <SolidColorBrush x:Key="ToolBorderBrush" Opacity="0.5" Color="Black" />
    <SolidColorBrush x:Key="ToolTextForeground" Color="White" />
    <SolidColorBrush x:Key="ToolTextBackground" Color="Gray" />
    <LinearGradientBrush x:Key="ToolItemBackground">
        <GradientStop Offset="0.3" Color="White" />
        <GradientStop Offset="1" Color="LightGray" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ToolItemMouseOverBackground" Color="LightGray" />
    <SolidColorBrush x:Key="ToolItemPressedBackground" Color="DarkGray" />
    <SolidColorBrush x:Key="ToolItemBorderBrush" Color="DimGray" />
    <SolidColorBrush x:Key="ToolItemTextForeground" Color="Black" />


    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.LayoutControl\DevExpress.Xpf.LayoutControl\DataLayoutControl\EditorGeneratorTemplates.xaml-->
    <Style x:Key="liStyle" TargetType="dxlc:DataLayoutItem">
        <Setter Property="DataContext" Value="{Binding Path=(dxlc:DataLayoutItem.UnderlyingObject), RelativeSource={RelativeSource Self}}" />
        <Setter Property="AddColonToLabel" Value="{Binding AddColonToLabel, RelativeSource={RelativeSource AncestorType=dxlc:DataLayoutItem}}" />
        <Setter Property="ApplySettingsForCustomContent" Value="True" />
    </Style>
    <Style x:Key="lcStyle" TargetType="dxlc:LayoutControl">
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="ScrollBars" Value="None" />
        <Setter Property="dx:DXSerializer.Enabled" Value="False" />
    </Style>
    <Style x:Key="baseEditorStyle" TargetType="dxe:BaseEdit">
        <Setter Property="dxei:RightClickEditorBehavior.IsRightClickEditorBehaviorEnabled" Value="False" />
    </Style>
    <DataTemplate x:Key="EnumBehaviors">
        <ItemsControl>
            <dxmvvm:EnumItemsSourceBehavior EnumType="{Binding EnumType}" />
            <dxei:FilterListEditorBehavior
                CheckedEditValueBinding="{Binding Values, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={dxei:CheckedListEditValueConverter}}"
                RadioEditValueBinding="{Binding Values, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={dxei:CheckedListEditValueConverter IsCheckedEditor=False}}"
                SelectAllName="{Binding SelectAllName}"
                UseFlags="{Binding UseFlags}"
                UseSelectAll="{Binding UseSelectAll}" />
        </ItemsControl>
    </DataTemplate>
    <DataTemplate x:Key="EnumTokenBehaviors">
        <ItemsControl>
            <dxmvvm:EnumItemsSourceBehavior EnumType="{Binding EnumType}" />
            <dxei:FilterListEditorBehavior
                CheckedEditValueBinding="{Binding Values, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={dxei:CheckedListEditValueConverter}}"
                RadioEditValueBinding="{Binding Values, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={dxei:CheckedListEditValueConverter IsCheckedEditor=False}}"
                SelectAllName="{Binding SelectAllName}"
                UseFlags="{Binding UseFlags}"
                UseSelectAll="{Binding UseSelectAll}"
                UseTokenStyle="True" />
        </ItemsControl>
    </DataTemplate>
    <Style x:Key="MoreButtonStyle" TargetType="Button">
        <Setter Property="DataContext" Value="{Binding Path=(dxlc:DataLayoutItem.UnderlyingObject), RelativeSource={RelativeSource Self}}" />
        <Setter Property="Command" Value="{Binding LoadMoreCommand}" />
        <Setter Property="Visibility" Value="{Binding IsLoadMoreAvailable, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
        <Setter Property="Content" Value="More" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
    </Style>
    <DataTemplate x:Key="LookupBehaviors">
        <ContentControl>
            <dxei:FilterListEditorBehavior
                CheckedEditValueBinding="{Binding Values, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={dxei:CheckedListEditValueConverter}}"
                DisplayMember="{Binding DisplayMember}"
                ItemsSource="{Binding DataSource}"
                RadioEditValueBinding="{Binding Values, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={dxei:CheckedListEditValueConverter IsCheckedEditor=False}}"
                SelectAllName="{Binding SelectAllName}"
                UseFlags="{Binding UseRadioSelection, Converter={dxmvvm:BooleanNegationConverter}}"
                UseSelectAll="{Binding UseSelectAll}"
                ValueMember="{Binding ValueMember}" />
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="LookupTokenBehaviors">
        <ContentControl>
            <dxei:FilterListEditorBehavior
                CheckedEditValueBinding="{Binding Values, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={dxei:CheckedListEditValueConverter}}"
                DisplayMember="{Binding DisplayMember}"
                ItemsSource="{Binding DataSourc}"
                RadioEditValueBinding="{Binding Values, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={dxei:CheckedListEditValueConverter IsCheckedEditor=False}}"
                SelectAllName="{Binding SelectAllName}"
                UseFlags="{Binding UseRadioSelection, Converter={dxmvvm:BooleanNegationConverter}}"
                UseSelectAll="{Binding UseSelectAll}"
                UseTokenStyle="True"
                ValueMember="{Binding ValueMember}" />
        </ContentControl>
    </DataTemplate>


    <Style x:Key="{dxlc:LWKey FilteringUIGenerator.LayoutGroupStyle}" TargetType="dxlc:LayoutGroup">
        <Setter Property="Header" Value="{Binding Path=(dxlc:DataLayoutItem.AttributeSettings).Label, RelativeSource={RelativeSource Self}}" />
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentPresenter Content="{Binding}" ToolTip="{Binding Path=(dxlc:DataLayoutItem.AttributeSettings).ToolTip, RelativeSource={RelativeSource Self}}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="View" Value="GroupBox" />
        <Setter Property="IsCollapsible" Value="True" />
        <Setter Property="Orientation" Value="Vertical" />
        <Setter Property="GroupBoxDisplayMode" Value="{Binding Path=ActualGroupBoxDisplayMode, RelativeSource={RelativeSource AncestorType=dxlc:LayoutGroup}}" />
        <Setter Property="GroupBoxStyle" Value="{Binding Path=GroupBoxStyle, RelativeSource={RelativeSource AncestorType=dxlc:LayoutGroup}}" />
        <Setter Property="dxb:BarManager.DXContextMenu">
            <Setter.Value>
                <dxb:PopupMenu>
                    <dxb:BarButtonItem Command="{Binding Path=(dxlc:DataLayoutItem.UnderlyingObject).ResetCommand, RelativeSource={RelativeSource Self}}" Content="Reset" />
                </dxb:PopupMenu>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Range -->
    <Style x:Key="minSpinEditStyle" BasedOn="{StaticResource baseEditorStyle}" TargetType="dxe:SpinEdit">
        <Setter Property="MinValue" Value="{Binding Minimum}" />
        <Setter Property="MaxValue" Value="{Binding Maximum}" />
        <Setter Property="EditValue" Value="{Binding FromValue, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
    </Style>
    <Style x:Key="maxSpinEditStyle" BasedOn="{StaticResource minSpinEditStyle}" TargetType="dxe:SpinEdit">
        <Setter Property="EditValue" Value="{Binding ToValue, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
    </Style>
    <Style x:Key="trackEditStyle" BasedOn="{StaticResource baseEditorStyle}" TargetType="dxe:TrackBarEdit">
        <Setter Property="DataContext" Value="{Binding Path=(dxlc:DataLayoutItem.UnderlyingObject), RelativeSource={RelativeSource Self}}" />
        <Setter Property="Minimum" Value="{Binding Minimum}" />
        <Setter Property="Maximum" Value="{Binding Maximum}" />
        <Setter Property="TickPlacement" Value="None" />
        <Setter Property="EditValue">
            <Setter.Value>
                <MultiBinding Converter="{dxe:TrackBarEditRangeMultiValueConverter}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                    <Binding Mode="TwoWay" Path="FromValue" UpdateSourceTrigger="PropertyChanged" />
                    <Binding Mode="TwoWay" Path="ToValue" UpdateSourceTrigger="PropertyChanged" />
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="StyleSettings">
            <Setter.Value>
                <dxe:TrackBarRangeStyleSettings />
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="{dxlc:LWKey FilteringUIGenerator.RangeText}">
        <dxlc:LayoutGroup Style="{DynamicResource {dxlc:LWKey FilteringUIGenerator.LayoutGroupStyle}}">
            <dxlc:LayoutControl Style="{StaticResource lcStyle}">
                <dxlc:DataLayoutItem Binding="{Binding FromValue}" Style="{StaticResource liStyle}">
                    <dxe:SpinEdit AllowDefaultButton="False" Style="{StaticResource minSpinEditStyle}" />
                </dxlc:DataLayoutItem>
                <dxlc:DataLayoutItem Binding="{Binding ToValue}" Style="{StaticResource liStyle}">
                    <dxe:SpinEdit AllowDefaultButton="False" Style="{StaticResource maxSpinEditStyle}" />
                </dxlc:DataLayoutItem>
            </dxlc:LayoutControl>
        </dxlc:LayoutGroup>
    </DataTemplate>
    <DataTemplate x:Key="{dxlc:LWKey FilteringUIGenerator.RangeSpin}">
        <dxlc:LayoutGroup Style="{DynamicResource {dxlc:LWKey FilteringUIGenerator.LayoutGroupStyle}}">
            <dxlc:LayoutControl Style="{StaticResource lcStyle}">
                <dxlc:DataLayoutItem Binding="{Binding FromValue}" Style="{StaticResource liStyle}">
                    <dxe:SpinEdit AllowDefaultButton="True" Style="{StaticResource minSpinEditStyle}" />
                </dxlc:DataLayoutItem>
                <dxlc:DataLayoutItem Binding="{Binding ToValue}" Style="{StaticResource liStyle}">
                    <dxe:SpinEdit AllowDefaultButton="True" Style="{StaticResource maxSpinEditStyle}" />
                </dxlc:DataLayoutItem>
            </dxlc:LayoutControl>
        </dxlc:LayoutGroup>
    </DataTemplate>
    <DataTemplate x:Key="{dxlc:LWKey FilteringUIGenerator.RangeTrack}">
        <dxlc:LayoutGroup Style="{DynamicResource {dxlc:LWKey FilteringUIGenerator.LayoutGroupStyle}}">
            <dxe:TrackBarEdit x:Name="editor" Style="{StaticResource trackEditStyle}" />
            <TextBlock HorizontalAlignment="Center">
                <Run Text="{Binding EditValue.SelectionStart, ElementName=editor, Mode=OneWay}" />
                <Run Text=" ... " />
                <Run Text="{Binding EditValue.SelectionEnd, ElementName=editor, Mode=OneWay}" />
            </TextBlock>
        </dxlc:LayoutGroup>
    </DataTemplate>
    <DataTemplate x:Key="{dxlc:LWKey FilteringUIGenerator.RangeDefault}">
        <dxlc:LayoutGroup Style="{DynamicResource {dxlc:LWKey FilteringUIGenerator.LayoutGroupStyle}}">
            <dxlc:LayoutControl Style="{StaticResource lcStyle}">
                <dxlc:DataLayoutItem Binding="{Binding FromValue}" Style="{StaticResource liStyle}">
                    <dxe:SpinEdit AllowDefaultButton="False" Style="{StaticResource minSpinEditStyle}" />
                </dxlc:DataLayoutItem>
                <dxlc:DataLayoutItem Binding="{Binding ToValue}" Style="{StaticResource liStyle}">
                    <dxe:SpinEdit AllowDefaultButton="False" Style="{StaticResource maxSpinEditStyle}" />
                </dxlc:DataLayoutItem>
            </dxlc:LayoutControl>
            <dxe:TrackBarEdit x:Name="editor" Style="{StaticResource trackEditStyle}" />
        </dxlc:LayoutGroup>
    </DataTemplate>

    <!-- DateTime Range -->
    <Style x:Key="minDateEditStyle" BasedOn="{StaticResource baseEditorStyle}" TargetType="dxe:DateEdit">
        <Setter Property="MinValue" Value="{Binding Minimum}" />
        <Setter Property="MaxValue" Value="{Binding Maximum}" />
        <Setter Property="EditValue" Value="{Binding FromValue, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
    </Style>
    <Style x:Key="maxDateEditStyle" BasedOn="{StaticResource minDateEditStyle}" TargetType="dxe:DateEdit">
        <Setter Property="EditValue" Value="{Binding ToValue, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
    </Style>
    <DataTemplate x:Key="{dxlc:LWKey FilteringUIGenerator.DateTimeRangeDefault}">
        <dxlc:LayoutGroup Style="{DynamicResource {dxlc:LWKey FilteringUIGenerator.LayoutGroupStyle}}">
            <dxlc:LayoutControl Style="{StaticResource lcStyle}">
                <dxlc:DataLayoutItem Binding="{Binding FromValue}" Style="{StaticResource liStyle}">
                    <dxe:DateEdit Style="{StaticResource minDateEditStyle}" />
                </dxlc:DataLayoutItem>
                <dxlc:DataLayoutItem Binding="{Binding ToValue}" Style="{StaticResource liStyle}">
                    <dxe:DateEdit Style="{StaticResource maxDateEditStyle}" />
                </dxlc:DataLayoutItem>
            </dxlc:LayoutControl>
        </dxlc:LayoutGroup>
    </DataTemplate>
    <DataTemplate x:Key="{dxlc:LWKey FilteringUIGenerator.DateTimeRangePicker}">
        <dxlc:LayoutGroup Style="{DynamicResource {dxlc:LWKey FilteringUIGenerator.LayoutGroupStyle}}">
            <dxlc:LayoutControl Style="{StaticResource lcStyle}">
                <dxlc:DataLayoutItem Binding="{Binding FromValue}" Style="{StaticResource liStyle}">
                    <dxe:DateEdit Style="{StaticResource minDateEditStyle}">
                        <dxe:DateEdit.StyleSettings>
                            <dxe:DateEditPickerStyleSettings />
                        </dxe:DateEdit.StyleSettings>
                    </dxe:DateEdit>
                </dxlc:DataLayoutItem>
                <dxlc:DataLayoutItem Binding="{Binding ToValue}" Style="{StaticResource liStyle}">
                    <dxe:DateEdit Style="{StaticResource maxDateEditStyle}">
                        <dxe:DateEdit.StyleSettings>
                            <dxe:DateEditPickerStyleSettings />
                        </dxe:DateEdit.StyleSettings>
                    </dxe:DateEdit>
                </dxlc:DataLayoutItem>
            </dxlc:LayoutControl>
        </dxlc:LayoutGroup>
    </DataTemplate>

    <!-- Check -->
    <DataTemplate x:Key="BooleanChoiceEditorBehavior">
        <ContentControl>
            <dxei:BooleanChoiceEditorBehavior
                DefaultName="{Binding DefaultName}"
                FalseName="{Binding FalseName}"
                IsThreeState="{Binding DefaultValue, Converter={StaticResource BooleanChoiceIsTreeStateConv}}"
                TrueName="{Binding TrueName}" />
        </ContentControl>
    </DataTemplate>
    <Style x:Key="boolBaseEditStyle" BasedOn="{StaticResource baseEditorStyle}" TargetType="dxe:BaseEdit">
        <Setter Property="DataContext" Value="{Binding Path=(dxlc:DataLayoutItem.UnderlyingObject), RelativeSource={RelativeSource Self}}" />
        <Setter Property="EditValue" Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
    </Style>
    <Style x:Key="boolCheckEditStyle" BasedOn="{StaticResource boolBaseEditStyle}" TargetType="dxe:CheckEdit">
        <Setter Property="IsThreeState" Value="{Binding DefaultValue, Converter={StaticResource BooleanChoiceIsTreeStateConv}}" />
    </Style>
    <Style x:Key="boolListBoxEditStyle" BasedOn="{StaticResource boolBaseEditStyle}" TargetType="dxe:ListBoxEdit">
        <Setter Property="ShowBorder" Value="False" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate" Value="{StaticResource BooleanChoiceEditorBehavior}" />
    </Style>
    <Style x:Key="boolComboBoxEditStyle" BasedOn="{StaticResource boolBaseEditStyle}" TargetType="dxe:ComboBoxEdit">
        <Setter Property="IsTextEditable" Value="False" />
        <Setter Property="ShowNullText" Value="False" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate" Value="{StaticResource BooleanChoiceEditorBehavior}" />
    </Style>
    <DataTemplate x:Key="{dxlc:LWKey FilteringUIGenerator.BooleanCheck}">
        <dxlc:LayoutGroup Style="{DynamicResource {dxlc:LWKey FilteringUIGenerator.LayoutGroupStyle}}">
            <dxe:CheckEdit Style="{StaticResource boolCheckEditStyle}" />
        </dxlc:LayoutGroup>
    </DataTemplate>
    <DataTemplate x:Key="{dxlc:LWKey FilteringUIGenerator.BooleanToggle}">
        <dxlc:LayoutGroup Header="{x:Null}" IsCollapsible="False" Style="{DynamicResource {dxlc:LWKey FilteringUIGenerator.LayoutGroupStyle}}">
            <ToggleButton
                Content="{Binding Path=(dxlc:DataLayoutItem.AttributeSettings).Label, RelativeSource={RelativeSource Self}}"
                DataContext="{Binding Path=(dxlc:DataLayoutItem.UnderlyingObject), RelativeSource={RelativeSource Self}}"
                IsChecked="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                IsThreeState="True" />
        </dxlc:LayoutGroup>
    </DataTemplate>
    <DataTemplate x:Key="{dxlc:LWKey FilteringUIGenerator.BooleanList}">
        <dxlc:LayoutGroup Style="{DynamicResource {dxlc:LWKey FilteringUIGenerator.LayoutGroupStyle}}">
            <dxe:ListBoxEdit Style="{StaticResource boolListBoxEditStyle}">
                <dxe:ListBoxEdit.StyleSettings>
                    <dxe:RadioListBoxEditStyleSettings />
                </dxe:ListBoxEdit.StyleSettings>
            </dxe:ListBoxEdit>
        </dxlc:LayoutGroup>
    </DataTemplate>
    <DataTemplate x:Key="{dxlc:LWKey FilteringUIGenerator.BooleanDropDown}">
        <dxlc:LayoutGroup Style="{DynamicResource {dxlc:LWKey FilteringUIGenerator.LayoutGroupStyle}}">
            <dxe:ComboBoxEdit Style="{StaticResource boolComboBoxEditStyle}" />
        </dxlc:LayoutGroup>
    </DataTemplate>

    <!-- Enum -->
    <Style x:Key="enumBaseEditStyle" BasedOn="{StaticResource baseEditorStyle}" TargetType="dxe:BaseEdit">
        <Setter Property="DataContext" Value="{Binding Path=(dxlc:DataLayoutItem.UnderlyingObject), RelativeSource={RelativeSource Self}}" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate" Value="{StaticResource EnumBehaviors}" />
    </Style>
    <Style x:Key="enumListBoxEditStyle" BasedOn="{StaticResource enumBaseEditStyle}" TargetType="dxe:ListBoxEdit">
        <Setter Property="ShowBorder" Value="False" />
    </Style>
    <Style x:Key="enumComboBoxEditStyle" BasedOn="{StaticResource enumBaseEditStyle}" TargetType="dxe:ComboBoxEdit">
        <Setter Property="IsTextEditable" Value="False" />
    </Style>
    <Style x:Key="enumTokenBoxEditStyle" BasedOn="{StaticResource enumComboBoxEditStyle}" TargetType="dxe:ComboBoxEdit">
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate" Value="{StaticResource EnumTokenBehaviors}" />
    </Style>
    <DataTemplate x:Key="{dxlc:LWKey FilteringUIGenerator.EnumList}">
        <dxlc:LayoutGroup Style="{DynamicResource {dxlc:LWKey FilteringUIGenerator.LayoutGroupStyle}}">
            <dxe:ListBoxEdit Style="{StaticResource enumListBoxEditStyle}" />
        </dxlc:LayoutGroup>
    </DataTemplate>
    <DataTemplate x:Key="{dxlc:LWKey FilteringUIGenerator.EnumCheckedList}">
        <dxlc:LayoutGroup Style="{DynamicResource {dxlc:LWKey FilteringUIGenerator.LayoutGroupStyle}}">
            <dxe:ListBoxEdit Style="{StaticResource enumListBoxEditStyle}" />
        </dxlc:LayoutGroup>
    </DataTemplate>
    <DataTemplate x:Key="{dxlc:LWKey FilteringUIGenerator.EnumDropDown}">
        <dxlc:LayoutGroup Style="{DynamicResource {dxlc:LWKey FilteringUIGenerator.LayoutGroupStyle}}">
            <dxe:ComboBoxEdit Style="{StaticResource enumComboBoxEditStyle}" />
        </dxlc:LayoutGroup>
    </DataTemplate>
    <DataTemplate x:Key="{dxlc:LWKey FilteringUIGenerator.EnumCheckedDropDown}">
        <dxlc:LayoutGroup Style="{DynamicResource {dxlc:LWKey FilteringUIGenerator.LayoutGroupStyle}}">
            <dxe:ComboBoxEdit Style="{StaticResource enumComboBoxEditStyle}" />
        </dxlc:LayoutGroup>
    </DataTemplate>
    <DataTemplate x:Key="{dxlc:LWKey FilteringUIGenerator.EnumToken}">
        <dxlc:LayoutGroup Style="{DynamicResource {dxlc:LWKey FilteringUIGenerator.LayoutGroupStyle}}">
            <dxe:ComboBoxEdit Style="{StaticResource enumTokenBoxEditStyle}" />
        </dxlc:LayoutGroup>
    </DataTemplate>

    <!-- LookUp -->
    <Style x:Key="FewerButtonStyle" BasedOn="{StaticResource MoreButtonStyle}" TargetType="Button">
        <Setter Property="Content" Value="Fewer" />
        <Setter Property="Command" Value="{Binding LoadFewerCommand}" />
        <Setter Property="Visibility" Value="{Binding IsLoadFewerAvailable, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
    </Style>
    <Style x:Key="lookupListBoxEditStyle" BasedOn="{StaticResource enumListBoxEditStyle}" TargetType="dxe:ListBoxEdit">
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate" Value="{StaticResource LookupBehaviors}" />
    </Style>
    <Style x:Key="lookupComboBoxEditStyle" BasedOn="{StaticResource enumComboBoxEditStyle}" TargetType="dxe:ComboBoxEdit">
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate" Value="{StaticResource LookupBehaviors}" />
        <Setter Property="IsTextEditable" Value="True" />
        <Setter Property="ImmediatePopup" Value="True" />
        <Setter Property="ValidateOnTextInput" Value="False" />
        <Setter Property="ValidateOnEnterKeyPressed" Value="True" />
        <Setter Property="IncrementalFiltering" Value="True" />
    </Style>
    <Style x:Key="lookupTokenBoxEditStyle" BasedOn="{StaticResource lookupComboBoxEditStyle}" TargetType="dxe:ComboBoxEdit">
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate" Value="{StaticResource LookupTokenBehaviors}" />
    </Style>
    <DataTemplate x:Key="{dxlc:LWKey FilteringUIGenerator.LookupList}">
        <dxlc:LayoutGroup Style="{DynamicResource {dxlc:LWKey FilteringUIGenerator.LayoutGroupStyle}}">
            <dxe:ListBoxEdit Style="{StaticResource lookupListBoxEditStyle}" />
            <Button Style="{StaticResource MoreButtonStyle}" />
            <Button Style="{StaticResource FewerButtonStyle}" />
        </dxlc:LayoutGroup>
    </DataTemplate>
    <DataTemplate x:Key="{dxlc:LWKey FilteringUIGenerator.LookupCheckedList}">
        <dxlc:LayoutGroup Style="{DynamicResource {dxlc:LWKey FilteringUIGenerator.LayoutGroupStyle}}">
            <dxe:ListBoxEdit Style="{StaticResource lookupListBoxEditStyle}" />
            <Button Style="{StaticResource MoreButtonStyle}" />
            <Button Style="{StaticResource FewerButtonStyle}" />
        </dxlc:LayoutGroup>
    </DataTemplate>
    <DataTemplate x:Key="{dxlc:LWKey FilteringUIGenerator.LookupDropDown}">
        <dxlc:LayoutGroup Style="{DynamicResource {dxlc:LWKey FilteringUIGenerator.LayoutGroupStyle}}">
            <dxe:ComboBoxEdit Style="{StaticResource lookupComboBoxEditStyle}" />
        </dxlc:LayoutGroup>
    </DataTemplate>
    <DataTemplate x:Key="{dxlc:LWKey FilteringUIGenerator.LookupCheckedDropDown}">
        <dxlc:LayoutGroup Style="{DynamicResource {dxlc:LWKey FilteringUIGenerator.LayoutGroupStyle}}">
            <dxe:ComboBoxEdit Style="{StaticResource lookupComboBoxEditStyle}" />
        </dxlc:LayoutGroup>
    </DataTemplate>
    <DataTemplate x:Key="{dxlc:LWKey FilteringUIGenerator.LookupToken}">
        <dxlc:LayoutGroup Style="{DynamicResource {dxlc:LWKey FilteringUIGenerator.LayoutGroupStyle}}">
            <dxe:ComboBoxEdit Style="{StaticResource lookupTokenBoxEditStyle}" />
        </dxlc:LayoutGroup>
    </DataTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.LayoutControl\DevExpress.Xpf.LayoutControl\DataLayoutControl\EditorGeneratorTemplates.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.LayoutControl\DevExpress.Xpf.LayoutControl\Themes\LayoutItem.xaml-->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.LayoutControl\DevExpress.Xpf.LayoutControl\Themes\LayoutItem.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.LayoutControl\DevExpress.Xpf.LayoutControl\Themes\Tile.xaml-->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.LayoutControl\DevExpress.Xpf.LayoutControl\Themes\Tile.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.LayoutControl\DevExpress.Xpf.LayoutControl\Themes\TileGroupHeader.xaml-->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.LayoutControl\DevExpress.Xpf.LayoutControl\Themes\TileGroupHeader.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.LayoutControl\DevExpress.Xpf.LayoutControl\Themes\CustomizationControls.xaml-->
    <Style x:Key="ElementStyle" TargetType="Rectangle">
        <Setter Property="Fill" Value="White" />
        <Setter Property="Stroke" Value="Gray" />
        <Setter Property="RadiusX" Value="1" />
        <Setter Property="RadiusY" Value="1" />
    </Style>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.LayoutControl\DevExpress.Xpf.LayoutControl\Themes\CustomizationControls.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.LayoutControl\DevExpress.Xpf.LayoutControl\Themes\Generic.xaml-->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.LayoutControl\DevExpress.Xpf.LayoutControl\Themes\Generic.xaml-->


    <!--#region DEFAULT STYLES-->

    <Style x:Key="LayoutItem.DefaultStyleBase" TargetType="dxlc:LayoutItem">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ElementSpace" Value="3" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxlc:LayoutItem">
                    <dxlc:LayoutItemPanel Background="{TemplateBinding Background}" ElementSpace="{TemplateBinding ElementSpace}" LabelPosition="{TemplateBinding LabelPosition}">
                        <dxlc:LayoutItemPanel.Label>
                            <dxlc:LayoutItemLabel
                                x:Name="LabelElement"
                                HorizontalContentAlignment="{TemplateBinding LabelHorizontalAlignment}"
                                VerticalContentAlignment="{TemplateBinding LabelVerticalAlignment}"
                                Content="{TemplateBinding ActualLabel}"
                                ContentTemplate="{TemplateBinding LabelTemplate}"
                                IsRequired="{TemplateBinding IsActuallyRequired}"
                                Visibility="{TemplateBinding CalculatedLabelVisibility}" />
                        </dxlc:LayoutItemPanel.Label>
                        <dxlc:LayoutItemPanel.Content>
                            <ContentPresenter
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}" />
                        </dxlc:LayoutItemPanel.Content>
                    </dxlc:LayoutItemPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LayoutItemLabel.DefaultStyleBase" TargetType="dxlc:LayoutItemLabel">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxlc:LayoutItemLabel">
                    <ContentPresenter
                        x:Name="root"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Content="{TemplateBinding Content}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        TextElement.Foreground="{TemplateBinding Foreground}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="RequiredStates">
                                <VisualState x:Name="NotRequired" />
                                <VisualState x:Name="Required">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="root" Storyboard.TargetProperty="(TextElement.FontWeight)" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <FontWeight>SemiBold</FontWeight>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </ContentPresenter>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Tile.DefaultStyleBase" TargetType="dxlc:Tile">
        <Setter Property="Background" Value="#FF00ABDC" />
        <Setter Property="BorderBrush" Value="#1AFFFFFF" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="HorizontalHeaderAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalHeaderAlignment" Value="Bottom" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Padding" Value="16,5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxlc:Tile">
                    <Grid
                        Name="root"
                        dx:FrameworkElementHelper.IsClipped="True"
                        Background="{TemplateBinding Background}"
                        RenderTransformOrigin="0.5,0.5">
                        <Grid.RenderTransform>
                            <ScaleTransform />
                        </Grid.RenderTransform>
                        <Grid.Resources>
                            <dx:MultiplyConverter x:Key="MultiplyConverter" />
                            <Storyboard x:Key="ContentChangeStoryboard" x:Name="ContentChangeStoryboard" FillBehavior="Stop">
                                <ObjectAnimationUsingKeyFrames
                                    FillBehavior="Stop"
                                    Storyboard.TargetName="previousContent"
                                    Storyboard.TargetProperty="Visibility"
                                    Duration="0:0:0.15">
                                    <ObjectAnimationUsingKeyFrames.KeyFrames>
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Visible</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames.KeyFrames>
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimation Storyboard.TargetName="previousContent" Storyboard.TargetProperty="(RenderTransform).Y" To="{Binding ElementName=root, Path=ActualHeight, Converter={StaticResource MultiplyConverter}, ConverterParameter=-1}" Duration="0:0:0.15" />
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="content" Storyboard.TargetProperty="(RenderTransform).Y" Duration="0:0:1">
                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="{Binding ElementName=root, Path=ActualHeight}" />
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.15" Value="{Binding ElementName=root, Path=ActualHeight}" />
                                    <LinearDoubleKeyFrame KeyTime="0:0:0.4" Value="20" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <CubicEase EasingMode="EaseOut" />
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </Grid.Resources>

                        <Rectangle Fill="{TemplateBinding CalculatedBackground}" />
                        <ContentPresenter
                            Name="content"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding CurrentContentTemplate}">
                            <ContentPresenter.RenderTransform>
                                <TranslateTransform />
                            </ContentPresenter.RenderTransform>
                        </ContentPresenter>
                        <ContentPresenter
                            Name="previousContent"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding PreviousContent}"
                            ContentTemplate="{TemplateBinding CurrentContentTemplate}"
                            Visibility="Collapsed">
                            <ContentPresenter.RenderTransform>
                                <TranslateTransform />
                            </ContentPresenter.RenderTransform>
                        </ContentPresenter>
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalHeaderAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalHeaderAlignment}"
                            Content="{TemplateBinding Header}"
                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                            Visibility="{TemplateBinding CalculatedHeaderVisibility}" />
                        <dx:DXBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1" To="Pressed" />
                                    <VisualTransition GeneratedDuration="0:0:0.1" From="Pressed" />
                                </VisualStateGroup.Transitions>

                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="root" Storyboard.TargetProperty="(RenderTransform).ScaleX" To="0.97" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="root" Storyboard.TargetProperty="(RenderTransform).ScaleY" To="0.97" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TileGroupHeader.DefaultStyleBase" TargetType="dxlc:TileGroupHeader">
        <Setter Property="FontFamily" Value="Segoe UI Light" />
        <Setter Property="FontSize" Value="27" />
        <Setter Property="Foreground" Value="#90FFFFFF" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxlc:TileGroupHeader">
                    <Grid Background="{TemplateBinding Background}">
                        <dx:DXContentPresenter
                            Name="content"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Visibility="Collapsed" />

                        <TextBox
                            Name="EditorElement"
                            Background="#19FFFFFF"
                            CaretBrush="Black"
                            Foreground="{TemplateBinding Foreground}"
                            Style="{StaticResource TileGroupHeader.EditorElement}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="EditingStates">
                                <VisualState x:Name="NonEditable">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="content" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="EditorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Editable" />
                                <VisualState x:Name="Editing">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="EditorElement" Storyboard.TargetProperty="(Background).Color" To="White" Duration="0" />
                                        <ColorAnimation Storyboard.TargetName="EditorElement" Storyboard.TargetProperty="(Foreground).Color" To="Black" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="State" Value="Editable">
                <Setter Property="Foreground" Value="#E3FFFFFF" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="MaximizedElementPositionIndicator.DefaultStyleBase" TargetType="dxlc:MaximizedElementPositionIndicator">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxlc:MaximizedElementPositionIndicator">
                    <Canvas
                        Width="100"
                        Height="100"
                        Margin="7"
                        Background="LightGray"
                        Opacity="0.8">
                        <Rectangle
                            x:Name="NoChangeElement"
                            Canvas.Left="35"
                            Canvas.Top="35"
                            Width="30"
                            Height="30"
                            Fill="White" />

                        <Rectangle
                            x:Name="LeftElement"
                            Width="35"
                            Height="100"
                            Fill="Gray"
                            RadiusX="3"
                            RadiusY="3" />
                        <Rectangle
                            x:Name="TopElement"
                            Width="100"
                            Height="35"
                            Fill="Gray"
                            RadiusX="3"
                            RadiusY="3" />
                        <Rectangle
                            x:Name="RightElement"
                            Canvas.Left="65"
                            Width="35"
                            Height="100"
                            Fill="Gray"
                            RadiusX="3"
                            RadiusY="3" />
                        <Rectangle
                            x:Name="BottomElement"
                            Canvas.Top="65"
                            Width="100"
                            Height="35"
                            Fill="Gray"
                            RadiusX="3"
                            RadiusY="3" />

                        <Rectangle
                            Canvas.Left="-1"
                            Canvas.Top="-1"
                            Width="102"
                            Height="102"
                            Opacity="1"
                            RadiusX="3"
                            RadiusY="3"
                            Stroke="White" />
                        <Rectangle
                            Canvas.Left="-2"
                            Canvas.Top="-2"
                            Width="104"
                            Height="104"
                            Opacity="0.7"
                            RadiusX="3"
                            RadiusY="3"
                            Stroke="White" />
                        <Rectangle
                            Canvas.Left="-3"
                            Canvas.Top="-3"
                            Width="106"
                            Height="106"
                            Opacity="0.45"
                            RadiusX="3"
                            RadiusY="3"
                            Stroke="White" />
                        <Rectangle
                            Canvas.Left="-4"
                            Canvas.Top="-4"
                            Width="108"
                            Height="108"
                            Opacity="0.3"
                            RadiusX="3"
                            RadiusY="3"
                            Stroke="White" />
                        <Rectangle
                            Canvas.Left="-5"
                            Canvas.Top="-5"
                            Width="110"
                            Height="110"
                            Opacity="0.2"
                            RadiusX="3"
                            RadiusY="3"
                            Stroke="White" />
                        <Rectangle
                            Canvas.Left="-6"
                            Canvas.Top="-6"
                            Width="112"
                            Height="112"
                            Opacity="0.1"
                            RadiusX="3"
                            RadiusY="3"
                            Stroke="White" />
                        <Rectangle
                            Canvas.Left="-7"
                            Canvas.Top="-7"
                            Width="114"
                            Height="114"
                            Opacity="0.05"
                            RadiusX="3"
                            RadiusY="3"
                            Stroke="White" />
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LayoutItemSelectionIndicator.DefaultStyleBase" TargetType="dxlc:LayoutItemSelectionIndicator">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Opacity="0.2" Color="Red" />
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="Red" />
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxlc:LayoutItemSelectionIndicator">
                    <dx:Container>
                        <Rectangle
                            Margin="-2"
                            Fill="{TemplateBinding Background}"
                            IsHitTestVisible="False"
                            RadiusX="2"
                            RadiusY="2"
                            Stroke="{TemplateBinding BorderBrush}"
                            StrokeThickness="2" />

                        <dxlc:DockLayoutControl Margin="-2" dx:FrameworkElementHelper.IsVisible="{TemplateBinding AllowSizing}" ItemSpace="0">
                            <dxlc:DockLayoutControl.Resources>
                                <Style x:Key="SizerStyle" TargetType="dxlc:ElementSizer">
                                    <Setter Property="CollapseOnDoubleClick" Value="False" />
                                    <Setter Property="UseSizingStep" Value="True" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="dxlc:ElementSizer">
                                                <dx:Container>
                                                    <Rectangle
                                                        x:Name="HorizontalRootElement"
                                                        Height="4"
                                                        Cursor="SizeNS"
                                                        Fill="Transparent" />
                                                    <Rectangle
                                                        x:Name="VerticalRootElement"
                                                        Width="4"
                                                        Cursor="SizeWE"
                                                        Fill="Transparent" />
                                                </dx:Container>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </dxlc:DockLayoutControl.Resources>

                            <dxlc:ElementSizer
                                x:Name="LeftSizingElement"
                                dxlc:DockLayoutControl.Dock="Left"
                                Element="{TemplateBinding Element}"
                                Side="Left"
                                Style="{StaticResource SizerStyle}" />
                            <dxlc:ElementSizer
                                x:Name="RightSizingElement"
                                dxlc:DockLayoutControl.Dock="Right"
                                Element="{TemplateBinding Element}"
                                Side="Right"
                                Style="{StaticResource SizerStyle}" />
                            <dxlc:ElementSizer
                                x:Name="TopSizingElement"
                                dxlc:DockLayoutControl.Dock="Top"
                                Element="{TemplateBinding Element}"
                                Side="Top"
                                Style="{StaticResource SizerStyle}" />
                            <dxlc:ElementSizer
                                x:Name="BottomSizingElement"
                                dxlc:DockLayoutControl.Dock="Bottom"
                                Element="{TemplateBinding Element}"
                                Side="Bottom"
                                Style="{StaticResource SizerStyle}" />

                            <dx:Container Margin="-2" dxlc:DockLayoutControl.Dock="Client">
                                <dx:Container dx:FrameworkElementHelper.IsVisible="{TemplateBinding IsHorizontalSizing}">
                                    <Rectangle Height="1" Fill="{TemplateBinding Foreground}" />
                                    <Polygon
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        Fill="{TemplateBinding Foreground}"
                                        Points="0,3.5 4,0 4,7" />
                                    <Polygon
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Center"
                                        Fill="{TemplateBinding Foreground}"
                                        Points="0,0 4,3.5 0,7" />
                                </dx:Container>

                                <dx:Container dx:FrameworkElementHelper.IsVisible="{TemplateBinding IsVerticalSizing}">
                                    <Rectangle Width="1" Fill="{TemplateBinding Foreground}" />
                                    <Polygon
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Top"
                                        Fill="{TemplateBinding Foreground}"
                                        Points="0,4 3.5,0 7,4" />
                                    <Polygon
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Bottom"
                                        Fill="{TemplateBinding Foreground}"
                                        Points="0,0 3.5,4 7,0" />
                                </dx:Container>
                            </dx:Container>

                            <dx:Container
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                dx:FrameworkElementHelper.IsVisible="{TemplateBinding IsSizing}"
                                dxlc:DockLayoutControl.Dock="Client">
                                <Rectangle Fill="{TemplateBinding Foreground}" RadiusX="2" RadiusY="2" />
                                <TextBlock
                                    Padding="3,0,3,1"
                                    DataContext="{TemplateBinding ElementSize}"
                                    Foreground="{TemplateBinding BorderBrush}"
                                    Text="{Binding}" />
                            </dx:Container>
                        </dxlc:DockLayoutControl>
                    </dx:Container>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LayoutItemParentIndicator.DefaultStyleBase" TargetType="dxlc:LayoutItemParentIndicator">
        <Setter Property="BorderBrush" Value="Red" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxlc:LayoutItemParentIndicator">
                    <Rectangle
                        Margin="-2"
                        RadiusX="2"
                        RadiusY="2"
                        Stroke="{TemplateBinding BorderBrush}"
                        StrokeDashArray="1,1"
                        StrokeThickness="2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LayoutItemDragAndDropInsertionPointIndicator.DefaultStyleBase" TargetType="dxlc:LayoutItemDragAndDropInsertionPointIndicator">
        <Setter Property="Background" Value="Red" />
        <Setter Property="BorderBrush" Value="Red" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxlc:LayoutItemDragAndDropInsertionPointIndicator">
                    <Rectangle
                        x:Name="RootElement"
                        Fill="{TemplateBinding Background}"
                        RadiusX="3"
                        RadiusY="3"
                        Stroke="{TemplateBinding BorderBrush}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.15" />
                                </VisualStateGroup.Transitions>

                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="RootElement" Storyboard.TargetProperty="(Fill).Opacity" To="0.2" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="RootElement" Storyboard.TargetProperty="(Fill).Opacity" To="0.6" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Rectangle>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LayoutItemCustomizationToolbar.DefaultStyleBase" TargetType="dxlc:LayoutItemCustomizationToolbar">
        <Setter Property="Background" Value="{StaticResource ToolBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource ToolBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxlc:LayoutItemCustomizationToolbar">
                    <dx:DXBorder
                        Margin="3"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="3">
                        <dxlc:LayoutControl
                            Padding="0"
                            Background="Transparent"
                            ItemSpace="5"
                            Orientation="Horizontal"
                            ScrollBars="None">
                            <dxlc:LayoutItemAlignmentControl x:Name="HorizontalAlignmentElement" VerticalAlignment="Center" Orientation="Horizontal" />
                            <dxlc:LayoutItemAlignmentControl x:Name="VerticalAlignmentElement" VerticalAlignment="Center" Orientation="Vertical" />
                            <dxlc:LayoutGroup
                                VerticalAlignment="Center"
                                ItemSpace="0"
                                Orientation="Vertical"
                                Visibility="{TemplateBinding ItemMovingUIVisibility}">
                                <dxlc:LayoutItemCustomizationToolbarButton
                                    x:Name="MoveItemBackwardElement"
                                    BorderThickness="1,1,1,0"
                                    CornerRadius="3,3,0,0"
                                    IsEnabled="{TemplateBinding CanMoveItemBackward}">
                                    <dxmvvm:Interaction.Behaviors>
                                        <dxlc:CustomizationToolbarButtonBehavior Toolbar="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                    </dxmvvm:Interaction.Behaviors>
                                    <StackPanel Orientation="Vertical">
                                        <dxlc:LayoutItemCustomizationToolbarButtonArrow Direction="{TemplateBinding ItemMovingBackwardDirection}" />
                                        <Rectangle Height="2" />
                                        <Rectangle Width="17" Height="6" Style="{StaticResource ElementStyle}" />
                                    </StackPanel>
                                </dxlc:LayoutItemCustomizationToolbarButton>
                                <Rectangle Height="1" Fill="{StaticResource ToolItemBorderBrush}" />
                                <dxlc:LayoutItemCustomizationToolbarButton
                                    x:Name="MoveItemForwardElement"
                                    BorderThickness="1,0,1,1"
                                    CornerRadius="0,0,3,3"
                                    IsEnabled="{TemplateBinding CanMoveItemForward}">
                                    <dxmvvm:Interaction.Behaviors>
                                        <dxlc:CustomizationToolbarButtonBehavior Toolbar="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                    </dxmvvm:Interaction.Behaviors>
                                    <StackPanel Orientation="Vertical">
                                        <Rectangle Width="17" Height="6" Style="{StaticResource ElementStyle}" />
                                        <Rectangle Height="2" />
                                        <dxlc:LayoutItemCustomizationToolbarButtonArrow Direction="{TemplateBinding ItemMovingForwardDirection}" />
                                    </StackPanel>
                                </dxlc:LayoutItemCustomizationToolbarButton>
                            </dxlc:LayoutGroup>
                            <dxlc:LayoutGroup VerticalAlignment="Center" Orientation="Vertical">
                                <TextBox
                                    x:Name="RenamingEditElement"
                                    Width="150"
                                    Padding="5,2"
                                    Background="White"
                                    BorderBrush="{StaticResource ToolItemBorderBrush}"
                                    BorderThickness="1"
                                    CaretBrush="Black"
                                    Foreground="Black"
                                    Template="{StaticResource LayoutItemCustomizationToolbar.RenamingEditElement}"
                                    Visibility="Collapsed" />
                                <dxlc:LayoutItemCustomizationToolbarButton x:Name="RenameElement" Visibility="{TemplateBinding ItemRenamingUIVisibility}">
                                    <dxmvvm:Interaction.Behaviors>
                                        <dxlc:CustomizationToolbarButtonBehavior Toolbar="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                    </dxmvvm:Interaction.Behaviors>
                                    <TextBlock
                                        Margin="4,0"
                                        HorizontalAlignment="Center"
                                        Foreground="{StaticResource ToolItemTextForeground}"
                                        Text="{Binding Strings.LayoutControl_Customization_Rename, Source={StaticResource Resources}}" />
                                </dxlc:LayoutItemCustomizationToolbarButton>
                                <dxlc:LayoutGroup HorizontalAlignment="Center" Visibility="{TemplateBinding AvailableItemsUIVisibility}">
                                    <dxlc:LayoutItemCustomizationToolbarButton x:Name="AddNewItemElement" Visibility="{TemplateBinding NewItemsUIVisibility}">
                                        <dxmvvm:Interaction.Behaviors>
                                            <dxlc:CustomizationToolbarButtonBehavior Toolbar="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                        </dxmvvm:Interaction.Behaviors>
                                        <Canvas Width="20" Height="12">
                                            <Line
                                                Canvas.Top="3"
                                                Width="8"
                                                Height="2"
                                                Stroke="Black"
                                                StrokeThickness="2"
                                                X1="0"
                                                X2="8"
                                                Y1="1"
                                                Y2="1" />
                                            <Line
                                                Canvas.Left="3"
                                                Width="2"
                                                Height="8"
                                                Stroke="Black"
                                                StrokeThickness="2"
                                                X1="1"
                                                X2="1"
                                                Y1="0"
                                                Y2="8" />

                                            <Rectangle
                                                Canvas.Left="6"
                                                Canvas.Top="6"
                                                Width="14"
                                                Height="6"
                                                Style="{StaticResource ElementStyle}" />
                                        </Canvas>
                                    </dxlc:LayoutItemCustomizationToolbarButton>
                                    <dxlc:LayoutItemCustomizationToolbarButton x:Name="MoveToAvailableItemsElement">
                                        <dxmvvm:Interaction.Behaviors>
                                            <dxlc:CustomizationToolbarButtonBehavior Toolbar="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                        </dxmvvm:Interaction.Behaviors>
                                        <Canvas Width="22" Height="16">
                                            <Rectangle
                                                Canvas.Top="4"
                                                Width="22"
                                                Height="8"
                                                Style="{StaticResource ElementStyle}" />

                                            <Line
                                                Canvas.Left="3"
                                                Width="16"
                                                Height="16"
                                                Stroke="Black"
                                                StrokeThickness="2.5"
                                                X1="0"
                                                X2="16"
                                                Y1="0"
                                                Y2="16" />
                                            <Line
                                                Canvas.Left="3"
                                                Width="16"
                                                Height="16"
                                                Stroke="Black"
                                                StrokeThickness="2.5"
                                                X1="0"
                                                X2="16"
                                                Y1="16"
                                                Y2="0" />
                                        </Canvas>
                                    </dxlc:LayoutItemCustomizationToolbarButton>
                                </dxlc:LayoutGroup>
                            </dxlc:LayoutGroup>
                            <dxlc:LayoutItemCustomizationToolbarButton x:Name="SelectParentElement" VerticalAlignment="Center">
                                <dxmvvm:Interaction.Behaviors>
                                    <dxlc:CustomizationToolbarButtonBehavior Toolbar="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                </dxmvvm:Interaction.Behaviors>
                                <Canvas Width="31" Height="25">
                                    <Canvas.Resources>
                                        <Style x:Key="CustomElementStyle" BasedOn="{StaticResource ElementStyle}" TargetType="Rectangle">
                                            <Setter Property="Width" Value="9" />
                                            <Setter Property="Height" Value="5" />
                                        </Style>
                                        <Style x:Key="SelectionStyle" TargetType="Rectangle">
                                            <Setter Property="Height" Value="7" />
                                            <Setter Property="RadiusX" Value="1" />
                                            <Setter Property="RadiusY" Value="1" />
                                            <Setter Property="Fill">
                                                <Setter.Value>
                                                    <SolidColorBrush Opacity="0.2" Color="Red" />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Stroke" Value="Red" />
                                        </Style>
                                    </Canvas.Resources>

                                    <Rectangle Canvas.Left="1" Canvas.Top="1" Style="{StaticResource CustomElementStyle}" />
                                    <Rectangle Canvas.Left="11" Canvas.Top="1" Style="{StaticResource CustomElementStyle}" />
                                    <Rectangle Canvas.Left="21" Canvas.Top="1" Style="{StaticResource CustomElementStyle}" />
                                    <Rectangle
                                        Canvas.Left="0"
                                        Canvas.Top="0"
                                        Width="31"
                                        Style="{StaticResource SelectionStyle}" />

                                    <dxlc:LayoutItemCustomizationToolbarButtonArrow Canvas.Left="12" Canvas.Top="9" Direction="Top" />

                                    <Rectangle Canvas.Left="1" Canvas.Top="19" Style="{StaticResource CustomElementStyle}" />
                                    <Rectangle Canvas.Left="11" Canvas.Top="19" Style="{StaticResource CustomElementStyle}" />
                                    <Rectangle Canvas.Left="21" Canvas.Top="19" Style="{StaticResource CustomElementStyle}" />
                                    <Rectangle
                                        Canvas.Left="10"
                                        Canvas.Top="18"
                                        Width="11"
                                        Style="{StaticResource SelectionStyle}" />
                                </Canvas>
                            </dxlc:LayoutItemCustomizationToolbarButton>
                        </dxlc:LayoutControl>
                    </dx:DXBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LayoutItemAlignmentButton.DefaultStyleBase" TargetType="dxlc:LayoutItemAlignmentButton">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Width" Value="20" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxlc:LayoutItemAlignmentButton">
                    <dx:DXBorder
                        x:Name="RootElement"
                        Margin="-1"
                        Background="Transparent"
                        BorderBrush="{StaticResource ToolItemBorderBrush}"
                        BorderThickness="1"
                        CornerRadius="{TemplateBinding CornerRadius}">
                        <dx:Container>
                            <Rectangle x:Name="CheckElement">
                                <Rectangle.Fill>
                                    <LinearGradientBrush>
                                        <GradientStop Offset="0" Color="Gray" />
                                        <GradientStop Offset="0.8" Color="DarkGray" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>

                            <Canvas x:Name="GlyphLeft" Width="12" Height="12">
                                <Rectangle Width="2" Height="12" Fill="Black" />
                                <Rectangle
                                    Canvas.Left="2"
                                    Canvas.Top="3"
                                    Width="10"
                                    Height="6"
                                    Style="{StaticResource ElementStyle}" />
                            </Canvas>

                            <Canvas x:Name="GlyphHorizontalCenter" Width="12" Height="12">
                                <Rectangle
                                    Canvas.Left="5"
                                    Width="2"
                                    Height="12"
                                    Fill="Black" />
                                <Rectangle
                                    Canvas.Left="0"
                                    Canvas.Top="3"
                                    Width="12"
                                    Height="6"
                                    Style="{StaticResource ElementStyle}" />
                            </Canvas>

                            <Canvas x:Name="GlyphRight" Width="12" Height="12">
                                <Rectangle
                                    Canvas.Left="0"
                                    Canvas.Top="3"
                                    Width="10"
                                    Height="6"
                                    Style="{StaticResource ElementStyle}" />
                                <Rectangle
                                    Canvas.Left="10"
                                    Width="2"
                                    Height="12"
                                    Fill="Black" />
                            </Canvas>

                            <Canvas x:Name="GlyphHorizontalStretch" Width="28" Height="12">
                                <Rectangle Width="2" Height="12" Fill="Black" />
                                <Rectangle
                                    Canvas.Left="2"
                                    Canvas.Top="3"
                                    Width="24"
                                    Height="6"
                                    Style="{StaticResource ElementStyle}" />
                                <Rectangle
                                    Canvas.Left="26"
                                    Width="2"
                                    Height="12"
                                    Fill="Black" />
                            </Canvas>

                            <Canvas x:Name="GlyphTop" Width="12" Height="12">
                                <Rectangle Width="12" Height="2" Fill="Black" />
                                <Rectangle
                                    Canvas.Left="3"
                                    Canvas.Top="2"
                                    Width="6"
                                    Height="10"
                                    Style="{StaticResource ElementStyle}" />
                            </Canvas>

                            <Canvas x:Name="GlyphVerticalCenter" Width="12" Height="12">
                                <Rectangle
                                    Canvas.Top="5"
                                    Width="12"
                                    Height="2"
                                    Fill="Black" />
                                <Rectangle
                                    Canvas.Left="3"
                                    Canvas.Top="0"
                                    Width="6"
                                    Height="12"
                                    Style="{StaticResource ElementStyle}" />
                            </Canvas>

                            <Canvas x:Name="GlyphBottom" Width="12" Height="12">
                                <Rectangle
                                    Canvas.Left="3"
                                    Canvas.Top="0"
                                    Width="6"
                                    Height="10"
                                    Style="{StaticResource ElementStyle}" />
                                <Rectangle
                                    Canvas.Top="10"
                                    Width="12"
                                    Height="2"
                                    Fill="Black" />
                            </Canvas>

                            <Canvas x:Name="GlyphVerticalStretch" Width="12" Height="28">
                                <Rectangle Width="12" Height="2" Fill="Black" />
                                <Rectangle
                                    Canvas.Left="3"
                                    Canvas.Top="2"
                                    Width="6"
                                    Height="24"
                                    Style="{StaticResource ElementStyle}" />
                                <Rectangle
                                    Canvas.Top="26"
                                    Width="12"
                                    Height="2"
                                    Fill="Black" />
                            </Canvas>
                        </dx:Container>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootElement" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToolItemMouseOverBackground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootElement" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToolItemPressedBackground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Checked" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </dx:DXBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LayoutItemAlignmentControl.DefaultStyleBase" TargetType="dxlc:LayoutItemAlignmentControl">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxlc:LayoutItemAlignmentControl">
                    <dx:Container>
                        <dxlc:LayoutControl
                            x:Name="HorizontalRootElement"
                            Padding="1"
                            Background="{StaticResource ToolItemBackground}"
                            ItemSpace="1"
                            Orientation="Vertical"
                            ScrollBars="None">
                            <dxlc:LayoutControl.Clip>
                                <GeometryGroup>
                                    <RectangleGeometry RadiusX="3.5" RadiusY="3.5" Rect="0,0,64,43" />
                                </GeometryGroup>
                            </dxlc:LayoutControl.Clip>

                            <dxlc:LayoutGroup ItemSpace="1" Orientation="Horizontal">
                                <dxlc:LayoutItemAlignmentButton x:Name="HorizontalStartElement" CornerRadius="3,0,0,0" Kind="Left">
                                    <dxmvvm:Interaction.Behaviors>
                                        <dxlc:CustomizationToolbarButtonBehavior Toolbar="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxlc:LayoutItemCustomizationToolbar}}" />
                                    </dxmvvm:Interaction.Behaviors>
                                </dxlc:LayoutItemAlignmentButton>
                                <dxlc:LayoutItemAlignmentButton x:Name="HorizontalCenterElement" Kind="HorizontalCenter">
                                    <dxmvvm:Interaction.Behaviors>
                                        <dxlc:CustomizationToolbarButtonBehavior Toolbar="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxlc:LayoutItemCustomizationToolbar}}" />
                                    </dxmvvm:Interaction.Behaviors>
                                </dxlc:LayoutItemAlignmentButton>
                                <dxlc:LayoutItemAlignmentButton x:Name="HorizontalEndElement" CornerRadius="0,3,0,0" Kind="Right">
                                    <dxmvvm:Interaction.Behaviors>
                                        <dxlc:CustomizationToolbarButtonBehavior Toolbar="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxlc:LayoutItemCustomizationToolbar}}" />
                                    </dxmvvm:Interaction.Behaviors>
                                </dxlc:LayoutItemAlignmentButton>
                            </dxlc:LayoutGroup>
                            <dxlc:LayoutItemAlignmentButton
                                x:Name="HorizontalStretchElement"
                                Width="62"
                                CornerRadius="0,0,3,3"
                                Kind="HorizontalStretch">
                                <dxmvvm:Interaction.Behaviors>
                                    <dxlc:CustomizationToolbarButtonBehavior Toolbar="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxlc:LayoutItemCustomizationToolbar}}" />
                                </dxmvvm:Interaction.Behaviors>
                            </dxlc:LayoutItemAlignmentButton>
                        </dxlc:LayoutControl>

                        <dxlc:LayoutControl
                            x:Name="VerticalRootElement"
                            Padding="1"
                            Background="{StaticResource ToolItemBackground}"
                            ItemSpace="1"
                            Orientation="Horizontal"
                            ScrollBars="None">
                            <dxlc:LayoutControl.Clip>
                                <GeometryGroup>
                                    <RectangleGeometry RadiusX="3.5" RadiusY="3.5" Rect="0,0,43,64" />
                                </GeometryGroup>
                            </dxlc:LayoutControl.Clip>

                            <dxlc:LayoutGroup ItemSpace="1" Orientation="Vertical">
                                <dxlc:LayoutItemAlignmentButton x:Name="VerticalStartElement" CornerRadius="3,0,0,0" Kind="Top">
                                    <dxmvvm:Interaction.Behaviors>
                                        <dxlc:CustomizationToolbarButtonBehavior Toolbar="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxlc:LayoutItemCustomizationToolbar}}" />
                                    </dxmvvm:Interaction.Behaviors>
                                </dxlc:LayoutItemAlignmentButton>
                                <dxlc:LayoutItemAlignmentButton x:Name="VerticalCenterElement" Kind="VerticalCenter">
                                    <dxmvvm:Interaction.Behaviors>
                                        <dxlc:CustomizationToolbarButtonBehavior Toolbar="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxlc:LayoutItemCustomizationToolbar}}" />
                                    </dxmvvm:Interaction.Behaviors>
                                </dxlc:LayoutItemAlignmentButton>
                                <dxlc:LayoutItemAlignmentButton x:Name="VerticalEndElement" CornerRadius="0,0,0,3" Kind="Bottom">
                                    <dxmvvm:Interaction.Behaviors>
                                        <dxlc:CustomizationToolbarButtonBehavior Toolbar="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxlc:LayoutItemCustomizationToolbar}}" />
                                    </dxmvvm:Interaction.Behaviors>
                                </dxlc:LayoutItemAlignmentButton>
                            </dxlc:LayoutGroup>
                            <dxlc:LayoutItemAlignmentButton
                                x:Name="VerticalStretchElement"
                                Height="62"
                                CornerRadius="0,3,3,0"
                                Kind="VerticalStretch">
                                <dxmvvm:Interaction.Behaviors>
                                    <dxlc:CustomizationToolbarButtonBehavior Toolbar="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxlc:LayoutItemCustomizationToolbar}}" />
                                </dxmvvm:Interaction.Behaviors>
                            </dxlc:LayoutItemAlignmentButton>
                        </dxlc:LayoutControl>
                    </dx:Container>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LayoutItemCustomizationToolbarButton.DefaultStyleBase" TargetType="dxlc:LayoutItemCustomizationToolbarButton">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="3" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxlc:LayoutItemCustomizationToolbarButton">
                    <Grid>
                        <dx:DXBorder
                            x:Name="RootElement"
                            Padding="{TemplateBinding Padding}"
                            Background="{StaticResource ToolItemBackground}"
                            BorderBrush="{StaticResource ToolItemBorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}">
                            <ContentPresenter Content="{TemplateBinding Content}" />
                        </dx:DXBorder>

                        <dx:DXBorder
                            x:Name="DisabledElement"
                            Background="White"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            IsHitTestVisible="False"
                            Opacity="0" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootElement" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToolItemMouseOverBackground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootElement" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToolItemPressedBackground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DisabledElement" Storyboard.TargetProperty="Opacity" To="0.4" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LayoutItemCustomizationToolbarButtonArrow.DefaultStyleBase" TargetType="dxlc:LayoutItemCustomizationToolbarButtonArrow">
        <Setter Property="DefaultDirection" Value="Top" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Height" Value="7" />
        <Setter Property="Width" Value="7" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxlc:LayoutItemCustomizationToolbarButtonArrow">
                    <Polygon
                        Fill="{TemplateBinding Foreground}"
                        Points="3.5,1 6,3.5 4.5,3.5 4.5,6.5 2.5,6.5 2.5,3.5 1,3.5"
                        RenderTransform="{TemplateBinding RotateTransform}"
                        RenderTransformOrigin="0.5,0.5"
                        Stroke="{TemplateBinding Foreground}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LayoutControlCustomizationControl.DefaultStyleBase" TargetType="dxlc:LayoutControlCustomizationControl">
        <Setter Property="BorderBrush" Value="Red" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxlc:LayoutControlCustomizationControl">
                    <dx:DXBorder Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <dxlc:LayoutControlAvailableItemsControl
                            x:Name="AvailableItemsElement"
                            AvailableItems="{TemplateBinding AvailableItems}"
                            NewItemsInfo="{TemplateBinding NewItemsInfo}"
                            NewItemsUIVisibility="{TemplateBinding NewItemsUIVisibility}"
                            Visibility="{TemplateBinding AvailableItemsUIVisibility}" />
                    </dx:DXBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LayoutControlAvailableItemsControl.DefaultStyleBase" TargetType="dxlc:LayoutControlAvailableItemsControl">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="LayoutGroupItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock FontWeight="Bold" Text="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxlc:LayoutControlAvailableItemsControl">
                    <Grid>
                        <Grid.Resources>
                            <dx:MultiplyConverter x:Key="MultiplyConverter" />
                            <Style x:Key="listItemStyle" TargetType="dxlc:LayoutControlAvailableListBoxItem">
                                <Setter Property="Background" Value="{StaticResource ToolItemBackground}" />
                                <Setter Property="BorderBrush" Value="{StaticResource ToolItemBorderBrush}" />
                                <Setter Property="BorderThickness" Value="1" />
                                <Setter Property="Foreground" Value="{StaticResource ToolItemTextForeground}" />
                                <Setter Property="HorizontalContentAlignment" Value="Left" />
                                <Setter Property="Padding" Value="8,3" />
                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="dxlc:LayoutControlAvailableListBoxItem">
                                            <dx:DXBorder
                                                x:Name="RootElement"
                                                Margin="0,0,0,1"
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                CornerRadius="2">
                                                <dxlc:DockLayoutControl ItemSpace="0">
                                                    <ContentPresenter
                                                        Margin="{TemplateBinding Padding}"
                                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                        dxlc:DockLayoutControl.Dock="Client"
                                                        Content="{TemplateBinding Content}"
                                                        ContentTemplate="{TemplateBinding ContentTemplate}" />
                                                    <dxlc:LayoutItemCustomizationToolbarButton
                                                        x:Name="DeleteElement"
                                                        Margin="0,0,4,0"
                                                        VerticalAlignment="Center"
                                                        dxlc:DockLayoutControl.Dock="Right"
                                                        CornerRadius="7"
                                                        Visibility="{TemplateBinding DeleteElementVisibility}">
                                                        <Grid Width="6" Height="6">
                                                            <Line
                                                                Stroke="Black"
                                                                StrokeThickness="1.5"
                                                                X1="0"
                                                                X2="6"
                                                                Y1="0"
                                                                Y2="6" />
                                                            <Line
                                                                Stroke="Black"
                                                                StrokeThickness="1.5"
                                                                X1="0"
                                                                X2="6"
                                                                Y1="6"
                                                                Y2="0" />
                                                        </Grid>
                                                    </dxlc:LayoutItemCustomizationToolbarButton>
                                                </dxlc:DockLayoutControl>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal" />
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootElement" Storyboard.TargetProperty="Background">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToolItemMouseOverBackground}" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                            </dx:DXBorder>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <Style x:Key="listStyle" TargetType="ListBox">
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="ItemContainerStyle" Value="{StaticResource listItemStyle}" />
                                <Setter Property="ItemsPanel">
                                    <Setter.Value>
                                        <ItemsPanelTemplate>
                                            <StackPanel />
                                        </ItemsPanelTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Padding" Value="2" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ListBox">
                                            <ScrollViewer
                                                x:Name="ScrollViewer"
                                                Padding="{TemplateBinding Padding}"
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="Transparent"
                                                BorderThickness="0">
                                                <ItemsPresenter />
                                            </ScrollViewer>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>

                        <dx:DXBorder
                            x:Name="IconElement"
                            Width="20"
                            Height="20"
                            Padding="2"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            Background="{StaticResource ToolBackground}"
                            BorderBrush="{StaticResource ToolBorderBrush}"
                            BorderThickness="1"
                            CornerRadius="2">
                            <StackPanel>
                                <Rectangle Height="4" Style="{StaticResource ElementStyle}" />
                                <Rectangle Height="4" Margin="0,1,0,0" Style="{StaticResource ElementStyle}" />
                                <Rectangle Height="4" Margin="0,1,0,0" Style="{StaticResource ElementStyle}" />
                            </StackPanel>
                        </dx:DXBorder>

                        <dx:DXBorder
                            x:Name="ListElement"
                            HorizontalAlignment="Left"
                            Background="{StaticResource ToolBackground}"
                            BorderBrush="{StaticResource ToolBorderBrush}"
                            BorderThickness="1"
                            CornerRadius="3"
                            IsHitTestVisible="False"
                            Opacity="0">
                            <dx:DXBorder.RenderTransform>
                                <TranslateTransform X="{Binding ElementName=ListElement, Path=ActualWidth, Converter={StaticResource MultiplyConverter}, ConverterParameter=-1}" />
                            </dx:DXBorder.RenderTransform>

                            <dxlc:LayoutControl Padding="0" ItemSpace="0" Orientation="Vertical">
                                <StackPanel VerticalAlignment="Top" Orientation="Vertical" Visibility="{TemplateBinding NewItemsUIVisibility}">
                                    <dx:DXBorder Background="{StaticResource ToolTextBackground}" CornerRadius="2,2,0,0">
                                        <TextBlock Margin="5,1" Foreground="{StaticResource ToolTextForeground}" Text="{Binding Strings.LayoutControl_Customization_NewItems, Source={StaticResource Resources}}" />
                                    </dx:DXBorder>
                                    <ListBox x:Name="NewItemsListElement" Style="{StaticResource listStyle}" />
                                </StackPanel>

                                <dx:DXBorder VerticalAlignment="Top" Background="{StaticResource ToolTextBackground}" CornerRadius="2,2,0,0">
                                    <TextBlock Margin="5,1" Foreground="{StaticResource ToolTextForeground}" Text="{Binding Strings.LayoutControl_Customization_AvailableItems, Source={StaticResource Resources}}" />
                                </dx:DXBorder>
                                <ListBox x:Name="AvailableItemsListElement" MinHeight="60" Style="{StaticResource listStyle}" />
                            </dxlc:LayoutControl>
                        </dx:DXBorder>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="LayoutStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="ListOpen" To="ListClosed">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ListElement" Storyboard.TargetProperty="(RenderTransform).X" From="0" Duration="0:0:0.2" />
                                            <DoubleAnimation BeginTime="0:0:0.2" Storyboard.TargetName="ListElement" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
                                            <ObjectAnimationUsingKeyFrames BeginTime="0:0:0.2" Storyboard.TargetName="IconElement" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>

                                <VisualState x:Name="ListClosed" />
                                <VisualState x:Name="ListOpen">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ListElement" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ListElement" Storyboard.TargetProperty="IsHitTestVisible">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Boolean>True</sys:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="ListElement" Storyboard.TargetProperty="(RenderTransform).X" To="0" Duration="0:0:0.2" />
                                        <ObjectAnimationUsingKeyFrames BeginTime="0:0:0.2" Storyboard.TargetName="IconElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion DEFAULT STYLES-->
</ResourceDictionary>