<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:dxcoi="http://schemas.devexpress.com/winfx/2008/xaml/controls/internal"
    xmlns:dxcot="http://schemas.devexpress.com/winfx/2008/xaml/controls/themekeys"
    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxwuit="http://schemas.devexpress.com/winfx/2008/xaml/windowsui/themekeys"
    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
    xmlns:dxnavi="clr-namespace:DevExpress.Xpf.Navigation.Internal;assembly=DevExpress.Xpf.Controls.v24.1"
    xmlns:dxwuii="http://schemas.devexpress.com/winfx/2008/xaml/windowsui/internal"
    xmlns:dxwui="http://schemas.devexpress.com/winfx/2008/xaml/windowsui"
    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
    xmlns:dxmvvmi="clr-namespace:DevExpress.Mvvm.UI.Interactivity;assembly=DevExpress.Xpf.Core.v24.1"
    xmlns:dxnav="http://schemas.devexpress.com/winfx/2008/xaml/navigation"
    xmlns:dxcop="clr-namespace:DevExpress.Xpf.Controls.Primitives;assembly=DevExpress.Xpf.Controls.v24.1">

    <ResourceDictionary.MergedDictionaries>
        <dxi:ThemeResourceDictionary Path="Common/{ThemeName}/Common.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <dx:WpfSvgPalette x:Key="{dxcot:LWKey HamburgerMenuSvgPalette.SvgPaletteInMenu}">
        <SolidColorBrush x:Key="BlackColor" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="WhiteColor" Color="{dx:LWColor '#FF185ABD, Win11Dark=#FF005FBA'}" />
        <SolidColorBrush x:Key="RedColor" Color="#FFE94A48" />
        <SolidColorBrush x:Key="YellowColor" Color="#FFEAC282" />
        <SolidColorBrush x:Key="GreenColor" Color="#FF51C96C" />
        <SolidColorBrush x:Key="BlueColor" Color="#FF5FAEEB" />
        <dx:WpfSvgPalette.States>
            <dx:WpfSvgPalette x:Key="Hover">
                <SolidColorBrush x:Key="BlackColor" Color="#FFFFFFFF" />
                <SolidColorBrush x:Key="WhiteColor" Color="#FF1651AA" />
                <SolidColorBrush x:Key="RedColor" Color="#FFE94A48" />
                <SolidColorBrush x:Key="YellowColor" Color="#FFEAC282" />
                <SolidColorBrush x:Key="GreenColor" Color="#FF51C96C" />
                <SolidColorBrush x:Key="BlueColor" Color="#FF5FAEEB" />
            </dx:WpfSvgPalette>
            <dx:WpfSvgPalette x:Key="Pressed">
                <SolidColorBrush x:Key="BlackColor" Color="#FFFFFFFF" />
                <SolidColorBrush x:Key="WhiteColor" Color="#FF004F99" />
                <SolidColorBrush x:Key="RedColor" Color="#FFE94A48" />
                <SolidColorBrush x:Key="YellowColor" Color="#FFEAC282" />
                <SolidColorBrush x:Key="GreenColor" Color="#FF51C96C" />
                <SolidColorBrush x:Key="BlueColor" Color="#FF5FAEEB" />
            </dx:WpfSvgPalette>
            <dx:WpfSvgPalette x:Key="Checked">
                <SolidColorBrush x:Key="BlackColor" Color="#FFFFFFFF" />
                <SolidColorBrush x:Key="WhiteColor" Color="{dx:LWColor '#FF004F99, Win11Dark=#FF005FBA'}" />
                <SolidColorBrush x:Key="RedColor" Color="#FFE94A48" />
                <SolidColorBrush x:Key="YellowColor" Color="#FFEAC282" />
                <SolidColorBrush x:Key="GreenColor" Color="#FF51C96C" />
                <SolidColorBrush x:Key="BlueColor" Color="#FF5FAEEB" />
            </dx:WpfSvgPalette>
            <dx:WpfSvgPalette x:Key="HoverChecked">
                <SolidColorBrush x:Key="BlackColor" Color="#FFFFFFFF" />
                <SolidColorBrush x:Key="WhiteColor" Color="#FF004F99" />
                <SolidColorBrush x:Key="RedColor" Color="#FFE94A48" />
                <SolidColorBrush x:Key="YellowColor" Color="#FFEAC282" />
                <SolidColorBrush x:Key="GreenColor" Color="#FF51C96C" />
                <SolidColorBrush x:Key="BlueColor" Color="#FF5FAEEB" />
            </dx:WpfSvgPalette>
            <dx:WpfSvgPalette x:Key="PressedChecked">
                <SolidColorBrush x:Key="BlackColor" Color="#FFFFFFFF" />
                <SolidColorBrush x:Key="WhiteColor" Color="#FF004F99" />
                <SolidColorBrush x:Key="RedColor" Color="#FFE94A48" />
                <SolidColorBrush x:Key="YellowColor" Color="#FFEAC282" />
                <SolidColorBrush x:Key="GreenColor" Color="#FF51C96C" />
                <SolidColorBrush x:Key="BlueColor" Color="#FF5FAEEB" />
            </dx:WpfSvgPalette>
        </dx:WpfSvgPalette.States>
    </dx:WpfSvgPalette>
    <dx:WpfSvgPalette x:Key="{dxcot:LWKey HamburgerMenuSvgPalette.SvgPaletteInSubMenu}">
        <SolidColorBrush x:Key="BlackColor" Color="{dx:LWColor '#FF646464, Win11Dark=#FFD1D1D1'}" />
        <SolidColorBrush x:Key="WhiteColor" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="RedColor" Color="#FFEF3C3B" />
        <SolidColorBrush x:Key="YellowColor" Color="#FFF79539" />
        <SolidColorBrush x:Key="GreenColor" Color="#FF51C96C" />
        <SolidColorBrush x:Key="BlueColor" Color="#FF5590CC" />
        <dx:WpfSvgPalette.States>
            <dx:WpfSvgPalette x:Key="Hover">
                <SolidColorBrush x:Key="BlackColor" Color="{dx:LWColor '#FF646464, Win11Dark=#FFFFFFFF'}" />
                <SolidColorBrush x:Key="WhiteColor" Color="#FFFFFFFF" />
                <SolidColorBrush x:Key="RedColor" Color="#FFEF3C3B" />
                <SolidColorBrush x:Key="YellowColor" Color="#FFF79539" />
                <SolidColorBrush x:Key="GreenColor" Color="#FF51C96C" />
                <SolidColorBrush x:Key="BlueColor" Color="#FF5590CC" />
            </dx:WpfSvgPalette>
            <dx:WpfSvgPalette x:Key="Pressed">
                <SolidColorBrush x:Key="BlackColor" Color="{dx:LWColor '#FF646464, Win11Dark=#FFD1D1D1'}" />
                <SolidColorBrush x:Key="WhiteColor" Color="#FFFFFFFF" />
                <SolidColorBrush x:Key="RedColor" Color="#FFEF3C3B" />
                <SolidColorBrush x:Key="YellowColor" Color="#FFF79539" />
                <SolidColorBrush x:Key="GreenColor" Color="#FF51C96C" />
                <SolidColorBrush x:Key="BlueColor" Color="#FF5590CC" />
            </dx:WpfSvgPalette>
        </dx:WpfSvgPalette.States>
    </dx:WpfSvgPalette>
    <dx:BoolToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <dxwuii:OrientationInvertConverter x:Key="orientationInvertConverter" />
    <dxmvvm:ObjectToObjectConverter x:Key="arrowDirectionToAngleConverter">
        <dxmvvm:MapItem Source="Left" Target="90.0" />
        <dxmvvm:MapItem Source="Up" Target="180.0" />
        <dxmvvm:MapItem Source="Right" Target="-90.0" />
        <dxmvvm:MapItem Source="Down" Target="0.0" />
    </dxmvvm:ObjectToObjectConverter>
    <dxmvvm:ObjectToObjectConverter x:Key="orientationToAngleConverter">
        <dxmvvm:MapItem Source="Default" Target="0.0" />
        <dxmvvm:MapItem Source="Inverted" Target="180.0" />
    </dxmvvm:ObjectToObjectConverter>
    <dx:BoolToVisibilityInverseConverter x:Key="boolToVisibilityInverseConverter" />
    <SolidColorBrush x:Key="{dxcot:LWKey BreadcrumbSelectedItem.ArrowHoverBackground}" Color="{StaticResource Color.ListItem.HoverBackground}" />
    <SolidColorBrush x:Key="{dxcot:LWKey BreadcrumbSelectedItem.HoverForeground}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxcot:LWKey BreadcrumbSelectedItem.PressedForeground}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxcot:LWKey BreadcrumbSelectedItem.ArrowPressedBackground}" Color="{StaticResource Color.ListItem.SelectionBackground}" />
    <SolidColorBrush x:Key="{dxcot:LWKey BreadcrumbSelectedItem.ButtonHoverBackground}" Color="{StaticResource Color.ListItem.HoverBackground}" />
    <SolidColorBrush x:Key="{dxcot:LWKey BreadcrumbSelectedItem.ButtonPressedBackground}" Color="{StaticResource Color.ListItem.SelectionBackground}" />
    <SolidColorBrush x:Key="{dxcot:LWKey BreadcrumbSelectedItem.HoverBorderBrush}" Color="Transparent" />
    <SolidColorBrush x:Key="{dxcot:LWKey BreadcrumbSelectedItem.PressedBorderBrush}" Color="Transparent" />
    <SolidColorBrush x:Key="{dxcot:LWKey BreadcrumbSelectedItem.HoverBackground}" Color="Transparent" />
    <SolidColorBrush x:Key="{dxcot:LWKey BreadcrumbItem.Foreground}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxcot:LWKey BreadcrumbItem.HoverForeground}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxcot:LWKey BreadcrumbItem.PressedForeground}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxcot:LWKey BreadcrumbItem.PressedBackground}" Color="{StaticResource Color.ListItem.SelectionBackground}" />
    <SolidColorBrush x:Key="{dxcot:LWKey BreadcrumbItem.HoverBorderBrush}" Color="{StaticResource Color.ListItem.HoverBorder}" />
    <SolidColorBrush x:Key="{dxcot:LWKey BreadcrumbItem.PressedBorderBrush}" Color="{StaticResource Color.ListItem.SelectionBorder}" />
    <SolidColorBrush x:Key="{dxcot:LWKey BreadcrumbItem.HoverBackground}" Color="{StaticResource Color.ListItem.HoverBackground}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.HyperlinkForegroundBrush}" Color="{dx:LWColor '#FF0066CC, Win11Dark=#FF99EBFF'}" Opacity="1" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.HyperlinkHoverForegroundBrush}" Color="{dx:LWColor '#FF0066CC, Win11Dark=#FFD7EFF5'}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.HyperlinkPressedForegroundBrush}" Color="{dx:LWColor '#FF0066CC, Win11Dark=#FF65B8CC'}" Opacity="1" />
    <SolidColorBrush x:Key="{dxcot:LWKey AppBarElements.Background}" Color="{StaticResource Color.Control.Background}" />
    <dx:ColorStaticResource x:Key="{dxcot:LWKey AppBarElements.AppBarButtonForegroundColor}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxcot:LWKey AppBarElements.AppBarButtonForeground}" Color="{DynamicResource {dxcot:LWKey AppBarElements.AppBarButtonForegroundColor}}" />
    <SolidColorBrush x:Key="{dxcot:LWKey AppBarElements.AppBarTileButtonBackground}" Color="{StaticResource Color.Button.SimpleButtonBackground}" />
    <dx:ColorStaticResource x:Key="{dxcot:LWKey CommandButtonElements.NormalForeColor}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxcot:LWKey CommandButtonElements.NormalBorderBrush}" Color="{StaticResource Color.Button.SimpleButtonBackground}" />
    <SolidColorBrush x:Key="{dxcot:LWKey CommandButtonElements.NormalBackBrush}" Color="{StaticResource Color.Button.SimpleButtonBackground}" />
    <dx:ColorStaticResource x:Key="{dxcot:LWKey CommandButtonElements.HoverForeColor}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxcot:LWKey CommandButtonElements.HoverBorderBrush}" Color="{StaticResource Color.ListItem.HoverBackground}" />
    <SolidColorBrush x:Key="{dxcot:LWKey CommandButtonElements.HoverBackBrush}" Color="{StaticResource Color.ListItem.HoverBackground}" />
    <dx:ColorStaticResource x:Key="{dxcot:LWKey CommandButtonElements.PressedForeColor}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxcot:LWKey CommandButtonElements.PressedBorderBrush}" Color="{StaticResource Color.ListItem.SelectionBackground}" />
    <SolidColorBrush x:Key="{dxcot:LWKey CommandButtonElements.PressedBackBrush}" Color="{StaticResource Color.ListItem.SelectionBackground}" />
    <SolidColorBrush x:Key="{dxcot:LWKey MenuFlyoutElements.Background}" Color="{StaticResource Color.Editor.Background}" />
    <SolidColorBrush x:Key="{dxcot:LWKey MenuFlyoutElements.Foreground}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxcot:LWKey MenuFlyoutElements.MenuFlyoutSeparatorForeground}" Color="{StaticResource Color.Delimiter}" />
    <SolidColorBrush x:Key="{dxcot:LWKey MenuFlyoutElements.PressedBackground}" Color="{StaticResource Color.ListItem.SelectionBackground}" />
    <SolidColorBrush x:Key="{dxcot:LWKey MenuFlyoutElements.PressedForeground}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxcot:LWKey MenuFlyoutElements.SelectedBackground}" Color="{StaticResource Color.ListItem.SelectionBackground}" />
    <SolidColorBrush x:Key="{dxcot:LWKey MenuFlyoutElements.SelectedForeground}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxcot:LWKey MessageBoxElements.WindowBackground}" Color="{StaticResource Color.WindowBackground}" />
    <SolidColorBrush x:Key="{dxcot:LWKey MessageBoxElements.Background}" Color="{StaticResource Color.Border}" Opacity="0.62" />
    <SolidColorBrush x:Key="{dxcot:LWKey MessageBoxElements.Foreground}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxcot:LWKey MessageBoxElements.TitleForeground}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxcot:LWKey PageViewElements.Background}" Color="Transparent" />
    <dx:ColorStaticResource x:Key="{dxcot:LWKey TileNavPaneElements.TileNavButtonForegroundColor}" Color="{StaticResource Color.Foreground.Alt}" />
    <dx:ColorStaticResource x:Key="{dxcot:LWKey TileNavPaneElements.TileSelectorItemForegroundColor}" Color="{StaticResource Color.Foreground.Alt}" />
    <SolidColorBrush x:Key="{dxcot:LWKey TileNavPaneElements.TileNavPaneBackground}" Color="{dx:LWColor 'Color.Accent, Win11Dark=Color.Control.Background'}" />
    <SolidColorBrush x:Key="{dxcot:LWKey TileNavPaneElements.TileNavPaneFlyoutBackground}" Color="{StaticResource Color.Editor.Background}" />
    <SolidColorBrush x:Key="{dxcot:LWKey TileNavPaneElements.TileNavButtonForeground}" Color="{dx:LWColor 'Color.Foreground.Alt, Win11Dark=Color.Foreground.Primary'}" />
    <SolidColorBrush x:Key="{dxcot:LWKey TileNavPaneElements.TileSelectorItemBackground}" Color="{StaticResource Color.Accent}" />
    <SolidColorBrush x:Key="{dxcot:LWKey TileNavPaneElements.TileSelectorItemForeground}" Color="{StaticResource Color.Foreground.Alt}" />
    <SolidColorBrush x:Key="{dxcot:LWKey TileNavPaneElements.TileSelectorItemSelection}" Color="{StaticResource Color.Accent}" />
    <Color x:Key="{dxcot:LWKey NavigationBarElements.ItemHoverForegroundColor}">Transparent</Color>
    <Color x:Key="{dxcot:LWKey NavigationBarElements.ItemSelectedForegroundColor}">Transparent</Color>
    <SolidColorBrush x:Key="{dxcot:LWKey NavigationBarElements.Background}" Color="Transparent" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.HeaderForegroundBrush}" Color="{dx:LWColor 'Color.Foreground.Alt, Win11Dark=Color.Foreground.Primary, Win11Light=Color.Foreground.Primary'}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.HorizontalHeaderBackgroundBrush}" Color="{dx:LWColor 'Color.Backstage.Background, Win11Dark=Color.PanelBackground, Win11Light=Color.PanelBackground'}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.BackgroundBrush}" Color="Transparent" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.PaneBackgroundBrush}" Color="{dx:LWColor 'Color.Backstage.Background, Win11Dark=Color.PanelBackground, Win11Light=Color.PanelBackground'}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.BottomBarBackgroundBrush}" Color="{dx:LWColor 'Color.Backstage.Background, Win11Dark=Color.PanelBorder, Win11Light=Color.PanelBorder'}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.BottomBarSeparatorBrush}" Color="{StaticResource Color.Backstage.Separator}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.ItemSeparatorBrush}" Color="{StaticResource Color.Backstage.Separator}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.SubMenuPaneBackgroundBrush}" Color="{StaticResource Color.Control.Background}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.SubMenuPaneForegroundBrush}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.ToggleStateButtonInlineBackgroundBrush}" Color="Transparent" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.ToggleStateButtonInlineForegroundBrush}" Color="{dx:LWColor 'Color.Foreground.Alt, Win11Dark=Color.Foreground.Primary, Win11Light=Color.Foreground.Primary'}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.ToggleStateButtonInlineHoverBackgroundBrush}" Color="{dx:LWColor 'Color.Backstage.ItemHoverBackground, Win11Dark=Color.Button.HoverBackground, Win11Light=Color.Button.HoverBackground'}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.ToggleStateButtonInlineHoverForegroundBrush}" Color="{dx:LWColor 'Color.Foreground.Alt, Win11Dark=Color.Foreground.Primary, Win11Light=Color.Foreground.Primary'}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.ToggleStateButtonInlinePressedBackgroundBrush}" Color="{dx:LWColor 'Color.Backstage.ItemSelectionBackground, Win11Dark=Color.ListItem.PressedBackground, Win11Light=Color.ListItem.PressedBackground'}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.ToggleStateButtonInlinePressedForegroundBrush}" Color="{dx:LWColor 'Color.Foreground.Alt, Win11Dark=Color.Foreground.Primary, Win11Light=Color.Foreground.Muted'}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.ToggleStateButtonFlyoutBackgroundBrush}" Color="Transparent" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.ToggleStateButtonFlyoutForegroundBrush}" Color="{dx:LWColor 'Color.Foreground.Alt, Win11Dark=Color.Foreground.Primary, Win11Light=Color.Foreground.Primary'}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.ToggleStateButtonFlyoutHoverBackgroundBrush}" Color="{dx:LWColor 'Color.Backstage.ItemHoverBackground, Win11Dark=Color.Button.HoverBackground, Win11Light=Color.Button.HoverBackground'}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.ToggleStateButtonFlyoutHoverForegroundBrush}" Color="{dx:LWColor 'Color.Foreground.Alt, Win11Dark=Color.Foreground.Primary, Win11Light=Color.Foreground.Primary'}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.ToggleStateButtonFlyoutPressedBackgroundBrush}" Color="{dx:LWColor 'Color.Backstage.ItemSelectionBackground, Win11Dark=Color.ListItem.PressedBackground, Win11Light=Color.ListItem.PressedBackground'}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.ToggleStateButtonFlyoutPressedForegroundBrush}" Color="{dx:LWColor 'Color.Foreground.Alt, Win11Dark=Color.Foreground.Primary, Win11Light=Color.Foreground.Muted'}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.ItemBackgroundBrush}" Color="Transparent" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.ItemForegroundBrush}" Color="{dx:LWColor 'Color.Foreground.Alt, Win11Dark=Color.Foreground.Primary, Win11Light=Color.Foreground.Primary'}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.ItemRightForegroundBrush}" Color="{dx:LWColor 'Color.Foreground.Alt, Win11Dark=Color.Foreground.Primary, Win11Light=Color.Foreground.Primary'}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.ItemHoverBackgroundBrush}" Color="{dx:LWColor 'Color.Backstage.ItemHoverBackground, Win11Dark=Color.ListItem.HoverBackground, Win11Light=Color.ListItem.HoverBackground'}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.ItemHoverForegroundBrush}" Color="{dx:LWColor 'Color.Foreground.Alt, Win11Dark=Color.Foreground.Primary, Win11Light=Color.Foreground.Primary'}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.ItemHoverRightForegroundBrush}" Color="{dx:LWColor 'Color.Foreground.Alt, Win11Dark=Color.Foreground.Primary, Win11Light=Color.Foreground.Primary'}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.ItemPressedBackgroundBrush}" Color="{dx:LWColor 'Color.Backstage.ItemSelectionBackground, Win11Dark=Color.ListItem.PressedBackground, Win11Light=Color.ListItem.PressedBackground'}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.ItemPressedForegroundBrush}" Color="{dx:LWColor 'Color.Foreground.Alt, Win11Dark=Color.Foreground.Primary, Win11Light=Color.Foreground.Muted'}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.ItemPressedRightForegroundBrush}" Color="{dx:LWColor 'Color.Foreground.Alt, Win11Dark=Color.Foreground.Primary, Win11Light=Color.Foreground.Muted'}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.ItemSelectedBackgroundBrush}" Color="{dx:LWColor 'Color.Backstage.ItemSelectionBackground, Win11Dark=Color.ListItem.SelectionBackground, Win11Light=Color.ListItem.SelectionBackground'}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.ItemSelectedForegroundBrush}" Color="{dx:LWColor 'Color.Foreground.Alt, Win11Dark=Color.Foreground.Primary, Win11Light=Color.Foreground.Primary'}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.ItemSelectedRightForegroundBrush}" Color="{dx:LWColor 'Color.Foreground.Alt, Win11Dark=Color.Foreground.Primary, Win11Light=Color.Foreground.Primary'}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.ItemSelectedHoverBackgroundBrush}" Color="{dx:LWColor 'Color.Backstage.ItemSelectionBackground, Win11Dark=Color.ListItem.HoverBackground, Win11Light=Color.ListItem.HoverBackground'}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.ItemSelectedHoverForegroundBrush}" Color="{dx:LWColor 'Color.Foreground.Alt, Win11Dark=Color.Foreground.Primary, Win11Light=Color.Foreground.Primary'}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.ItemSelectedHoverRightForegroundBrush}" Color="{dx:LWColor 'Color.Foreground.Alt, Win11Dark=Color.Foreground.Primary, Win11Light=Color.Foreground.Primary'}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.ItemSelectedPressedBackgroundBrush}" Color="{dx:LWColor 'Color.Backstage.ItemSelectionBackground, Win11Dark=Color.ListItem.PressedBackground, Win11Light=Color.ListItem.PressedBackground'}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.ItemSelectedPressedForegroundBrush}" Color="{dx:LWColor 'Color.Foreground.Alt, Win11Dark=Color.Foreground.Primary, Win11Light=Color.Foreground.Muted'}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.ItemSelectedPressedRightForegroundBrush}" Color="{dx:LWColor 'Color.Foreground.Alt, Win11Dark=Color.Foreground.Primary, Win11Light=Color.Foreground.Muted'}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.ItemIndeterminateBackgroundBrush}" Color="{dx:LWColor 'Color.Backstage.Background, Win11Dark=Color.ListItem.SelectionAlt, Win11Light=Color.ListItem.SelectionAlt'}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.ItemIndeterminateForegroundBrush}" Color="{dx:LWColor 'Color.Foreground.Alt, Win11Dark=Color.Foreground.Primary, Win11Light=Color.Foreground.Primary'}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.ItemIndeterminateHoverBackgroundBrush}" Color="{dx:LWColor 'Color.Backstage.ItemSelectionBackground, Win11Dark=Color.ListItem.HoverBackground, Win11Light=Color.ListItem.HoverBackground'}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.ItemIndeterminateHoverForegroundBrush}" Color="{dx:LWColor 'Color.Foreground.Alt, Win11Dark=Color.Foreground.Primary, Win11Light=Color.Foreground.Primary'}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.ItemIndeterminatePressedBackgroundBrush}" Color="{dx:LWColor 'Color.Backstage.ItemSelectionBackground, Win11Dark=Color.ListItem.PressedBackground, Win11Light=Color.ListItem.PressedBackground'}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.ItemIndeterminatePressedForegroundBrush}" Color="{dx:LWColor 'Color.Foreground.Alt, Win11Dark=Color.Foreground.Primary, Win11Light=Color.Foreground.Muted'}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.FlyoutItemBackgroundBrush}" Color="Transparent" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.FlyoutItemForegroundBrush}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.FlyoutItemRightForegroundBrush}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.FlyoutItemHoverBackgroundBrush}" Color="{StaticResource Color.ListItem.HoverBackground}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.FlyoutItemHoverForegroundBrush}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.FlyoutItemHoverRightForegroundBrush}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.FlyoutItemPressedBackgroundBrush}" Color="{StaticResource Color.ListItem.SelectionBackground}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.FlyoutItemPressedForegroundBrush}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.FlyoutItemPressedRightForegroundBrush}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.FlyoutItemSelectedBackgroundBrush}" Color="{StaticResource Color.ListItem.SelectionBackground}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.FlyoutItemSelectedForegroundBrush}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.FlyoutItemSelectedRightForegroundBrush}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.FlyoutItemSelectedHoverBackgroundBrush}" Color="{StaticResource Color.ListItem.SelectionBackground}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.FlyoutItemSelectedHoverForegroundBrush}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.FlyoutItemSelectedHoverRightForegroundBrush}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.FlyoutItemSelectedPressedBackgroundBrush}" Color="{StaticResource Color.ListItem.SelectionBackground}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.FlyoutItemSelectedPressedForegroundBrush}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.FlyoutItemSelectedPressedRightForegroundBrush}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.FlyoutBackButtonBackgroundBrush}" Color="Transparent" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.FlyoutBackButtonForegroundBrush}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.FlyoutBackButtonHoverBackgroundBrush}" Color="{StaticResource Color.ListItem.HoverBackground}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.FlyoutBackButtonHoverForegroundBrush}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.FlyoutBackButtonPressedBackgroundBrush}" Color="{StaticResource Color.ListItem.SelectionBackground}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.FlyoutBackButtonPressedForegroundBrush}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.ItemSelectionIndicatorBackgroundBrush}" Color="{dx:LWColor 'Color.Foreground.Alt, Win11Dark=Color.Foreground.Primary'}" />
    <SolidColorBrush x:Key="{dxcot:LWKey HamburgerMenuBrushes.FlyoutItemSelectionIndicatorBackgroundBrush}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxcot:LWKey Wizard.BorderBrush}" Color="{StaticResource Color.Delimiter}" />
    <sys:Double x:Key="{dxcot:LWKey AppBarElements.AppBarButtonStrokeThickness}">1</sys:Double>
    <ControlTemplate x:Key="{dxcot:LWKey AppBarElements.AppBarButtonTemplate}" TargetType="dxwui:AppBarButton">
        <Grid
            x:Name="Root"
            Background="{TemplateBinding Background}"
            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
            VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
            <dxmvvmi:Interaction.Behaviors>
                <dxwuii:AnimatedPanelBehavior x:Name="animatedPanelBehavior" Width="{TemplateBinding Width}" />
            </dxmvvmi:Interaction.Behaviors>
            <StackPanel Margin="{TemplateBinding Padding}" VerticalAlignment="Top">
                <dx:DXBorder
                    x:Name="BackBorder"
                    Background="{StaticResource Brush.Button.SimpleButtonBorder}"
                    CornerRadius="96"
                    Height="{TemplateBinding EllipseDiameter}"
                    Padding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=StrokeThickness}"
                    Width="{TemplateBinding EllipseDiameter}">
                    <dx:DXBorder x:Name="MidBorder" Background="{StaticResource Brush.Button.SimpleButtonBackground}" CornerRadius="96">
                        <dx:DXBorder x:Name="FrontBorder" Background="{StaticResource Brush.Button.SimpleButtonBackground}" CornerRadius="96">
                            <Grid Height="{TemplateBinding GlyphHeight}" Width="{TemplateBinding GlyphWidth}">
                                <dxwuii:ImagePresenter
                                    x:Name="Content"
                                    AccentColor="{Binding Path=(dxb:ImageColorizer.Color), RelativeSource={RelativeSource TemplatedParent}}"
                                    AllowAccent="{TemplateBinding AllowGlyphTheming}"
                                    HorizontalAlignment="Center"
                                    Opacity="0.62"
                                    Source="{TemplateBinding Glyph}"
                                    Stretch="{TemplateBinding GlyphStretch}"
                                    VerticalAlignment="Center"
                                    Visibility="{Binding IsGlyphVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ResourceKey=BooleanToVisibilityConverter}}" />
                                <dxwuii:ShapeContentPresenter
                                    x:Name="Shape"
                                    AccentColor="{Binding Path=(dxb:ImageColorizer.Color), RelativeSource={RelativeSource TemplatedParent}}"
                                    FontFamily="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContentFontFamily}"
                                    FontSize="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContentFontSize}"
                                    Foreground="{StaticResource Brush.Foreground.Secondary}"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Visibility="{Binding IsGlyphVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ResourceKey=boolToVisibilityInverseConverter}}" />
                            </Grid>
                        </dx:DXBorder>
                    </dx:DXBorder>
                </dx:DXBorder>
                <Grid Margin="0,5,0,0">
                    <dxwuii:ShapeContentPresenter
                        x:Name="PART_Label"
                        AccentColor="{StaticResource Color.Accent}"
                        Content="{TemplateBinding Label}"
                        ContentTemplate="{TemplateBinding LabelTemplate}"
                        ContentTemplateSelector="{TemplateBinding LabelTemplateSelector}"
                        FontFamily="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FontFamily}"
                        FontSize="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FontSize}"
                        Foreground="{StaticResource Brush.Foreground.Primary}"
                        Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsCompact, Converter={StaticResource boolToVisibilityInverseConverter}}" />
                </Grid>
            </StackPanel>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FrontBorder" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="{StaticResource Color.Button.HoverBackground}" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackBorder" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="{dx:LWColor 'Color.Button.SimpleButtonHoverBorder, Win11Dark=#FF0000FF'}" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Shape" Storyboard.TargetProperty="Foreground">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="{StaticResource Color.Foreground.Primary}" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FrontBorder" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="{StaticResource Color.Button.PressedBackground}" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackBorder" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="{StaticResource Color.Button.SimpleButtonPressedBorder}" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Shape" Storyboard.TargetProperty="Foreground">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="{StaticResource Color.Foreground.Muted}" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.38" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckedStates">
                    <VisualState x:Name="Unchecked" />
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FrontBorder" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="{StaticResource Color.Button.CheckedBackground}" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackBorder" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="{StaticResource Color.Button.CheckedBorder}" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="CheckedMouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FrontBorder" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="{StaticResource Color.Button.CheckedHoverBackground}" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackBorder" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="{StaticResource Color.Button.CheckedHoverBorder}" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="CheckedPressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FrontBorder" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="{StaticResource Color.Button.CheckedPressedBackground}" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackBorder" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="{StaticResource Color.Button.CheckedPressedBorder}" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Padding" SourceName="BackBorder" Value="0">
                <Setter Property="Background" TargetName="BackBorder" Value="Transparent" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <DataTemplate x:Key="{dxcot:LWKey CommandButtonElements.BackGlyph}">
        <Path Height="16" Style="{StaticResource UIShape.Left}" Width="8" />
    </DataTemplate>
    <DataTemplate x:Key="{dxcot:LWKey CommandButtonElements.ForwardGlyph}">
        <Path Height="16" Style="{StaticResource UIShape.Right}" Width="8" />
    </DataTemplate>
    <ControlTemplate x:Key="{dxcot:LWKey CommandButtonElements.Template}" TargetType="dxwui:CommandButton">
        <Grid x:Name="Root" Background="Transparent">
            <dx:DXBorder
                x:Name="IsDefault"
                Background="Transparent"
                CornerRadius="96"
                Height="{TemplateBinding EllipseDiameter}"
                Width="{TemplateBinding EllipseDiameter}">
                <dxwuii:ShapeContentPresenter
                    x:Name="Content"
                    Foreground="{TemplateBinding Foreground}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center" />
            </dx:DXBorder>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{StaticResource Color.Backstage.ItemHoverBackground}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{StaticResource Color.Backstage.ItemSelectionBackground}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.38" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxcot:LWKey WindowsUIElements.ScrollableControlButtonTemplate}" TargetType="dxcop:ScrollableControlButton">
        <Grid x:Name="Root" Background="Transparent">
            <dx:DXBorder x:Name="IsDefault" Background="Transparent">
                <Grid x:Name="Content">
                    <Path
                        x:Name="Left"
                        Fill="{TemplateBinding Foreground}"
                        Opacity="0"
                        Style="{StaticResource UIShape.Left}" />
                    <Path
                        x:Name="Right"
                        Fill="{TemplateBinding Foreground}"
                        Opacity="0"
                        Style="{StaticResource UIShape.Right}" />
                    <Path
                        x:Name="Up"
                        Fill="{TemplateBinding Foreground}"
                        Opacity="0"
                        Style="{StaticResource UIShape.Up}" />
                    <Path
                        x:Name="Down"
                        Fill="{TemplateBinding Foreground}"
                        Opacity="0"
                        Style="{StaticResource UIShape.Down}" />
                </Grid>
            </dx:DXBorder>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver" />
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Visibility="Collapsed" Storyboard.TargetName="Root" Storyboard.TargetProperty="Visibility" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="Rotations">
                    <VisualState x:Name="Left">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Left" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Right">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Right" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Up">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Up" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Down">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Down" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource Brush.Foreground.Primary}" />
            </Trigger>
            <Trigger Property="ColorMode" Value="Inverted">
                <Setter Property="Foreground" Value="{StaticResource Brush.Foreground.Alt}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="IsDefault" Value="{StaticResource Brush.ListItem.HoverBackground}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="ColorMode" Value="Inverted" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.Backstage.ItemHoverBackground, Win11Dark=Brush.Button.CheckedHoverBackground'}" />
            </MultiTrigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" TargetName="IsDefault" Value="{StaticResource Brush.ListItem.SelectionBackground}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed" Value="True" />
                    <Condition Property="ColorMode" Value="Inverted" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.Backstage.ItemSelectionBackground, Win11Dark=Brush.Button.CheckedPressedBackground'}" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxcot:LWKey TileNavPaneElements.TileBarArrowTemplate}" TargetType="dxnavi:TileBarItemArrowControl">
        <Grid Background="{TemplateBinding Background}">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <dx:DXBorder x:Name="IsDefault" Background="Transparent" />
            <Path
                x:Name="Glyph"
                Fill="{StaticResource Brush.Foreground.Alt}"
                RenderTransformOrigin="0.5,0.5"
                Style="{StaticResource UIShape.Down}">
                <Path.RenderTransform>
                    <RotateTransform x:Name="ArrowRotateTransform" CenterX="0.5" CenterY="0.5">
                        <RotateTransform.Angle>
                            <Binding Converter="{StaticResource arrowDirectionToAngleConverter}" Path="ArrowDirection" RelativeSource="{RelativeSource TemplatedParent}" />
                        </RotateTransform.Angle>
                    </RotateTransform>
                </Path.RenderTransform>
            </Path>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.Backstage.ItemHoverBackground, Win11Dark=Color.Button.CheckedHoverBackground'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.Backstage.ItemSelectionBackground, Win11Dark=Color.Button.CheckedPressedBackground'}" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckedStates">
                    <VisualState x:Name="EmptyCheckedState" />
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.Backstage.ItemSelectionBackground, Win11Dark=Color.Button.CheckedPressedBackground'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>
    <DataTemplate x:Key="NavButtonDropDownTemplate">
        <Path RenderTransformOrigin="0.5, 0.5" Style="{StaticResource UIShape.Down}">
            <Path.RenderTransform>
                <RotateTransform CenterX="0.5" CenterY="0.5">
                    <RotateTransform.Angle>
                        <Binding Converter="{StaticResource orientationToAngleConverter}" Path="FlyoutShowDirection" RelativeSource="{RelativeSource AncestorType=dxnav:TileNavPane}" />
                    </RotateTransform.Angle>
                </RotateTransform>
            </Path.RenderTransform>
        </Path>
    </DataTemplate>
    <ControlTemplate x:Key="{dxcot:LWKey TileNavPaneElements.TileNavButtonTemplate}" TargetType="dxnav:NavButton">
        <dx:DXBorder
            x:Name="Root"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
                <dx:DXBorder x:Name="IsDefault" Background="Transparent" />
                <dxnavi:NavButtonPanel Content1Location="{TemplateBinding GlyphAlignment}" GlyphSpace="{TemplateBinding GlyphSpace}" Margin="{TemplateBinding Padding}">
                    <dxnavi:NavButtonPanel.Content1>
                        <dx:PixelSnapper HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding IsGlyphActuallyVisible, Converter={StaticResource ResourceKey=BooleanToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                            <Image
                                x:Name="Glyph"
                                dxb:ImageColorizer.Color="{Binding Path=(dxb:ImageColorizer.Color), RelativeSource={RelativeSource TemplatedParent}}"
                                dxb:ImageColorizer.IsEnabled="{TemplateBinding AllowGlyphTheming}"
                                Source="{TemplateBinding Glyph}"
                                Stretch="None" />
                        </dx:PixelSnapper>
                    </dxnavi:NavButtonPanel.Content1>
                    <dxnavi:NavButtonPanel.Content2>
                        <StackPanel HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Orientation="Horizontal" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ContentControl
                                x:Name="Content"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                Focusable="False"
                                Foreground="{TemplateBinding Foreground}"
                                VerticalAlignment="Center"
                                Visibility="{Binding IsContentActuallyVisible, Converter={StaticResource ResourceKey=BooleanToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                            <dxwuii:ShapeContentPresenter
                                x:Name="DrowDownButton"
                                ContentTemplate="{StaticResource NavButtonDropDownTemplate}"
                                Foreground="{TemplateBinding Foreground}"
                                Margin="{DynamicResource {dxcot:LWKey TileNavPaneElements.TileNavButtonDropDownButtonMargin}}"
                                Visibility="{Binding IsFlyoutButtonVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ResourceKey=BooleanToVisibilityConverter}}" />
                        </StackPanel>
                    </dxnavi:NavButtonPanel.Content2>
                </dxnavi:NavButtonPanel>
            </Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.Backstage.ItemHoverBackground, Win11Dark=Color.Button.HoverBackground'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.Backstage.ItemSelectionBackground, Win11Dark=Color.Button.PressedBackground'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.38" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Normal" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckedStates">
                    <VisualState x:Name="EmptyCheckedState" />
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.Backstage.ItemSelectionBackground, Win11Dark=Color.Button.SimpleButtonBackground'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </dx:DXBorder>
    </ControlTemplate>
    <sys:Double x:Key="NavigationBarElements.Button.ContentOpacity">0</sys:Double>
    <sys:Double x:Key="NavigationBarElements.Button.ContentHoverOpacity">1</sys:Double>
    <SolidColorBrush x:Key="NavigationBarElements.Button.ContentHoverForeground" Color="Transparent" />
    <ControlTemplate x:Key="{dxcot:LWKey NavigationBarElements.ItemTemplate}" TargetType="{x:Type dxnav:NavigationBarItem}">
        <dx:DXBorder
            x:Name="Root"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Padding="{TemplateBinding Padding}">
            <dx:DXBorder.RenderTransform>
                <ScaleTransform />
            </dx:DXBorder.RenderTransform>
            <Grid x:Name="Content" Opacity="0.62">
                <dx:LayoutTransformPanel Orientation="{Binding Orientation, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource orientationInvertConverter}}">
                    <dxb:SplitLayoutPanel Content1Location="{TemplateBinding GlyphAlignment}">
                        <dxb:SplitLayoutPanel.Content1>
                            <dx:PixelSnapper HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding IsGlyphActuallyVisible, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                                <Image Source="{TemplateBinding Glyph}" Stretch="None" />
                            </dx:PixelSnapper>
                        </dxb:SplitLayoutPanel.Content1>
                        <dxb:SplitLayoutPanel.Content2>
                            <ContentPresenter x:Name="content" Visibility="{Binding IsContentActuallyVisible, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                        </dxb:SplitLayoutPanel.Content2>
                    </dxb:SplitLayoutPanel>
                </dx:LayoutTransformPanel>
            </Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.38" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="SelectionStates">
                    <VisualState x:Name="EmptySelectedState" />
                    <VisualState x:Name="Unselected" />
                    <VisualState x:Name="Selected">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </dx:DXBorder>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxcot:LWKey NavigationBarElements.ButtonTemplate}" TargetType="dxnav:NavigationBarButton">
        <Grid x:Name="Root" Background="Transparent">
            <Grid x:Name="Content" Opacity="0.62">
                <dxb:SplitLayoutPanel Content1Location="{TemplateBinding GlyphAlignment}">
                    <dxb:SplitLayoutPanel.Content1>
                        <dx:PixelSnapper HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding IsGlyphActuallyVisible, Converter={StaticResource ResourceKey=BooleanToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                            <Image Source="{TemplateBinding Glyph}" Stretch="None" />
                        </dx:PixelSnapper>
                    </dxb:SplitLayoutPanel.Content1>
                    <dxb:SplitLayoutPanel.Content2>
                        <dx:PixelSnapper HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ContentPresenter Visibility="{Binding IsContentActuallyVisible, Converter={StaticResource ResourceKey=BooleanToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                        </dx:PixelSnapper>
                    </dxb:SplitLayoutPanel.Content2>
                </dxb:SplitLayoutPanel>
            </Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.38" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Normal" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxcot:LWKey NavigationBarElements.CustomizationArrowControlTemplate}" TargetType="{x:Type dxnavi:CustomizationArrowControl}">
        <Grid x:Name="Root" Background="Transparent">
            <Grid x:Name="Content">
                <Path x:Name="Left" Opacity="0" Style="{StaticResource UIShape.Left}" />
                <Path x:Name="Right" Opacity="0" Style="{StaticResource UIShape.Right}" />
                <Path x:Name="Up" Opacity="0" Style="{StaticResource UIShape.Up}" />
                <Path x:Name="Down" Opacity="0" Style="{StaticResource UIShape.Down}" />
            </Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="DirectionStates">
                    <VisualState x:Name="Up">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Up" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Down">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Down" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Left">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Left" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Right">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Right" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <!-- #region Win11Base -->
    <sys:Boolean x:Key="{dxcot:LWKey StepProgressBar.ShowOuterBorder}">True</sys:Boolean>

    <sys:Double x:Key="{dxcot:LWKey StepProgressBar.OuterBorderIndent}">2</sys:Double>

    <sys:Double x:Key="{dxcot:LWKey StepProgressBar.OuterBorderSize}">1</sys:Double>

    <sys:Double x:Key="{dxcot:LWKey StepProgressBar.ProgressBarThickness}">3</sys:Double>

    <Thickness x:Key="{dxcot:LWKey StepProgressBar.ProgressBorderThickness}">0.0</Thickness>

    <sys:Double x:Key="{dxcot:LWKey StepProgressBar.IndicatorBorderSize}">2</sys:Double>

    <Thickness x:Key="{dxcot:LWKey StepProgressBar.IndicatorPanelMargin}">4</Thickness>

    <sys:Double x:Key="{dxcot:LWKey NavigationBarElements.CustomizationFormMinWidth}">365</sys:Double>

    <sys:Double x:Key="{dxcot:LWKey NavigationBarElements.CustomizationFormMinHeight}">310</sys:Double>

    <Style x:Key="{dxcot:LWKey BreadcrumbControl.ArrowStyleBase}" TargetType="{x:Type dxcoi:BreadcrumbArrowControl}">
        <Setter Property="Template" Value="{DynamicResource {dxcot:LWKey BreadcrumbControl.ArrowTemplate}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="BorderThickness" Value="0,1,1,1" />
        <Setter Property="ArrowGeometry" Value="F1 M 2,0 6,4 2,8 Z" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding" Value="16" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                <Setter Property="Padding" Value="16" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxcot:LWKey BreadcrumbControl.ArrowStyle}" BasedOn="{StaticResource {dxcot:LWKey BreadcrumbControl.ArrowStyleBase}}" TargetType="{x:Type dxcoi:BreadcrumbArrowControl}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="Padding" Value="4,0" />
        <Setter Property="CornerRadius" Value="4" />
        <Setter Property="ArrowGeometry" Value="F1 M5,8z M0,0z M0.384616,8C0.280449,8 0.190305,7.96701 0.114183,7.90104 0.0380613,7.83507 3.74419E-07,7.75694 3.69866E-07,7.66667 3.65313E-07,7.57639 0.0380613,7.49826 0.114183,7.43229L4.06851,4 0.114183,0.567708C0.0380609,0.501736 4.55327E-09,0.423611 0,0.333333 -4.55327E-09,0.243056 0.0380609,0.164931 0.114183,0.0989584 0.190304,0.0329861 0.280449,3.94617E-09 0.384615,0 0.488782,-3.94617E-09 0.578926,0.0329861 0.655048,0.0989583L4.88582,3.76562C4.96194,3.8316 5,3.90972 5,4 5,4.09028 4.96194,4.1684 4.88582,4.23438L0.655048,7.90104C0.578927,7.96701,0.488782,8,0.384616,8z" />
    </Style>

    <Style x:Key="{dxcot:LWKey BreadcrumbControl.RootItemArrowStyle}" BasedOn="{StaticResource {dxcot:LWKey BreadcrumbControl.ArrowStyleBase}}" TargetType="{x:Type dxcoi:BreadcrumbArrowControl}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="Padding" Value="4,0" />
        <Setter Property="CornerRadius" Value="4" />
        <Setter Property="ArrowGeometry" Value="F1 M5,8z M0,0z M0.384616,8C0.280449,8 0.190305,7.96701 0.114183,7.90104 0.0380613,7.83507 3.74419E-07,7.75694 3.69866E-07,7.66667 3.65313E-07,7.57639 0.0380613,7.49826 0.114183,7.43229L4.06851,4 0.114183,0.567708C0.0380609,0.501736 4.55327E-09,0.423611 0,0.333333 -4.55327E-09,0.243056 0.0380609,0.164931 0.114183,0.0989584 0.190304,0.0329861 0.280449,3.94617E-09 0.384615,0 0.488782,-3.94617E-09 0.578926,0.0329861 0.655048,0.0989583L4.88582,3.76562C4.96194,3.8316 5,3.90972 5,4 5,4.09028 4.96194,4.1684 4.88582,4.23438L0.655048,7.90104C0.578927,7.96701,0.488782,8,0.384616,8z" />
    </Style>

    <Style x:Key="{dxcot:LWKey BreadcrumbControl.ButtonStyleBase}" TargetType="{x:Type dxcoi:BreadcrumbButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="3,1" />
        <Setter Property="Template" Value="{DynamicResource {dxcot:LWKey BreadcrumbControl.ButtonStyleTemplate}}" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding" Value="9,12" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                <Setter Property="Padding" Value="9,12" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="{dxcot:LWKey BreadcrumbControl.ItemButtonStyle}" BasedOn="{StaticResource {dxcot:LWKey BreadcrumbControl.ButtonStyleBase}}" TargetType="{x:Type dxcoi:BreadcrumbButton}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="CornerRadius" Value="4" />
    </Style>

    <ControlTemplate x:Key="{dxcot:LWKey AppBarElements.AppBarSeparatorTemplate}" TargetType="dxwui:AppBarSeparator">
        <dx:DXBorder
            x:Name="Delimiter"
            Background="{StaticResource Brush.Separator}"
            Margin="30,12,30,12"
            Width="1">
            <dx:DXBorder.LayoutTransform>
                <RotateTransform Angle="0" />
            </dx:DXBorder.LayoutTransform>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CompactStates">
                    <VisualState x:Name="Compact">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="20,12,20,12" Storyboard.TargetName="Delimiter" Storyboard.TargetProperty="Margin" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="OrientationStates">
                    <VisualState x:Name="Horizontal" />
                    <VisualState x:Name="Vertical">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Delimiter" Storyboard.TargetProperty="(LayoutTransform).(RotateTransform.Angle)" To="90" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </dx:DXBorder>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxcot:LWKey WindowsUIElements.FadingButtonTemplate}" TargetType="dxwuii:FadingButton">
        <Grid x:Name="Root" Background="Transparent">
            <dx:DXBorder
                x:Name="IsDefault"
                Background="{StaticResource Brush.Button.SimpleButtonBackground}"
                CornerRadius="96"
                Height="38"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Width="38">
                <dx:DXBorder.Effect>
                    <DropShadowEffect BlurRadius="15" Color="{dx:LWColor '#05F0F0F0, Win11Dark=#0D000000'}" ShadowDepth="0" />
                </dx:DXBorder.Effect>
                <Grid x:Name="Content">
                    <Path
                        x:Name="Left"
                        Fill="{dx:LWBrush 'Brush.Foreground.Secondary, Win11Dark=Brush.Foreground.Primary'}"
                        Height="16"
                        Opacity="0"
                        Style="{StaticResource UIShape.Left}"
                        Width="8" />
                    <Path
                        x:Name="Right"
                        Fill="{dx:LWBrush 'Brush.Foreground.Secondary, Win11Dark=Brush.Foreground.Primary'}"
                        Height="16"
                        Opacity="0"
                        Style="{StaticResource UIShape.Right}"
                        Width="8" />
                    <Path
                        x:Name="Up"
                        Fill="{dx:LWBrush 'Brush.Foreground.Secondary, Win11Dark=Brush.Foreground.Primary'}"
                        Height="8"
                        Opacity="0"
                        Style="{StaticResource UIShape.Up}"
                        Width="16" />
                    <Path
                        x:Name="Down"
                        Fill="{dx:LWBrush 'Brush.Foreground.Secondary, Win11Dark=Brush.Foreground.Primary'}"
                        Height="8"
                        Opacity="0"
                        Style="{StaticResource UIShape.Down}"
                        Width="16" />
                </Grid>
            </dx:DXBorder>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.Button.HoverBackground, Win11Dark=Color.Button.SimpleButtonBorder'}" />
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity" To="1" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="Left" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="{StaticResource Color.Foreground.Primary}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="Right" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="{StaticResource Color.Foreground.Primary}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="Down" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="{StaticResource Color.Foreground.Primary}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="Up" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="{StaticResource Color.Foreground.Primary}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.Button.PressedBackground, Win11Dark=Color.Button.SimpleButtonBackground'}" />
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity" To="1" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="Left" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="{StaticResource Color.Foreground.Muted}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="Right" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="{StaticResource Color.Foreground.Muted}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="Down" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="{StaticResource Color.Foreground.Muted}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="Up" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="{StaticResource Color.Foreground.Muted}" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="Rotations">
                    <VisualState x:Name="Left">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Left" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Right">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Right" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Up">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Up" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Down">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Down" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="Transitions">
                    <VisualState x:Name="Transparent">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Visibility="Collapsed" Storyboard.TargetName="Root" Storyboard.TargetProperty="Visibility" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Opaque" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxcot:LWKey PageViewElements.ItemTemplate}" TargetType="dxwui:PageViewItem">
        <Grid x:Name="Root" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <dx:DXBorder
                x:Name="IsDefault"
                Background="Transparent"
                BorderBrush="Transparent"
                BorderThickness="1">
                <dxwuii:PageViewItemHeaderPresenter
                    x:Name="Content"
                    Content="{TemplateBinding Header}"
                    ContentTemplate="{TemplateBinding HeaderTemplate}"
                    ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                    Foreground="{StaticResource Brush.Foreground.Primary}"
                    Margin="{TemplateBinding Padding}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </dx:DXBorder>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{StaticResource Color.ListItem.HoverBackground}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{StaticResource Color.ListItem.HoverBorder}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" To="{StaticResource Color.Foreground.Primary}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{StaticResource Color.ListItem.SelectionBackground}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{StaticResource Color.ListItem.SelectionBorder}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" To="{StaticResource Color.Foreground.Primary}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.38" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Normal" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="SelectionStates">
                    <VisualState x:Name="EmptySelectedState" />
                    <VisualState x:Name="Unselected" />
                    <VisualState x:Name="Selected">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{StaticResource Color.ListItem.SelectionBackground}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{StaticResource Color.ListItem.SelectionBorder}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" To="{StaticResource Color.Foreground.Primary}" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxcot:LWKey TileNavPaneElements.TileButtonControlTemplate}" TargetType="dxnavi:TileButtonControl">
        <Grid x:Name="Root" Background="{TemplateBinding Background}">
            <dx:DXBorder x:Name="IsDefault" Background="Transparent" />
            <Grid Margin="{TemplateBinding Padding}">
                <Image
                    dxb:ImageColorizer.Color="{TemplateBinding ActualGlyphColor}"
                    dxb:ImageColorizer.IsEnabled="{TemplateBinding AllowGlyphTheming}"
                    HorizontalAlignment="{TemplateBinding HorizontalGlyphAlignment}"
                    Source="{TemplateBinding Glyph}"
                    Stretch="None"
                    VerticalAlignment="{TemplateBinding VerticalGlyphAlignment}" />
                <ContentPresenter x:Name="Content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Opacity" To="0.62" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Opacity" To="0.62" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.38" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <Style x:Key="NavigationBarItem.DefaultStyleBase" TargetType="{x:Type dxnav:NavigationBarItem}">
        <Setter Property="FontSize" Value="24" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="Template" Value="{DynamicResource {dxcot:LWKey NavigationBarElements.ItemTemplate}}" />
    </Style>
    <!-- #endregion -->
</ResourceDictionary>