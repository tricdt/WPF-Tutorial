<ResourceDictionary
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:dxwui="http://schemas.devexpress.com/winfx/2008/xaml/windowsui"
    xmlns:dxcot="http://schemas.devexpress.com/winfx/2008/xaml/controls/themekeys"
    xmlns:dxwuii="http://schemas.devexpress.com/winfx/2008/xaml/windowsui/internal"
    xmlns:dxcoi="http://schemas.devexpress.com/winfx/2008/xaml/controls/internal"
    xmlns:dxnavi="http://schemas.devexpress.com/winfx/2008/xaml/navigation/internal"
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
    xmlns:dxnav="http://schemas.devexpress.com/winfx/2008/xaml/navigation">

    <ResourceDictionary.MergedDictionaries>
        <dxi:ThemeResourceDictionary Path="Common/{ThemeName}/Common.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <sys:Boolean x:Key="{dxcot:LWKey StepProgressBar.ShowOuterBorder}">False</sys:Boolean>
    <sys:Double x:Key="{dxcot:LWKey StepProgressBar.OuterBorderIndent}">4.0</sys:Double>
    <sys:Double x:Key="{dxcot:LWKey StepProgressBar.OuterBorderSize}">2.0</sys:Double>
    <sys:Double x:Key="{dxcot:LWKey StepProgressBar.ProgressBarThickness}">4</sys:Double>
    <Thickness x:Key="{dxcot:LWKey StepProgressBar.ProgressBorderThickness}">1</Thickness>
    <sys:Double x:Key="{dxcot:LWKey StepProgressBar.IndicatorBorderSize}">1</sys:Double>
    <Thickness x:Key="{dxcot:LWKey StepProgressBar.IndicatorPanelMargin}">3</Thickness>
    <sys:Double x:Key="{dxcot:LWKey NavigationBarElements.CustomizationFormMinWidth}">325</sys:Double>
    <sys:Double x:Key="{dxcot:LWKey NavigationBarElements.CustomizationFormMinHeight}">275</sys:Double>

    <Style x:Key="{dxcot:LWKey BreadcrumbControl.ArrowStyleBase}" TargetType="{x:Type dxcoi:BreadcrumbArrowControl}">
        <Setter Property="Template" Value="{DynamicResource {dxcot:LWKey BreadcrumbControl.ArrowTemplate}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="BorderThickness" Value="0,1,1,1" />
        <Setter Property="ArrowGeometry" Value="F1 M 2,0 6,4 2,8 Z" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding" Value="16" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                <Setter Property="Padding" Value="16" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxcot:LWKey BreadcrumbControl.ArrowStyle}" BasedOn="{StaticResource {dxcot:LWKey BreadcrumbControl.ArrowStyleBase}}" TargetType="{x:Type dxcoi:BreadcrumbArrowControl}">
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style x:Key="{dxcot:LWKey BreadcrumbControl.RootItemArrowStyle}" BasedOn="{StaticResource {dxcot:LWKey BreadcrumbControl.ArrowStyleBase}}" TargetType="{x:Type dxcoi:BreadcrumbArrowControl}">
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style x:Key="{dxcot:LWKey BreadcrumbControl.ButtonStyleBase}" TargetType="{x:Type dxcoi:BreadcrumbButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="3,1" />
        <Setter Property="Template" Value="{DynamicResource {dxcot:LWKey BreadcrumbControl.ButtonStyleTemplate}}" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding" Value="9,12" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                <Setter Property="Padding" Value="9,12" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxcot:LWKey BreadcrumbControl.ItemButtonStyle}" BasedOn="{StaticResource {dxcot:LWKey BreadcrumbControl.ButtonStyleBase}}" TargetType="{x:Type dxcoi:BreadcrumbButton}">
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <ControlTemplate x:Key="{dxcot:LWKey WindowsUIElements.FadingButtonTemplate}" TargetType="dxwuii:FadingButton">
        <Grid x:Name="Root" Background="Transparent">
            <dx:DXBorder
                x:Name="IsDefault"
                Background="{StaticResource Brush.Border}"
                CornerRadius="96"
                Height="38"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Width="38">
                <Grid x:Name="Content">
                    <Path
                        x:Name="Left"
                        Fill="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.ForegroundDark, Office2019Colorful=Brush.Foreground, Office2019HighContrast=Brush.SelectionForeground'}"
                        Height="16"
                        Opacity="0"
                        Style="{StaticResource UIShape.Left}"
                        Width="8" />
                    <Path
                        x:Name="Right"
                        Fill="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.ForegroundDark, Office2019Colorful=Brush.Foreground, Office2019HighContrast=Brush.SelectionForeground'}"
                        Height="16"
                        Opacity="0"
                        Style="{StaticResource UIShape.Right}"
                        Width="8" />
                    <Path
                        x:Name="Up"
                        Fill="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.ForegroundDark, Office2019Colorful=Brush.Foreground, Office2019HighContrast=Brush.SelectionForeground'}"
                        Height="8"
                        Opacity="0"
                        Style="{StaticResource UIShape.Up}"
                        Width="16" />
                    <Path
                        x:Name="Down"
                        Fill="{dx:LWBrush 'Brush.Backstage.Foreground, Office2019Black=Brush.ForegroundDark, Office2019Colorful=Brush.Foreground, Office2019HighContrast=Brush.SelectionForeground'}"
                        Height="8"
                        Opacity="0"
                        Style="{StaticResource UIShape.Down}"
                        Width="16" />
                </Grid>
            </dx:DXBorder>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.Backstage.HoverBackground, Office2019Black=Color.HoverBackground, Office2019Colorful=Color.HoverBackground, Office2019HighContrast=Color.HoverBackground'}" />
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.Backstage.SelectionBackground, Office2019Black=Color.SelectionBackground, Office2019Colorful=Color.SelectionBackground, Office2019HighContrast=Color.SelectionBackground'}" />
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="Rotations">
                    <VisualState x:Name="Left">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Left" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Right">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Right" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Up">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Up" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Down">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Down" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="Transitions">
                    <VisualState x:Name="Transparent">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Visibility="Collapsed" Storyboard.TargetName="Root" Storyboard.TargetProperty="Visibility" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Opaque" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxcot:LWKey AppBarElements.AppBarSeparatorTemplate}" TargetType="dxwui:AppBarSeparator">
        <dx:DXBorder
            x:Name="Delimiter"
            Background="{dx:LWBrush 'Brush.Backstage.Delimiter, VS2019Dark=Brush.Delimiter'}"
            EnableDPICorrection="False"
            Margin="30,12,30,12"
            Width="1">
            <dx:DXBorder.LayoutTransform>
                <RotateTransform Angle="0" />
            </dx:DXBorder.LayoutTransform>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CompactStates">
                    <VisualState x:Name="Compact">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="20,12,20,12" Storyboard.TargetName="Delimiter" Storyboard.TargetProperty="Margin" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="OrientationStates">
                    <VisualState x:Name="Horizontal" />
                    <VisualState x:Name="Vertical">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Delimiter" Storyboard.TargetProperty="(LayoutTransform).(RotateTransform.Angle)" To="90" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </dx:DXBorder>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxcot:LWKey PageViewElements.ItemTemplate}" TargetType="dxwui:PageViewItem">
        <Grid x:Name="Root" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <dx:DXBorder
                x:Name="IsDefault"
                Background="Transparent"
                BorderBrush="Transparent"
                BorderThickness="1">
                <dxwuii:PageViewItemHeaderPresenter
                    x:Name="Content"
                    Content="{TemplateBinding Header}"
                    ContentTemplate="{TemplateBinding HeaderTemplate}"
                    ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                    Foreground="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ForegroundDark'}"
                    Margin="{TemplateBinding Padding}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </dx:DXBorder>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="{StaticResource Color.HoverBackground}"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="BorderBrush">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="{StaticResource Color.HoverBorder}"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="{StaticResource Color.HoverForeground}" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="{StaticResource Color.SelectionBackground}"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="BorderBrush">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="{StaticResource Color.SelectionBorder}" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="{StaticResource Color.SelectionForeground}" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.38" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Normal" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="SelectionStates">
                    <VisualState x:Name="EmptySelectedState" />
                    <VisualState x:Name="Unselected" />
                    <VisualState x:Name="Selected">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="{StaticResource Color.SelectionBackground}" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="BorderBrush">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="{StaticResource Color.SelectionBorder}"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="{StaticResource Color.SelectionForeground}"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxcot:LWKey TileNavPaneElements.TileButtonControlTemplate}" TargetType="dxnavi:TileButtonControl">
        <Grid x:Name="Root" Background="{TemplateBinding Background}">
            <dx:DXBorder x:Name="IsDefault" Background="Transparent" />
            <Grid Margin="{TemplateBinding Padding}">
                <Image
                    dxb:ImageColorizer.Color="{TemplateBinding ActualGlyphColor}"
                    dxb:ImageColorizer.IsEnabled="{TemplateBinding AllowGlyphTheming}"
                    HorizontalAlignment="{TemplateBinding HorizontalGlyphAlignment}"
                    Source="{TemplateBinding Glyph}"
                    Stretch="None"
                    VerticalAlignment="{TemplateBinding VerticalGlyphAlignment}" />
                <ContentPresenter x:Name="Content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Opacity" To="0.62" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Opacity" To="0.62" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.38" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>
    
    <Style x:Key="NavigationBarItem.DefaultStyleBase" TargetType="{x:Type dxnav:NavigationBarItem}">
        <Setter Property="FontSize" Value="24" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="Template" Value="{DynamicResource {dxcot:LWKey NavigationBarElements.ItemTemplate}}" />
    </Style>
</ResourceDictionary>