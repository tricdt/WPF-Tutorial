<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
    xmlns:dxcr="http://schemas.devexpress.com/winfx/2008/xaml/charts/rangecontrolclient"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
    xmlns:dxfui="http://schemas.devexpress.com/winfx/2008/xaml/core/filteringui"
    xmlns:dxfuii="http://schemas.devexpress.com/winfx/2008/xaml/core/filteringui/internal"
    xmlns:dxfuit="http://schemas.devexpress.com/winfx/2008/xaml/core/filteringui/themekeys"
    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
    xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys"
    xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol"
    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
    xmlns:dxp="http://schemas.devexpress.com/winfx/2008/xaml/printing"
    xmlns:dxpg="clr-namespace:DevExpress.Xpf.PivotGrid;assembly=DevExpress.Xpf.PivotGrid.v24.1"
    xmlns:dxpgi="clr-namespace:DevExpress.Xpf.PivotGrid.Internal;assembly=DevExpress.Xpf.PivotGrid.v24.1"
    xmlns:dxpgp="clr-namespace:DevExpress.Xpf.PivotGrid.Printing;assembly=DevExpress.Xpf.PivotGrid.v24.1"
    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">

    <sys:Double x:Key="{dxpgi:LWKey Appearance.FieldListUpdateButtonMinHeight}">24</sys:Double>
    <sys:Double x:Key="{dxpgi:LWKey Appearance.FieldListUpdateButtonMinWidth}">78</sys:Double>
    <sys:Double x:Key="{dxpgi:LWKey Appearance.FieldListHiddenFieldsShowGridMinHeight}">16</sys:Double>
    <SolidColorBrush x:Key="{dxpgi:LWKey Appearance.ScrollingCornerGradient}" Color="Transparent" />
    <dx:BooleanToVisibilityConverter x:Key="invertBoolToVisibilityConverter" Invert="True" />
    <dx:BooleanToVisibilityConverter x:Key="boolToVisibilityConverter" />
    <dx:ObjectToStringConverter x:Key="objectToStringConverter" />
    <dxpgi:FieldListAllowedLayoutsToBoolConverter x:Key="fieldListAllowedLayoutsToBoolConverter" />
    <dx:BoolToObjectConverter x:Key="hiddenFieldsShowAllConverter" FalseValue="{dxpgi:PivotGridStringId StringId=CustomizationFormHiddenFields}" TrueValue="{dxpgi:PivotGridStringId StringId=CustomizationFormAvailableFields}" />
    <dxpgi:FieldListActualAreaToAreaTextConverter x:Key="fieldListActualAreaToAreaTextConverter" />
    <dxpgi:FieldListActualAreaToAreaLabelConverter x:Key="fieldListActualAreaToAreaLabelConverter" />
    <dxpgi:FieldListActualAreaToAreaImageConverter x:Key="fieldListActualAreaToAreaImageConverter" />
    <dx:BoolInverseConverter x:Key="boolInverseConverter" />
    <dx:VisibilityInverseConverter x:Key="inverseVisibilityConverter" />
    <dxpgi:TreeViewFieldHeaderToFieldTreeViewContentConverter x:Key="treeViewFieldHeaderToFieldTreeViewContentConverter" />
    <dxpgi:ObjectToThicknessConverter x:Key="headerImageMarginConverter" NotNullValue="0,0,3,0" NullValue="0" />
    <dxpgi:PivotGridFieldDataListConverter x:Key="PivotGridFieldDataListConverter" />
    <dxpgi:CustomFieldsToColumnProviderConverter x:Key="customFieldsToColumnProviderConverter" />
    <dx:BoolToObjectConverter x:Key="boolToObjectConverterFPW" FalseValue="0" TrueValue="16" />
    <dxpgi:PivotGridFieldDataConverter x:Key="PivotGridFieldDataConverter" />
    <dx:BoolToVisibilityInverseConverter x:Key="inverseBoolToVisibilityConverter" />
    <dxpgi:RowTreeToFieldHeadersMeasureModeConverter x:Key="rowTreeToFieldHeadersMeasureModeConverter" />
    <dxpgi:FontSizeToFieldHeightConverter x:Key="fontSizeToFieldHeightConverter" LargeFontHeight="50" />
    <dx:EnumToObjectConverter x:Key="groupHeaderPositionToPaddingConverter">
        <dx:EnumToObjectConverter.Values>
            <dx:EnumObjectProvider x:Key="Single">
                <dx:EnumObjectProvider.Value>
                    <Thickness>0,0,2,0</Thickness>
                </dx:EnumObjectProvider.Value>
            </dx:EnumObjectProvider>
            <dx:EnumObjectProvider x:Key="Left">
                <dx:EnumObjectProvider.Value>
                    <Thickness>0,0,0,0</Thickness>
                </dx:EnumObjectProvider.Value>
            </dx:EnumObjectProvider>
            <dx:EnumObjectProvider x:Key="Right">
                <dx:EnumObjectProvider.Value>
                    <Thickness>0,0,2,0</Thickness>
                </dx:EnumObjectProvider.Value>
            </dx:EnumObjectProvider>
            <dx:EnumObjectProvider x:Key="Middle">
                <dx:EnumObjectProvider.Value>
                    <Thickness>0,0,0,0</Thickness>
                </dx:EnumObjectProvider.Value>
            </dx:EnumObjectProvider>
            <dx:EnumObjectProvider x:Key="RightPreGroup">
                <dx:EnumObjectProvider.Value>
                    <Thickness>2,0,2,0</Thickness>
                </dx:EnumObjectProvider.Value>
            </dx:EnumObjectProvider>
            <dx:EnumObjectProvider x:Key="MiddlePreGroup">
                <dx:EnumObjectProvider.Value>
                    <Thickness>2,0,0,0</Thickness>
                </dx:EnumObjectProvider.Value>
            </dx:EnumObjectProvider>
        </dx:EnumToObjectConverter.Values>
    </dx:EnumToObjectConverter>
    <dx:EnumToObjectConverter x:Key="groupedHeaderPositionToPaddingConverter">
        <dx:EnumToObjectConverter.Values>
            <dx:EnumObjectProvider x:Key="Single">
                <dx:EnumObjectProvider.Value>
                    <Thickness>0,0,0,0</Thickness>
                </dx:EnumObjectProvider.Value>
            </dx:EnumObjectProvider>
            <dx:EnumObjectProvider x:Key="Left">
                <dx:EnumObjectProvider.Value>
                    <Thickness>0,0,2,0</Thickness>
                </dx:EnumObjectProvider.Value>
            </dx:EnumObjectProvider>
            <dx:EnumObjectProvider x:Key="Right">
                <dx:EnumObjectProvider.Value>
                    <Thickness>1,0,0,0</Thickness>
                </dx:EnumObjectProvider.Value>
            </dx:EnumObjectProvider>
            <dx:EnumObjectProvider x:Key="Middle">
                <dx:EnumObjectProvider.Value>
                    <Thickness>1,0,2,0</Thickness>
                </dx:EnumObjectProvider.Value>
            </dx:EnumObjectProvider>
        </dx:EnumToObjectConverter.Values>
    </dx:EnumToObjectConverter>
    <dxpgi:FieldHeaderPositionAreaToThicknesConverter x:Key="nongroupedHeaderPositionToPaddingConverter">
        <dxpgi:FieldHeaderPositionAreaToThicknesConverter.Positions>
            <dx:EnumObjectProvider x:Key="Single">
                <dx:EnumObjectProvider.Value>
                    <Thickness>3,3,5,4</Thickness>
                </dx:EnumObjectProvider.Value>
            </dx:EnumObjectProvider>
            <dx:EnumObjectProvider x:Key="Left">
                <dx:EnumObjectProvider.Value>
                    <Thickness>3,3,2,4</Thickness>
                </dx:EnumObjectProvider.Value>
            </dx:EnumObjectProvider>
            <dx:EnumObjectProvider x:Key="Right">
                <dx:EnumObjectProvider.Value>
                    <Thickness>3,3,5,4</Thickness>
                </dx:EnumObjectProvider.Value>
            </dx:EnumObjectProvider>
            <dx:EnumObjectProvider x:Key="RightPreGroup">
                <dx:EnumObjectProvider.Value>
                    <Thickness>2,3,5,4</Thickness>
                </dx:EnumObjectProvider.Value>
            </dx:EnumObjectProvider>
            <dx:EnumObjectProvider x:Key="Middle">
                <dx:EnumObjectProvider.Value>
                    <Thickness>3,3,2,4</Thickness>
                </dx:EnumObjectProvider.Value>
            </dx:EnumObjectProvider>
            <dx:EnumObjectProvider x:Key="MiddlePreGroup">
                <dx:EnumObjectProvider.Value>
                    <Thickness>2,3,2,4</Thickness>
                </dx:EnumObjectProvider.Value>
            </dx:EnumObjectProvider>
            <dx:EnumObjectProvider x:Key="LeftColumnArea">
                <dx:EnumObjectProvider.Value>
                    <Thickness>0,3,2,4</Thickness>
                </dx:EnumObjectProvider.Value>
            </dx:EnumObjectProvider>
            <dx:EnumObjectProvider x:Key="SingleColumnArea">
                <dx:EnumObjectProvider.Value>
                    <Thickness>0,3,5,4</Thickness>
                </dx:EnumObjectProvider.Value>
            </dx:EnumObjectProvider>
        </dxpgi:FieldHeaderPositionAreaToThicknesConverter.Positions>
    </dxpgi:FieldHeaderPositionAreaToThicknesConverter>
    <dxpgi:MinWidthToMaxWidthConverter x:Key="minWidthToMaxWidthConverter" />
    <dxpgi:PivotGridFieldDataConverter x:Key="pivotGridFieldDataConverter" />
    <Thickness x:Key="{dxpgi:LWKey FieldHeaders.DataAreaPopupPadding}">1,1,-2,1</Thickness>


    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.PivotGrid\DevExpress.Xpf.PivotGrid\Themes\Generic\FieldList.xaml-->



    <!-- BEGIN TOSLONLY REPLACE 'TextTrimming="CharacterEllipsis"'' -->

    <Style x:Key="{dxpgi:LWKey PivotGrid.FieldListDragTextStyle}" TargetType="TextBlock">
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Foreground" Value="{DynamicResource {dxpgi:LWKey Appearance.FieldListDragTextForeground}}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="Margin" Value="35,4" />
    </Style>

    <ControlTemplate x:Key="{dxpgi:LWKey FieldHeader.FieldListTemplate}" TargetType="dxpgi:FieldHeader">
        <dx:SimplePanel>
            <Grid Name="dropPlaceGrid">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <dx:DXBorder dxpgi:FieldHeadersBase.DropPlace="Previous" Background="Transparent" />
                <dx:DXBorder Grid.Row="1" dxpgi:FieldHeadersBase.DropPlace="Next" Background="Transparent" />
            </Grid>
            <Button
                Name="PART_HeaderButton"
                Margin="0,0,0,1"
                dx:DragManager.IsStartDragPlace="true"
                dxpgi:FieldHeader.Field="{Binding Path=(dxpgi:FieldHeader.Field), RelativeSource={RelativeSource TemplatedParent}}"
                dxpgi:FieldHeadersBase.FieldListArea="{Binding Path=(dxpgi:FieldHeadersBase.FieldListArea), RelativeSource={RelativeSource TemplatedParent}}"
                Command="{TemplateBinding ChangeFieldSortOrder}"
                CommandParameter="{Binding Path=(dxpgi:FieldHeader.Field), RelativeSource={RelativeSource TemplatedParent}}"
                DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                Focusable="False"
                IsTabStop="False"
                Style="{DynamicResource {dxpgi:LWKey FieldHeader.ButtonStyle}}" />
        </dx:SimplePanel>
    </ControlTemplate>

    <DataTemplate x:Key="{dxpgi:LWKey PivotGrid.ExcelFieldListItemTemplate}">
        <dx:DXBorder dx:DragManager.IsStartDragPlace="false" DataContext="{Binding Path=Content.Content, RelativeSource={RelativeSource TemplatedParent}}">
            <dxpgi:FieldHeader
                x:Name="fieldListHeader"
                dxpgi:FieldHeadersBase.FieldListArea="All"
                IsTabStop="False"
                SnapsToDevicePixels="True"
                Template="{DynamicResource {dxpgi:LWKey FieldHeader.FieldListTemplate}}" />
        </dx:DXBorder>
    </DataTemplate>

    <ControlTemplate x:Key="{dxpgi:LWKey PivotGrid.FieldListTemplate}">
        <dx:NonLogicalDecorator>
            <dxpg:PivotFieldListControl
                dxpgi:InnerFieldListControl.IsInWindow="True"
                IsExternal="False"
                Owner="{Binding Path=(dxpg:PivotGridControl.PivotGrid), RelativeSource={RelativeSource TemplatedParent}}"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                ScrollViewer.VerticalScrollBarVisibility="Disabled"
                ShowBorder="True" />
        </dx:NonLogicalDecorator>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxpgi:LWKey PivotGrid.ExcelFieldListTemplate}">
        <dx:NonLogicalDecorator>
            <dxpg:PivotExcelFieldListControl
                x:Name="ExcelFieldList"
                Padding="12,4,12,10"
                dxpgi:InnerFieldListControl.IsInWindow="True"
                IsExternal="False"
                Owner="{Binding Path=(dxpg:PivotGridControl.PivotGrid), RelativeSource={RelativeSource TemplatedParent}}" />
        </dx:NonLogicalDecorator>
    </ControlTemplate>

    <Style x:Key="ItemContainerStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <ContentPresenter ContentTemplate="{DynamicResource {dxpgi:LWKey PivotGrid.ExcelFieldListItemTemplate}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsTabStop" Value="False" />
    </Style>
    <Style x:Key="searchFieldStyle" TargetType="{x:Type dxe:SearchControl}">
        <Setter Property="DockPanel.Dock" Value="Top" />
        <Setter Property="FilterCondition" Value="Contains" />
        <Setter Property="FilterByColumnsMode" Value="Custom" />
        <Setter Property="FindMode" Value="Always" />
        <Setter Property="Visibility" Value="{DXBinding '@p.Area == $dxpg:FieldListArea.All ? `Visible` : `Collapsed`'}" />
        <Setter Property="NullText" Value="{dxpgi:PivotGridStringId StringId=SearchForField}" />
        <Setter Property="ShowMRUButton" Value="False" />
        <Setter Property="ColumnProvider" Value="{Binding Tag, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource customFieldsToColumnProviderConverter}}" />
        <Setter Property="Margin" Value="{DynamicResource {dxpgi:LWKey PivotGrid.FieldListSearchMargin}}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(dxpgi:InnerFieldListControl.FieldListStyle), RelativeSource={RelativeSource Self}}" Value="Excel2007">
                <Setter Property="Margin" Value="0,0,0,4" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxpgi:InnerFieldListControl.IsInWindow), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <ItemsControl>
                                <dxmvvm:FocusBehavior />
                            </ItemsControl>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="searchBorderStyle" TargetType="Border">
        <Setter Property="BorderBrush" Value="{DynamicResource {dxpgi:LWKey PivotGrid.FieldListSearchBorderBrush}}" />
        <Setter Property="BorderThickness" Value="{DynamicResource {dxpgi:LWKey PivotGrid.FieldListSearchBorderThickness}}" />
        <Setter Property="DockPanel.Dock" Value="Top" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(dxpgi:InnerFieldListControl.FieldListStyle), RelativeSource={RelativeSource Self}}" Value="Excel2007">
                <Setter Property="BorderThickness" Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="{dxpgi:LWKey FieldHeader.FieldHeaderTreeViewTemplate}">
        <StackPanel Background="Transparent" Orientation="Horizontal">
            <dxe:CheckEdit
                Margin="0,0,3,0"
                Padding="0"
                VerticalAlignment="Center"
                IsChecked="{Binding IsChecked, Mode=TwoWay}"
                Visibility="{Binding CheckBoxVisibility}" />
            <dx:DXImage
                MaxWidth="16"
                MaxHeight="16"
                Margin="{Binding ImageSource, Converter={StaticResource headerImageMarginConverter}}"
                VerticalAlignment="Center"
                Source="{Binding ImageSource}" />
            <TextBlock
                Margin="0,0,0,0"
                VerticalAlignment="Center"
                Foreground="{Binding Foreground}"
                Text="{Binding DisplayText}" />
        </StackPanel>
    </DataTemplate>

    <!-- END TOSLONLY REPLACE 'TextTrimming="CharacterEllipsis"'' -->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.PivotGrid\DevExpress.Xpf.PivotGrid\Themes\Generic\FieldList.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.PivotGrid\DevExpress.Xpf.PivotGrid\Themes\Generic\FieldHeaders.xaml-->
    <ControlTemplate x:Key="ExcelStylePopupContentTemplate">
        <dxg:ColumnFilteringUIContentControl ApplyFilterImmediately="{Binding ApplyFilterImmediately}" Content="{Binding}" />
    </ControlTemplate>
    <Style x:Key="FieldLabelStyle" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False">
                <Setter Property="Opacity" Value="0.65" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RangeTextEditStyle" TargetType="dxe:TextEdit">
        <Setter Property="MinWidth" Value="60" />
        <Setter Property="Margin" Value="8,0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="MaskType" Value="Numeric" />
        <Setter Property="DisplayFormatString" Value="{Binding ArgumentLabelFormatString}" />
        <Setter Property="dxe:NumericMaskOptions.AlwaysShowDecimalSeparator" Value="False" />
    </Style>
    <DataTemplate x:Key="FilterPopupLegacyTemplate">
        <dxpgi:FieldPopupPlaceholder
            VerticalAlignment="Top"
            DataContext="{Binding Path=(dxpgi:FieldHeader.Header), RelativeSource={RelativeSource Self}}"
            Field="{Binding Field}"
            Visibility="{Binding Path=IsFilterButtonVisible}" />
    </DataTemplate>
    <ControlTemplate x:Key="EmptyBottomAreaTemplate" />



    <ControlTemplate x:Key="{dxpgi:LWKey FieldHeader.FilterButtonTemplate}" TargetType="{x:Type dxe:PopupBaseEdit}">
        <ToggleButton
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Focusable="False"
            IsChecked="{Binding Path=IsPopupOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
            IsTabStop="False"
            Template="{DynamicResource {dxpgi:LWKey FieldHeader.FilterTemplate}}" />
    </ControlTemplate>
    <DataTemplate x:Key="{dxpgi:LWKey FieldHeader.FilterPopupTemplate}">
        <dxfui:ExcelStyleFilterElement x:Name="PART_FilterElement" />
    </DataTemplate>

    <DataTemplate x:Key="{dxpgi:LWKey FieldHeader.ContentTemplate}">
        <DockPanel>
            <Image
                Margin="{Binding Path=ImageSource, Mode=OneWay, Converter={StaticResource headerImageMarginConverter}}"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Source="{Binding Path=ImageSource, Mode=OneWay}"
                Stretch="None" />
            <TextBlock
                Name="textBlock"
                Style="{Binding Path=ActualHeaderContentStyle}"
                Text="{Binding Path=DisplayText, Mode=OneWay}"
                TextTrimming="CharacterEllipsis" />
        </DockPanel>
    </DataTemplate>
    <DataTemplate x:Key="{dxpgi:LWKey FieldHeader.ListContentTemplate}">
        <DockPanel>
            <Image
                Margin="{Binding Path=ImageSource, Mode=OneWay, Converter={StaticResource headerImageMarginConverter}}"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Source="{Binding Path=ImageSource, Mode=OneWay}"
                Stretch="None" />
            <TextBlock
                Name="textBlock"
                Style="{Binding Path=ActualHeaderContentStyle}"
                Text="{Binding Path=DisplayText, Mode=OneWay}"
                TextTrimming="CharacterEllipsis" />
        </DockPanel>
    </DataTemplate>

    <DataTemplate x:Key="{dxpgi:LWKey FieldHeader.DragElementTemplate}">
        <Grid HorizontalAlignment="Left" VerticalAlignment="Top" DataContext="{Binding Content.Content, RelativeSource={RelativeSource TemplatedParent}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <dxpgi:DragFieldHeader
                Width="{Binding Path=(dxpgi:FieldHeader.DragElementSize).Width, RelativeSource={RelativeSource TemplatedParent}}"
                Height="{Binding Path=(dxpgi:FieldHeader.DragElementSize).Height, RelativeSource={RelativeSource TemplatedParent}}"
                dxpgi:FieldHeadersBase.FieldListArea="{Binding Path=(dxpgi:FieldHeadersBase.FieldListArea), RelativeSource={RelativeSource TemplatedParent}}"
                Field="{Binding Content.Content, RelativeSource={RelativeSource TemplatedParent}}" />
            <dx:DragIconControl
                x:Name="dropIndicator"
                Grid.Row="1"
                Grid.Column="1"
                Margin="-12,-12,0,0"
                DragType="Remove">
                <dx:DragIconControl.Opacity>
                    <Binding Path="(dxpgi:DragFieldHeader.CanHide)" RelativeSource="{RelativeSource TemplatedParent}">
                        <Binding.Converter>
                            <dx:BoolToObjectConverter FalseValue="0" TrueValue="1" />
                        </Binding.Converter>
                    </Binding>
                </dx:DragIconControl.Opacity>
            </dx:DragIconControl>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="{dxpgi:LWKey FieldHeader.GroupDragElementTemplate}">
        <Grid HorizontalAlignment="Left" VerticalAlignment="Top">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <dxpgi:DragGroupHeader
                Width="{Binding Path=(dxpgi:FieldHeader.DragElementSize).Width, RelativeSource={RelativeSource TemplatedParent}}"
                Height="{Binding Path=(dxpgi:FieldHeader.DragElementSize).Height, RelativeSource={RelativeSource TemplatedParent}}"
                DataContext="{Binding Content.Content, RelativeSource={RelativeSource TemplatedParent}}"
                Group="{Binding Content.Content, RelativeSource={RelativeSource TemplatedParent}}" />
            <dx:DragIconControl
                x:Name="dropIndicator"
                Grid.Row="1"
                Grid.Column="1"
                Margin="-12,-12,0,0"
                DragType="Remove">
                <dx:DragIconControl.Opacity>
                    <Binding Path="(dxpgi:DragFieldHeader.CanHide)" RelativeSource="{RelativeSource TemplatedParent}">
                        <Binding.Converter>
                            <dx:BoolToObjectConverter FalseValue="0" TrueValue="1" />
                        </Binding.Converter>
                    </Binding>
                </dx:DragIconControl.Opacity>
            </dx:DragIconControl>
        </Grid>
    </DataTemplate>

    <ControlTemplate x:Key="SummaryPopupContentTemplate">
        <Grid Margin="13" Loaded="{DXEvent Handler='Loaded()'}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <StackPanel Orientation="Horizontal">
                <TextBlock VerticalAlignment="Center" Text="{dxpgi:PivotGridStringId StringId=SummaryFilterRangeFrom}" />
                <dxe:TextEdit EditValue="{Binding SelectionStart, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource RangeTextEditStyle}" />
                <TextBlock VerticalAlignment="Center" Text="{dxpgi:PivotGridStringId StringId=SummaryFilterRangeTo}" />
                <dxe:TextEdit EditValue="{Binding SelectionEnd, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource RangeTextEditStyle}" />
            </StackPanel>
            <dxe:RangeControl
                Grid.Row="1"
                MinHeight="130"
                Margin="0,10"
                AllowImmediateRangeUpdate="True"
                RangeEnd="{Binding End}"
                RangeStart="{Binding Start}"
                ResetRangesOnClientItemsSourceChanged="False"
                SelectionRangeEnd="{Binding SelectionEnd, Mode=TwoWay}"
                SelectionRangeStart="{Binding SelectionStart, Mode=TwoWay}"
                ShowLabels="False"
                ShowRangeBar="True"
                ShowRangeThumbs="True"
                VisibleRangeEnd="{Binding End}"
                VisibleRangeStart="{Binding Start}">
                <dxcr:NumericChartRangeControlClient
                    ArgumentDataMember="Step"
                    ArgumentLabelFormatString="{Binding ArgumentLabelFormatString}"
                    GridAlignment="{Binding RangeGridAlignment}"
                    GridLinesBrush="#33000000"
                    GridSpacing="1"
                    ItemsSource="{Binding ItemsSource}"
                    SnapAlignment="{Binding RangeSnapAlignment}"
                    ValueDataMember="Value">
                    <dxcr:NumericChartRangeControlClient.View>
                        <dxcr:RangeControlClientBarView />
                    </dxcr:NumericChartRangeControlClient.View>
                </dxcr:NumericChartRangeControlClient>
            </dxe:RangeControl>
            <Grid Grid.Row="2" Margin="0,0,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="13*" />
                    <ColumnDefinition Width="7*" />
                    <ColumnDefinition Width="16*" />
                </Grid.ColumnDefinitions>
                <dxe:CheckEdit Name="levelCheckBox" Content="{dxpgi:PivotGridStringId StringId=SummaryFilterApplyToSpecificLevel}" IsChecked="{Binding SpecificLevel, Mode=TwoWay}" />
                <TextBlock
                    Grid.Column="1"
                    IsEnabled="{Binding RowFieldSelectionEnabled}"
                    Style="{StaticResource FieldLabelStyle}"
                    Text="{dxpgi:PivotGridStringId StringId=SummaryFilterRowField}" />
                <TextBlock
                    Grid.Row="1"
                    Grid.Column="1"
                    IsEnabled="{Binding ColumnFieldSelectionEnabled}"
                    Style="{StaticResource FieldLabelStyle}"
                    Text="{dxpgi:PivotGridStringId StringId=SummaryFilterColumnField}" />
                <dxe:ComboBoxEdit
                    Name="rowSelector"
                    Grid.Column="2"
                    Margin="0,4"
                    IsEnabled="{Binding RowFieldSelectionEnabled}"
                    IsTextEditable="False"
                    ItemsSource="{Binding RowFieldSource}"
                    SelectedItem="{Binding RowField, Mode=TwoWay}">
                    <dxe:ComboBoxEdit.ItemContainerStyle>
                        <Style TargetType="dxe:ComboBoxEditItem">
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding}" Value="{dxpgi:PivotGridStringId StringId=GrandTotal}" />
                                        <Condition Binding="{Binding ElementName=columnSelector, Path=SelectedItem}" Value="{dxpgi:PivotGridStringId StringId=GrandTotal}" />
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="IsEnabled" Value="False" />
                                        <Setter Property="Opacity" Value="0.65" />
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </dxe:ComboBoxEdit.ItemContainerStyle>
                </dxe:ComboBoxEdit>
                <dxe:ComboBoxEdit
                    Name="columnSelector"
                    Grid.Row="1"
                    Grid.Column="2"
                    Margin="0,4"
                    IsEnabled="{Binding ColumnFieldSelectionEnabled}"
                    IsTextEditable="False"
                    ItemsSource="{Binding ColumnFieldSource}"
                    SelectedItem="{Binding ColumnField, Mode=TwoWay}">
                    <dxe:ComboBoxEdit.ItemContainerStyle>
                        <Style TargetType="dxe:ComboBoxEditItem">
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding}" Value="{dxpgi:PivotGridStringId StringId=GrandTotal}" />
                                        <Condition Binding="{Binding ElementName=rowSelector, Path=SelectedItem}" Value="{dxpgi:PivotGridStringId StringId=GrandTotal}" />
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="IsEnabled" Value="False" />
                                        <Setter Property="Opacity" Value="0.65" />
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </dxe:ComboBoxEdit.ItemContainerStyle>
                </dxe:ComboBoxEdit>
            </Grid>
        </Grid>
    </ControlTemplate>
    <DataTemplate x:Key="SummaryPopupTemplate">
        <dxe:PopupBaseEdit
            x:Name="PART_FilterPopupEdit"
            VerticalAlignment="Top"
            ClosePopupOnLostFocus="False"
            IgnorePopupSizeConstraints="True"
            IsPopupOpen="{Binding Path=(dxpgi:FieldHeader.Header).IsPopupOpen, RelativeSource={RelativeSource Self}, Mode=TwoWay}"
            PopupBottomAreaTemplate="{DynamicResource {dxgt:LWKey ExcelStyleFilterElement.PopupBottomAreaTemplate}}"
            PopupClosed="{DXEvent Handler='Closed(@sender, @args)'}"
            PopupContentTemplate="{StaticResource SummaryPopupContentTemplate}"
            PopupFooterButtons="OkCancel"
            PopupHeight="300"
            PopupMinHeight="300"
            PopupMinWidth="450"
            PopupWidth="450"
            ShowSizeGrip="True"
            Template="{Binding Path=(dxpgi:FieldHeader.Header).FilterButtonTemplate, RelativeSource={RelativeSource Self}}"
            Visibility="{Binding Path=(dxpgi:FieldHeader.Header).IsFilterButtonVisible, RelativeSource={RelativeSource Self}}" />
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxpgi:FieldHeader.Header).(dx:ThemeManager.IsTouchlineTheme), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="PART_FilterPopupEdit" Property="PopupHeight" Value="390" />
                <Setter TargetName="PART_FilterPopupEdit" Property="PopupMinHeight" Value="390" />
                <Setter TargetName="PART_FilterPopupEdit" Property="PopupWidth" Value="560" />
                <Setter TargetName="PART_FilterPopupEdit" Property="PopupMinWidth" Value="560" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxpgi:FieldHeader.Header).(dx:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="PART_FilterPopupEdit" Property="PopupHeight" Value="390" />
                <Setter TargetName="PART_FilterPopupEdit" Property="PopupMinHeight" Value="390" />
                <Setter TargetName="PART_FilterPopupEdit" Property="PopupWidth" Value="560" />
                <Setter TargetName="PART_FilterPopupEdit" Property="PopupMinWidth" Value="560" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <DataTemplate x:Key="FilterPopupExcelTemplate">
        <dxe:PopupBaseEdit
            x:Name="PART_FilterPopupEdit"
            VerticalAlignment="Top"
            IgnorePopupSizeConstraints="True"
            IsPopupOpen="{Binding Path=(dxpgi:FieldHeader.Header).IsPopupOpen, RelativeSource={RelativeSource Self}, Mode=TwoWay}"
            PopupBottomAreaTemplate="{DynamicResource {dxgt:LWKey ExcelStyleFilterElement.PopupBottomAreaTemplate}}"
            PopupContentTemplate="{StaticResource ExcelStylePopupContentTemplate}"
            PopupHeight="310"
            PopupMinHeight="310"
            PopupMinWidth="260"
            PopupWidth="260"
            ShowSizeGrip="True"
            Template="{Binding Path=(dxpgi:FieldHeader.Header).FilterButtonTemplate, RelativeSource={RelativeSource Self}}"
            Visibility="{Binding Path=(dxpgi:FieldHeader.Header).IsFilterButtonVisible, RelativeSource={RelativeSource Self}}" />
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxpgi:FieldHeader.Header).(dx:ThemeManager.IsTouchlineTheme), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="PART_FilterPopupEdit" Property="PopupHeight" Value="390" />
                <Setter TargetName="PART_FilterPopupEdit" Property="PopupMinHeight" Value="390" />
                <Setter TargetName="PART_FilterPopupEdit" Property="PopupWidth" Value="320" />
                <Setter TargetName="PART_FilterPopupEdit" Property="PopupMinWidth" Value="320" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxpgi:FieldHeader.Header).(dx:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="PART_FilterPopupEdit" Property="PopupHeight" Value="390" />
                <Setter TargetName="PART_FilterPopupEdit" Property="PopupMinHeight" Value="390" />
                <Setter TargetName="PART_FilterPopupEdit" Property="PopupWidth" Value="320" />
                <Setter TargetName="PART_FilterPopupEdit" Property="PopupMinWidth" Value="320" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ApplyFilterImmediately}" Value="False">
                <Setter TargetName="PART_FilterPopupEdit" Property="PopupFooterButtons" Value="OkCancel" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <dxpgi:FilterPopupTemplateSelector
        x:Key="{dxpgi:LWKey FieldHeader.FilterPopupTemplateSelector}"
        ExcelTemplate="{StaticResource FilterPopupExcelTemplate}"
        LegacyTemplate="{StaticResource FilterPopupLegacyTemplate}"
        SummaryTemplate="{StaticResource SummaryPopupTemplate}" />


    <Style x:Key="{dxpgi:LWKey FieldHeader.ButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="ClickMode" Value="Release" />
        <Setter Property="Button.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <dxpgi:FieldHeaderContentControl
                            x:Name="PART_HeaderContentControl"
                            dxpgi:FieldHeadersBase.FieldListArea="{Binding Path=(dxpgi:FieldHeadersBase.FieldListArea), RelativeSource={RelativeSource TemplatedParent}}"
                            Foreground="{DynamicResource {dxpgi:LWKey Appearance.HeaderForeground}}"
                            IsMouseOverOverride="{TemplateBinding IsMouseOver}"
                            IsPressed="{TemplateBinding IsPressed}"
                            IsTabStop="False"
                            Template="{DynamicResource {dxpgi:LWKey FieldHeader.ButtonContentTemplate}}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="0" HorizontalAlignment="Left">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <dx:DXBorder Name="border2" Grid.Column="0" DataContext="{Binding Content, Converter={StaticResource PivotGridFieldDataConverter}}">
                                        <dxpgi:FieldHeaderContentPresenter
                                            x:Name="HeaderContentPresenter"
                                            MinHeight="13"
                                            dxpgi:FieldHeadersBase.FieldListArea="{Binding Path=(dxpgi:FieldHeadersBase.FieldListArea), RelativeSource={RelativeSource TemplatedParent}}"
                                            Content="{Binding}"
                                            Field="{Binding Path=(dxpgi:FieldHeader.Field), RelativeSource={RelativeSource TemplatedParent}}"
                                            RecognizesAccessKey="true" />
                                    </dx:DXBorder>
                                    <dx:DXBorder Grid.Column="1" Width="{Binding CanFilterButtonVisible, Converter={StaticResource boolToObjectConverterFPW}}">
                                        <ContentPresenter Content="{Binding Path=PopupContext}" ContentTemplateSelector="{Binding Path=(dxpgi:FieldHeader.Header).FilterPopupTemplateSelector, RelativeSource={RelativeSource Self}}" />
                                    </dx:DXBorder>
                                </Grid>
                                <ContentControl
                                    x:Name="SortUp"
                                    Grid.Column="1"
                                    Style="{DynamicResource {dxpgi:LWKey FieldHeader.SortArrowUpStyle}}"
                                    Template="{DynamicResource {dxpgi:LWKey FieldHeader.SortArrowUpTemplate}}"
                                    Visibility="{Binding Path=IsSortUpButtonVisible}" />
                                <ContentControl
                                    x:Name="SortDown"
                                    Grid.Column="1"
                                    Style="{DynamicResource {dxpgi:LWKey FieldHeader.SortArrowDownStyle}}"
                                    Template="{DynamicResource {dxpgi:LWKey FieldHeader.SortArrowDownTemplate}}"
                                    Visibility="{Binding Path=IsSortDownButtonVisible}" />
                            </Grid>
                        </dxpgi:FieldHeaderContentControl>
                        <dx:DXBorder
                            Name="PART_DTBorder"
                            Background="Red"
                            Opacity="0.3"
                            Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_HeaderContentControl" Property="IsMouseOverOverride" Value="True">
                            <Setter TargetName="PART_HeaderContentControl" Property="Foreground" Value="{DynamicResource {dxpgi:LWKey Appearance.HeaderMouseOverForeground}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="{dxpgi:LWKey FieldHeader.FieldHeaderTemplate}" TargetType="{x:Type dxpgi:FieldHeader}">
        <dx:SimplePanel dx:DragManager.IsStartDragPlace="false">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <dx:DXBorder Name="PART_PreviousDropPlace" dxpgi:FieldHeadersBase.DropPlace="Previous" Background="Transparent" />
                <dx:DXBorder
                    Name="PART_NextDropPlace"
                    Grid.Column="1"
                    dxpgi:FieldHeadersBase.DropPlace="Next"
                    Background="Transparent" />
            </Grid>
            <dx:DXBorder x:Name="outerBorder">
                <Button
                    Name="PART_HeaderButton"
                    Margin="{TemplateBinding Padding}"
                    VerticalAlignment="Top"
                    dx:DragManager.IsStartDragPlace="true"
                    dxpgi:FieldHeader.Field="{Binding Path=(dxpgi:FieldHeader.Field), RelativeSource={RelativeSource TemplatedParent}}"
                    dxpgi:FieldHeadersBase.FieldListArea="{Binding Path=(dxpgi:FieldHeadersBase.FieldListArea), RelativeSource={RelativeSource TemplatedParent}}"
                    ClickMode="Release"
                    Command="{TemplateBinding ChangeFieldSortOrder}"
                    CommandParameter="{Binding Path=(dxpgi:FieldHeader.Field), RelativeSource={RelativeSource TemplatedParent}}"
                    DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                    Focusable="False"
                    IsTabStop="False"
                    SnapsToDevicePixels="True"
                    Style="{DynamicResource {dxpgi:LWKey FieldHeader.ButtonStyle}}" />
            </dx:DXBorder>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="Cursor">
                    <VisualState x:Name="NormalCursor" />
                    <VisualState x:Name="HandCursor">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_HeaderButton" Storyboard.TargetProperty="Cursor">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Cursor>Hand</Cursor>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </dx:SimplePanel>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxpgi:LWKey FieldHeader.InnerGroupHeaderTemplate}" TargetType="{x:Type dxpgi:FieldHeader}">
        <!--<dx:SimplePanel dx:DragManager.IsStartDragPlace="false">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <dx:DXBorder Name="PART_PreviousDropPlace" Background="Transparent" dxpgi:FieldHeadersBase.DropPlace="Previous"/>
                        <dx:DXBorder Name="PART_NextDropPlace" Grid.Column="1" Background="Transparent" dxpgi:FieldHeadersBase.DropPlace="Next"/>
                    </Grid>-->
        <dx:DXBorder x:Name="outerBorder">
            <Button
                Name="PART_HeaderButton"
                Margin="{TemplateBinding Padding}"
                VerticalAlignment="Top"
                dx:DragManager.IsStartDragPlace="true"
                dxpgi:FieldHeader.Field="{Binding Path=(dxpgi:FieldHeader.Field), RelativeSource={RelativeSource TemplatedParent}}"
                dxpgi:FieldHeadersBase.FieldListArea="{Binding Path=(dxpgi:FieldHeadersBase.FieldListArea), RelativeSource={RelativeSource TemplatedParent}}"
                Command="{Binding ChangeFieldSortOrder, RelativeSource={RelativeSource TemplatedParent}, Mode=OneTime}"
                CommandParameter="{Binding Path=(dxpgi:FieldHeader.Field), RelativeSource={RelativeSource TemplatedParent}}"
                DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                Focusable="False"
                IsTabStop="False"
                SnapsToDevicePixels="True"
                Style="{DynamicResource {dxpgi:LWKey FieldHeader.ButtonStyle}}" />
        </dx:DXBorder>
        <!--</dx:SimplePanel>-->
    </ControlTemplate>

    <ControlTemplate x:Key="{dxpgi:LWKey FieldHeader.GroupHeaderTemplate}" TargetType="{x:Type dxpgi:GroupHeader}">
        <dx:SimplePanel dx:DragManager.IsStartDragPlace="false">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <dx:DXBorder Name="PART_PreviousDropPlace" dxpgi:FieldHeadersBase.DropPlace="Previous" Background="Transparent" />
                <dx:DXBorder
                    Name="PART_NextDropPlace"
                    Grid.Column="1"
                    dxpgi:FieldHeadersBase.DropPlace="Next"
                    Background="Transparent" />
            </Grid>
            <dx:DXBorder x:Name="outerBorder">
                <ContentControl
                    Name="PART_HeaderButton"
                    Margin="{TemplateBinding Padding}"
                    VerticalAlignment="Top"
                    DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                    SnapsToDevicePixels="True"
                    Template="{DynamicResource {dxpgi:LWKey FieldHeader.GroupContentTemplate}}">
                    <Grid x:Name="PART_Panel" Background="Transparent" />
                </ContentControl>
            </dx:DXBorder>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="Cursor">
                    <VisualState x:Name="NormalCursor" />
                    <VisualState x:Name="HandCursor">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="outerBorder" Storyboard.TargetProperty="Cursor">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Cursor>Hand</Cursor>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </dx:SimplePanel>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.PivotGrid\DevExpress.Xpf.PivotGrid\Themes\Generic\FieldHeaders.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.PivotGrid\DevExpress.Xpf.PivotGrid\Themes\Generic\MiscControls.xaml-->



    <Style x:Key="{dxpgi:LWKey PivotGrid.ErrorPanelStyle}" TargetType="dxe:FlyoutControl">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Settings">
            <Setter.Value>
                <dxe:FlyInSettings />
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid Width="247" Margin="5,5,5,18">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Image
                            x:Name="icon"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            Stretch="None">
                            <Image.Source>
                                <Binding Converter="{dx:EmbeddedResourceImageConverter}" Source="DevExpress.Xpf.Core.Core.Images.ErrorIcon.png" />
                            </Image.Source>
                        </Image>
                        <TextBlock
                            Grid.Column="1"
                            Padding="9,3,0,0"
                            Text="{Binding}"
                            TextAlignment="Left"
                            TextWrapping="Wrap" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ResizerStyle" TargetType="{x:Type dx:DXThumb}">
        <Setter Property="MinWidth" Value="{StaticResource {x:Static SystemParameters.ResizeFrameVerticalBorderWidthKey}}" />
        <Setter Property="MinHeight" Value="4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dx:DXThumb}">
                    <dx:DXBorder dx:DragManager.IsStartDragPlace="False" Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="{dxpgi:LWKey PivotGrid.FilterCheckedTreeViewItemHeaderTemplate}">
        <dxe:CheckEdit
            Content="{Binding Text, Mode=OneTime}"
            Focusable="False"
            IsChecked="{Binding IsChecked, Mode=TwoWay, RelativeSource={RelativeSource AncestorType=dxpgi:FilterCheckedTreeViewItem}}"
            IsThreeState="{Binding Path=IsThreeState, RelativeSource={RelativeSource AncestorType=dxpgi:FilterCheckedTreeViewItem}}" />
    </DataTemplate>

    <ControlTemplate x:Key="{dxpgi:LWKey PivotGrid.FilterCheckedTreeViewPopupTemplate}" TargetType="{x:Type Control}">
        <Grid Width="Auto" Height="Auto" SnapsToDevicePixels="True">
            <dxpgi:FilterCheckedTreeView
                x:Name="tree"
                dxpg:PivotGridPopupMenu.GridMenuType="FilterPopup"
                BorderThickness="0"
                IsEnabled="{Binding IsItemsLoaded, RelativeSource={RelativeSource Self}}"
                ItemsHeaderTemplate="{DynamicResource {dxpgi:LWKey PivotGrid.FilterCheckedTreeViewItemHeaderTemplate}}"
                VirtualizingStackPanel.VirtualizationMode="Recycling">
                <VirtualizingStackPanel.IsVirtualizing>True</VirtualizingStackPanel.IsVirtualizing>
            </dxpgi:FilterCheckedTreeView>
            <dx:ColumnWaitIndicator
                MaxWidth="32"
                MaxHeight="32"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Visibility="{Binding Path=IsItemsLoaded, ElementName=tree, Converter={StaticResource inverseBoolToVisibilityConverter}}" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxpgi:LWKey PivotGrid.FilterWaitIndicatorTemplate}" TargetType="{x:Type Control}">
        <Grid Width="Auto" Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=ItemsPresenter}}" SnapsToDevicePixels="True">
            <dx:ColumnWaitIndicator
                MaxWidth="32"
                MaxHeight="32"
                HorizontalAlignment="Center"
                VerticalAlignment="Center" />
        </Grid>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.PivotGrid\DevExpress.Xpf.PivotGrid\Themes\Generic\MiscControls.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.PivotGrid\DevExpress.Xpf.PivotGrid\Themes\Generic\PivotGridControl.xaml-->
    <SolidColorBrush x:Key="{dxpgi:LWKey Appearance.ExpandButtonColor}" />
    <SolidColorBrush x:Key="{dxpgi:LWKey Appearance.ExpandButtonBackground}" />
    <SolidColorBrush x:Key="{dxpgi:LWKey Appearance.ExpandButtonInnerBackground}" />
    <SolidColorBrush x:Key="{dxpgi:LWKey Appearance.GroupBorderShadowColor}" />



    <!-- Moved from theme -->

    <ControlTemplate x:Key="{dxpgi:LWKey PivotGrid.ScrollerTemplate}" TargetType="{x:Type dxpgi:PivotGridScroller}">
        <dx:SimplePanel>
            <Grid x:Name="mainGrid">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <ContentControl
                    Grid.Row="3"
                    Grid.RowSpan="2"
                    Grid.Column="0"
                    Grid.ColumnSpan="3"
                    Margin="0,-1,0,0"
                    Panel.ZIndex="2"
                    Template="{DynamicResource {dxpgi:LWKey PivotGrid.CellsContentTemplate}}">
                    <Grid>
                        <ContentControl
                            Name="scrollContainer"
                            Grid.Column="1"
                            Panel.ZIndex="2"
                            Template="{DynamicResource {dxpgi:LWKey PivotGrid.CellsTemplate}}">
                            <dx:DXBorder
                                Name="DragBorder"
                                dx:DragManager.DropTargetFactory="{dxpgi:PivotGridDropTargetFactory}"
                                Background="{TemplateBinding CellBackground}"
                                BorderBrush="{DynamicResource {dxpgi:LWKey Appearance.FieldValueBorderBrush}}"
                                BorderThickness="1,1,0,0"
                                CornerRadius="{DynamicResource {dxpgi:LWKey Appearance.RightDownCornerRadius}}">
                                <dx:DXBorder ClipToBounds="True">
                                    <Grid Margin="0,-1,0,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <ScrollContentPresenter Name="PART_ScrollContentPresenter" CanContentScroll="True">
                                            <ScrollContentPresenter.Content>
                                                <dxpgi:ScrollableCellsAreaPresenter x:Name="PART_Cells" dxpgi:PivotGridScroller.PivotGrid="{Binding Path=(dxpgi:PivotGridScroller.PivotGrid), RelativeSource={RelativeSource TemplatedParent}}" ItemTemplate="{DynamicResource {dxpgi:LWKey ScrollableArea.DataAreaItemTemplate}}">
                                                    <dxpgi:PivotGridScroller.ScrollPart>
                                                        <dxpgi:ScrollerCellsInitializer />
                                                    </dxpgi:PivotGridScroller.ScrollPart>
                                                </dxpgi:ScrollableCellsAreaPresenter>
                                            </ScrollContentPresenter.Content>
                                        </ScrollContentPresenter>
                                        <ScrollBar
                                            Name="PART_VerticalScrollBar"
                                            Grid.Column="1"
                                            Panel.ZIndex="2"
                                            Maximum="{TemplateBinding ScrollableHeight}"
                                            Orientation="Vertical"
                                            ViewportSize="{TemplateBinding ViewportHeight}"
                                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                            Value="{TemplateBinding VerticalOffset}" />
                                    </Grid>
                                </dx:DXBorder>
                            </dx:DXBorder>
                        </ContentControl>
                        <dxpgi:SimpleWidthDecreaser
                            x:Name="valuesMaxSizeCalculator"
                            Width="0"
                            Height="0"
                            Element="{Binding ElementName=PART_VerticalScrollBar}"
                            MainElement="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
                        <dx:XPFContentControl
                            x:Name="rowValues"
                            Grid.Row="0"
                            Grid.RowSpan="2"
                            Grid.Column="0"
                            MaxWidth="{Binding MainElementWidth, ElementName=valuesMaxSizeCalculator}"
                            Margin="0,0,0,-1"
                            HorizontalAlignment="Left"
                            Background="{TemplateBinding ValueBackground}"
                            Template="{DynamicResource {dxpgi:LWKey PivotGrid.RowValuesContentTemplate}}">
                            <dx:SimplePanel>
                                <dxpgi:FieldValuesPresenter
                                    x:Name="PART_RowValues"
                                    dxpgi:PivotGridScroller.PivotGrid="{Binding Path=(dxpgi:PivotGridScroller.PivotGrid), RelativeSource={RelativeSource TemplatedParent}}"
                                    IsChild="True"
                                    IsColumn="False"
                                    IsManipulationEnabled="true"
                                    ItemTemplate="{DynamicResource {dxpgi:LWKey ScrollableArea.RowAreaItemTemplate}}">
                                    <dxpgi:PivotGridScroller.ScrollPart>
                                        <dxpgi:ScrollerRowValuesInitializer />
                                    </dxpgi:PivotGridScroller.ScrollPart>
                                </dxpgi:FieldValuesPresenter>
                                <dx:BestFitDecorator
                                    x:Name="PART_RowValuesBestFitControlDecorator"
                                    Width="0"
                                    Height="0"
                                    dxpgi:PivotGridScroller.PivotGrid="{Binding Path=(dxpgi:PivotGridScroller.PivotGrid), RelativeSource={RelativeSource TemplatedParent}}">
                                    <dxpgi:PivotGridScroller.ScrollPart>
                                        <dxpgi:ScrollerRowDecoratorInitializer />
                                    </dxpgi:PivotGridScroller.ScrollPart>
                                </dx:BestFitDecorator>
                            </dx:SimplePanel>
                        </dx:XPFContentControl>
                        <dx:BestFitDecorator
                            x:Name="PART_CellsBestFitControlDecorator"
                            Width="0"
                            Height="0"
                            dxpgi:PivotGridScroller.PivotGrid="{Binding Path=(dxpgi:PivotGridScroller.PivotGrid), RelativeSource={RelativeSource TemplatedParent}}">
                            <dxpgi:PivotGridScroller.ScrollPart>
                                <dxpgi:ScrollerCellsDecoratorInitializer />
                            </dxpgi:PivotGridScroller.ScrollPart>
                        </dx:BestFitDecorator>
                        <dx:DXBorder
                            x:Name="vertScroll"
                            Grid.Row="1"
                            Grid.Column="1"
                            Grid.ColumnSpan="2"
                            Panel.ZIndex="20"
                            BorderBrush="{DynamicResource {dxpgi:LWKey Appearance.FieldValueBorderBrush}}"
                            BorderThickness="1,0,0,0"
                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ScrollBar
                                    Name="PART_HorizontalScrollBar"
                                    Grid.Row="1"
                                    Maximum="{TemplateBinding ScrollableWidth}"
                                    Orientation="Horizontal"
                                    ViewportSize="{TemplateBinding ViewportWidth}"
                                    Value="{TemplateBinding HorizontalOffset}" />
                                <dx:DXBorder
                                    x:Name="PART_HorizontalScrollCorner"
                                    Grid.Column="1"
                                    Width="{Binding Path=Height, ElementName=PART_HorizontalScrollBar}"
                                    Height="Auto"
                                    MinWidth="{Binding Path=MinHeight, ElementName=PART_HorizontalScrollBar}"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    CornerRadius="0,0,2,0"
                                    Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                    Background="{DynamicResource {dxpgi:LWKey Appearance.ScrollingCornerGradient}}" />
                            </Grid>
                        </dx:DXBorder>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" MaxWidth="{Binding DesiredWidth, ElementName=valuesMaxSizeCalculator}" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ContentControl>

                <StackPanel
                    Grid.Row="1"
                    Grid.RowSpan="2"
                    Grid.Column="1"
                    Grid.ColumnSpan="2"
                    VerticalAlignment="Bottom"
                    Background="#00000000"
                    Orientation="Vertical">
                    <dxpgi:FieldHeaders
                        x:Name="PART_ColumnHeaders"
                        dxb:BarManager.DXContextMenu="{Binding Path=(dxpgi:PivotGridScroller.PivotGrid).GridMenu, RelativeSource={RelativeSource TemplatedParent}}"
                        dxpg:PivotGridPopupMenu.GridMenuType="HeadersArea"
                        Area="ColumnArea"
                        ContentTemplate="{DynamicResource {dxpgi:LWKey FieldHeaders.ColumnAreaContentTemplate}}"
                        PivotGrid="{Binding Path=(dxpgi:PivotGridScroller.PivotGrid), RelativeSource={RelativeSource TemplatedParent}}"
                        Style="{DynamicResource {dxpgi:LWKey FieldHeaders.ColumnAreaStyle}}" />
                    <ContentControl Background="{TemplateBinding ValueBackground}" Template="{DynamicResource {dxpgi:LWKey PivotGrid.ColumnValuesContentTemplate}}">
                        <dx:SimplePanel>
                            <dxpgi:FieldValuesPresenter
                                x:Name="PART_ColumnValues"
                                dxpgi:PivotGridScroller.PivotGrid="{Binding Path=(dxpgi:PivotGridScroller.PivotGrid), RelativeSource={RelativeSource TemplatedParent}}"
                                IsChild="True"
                                IsColumn="True"
                                IsManipulationEnabled="true"
                                ItemTemplate="{DynamicResource {dxpgi:LWKey ScrollableArea.ColumnAreaItemTemplate}}">
                                <dxpgi:PivotGridScroller.ScrollPart>
                                    <dxpgi:ScrollerColumnValuesInitializer />
                                </dxpgi:PivotGridScroller.ScrollPart>
                            </dxpgi:FieldValuesPresenter>
                            <dx:BestFitDecorator
                                x:Name="PART_ColumnValuesBestFitControlDecorator"
                                Width="0"
                                Height="0"
                                dxpgi:PivotGridScroller.PivotGrid="{Binding Path=(dxpgi:PivotGridScroller.PivotGrid), RelativeSource={RelativeSource TemplatedParent}}">
                                <dxpgi:PivotGridScroller.ScrollPart>
                                    <dxpgi:ScrollerColumnDecoratorInitializer />
                                </dxpgi:PivotGridScroller.ScrollPart>
                            </dx:BestFitDecorator>
                        </dx:SimplePanel>
                    </ContentControl>
                </StackPanel>
                <dxpgi:FieldHeaders
                    x:Name="PART_FilterHeaders"
                    Grid.Row="0"
                    Grid.Column="0"
                    Grid.ColumnSpan="3"
                    Area="FilterArea"
                    ContentTemplate="{DynamicResource {dxpgi:LWKey FieldHeaders.FilterAreaContentTemplate}}"
                    MeasureMode="MultiLine"
                    PivotGrid="{Binding Path=(dxpgi:PivotGridScroller.PivotGrid), RelativeSource={RelativeSource TemplatedParent}}"
                    Style="{DynamicResource {dxpgi:LWKey FieldHeaders.FilterAreaStyle}}" />

                <dx:DXBorder
                    Grid.Row="1"
                    Grid.RowSpan="2"
                    Grid.Column="0"
                    Width="{Binding ElementName=rowValues, Path=ActualWidth}"
                    HorizontalAlignment="Stretch"
                    dxb:BarManager.DXContextMenu="{Binding Path=(dxpgi:PivotGridScroller.PivotGrid).GridMenu, RelativeSource={RelativeSource TemplatedParent}}"
                    dxpg:PivotGridPopupMenu.GridMenuType="HeadersArea"
                    Background="Transparent" />
                <dxpgi:DataAreaPopupEdit
                    x:Name="PART_DataAreaPopup"
                    Grid.Row="1"
                    Grid.Column="0"
                    MaxWidth="{Binding ElementName=rowValues, Path=ActualWidth}"
                    HorizontalAlignment="Stretch"
                    dx:DragManager.DropTargetFactory="{dxpgi:PivotGridDropTargetFactory}"
                    dxpg:PivotGridControl.PivotGrid="{Binding}"
                    DataContext="{Binding Path=(dxpgi:PivotGridScroller.PivotGrid), RelativeSource={RelativeSource TemplatedParent}}"
                    PopupHeight="{Binding ActualHeight, RelativeSource={RelativeSource Self}}">
                    <dxpgi:DataAreaPopupEdit.Template>
                        <ControlTemplate>
                            <dxpgi:FieldHeaders
                                x:Name="PART_DataHeaders"
                                dx:DragManager.DropTargetFactory="{x:Null}"
                                Area="DataArea"
                                ContentTemplate="{DynamicResource {dxpgi:LWKey FieldHeaders.DataAreaContentTemplate}}"
                                LeftOffset="{Binding RowsLeft, ElementName=PART_Cells}"
                                LeftPixelsOffset="{Binding RowsLeftOffset, ElementName=PART_Cells}"
                                MeasureMode="Cut"
                                PivotGrid="{Binding}"
                                Style="{DynamicResource {dxpgi:LWKey FieldHeaders.DataAreaStyle}}" />
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding DataHeadersDisplayMode}" Value="Standard">
                                    <Setter TargetName="PART_DataHeaders" Property="MeasureMode" Value="Default" />
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </dxpgi:DataAreaPopupEdit.Template>
                    <dxpgi:DataAreaPopupEdit.PopupContentTemplate>
                        <ControlTemplate>
                            <dxpgi:FieldHeaders
                                x:Name="PART_DataHeaders"
                                Area="DataArea"
                                ContentTemplate="{DynamicResource {dxpgi:LWKey FieldHeaders.DataAreaContentTemplate}}"
                                EnableDragDrop="True"
                                EnableHeaderMenu="True"
                                MeasureMode="Default"
                                Padding="{dxpgi:LWKey FieldHeaders.DataAreaPopupPadding}"
                                PivotGrid="{Binding}"
                                Style="{DynamicResource {dxpgi:LWKey FieldHeaders.DataAreaStyle}}" />
                        </ControlTemplate>
                    </dxpgi:DataAreaPopupEdit.PopupContentTemplate>
                </dxpgi:DataAreaPopupEdit>
                <dxpgi:FieldHeaders
                    x:Name="PART_RowHeaders"
                    Grid.Row="2"
                    Grid.Column="0"
                    MaxWidth="{Binding ElementName=rowValues, Path=ActualWidth}"
                    HorizontalAlignment="Stretch"
                    Area="RowArea"
                    ContentTemplate="{DynamicResource {dxpgi:LWKey FieldHeaders.RowAreaContentTemplate}}"
                    LeftOffset="{Binding RowsLeft, ElementName=PART_Cells}"
                    LeftPixelsOffset="{Binding LeftOffset, ElementName=PART_RowValues}"
                    MeasureMode="{Binding Path=(dxpgi:PivotGridScroller.PivotGrid).RowTotalsLocation, Converter={StaticResource rowTreeToFieldHeadersMeasureModeConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                    PivotGrid="{Binding Path=(dxpgi:PivotGridScroller.PivotGrid), RelativeSource={RelativeSource TemplatedParent}}"
                    Style="{DynamicResource {dxpgi:LWKey FieldHeaders.RowAreaStyle}}" />
                <dxfuii:FilterPanelControlAdapter
                    x:Name="PART_FilterPanel"
                    Grid.Row="5"
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    Context="{Binding Path=(dxpgi:PivotGridScroller.PivotGrid).FilteringContext, RelativeSource={RelativeSource TemplatedParent}}"
                    FilteringPanelStyle="{Binding Path=(dxpgi:PivotGridScroller.PivotGrid).FilteringPanelStyle, RelativeSource={RelativeSource TemplatedParent}}"
                    UseLegacyFilterPanel="{Binding Path=(dxpgi:PivotGridScroller.PivotGrid).UseLegacyFilterPanel, RelativeSource={RelativeSource TemplatedParent}}">
                    <dxfuii:FilterPanelControlAdapter.LegacyFilterPanelTemplate>
                        <DataTemplate>
                            <dxpg:FilterPanelControl
                                dxpg:PivotGridControl.PivotGrid="{Binding Path=(dxfuii:FilterPanelControlAdapter.Adapter).TemplatedParent.(dxpgi:PivotGridScroller.PivotGrid), RelativeSource={RelativeSource Self}}"
                                ActiveFilterInfo="{Binding Path=(dxpg:PivotGridControl.PivotGrid).ActiveFilterInfo, Mode=OneWay, RelativeSource={RelativeSource Self}}"
                                AllowFilterEditor="{Binding Path=(dxpg:PivotGridControl.PivotGrid).AllowPrefilter, Mode=OneWay, RelativeSource={RelativeSource Self}}"
                                AllowMRUFilterList="{Binding Path=(dxpg:PivotGridControl.PivotGrid).AllowMRUFilterList, Mode=OneWay, RelativeSource={RelativeSource Self}}"
                                ClearFilterCommand="{x:Static dxpg:PivotGridCommands.ResetPrefilter}"
                                Foreground="{DynamicResource {dxpgi:LWKey Appearance.FilterPanelForeground}}"
                                IsCanEnableFilter="{Binding Path=(dxpg:PivotGridControl.PivotGrid).CanEnablePrefilter, RelativeSource={RelativeSource Self}}"
                                IsFilterEnabled="{Binding Path=(dxpg:PivotGridControl.PivotGrid).IsPrefilterEnabled, Mode=TwoWay, RelativeSource={RelativeSource Self}}"
                                MRUFilters="{Binding Path=(dxpg:PivotGridControl.PivotGrid).MRUFilters, Mode=OneWay, RelativeSource={RelativeSource Self}}"
                                ShowFilterEditorCommand="{x:Static dxpg:PivotGridCommands.ShowPrefilter}" />
                        </DataTemplate>
                    </dxfuii:FilterPanelControlAdapter.LegacyFilterPanelTemplate>
                </dxfuii:FilterPanelControlAdapter>
            </Grid>
            <ContentControl
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                dxpgi:PivotGridScroller.PivotGrid="{Binding Path=(dxpgi:PivotGridScroller.PivotGrid), RelativeSource={RelativeSource TemplatedParent}}"
                Template="{TemplateBinding ResizingIndicatorTemplate}"
                Visibility="Collapsed">
                <dxpgi:PivotGridScroller.ScrollPart>
                    <dxpgi:ScrollerResizerInitializer />
                </dxpgi:PivotGridScroller.ScrollPart>
            </ContentControl>

            <ContentControl
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                dxpgi:PivotGridScroller.PivotGrid="{Binding Path=(dxpgi:PivotGridScroller.PivotGrid), RelativeSource={RelativeSource TemplatedParent}}"
                Template="{TemplateBinding FocusedCellBorderTemplate}"
                Visibility="Collapsed">
                <dxpgi:PivotGridScroller.ScrollPart>
                    <dxpgi:ScrollerFocusAdornerInitializer />
                </dxpgi:PivotGridScroller.ScrollPart>
            </ContentControl>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="HorizontalScrollGroups">
                    <VisualState x:Name="Fixed" />
                    <VisualState x:Name="Unfixed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="vertScroll" Storyboard.TargetProperty="(Grid.Column)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <sys:Int32>0</sys:Int32>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="vertScroll" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <sys:Int32>3</sys:Int32>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="vertScroll" Storyboard.TargetProperty="BorderBrush">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource {dxpgi:LWKey Appearance.FieldValueOuterBorderBrush}}" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="rowValues" Storyboard.TargetProperty="(Grid.RowSpan)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <sys:Int32>1</sys:Int32>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="FixedTouch">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_HorizontalScrollCorner" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ScrollContentPresenter" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <sys:Int32>2</sys:Int32>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="scrollContainer" Storyboard.TargetProperty="(Grid.RowSpan)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <sys:Int32>2</sys:Int32>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="vertScroll" Storyboard.TargetProperty="BorderThickness">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Thickness>0</Thickness>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="UnfixedTouch">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="vertScroll" Storyboard.TargetProperty="(Grid.Column)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <sys:Int32>0</sys:Int32>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="vertScroll" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <sys:Int32>3</sys:Int32>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="vertScroll" Storyboard.TargetProperty="BorderBrush">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource {dxpgi:LWKey Appearance.FieldValueOuterBorderBrush}}" />
                            </ObjectAnimationUsingKeyFrames>

                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_HorizontalScrollCorner" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ScrollContentPresenter" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <sys:Int32>2</sys:Int32>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="scrollContainer" Storyboard.TargetProperty="(Grid.RowSpan)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <sys:Int32>2</sys:Int32>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="vertScroll" Storyboard.TargetProperty="BorderThickness">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Thickness>0</Thickness>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>

                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </dx:SimplePanel>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxpgi:PivotGridScroller.PivotGrid).ShowColumnHeaders, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter TargetName="PART_ColumnHeaders" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxpgi:PivotGridScroller.PivotGrid).ShowFilterHeaders, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter TargetName="PART_FilterHeaders" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxpgi:PivotGridScroller.PivotGrid).ShowRowHeaders, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter TargetName="PART_RowHeaders" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxpgi:PivotGridScroller.PivotGrid).ShowPrefilterPanel, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter TargetName="PART_FilterPanel" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxpgi:PivotGridScroller.PivotGrid).ShowDataHeaders, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter TargetName="PART_DataAreaPopup" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxpgi:LWKey PivotGrid.ThemeLoaderTemplate}" TargetType="{x:Type dxpg:PivotGridControl}">
        <AdornerDecorator>
            <dxpgi:DXPivotGridThemesLoader
                x:Name="PART_ThemesLoader"
                dxpg:PivotGridControl.ShowBorder="{TemplateBinding ShowBorder}"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                ErrorPanelStyle="{TemplateBinding ErrorPanelStyle}"
                ErrorPanelText="{TemplateBinding ErrorPanelText}"
                ShowBorder="{TemplateBinding ShowBorder}"
                ShowErrorPanel="{Binding Path=IsErrorPanelVisible, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                ShowIndicator="{TemplateBinding IsMainWaitIndicatorVisible}"
                Style="{DynamicResource {dxpgi:LWKey PivotGrid.BorderTemplate}}">
                <dxpgi:PivotGridScroller
                    x:Name="PART_Scroller"
                    dxpgi:PivotGridScroller.PivotGrid="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                    CellBackground="{TemplateBinding CellBackground}"
                    Focusable="False"
                    FocusedCellBorderTemplate="{TemplateBinding FocusedCellBorderTemplate}"
                    HorizontalScrollBarVisibility="Auto"
                    PanningMode="Both"
                    ResizingIndicatorTemplate="{TemplateBinding ResizingIndicatorTemplate}"
                    ScrollBarMode="{Binding Path=(dx:ScrollBarExtensions.ScrollBarMode), RelativeSource={RelativeSource TemplatedParent}}"
                    Template="{TemplateBinding ScrollViewerTemplate}"
                    ValueBackground="{TemplateBinding ValueBackground}"
                    VerticalScrollBarVisibility="Auto" />
            </dxpgi:DXPivotGridThemesLoader>
        </AdornerDecorator>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxpgi:LWKey PivotGrid.ResizingIndicatorTemplate}">
        <Rectangle Fill="{DynamicResource {dxpgi:LWKey Appearance.ResizingIndicatorBrush}}" />
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.PivotGrid\DevExpress.Xpf.PivotGrid\Themes\Generic\PivotGridControl.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.PivotGrid\DevExpress.Xpf.PivotGrid\Themes\Generic\ScrollableArea.xaml-->
    <CornerRadius x:Key="{dxpgi:LWKey Appearance.RightDownCornerRadius}">0</CornerRadius>
    <DataTemplate x:Key="{dxpgi:LWKey ScrollableArea.DataAreaItemContentTemplate}">
        <dxe:TextEdit
            VerticalAlignment="Center"
            HorizontalContentAlignment="{Binding Path=HorizontalContentAlignment, Mode=OneWay}"
            EditMode="InplaceInactive"
            EditValue="{Binding Path=DisplayText, Mode=OneWay}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxpgi:LWKey ScrollableArea.FieldAreaItemContentTemplate}">
        <dxe:TextEdit
            Name="textBlock"
            VerticalAlignment="Center"
            EditMode="InplaceInactive"
            EditValue="{Binding Path=DisplayText, Mode=OneWay}" />
    </DataTemplate>
    <ControlTemplate x:Key="{dxpgi:LWKey ScrollableArea.DataAreaItemTemplate}" TargetType="dxpg:DataAreaElement">
        <dxpgi:FieldDataCellContentPresenter x:Name="cellContent" Margin="{TemplateBinding BorderThickness}" Content="{Binding}" />
    </ControlTemplate>

    <DataTemplate x:Key="{dxpgi:LWKey ScrollableArea.FieldCellKpiTemplate}">
        <dxpgi:KpiImagePresenter
            HorizontalContentAlignment="Center"
            KpiGraphic="{Binding Path=Field.ActualKpiGraphic, Mode=OneWay}"
            KpiType="{Binding Path=Field.KpiType, Mode=OneTime}"
            ToolTipService.ToolTip="{Binding ToolTip, RelativeSource={RelativeSource Self}}"
            Value="{Binding Path=Value, Mode=OneWay}" />
    </DataTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.PivotGrid\DevExpress.Xpf.PivotGrid\Themes\Generic\ScrollableArea.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.PivotGrid\DevExpress.Xpf.PivotGrid\Themes\OldGeneric\FieldHeaders.xaml-->



    <Style x:Key="PivotGroupHeaderBaseStyle" TargetType="{x:Type dxpgi:FieldHeader}">
        <Setter Property="dxpgi:FieldHeader.Header" Value="{Binding RelativeSource={RelativeSource Self}}" />
        <Setter Property="Padding" Value="{Binding Path=HeaderPosition, Converter={StaticResource groupHeaderPositionToPaddingConverter}, RelativeSource={RelativeSource Self}}" />
        <Setter Property="FilterButtonTemplate" Value="{DynamicResource {dxpgi:LWKey FieldHeader.FilterButtonTemplate}}" />
        <Setter Property="FilterPopupTemplate" Value="{DynamicResource {dxpgi:LWKey FieldHeader.FilterPopupTemplate}}" />
        <Setter Property="FilterPopupTemplateSelector" Value="{DynamicResource {dxpgi:LWKey FieldHeader.FilterPopupTemplateSelector}}" />
        <Setter Property="DragElementTemplate" Value="{DynamicResource {dxpgi:LWKey FieldHeader.GroupDragElementTemplate}}" />
        <!--<Setter Property="dxpg:PivotGridPopupMenu.GridMenuType" Value="Header" />-->
        <!--<Setter Property="dxb:BarManager.DXContextMenu"
                Value="{Binding Path=(dxpg:PivotGridControl.PivotGrid).GridMenu, RelativeSource={RelativeSource Self}}" />-->
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template" Value="{DynamicResource {dxpgi:LWKey FieldHeader.GroupHeaderTemplate}}" />
        <Setter Property="ToolTipService.ToolTip" Value="{Binding DisplayText, RelativeSource={RelativeSource Self}}" />
    </Style>

    <Style x:Key="PivotHeaderBaseStyle" TargetType="{x:Type dxpgi:FieldHeader}">
        <Setter Property="dxpgi:FieldHeader.Field" Value="{Binding Mode=OneWay}" />
        <Setter Property="dxpgi:FieldHeader.Header" Value="{Binding RelativeSource={RelativeSource Self}}" />
        <Setter Property="FilterButtonTemplate" Value="{DynamicResource {dxpgi:LWKey FieldHeader.FilterButtonTemplate}}" />
        <Setter Property="FilterPopupTemplate" Value="{DynamicResource {dxpgi:LWKey FieldHeader.FilterPopupTemplate}}" />
        <Setter Property="FilterPopupTemplateSelector" Value="{DynamicResource {dxpgi:LWKey FieldHeader.FilterPopupTemplateSelector}}" />
        <Setter Property="DragElementTemplate" Value="{DynamicResource {dxpgi:LWKey FieldHeader.DragElementTemplate}}" />
        <Setter Property="dxpg:PivotGridPopupMenu.GridMenuType" Value="Header" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="ToolTipService.ToolTip" Value="{Binding DisplayText, RelativeSource={RelativeSource Self}}" />
    </Style>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.PivotGrid\DevExpress.Xpf.PivotGrid\Themes\OldGeneric\FieldHeaders.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.PivotGrid\DevExpress.Xpf.PivotGrid\Themes\Generic\PrintingTemplates.xaml-->



    <DataTemplate x:Key="{dxpgi:LWKey Printing.PageTemplate}">
        <dxpgp:PivotPrintPageControl DataContext="{Binding Content}" />
    </DataTemplate>

    <DataTemplate x:Key="{dxpgi:LWKey Printing.FieldCellTemplate}">
        <dxpgp:TextExporter ExportSettings="{Binding Mode=OneTime}" />
    </DataTemplate>

    <DataTemplate x:Key="{dxpgi:LWKey Printing.FieldCellKpiTemplate}">
        <dxpgp:ImageExporter dxp:ExportSettings.BorderColor="#808080" dxp:ExportSettings.TargetType="Panel" ExportSettings="{Binding Mode=OneTime}">
            <dxpgp:ImageExporter.Template>
                <ControlTemplate TargetType="{x:Type dxpgp:ImageExporter}">
                    <Image
                        MaxWidth="15"
                        MaxHeight="15"
                        dxp:ExportSettings.TargetType="Image"
                        Source="{TemplateBinding ImageSource}"
                        Stretch="Uniform" />
                </ControlTemplate>
            </dxpgp:ImageExporter.Template>
        </dxpgp:ImageExporter>
    </DataTemplate>

    <DataTemplate x:Key="{dxpgi:LWKey Printing.FieldValueTemplate}">
        <dxpgp:TextExporter ExportSettings="{Binding Mode=OneTime}" />
    </DataTemplate>

    <DataTemplate x:Key="{dxpgi:LWKey Printing.FieldHeaderTemplate}">
        <dxe:TextEdit
            x:Name="TextBlock"
            Padding="{Binding Padding, Mode=OneWay}"
            dxp:TextExportSettings.TextWrapping="NoWrap"
            dxp:TextExportSettings.XlsExportNativeFormat="False"
            Background="#F0F0F0"
            BorderBrush="#808080"
            BorderThickness="{Binding BorderThickness, Mode=OneWay}"
            EditValue="{Binding DisplayText, Mode=OneWay}"
            IsPrintingMode="True" />
    </DataTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.PivotGrid\DevExpress.Xpf.PivotGrid\Themes\Generic\PrintingTemplates.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.PivotGrid\DevExpress.Xpf.PivotGrid\Themes\Generic.xaml-->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.PivotGrid\DevExpress.Xpf.PivotGrid\Themes\Generic.xaml-->


    <!--#region DEFAULT STYLES-->

    <Style x:Key="PivotFieldListControl.DefaultStyleBase" TargetType="{x:Type dxpg:PivotFieldListControl}">
        <Setter Property="GroupFields" Value="{Binding Path=Owner.GroupFieldsInFieldList, RelativeSource={RelativeSource Self}}" />
        <Setter Property="IncludeVisibleFields" Value="{Binding Path=Owner.FieldListIncludeVisibleFields, RelativeSource={RelativeSource Self}}" />
        <Setter Property="ShowHeaderMenu" Value="{DXBinding '@s.ActualOrientation eq $dxpg:FieldListOrientation.Horizontal and @s.Area ne $dxpg:FieldListArea.All'}" />
        <Setter Property="Template">
            <Setter.Value>
                <Binding Path="ActualOrientation" RelativeSource="{RelativeSource Self}">
                    <Binding.Converter>
                        <dx:EnumToObjectConverter>
                            <dx:EnumToObjectConverter.Values>
                                <dx:EnumObjectProvider x:Key="Vertical">
                                    <dx:EnumObjectProvider.Value>
                                        <ControlTemplate TargetType="{x:Type dxpg:PivotFieldListControl}">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="*" />
                                                </Grid.RowDefinitions>
                                                <dx:DXBorder
                                                    x:Name="hoverBorder"
                                                    Grid.Row="1"
                                                    Style="{DynamicResource {dxpgi:LWKey Appearance.FieldListDragOverBorderStyle}}"
                                                    Visibility="Collapsed" />
                                                <dxpgi:InnerFieldListControl
                                                    x:Name="FieldListHeaders"
                                                    Grid.Row="1"
                                                    Area="{TemplateBinding Area}"
                                                    Background="{TemplateBinding Background}"
                                                    GroupFields="{TemplateBinding GroupFields}"
                                                    Opacity="1"
                                                    PivotGrid="{TemplateBinding Owner}"
                                                    ShowAll="{TemplateBinding IncludeVisibleFields}"
                                                    ShowBorder="{TemplateBinding ShowBorder}" />
                                                <Grid
                                                    x:Name="innerGrid"
                                                    Height="21"
                                                    SnapsToDevicePixels="True"
                                                    Visibility="{TemplateBinding LabelVisibility}">
                                                    <!--SPECIFICTHEME TouchlineDark <Grid.MinHeight>22</Grid.MinHeight> SPECIFICTHEME-->
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto" />
                                                        <ColumnDefinition Width="*" />
                                                    </Grid.ColumnDefinitions>
                                                    <dx:DXImage
                                                        Width="16"
                                                        Height="16"
                                                        Margin="0,0,0,5"
                                                        VerticalAlignment="Center"
                                                        Source="{Binding Path=ActualArea, Converter={StaticResource fieldListActualAreaToAreaImageConverter}, ElementName=FieldListHeaders}">
                                                        <RenderOptions.BitmapScalingMode>NearestNeighbor</RenderOptions.BitmapScalingMode>
                                                    </dx:DXImage>
                                                    <TextBlock
                                                        Grid.Column="1"
                                                        Margin="4,0,4,5"
                                                        HorizontalAlignment="Left"
                                                        VerticalAlignment="Center"
                                                        Text="{Binding Path=ActualArea, Converter={StaticResource fieldListActualAreaToAreaLabelConverter}, ElementName=FieldListHeaders}"
                                                        TextTrimming="CharacterEllipsis" />
                                                </Grid>
                                                <dx:DXBorder Grid.Row="1" Visibility="{TemplateBinding EmptyTextVisibility}">
                                                    <TextBlock
                                                        x:Name="FieldListDragText"
                                                        Style="{DynamicResource {dxpgi:LWKey PivotGrid.FieldListDragTextStyle}}"
                                                        Text="{Binding Path=ActualArea, ElementName=FieldListHeaders, Converter={StaticResource fieldListActualAreaToAreaTextConverter}}"
                                                        Visibility="{Binding ElementName=FieldListHeaders, Path=IsEmpty, Converter={StaticResource boolToVisibilityConverter}}" />
                                                </dx:DXBorder>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="EnableDragOver">
                                                        <VisualState x:Name="Disable" />
                                                        <VisualState x:Name="Enable">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="-2" Storyboard.TargetName="hoverBorder" Storyboard.TargetProperty="Margin" />
                                                                <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="2" Storyboard.TargetName="hoverBorder" Storyboard.TargetProperty="BorderThickness" />
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="Drag">
                                                        <VisualState x:Name="DragOver">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Visibility="Visible" Storyboard.TargetName="hoverBorder" Storyboard.TargetProperty="Visibility" />
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="DragLeave" />
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                                                    <Setter TargetName="innerGrid" Property="Height" Value="43" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </dx:EnumObjectProvider.Value>
                                </dx:EnumObjectProvider>
                                <dx:EnumObjectProvider x:Key="Horizontal">
                                    <dx:EnumObjectProvider.Value>
                                        <ControlTemplate TargetType="{x:Type dxpg:PivotFieldListControl}">
                                            <dx:DXBorder Background="{TemplateBinding Background}" BorderBrush="{DynamicResource {dxpgi:LWKey Appearance.PivotBorderBrush}}" BorderThickness="{TemplateBinding BorderThickness}">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto" />
                                                        <ColumnDefinition Width="*" />
                                                    </Grid.ColumnDefinitions>
                                                    <dxpgi:FieldHeaders
                                                        x:Name="FieldListHeaders"
                                                        Grid.Column="1"
                                                        Margin="0,-1,0,-2"
                                                        Area="{TemplateBinding Area}"
                                                        ContentTemplate="{DynamicResource {dxpgi:LWKey FieldHeaders.RowAreaContentTemplate}}"
                                                        EmptyTextVisibility="{TemplateBinding EmptyTextVisibility}"
                                                        EnableDragDrop="True"
                                                        Padding="{dxpgi:LWKey FieldHeaders.DataAreaPopupPadding}"
                                                        Foreground="{DynamicResource {dxpgi:LWKey Appearance.FieldListDragTextForeground}}"
                                                        PivotGrid="{TemplateBinding Owner}"
                                                        ShowListSource="True"
                                                        Style="{DynamicResource {dxpgi:LWKey FieldHeaders.DataAreaStyle}}" />
                                                    <Grid
                                                        MinWidth="{Binding FontSize, RelativeSource={RelativeSource TemplatedParent}, Converter={dxpgi:FontSizeToFieldListLabelMinWidth}}"
                                                        MinHeight="16"
                                                        VerticalAlignment="Center"
                                                        SnapsToDevicePixels="True"
                                                        Visibility="{TemplateBinding LabelVisibility}">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto" />
                                                            <ColumnDefinition Width="*" />
                                                        </Grid.ColumnDefinitions>
                                                        <dx:DXImage
                                                            Width="16"
                                                            Height="16"
                                                            VerticalAlignment="Center"
                                                            Source="{Binding Path=ActualArea, Converter={StaticResource fieldListActualAreaToAreaImageConverter}, ElementName=FieldListHeaders}">
                                                            <RenderOptions.BitmapScalingMode>NearestNeighbor</RenderOptions.BitmapScalingMode>
                                                        </dx:DXImage>
                                                        <TextBlock
                                                            Grid.Column="1"
                                                            Margin="4,0"
                                                            HorizontalAlignment="Left"
                                                            VerticalAlignment="Center"
                                                            Text="{Binding Path=ActualArea, Converter={StaticResource fieldListActualAreaToAreaLabelConverter}, ElementName=FieldListHeaders}"
                                                            TextTrimming="CharacterEllipsis" />
                                                    </Grid>
                                                </Grid>
                                            </dx:DXBorder>
                                        </ControlTemplate>
                                    </dx:EnumObjectProvider.Value>
                                </dx:EnumObjectProvider>
                                <dx:EnumObjectProvider x:Key="Auto" />
                            </dx:EnumToObjectConverter.Values>
                        </dx:EnumToObjectConverter>
                    </Binding.Converter>
                </Binding>
            </Setter.Value>
        </Setter>
        <Setter Property="dx:DragManager.DropTargetFactory" Value="{dxpgi:PivotGridDropTargetFactory}" />
        <Setter Property="IsEnabled" Value="{Binding Owner.IsEnabled, RelativeSource={RelativeSource Self}}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="{DynamicResource {dxpgi:LWKey PivotGrid.FieldListBackgroundBrush}}" />
        <Setter Property="EmptyTextVisibility" Value="{Binding LabelVisibility, RelativeSource={RelativeSource Self}, Converter={StaticResource inverseVisibilityConverter}}" />
        <Setter Property="dxpgi:InnerFieldListControl.FieldListStyle" Value="Simple" />
    </Style>
    <Style x:Key="InnerFieldListControl.DefaultStyleBase" TargetType="{x:Type dxpgi:InnerFieldListControl}">
        <Setter Property="dx:DragManager.DropTargetFactory" Value="{dxpgi:PivotGridDropTargetFactory}" />
        <Setter Property="StandartTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxpgi:InnerFieldListControl}">
                    <DockPanel Margin="{TemplateBinding Padding}">
                        <dx:DXBorder Style="{StaticResource searchBorderStyle}">
                            <dxe:SearchControl x:Name="search" Style="{StaticResource searchFieldStyle}" Tag="DisplayText" />
                        </dx:DXBorder>
                        <dxe:ListBoxEdit
                            x:Name="lb"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            FilterCriteria="{Binding ElementName=search, Path=FilterCriteria}"
                            Focusable="False"
                            ItemContainerStyle="{StaticResource ItemContainerStyle}"
                            ItemTemplate="{DynamicResource {dxpgi:LWKey PivotGrid.ExcelFieldListItemTemplate}}"
                            ItemsSource="{Binding ItemsSource, Converter={StaticResource PivotGridFieldDataListConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                            ScrollViewer.VerticalScrollBarVisibility="Auto"
                            ShowBorder="{TemplateBinding ShowBorder}">
                            <dxe:ListBoxEdit.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel />
                                </ItemsPanelTemplate>
                            </dxe:ListBoxEdit.ItemsPanel>
                        </dxe:ListBoxEdit>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="TreeViewTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxpgi:InnerFieldListControl}">
                    <DockPanel Margin="{TemplateBinding Padding}">
                        <dx:DXBorder Style="{StaticResource searchBorderStyle}">
                            <dxe:SearchControl x:Name="search" Style="{StaticResource searchFieldStyle}" Tag="DisplayText;DisplayFolder" />
                        </dx:DXBorder>
                        <dxpgi:TreeViewFieldsPresenter
                            x:Name="lb"
                            dx:DragManager.IsStartDragPlace="True"
                            dxpg:PivotGridControl.PivotGrid="{Binding Path=(dxpg:PivotGridControl.PivotGrid), RelativeSource={RelativeSource TemplatedParent}}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CoreFields="{TemplateBinding ItemsSource}"
                            FilterCriteria="{Binding ElementName=search, Path=FilterCriteria}"
                            GroupFields="{TemplateBinding GroupFields}"
                            ScrollViewer.HorizontalScrollBarVisibility="Auto"
                            ScrollViewer.VerticalScrollBarVisibility="Auto"
                            ShowCheckBoxes="{TemplateBinding ActualShowAll}">
                            <ScrollViewer.PanningMode>None</ScrollViewer.PanningMode>
                        </dxpgi:TreeViewFieldsPresenter>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template" Value="{Binding StandartTemplate, RelativeSource={RelativeSource Self}}" />
        <Setter Property="BorderThickness" Value="{DynamicResource {dxpgi:LWKey PivotGrid.InnerFieldListBorderThickness}}" />
        <Setter Property="ShowListSource" Value="True" />
        <Setter Property="Background" Value="{DynamicResource {dxpgi:LWKey PivotGrid.FieldListBackgroundBrush}}" />
        <Setter Property="Padding" Value="{DynamicResource {dxpgi:LWKey PivotGrid.InnerFieldListPadding}}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(dxpgi:InnerFieldListControl.FieldListStyle), RelativeSource={RelativeSource Self}}" Value="Excel2007">
                <Setter Property="Padding" Value="0" />
                <Setter Property="BorderThickness" Value="1" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="PivotExcelFieldListControl.DefaultStyleBase" TargetType="{x:Type dxpg:PivotExcelFieldListControl}">
        <Setter Property="GroupFields" Value="{Binding Path=Owner.GroupFieldsInFieldList, RelativeSource={RelativeSource Self}}" />
        <Setter Property="IncludeVisibleFields" Value="{Binding Path=Owner.FieldListIncludeVisibleFields, RelativeSource={RelativeSource Self}}" />
        <Setter Property="IsHitTestVisible" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxpg:PivotExcelFieldListControl}">
                    <dxb:BarManager>
                        <dxb:BarManager.Items>
                            <dxpgi:ExcelMenuBarButtonItem
                                x:Name="StackedDefault"
                                Content="{dxpgi:PivotGridStringId StringId=CustomizationFormStackedDefault}"
                                GlyphSize="Large"
                                IsVisible="{Binding Path=Owner.FieldListAllowedLayouts, Converter={StaticResource fieldListAllowedLayoutsToBoolConverter}, ConverterParameter=StackedDefault}"
                                LargeGlyph="{dxpgi:PivotImage ImageName=StackedDefault}"
                                PivotGrid="{Binding Path=Owner}">
                                <dxpgi:ExcelMenuBarButtonItem.CommandParameter>
                                    <dxpg:FieldListLayout>StackedDefault</dxpg:FieldListLayout>
                                </dxpgi:ExcelMenuBarButtonItem.CommandParameter>
                            </dxpgi:ExcelMenuBarButtonItem>
                            <dxpgi:ExcelMenuBarButtonItem
                                x:Name="StackedSideBySide"
                                Content="{dxpgi:PivotGridStringId StringId=CustomizationFormStackedSideBySide}"
                                GlyphSize="Large"
                                IsVisible="{Binding Path=Owner.FieldListAllowedLayouts, Converter={StaticResource fieldListAllowedLayoutsToBoolConverter}, ConverterParameter=StackedSideBySide}"
                                LargeGlyph="{dxpgi:PivotImage ImageName=StackedSideBySide}"
                                PivotGrid="{Binding Path=Owner}">
                                <dxpgi:ExcelMenuBarButtonItem.CommandParameter>
                                    <dxpg:FieldListLayout>StackedSideBySide</dxpg:FieldListLayout>
                                </dxpgi:ExcelMenuBarButtonItem.CommandParameter>
                            </dxpgi:ExcelMenuBarButtonItem>
                            <dxpgi:ExcelMenuBarButtonItem
                                x:Name="TopPanelOnly"
                                Content="{dxpgi:PivotGridStringId StringId=CustomizationFormTopPanelOnly}"
                                GlyphSize="Large"
                                IsVisible="{Binding Path=Owner.FieldListAllowedLayouts, Converter={StaticResource fieldListAllowedLayoutsToBoolConverter}, ConverterParameter=TopPanelOnly}"
                                LargeGlyph="{dxpgi:PivotImage ImageName=TopPanelOnly}"
                                PivotGrid="{Binding Path=Owner}">
                                <dxpgi:ExcelMenuBarButtonItem.CommandParameter>
                                    <dxpg:FieldListLayout>TopPanelOnly</dxpg:FieldListLayout>
                                </dxpgi:ExcelMenuBarButtonItem.CommandParameter>
                            </dxpgi:ExcelMenuBarButtonItem>
                            <dxpgi:ExcelMenuBarButtonItem
                                x:Name="BottomPanelOnly2by2"
                                Content="{dxpgi:PivotGridStringId StringId=CustomizationFormBottomPanelOnly2by2}"
                                GlyphSize="Large"
                                IsVisible="{Binding Path=Owner.FieldListAllowedLayouts, Converter={StaticResource fieldListAllowedLayoutsToBoolConverter}, ConverterParameter=BottomPanelOnly2by2}"
                                LargeGlyph="{dxpgi:PivotImage ImageName=BottomPanelOnly2by2}"
                                PivotGrid="{Binding Path=Owner}">
                                <dxpgi:ExcelMenuBarButtonItem.CommandParameter>
                                    <dxpg:FieldListLayout>BottomPanelOnly2by2</dxpg:FieldListLayout>
                                </dxpgi:ExcelMenuBarButtonItem.CommandParameter>
                            </dxpgi:ExcelMenuBarButtonItem>
                            <dxpgi:ExcelMenuBarButtonItem
                                x:Name="BottomPanelOnly1by4"
                                Content="{dxpgi:PivotGridStringId StringId=CustomizationFormBottomPanelOnly1by4}"
                                GlyphSize="Large"
                                IsVisible="{Binding Path=Owner.FieldListAllowedLayouts, Converter={StaticResource fieldListAllowedLayoutsToBoolConverter}, ConverterParameter=BottomPanelOnly1by4}"
                                LargeGlyph="{dxpgi:PivotImage ImageName=BottomPanelOnly1by4}"
                                PivotGrid="{Binding Path=Owner}">
                                <dxpgi:ExcelMenuBarButtonItem.CommandParameter>
                                    <dxpg:FieldListLayout>BottomPanelOnly1by4</dxpg:FieldListLayout>
                                </dxpgi:ExcelMenuBarButtonItem.CommandParameter>
                            </dxpgi:ExcelMenuBarButtonItem>
                        </dxb:BarManager.Items>
                        <Grid Margin="{TemplateBinding Padding}">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="33*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="24" />
                                <RowDefinition Height="50*" />
                                <RowDefinition Height="0" />
                            </Grid.RowDefinitions>
                            <dx:SimplePanel
                                x:Name="ShowLayoutListPanel"
                                Grid.Row="0"
                                MinWidth="200"
                                Panel.ZIndex="100"
                                SnapsToDevicePixels="True"
                                Visibility="{Binding Path=Owner.IsFieldListMenuEnabled, Converter={StaticResource boolToVisibilityConverter}}">
                                <Button
                                    Name="ShowLayoutList2"
                                    Width="40"
                                    Height="23"
                                    Margin="0,0,0,1"
                                    HorizontalAlignment="Right"
                                    Opacity="0"
                                    ToolTipService.ToolTip="{dxpgi:PivotGridStringId StringId=CustomizationFormLayoutButtonTooltip}">
                                    <dxb:BarManager.DXContextMenu>
                                        <dxb:PopupMenuInfo>
                                            <dxb:PopupMenuInfo.ItemLinks>
                                                <dxb:BarButtonItemLink BarItemName="StackedDefault" />
                                                <dxb:BarButtonItemLink BarItemName="StackedSideBySide" />
                                                <dxb:BarButtonItemLink BarItemName="TopPanelOnly" />
                                                <dxb:BarButtonItemLink BarItemName="BottomPanelOnly2by2" />
                                                <dxb:BarButtonItemLink BarItemName="BottomPanelOnly1by4" />
                                            </dxb:PopupMenuInfo.ItemLinks>
                                        </dxb:PopupMenuInfo>
                                    </dxb:BarManager.DXContextMenu>
                                </Button>
                                <Button
                                    Name="ShowLayoutList"
                                    Width="40"
                                    Height="23"
                                    Margin="0,0,0,1"
                                    HorizontalAlignment="Right">
                                    <Button.Template>
                                        <ControlTemplate>
                                            <StackPanel Margin="-2,0,0,1" HorizontalAlignment="Center" Orientation="Horizontal">
                                                <dx:DXImage
                                                    Width="16"
                                                    Height="16"
                                                    Margin="1,1.7,0,0"
                                                    HorizontalAlignment="Left"
                                                    VerticalAlignment="Center"
                                                    Source="{dxpgi:PivotImage ImageName=Customization2007Button}">
                                                    <RenderOptions.BitmapScalingMode>NearestNeighbor</RenderOptions.BitmapScalingMode>
                                                </dx:DXImage>
                                                <Path
                                                    Width="5"
                                                    Height="3"
                                                    Margin="2,0,0,0"
                                                    HorizontalAlignment="Left"
                                                    Data="F1 M 278,308L 282,312L 283,312L 287,308L 278,308 Z "
                                                    Fill="{DynamicResource {dxpgi:LWKey Appearance.HeaderControlsColor}}"
                                                    Stretch="Fill" />
                                            </StackPanel>
                                        </ControlTemplate>
                                    </Button.Template>
                                    <dxb:BarManager.DXContextMenu>
                                        <dxb:PopupMenuInfo>
                                            <dxb:PopupMenuInfo.ItemLinks>
                                                <dxb:BarButtonItemLink BarItemName="StackedDefault" />
                                                <dxb:BarButtonItemLink BarItemName="StackedSideBySide" />
                                                <dxb:BarButtonItemLink BarItemName="TopPanelOnly" />
                                                <dxb:BarButtonItemLink BarItemName="BottomPanelOnly2by2" />
                                                <dxb:BarButtonItemLink BarItemName="BottomPanelOnly1by4" />
                                            </dxb:PopupMenuInfo.ItemLinks>
                                        </dxb:PopupMenuInfo>
                                    </dxb:BarManager.DXContextMenu>
                                </Button>
                            </dx:SimplePanel>
                            <dxpgi:FieldListLayoutSelector
                                x:Name="LayoutSelector"
                                Grid.Row="1"
                                FieldListSplitterX="{Binding Path=Owner.PivotGrid.FieldListSplitterX, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                FieldListSplitterY="{Binding Path=Owner.PivotGrid.FieldListSplitterY, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                Layout="{Binding Path=Owner.PivotGrid.FieldListLayout, RelativeSource={RelativeSource TemplatedParent}}"
                                ShowAll="{Binding Path=Owner.PivotGrid.FieldListIncludeVisibleFields, RelativeSource={RelativeSource TemplatedParent}}">
                                <dxpgi:FieldListLayoutSelector.StackedDefaultTemplate>
                                    <ControlTemplate TargetType="{x:Type dxpgi:FieldListLayoutSelector}">
                                        <dxlc:DockLayoutControl Margin="0,-24,0,0">
                                            <Grid MinHeight="{DynamicResource {dxpgi:LWKey Appearance.FieldListHiddenFieldsShowGridMinHeight}}" dxlc:DockLayoutControl.Dock="Top" SnapsToDevicePixels="True">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <dx:DXImage
                                                    Width="16"
                                                    Height="16"
                                                    VerticalAlignment="Top"
                                                    Margin="0,3,0,0"
                                                    Source="{dxpgi:PivotImage ImageName=Customization2007HiddenFields}">
                                                    <RenderOptions.BitmapScalingMode>NearestNeighbor</RenderOptions.BitmapScalingMode>
                                                </dx:DXImage>
                                                <TextBlock
                                                    Grid.Column="1"
                                                    Margin="4,2"
                                                    HorizontalAlignment="Left"
                                                    VerticalAlignment="Top"
                                                    Text="{Binding Path=ShowAll, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource hiddenFieldsShowAllConverter}}"
                                                    TextTrimming="CharacterEllipsis" />
                                            </Grid>
                                            <ContentPresenter
                                                Height="{Binding FieldListSplitterY, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                                MaxHeight="{Binding Path=ActualHeightCore, RelativeSource={RelativeSource TemplatedParent}, Converter={dxpgi:MaxWidthConverter}}"
                                                Margin="0,0,0,8"
                                                dxlc:DockLayoutControl.AllowVerticalSizing="True"
                                                dxlc:DockLayoutControl.Dock="Top"
                                                Content="{TemplateBinding FieldListAreaContent}" />
                                            <Grid Margin="0,8,0,0" dxlc:DockLayoutControl.AllowVerticalSizing="True" dxlc:DockLayoutControl.Dock="Client">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*" />
                                                    <RowDefinition Height="*" />
                                                </Grid.RowDefinitions>
                                                <ContentPresenter
                                                    Grid.Row="0"
                                                    Grid.Column="0"
                                                    Margin="0,0,4,4"
                                                    Content="{TemplateBinding FilterAreaContent}" />
                                                <ContentPresenter
                                                    Grid.Row="0"
                                                    Grid.Column="1"
                                                    Margin="4,0,0,4"
                                                    Content="{TemplateBinding ColumnAreaContent}" />
                                                <ContentPresenter
                                                    Grid.Row="1"
                                                    Grid.Column="0"
                                                    Margin="0,4,4,0"
                                                    Content="{TemplateBinding RowAreaContent}" />
                                                <ContentPresenter
                                                    Grid.Row="1"
                                                    Grid.Column="1"
                                                    Margin="4,4,0,0"
                                                    Content="{TemplateBinding DataAreaContent}" />
                                            </Grid>
                                            <ContentPresenter Margin="0,8,0,0" dxlc:DockLayoutControl.Dock="Bottom" Content="{TemplateBinding DefereUpdatesContent}" />
                                        </dxlc:DockLayoutControl>
                                    </ControlTemplate>
                                </dxpgi:FieldListLayoutSelector.StackedDefaultTemplate>
                                <dxpgi:FieldListLayoutSelector.StackedSideBySideTemplate>
                                    <ControlTemplate TargetType="{x:Type dxpgi:FieldListLayoutSelector}">
                                        <dxlc:DockLayoutControl Margin="0,2,0,0">
                                            <ContentPresenter Margin="0,0,0,0" dxlc:DockLayoutControl.Dock="Bottom" Content="{TemplateBinding DefereUpdatesContent}" />
                                            <Grid Margin="8,0,0,0" dxlc:DockLayoutControl.Dock="Client">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="1*" />
                                                    <ColumnDefinition Width="1*" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*" />
                                                    <RowDefinition Height="*" />
                                                </Grid.RowDefinitions>
                                                <ContentPresenter
                                                    Grid.Row="0"
                                                    Grid.Column="0"
                                                    Margin="0,0,4,4"
                                                    Content="{TemplateBinding FilterAreaContent}" />
                                                <ContentPresenter
                                                    Grid.Row="0"
                                                    Grid.Column="1"
                                                    Margin="4,0,0,4"
                                                    Content="{TemplateBinding ColumnAreaContent}" />
                                                <ContentPresenter
                                                    Grid.Row="1"
                                                    Grid.Column="0"
                                                    Margin="0,4,4,0"
                                                    Content="{TemplateBinding RowAreaContent}" />
                                                <ContentPresenter
                                                    Grid.Row="1"
                                                    Grid.Column="1"
                                                    Margin="4,4,0,0"
                                                    Content="{TemplateBinding DataAreaContent}" />
                                            </Grid>
                                            <Grid
                                                Width="{Binding FieldListSplitterX, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                                MaxWidth="{Binding Path=ActualWidthCore, RelativeSource={RelativeSource TemplatedParent}, Converter={dxpgi:MaxWidthConverter}}"
                                                dxlc:DockLayoutControl.AllowHorizontalSizing="True"
                                                dxlc:DockLayoutControl.Dock="Left">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="*" />
                                                </Grid.RowDefinitions>
                                                <Grid
                                                    Height="16"
                                                    Margin="0,0,8,0"
                                                    dxlc:DockLayoutControl.Dock="Top"
                                                    SnapsToDevicePixels="True">
                                                    <!--SPECIFICTHEME TouchlineDark <Grid.MinHeight>20</Grid.MinHeight> SPECIFICTHEME-->
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto" />
                                                        <ColumnDefinition Width="*" />
                                                    </Grid.ColumnDefinitions>
                                                    <dx:DXImage
                                                        Width="16"
                                                        Height="16"
                                                        VerticalAlignment="Top"
                                                        Source="{dxpgi:PivotImage ImageName=Customization2007HiddenFields}">
                                                        <RenderOptions.BitmapScalingMode>NearestNeighbor</RenderOptions.BitmapScalingMode>
                                                    </dx:DXImage>
                                                    <TextBlock
                                                        Grid.Column="1"
                                                        Margin="4,2"
                                                        HorizontalAlignment="Left"
                                                        VerticalAlignment="Center"
                                                        Text="{Binding Path=ShowAll, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource hiddenFieldsShowAllConverter}}"
                                                        TextTrimming="CharacterEllipsis" />
                                                </Grid>
                                                <ContentPresenter
                                                    Grid.Row="1"
                                                    Margin="0,4,8,0"
                                                    dxlc:DockLayoutControl.AllowHorizontalSizing="True"
                                                    dxlc:DockLayoutControl.Dock="Client"
                                                    Content="{TemplateBinding FieldListAreaContent}" />
                                            </Grid>
                                        </dxlc:DockLayoutControl>
                                    </ControlTemplate>
                                </dxpgi:FieldListLayoutSelector.StackedSideBySideTemplate>
                                <dxpgi:FieldListLayoutSelector.TopPanelOnlyTemplate>
                                    <ControlTemplate TargetType="{x:Type dxpgi:FieldListLayoutSelector}">
                                        <ContentPresenter
                                            Margin="0,2,0,0"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            Content="{TemplateBinding FieldListAreaContent}" />
                                    </ControlTemplate>
                                </dxpgi:FieldListLayoutSelector.TopPanelOnlyTemplate>
                                <dxpgi:FieldListLayoutSelector.BottomPanelOnly2by2Template>
                                    <ControlTemplate TargetType="{x:Type dxpgi:FieldListLayoutSelector}">
                                        <Grid Margin="0,2,0,0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <ContentPresenter
                                                Grid.Row="0"
                                                Grid.Column="0"
                                                Margin="0,0,4,4"
                                                Content="{TemplateBinding FilterAreaContent}" />
                                            <ContentPresenter
                                                Grid.Row="0"
                                                Grid.Column="1"
                                                Margin="4,0,0,4"
                                                Content="{TemplateBinding ColumnAreaContent}" />
                                            <ContentPresenter
                                                Grid.Row="1"
                                                Grid.Column="0"
                                                Margin="0,4,4,0"
                                                Content="{TemplateBinding RowAreaContent}" />
                                            <ContentPresenter
                                                Grid.Row="1"
                                                Grid.Column="1"
                                                Margin="4,4,0,0"
                                                Content="{TemplateBinding DataAreaContent}" />
                                            <ContentPresenter
                                                Grid.Row="2"
                                                Grid.Column="0"
                                                Grid.ColumnSpan="2"
                                                Margin="0,8,0,0"
                                                Content="{TemplateBinding DefereUpdatesContent}" />
                                        </Grid>
                                    </ControlTemplate>
                                </dxpgi:FieldListLayoutSelector.BottomPanelOnly2by2Template>
                                <dxpgi:FieldListLayoutSelector.BottomPanelOnly1by4Template>
                                    <ControlTemplate TargetType="{x:Type dxpgi:FieldListLayoutSelector}">
                                        <Grid Margin="0,2,0,0">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <ContentPresenter Grid.Row="0" Margin="0,0,0,4" Content="{TemplateBinding FilterAreaContent}" />
                                            <ContentPresenter Grid.Row="1" Margin="0,4,0,4" Content="{TemplateBinding ColumnAreaContent}" />
                                            <ContentPresenter Grid.Row="2" Margin="0,4,0,4" Content="{TemplateBinding RowAreaContent}" />
                                            <ContentPresenter Grid.Row="3" Margin="0,4,0,0" Content="{TemplateBinding DataAreaContent}" />
                                            <ContentPresenter Grid.Row="4" Margin="0,8,0,0" Content="{TemplateBinding DefereUpdatesContent}" />
                                        </Grid>
                                    </ControlTemplate>
                                </dxpgi:FieldListLayoutSelector.BottomPanelOnly1by4Template>
                                <dxpgi:FieldListLayoutSelector.FieldListAreaContent>
                                    <dxpgi:InnerFieldListControl
                                        dxpgi:InnerFieldListControl.FieldListStyle="Excel2007"
                                        Area="All"
                                        GroupFields="{TemplateBinding GroupFields}"
                                        PivotGrid="{TemplateBinding Owner}"
                                        ShowAll="{TemplateBinding IncludeVisibleFields}" />
                                </dxpgi:FieldListLayoutSelector.FieldListAreaContent>
                                <dxpgi:FieldListLayoutSelector.FilterAreaContent>
                                    <dxpg:PivotFieldListControl
                                        dxpgi:InnerFieldListControl.FieldListStyle="Excel2007"
                                        Area="FilterArea"
                                        EmptyTextVisibility="Collapsed"
                                        Foreground="{TemplateBinding Foreground}"
                                        GroupFields="False"
                                        IncludeVisibleFields="False"
                                        IsExternal="False"
                                        LabelVisibility="Visible"
                                        Owner="{TemplateBinding Owner}"
                                        ShowBorder="True" />
                                </dxpgi:FieldListLayoutSelector.FilterAreaContent>
                                <dxpgi:FieldListLayoutSelector.ColumnAreaContent>
                                    <dxpg:PivotFieldListControl
                                        dxpgi:InnerFieldListControl.FieldListStyle="Excel2007"
                                        Area="ColumnArea"
                                        EmptyTextVisibility="Collapsed"
                                        Foreground="{TemplateBinding Foreground}"
                                        GroupFields="False"
                                        IncludeVisibleFields="False"
                                        IsExternal="False"
                                        LabelVisibility="Visible"
                                        Owner="{TemplateBinding Owner}"
                                        ShowBorder="True" />
                                </dxpgi:FieldListLayoutSelector.ColumnAreaContent>
                                <dxpgi:FieldListLayoutSelector.RowAreaContent>
                                    <dxpg:PivotFieldListControl
                                        dxpgi:InnerFieldListControl.FieldListStyle="Excel2007"
                                        Area="RowArea"
                                        EmptyTextVisibility="Collapsed"
                                        Foreground="{TemplateBinding Foreground}"
                                        GroupFields="False"
                                        IncludeVisibleFields="False"
                                        IsExternal="False"
                                        LabelVisibility="Visible"
                                        Owner="{TemplateBinding Owner}"
                                        ShowBorder="True" />
                                </dxpgi:FieldListLayoutSelector.RowAreaContent>
                                <dxpgi:FieldListLayoutSelector.DataAreaContent>
                                    <dxpg:PivotFieldListControl
                                        dxpgi:InnerFieldListControl.FieldListStyle="Excel2007"
                                        Area="DataArea"
                                        EmptyTextVisibility="Collapsed"
                                        Foreground="{TemplateBinding Foreground}"
                                        GroupFields="False"
                                        IncludeVisibleFields="False"
                                        IsExternal="False"
                                        LabelVisibility="Visible"
                                        Owner="{TemplateBinding Owner}"
                                        ShowBorder="True" />
                                </dxpgi:FieldListLayoutSelector.DataAreaContent>
                                <dxpgi:FieldListLayoutSelector.DefereUpdatesContent>
                                    <dx:SimplePanel MinWidth="215" HorizontalAlignment="Stretch">
                                        <dxe:CheckEdit
                                            Name="DefereUpdatesCheck"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            Content="{dxpgi:PivotGridStringId StringId=CustomizationFormDeferLayoutUpdate}"
                                            IsChecked="{Binding Path=Owner.PivotGrid.DeferredUpdates, Mode=TwoWay}" />
                                        <Button
                                            Name="Update"
                                            MinWidth="{DynamicResource {dxpgi:LWKey Appearance.FieldListUpdateButtonMinWidth}}"
                                            MinHeight="{DynamicResource {dxpgi:LWKey Appearance.FieldListUpdateButtonMinHeight}}"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Center"
                                            Content="{dxpgi:PivotGridStringId StringId=CustomizationFormUpdate}"
                                            IsEnabled="{Binding Path=Owner.PivotGrid.DeferredUpdates}">
                                        </Button>
                                    </dx:SimplePanel>
                                </dxpgi:FieldListLayoutSelector.DefereUpdatesContent>
                            </dxpgi:FieldListLayoutSelector>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ShowLayoutListGroup">
                                <VisualState x:Name="MouseEnter">
                                    <Storyboard>
                                        <DoubleAnimation BeginTime="00:00:00" Storyboard.TargetName="ShowLayoutList2" Storyboard.TargetProperty="Opacity" To="1" Duration="00:00:00.5" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseLeave">
                                    <Storyboard>
                                        <DoubleAnimation BeginTime="00:00:00" Storyboard.TargetName="ShowLayoutList2" Storyboard.TargetProperty="Opacity" To="0" Duration="00:00:00.5" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </dxb:BarManager>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="dx:DragManager.DropTargetFactory" Value="{dxpgi:PivotGridDropTargetFactory}" />
        <Setter Property="IsEnabled" Value="{Binding Owner.IsEnabled, RelativeSource={RelativeSource Self}}" />
    </Style>
    <Style x:Key="TreeViewFieldHeader.DefaultStyleBase" TargetType="{x:Type dxpgi:TreeViewFieldHeader}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxpgi:TreeViewFieldHeader}">
                    <dx:XPFContentControl
                        Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource treeViewFieldHeaderToFieldTreeViewContentConverter}}"
                        ContentTemplate="{Binding Content.ContentTemplate, RelativeSource={RelativeSource Self}}"
                        ContentTemplateSelector="{Binding Content.ContentTemplateSelector, RelativeSource={RelativeSource Self}}"
                        DataContext="{Binding Content, RelativeSource={RelativeSource Self}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="DragElementTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid HorizontalAlignment="Left" VerticalAlignment="Top">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <dx:DXBorder
                            MinWidth="60"
                            Padding="3,2,4,3"
                            Background="{DynamicResource {dxpgi:LWKey PivotGrid.FieldListBackgroundBrush}}"
                            BorderBrush="{DynamicResource {dxpgi:LWKey Appearance.PivotBorderBrush}}"
                            BorderThickness="1"
                            Opacity="0.5">
                            <dxpgi:DragTreeViewFieldHeader dxpgi:FieldHeadersBase.FieldListArea="{Binding Path=(dxpgi:FieldHeadersBase.FieldListArea), RelativeSource={RelativeSource TemplatedParent}}" Foreground="{Binding Content.Content, RelativeSource={RelativeSource TemplatedParent}, Converter={dxpgi:TreeFieldHeaderToDragHeaderForegroundConverter}}" Node="{Binding Content.Content.Node, RelativeSource={RelativeSource TemplatedParent}}" />
                        </dx:DXBorder>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsFocused, RelativeSource={RelativeSource FindAncestor, AncestorType=TreeViewItem}}" Value="True">
                <Setter Property="dx:SvgImageHelper.State" Value="Pressed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="FieldHeaders.DefaultStyleBase" TargetType="{x:Type dxpgi:FieldHeaders}">
        <Setter Property="dxpg:PivotGridPopupMenu.GridMenuType" Value="HeadersArea" />
        <Setter Property="dxb:BarManager.DXContextMenu" Value="{Binding Path=(dxpg:PivotGridControl.PivotGrid).GridMenu, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxpgi:FieldHeaders}">
                    <ContentControl x:Name="PART_Container" Template="{TemplateBinding ContentTemplate}">
                        <Grid Margin="{TemplateBinding Padding}">
                            <dxpgi:FieldHeadersPanel
                                x:Name="PART_Panel"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="{TemplateBinding HeadersVAlignment}"
                                dx:DragManager.DropTargetFactory="{dxpgi:PivotGridDropTargetFactory}"
                                Background="Transparent"
                                MeasureMode="{TemplateBinding MeasureMode}"
                                SkipWidth="{TemplateBinding LeftPixels}" />

                            <dx:SimplePanel VerticalAlignment="Center" Visibility="{Binding Path=IsCutted, ElementName=PART_Panel, Converter={StaticResource boolToVisibilityConverter}}">

                                <dx:XPFContentControl x:Name="CuttedContentText" HorizontalAlignment="Center">
                                    <TextBlock
                                        Padding="0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Foreground="{DynamicResource {dxpgi:LWKey Appearance.DataAreaCuttedTextForeground}}"
                                        Text="{dxpgi:PivotGridStringId StringId=PrintDesignerDataHeaders}"
                                        TextWrapping="NoWrap">
                                        <TextBlock.TextTrimming>CharacterEllipsis</TextBlock.TextTrimming>
                                    </TextBlock>
                                </dx:XPFContentControl>

                                <!-- BEGIN TOSLONLY REPLACE 'ActualWidth'ActualWidthCore' -->
                                <Line
                                    Height="2"
                                    Margin="0,0,0,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Bottom"
                                    Stroke="{DynamicResource {dxpgi:LWKey Appearance.DataAreaCuttedTextForeground}}"
                                    StrokeDashArray="1 1"
                                    StrokeThickness="2"
                                    X2="{Binding ActualWidth, ElementName=CuttedContentText}"
                                    Y1="1"
                                    Y2="1">
                                    <Line.RenderTransform>
                                        <ScaleTransform ScaleY="0.5" />
                                    </Line.RenderTransform>
                                </Line>
                                <!-- END TOSLONLY REPLACE 'ActualWidth'ActualWidthCore' -->

                            </dx:SimplePanel>
                            <dxe:TextEdit
                                x:Name="PART_EmptyText"
                                HorizontalAlignment="{TemplateBinding EmptyTextHAlignment}"
                                VerticalAlignment="{TemplateBinding EmptyTextVAlignment}"
                                EditMode="InplaceInactive"
                                EditValue="{Binding ActualArea, Converter={StaticResource fieldListActualAreaToAreaTextConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                                Foreground="{TemplateBinding Foreground}"
                                Style="{DynamicResource {dxpgi:LWKey FieldHeader.HeaderEmptyTextStyle}}"
                                Visibility="Collapsed" />
                            <dx:BestFitDecorator x:Name="PART_HeaderBestFitControlDecorator" Width="0" Height="0" />
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="EmptyStates">
                                <VisualState Name="NonEmpty" />
                                <VisualState Name="FullEmpty">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_Panel" Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <VerticalAlignment>Stretch</VerticalAlignment>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Empty">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_EmptyText" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_Panel" Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <VerticalAlignment>Stretch</VerticalAlignment>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </ContentControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource {dxpgi:LWKey Appearance.HeaderEmptyTextForeground}}" />
    </Style>
    <Style x:Key="FieldValueElement.DefaultStyleBase" TargetType="{x:Type dxpg:FieldValueElement}">
        <Setter Property="BorderBrush" Value="{DynamicResource {dxpgi:LWKey Appearance.FieldValueBorderBrush}}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="dxpg:PivotGridPopupMenu.GridMenuType" Value="FieldValue" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxpg:FieldValueElement">
                    <dx:SimplePanel x:Name="panel">
                        <Decorator Margin="{TemplateBinding BorderThickness}">
                            <dx:XPFContentControl x:Name="grid" Margin="{TemplateBinding Padding}" Template="{TemplateBinding ContentTemplate}" />
                        </Decorator>
                        <dx:DXThumb
                            Name="PART_VerticalGripper"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Bottom"
                            Cursor="SizeNS"
                            Style="{StaticResource ResizerStyle}"
                            Visibility="{TemplateBinding GripperYVisibility}" />
                        <dx:DXThumb
                            Name="PART_HorizontalGripper"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Stretch"
                            Cursor="SizeWE"
                            Style="{StaticResource ResizerStyle}"
                            Visibility="{TemplateBinding GripperXVisibility}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="IsTotal">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Total">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="grid" Storyboard.TargetProperty="VerticalAlignment">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <VerticalAlignment>Center</VerticalAlignment>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </dx:SimplePanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="PART_HorizontalGripper" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_VerticalGripper" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ValueItem.IsOthersRow, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="FontWeight" Value="Bold" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="LightweightFieldValueElement.DefaultStyleBase" BasedOn="{StaticResource FieldValueElement.DefaultStyleBase}" TargetType="{x:Type dxpg:LightweightFieldValueElement}">
        <Setter Property="MinHeight" Value="10" />
        <Style.Triggers>
            <Trigger Property="IsLightWeightMode" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type dxpg:LightweightFieldValueElement}">
                            <dx:SimplePanel DataContext="{x:Null}">
                                <Decorator Name="root" Margin="{Binding ValueItem.BorderThickness, RelativeSource={RelativeSource TemplatedParent}}">
                                    <Grid Name="grid" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <dxpgi:FieldValueExpandButton x:Name="PART_ExpandButton" Grid.Column="0" VerticalAlignment="Center" />
                                        <dxpgi:LightWeightFieldValueEditor x:Name="PART_Editor" Grid.Column="1" VerticalAlignment="Center" />
                                        <dxpgi:SortBySummaryButton
                                            x:Name="SortedByIndicator"
                                            Grid.Column="2"
                                            Margin="0,1,3,0"
                                            VerticalAlignment="Center" />
                                    </Grid>
                                </Decorator>
                                <dx:DXThumb
                                    Name="PART_VerticalGripper"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Bottom"
                                    Cursor="SizeNS"
                                    DataContext="{x:Null}"
                                    Style="{StaticResource ResizerStyle}"
                                    Visibility="{TemplateBinding GripperYVisibility}" />
                                <dx:DXThumb
                                    Name="PART_HorizontalGripper"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Stretch"
                                    Cursor="SizeWE"
                                    DataContext="{x:Null}"
                                    Style="{StaticResource ResizerStyle}"
                                    Visibility="{TemplateBinding GripperXVisibility}" />
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup Name="IsTotal">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="Total">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="root" Storyboard.TargetProperty="VerticalAlignment">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <VerticalAlignment>Center</VerticalAlignment>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </dx:SimplePanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="False">
                                    <Setter TargetName="PART_HorizontalGripper" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="PART_VerticalGripper" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="FieldValueExpandButton.DefaultStyleBase" TargetType="{x:Type dxpgi:FieldValueExpandButton}">
        <Setter Property="Margin" Value="{DynamicResource {dxpgi:LWKey ScrollableArea.ExpandButtonStyleRowMargin}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxpgi:FieldValueExpandButton}">
                    <dx:ToggleStateButton
                        ClickMode="Press"
                        Command="{TemplateBinding Command}"
                        CommandParameter="{TemplateBinding CommandParameter}"
                        IsChecked="{TemplateBinding IsChecked}"
                        Style="{DynamicResource {dxpgi:LWKey ScrollableArea.ExpandButtonStyle}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsColumnButton" Value="True">
                <Setter Property="Margin" Value="{DynamicResource {dxpgi:LWKey ScrollableArea.ExpandButtonStyleColumnMargin}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="SortBySummaryButton.DefaultStyleBase" TargetType="{x:Type dxpgi:SortBySummaryButton}">
        <Setter Property="Template" Value="{DynamicResource {dxpgi:LWKey ScrollableArea.SortedByIndicatorTemplate}}" />
    </Style>
    <Style x:Key="GroupCollapseButton.DefaultStyleBase" TargetType="{x:Type dxpgi:GroupCollapseButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxpgi:GroupCollapseButton}">
                    <dx:SimplePanel Name="panel" Background="Transparent" IsHitTestVisible="True">
                        <Path
                            x:Name="collapseItem"
                            Data="{DynamicResource {dxpgi:LWKey FieldHeader.GroupButtonCollapseItemPathData}}"
                            Style="{DynamicResource {dxpgi:LWKey FieldHeader.GroupButtonCollapseItemStyle}}"
                            Visibility="Visible" />
                        <Path
                            x:Name="expandItem"
                            Data="{DynamicResource {dxpgi:LWKey FieldHeader.GroupButtonExpandItemPathData}}"
                            Style="{DynamicResource {dxpgi:LWKey FieldHeader.GroupButtonExpandItemStyle}}"
                            Visibility="Collapsed" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="Buttons">
                                <VisualState x:Name="CollapseButton" />
                                <VisualState x:Name="ExpandButton">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Visibility="Collapsed" Storyboard.TargetName="collapseItem" Storyboard.TargetProperty="(UIElement.Visibility)" />
                                        <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Visibility="Visible" Storyboard.TargetName="expandItem" Storyboard.TargetProperty="(UIElement.Visibility)" />
                                        <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="2,0,-1,0" Storyboard.TargetName="panel" Storyboard.TargetProperty="Margin" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </dx:SimplePanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MinWidth" Value="8" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Margin" Value="-1,0,1,0" />
    </Style>
    <Style x:Key="PivotGridControl.DefaultStyleBase" TargetType="{x:Type dxpg:PivotGridControl}">
        <Setter Property="FieldHeaderDragIndicatorTemplate" Value="{DynamicResource {dxpgi:LWKey FieldHeader.DragIndicatorTemplate}}" />
        <Setter Property="FieldHeaderTemplate" Value="{DynamicResource {dxpgi:LWKey FieldHeader.ContentTemplate}}" />
        <Setter Property="FieldCellKpiTemplate" Value="{DynamicResource {dxpgi:LWKey ScrollableArea.FieldCellKpiTemplate}}" />
        <Setter Property="FieldHeaderListTemplate" Value="{DynamicResource {dxpgi:LWKey FieldHeader.ListContentTemplate}}" />
        <Setter Property="FieldCellTemplate" Value="{DynamicResource {dxpgi:LWKey ScrollableArea.DataAreaItemContentTemplate}}" />
        <Setter Property="FieldValueTemplate" Value="{DynamicResource {dxpgi:LWKey ScrollableArea.FieldAreaItemContentTemplate}}" />
        <Setter Property="FieldHeaderContentStyle" Value="{DynamicResource {dxpgi:LWKey FieldHeader.ContentStyle}}" />
        <Setter Property="FieldListTemplate" Value="{DynamicResource {dxpgi:LWKey PivotGrid.FieldListTemplate}}" />
        <Setter Property="ExcelFieldListTemplate" Value="{DynamicResource {dxpgi:LWKey PivotGrid.ExcelFieldListTemplate}}" />
        <Setter Property="FocusedCellBorderTemplate" Value="{DynamicResource {dxpgi:LWKey ScrollableArea.FocusedDataAreaItemTemplate}}" />
        <Setter Property="ResizingIndicatorTemplate" Value="{DynamicResource {dxpgi:LWKey PivotGrid.ResizingIndicatorTemplate}}" />
        <Setter Property="ScrollViewerTemplate" Value="{DynamicResource {dxpgi:LWKey PivotGrid.ScrollerTemplate}}" />
        <Setter Property="PrintFieldHeaderTemplate" Value="{DynamicResource {dxpgi:LWKey Printing.FieldHeaderTemplate}}" />
        <Setter Property="PrintFieldValueTemplate" Value="{DynamicResource {dxpgi:LWKey Printing.FieldValueTemplate}}" />
        <Setter Property="PrintFieldCellTemplate" Value="{DynamicResource {dxpgi:LWKey Printing.FieldCellTemplate}}" />
        <Setter Property="PrintFieldCellKpiTemplate" Value="{DynamicResource {dxpgi:LWKey Printing.FieldCellKpiTemplate}}" />
        <Setter Property="FilteringPanelStyle" Value="{DynamicResource {dxgt:LWKey FilteringPanel.ControlStyle}}" />

        <Setter Property="PrintCellTotalBackground" Value="#EBF5FA" />
        <Setter Property="PrintCellBackground" Value="#FFFFFF" />
        <Setter Property="PrintCellTotalForeground" Value="#000000" />
        <Setter Property="PrintCellForeground" Value="#000000" />
        <Setter Property="PrintValueTotalBackground" Value="#F0F0F0" />
        <Setter Property="PrintValueBackground" Value="#F0F0F0" />
        <Setter Property="PrintValueTotalForeground" Value="#000000" />
        <Setter Property="PrintValueForeground" Value="#000000" />
        <Setter Property="FieldWidth" Value="{Binding Path=FontSize, RelativeSource={RelativeSource Self}, Converter={dxpgi:FontSizeToFieldWidthConverter}}" />
        <Setter Property="FieldHeight">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource fontSizeToFieldHeightConverter}">
                    <!--SPECIFICTHEME TouchlineDark <MultiBinding.ConverterParameter>largeFontSize</MultiBinding.ConverterParameter> SPECIFICTHEME-->
                    <Binding Mode="OneWay" Path="FontSize" RelativeSource="{RelativeSource Self}" />
                    <Binding
                        Mode="OneWay"
                        Path="(dx:ThemeManager.IsTouchEnabled)"
                        RelativeSource="{RelativeSource Self}"
                        UpdateSourceTrigger="PropertyChanged" />
                    <Binding Mode="OneTime" RelativeSource="{RelativeSource Self}" />
                    <Binding Mode="OneTime" Source="{dxt:LWKey InplaceBaseEdit.TextEditPadding}" />
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="RowTreeOffset" Value="{Binding Path=FontSize, RelativeSource={RelativeSource Self}, Converter={dxpgi:FontSizeToRowTreeOffsetConverter}}" />

        <!-- TODO -->
        <Setter Property="CellBackground" Value="{DynamicResource {dxpgi:LWKey Appearance.CellValueBrush}}" />
        <Setter Property="CellTotalBackground" Value="{DynamicResource {dxpgi:LWKey Appearance.CellTotalBrush}}" />
        <Setter Property="CellTotalSelectedBackground" Value="{DynamicResource {dxpgi:LWKey Appearance.CellTotalSelectedBrush}}" />
        <Setter Property="CellSelectedBackground" Value="{DynamicResource {dxpgi:LWKey Appearance.CellSelectedBrush}}" />
        <Setter Property="ValueBackground" Value="{DynamicResource {dxpgi:LWKey Appearance.FieldValueBackground}}" />
        <Setter Property="ValueTotalBackground" Value="{DynamicResource {dxpgi:LWKey Appearance.FieldTotalBrush}}" />
        <Setter Property="ValueTotalSelectedBackground" Value="{DynamicResource {dxpgi:LWKey Appearance.ValueTotalSelectedBrush}}" />
        <Setter Property="ValueSelectedBackground" Value="{DynamicResource {dxpgi:LWKey Appearance.FieldValueSelectedBrush}}" />

        <Setter Property="CellForeground" Value="{DynamicResource {dxpgi:LWKey Appearance.CellForegroundBrush}}" />
        <Setter Property="CellTotalForeground" Value="{DynamicResource {dxpgi:LWKey Appearance.CellTotalForegroundBrush}}" />
        <Setter Property="CellTotalSelectedForeground" Value="{DynamicResource {dxpgi:LWKey Appearance.CellTotalSelectedForegroundBrush}}" />
        <Setter Property="CellSelectedForeground" Value="{DynamicResource {dxpgi:LWKey Appearance.CellSelectedForegroundBrush}}" />
        <Setter Property="ValueForeground" Value="{DynamicResource {dxpgi:LWKey Appearance.ValueForegroundBrush}}" />
        <Setter Property="ValueTotalForeground" Value="{DynamicResource {dxpgi:LWKey Appearance.ValueTotalForegroundBrush}}" />
        <Setter Property="ValueTotalSelectedForeground" Value="{DynamicResource {dxpgi:LWKey Appearance.ValueSelectedForegroundBrush}}" />

        <Setter Property="ValueSelectedForeground" Value="{DynamicResource {dxpgi:LWKey Appearance.ValueSelectedForegroundBrush}}" />
        <Setter Property="Background" Value="{DynamicResource {dxpgi:LWKey Appearance.PivotBackground}}" />
        <!-- END TODO -->

        <Setter Property="FieldHeaderTreeViewTemplate" Value="{DynamicResource {dxpgi:LWKey FieldHeader.FieldHeaderTreeViewTemplate}}" />

        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="Template" Value="{DynamicResource {dxpgi:LWKey PivotGrid.ThemeLoaderTemplate}}" />
        <Setter Property="dx:DragManager.DropTargetFactory" Value="{dxpgi:PivotGridDropTargetFactory}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />

        <Setter Property="PredefinedFormats" Value="{DynamicResource {dxt:LWKey ConditionalFormatting.PredefinedFormats}}" />
        <Setter Property="PredefinedColorScaleFormats" Value="{DynamicResource {dxt:LWKey ConditionalFormatting.PredefinedColorScaleFormats}}" />
        <Setter Property="PredefinedDataBarFormats" Value="{DynamicResource {dxt:LWKey ConditionalFormatting.PredefinedDataBarFormats}}" />
        <Setter Property="PredefinedIconSetFormats" Value="{DynamicResource {dxt:LWKey ConditionalFormatting.PredefinedIconSetFormats}}" />
        <Setter Property="FormatConditionDialogServiceTemplate" Value="{DynamicResource {dxt:LWKey ConditionalFormatting.ApplyFormatConditionDialogTemplate}}" />
        <Setter Property="ConditionalFormattingManagerServiceTemplate" Value="{DynamicResource {dxt:LWKey ConditionalFormatting.ConditionalFormattingManagerTemplate}}" />
        <Setter Property="ErrorPanelStyle" Value="{DynamicResource {dxpgi:LWKey PivotGrid.ErrorPanelStyle}}" />
        <Setter Property="FilterEditorTemplate" Value="{DynamicResource {dxgt:LWKey FilterEditor.FilterEditorTemplate}}" />
        <Setter Property="FilterEditorDialogServiceTemplate" Value="{DynamicResource {dxgt:LWKey FilterEditor.FilterEditorDialogServiceTemplate}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxpgi:LWKey Appearance.PivotBorderBrush}}" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>
    <Style x:Key="CellElement.DefaultStyleBase" TargetType="{x:Type dxpg:CellElement}">
        <Setter Property="BorderBrush" Value="{DynamicResource {dxpgi:LWKey Appearance.CellValueBorderBrush}}" />
        <Setter Property="dxpg:PivotGridPopupMenu.GridMenuType" Value="Cell" />
        <Setter Property="Template" Value="{DynamicResource {dxpgi:LWKey ScrollableArea.DataAreaItemTemplate}}" />
    </Style>
    <Style x:Key="LightweightCellElement.DefaultStyleBase" BasedOn="{StaticResource CellElement.DefaultStyleBase}" TargetType="{x:Type dxpg:LightweightCellElement}">
        <Style.Triggers>
            <Trigger Property="IsLightWeightMode" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type dxpg:LightweightCellElement}">
                            <dxpgi:LightweightCellEditor x:Name="PART_Editor" VerticalAlignment="Center" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="KpiImagePresenter.DefaultStyleBase" TargetType="{x:Type dxpgi:KpiImagePresenter}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxpgi:KpiImagePresenter}">
                    <Image Width="15" Height="15" Source="{TemplateBinding ImageSource}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="InnerGroupHeader.DefaultStyleBase" BasedOn="{StaticResource PivotHeaderBaseStyle}" TargetType="{x:Type dxpgi:InnerGroupHeader}">
        <Setter Property="Padding" Value="{Binding Path=HeaderPosition, Converter={StaticResource groupedHeaderPositionToPaddingConverter}, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Template" Value="{DynamicResource {dxpgi:LWKey FieldHeader.InnerGroupHeaderTemplate}}" />
    </Style>
    <Style x:Key="FieldHeader.DefaultStyleBase" BasedOn="{StaticResource PivotHeaderBaseStyle}" TargetType="{x:Type dxpgi:FieldHeader}">
        <Setter Property="Padding">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource nongroupedHeaderPositionToPaddingConverter}">
                    <Binding Path="HeaderPosition" RelativeSource="{RelativeSource Self}" />
                    <Binding Path="Area" />
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="Template" Value="{DynamicResource {dxpgi:LWKey FieldHeader.FieldHeaderTemplate}}" />
    </Style>
    <Style x:Key="GroupHeader.DefaultStyleBase" BasedOn="{StaticResource PivotGroupHeaderBaseStyle}" TargetType="{x:Type dxpgi:GroupHeader}" />
    <Style x:Key="DragGroupHeader.DefaultStyleBase" BasedOn="{StaticResource PivotGroupHeaderBaseStyle}" TargetType="{x:Type dxpgi:DragGroupHeader}">
        <Setter Property="Opacity" Value="0.5" />
        <Setter Property="dxb:BarManager.DXContextMenu" Value="{x:Null}" />
        <Setter Property="dxpgi:FieldHeadersBase.FieldListArea" Value="{Binding Path=(dxpgi:FieldHeadersBase.FieldListArea)}" />
        <Setter Property="ToolTipService.ToolTip" Value="{x:Null}" />
    </Style>
    <Style x:Key="DragFieldHeader.DefaultStyleBase" BasedOn="{StaticResource PivotHeaderBaseStyle}" TargetType="{x:Type dxpgi:DragFieldHeader}">
        <Setter Property="Padding" Value="0" />
        <Setter Property="Opacity" Value="0.5" />
        <Setter Property="dxb:BarManager.DXContextMenu" Value="{x:Null}" />
        <Setter Property="ToolTipService.ToolTip" Value="{x:Null}" />
        <Setter Property="Template" Value="{DynamicResource {dxpgi:LWKey FieldHeader.FieldHeaderTemplate}}" />
        <Setter Property="BestFitWCorrection" Value="7" />
    </Style>
    <Style x:Key="DragInnerGroupHeader.DefaultStyleBase" BasedOn="{StaticResource PivotHeaderBaseStyle}" TargetType="{x:Type dxpgi:DragInnerGroupHeader}">
        <Setter Property="Padding" Value="0" />
        <Setter Property="Opacity" Value="0.5" />
        <Setter Property="dxb:BarManager.DXContextMenu" Value="{x:Null}" />
        <Setter Property="ToolTipService.ToolTip" Value="{x:Null}" />
        <Setter Property="Template" Value="{DynamicResource {dxpgi:LWKey FieldHeader.InnerGroupHeaderTemplate}}" />
    </Style>
    <Style x:Key="PivotPrintPageControl.DefaultStyleBase" TargetType="{x:Type dxpgp:PivotPrintPageControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxpgp:PivotPrintPageControl}">
                    <StackPanel MinHeight="{Binding Height, Mode=OneTime}" Orientation="Vertical">
                        <StackPanel MinWidth="{Binding Width, Mode=OneTime}" Orientation="Horizontal">

                            <StackPanel Orientation="Vertical">

                                <dxpgp:PivotPrintHeaderArea
                                    x:Name="filters"
                                    MaxWidth="{Binding Width, Converter={StaticResource minWidthToMaxWidthConverter}, Mode=OneTime}"
                                    Margin="0,0,0,3"
                                    HorizontalAlignment="Left"
                                    Area="FilterArea"
                                    PivotGrid="{Binding PivotGrid, Mode=OneTime}"
                                    Visibility="{Binding FilterHeadersVisible, Converter={StaticResource boolToVisibilityConverter}, Mode=OneTime}" />

                                <Grid x:Name="mainGrid" ShowGridLines="True">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <dxpgp:PivotPrintHeaderArea
                                        Grid.Row="0"
                                        Grid.Column="0"
                                        MaxWidth="{Binding Path=RowValuesWidth, Mode=OneTime}"
                                        VerticalAlignment="Top"
                                        Area="DataArea"
                                        HasBottomBorder="{Binding ShowDataAreaHeadersBottomBorder, Mode=OneTime}"
                                        PivotGrid="{Binding PivotGrid, Mode=OneTime}"
                                        Visibility="{Binding DataHeadersVisible, Converter={StaticResource boolToVisibilityConverter}, Mode=OneTime}" />


                                    <dxpgp:PivotPrintHeaderArea
                                        Grid.Row="1"
                                        Grid.Column="0"
                                        MaxWidth="{Binding Path=RowValuesWidth, Mode=OneTime}"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Bottom"
                                        HorizontalContentAlignment="Left"
                                        Area="RowArea"
                                        HasBottomBorder="False"
                                        HasTopBorder="{Binding ShowRowAreaHeadersTopBorder, Mode=OneTime}"
                                        PivotGrid="{Binding PivotGrid, Mode=OneTime}"
                                        Visibility="{Binding RowHeadersVisible, Converter={StaticResource boolToVisibilityConverter}, Mode=OneTime}" />

                                    <dxpgp:PivotPrintFieldValues
                                        x:Name="rowFieldValues"
                                        Grid.Row="2"
                                        Grid.Column="0"
                                        HorizontalAlignment="Left"
                                        dxpg:PivotGridControl.PivotGrid="{Binding PivotGrid, Mode=OneTime}"
                                        IsChild="True"
                                        IsColumn="False"
                                        PrintItems="{Binding RowItems, Mode=OneTime}" />

                                    <Grid
                                        Grid.Row="0"
                                        Grid.RowSpan="2"
                                        Grid.Column="1"
                                        VerticalAlignment="Stretch">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <dxpgp:PivotPrintHeaderArea
                                            VerticalAlignment="Bottom"
                                            Area="ColumnArea"
                                            HasBottomBorder="{Binding ShowColumnAreaHeadersBottomBorder, Mode=OneTime}"
                                            PivotGrid="{Binding PivotGrid, Mode=OneTime}"
                                            Visibility="{Binding ColumnHeadersVisible, Converter={StaticResource boolToVisibilityConverter}, Mode=OneTime}" />
                                        <dxpgp:PivotPrintFieldValues
                                            x:Name="columnFieldValues"
                                            Grid.Row="1"
                                            VerticalAlignment="Bottom"
                                            dxpg:PivotGridControl.PivotGrid="{Binding PivotGrid, Mode=OneTime}"
                                            HasTopBorder="{Binding ShowColumnAreaValuesTopBorder, Mode=OneTime}"
                                            IsChild="True"
                                            IsColumn="True"
                                            PrintItems="{Binding ColumnItems, Mode=OneTime}"
                                            Visibility="{Binding ShowColumnFieldValues, Mode=OneTime}" />
                                    </Grid>

                                    <dxpgp:PivotPrintCells
                                        Grid.Row="2"
                                        Grid.Column="1"
                                        dxpg:PivotGridControl.PivotGrid="{Binding PivotGrid, Mode=OneTime}"
                                        IsChild="True" />

                                </Grid>

                            </StackPanel>
                        </StackPanel>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PrintFieldHeader.DefaultStyleBase" TargetType="{x:Type dxpgp:PrintFieldHeader}">
        <Setter Property="dxpgp:PrintFieldHeader.Field" Value="{Binding}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxpgp:PrintFieldHeader}">
                    <dxpgp:PrintHeaderContentPresenter ContentTemplate="{Binding Path=Field.ActualPrintHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplateSelector="{Binding Path=Field.ActualPrintHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}">
                        <dxpgp:PrintHeaderContentPresenter.Content>
                            <Binding Converter="{StaticResource pivotGridFieldDataConverter}" Mode="OneWay" RelativeSource="{RelativeSource TemplatedParent}" />
                        </dxpgp:PrintHeaderContentPresenter.Content>

                    </dxpgp:PrintHeaderContentPresenter>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PrintGroupHeader.DefaultStyleBase" TargetType="{x:Type dxpgp:PrintGroupHeader}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxpgp:PrintGroupHeader}">
                    <ContentControl Name="PART_HeaderButton">
                        <Grid x:Name="PART_Panel" Background="Transparent" />
                    </ContentControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PrintGroupCollapseButton.DefaultStyleBase" TargetType="{x:Type dxpgp:PrintGroupCollapseButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxpgp:PrintGroupCollapseButton}">
                    <dx:DXContentPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PivotPrintHeaderArea.DefaultStyleBase" TargetType="{x:Type dxpgp:PivotPrintHeaderArea}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxpgp:PivotPrintHeaderArea}">
                    <ContentControl x:Name="PART_Container">
                        <dxpgi:FieldHeadersPanel
                            x:Name="PART_Panel"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="{TemplateBinding HeadersVAlignment}"
                            Background="Transparent" />
                    </ContentControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TextExporter.DefaultStyleBase" TargetType="{x:Type dxpgp:TextExporter}">
        <Setter Property="BorderBrush" Value="#808080" />
        <Setter Property="Padding" Value="4,2,4,2" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <dx:AgStyleStorage.IsDefaultTheme>
        <Rectangle />
    </dx:AgStyleStorage.IsDefaultTheme>
    <!--#endregion DEFAULT STYLES-->
</ResourceDictionary>