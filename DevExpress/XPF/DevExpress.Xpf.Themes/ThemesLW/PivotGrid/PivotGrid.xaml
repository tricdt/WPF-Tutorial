<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:cs="colorscheme_ignorable_uri"
    xmlns:dxpgi="http://schemas.devexpress.com/winfx/2008/xaml/pivotgrid/internal"
    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
    xmlns:dxpg="http://schemas.devexpress.com/winfx/2008/xaml/pivotgrid"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    mc:Ignorable="cs">

    <ResourceDictionary.MergedDictionaries>
        <dxi:ThemeResourceDictionary Path="PivotGrid/_{ThemeCategory}.xaml" />
        <dxi:ThemeResourceDictionary Path="PivotGrid\Generic.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\PivotGrid\Base\FieldHeaders\Area.xaml-->
    <!-- General -->

    <Style x:Key="{dxpgi:LWKey Appearance.EmptyAreaHighlighterStyle}" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{dx:LWBrush 'Brush.HoverBackground, Win11=Brush.ListItem.HoverBackground'}" />
    </Style>

    <!-- Area -->

    <ControlTemplate x:Key="{dxpgi:LWKey FieldHeaders.DataAreaContentTemplate}" TargetType="{x:Type ContentControl}">
        <dx:DXBorder
            x:Name="Root"
            Background="Transparent"
            ClipToBounds="True"
            Padding="2">
            <Grid>
                <dx:DXBorder
                    x:Name="Separator"
                    Background="{DynamicResource {dxpgi:LWKey Appearance.AreaSeparatorBrush}}"
                    Height="1"
                    VerticalAlignment="Bottom" />
                <dx:SimplePanel>
                    <dx:DXBorder x:Name="Highlighter" Opacity="0" Style="{DynamicResource {dxpgi:LWKey Appearance.EmptyAreaHighlighterStyle}}" />
                    <ContentPresenter />
                </dx:SimplePanel>
            </Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="EmptyStates">
                    <VisualState Name="Empty" />
                    <VisualState Name="NonEmpty">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Separator" Storyboard.TargetProperty="Opacity" To="0" />
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Visibility="Collapsed" Storyboard.TargetName="Highlighter" Storyboard.TargetProperty="Visibility" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="DragIndicators">
                    <VisualState Name="DragLeave">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Highlighter" Storyboard.TargetProperty="Opacity" To="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="DragOver">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Highlighter" Storyboard.TargetProperty="Opacity" To="0.62" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </dx:DXBorder>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxpgi:LWKey FieldHeaders.ColumnAreaContentTemplate}" TargetType="{x:Type ContentControl}">
        <dx:DXBorder Background="Transparent" ClipToBounds="True" Padding="0,2,2,2">
            <dx:SimplePanel>
                <dx:DXBorder x:Name="Highlighter" Opacity="0" Style="{DynamicResource {dxpgi:LWKey Appearance.EmptyAreaHighlighterStyle}}" />
                <ContentPresenter />
            </dx:SimplePanel>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="EmptyStates">
                    <VisualState Name="Empty" />
                    <VisualState Name="NonEmpty">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Visibility="Collapsed" Storyboard.TargetName="Highlighter" Storyboard.TargetProperty="Visibility" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="DragIndicators">
                    <VisualState Name="DragLeave">
                        <Storyboard>
                            <DoubleAnimation Duration="00:00:00.5" Storyboard.TargetName="Highlighter" Storyboard.TargetProperty="Opacity" To="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="DragOver">
                        <Storyboard>
                            <DoubleAnimation Duration="00:00:00.2" Storyboard.TargetName="Highlighter" Storyboard.TargetProperty="Opacity" To="0.62" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </dx:DXBorder>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxpgi:LWKey FieldHeaders.RowAreaContentTemplate}" TargetType="{x:Type ContentControl}">
        <dx:DXBorder Background="Transparent" ClipToBounds="True" Padding="2,2,2,3">
            <dx:SimplePanel>
                <dx:DXBorder x:Name="Highlighter" Opacity="0" Style="{DynamicResource {dxpgi:LWKey Appearance.EmptyAreaHighlighterStyle}}" />
                <ContentPresenter />
            </dx:SimplePanel>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="EmptyStates">
                    <VisualState Name="Empty" />
                    <VisualState Name="NonEmpty">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Visibility="Collapsed" Storyboard.TargetName="Highlighter" Storyboard.TargetProperty="Visibility" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="DragIndicators">
                    <VisualState Name="DragLeave">
                        <Storyboard>
                            <DoubleAnimation Duration="00:00:00.5" Storyboard.TargetName="Highlighter" Storyboard.TargetProperty="Opacity" To="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="DragOver">
                        <Storyboard>
                            <DoubleAnimation Duration="00:00:00.2" Storyboard.TargetName="Highlighter" Storyboard.TargetProperty="Opacity" To="0.62" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </dx:DXBorder>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxpgi:LWKey FieldHeaders.FilterAreaContentTemplate}" TargetType="{x:Type ContentControl}">
        <dx:DXBorder
            x:Name="Root"
            Background="Transparent"
            ClipToBounds="True"
            Padding="2">
            <Grid>
                <dx:DXBorder
                    x:Name="Separator"
                    Background="{DynamicResource {dxpgi:LWKey Appearance.AreaSeparatorBrush}}"
                    Height="1"
                    VerticalAlignment="Bottom" />
                <dx:SimplePanel>
                    <dx:DXBorder x:Name="Highlighter" Opacity="0" Style="{DynamicResource {dxpgi:LWKey Appearance.EmptyAreaHighlighterStyle}}" />
                    <ContentPresenter />
                </dx:SimplePanel>
            </Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="EmptyStates">
                    <VisualState Name="Empty" />
                    <VisualState Name="NonEmpty">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Separator" Storyboard.TargetProperty="Opacity" To="0" />
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Visibility="Collapsed" Storyboard.TargetName="Highlighter" Storyboard.TargetProperty="Visibility" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="DragIndicators">
                    <VisualState Name="DragLeave">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Highlighter" Storyboard.TargetProperty="Opacity" To="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="DragOver">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Highlighter" Storyboard.TargetProperty="Opacity" To="0.62" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </dx:DXBorder>
    </ControlTemplate>

    <Style x:Key="{dxpgi:LWKey FieldHeaders.DataAreaStyle}" TargetType="dxpgi:FieldHeaders">
        <Setter Property="EmptyTextHAlignment" Value="Center" />
        <Setter Property="EmptyTextVAlignment" Value="Center" />
        <Setter Property="HeadersVAlignment" Value="Top" />
    </Style>

    <Style x:Key="{dxpgi:LWKey FieldHeaders.ColumnAreaStyle}" TargetType="dxpgi:FieldHeaders">
        <Setter Property="EmptyTextHAlignment" Value="Center" />
        <Setter Property="EmptyTextVAlignment" Value="Center" />
        <Setter Property="HeadersVAlignment" Value="Bottom" />
    </Style>

    <Style x:Key="{dxpgi:LWKey FieldHeaders.RowAreaStyle}" TargetType="dxpgi:FieldHeaders">
        <Setter Property="EmptyTextHAlignment" Value="Center" />
        <Setter Property="EmptyTextVAlignment" Value="Center" />
        <Setter Property="HeadersVAlignment" Value="Bottom" />
    </Style>

    <Style x:Key="{dxpgi:LWKey FieldHeaders.FilterAreaStyle}" TargetType="dxpgi:FieldHeaders">
        <Setter Property="EmptyTextHAlignment" Value="Center" />
        <Setter Property="EmptyTextVAlignment" Value="Center" />
        <Setter Property="HeadersVAlignment" Value="Center" />
    </Style>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\PivotGrid\Base\FieldHeaders\Area.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\PivotGrid\Base\FieldHeaders\Content.xaml-->
    <!-- General -->

    <Style x:Key="{dxpgi:LWKey FieldHeader.ContentStyle}" TargetType="{x:Type TextBlock}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\PivotGrid\Base\FieldHeaders\Content.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\PivotGrid\Base\FieldHeaders\DragIndicator.xaml-->
    <!-- General -->

    <Style x:Key="{dxpgi:LWKey Appearance.FieldListDragOverBorderStyle}" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Border}" />
        <Setter Property="Opacity" Value="1" />
    </Style>

    <!-- Drag Indicator -->

    <DataTemplate x:Key="{dxpgi:LWKey FieldHeader.DragIndicatorTemplate}">
        <dx:DXDockPanel Name="Content" SnapsToDevicePixels="True">
            <Grid
                x:Name="GlyphUp"
                dx:DXDockPanel.Dock="Top"
                Height="12"
                HorizontalAlignment="Center"
                RenderTransformOrigin="0.5,0.5"
                VerticalAlignment="Top"
                Width="12">
                <Grid.RenderTransform>
                    <TranslateTransform x:Name="UpTransform" X="1" Y="0" />
                </Grid.RenderTransform>
                <Path
                    Data="F1 M 12,4L 6,10L 0,4L 4,4L 4,0L 8,0L 8,4L 12,4 Z "
                    Fill="{dx:LWBrush 'Brush.Focused, Office2019Black=Brush.Foreground, Office2019Colorful=Brush.Foreground, Office2019HighContrast=Brush.Foreground, Win11=Brush.Accent'}"
                    Height="10"
                    Stretch="Fill"
                    Width="12" />
            </Grid>
            <Grid
                x:Name="GlyphDown"
                dx:DXDockPanel.Dock="Bottom"
                Height="12"
                HorizontalAlignment="Center"
                RenderTransformOrigin="0.5,0.5"
                VerticalAlignment="Bottom"
                Width="12">
                <Grid.RenderTransform>
                    <TranslateTransform x:Name="DownTransform" X="1" Y="0" />
                </Grid.RenderTransform>
                <Path
                    Data="F1 M 12,6L 6,0L 0,6L 4,6L 4,10L 8,10L 8,6L 12,6 Z "
                    Fill="{dx:LWBrush 'Brush.Focused, Office2019Black=Brush.Foreground, Office2019Colorful=Brush.Foreground, Office2019HighContrast=Brush.Foreground, Win11=Brush.Accent'}"
                    Height="10"
                    Stretch="Fill"
                    Width="12" />
            </Grid>
            <Grid Height="{Binding Path=(dxpg:PivotGridControl.FieldHeaderDragIndicatorSize), RelativeSource={RelativeSource TemplatedParent}}" />
            <dx:DXDockPanel.Triggers>
                <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                RepeatBehavior="Forever"
                                Storyboard.TargetName="UpTransform"
                                Storyboard.TargetProperty="Y">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                <SplineDoubleKeyFrame KeySpline="0,0,0.5,1" KeyTime="00:00:00.5" Value="3.5" />
                                <SplineDoubleKeyFrame KeySpline="0,0,0.5,1" KeyTime="00:00:01" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                RepeatBehavior="Forever"
                                Storyboard.TargetName="DownTransform"
                                Storyboard.TargetProperty="Y">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.5" Value="-3.5" />
                                <SplineDoubleKeyFrame KeyTime="00:00:01" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </dx:DXDockPanel.Triggers>
            <dx:DXDockPanel.RenderTransform>
                <TranslateTransform X="-7" Y="-14" />
            </dx:DXDockPanel.RenderTransform>
        </dx:DXDockPanel>
    </DataTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\PivotGrid\Base\FieldHeaders\DragIndicator.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\PivotGrid\Base\FieldHeaders\EmptyHeader.xaml-->
    <!-- General -->

    <Style x:Key="{dxpgi:LWKey FieldHeader.HeaderEmptyTextStyle}" TargetType="{x:Type dxe:TextEdit}">
        <Setter Property="Margin" Value="5" />
    </Style>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\PivotGrid\Base\FieldHeaders\EmptyHeader.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\PivotGrid\Base\FieldHeaders\GroupButton.xaml-->
    <!-- General -->

    <Style x:Key="{dxpgi:LWKey FieldHeader.GroupButtonExpandItemStyle}" BasedOn="{StaticResource UIShape.Right}" TargetType="{x:Type Path}">
        <Setter Property="Fill" Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
        <Setter Property="Opacity" Value="0.62" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Margin" Value="14" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxpgi:LWKey FieldHeader.GroupButtonCollapseItemStyle}" BasedOn="{StaticResource UIShape.Left}" TargetType="{x:Type Path}">
        <Setter Property="Fill" Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" />
        <Setter Property="Opacity" Value="0.62" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Margin" Value="14" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\PivotGrid\Base\FieldHeaders\GroupButton.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\PivotGrid\Base\FieldHeaders\SortArrow.xaml-->
    <!-- General -->

    <Style x:Key="{dxpgi:LWKey FieldHeader.SortArrowUpStyle}" TargetType="{x:Type Control}">
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Margin" Value="2,0,-1,0" />
        <Setter Property="Width" Value="12" />
    </Style>
    <Style x:Key="{dxpgi:LWKey FieldHeader.SortArrowDownStyle}" TargetType="{x:Type Control}">
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Margin" Value="2,0,-1,0" />
        <Setter Property="Width" Value="12" />
    </Style>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\PivotGrid\Base\FieldHeaders\SortArrow.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\PivotGrid\Base\PivotGridControl.xaml-->
    <Thickness x:Key="{dxpgi:LWKey PivotGrid.FieldListSearchMargin}">0,4,0,4</Thickness>
    <Thickness x:Key="{dxpgi:LWKey PivotGrid.InnerFieldListPadding}">0</Thickness>
    <Thickness x:Key="{dxpgi:LWKey PivotGrid.FieldListSearchBorderThickness}">0</Thickness>
    <Thickness x:Key="{dxpgi:LWKey PivotGrid.InnerFieldListBorderThickness}">1</Thickness>


    <!-- General -->

    <Style x:Key="{dxpgi:LWKey PivotGrid.BorderTemplate}" TargetType="{x:Type dxpgi:DXPivotGridThemesLoader}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxpgi:DXPivotGridThemesLoader}">
                    <Grid>
                        <dx:DXBorder
                            x:Name="Root"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter />
                        </dx:DXBorder>
                        <dx:WaitIndicator DeferedVisibility="{TemplateBinding ShowIndicator}" />
                        <dxe:FlyoutControl Content="{TemplateBinding ErrorPanelText}" IsOpen="{Binding ShowErrorPanel, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" Style="{TemplateBinding ErrorPanelStyle}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="ShowBorder">
                                <VisualState Name="ShownBorder" />
                                <VisualState Name="HidenBorder">
                                    <Storyboard>
                                        <ThicknessAnimation
                                            Duration="0"
                                            Storyboard.TargetName="Root"
                                            Storyboard.TargetProperty="BorderThickness"
                                            To="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\PivotGrid\Base\PivotGridControl.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\PivotGrid\Base\ScrollableArea.xaml-->
    <Thickness x:Key="{dxpgi:LWKey ScrollableArea.ExpandButtonStyleRowMargin}">3,0,0,0</Thickness>
    <Thickness x:Key="{dxpgi:LWKey ScrollableArea.ExpandButtonStyleColumnMargin}">3,2,0,0</Thickness>


    <!-- General -->

    <ControlTemplate x:Key="{dxpgi:LWKey ScrollableArea.SortedByIndicatorTemplate}">
        <Grid x:Name="Root" Background="Transparent">
            <Grid Margin="2">
                <Path
                    x:Name="Ascending"
                    Fill="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ForegroundDark, Win11=Brush.Foreground.Primary'}"
                    Opacity="0"
                    Style="{StaticResource UIShape.Sort.Ascending}" />
                <Path
                    x:Name="Descending"
                    Fill="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ForegroundDark, Win11=Brush.Foreground.Primary'}"
                    Opacity="0"
                    Style="{StaticResource UIShape.Sort.Descending}" />
                <Path
                    x:Name="NotSorted"
                    Fill="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ForegroundDark, Win11=Brush.Foreground.Primary'}"
                    Opacity="0"
                    Style="{StaticResource UIShape.Sort.Intermediate}" />
            </Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="Ascending" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.HoverForeground, Office2019Black=Color.Foreground, Office2019HighContrast=Color.HoverBackground, VS2019Dark=Color.Focused, VS2019Light=Color.Focused, Win11=Color.Foreground.Primary'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="Descending" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.HoverForeground, Office2019Black=Color.Foreground, Office2019HighContrast=Color.HoverBackground, VS2019Dark=Color.Focused, VS2019Light=Color.Focused, Win11=Color.Foreground.Primary'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="NotSorted" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.HoverForeground, Office2019Black=Color.Foreground, Office2019HighContrast=Color.HoverBackground, VS2019Dark=Color.Focused, VS2019Light=Color.Focused, Win11=Color.Foreground.Primary'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="Ascending" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.SelectionForeground, Office2019Black=Color.Foreground, Office2019Colorful=Color.HoverForeground, Office2019HighContrast=Color.HoverForeground, VS2019Blue=Color.HoverForeground, VS2019Dark=Color.Focused, VS2019Light=Color.Focused, Win11=Color.Foreground.Primary'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="Descending" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.SelectionForeground, Office2019Black=Color.Foreground, Office2019Colorful=Color.HoverForeground, Office2019HighContrast=Color.HoverForeground, VS2019Blue=Color.HoverForeground, VS2019Dark=Color.Focused, VS2019Light=Color.Focused, Win11=Color.Foreground.Primary'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="NotSorted" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.SelectionForeground, Office2019Black=Color.Foreground, Office2019Colorful=Color.HoverForeground, Office2019HighContrast=Color.HoverForeground, VS2019Blue=Color.HoverForeground, VS2019Dark=Color.Focused, VS2019Light=Color.Focused, Win11=Color.Foreground.Primary'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="Sorted">
                    <VisualState x:Name="NotSorted">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="NotSorted" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="AscSorted">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Ascending" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="DescSorted">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Descending" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" TargetName="Root" Value="44" />
                <Setter Property="Width" TargetName="Root" Value="44" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Column -->

    <ControlTemplate x:Key="{dxpgi:LWKey ScrollableArea.ColumnAreaItemTemplate}" TargetType="{x:Type ContentControl}">
        <Grid x:Name="Root" MinHeight="12" VerticalAlignment="{Binding Path=PivotGrid.ColumnFieldValuesAlignment}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <dxpgi:FieldValueExpandButton
                x:Name="expandButton"
                Grid.Column="0"
                ValueItem="{Binding}"
                VerticalAlignment="Center" />
            <dxpgi:FieldDataValueContentPresenter x:Name="valueContent" Grid.Column="1" Content="{Binding}" />
            <dxpgi:SortBySummaryButton
                x:Name="SortedByIndicator"
                Grid.Column="2"
                Margin="0,1,3,0"
                Template="{DynamicResource {dxpgi:LWKey ScrollableArea.SortedByIndicatorTemplate}}"
                ValueItem="{Binding}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" TargetName="Root" Value="42" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxpgi:LWKey PivotGrid.ColumnValuesContentTemplate}" TargetType="{x:Type ContentControl}">
        <dx:DXBorder
            x:Name="columnBorder"
            Background="{TemplateBinding Background}"
            BorderBrush="{StaticResource {dxpgi:LWKey Appearance.FieldValueBorderBrush}}"
            BorderThickness="1,1,0,0">
            <dx:DXBorder x:Name="innerBorder" ClipToBounds="True">
                <ContentPresenter x:Name="Content" Margin="0,-1,0,0" VerticalAlignment="Bottom" />
            </dx:DXBorder>
        </dx:DXBorder>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding ShowColumnsBorder, RelativeSource={RelativeSource AncestorType=dxpg:PivotGridControl}}" Value="False">
                <Setter Property="BorderThickness" TargetName="columnBorder" Value="1,0,0,0" />
            </DataTrigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" TargetName="Content" Value="42" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Row -->

    <ControlTemplate x:Key="{dxpgi:LWKey ScrollableArea.RowAreaItemTemplate}" TargetType="{x:Type ContentControl}">
        <Grid x:Name="Root" MinHeight="12" VerticalAlignment="{Binding Path=PivotGrid.RowFieldValuesAlignment}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <dxpgi:FieldValueExpandButton
                x:Name="expandButton"
                Grid.Column="0"
                ValueItem="{Binding}"
                VerticalAlignment="Center" />
            <dxpgi:FieldDataValueContentPresenter x:Name="valueContent" Grid.Column="1" Content="{Binding}" />
            <dxpgi:SortBySummaryButton
                x:Name="SortedByIndicator"
                Grid.Column="2"
                Margin="0,1,3,0"
                Template="{DynamicResource {dxpgi:LWKey ScrollableArea.SortedByIndicatorTemplate}}"
                ValueItem="{Binding}"
                VerticalAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" TargetName="Root" Value="42" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxpgi:LWKey PivotGrid.RowValuesContentTemplate}" TargetType="{x:Type ContentControl}">
        <dx:DXBorder Background="{TemplateBinding Background}" BorderBrush="{StaticResource {dxpgi:LWKey Appearance.FieldValueBorderBrush}}" BorderThickness="0,1,0,0">
            <dx:DXBorder ClipToBounds="True">
                <ContentPresenter Margin="0,-1,0,0" />
            </dx:DXBorder>
        </dx:DXBorder>
    </ControlTemplate>

    <!-- Cell -->

    <ControlTemplate x:Key="{dxpgi:LWKey PivotGrid.CellsContentTemplate}" TargetType="{x:Type ContentControl}">
        <dx:DXBorder ClipToBounds="True">
            <ContentPresenter />
        </dx:DXBorder>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxpgi:LWKey PivotGrid.CellsTemplate}" TargetType="{x:Type ContentControl}">
        <ContentPresenter />
    </ControlTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\PivotGrid\Base\ScrollableArea.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\PivotGrid\Base\FieldHeaders.xaml-->
    <!-- Generic -->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\PivotGrid\Base\FieldHeaders.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\PivotGrid\Base\ExpandButtons.xaml-->
    <!-- General -->

    <ControlTemplate x:Key="{dxpgi:LWKey ScrollableArea.ExpandButtonTemplate}" TargetType="{x:Type dx:ToggleStateButton}">
        <Grid x:Name="Root" Background="Transparent">
            <Path x:Name="Collapsed" Fill="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ForegroundDark, Win11=Brush.Foreground.Primary'}" Style="{StaticResource UIShape.Expand}" />
            <Path
                x:Name="Expanded"
                Fill="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ForegroundDark, Win11=Brush.Foreground.Primary'}"
                Opacity="0"
                Style="{StaticResource UIShape.Collapse}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Opacity" TargetName="Collapsed" Value="0" />
                <Setter Property="Opacity" TargetName="Expanded" Value="1" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill" TargetName="Collapsed" Value="{dx:LWBrush 'Brush.HoverForeground, Office2019Black=Brush.Foreground, Office2019HighContrast=Brush.HoverBackground, VS2019Dark=Brush.Focused, VS2019Light=Brush.Focused, Win11=Brush.Foreground.Primary'}" />
                <Setter Property="Fill" TargetName="Expanded" Value="{dx:LWBrush 'Brush.HoverForeground, Office2019Black=Brush.Foreground, Office2019HighContrast=Brush.HoverBackground, VS2019Dark=Brush.Focused, VS2019Light=Brush.Focused, Win11=Brush.Foreground.Primary'}" />
                <Setter Property="Opacity" TargetName="Root" Value="1" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Fill" TargetName="Collapsed" Value="{dx:LWBrush 'Brush.SelectionForeground, Office2019Black=Brush.Foreground, Office2019HighContrast=Brush.SelectionBackground, VS2019Dark=Brush.Backstage.Focused, Win11=Brush.Foreground.Primary'}" />
                <Setter Property="Fill" TargetName="Expanded" Value="{dx:LWBrush 'Brush.SelectionForeground, Office2019Black=Brush.Foreground, Office2019HighContrast=Brush.SelectionBackground, VS2019Dark=Brush.Backstage.Focused, Win11=Brush.Foreground.Primary'}" />
                <Setter Property="Opacity" TargetName="Root" Value="1" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{dxpgi:LWKey ScrollableArea.ExpandButtonStyle}" TargetType="{x:Type dx:ToggleStateButton}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Height" Value="16" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Template" Value="{DynamicResource {dxpgi:LWKey ScrollableArea.ExpandButtonTemplate}}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Width" Value="16" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" Value="44" />
                <Setter Property="MinWidth" Value="44" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\PivotGrid\Base\ExpandButtons.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\PivotGrid\Base.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\PivotGrid\Base.xaml-->


</ResourceDictionary>