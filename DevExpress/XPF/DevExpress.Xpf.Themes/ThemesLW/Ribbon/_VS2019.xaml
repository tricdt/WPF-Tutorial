<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
    xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon"
    xmlns:dxri="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/internal"
    xmlns:dxrt="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/themekeys"
    xmlns:dxbi="http://schemas.devexpress.com/winfx/2008/xaml/bars/internal"
    xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys"
    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm">
    <ResourceDictionary.MergedDictionaries>
        <dxi:ThemeResourceDictionary Path="Ribbon/_{ThemeName}.xaml" />
        <dxi:ThemeResourceDictionary Path="Ribbon/_Base.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <dx:WpfSvgPalette x:Key="{dxrt:LWKey Backstage.SvgPalette}">
        <SolidColorBrush x:Key="BlackColor" Color="{dx:LWColor 'VS2019Blue=#FFE3E8EF, VS2019Dark=#FFFFFFFF, VS2019Light=#FFFFFFFF'}" />
        <SolidColorBrush x:Key="WhiteColor" Color="{dx:LWColor 'VS2019Blue=#FF5D6B99, VS2019Dark=#FF007ACC, VS2019Light=#FF007ACC'}" />
        <SolidColorBrush x:Key="RedColor" Color="{dx:LWColor 'VS2019Blue=#FFED665A, VS2019Dark=#FFF26C7E, VS2019Light=#FFF37454'}" />
        <SolidColorBrush x:Key="YellowColor" Color="{dx:LWColor 'VS2019Blue=#FFFF943D, VS2019Dark=#FFF79B7F, VS2019Light=#FFFDC252'}" />
        <SolidColorBrush x:Key="GreenColor" Color="{dx:LWColor 'VS2019Blue=#FF75B874, VS2019Dark=#FF6FC38A, VS2019Light=#FF73C594'}" />
        <SolidColorBrush x:Key="BlueColor" Color="{dx:LWColor 'VS2019Blue=#FF49AAEB, VS2019Dark=#FF42B4E8, VS2019Light=#FF65B8E7'}" />
        <dx:WpfSvgPalette.States>
            <dx:WpfSvgPalette x:Key="Hover">
                <SolidColorBrush x:Key="BlackColor" Color="{dx:LWColor 'VS2019Blue=#FF546177, VS2019Dark=#FFFFFFFF, VS2019Light=#FFFFFFFF'}" />
                <SolidColorBrush x:Key="WhiteColor" Color="{dx:LWColor 'VS2019Blue=#FFCCD5F0, VS2019Dark=#FF1C97EA, VS2019Light=#FF2E98E0'}" />
                <SolidColorBrush x:Key="RedColor" Color="{dx:LWColor 'VS2019Blue=#FFED665A, VS2019Dark=#FFF26C7E, VS2019Light=#FFF37454'}" />
                <SolidColorBrush x:Key="YellowColor" Color="{dx:LWColor 'VS2019Blue=#FFFF943D, VS2019Dark=#FFF79B7F, VS2019Light=#FFFDC252'}" />
                <SolidColorBrush x:Key="GreenColor" Color="{dx:LWColor 'VS2019Blue=#FF75B874, VS2019Dark=#FF6FC38A, VS2019Light=#FF73C594'}" />
                <SolidColorBrush x:Key="BlueColor" Color="{dx:LWColor 'VS2019Blue=#FF49AAEB, VS2019Dark=#FF42B4E8, VS2019Light=#FF65B8E7'}" />
            </dx:WpfSvgPalette>
            <dx:WpfSvgPalette x:Key="Pressed">
                <SolidColorBrush x:Key="BlackColor" Color="{dx:LWColor 'VS2019Blue=#FF546177, VS2019Dark=#FFFFFFFF, VS2019Light=#FFFFFFFF'}" />
                <SolidColorBrush x:Key="WhiteColor" Color="{dx:LWColor 'VS2019Blue=#FFCCD5F0, VS2019Dark=#FF005E9F, VS2019Light=#FF007ACC'}" />
                <SolidColorBrush x:Key="RedColor" Color="{dx:LWColor 'VS2019Blue=#FFED665A, VS2019Dark=#FFF26C7E, VS2019Light=#FFF37454'}" />
                <SolidColorBrush x:Key="YellowColor" Color="{dx:LWColor 'VS2019Blue=#FFFF943D, VS2019Dark=#FFF79B7F, VS2019Light=#FFFDC252'}" />
                <SolidColorBrush x:Key="GreenColor" Color="{dx:LWColor 'VS2019Blue=#FF75B874, VS2019Dark=#FF6FC38A, VS2019Light=#FF73C594'}" />
                <SolidColorBrush x:Key="BlueColor" Color="{dx:LWColor 'VS2019Blue=#FF49AAEB, VS2019Dark=#FF42B4E8, VS2019Light=#FF65B8E7'}" />
            </dx:WpfSvgPalette>
            <dx:WpfSvgPalette x:Key="Checked">
                <SolidColorBrush x:Key="BlackColor" Color="{dx:LWColor 'VS2019Blue=#FF546177, VS2019Dark=#FFFFFFFF, VS2019Light=#FFFFFFFF'}" />
                <SolidColorBrush x:Key="WhiteColor" Color="{dx:LWColor 'VS2019Blue=#FFCCD5F0, VS2019Dark=#FF005E9F, VS2019Light=#FF005E9F'}" />
                <SolidColorBrush x:Key="RedColor" Color="{dx:LWColor 'VS2019Blue=#FFED665A, VS2019Dark=#FFF26C7E, VS2019Light=#FFF37454'}" />
                <SolidColorBrush x:Key="YellowColor" Color="{dx:LWColor 'VS2019Blue=#FFFF943D, VS2019Dark=#FFF79B7F, VS2019Light=#FFFDC252'}" />
                <SolidColorBrush x:Key="GreenColor" Color="{dx:LWColor 'VS2019Blue=#FF75B874, VS2019Dark=#FF6FC38A, VS2019Light=#FF73C594'}" />
                <SolidColorBrush x:Key="BlueColor" Color="{dx:LWColor 'VS2019Blue=#FF49AAEB, VS2019Dark=#FF42B4E8, VS2019Light=#FF65B8E7'}" />
            </dx:WpfSvgPalette>
            <dx:WpfSvgPalette x:Key="HoverChecked">
                <SolidColorBrush x:Key="BlackColor" Color="{dx:LWColor 'VS2019Blue=#FF546177, VS2019Dark=#FFFFFFFF, VS2019Light=#FFFFFFFF'}" />
                <SolidColorBrush x:Key="WhiteColor" Color="{dx:LWColor 'VS2019Blue=#FFCCD5F0, VS2019Dark=#FF005E9F, VS2019Light=#FF005E9F'}" />
                <SolidColorBrush x:Key="RedColor" Color="{dx:LWColor 'VS2019Blue=#FFED665A, VS2019Dark=#FFF26C7E, VS2019Light=#FFF37454'}" />
                <SolidColorBrush x:Key="YellowColor" Color="{dx:LWColor 'VS2019Blue=#FFFF943D, VS2019Dark=#FFF79B7F, VS2019Light=#FFFDC252'}" />
                <SolidColorBrush x:Key="GreenColor" Color="{dx:LWColor 'VS2019Blue=#FF75B874, VS2019Dark=#FF6FC38A, VS2019Light=#FF73C594'}" />
                <SolidColorBrush x:Key="BlueColor" Color="{dx:LWColor 'VS2019Blue=#FF49AAEB, VS2019Dark=#FF42B4E8, VS2019Light=#FF65B8E7'}" />
            </dx:WpfSvgPalette>
            <dx:WpfSvgPalette x:Key="PressedChecked">
                <SolidColorBrush x:Key="BlackColor" Color="{dx:LWColor 'VS2019Blue=#FF546177, VS2019Dark=#FFFFFFFF, VS2019Light=#FFFFFFFF'}" />
                <SolidColorBrush x:Key="WhiteColor" Color="{dx:LWColor 'VS2019Blue=#FFCCD5F0, VS2019Dark=#FF005E9F, VS2019Light=#FF005E9F'}" />
                <SolidColorBrush x:Key="RedColor" Color="{dx:LWColor 'VS2019Blue=#FFED665A, VS2019Dark=#FFF26C7E, VS2019Light=#FFF37454'}" />
                <SolidColorBrush x:Key="YellowColor" Color="{dx:LWColor 'VS2019Blue=#FFFF943D, VS2019Dark=#FFF79B7F, VS2019Light=#FFFDC252'}" />
                <SolidColorBrush x:Key="GreenColor" Color="{dx:LWColor 'VS2019Blue=#FF75B874, VS2019Dark=#FF6FC38A, VS2019Light=#FF73C594'}" />
                <SolidColorBrush x:Key="BlueColor" Color="{dx:LWColor 'VS2019Blue=#FF49AAEB, VS2019Dark=#FF42B4E8, VS2019Light=#FF65B8E7'}" />
            </dx:WpfSvgPalette>
        </dx:WpfSvgPalette.States>
    </dx:WpfSvgPalette>
    <dx:WpfSvgPalette x:Key="{dxrt:LWKey ApplicationButton.SvgPalette}">
        <SolidColorBrush x:Key="BlackColor" Color="#ff727272" />
        <SolidColorBrush x:Key="WhiteColor" Color="#ffFFFFFF" />
    </dx:WpfSvgPalette>
    <dx:WpfSvgPalette x:Key="{dxrt:LWKey RibbonSvgPalette.SvgPaletteInApplicationMenu}">
        <SolidColorBrush x:Key="BlackColor" Color="{dx:LWColor 'VS2019Blue=#FF546177, VS2019Dark=#FFD6D6D6, VS2019Light=#FF646464'}" />
        <SolidColorBrush x:Key="WhiteColor" Color="{dx:LWColor 'VS2019Blue=#FFE3E8EF, VS2019Dark=#FF2D2D30, VS2019Light=#FFFFFFFF'}" />
        <SolidColorBrush x:Key="RedColor" Color="{dx:LWColor 'VS2019Blue=#FF91210B, VS2019Dark=#FFF26543, VS2019Light=#FFCF5031'}" />
        <SolidColorBrush x:Key="YellowColor" Color="{dx:LWColor 'VS2019Blue=#FFD5A65F, VS2019Dark=#FFF89942, VS2019Light=#FFCF9930'}" />
        <SolidColorBrush x:Key="GreenColor" Color="{dx:LWColor 'VS2019Blue=#FF327C2E, VS2019Dark=#FF7AC142, VS2019Light=#FF2EB072'}" />
        <SolidColorBrush x:Key="BlueColor" Color="{dx:LWColor 'VS2019Blue=#FF004A8C, VS2019Dark=#FF5680C0, VS2019Light=#FF3F72B8'}" />
        <dx:WpfSvgPalette.States>
            <dx:WpfSvgPalette x:Key="Hover">
                <SolidColorBrush x:Key="BlackColor" Color="{dx:LWColor 'VS2019Blue=#FF546177, VS2019Dark=#FFD6D6D6, VS2019Light=#FF646464'}" />
                <SolidColorBrush x:Key="WhiteColor" Color="{dx:LWColor 'VS2019Blue=#FFE3E8EF, VS2019Dark=#FF2D2D30, VS2019Light=#FFFFFFFF'}" />
                <SolidColorBrush x:Key="RedColor" Color="{dx:LWColor 'VS2019Blue=#FF91210B, VS2019Dark=#FFF26543, VS2019Light=#FFCF5031'}" />
                <SolidColorBrush x:Key="YellowColor" Color="{dx:LWColor 'VS2019Blue=#FFD5A65F, VS2019Dark=#FFF89942, VS2019Light=#FFCF9930'}" />
                <SolidColorBrush x:Key="GreenColor" Color="{dx:LWColor 'VS2019Blue=#FF327C2E, VS2019Dark=#FF7AC142, VS2019Light=#FF2EB072'}" />
                <SolidColorBrush x:Key="BlueColor" Color="{dx:LWColor 'VS2019Blue=#FF004A8C, VS2019Dark=#FF5680C0, VS2019Light=#FF3F72B8'}" />
            </dx:WpfSvgPalette>
            <dx:WpfSvgPalette x:Key="Pressed">
                <SolidColorBrush x:Key="BlackColor" Color="{dx:LWColor 'VS2019Blue=#FF546177, VS2019Dark=#FFFFFFFF, VS2019Light=#FFFFFFFF'}" />
                <SolidColorBrush x:Key="WhiteColor" Color="{dx:LWColor 'VS2019Blue=#FFE3E8EF, VS2019Dark=#FF007ACC, VS2019Light=#FF007ACC'}" />
                <SolidColorBrush x:Key="RedColor" Color="{dx:LWColor 'VS2019Blue=#FF91210B, VS2019Dark=#FFF26C7E, VS2019Light=#FFF37453'}" />
                <SolidColorBrush x:Key="YellowColor" Color="{dx:LWColor 'VS2019Blue=#FFD5A65F, VS2019Dark=#FFF79B7F, VS2019Light=#FFFDC252'}" />
                <SolidColorBrush x:Key="GreenColor" Color="{dx:LWColor 'VS2019Blue=#FF327C2E, VS2019Dark=#FF6FC38A, VS2019Light=#FF73C594'}" />
                <SolidColorBrush x:Key="BlueColor" Color="{dx:LWColor 'VS2019Blue=#FF004A8C, VS2019Dark=#FF42B4E8, VS2019Light=#FF65B8E7'}" />
            </dx:WpfSvgPalette>
            <dx:WpfSvgPalette x:Key="Checked">
                <SolidColorBrush x:Key="BlackColor" Color="{dx:LWColor 'VS2019Blue=#FF546177, VS2019Dark=#FFFFFFFF, VS2019Light=#FFFFFFFF'}" />
                <SolidColorBrush x:Key="WhiteColor" Color="{dx:LWColor 'VS2019Blue=#FFE3E8EF, VS2019Dark=#FF007ACC, VS2019Light=#FF007ACC'}" />
                <SolidColorBrush x:Key="RedColor" Color="{dx:LWColor 'VS2019Blue=#FF91210B, VS2019Dark=#FFF26C7E, VS2019Light=#FFF37453'}" />
                <SolidColorBrush x:Key="YellowColor" Color="{dx:LWColor 'VS2019Blue=#FFD5A65F, VS2019Dark=#FFF79B7F, VS2019Light=#FFFDC252'}" />
                <SolidColorBrush x:Key="GreenColor" Color="{dx:LWColor 'VS2019Blue=#FF327C2E, VS2019Dark=#FF6FC38A, VS2019Light=#FF73C594'}" />
                <SolidColorBrush x:Key="BlueColor" Color="{dx:LWColor 'VS2019Blue=#FF004A8C, VS2019Dark=#FF42B4E8, VS2019Light=#FF65B8E7'}" />
            </dx:WpfSvgPalette>
        </dx:WpfSvgPalette.States>
    </dx:WpfSvgPalette>
    <dx:WpfSvgPalette x:Key="{dxrt:LWKey RibbonSvgPalette.SvgPaletteInRibbonStatusBarLeft}">
        <SolidColorBrush x:Key="BlackColor" Color="{dx:LWColor 'VS2019Blue=#FFE3E8EF, VS2019Dark=#FFFFFFFF, VS2019Light=#FFFFFFFF'}" />
        <SolidColorBrush x:Key="WhiteColor" Color="{dx:LWColor 'VS2019Blue=#FF5D6B99, VS2019Dark=#FF007ACC, VS2019Light=#FF007ACC'}" />
        <SolidColorBrush x:Key="RedColor" Color="{dx:LWColor 'VS2019Blue=#FFED665A, VS2019Dark=#FFF26C7E, VS2019Light=#FFF37454'}" />
        <SolidColorBrush x:Key="YellowColor" Color="{dx:LWColor 'VS2019Blue=#FFFF943D, VS2019Dark=#FFF79B7F, VS2019Light=#FFFDC252'}" />
        <SolidColorBrush x:Key="GreenColor" Color="{dx:LWColor 'VS2019Blue=#FF75B874, VS2019Dark=#FF6FC38A, VS2019Light=#FF73C594'}" />
        <SolidColorBrush x:Key="BlueColor" Color="{dx:LWColor 'VS2019Blue=#FF62AFE3, VS2019Dark=#FF42B4E8, VS2019Light=#FF65B8E7'}" />
        <dx:WpfSvgPalette.States>
            <dx:WpfSvgPalette x:Key="Hover">
                <SolidColorBrush x:Key="BlackColor" Color="{dx:LWColor 'VS2019Blue=#FF546177, VS2019Dark=#FFFFFFFF, VS2019Light=#FFFFFFFF'}" />
                <SolidColorBrush x:Key="WhiteColor" Color="{dx:LWColor 'VS2019Blue=#FFCCD5F0, VS2019Dark=#FF007ACC, VS2019Light=#FF007ACC'}" />
                <SolidColorBrush x:Key="RedColor" Color="{dx:LWColor 'VS2019Blue=#FFED665A, VS2019Dark=#FFF26C7E, VS2019Light=#FFF37454'}" />
                <SolidColorBrush x:Key="YellowColor" Color="{dx:LWColor 'VS2019Blue=#FFFF943D, VS2019Dark=#FFF79B7F, VS2019Light=#FFFDC252'}" />
                <SolidColorBrush x:Key="GreenColor" Color="{dx:LWColor 'VS2019Blue=#FF75B874, VS2019Dark=#FF6FC38A, VS2019Light=#FF73C594'}" />
                <SolidColorBrush x:Key="BlueColor" Color="{dx:LWColor 'VS2019Blue=#FF62AFE3, VS2019Dark=#FF42B4E8, VS2019Light=#FF65B8E7'}" />
            </dx:WpfSvgPalette>
            <dx:WpfSvgPalette x:Key="Pressed">
                <SolidColorBrush x:Key="BlackColor" Color="{dx:LWColor 'VS2019Blue=#FF546177, VS2019Dark=#FFFFFFFF, VS2019Light=#FFFFFFFF'}" />
                <SolidColorBrush x:Key="WhiteColor" Color="{dx:LWColor 'VS2019Blue=#FFCCD5F0, VS2019Dark=#FF007ACC, VS2019Light=#FF007ACC'}" />
                <SolidColorBrush x:Key="RedColor" Color="{dx:LWColor 'VS2019Blue=#FFED665A, VS2019Dark=#FFF26C7E, VS2019Light=#FFF37454'}" />
                <SolidColorBrush x:Key="YellowColor" Color="{dx:LWColor 'VS2019Blue=#FFFF943D, VS2019Dark=#FFF79B7F, VS2019Light=#FFFDC252'}" />
                <SolidColorBrush x:Key="GreenColor" Color="{dx:LWColor 'VS2019Blue=#FF75B874, VS2019Dark=#FF6FC38A, VS2019Light=#FF73C594'}" />
                <SolidColorBrush x:Key="BlueColor" Color="{dx:LWColor 'VS2019Blue=#FF62AFE3, VS2019Dark=#FF42B4E8, VS2019Light=#FF65B8E7'}" />
            </dx:WpfSvgPalette>
            <dx:WpfSvgPalette x:Key="Checked">
                <SolidColorBrush x:Key="BlackColor" Color="{dx:LWColor 'VS2019Blue=#FF546177, VS2019Dark=#FFFFFFFF, VS2019Light=#FFFFFFFF'}" />
                <SolidColorBrush x:Key="WhiteColor" Color="{dx:LWColor 'VS2019Blue=#FFCCD5F0, VS2019Dark=#FF007ACC, VS2019Light=#FF007ACC'}" />
                <SolidColorBrush x:Key="RedColor" Color="{dx:LWColor 'VS2019Blue=#FFED665A, VS2019Dark=#FFF26C7E, VS2019Light=#FFF37454'}" />
                <SolidColorBrush x:Key="YellowColor" Color="{dx:LWColor 'VS2019Blue=#FFFF943D, VS2019Dark=#FFF79B7F, VS2019Light=#FFFDC252'}" />
                <SolidColorBrush x:Key="GreenColor" Color="{dx:LWColor 'VS2019Blue=#FF75B874, VS2019Dark=#FF6FC38A, VS2019Light=#FF73C594'}" />
                <SolidColorBrush x:Key="BlueColor" Color="{dx:LWColor 'VS2019Blue=#FF62AFE3, VS2019Dark=#FF42B4E8, VS2019Light=#FF65B8E7'}" />
            </dx:WpfSvgPalette>
        </dx:WpfSvgPalette.States>
    </dx:WpfSvgPalette>
    <dx:WpfSvgPalette x:Key="{dxrt:LWKey RibbonSvgPalette.SvgPaletteInRibbonStatusBarRight}">
        <SolidColorBrush x:Key="BlackColor" Color="{dx:LWColor 'VS2019Blue=#FFE3E8EF, VS2019Dark=#FFFFFFFF, VS2019Light=#FFFFFFFF'}" />
        <SolidColorBrush x:Key="WhiteColor" Color="{dx:LWColor 'VS2019Blue=#FF5D6B99, VS2019Dark=#FF007ACC, VS2019Light=#FF007ACC'}" />
        <SolidColorBrush x:Key="RedColor" Color="{dx:LWColor 'VS2019Blue=#FFED665A, VS2019Dark=#FFF26C7E, VS2019Light=#FFF37454'}" />
        <SolidColorBrush x:Key="YellowColor" Color="{dx:LWColor 'VS2019Blue=#FFFF943D, VS2019Dark=#FFF79B7F, VS2019Light=#FFFDC252'}" />
        <SolidColorBrush x:Key="GreenColor" Color="{dx:LWColor 'VS2019Blue=#FF75B874, VS2019Dark=#FF6FC38A, VS2019Light=#FF73C594'}" />
        <SolidColorBrush x:Key="BlueColor" Color="{dx:LWColor 'VS2019Blue=#FF62AFE3, VS2019Dark=#FF42B4E8, VS2019Light=#FF65B8E7'}" />
        <dx:WpfSvgPalette.States>
            <dx:WpfSvgPalette x:Key="Hover">
                <SolidColorBrush x:Key="BlackColor" Color="{dx:LWColor 'VS2019Blue=#FF546177, VS2019Dark=#FFFFFFFF, VS2019Light=#FFFFFFFF'}" />
                <SolidColorBrush x:Key="WhiteColor" Color="{dx:LWColor 'VS2019Blue=#FFCCD5F0, VS2019Dark=#FF007ACC, VS2019Light=#FF007ACC'}" />
                <SolidColorBrush x:Key="RedColor" Color="{dx:LWColor 'VS2019Blue=#FFED665A, VS2019Dark=#FFF26C7E, VS2019Light=#FFF37454'}" />
                <SolidColorBrush x:Key="YellowColor" Color="{dx:LWColor 'VS2019Blue=#FFFF943D, VS2019Dark=#FFF79B7F, VS2019Light=#FFFDC252'}" />
                <SolidColorBrush x:Key="GreenColor" Color="{dx:LWColor 'VS2019Blue=#FF75B874, VS2019Dark=#FF6FC38A, VS2019Light=#FF73C594'}" />
                <SolidColorBrush x:Key="BlueColor" Color="{dx:LWColor 'VS2019Blue=#FF62AFE3, VS2019Dark=#FF42B4E8, VS2019Light=#FF65B8E7'}" />
            </dx:WpfSvgPalette>
            <dx:WpfSvgPalette x:Key="Pressed">
                <SolidColorBrush x:Key="BlackColor" Color="{dx:LWColor 'VS2019Blue=#FF546177, VS2019Dark=#FFFFFFFF, VS2019Light=#FFFFFFFF'}" />
                <SolidColorBrush x:Key="WhiteColor" Color="{dx:LWColor 'VS2019Blue=#FFCCD5F0, VS2019Dark=#FF007ACC, VS2019Light=#FF007ACC'}" />
                <SolidColorBrush x:Key="RedColor" Color="{dx:LWColor 'VS2019Blue=#FFED665A, VS2019Dark=#FFF26C7E, VS2019Light=#FFF37454'}" />
                <SolidColorBrush x:Key="YellowColor" Color="{dx:LWColor 'VS2019Blue=#FFFF943D, VS2019Dark=#FFF79B7F, VS2019Light=#FFFDC252'}" />
                <SolidColorBrush x:Key="GreenColor" Color="{dx:LWColor 'VS2019Blue=#FF75B874, VS2019Dark=#FF6FC38A, VS2019Light=#FF73C594'}" />
                <SolidColorBrush x:Key="BlueColor" Color="{dx:LWColor 'VS2019Blue=#FF62AFE3, VS2019Dark=#FF42B4E8, VS2019Light=#FF65B8E7'}" />
            </dx:WpfSvgPalette>
            <dx:WpfSvgPalette x:Key="Checked">
                <SolidColorBrush x:Key="BlackColor" Color="{dx:LWColor 'VS2019Blue=#FF546177, VS2019Dark=#FFFFFFFF, VS2019Light=#FFFFFFFF'}" />
                <SolidColorBrush x:Key="WhiteColor" Color="{dx:LWColor 'VS2019Blue=#FFCCD5F0, VS2019Dark=#FF007ACC, VS2019Light=#FF007ACC'}" />
                <SolidColorBrush x:Key="RedColor" Color="{dx:LWColor 'VS2019Blue=#FFED665A, VS2019Dark=#FFF26C7E, VS2019Light=#FFF37454'}" />
                <SolidColorBrush x:Key="YellowColor" Color="{dx:LWColor 'VS2019Blue=#FFFF943D, VS2019Dark=#FFF79B7F, VS2019Light=#FFFDC252'}" />
                <SolidColorBrush x:Key="GreenColor" Color="{dx:LWColor 'VS2019Blue=#FF75B874, VS2019Dark=#FF6FC38A, VS2019Light=#FF73C594'}" />
                <SolidColorBrush x:Key="BlueColor" Color="{dx:LWColor 'VS2019Blue=#FF62AFE3, VS2019Dark=#FF42B4E8, VS2019Light=#FF65B8E7'}" />
            </dx:WpfSvgPalette>
        </dx:WpfSvgPalette.States>
    </dx:WpfSvgPalette>
    <dx:WpfSvgPalette x:Key="{dxrt:LWKey RibbonSvgPalette.SvgPaletteInRibbonPageGroup}">
        <SolidColorBrush x:Key="BlackColor" Color="{dx:LWColor 'VS2019Blue=#FF546177, VS2019Dark=#FFD6D6D6, VS2019Light=#FF646464'}" />
        <SolidColorBrush x:Key="WhiteColor" Color="{dx:LWColor 'VS2019Blue=#FFE3E8EF, VS2019Dark=#FF2D2D30, VS2019Light=#FFFFFFFF'}" />
        <SolidColorBrush x:Key="RedColor" Color="{dx:LWColor 'VS2019Blue=#FF91210B, VS2019Dark=#FFF26543, VS2019Light=#FFCF5031'}" />
        <SolidColorBrush x:Key="YellowColor" Color="{dx:LWColor 'VS2019Blue=#FFD5A65F, VS2019Dark=#FFF89942, VS2019Light=#FFCF9930'}" />
        <SolidColorBrush x:Key="GreenColor" Color="{dx:LWColor 'VS2019Blue=#FF327C2E, VS2019Dark=#FF7AC142, VS2019Light=#FF2EB072'}" />
        <SolidColorBrush x:Key="BlueColor" Color="{dx:LWColor 'VS2019Blue=#FF004A8C, VS2019Dark=#FF5680C0, VS2019Light=#FF3F72B8'}" />
        <dx:WpfSvgPalette.States>
            <dx:WpfSvgPalette x:Key="Hover">
                <SolidColorBrush x:Key="BlackColor" Color="{dx:LWColor 'VS2019Blue=#FF546177, VS2019Dark=#FFD6D6D6, VS2019Light=#FF646464'}" />
                <SolidColorBrush x:Key="WhiteColor" Color="{dx:LWColor 'VS2019Blue=#FFE3E8EF, VS2019Dark=#FF2D2D30, VS2019Light=#FFFFFFFF'}" />
                <SolidColorBrush x:Key="RedColor" Color="{dx:LWColor 'VS2019Blue=#FF91210B, VS2019Dark=#FFF26543, VS2019Light=#FFCF5031'}" />
                <SolidColorBrush x:Key="YellowColor" Color="{dx:LWColor 'VS2019Blue=#FFD5A65F, VS2019Dark=#FFF89942, VS2019Light=#FFCF9930'}" />
                <SolidColorBrush x:Key="GreenColor" Color="{dx:LWColor 'VS2019Blue=#FF327C2E, VS2019Dark=#FF7AC142, VS2019Light=#FF2EB072'}" />
                <SolidColorBrush x:Key="BlueColor" Color="{dx:LWColor 'VS2019Blue=#FF004A8C, VS2019Dark=#FF5680C0, VS2019Light=#FF3F72B8'}" />
            </dx:WpfSvgPalette>
            <dx:WpfSvgPalette x:Key="Pressed">
                <SolidColorBrush x:Key="BlackColor" Color="{dx:LWColor 'VS2019Blue=#FF546177, VS2019Dark=#FFFFFFFF, VS2019Light=#FFFFFFFF'}" />
                <SolidColorBrush x:Key="WhiteColor" Color="{dx:LWColor 'VS2019Blue=#FFE3E8EF, VS2019Dark=#FF007ACC, VS2019Light=#FF007ACC'}" />
                <SolidColorBrush x:Key="RedColor" Color="{dx:LWColor 'VS2019Blue=#FF91210B, VS2019Dark=#FFF26C7E, VS2019Light=#FFF37453'}" />
                <SolidColorBrush x:Key="YellowColor" Color="{dx:LWColor 'VS2019Blue=#FFD5A65F, VS2019Dark=#FFF79B7F, VS2019Light=#FFFDC252'}" />
                <SolidColorBrush x:Key="GreenColor" Color="{dx:LWColor 'VS2019Blue=#FF327C2E, VS2019Dark=#FF6FC38A, VS2019Light=#FF73C594'}" />
                <SolidColorBrush x:Key="BlueColor" Color="{dx:LWColor 'VS2019Blue=#FF004A8C, VS2019Dark=#FF42B4E8, VS2019Light=#FF65B8E7'}" />
            </dx:WpfSvgPalette>
        </dx:WpfSvgPalette.States>
    </dx:WpfSvgPalette>
    <dx:WpfSvgPalette x:Key="{dxrt:LWKey RibbonSvgPalette.SvgPaletteInRibbonPageHeader}">
        <SolidColorBrush x:Key="BlackColor" Color="{dx:LWColor 'VS2019Blue=#FFE3E8EF, VS2019Dark=#FFD6D6D6, VS2019Light=#FFFFFFFF'}" />
        <SolidColorBrush x:Key="WhiteColor" Color="{dx:LWColor 'VS2019Blue=#FF5D6B99, VS2019Dark=#FF2D2D30, VS2019Light=#FF007ACC'}" />
        <SolidColorBrush x:Key="RedColor" Color="{dx:LWColor 'VS2019Blue=#FFED665A, VS2019Dark=#FFF26543, VS2019Light=#FFF37454'}" />
        <SolidColorBrush x:Key="YellowColor" Color="{dx:LWColor 'VS2019Blue=#FFFF943D, VS2019Dark=#FFF89942, VS2019Light=#FFFDC252'}" />
        <SolidColorBrush x:Key="GreenColor" Color="{dx:LWColor 'VS2019Blue=#FF75B874, VS2019Dark=#FF7AC142, VS2019Light=#FF73C594'}" />
        <SolidColorBrush x:Key="BlueColor" Color="{dx:LWColor 'VS2019Blue=#FF62AFE3, VS2019Dark=#FF5680C0, VS2019Light=#FF65B8E7'}" />
        <dx:WpfSvgPalette.States>
            <dx:WpfSvgPalette x:Key="Hover">
                <SolidColorBrush x:Key="BlackColor" Color="{dx:LWColor 'VS2019Blue=#FF546177, VS2019Dark=#FFD6D6D6, VS2019Light=#FFFFFFFF'}" />
                <SolidColorBrush x:Key="WhiteColor" Color="{dx:LWColor 'VS2019Blue=#FFCCD5F0, VS2019Dark=#FF2D2D30, VS2019Light=#FF007ACC'}" />
                <SolidColorBrush x:Key="RedColor" Color="{dx:LWColor 'VS2019Blue=#FFED665A, VS2019Dark=#FFF26543, VS2019Light=#FFF37454'}" />
                <SolidColorBrush x:Key="YellowColor" Color="{dx:LWColor 'VS2019Blue=#FFFF943D, VS2019Dark=#FFF89942, VS2019Light=#FFFDC252'}" />
                <SolidColorBrush x:Key="GreenColor" Color="{dx:LWColor 'VS2019Blue=#FF75B874, VS2019Dark=#FF7AC142, VS2019Light=#FF73C594'}" />
                <SolidColorBrush x:Key="BlueColor" Color="{dx:LWColor 'VS2019Blue=#FF62AFE3, VS2019Dark=#FF5680C0, VS2019Light=#FF65B8E7'}" />
            </dx:WpfSvgPalette>
            <dx:WpfSvgPalette x:Key="Pressed">
                <SolidColorBrush x:Key="BlackColor" Color="{dx:LWColor 'VS2019Blue=#FF546177, VS2019Dark=#FFFFFFFF, VS2019Light=#FFFFFFFF'}" />
                <SolidColorBrush x:Key="WhiteColor" Color="{dx:LWColor 'VS2019Blue=#FFCCD5F0, VS2019Dark=#FF007ACC, VS2019Light=#FF007ACC'}" />
                <SolidColorBrush x:Key="RedColor" Color="{dx:LWColor 'VS2019Blue=#FFED665A, VS2019Dark=#FFF26C7E, VS2019Light=#FFF37454'}" />
                <SolidColorBrush x:Key="YellowColor" Color="{dx:LWColor 'VS2019Blue=#FFFF943D, VS2019Dark=#FFF79B7F, VS2019Light=#FFFDC252'}" />
                <SolidColorBrush x:Key="GreenColor" Color="{dx:LWColor 'VS2019Blue=#FF75B874, VS2019Dark=#FF6FC38A, VS2019Light=#FF73C594'}" />
                <SolidColorBrush x:Key="BlueColor" Color="{dx:LWColor 'VS2019Blue=#FF62AFE3, VS2019Dark=#FF42B4E8, VS2019Light=#FF65B8E7'}" />
            </dx:WpfSvgPalette>
        </dx:WpfSvgPalette.States>
    </dx:WpfSvgPalette>
    <dx:WpfSvgPalette x:Key="{dxrt:LWKey RibbonSvgPalette.SvgPaletteInRibbonToolbar}">
        <SolidColorBrush x:Key="BlackColor" Color="{dx:LWColor 'VS2019Blue=#FFE3E8EF, VS2019Dark=#FFD6D6D6, VS2019Light=#FFFFFFFF'}" />
        <SolidColorBrush x:Key="WhiteColor" Color="{dx:LWColor 'VS2019Blue=#FF5D6B99, VS2019Dark=#FF2D2D30, VS2019Light=#FF007ACC'}" />
        <SolidColorBrush x:Key="RedColor" Color="{dx:LWColor 'VS2019Blue=#FFED665A, VS2019Dark=#FFF26543, VS2019Light=#FFF37454'}" />
        <SolidColorBrush x:Key="YellowColor" Color="{dx:LWColor 'VS2019Blue=#FFFF943D, VS2019Dark=#FFF89942, VS2019Light=#FFFDC252'}" />
        <SolidColorBrush x:Key="GreenColor" Color="{dx:LWColor 'VS2019Blue=#FF75B874, VS2019Dark=#FF7AC142, VS2019Light=#FF73C594'}" />
        <SolidColorBrush x:Key="BlueColor" Color="{dx:LWColor 'VS2019Blue=#FF62AFE3, VS2019Dark=#FF5680C0, VS2019Light=#FF65B8E7'}" />
        <dx:WpfSvgPalette.States>
            <dx:WpfSvgPalette x:Key="Hover">
                <SolidColorBrush x:Key="BlackColor" Color="{dx:LWColor 'VS2019Blue=#FF546177, VS2019Dark=#FFD6D6D6, VS2019Light=#FFFFFFFF'}" />
                <SolidColorBrush x:Key="WhiteColor" Color="{dx:LWColor 'VS2019Blue=#FFCCD5F0, VS2019Dark=#FF2D2D30, VS2019Light=#FF007ACC'}" />
                <SolidColorBrush x:Key="RedColor" Color="{dx:LWColor 'VS2019Blue=#FFED665A, VS2019Dark=#FFF26543, VS2019Light=#FFF37454'}" />
                <SolidColorBrush x:Key="YellowColor" Color="{dx:LWColor 'VS2019Blue=#FFFF943D, VS2019Dark=#FFF89942, VS2019Light=#FFFDC252'}" />
                <SolidColorBrush x:Key="GreenColor" Color="{dx:LWColor 'VS2019Blue=#FF75B874, VS2019Dark=#FF7AC142, VS2019Light=#FF73C594'}" />
                <SolidColorBrush x:Key="BlueColor" Color="{dx:LWColor 'VS2019Blue=#FF62AFE3, VS2019Dark=#FF5680C0, VS2019Light=#FF65B8E7'}" />
            </dx:WpfSvgPalette>
            <dx:WpfSvgPalette x:Key="Pressed">
                <SolidColorBrush x:Key="BlackColor" Color="{dx:LWColor 'VS2019Blue=#FF546177, VS2019Dark=#FFFFFFFF, VS2019Light=#FFFFFFFF'}" />
                <SolidColorBrush x:Key="WhiteColor" Color="{dx:LWColor 'VS2019Blue=#FFCCD5F0, VS2019Dark=#FF007ACC, VS2019Light=#FF007ACC'}" />
                <SolidColorBrush x:Key="RedColor" Color="{dx:LWColor 'VS2019Blue=#FFED665A, VS2019Dark=#FFF26C7E, VS2019Light=#FFF37454'}" />
                <SolidColorBrush x:Key="YellowColor" Color="{dx:LWColor 'VS2019Blue=#FFFF943D, VS2019Dark=#FFF79B7F, VS2019Light=#FFFDC252'}" />
                <SolidColorBrush x:Key="GreenColor" Color="{dx:LWColor 'VS2019Blue=#FF75B874, VS2019Dark=#FF6FC38A, VS2019Light=#FF73C594'}" />
                <SolidColorBrush x:Key="BlueColor" Color="{dx:LWColor 'VS2019Blue=#FF62AFE3, VS2019Dark=#FF42B4E8, VS2019Light=#FF65B8E7'}" />
            </dx:WpfSvgPalette>
        </dx:WpfSvgPalette.States>
    </dx:WpfSvgPalette>
    <dx:WpfSvgPalette x:Key="{dxrt:LWKey RibbonSvgPalette.SvgPaletteInRibbonToolbarPopup}">
        <SolidColorBrush x:Key="BlackColor" Color="{dx:LWColor 'VS2019Blue=#FF546177, VS2019Dark=#FFD6D6D6, VS2019Light=#FF646464'}" />
        <SolidColorBrush x:Key="WhiteColor" Color="{dx:LWColor 'VS2019Blue=#FF5D6B99, VS2019Dark=#FF2D2D30, VS2019Light=#FF007ACC'}" />
        <SolidColorBrush x:Key="RedColor" Color="{dx:LWColor 'VS2019Blue=#FFED665A, VS2019Dark=#FFF26543, VS2019Light=#FFF37454'}" />
        <SolidColorBrush x:Key="YellowColor" Color="{dx:LWColor 'VS2019Blue=#FFFF943D, VS2019Dark=#FFF89942, VS2019Light=#FFFDC252'}" />
        <SolidColorBrush x:Key="GreenColor" Color="{dx:LWColor 'VS2019Blue=#FF75B874, VS2019Dark=#FF7AC142, VS2019Light=#FF73C594'}" />
        <SolidColorBrush x:Key="BlueColor" Color="{dx:LWColor 'VS2019Blue=#FF62AFE3, VS2019Dark=#FF5680C0, VS2019Light=#FF65B8E7'}" />
        <dx:WpfSvgPalette.States>
            <dx:WpfSvgPalette x:Key="Hover">
                <SolidColorBrush x:Key="BlackColor" Color="{dx:LWColor 'VS2019Blue=#FF546177, VS2019Dark=#FFD6D6D6, VS2019Light=#FF646464'}" />
                <SolidColorBrush x:Key="WhiteColor" Color="{dx:LWColor 'VS2019Blue=#FFCCD5F0, VS2019Dark=#FF2D2D30, VS2019Light=#FF007ACC'}" />
                <SolidColorBrush x:Key="RedColor" Color="{dx:LWColor 'VS2019Blue=#FFED665A, VS2019Dark=#FFF26543, VS2019Light=#FFF37454'}" />
                <SolidColorBrush x:Key="YellowColor" Color="{dx:LWColor 'VS2019Blue=#FFFF943D, VS2019Dark=#FFF89942, VS2019Light=#FFFDC252'}" />
                <SolidColorBrush x:Key="GreenColor" Color="{dx:LWColor 'VS2019Blue=#FF75B874, VS2019Dark=#FF7AC142, VS2019Light=#FF73C594'}" />
                <SolidColorBrush x:Key="BlueColor" Color="{dx:LWColor 'VS2019Blue=#FF62AFE3, VS2019Dark=#FF5680C0, VS2019Light=#FF65B8E7'}" />
            </dx:WpfSvgPalette>
            <dx:WpfSvgPalette x:Key="Pressed">
                <SolidColorBrush x:Key="BlackColor" Color="{dx:LWColor 'VS2019Blue=#FF546177, VS2019Dark=#FFD6D6D6, VS2019Light=#FFFFFFFF'}" />
                <SolidColorBrush x:Key="WhiteColor" Color="{dx:LWColor 'VS2019Blue=#FFCCD5F0, VS2019Dark=#FF007ACC, VS2019Light=#FF007ACC'}" />
                <SolidColorBrush x:Key="RedColor" Color="{dx:LWColor 'VS2019Blue=#FFED665A, VS2019Dark=#FFF26C7E, VS2019Light=#FFF37454'}" />
                <SolidColorBrush x:Key="YellowColor" Color="{dx:LWColor 'VS2019Blue=#FFFF943D, VS2019Dark=#FFF79B7F, VS2019Light=#FFFDC252'}" />
                <SolidColorBrush x:Key="GreenColor" Color="{dx:LWColor 'VS2019Blue=#FF75B874, VS2019Dark=#FF6FC38A, VS2019Light=#FF73C594'}" />
                <SolidColorBrush x:Key="BlueColor" Color="{dx:LWColor 'VS2019Blue=#FF62AFE3, VS2019Dark=#FF42B4E8, VS2019Light=#FF65B8E7'}" />
            </dx:WpfSvgPalette>
        </dx:WpfSvgPalette.States>
    </dx:WpfSvgPalette>
    <dx:WpfSvgPalette x:Key="{dxrt:LWKey RibbonSvgPalette.SvgPaletteInRibbonToolbarFooter}">
        <SolidColorBrush x:Key="BlackColor" Color="{dx:LWColor 'VS2019Blue=#FF546177, VS2019Dark=#FFD6D6D6, VS2019Light=#FF646464'}" />
        <SolidColorBrush x:Key="WhiteColor" Color="{dx:LWColor 'VS2019Blue=#FFE3E8EF, VS2019Dark=#FF2D2D30, VS2019Light=#FFFFFFFF'}" />
        <SolidColorBrush x:Key="RedColor" Color="{dx:LWColor 'VS2019Blue=#FFBB5237, VS2019Dark=#FFF26543, VS2019Light=#FFCF5031'}" />
        <SolidColorBrush x:Key="YellowColor" Color="{dx:LWColor 'VS2019Blue=#FFDA955B, VS2019Dark=#FFF89942, VS2019Light=#FFCF9930'}" />
        <SolidColorBrush x:Key="GreenColor" Color="{dx:LWColor 'VS2019Blue=#FF638F66, VS2019Dark=#FF7AC142, VS2019Light=#FF2EB072'}" />
        <SolidColorBrush x:Key="BlueColor" Color="{dx:LWColor 'VS2019Blue=#FF5C90B9, VS2019Dark=#FF5680C0, VS2019Light=#FF3F72B8'}" />
        <dx:WpfSvgPalette.States>
            <dx:WpfSvgPalette x:Key="Hover">
                <SolidColorBrush x:Key="BlackColor" Color="{dx:LWColor 'VS2019Blue=#FF546177, VS2019Dark=#FFD6D6D6, VS2019Light=#FF646464'}" />
                <SolidColorBrush x:Key="WhiteColor" Color="{dx:LWColor 'VS2019Blue=#FFE3E8EF, VS2019Dark=#FF2D2D30, VS2019Light=#FFFFFFFF'}" />
                <SolidColorBrush x:Key="RedColor" Color="{dx:LWColor 'VS2019Blue=#FFBB5237, VS2019Dark=#FFF26543, VS2019Light=#FFCF5031'}" />
                <SolidColorBrush x:Key="YellowColor" Color="{dx:LWColor 'VS2019Blue=#FFDA955B, VS2019Dark=#FFF89942, VS2019Light=#FFCF9930'}" />
                <SolidColorBrush x:Key="GreenColor" Color="{dx:LWColor 'VS2019Blue=#FF638F66, VS2019Dark=#FF7AC142, VS2019Light=#FF2EB072'}" />
                <SolidColorBrush x:Key="BlueColor" Color="{dx:LWColor 'VS2019Blue=#FF5C90B9, VS2019Dark=#FF5680C0, VS2019Light=#FF3F72B8'}" />
            </dx:WpfSvgPalette>
            <dx:WpfSvgPalette x:Key="Pressed">
                <SolidColorBrush x:Key="BlackColor" Color="{dx:LWColor 'VS2019Blue=#FF546177, VS2019Dark=#FFFFFFFF, VS2019Light=#FFFFFFFF'}" />
                <SolidColorBrush x:Key="WhiteColor" Color="{dx:LWColor 'VS2019Blue=#FFE3E8EF, VS2019Dark=#FF007ACC, VS2019Light=#FF007ACC'}" />
                <SolidColorBrush x:Key="RedColor" Color="{dx:LWColor 'VS2019Blue=#FFBB5237, VS2019Dark=#FFF26C7E, VS2019Light=#FFF37453'}" />
                <SolidColorBrush x:Key="YellowColor" Color="{dx:LWColor 'VS2019Blue=#FFDA955B, VS2019Dark=#FFF79B7F, VS2019Light=#FFFDC252'}" />
                <SolidColorBrush x:Key="GreenColor" Color="{dx:LWColor 'VS2019Blue=#FF638F66, VS2019Dark=#FF6FC38A, VS2019Light=#FF73C594'}" />
                <SolidColorBrush x:Key="BlueColor" Color="{dx:LWColor 'VS2019Blue=#FF5C90B9, VS2019Dark=#FF42B4E8, VS2019Light=#FF65B8E7'}" />
            </dx:WpfSvgPalette>
        </dx:WpfSvgPalette.States>
    </dx:WpfSvgPalette>
    <SolidColorBrush x:Key="{dxrt:LWKey Ribbon.ApplicationMenuRightPaneForeground}" Color="{StaticResource Color.Foreground}" />
    <SolidColorBrush x:Key="{dxrt:LWKey Backstage.Foreground}" Color="{StaticResource Color.Foreground}" />
    <!--<dxri:RibbonPageCategoryCornerRadiusConverter x:Key="CornerRadiusConverter" />-->
    <dx:ColorOverlayConverter x:Key="ColorOverlayConverter" />
    <dxr:RibbonStyle x:Key="{dxrt:LWKey Ribbon.RibbonStyle}">Office2019</dxr:RibbonStyle>
    <sys:Double x:Key="{dxrt:LWKey Ribbon.PageCaptionMinWidth}">40</sys:Double>
    <ControlTemplate x:Key="{dxrt:LWKey Ribbon.FooterQuickAccessToolbarContainerTemplate}" TargetType="ContentControl">
        <dx:DXBorder Background="{dx:LWBrush 'VS2019Blue=Brush.ControlDark.Background, VS2019Dark=Brush.Window.Background, VS2019Light=Brush.Window.Background'}">
            <ContentPresenter HorizontalAlignment="Left" />
        </dx:DXBorder>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxrt:LWKey Ribbon.MinimizationButtonTemplate}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
        <Grid x:Name="Root">
            <dx:DXBorder x:Name="IsDefault" Background="{StaticResource Brush.Button.Background}" CornerRadius="62" />
            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                <Path x:Name="Collapsed" Opacity="0" Style="{StaticResource UIShape.Up}" />
                <Path x:Name="Expanded" Opacity="0" Style="{StaticResource UIShape.Down}" />
            </Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Hover">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.HoverBackground, VS2019Blue=Color.Window.HeaderButton.HoverBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="Collapsed" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.HoverForeground, VS2019Blue=Color.SelectionForeground, VS2019Dark=Color.Backstage.Focused'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="Expanded" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.HoverForeground, VS2019Blue=Color.SelectionForeground, VS2019Dark=Color.Backstage.Focused'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.SelectionBackground, VS2019Blue=Color.Backstage.SelectionBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="Collapsed" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="{dx:LWColor 'VS2019Blue=Color.SelectionForeground, VS2019Dark=Color.Backstage.Focused, VS2019Light=Color.Backstage.Foreground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="Expanded" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="{dx:LWColor 'VS2019Blue=Color.SelectionForeground, VS2019Dark=Color.Backstage.Focused, VS2019Light=Color.Backstage.Foreground'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{StaticResource Color.HoverBackground}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="Collapsed" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="{dx:LWColor 'VS2019Blue=Color.SelectionForeground, VS2019Dark=Color.Backstage.Focused, VS2019Light=Color.Backstage.Foreground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="Expanded" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="{dx:LWColor 'VS2019Blue=Color.SelectionForeground, VS2019Dark=Color.Backstage.Focused, VS2019Light=Color.Backstage.Foreground'}" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckedStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Expanded" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Collapsed" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxrt:LWKey Ribbon.MinimizationButtonTemplateInPageContent}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
        <Grid x:Name="Root">
            <dx:DXBorder x:Name="IsDefault" Background="{StaticResource Brush.Button.Background}" CornerRadius="62" />
            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                <Path x:Name="Collapsed" Opacity="0" Style="{StaticResource UIShape.Up}" />
                <Path x:Name="Expanded" Opacity="0" Style="{StaticResource UIShape.Down}" />
            </Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Hover">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{StaticResource Color.HoverBackground}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="Collapsed" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.Backstage.Focused, VS2019Blue=Color.SelectionForeground, VS2019Light=Color.Backstage.Foreground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="Expanded" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.Backstage.Focused, VS2019Blue=Color.SelectionForeground, VS2019Light=Color.Backstage.Foreground'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{StaticResource Color.SelectionBackground}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="Collapsed" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="{dx:LWColor 'VS2019Blue=Color.SelectionForeground, VS2019Dark=Color.Backstage.Focused, VS2019Light=Color.Backstage.Foreground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="Expanded" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="{dx:LWColor 'VS2019Blue=Color.SelectionForeground, VS2019Dark=Color.Backstage.Focused, VS2019Light=Color.Backstage.Foreground'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{StaticResource Color.HoverBackground}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="Collapsed" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="{dx:LWColor 'VS2019Blue=Color.SelectionForeground, VS2019Dark=Color.Backstage.Focused, VS2019Light=Color.Backstage.Foreground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="Expanded" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="{dx:LWColor 'VS2019Blue=Color.SelectionForeground, VS2019Dark=Color.Backstage.Focused, VS2019Light=Color.Backstage.Foreground'}" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckedStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Expanded" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Collapsed" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(dxr:RibbonControl.Ribbon).IsMinimized, RelativeSource={RelativeSource Self}}" Value="True" />
                    <Condition Binding="{Binding Path=(dxr:RibbonControl.Ribbon).AllowSimplifiedRibbon, RelativeSource={RelativeSource Self}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Style" TargetName="Expanded" Value="{StaticResource UIShape.Unpinned}" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="{dxrt:LWKey Ribbon.MinimizationButtonStyle}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
        <Setter Property="Height" Value="16" />
        <Setter Property="Margin" Value="8" />
        <Setter Property="Width" Value="16" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Margin" Value="0" />
                <Setter Property="MinHeight" Value="44" />
                <Setter Property="MinWidth" Value="44" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxrt:LWKey Ribbon.MinimizationButtonStyleInPageContent}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
        <Setter Property="Height" Value="16" />
        <Setter Property="Margin" Value="8" />
        <Setter Property="Width" Value="16" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Margin" Value="0" />
                <Setter Property="MinHeight" Value="44" />
                <Setter Property="MinWidth" Value="44" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="{dxrt:LWKey RibbonStatusBar.LeftPartTemplate}" TargetType="{x:Type ContentControl}">
        <dx:DXBorder Background="{StaticResource Brush.Backstage.Window.Background}">
            <ContentPresenter Margin="1,1,0,0" />
        </dx:DXBorder>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxrt:LWKey RibbonStatusBar.RightPartTemplate}" TargetType="{x:Type ContentControl}">
        <dx:DXBorder Background="{StaticResource Brush.Backstage.Window.Background}">
            <ContentPresenter Margin="1,1,0,0" />
        </dx:DXBorder>
    </ControlTemplate>
    <Style x:Key="{dxrt:LWKey Ribbon.IconAndCaptionAreaStyle}" TargetType="{x:Type ContentControl}" />
    <Style x:Key="{dxrt:LWKey Ribbon.FooterQuickAccessToolbarContainerStyle}" TargetType="ContentControl">
        <Setter Property="Margin" Value="1,1,0,0" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" Value="44" />
                <Setter Property="MinWidth" Value="44" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <DataTemplate x:Key="{dxrt:LWKey RibbonPage.DefaultCaptionContentTemplate}">
        <TextBlock Text="{Binding}" />
    </DataTemplate>
    <Style x:Key="{dxrt:LWKey Ribbon.NormalPageCaptionTextStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="Foreground" Value="{StaticResource Brush.Backstage.Foreground}" />
    </Style>
    <Style x:Key="{dxrt:LWKey Ribbon.HoverPageCaptionTextStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="Foreground" Value="{dx:LWBrush 'VS2019Blue=Brush.HoverForeground, VS2019Dark=Brush.Focused, VS2019Light=Brush.Backstage.Foreground'}" />
    </Style>
    <Style x:Key="{dxrt:LWKey Ribbon.SelectedPageCaptionTextStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="Foreground" Value="{dx:LWBrush 'VS2019Blue=Brush.Foreground, VS2019Dark=Brush.Focused, VS2019Light=Brush.Foreground'}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Page.PageCategory.IsDefault}" Value="False">
                <Setter Property="Foreground" Value="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorOverlayConverter}, ConverterParameter=#FF646464}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxrt:LWKey Ribbon.GroupCaptionTextStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="Foreground" Value="{StaticResource Brush.Foreground}" />
    </Style>
    <ControlTemplate x:Key="{dxrt:LWKey ApplicationButton.BorderTemplate2010}" TargetType="{x:Type ContentControl}">
        <Grid x:Name="Root">
            <dx:DXBorder x:Name="IsDefault" Background="{StaticResource Brush.Backstage.Window.Background}" />
            <ContentPresenter x:Name="Content" Margin="14,7,14,7" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Hover">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{StaticResource Color.Backstage.HoverBackground}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{StaticResource Color.Backstage.SelectionBackground}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{StaticResource Color.Backstage.HoverBackground}" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Margin" TargetName="Content" Value="14" />
                <Setter Property="MinHeight" TargetName="Root" Value="44" />
                <Setter Property="MinWidth" TargetName="Root" Value="44" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxrt:LWKey ApplicationButton.BorderTemplate2010InPopup}" TargetType="{x:Type ContentControl}">
        <Grid x:Name="Root">
            <dx:DXBorder x:Name="IsDefault" Background="{StaticResource Brush.Backstage.SelectionBackground}" />
            <ContentPresenter x:Name="Content" Margin="14,7,14,7" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Margin" TargetName="Content" Value="14" />
                <Setter Property="MinHeight" TargetName="Root" Value="44" />
                <Setter Property="MinWidth" TargetName="Root" Value="44" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxrt:LWKey ApplicationButton.BorderTemplateOfficeSlim}" TargetType="{x:Type ContentControl}">
        <Grid x:Name="Root">
            <dx:DXBorder x:Name="IsDefault" Background="{StaticResource Brush.Backstage.SelectionBackground}" />
            <ContentPresenter x:Name="Content" Margin="14,7,14,7" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Hover">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{StaticResource Color.Backstage.HoverBackground}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{StaticResource Color.Backstage.SelectionBackground}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{StaticResource Color.Backstage.HoverBackground}" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Margin" TargetName="Content" Value="14" />
                <Setter Property="MinHeight" TargetName="Root" Value="44" />
                <Setter Property="MinWidth" TargetName="Root" Value="44" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxrt:LWKey ApplicationButton.BorderTemplateOfficeSlimInPopup}" TargetType="{x:Type ContentControl}">
        <Grid x:Name="Root">
            <dx:DXBorder x:Name="IsDefault" Background="{StaticResource Brush.Border}" />
            <ContentPresenter x:Name="Content" Margin="14,7,14,7" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Margin" TargetName="Content" Value="14" />
                <Setter Property="MinHeight" TargetName="Root" Value="44" />
                <Setter Property="MinWidth" TargetName="Root" Value="44" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="{dxrt:LWKey ApplicationButton.StyleTabletOffice}" TargetType="{x:Type ContentControl}">
        <Setter Property="Height" Value="32" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Width" Value="32" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Margin" Value="0" />
                <Setter Property="MinHeight" Value="44" />
                <Setter Property="MinWidth" Value="44" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxrt:LWKey ApplicationButton.StyleTabletOfficeInPopup}" BasedOn="{StaticResource {dxrt:LWKey ApplicationButton.StyleTabletOffice}}" TargetType="{x:Type ContentControl}" />
    <Style x:Key="{dxrt:LWKey ApplicationButton.Style2007}" TargetType="{x:Type ContentControl}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Margin" Value="14" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="MinWidth" Value="36" />
        <Setter Property="MinHeight" Value="36" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Margin" Value="22" />
                <Setter Property="MinHeight" Value="44" />
                <Setter Property="MinWidth" Value="44" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxrt:LWKey ApplicationButton.Style2007InPopup}" BasedOn="{StaticResource {dxrt:LWKey ApplicationButton.Style2007}}" TargetType="{x:Type ContentControl}" />
    <Style x:Key="{dxrt:LWKey ApplicationButton.Style2007InAeroWindow}" BasedOn="{StaticResource {dxrt:LWKey ApplicationButton.Style2007}}" TargetType="{x:Type ContentControl}" />
    <Style x:Key="{dxrt:LWKey ApplicationButton.Style2010}" TargetType="{x:Type ContentControl}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Margin" Value="0,0,1,0" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
    </Style>
    <Style x:Key="{dxrt:LWKey ApplicationButton.Style2010InPopup}" BasedOn="{StaticResource {dxrt:LWKey ApplicationButton.Style2010}}" TargetType="{x:Type ContentControl}" />
    <Style x:Key="{dxrt:LWKey ApplicationButton.StyleOfficeSlim}" TargetType="{x:Type ContentControl}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Margin" Value="0,0,1,0" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
    </Style>
    <Style x:Key="{dxrt:LWKey ApplicationButton.StyleOfficeSlimInPopup}" BasedOn="{StaticResource {dxrt:LWKey ApplicationButton.StyleOfficeSlim}}" TargetType="{x:Type ContentControl}" />
    <ControlTemplate x:Key="{dxrt:LWKey ApplicationButton.BorderTemplateTablet}" TargetType="{x:Type ContentControl}">
        <Grid x:Name="Root" Background="Transparent">
            <dx:DXBorder x:Name="IsDefault" Background="{StaticResource Brush.Backstage.Window.Background}" />
            <Path x:Name="path" Fill="{StaticResource Brush.Backstage.Foreground}" Style="{StaticResource UIShape.Menu}" />
            <dx:DXImage
                x:Name="image"
                HorizontalAlignment="Center"
                Source="{Binding Path=(dxr:RibbonControl.Ribbon).ActualApplicationButtonSmallIcon, RelativeSource={RelativeSource Self}}"
                Stretch="None"
                VerticalAlignment="Center"
                Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(dxr:RibbonControl.Ribbon).ActualApplicationButtonSmallIcon, Converter={dxmvvm:ObjectToBooleanConverter}}" Value="True">
                <Setter Property="Visibility" TargetName="image" Value="Visible" />
                <Setter Property="Visibility" TargetName="path" Value="Collapsed" />
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="IsDefault" Value="{StaticResource Brush.Backstage.HoverBackground}" />
                <Setter Property="Opacity" TargetName="image" Value="1" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" TargetName="Root" Value="44" />
                <Setter Property="MinWidth" TargetName="Root" Value="44" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxrt:LWKey ApplicationButton.BorderTemplateTabletInPopup}" TargetType="{x:Type ContentControl}">
        <Grid x:Name="Root" Background="Transparent">
            <dx:DXBorder x:Name="IsDefault" Background="{StaticResource Brush.Backstage.SelectionBackground}" CornerRadius="62" />
            <Path x:Name="path" Fill="{StaticResource Brush.Backstage.Foreground}" Style="{StaticResource UIShape.Menu}" />
            <dx:DXImage
                x:Name="image"
                HorizontalAlignment="Center"
                Source="{Binding Path=(dxr:RibbonControl.Ribbon).ActualApplicationButtonSmallIcon, RelativeSource={RelativeSource Self}}"
                Stretch="None"
                VerticalAlignment="Center"
                Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(dxr:RibbonControl.Ribbon).ActualApplicationButtonSmallIcon, Converter={dxmvvm:ObjectToBooleanConverter}}" Value="True">
                <Setter Property="Visibility" TargetName="image" Value="Visible" />
                <Setter Property="Visibility" TargetName="path" Value="Collapsed" />
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="IsDefault" Value="{StaticResource Brush.Backstage.HoverBackground}" />
                <Setter Property="Opacity" TargetName="image" Value="1" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" TargetName="Root" Value="44" />
                <Setter Property="MinWidth" TargetName="Root" Value="44" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="{dxrt:LWKey Backstage.BackstageViewBackGlyphTemplate}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Margin" Value="0,12,0,12" />
        <Setter Property="Template" Value="{StaticResource RibbonBackstageButton}" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="dxr:BackstageViewContentHost.AnimationTime" Value="00:00:00.2" />
    </Style>
    <ControlTemplate x:Key="{dxrt:LWKey Backstage.HeaderAndButtonsBackground}" />
    <ControlTemplate x:Key="{dxrt:LWKey Backstage.LeftPartBackground}" TargetType="{x:Type Control}">
        <dx:DXBorder
            Background="{StaticResource Brush.Backstage.Window.Background}"
            HorizontalAlignment="Stretch"
            MinWidth="128"
            VerticalAlignment="Stretch" />
    </ControlTemplate>
    <Style x:Key="{dxrt:LWKey Backstage.ControlBoxContainerStyle}" x:Shared="False" TargetType="{x:Type dxri:RibbonControlBoxContainer}">
        <Setter Property="Margin" Value="-1" />
        <Setter Property="dx:HeaderItemControl.CloseTemplateProvider">
            <Setter.Value>
                <dx:CloseHeaderItemControlTemplateProvider
                    CloseGlyphTemplate="{DynamicResource {dxt:LWKey FloatingContainer.FloatingContainerCloseButtonGlyph}}"
                    HeaderItemControlStyle="{DynamicResource {dxt:LWKey RibbonHeaderItems.RibbonHeaderCloseButtonStyle}}"
                    MouseOverBackgroundTemplate="{DynamicResource {dxt:LWKey FloatingContainer.FloatingContainerCloseButtonBackgroundMouseOverState}}"
                    MouseOverForeground="{DynamicResource {dxt:LWKey FloatingContainer.FloatingContainerCloseButtonForegroundMouseOverState}}"
                    NormalBackgroundTemplate="{DynamicResource {dxt:LWKey FloatingContainer.FloatingContainerCloseButtonBackgroundNormalState}}"
                    NormalForeground="{DynamicResource {dxt:LWKey FloatingContainer.FloatingContainerCloseButtonForegroundNormalState}}"
                    PressedBackgroundTemplate="{DynamicResource {dxt:LWKey FloatingContainer.FloatingContainerCloseButtonBackgroundPressedState}}"
                    PressedForeground="{DynamicResource {dxt:LWKey FloatingContainer.FloatingContainerCloseButtonForegroundPressedState}}" />
            </Setter.Value>
        </Setter>
        <Setter Property="dx:HeaderItemControl.CommonTemplateProvider">
            <Setter.Value>
                <dx:CommonHeaderItemControlTemplateProvider
                    HeaderItemControlStyle="{DynamicResource {dxt:LWKey RibbonHeaderItems.RibbonHeaderButtonStyle}}"
                    MaximizeGlyphTemplate="{DynamicResource {dxt:LWKey FloatingContainer.FloatingContainerMaximizeButtonGlyph}}"
                    MinimizeGlyphTemplate="{DynamicResource {dxt:LWKey FloatingContainer.FloatingContainerMinimizeButtonGlyph}}"
                    MouseOverBackgroundTemplate="{DynamicResource {dxt:LWKey FloatingContainer.FloatingContainerDefaultButtonBackgroundMouseOverState}}"
                    MouseOverForeground="{DynamicResource {dxt:LWKey FloatingContainer.FloatingContainerDefaultButtonForegroundMouseOverState}}"
                    NormalBackgroundTemplate="{DynamicResource {dxt:LWKey FloatingContainer.FloatingContainerDefaultButtonBackgroundNormalState}}"
                    NormalForeground="{DynamicResource {dxt:LWKey FloatingContainer.FloatingContainerDefaultButtonForegroundNormalState}}"
                    PressedBackgroundTemplate="{DynamicResource {dxt:LWKey FloatingContainer.FloatingContainerDefaultButtonBackgroundPressedState}}"
                    PressedForeground="{DynamicResource {dxt:LWKey FloatingContainer.FloatingContainerDefaultButtonForegroundPressedState}}"
                    RestoreGlyphTemplate="{DynamicResource {dxt:LWKey FloatingContainer.FloatingContainerRestoreButtonGlyph}}" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxrt:LWKey Backstage.HeaderPresenterStyle}" TargetType="{x:Type dxri:BackstageViewHeaderPresenter}">
        <Setter Property="Margin" Value="0,8,0,0" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=BackstageViewControl.RibbonStyle, RelativeSource={RelativeSource Self}}" Value="Office2007">
                <Setter Property="Margin" Value="0,9,0,0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="{dxrt:LWKey Backstage.BackgroundTemplate}" TargetType="{x:Type ContentControl}">
        <dx:DXBorder Background="{StaticResource Brush.Window.Background}" />
    </ControlTemplate>
    <ControlTemplate x:Key="{dxrt:LWKey Backstage.TabPaneTemplate}" TargetType="{x:Type ContentControl}">
        <ContentPresenter />
    </ControlTemplate>
    <ControlTemplate x:Key="{dxrt:LWKey Backstage.ControlPaneTemplate}" TargetType="{x:Type ContentControl}">
        <ContentPresenter />
    </ControlTemplate>
    <Style x:Key="{dxrt:LWKey Backstage.BackgroundGlyphStyle}" TargetType="{x:Type Image}">
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Stretch" Value="None" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
    </Style>
    <Style x:Key="{dxrt:LWKey Backstage.BackgroundStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey Backstage.BackgroundTemplate}}" />
    </Style>
    <Style x:Key="{dxrt:LWKey Backstage.TabPaneStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="Margin" Value="0,0,0,16" />
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey Backstage.TabPaneTemplate}}" />
    </Style>
    <Style x:Key="{dxrt:LWKey Backstage.ControlPaneStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey Backstage.ControlPaneTemplate}}" />
    </Style>
    <Style x:Key="{dxrt:LWKey Backstage.ItemsPresenterStyle}" TargetType="{x:Type ItemsPresenter}">
        <Setter Property="Margin" Value="1" />
    </Style>
    <ControlTemplate x:Key="{dxrt:LWKey RibbonPageCategory.HighlightedHeadersBackgroundTemplate}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
        <dx:DXBorder x:Name="PART_BackgroundBorder" Background="{Binding Converter={StaticResource ColorOverlayConverter}, ConverterParameter=#FF808080}" />
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PageCategory.(dxi:AppearanceOptions.HasBackground)}" Value="True">
                <Setter Property="Background" TargetName="PART_BackgroundBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PageCategory.(dxi:AppearanceOptions.Background)}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PageCategory.(dxi:AppearanceOptions.HasCornerRadius)}" Value="True">
                <Setter Property="CornerRadius" TargetName="PART_BackgroundBorder" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:RibbonPageCategoryControl}}, Path=PageCategory.(dxi:AppearanceOptions.CornerRadius), Converter={StaticResource CornerRadiusConverter}, ConverterParameter=Bottom}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxrt:LWKey RibbonPageGroup.HighlightedBorderTemplate}" TargetType="{x:Type ContentControl}">
        <Grid x:Name="Root">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <ContentPresenter Grid.Column="0" />
            <TextBlock
                Name="PART_DesignTimeCaption"
                Grid.Column="1"
                Text="[PageGroup]"
                Visibility="Collapsed" />
            <dx:DXBorder
                x:Name="Separator"
                Grid.Column="2"
                Background="{StaticResource Brush.Border}"
                SnapsToDevicePixels="True"
                Width="1" />
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IsDesignTimeCaptionVisible, RelativeSource={RelativeSource AncestorType=dxr:RibbonPageGroupControl}}" Value="True">
                <Setter Property="Visibility" TargetName="PART_DesignTimeCaption" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsSeparatorVisible, RelativeSource={RelativeSource AncestorType=dxr:RibbonPageGroupControl}}" Value="False">
                <Setter Property="Visibility" TargetName="Separator" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=PageGroup.(dxi:AppearanceOptions.HasMargin), RelativeSource={RelativeSource AncestorType=dxr:RibbonPageGroupControl}}" Value="True">
                <Setter Property="Visibility" TargetName="Separator" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=PageGroup.(dxi:AppearanceOptions.HasPadding), RelativeSource={RelativeSource AncestorType=dxr:RibbonPageGroupControl}}" Value="True">
                <Setter Property="Visibility" TargetName="Separator" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=PageGroup.(dxi:AppearanceOptions.HasBorderBrush), RelativeSource={RelativeSource AncestorType=dxr:RibbonPageGroupControl}}" Value="True">
                <Setter Property="Visibility" TargetName="Separator" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=PageGroup.(dxi:AppearanceOptions.HasBorderThickness), RelativeSource={RelativeSource AncestorType=dxr:RibbonPageGroupControl}}" Value="True">
                <Setter Property="Visibility" TargetName="Separator" Value="Collapsed" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="{dxrt:LWKey RibbonPage.SelectedPageContainerStyle}" TargetType="{x:Type ContentControl}" />
    <ControlTemplate x:Key="{dxrt:LWKey RibbonPageCategory.HeaderBackgroundTemplate}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
        <Grid x:Name="Root" MinHeight="32">
            <dx:DXBorder x:Name="IsDefault" Background="{Binding Path=Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorOverlayConverter}, ConverterParameter=#FF808080}" />
            <ContentPresenter x:Name="Content" Margin="8" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="Placement">
                    <VisualState x:Name="RibbonWindow" />
                    <VisualState x:Name="Standalone" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Category.(dxi:AppearanceOptions.HasBackground)}" Value="True">
                <Setter Property="Background" TargetName="IsDefault" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplatedParent.Category.(dxi:AppearanceOptions.Background)}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Category.(dxi:AppearanceOptions.HasCornerRadius)}" Value="True">
                <Setter Property="CornerRadius" TargetName="IsDefault" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplatedParent.Category.(dxi:AppearanceOptions.CornerRadius), Converter={StaticResource CornerRadiusConverter}, ConverterParameter=Top}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="{dxrt:LWKey Ribbon.SelectionIndicatorStyle}" TargetType="{x:Type dxi:SelectionIndicatorDecorator}" />
    <ControlTemplate x:Key="{dxrt:LWKey RibbonPageGroup.BorderTemplate}" TargetType="{x:Type ContentControl}">
        <Grid x:Name="Root">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <ContentPresenter Grid.Column="0" />
            <TextBlock
                Name="PART_DesignTimeCaption"
                Grid.Column="1"
                Text="[PageGroup]"
                Visibility="Collapsed" />
            <dx:DXBorder
                x:Name="Separator"
                Grid.Column="2"
                Background="{StaticResource Brush.Border}"
                SnapsToDevicePixels="True"
                Width="1" />
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IsDesignTimeCaptionVisible, RelativeSource={RelativeSource AncestorType=dxr:RibbonPageGroupControl}}" Value="True">
                <Setter Property="Visibility" TargetName="PART_DesignTimeCaption" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsSeparatorVisible, RelativeSource={RelativeSource AncestorType=dxr:RibbonPageGroupControl}}" Value="False">
                <Setter Property="Visibility" TargetName="Separator" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=PageGroup.(dxi:AppearanceOptions.HasMargin), RelativeSource={RelativeSource AncestorType=dxr:RibbonPageGroupControl}}" Value="True">
                <Setter Property="Visibility" TargetName="Separator" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=PageGroup.(dxi:AppearanceOptions.HasPadding), RelativeSource={RelativeSource AncestorType=dxr:RibbonPageGroupControl}}" Value="True">
                <Setter Property="Visibility" TargetName="Separator" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=PageGroup.(dxi:AppearanceOptions.HasBorderBrush), RelativeSource={RelativeSource AncestorType=dxr:RibbonPageGroupControl}}" Value="True">
                <Setter Property="Visibility" TargetName="Separator" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=PageGroup.(dxi:AppearanceOptions.HasBorderThickness), RelativeSource={RelativeSource AncestorType=dxr:RibbonPageGroupControl}}" Value="True">
                <Setter Property="Visibility" TargetName="Separator" Value="Collapsed" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxrt:LWKey RibbonPageGroup.CaptionButtonTemplate}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
        <Grid x:Name="Root">
            <dx:DXBorder x:Name="IsDefault" Background="Transparent" />
            <Path
                x:Name="Content"
                Fill="{StaticResource Brush.Foreground}"
                HorizontalAlignment="Right"
                Margin="3"
                Style="{StaticResource UIShape.RightDown}"
                VerticalAlignment="Bottom" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Hover">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.HoverBackground, VS2019Blue=Color.ControlDark.HoverBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="{StaticResource Color.Foreground}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.SelectionBackground, VS2019Blue=Color.ControlDark.SelectionBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="{dx:LWColor 'Color.SelectionForeground, VS2019Dark=Color.Backstage.Foreground, VS2019Light=Color.Backstage.Foreground'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{StaticResource Color.SelectionBackground}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="{StaticResource Color.Backstage.Foreground}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.38" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>
    <Style x:Key="{dxrt:LWKey RibbonPageGroup.CaptionButtonStyle}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
        <Setter Property="Height" Value="16" />
        <Setter Property="Margin" Value="3" />
        <Setter Property="Width" Value="16" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Margin" Value="0" />
                <Setter Property="MinHeight" Value="44" />
                <Setter Property="MinWidth" Value="44" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="{dxrt:LWKey InRibbonGallery.GalleryItemBorderTemplate}" TargetType="{x:Type dxb:ItemBorderControl}">
        <Grid x:Name="Root" Background="Transparent">
            <dx:DXBorder
                x:Name="IsDefault"
                Background="Transparent"
                BorderBrush="Transparent"
                BorderThickness="1" />
            <ContentPresenter />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="State">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Hover">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'VS2019Blue=Color.ControlLight.HoverBackground, VS2019Dark=Color.HoverBackground, VS2019Light=Color.HoverBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'VS2019Blue=Color.ControlLight.HoverBorder, VS2019Dark=Color.HoverBackground, VS2019Light=Color.HoverBackground'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'VS2019Blue=Color.ControlLight.SelectionBackground, VS2019Dark=Color.SelectionBackground, VS2019Light=Color.SelectionBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'VS2019Blue=Color.ControlLight.SelectionBorder, VS2019Dark=Color.HoverBackground, VS2019Light=Color.HoverBackground'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'VS2019Blue=Color.ControlLight.SelectionBackground, VS2019Dark=Color.SelectionBackground, VS2019Light=Color.SelectionBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'VS2019Blue=Color.ControlLight.SelectionBorder, VS2019Dark=Color.HoverBackground, VS2019Light=Color.HoverBackground'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="HoverChecked">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'VS2019Blue=Color.ControlLight.SelectionBackground, VS2019Dark=Color.SelectionBackground, VS2019Light=Color.SelectionBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'VS2019Blue=Color.ControlLight.SelectionBorder, VS2019Dark=Color.HoverBackground, VS2019Light=Color.HoverBackground'}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{dx:LWColor 'VS2019Blue=Color.ControlDark.SelectionBackground, VS2019Dark=Color.HoverBackground, VS2019Light=Color.HoverBackground'}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{dx:LWColor 'VS2019Blue=Color.ControlDark.SelectionBorder, VS2019Dark=Color.HoverBackground, VS2019Light=Color.HoverBackground'}" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxrt:LWKey Ribbon.CollapsedSelectedPageBorderTemplate}" TargetType="ContentControl">
        <dx:DXBorder Background="{dx:LWBrush 'VS2019Blue=Brush.Backstage.Window.Background, VS2019Dark=Brush.Control.Background, VS2019Light=Brush.Backstage.Window.Background'}" Height="1" />
    </ControlTemplate>
    <Style x:Key="{dxrt:LWKey Ribbon.PageGroupsControlDropDownButtonStyle}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
        <Setter Property="Margin" Value="0,0,0,1" />
        <Setter Property="Padding" Value="10,0" />
    </Style>
</ResourceDictionary>