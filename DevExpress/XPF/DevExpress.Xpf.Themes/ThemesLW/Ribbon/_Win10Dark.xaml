<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
    xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon"
    xmlns:dxri="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/internal"
    xmlns:dxrt="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/themekeys"
    xmlns:dxbi="http://schemas.devexpress.com/winfx/2008/xaml/bars/internal"
    xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys"
    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm">
    <ResourceDictionary.MergedDictionaries>
        <dxi:ThemeResourceDictionary Path="Common/{ThemeName}/Common.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <!--#region Svg-->
    <!--#endregion Svg-->
    <!--#region UIPreset.xaml-->
    <!--#endregion UIPreset.xaml-->
    <!--#region RibbonFooterQuickAccessToolbar.xaml-->
    <!--#endregion RibbonFooterQuickAccessToolbar.xaml-->
    <!--#region RibbonMinimizationButton.xaml-->
    <!--#endregion RibbonMinimizationButton.xaml-->
    <!--#region RibbonStatusBar.xaml-->
    <!--#endregion RibbonStatusBar.xaml-->
    <!--#region RibbonStyles.xaml-->
    <!--#endregion RibbonStyles.xaml-->
    <!--#region ApplicationButton2010.xaml-->
    <!--#endregion ApplicationButton2010.xaml-->
    <!--#region ApplicationButtonSlim.xaml-->
    <!--#endregion ApplicationButtonSlim.xaml-->
    <!--#region ApplicationButtonStyles.xaml-->
    <!--#endregion ApplicationButtonStyles.xaml-->
    <!--#region ApplicationButtonTablet.xaml-->
    <!--#endregion ApplicationButtonTablet.xaml-->
    <!--#region BackstageView.xaml-->
    <!--#endregion BackstageView.xaml-->
    <!--#region HighlightedRibbonPageCaption.xaml-->
    <!--#endregion HighlightedRibbonPageCaption.xaml-->
    <!--#region HighlightedRibbonPageCategoryHeaderBackground.xaml-->
    <!--#endregion HighlightedRibbonPageCategoryHeaderBackground.xaml-->
    <!--#region HighlightedRibbonPageGroupBorder.xaml-->
    <!--#endregion HighlightedRibbonPageGroupBorder.xaml-->
    <!--#region RibbonPageControl.xaml-->
    <!--#endregion RibbonPageControl.xaml-->
    <!--#region RibbonPageCategoryHeaderBackground.xaml-->
    <!--#endregion RibbonPageCategoryHeaderBackground.xaml-->
    <!--#region RibbonPageGroupBorder.xaml-->
    <!--#endregion RibbonPageGroupBorder.xaml-->
    <!--#region RibbonPageGroupCaptionButton.xaml-->
    <!--#endregion RibbonPageGroupCaptionButton.xaml-->
    <!--#region InRibbonGalleryItem.xaml-->
    <!--#endregion InRibbonGalleryItem.xaml-->
    <!--#region DropDownGalleryPopup.xaml-->
    <!--#endregion DropDownGalleryPopup.xaml-->
    <!--#region RibbonSelectedPage.xaml-->
    <!--#endregion RibbonSelectedPage.xaml-->
    <!--#region HighlightedRibbonSelectedPage.xaml-->
    <!--#endregion HighlightedRibbonSelectedPage.xaml-->
    <!--#region RibbonPageCaption.xaml-->
    <ControlTemplate x:Key="{dxrt:LWKey RibbonPage.CaptionBackgroundTemplate}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
        <Grid x:Name="PART_Root">
            <dx:DXBorder x:Name="OuterBorder">
                <Grid>
                    <dx:DXBorder
                        x:Name="IsDefault"
                        Background="Transparent"
                        BorderThickness="1,1,1,0"
                        CornerRadius="{Binding ElementName=OuterBorder, Path=CornerRadius}"
                        Margin="0,0,0,-1" />
                    <dx:DXBorder
                        x:Name="LeftBorder"
                        Background="Transparent"
                        BorderBrush="{Binding ElementName=IsDefault, Path=Background}"
                        BorderThickness="1,0,0,0"
                        CornerRadius="{Binding ElementName=OuterBorder, Path=CornerRadius}"
                        Margin="0,0,0,-1"
                        Visibility="Hidden" />
                    <dx:DXBorder
                        x:Name="BackgroundBorder"
                        BorderBrush="Transparent"
                        BorderThickness="1,1,1,0"
                        CornerRadius="{Binding ElementName=OuterBorder, Path=CornerRadius}" />
                </Grid>
            </dx:DXBorder>
            <ContentPresenter x:Name="PART_ContentPresenter" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStateGroup">
                    <VisualState x:Name="NormalUnchecked">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Opacity" To="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="NormalChecked">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{StaticResource Color.Control.Background}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundBorder" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{StaticResource Color.Border}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="HoverUnchecked">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{StaticResource Color.HoverBackground}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundBorder" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{StaticResource Color.HoverBorder}" />
                            <DoubleAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(Opacity)" To="1" />
                            <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundBorder" Storyboard.TargetProperty="(Border.BorderBrush).(Opacity)" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="HoverChecked">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{StaticResource Color.Control.Background}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundBorder" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{StaticResource Color.Border}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="PressedChecked">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{StaticResource Color.Control.Background}" />
                            <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundBorder" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{StaticResource Color.Border}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{StaticResource Color.Backstage.HoverBackground}" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Page.(dxi:AppearanceOptions.HasBorderThickness)}" Value="True">
                <Setter Property="BorderThickness" TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplatedParent.Page.(dxi:AppearanceOptions.BorderThickness)}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Page.(dxi:AppearanceOptions.HasBorderBrush)}" Value="True">
                <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplatedParent.Page.(dxi:AppearanceOptions.BorderBrush)}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Page.(dxi:AppearanceOptions.HasBackground)}" Value="True">
                <Setter Property="Background" TargetName="BackgroundBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataContext.(dxi:AppearanceOptions.Background)}" />
                <Setter Property="Visibility" TargetName="IsDefault" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Page.(dxi:AppearanceOptions.HasCornerRadius)}" Value="True">
                <Setter Property="CornerRadius" TargetName="OuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplatedParent.Page.(dxi:AppearanceOptions.CornerRadius)}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Page.(dxi:AppearanceOptions.HasMargin)}" Value="True">
                <Setter Property="Margin" TargetName="PART_Root" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplatedParent.Page.(dxi:AppearanceOptions.Margin)}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Page.(dxi:AppearanceOptions.HasPadding)}" Value="True">
                <Setter Property="Margin" TargetName="PART_ContentPresenter" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplatedParent.Page.(dxi:AppearanceOptions.Padding)}" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=ShowApplicationButton, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:RibbonControl}}}" Value="False" />
                    <Condition Binding="{Binding Path=Index, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:RibbonPageHeaderControl}}}" Value="0" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="BorderThickness" TargetName="BackgroundBorder" Value="0,1,1,0" />
                    <Setter Property="Visibility" TargetName="LeftBorder" Value="Visible" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion RibbonPageCaption.xaml-->
    <!--#region RibbonOverflowButton.xaml-->
    <!--#endregion RibbonOverflowButton.xaml-->
</ResourceDictionary>