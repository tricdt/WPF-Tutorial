<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
    xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys"
    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
    xmlns:dxr="clr-namespace:DevExpress.Xpf.Ribbon;assembly=DevExpress.Xpf.Ribbon.v24.1"
    xmlns:dxri="clr-namespace:DevExpress.Xpf.Ribbon.Internal;assembly=DevExpress.Xpf.Ribbon.v24.1"
    xmlns:dxrt="clr-namespace:DevExpress.Xpf.Ribbon.Themes;assembly=DevExpress.Xpf.Ribbon.v24.1"
    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
    xmlns:native="http://schemas.devexpress.com/winfx/2008/xaml/bars/internal">

    <!--<ResourceDictionary.MergedDictionaries>
        <dxi:PaletteResourceDictionary />
    </ResourceDictionary.MergedDictionaries>-->
    
    <dx:BooleanToVisibilityConverter x:Key="boolToVisibilityConverter" Invert="False" />
    <dx:BooleanToVisibilityConverter x:Key="invertBoolToVisibilityConverter" Invert="True" />
    <dx:BoolToObjectConverter x:Key="boolToVerticalExpandConverter" FalseValue="0" TrueValue="150" />
    <dx:BoolToObjectConverter x:Key="boolToOpacityConverter" FalseValue="0" TrueValue="1" />
    <dx:BoolToVisibilityInverseConverter x:Key="boolToVisibilityInverseConverter" />
    <dx:BoolInverseConverter x:Key="inverseConverter" />
    <dxri:RibbonPageCategoryCornerRadiusConverter x:Key="cornerRadiusConverter" />
    <dxri:RibbonPageCategoryThicknessConverter x:Key="thicknessConverter" />
    <dx:NegativeConverter x:Key="negativeConverter" />
    <dxr:NegativeDoubleToThicknessTopConverter x:Key="negativeDoubleToThicknessTopConverter" />


    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Ribbon\DevExpress.Xpf.Ribbon\Themes\Fake.xaml-->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Ribbon\DevExpress.Xpf.Ribbon\Themes\Fake.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Ribbon\DevExpress.Xpf.Ribbon\Themes\Generic\IndependentPart.xaml-->

    <ControlTemplate x:Key="{dxrt:LWKey RibbonPageGroup.PopupBorderTemplate}" TargetType="{x:Type dxr:RibbonPageGroupPopupBorderControl}">
        <ContentPresenter Content="{TemplateBinding Content}" />
    </ControlTemplate>

    <ControlTemplate x:Key="{dxrt:LWKey RibbonPage.SelectedPagePopupBorderTemplate}" TargetType="{x:Type dxr:RibbonSelectedPagePopupBorderControl}">
        <ContentPresenter Content="{TemplateBinding Content}" />
    </ControlTemplate>

    <ControlTemplate x:Key="{dxrt:LWKey Ribbon.PopupBorderTemplate}" TargetType="{x:Type dxr:RibbonPopupBorderControl}">
        <ContentPresenter Content="{TemplateBinding Content}" />
    </ControlTemplate>
    <ControlTemplate x:Key="{dxrt:LWKey Ribbon.ApplicationMenuPopupBorderTemplate}" TargetType="{x:Type dxr:ApplicationMenuPopupBorderControl}">
        <Grid SnapsToDevicePixels="True">
            <ContentPresenter Content="{TemplateBinding Content}" SnapsToDevicePixels="True" />
            <Canvas HorizontalAlignment="Stretch" VerticalAlignment="Stretch" SnapsToDevicePixels="True">
                <dxr:RibbonApplicationButtonControl x:Name="PART_ApplicationButton" IsPopup="True" SnapsToDevicePixels="True" />
            </Canvas>
        </Grid>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Ribbon\DevExpress.Xpf.Ribbon\Themes\Generic\IndependentPart.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Ribbon\DevExpress.Xpf.Ribbon\Themes\Generic.xaml-->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Ribbon\DevExpress.Xpf.Ribbon\Themes\Generic.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Ribbon\DevExpress.Xpf.Ribbon\Themes\Generic\ApplicationButton.xaml-->



    <ControlTemplate x:Key="{dxrt:LWKey ApplicationButton.Template}" TargetType="{x:Type dxr:RibbonApplicationButtonControl}">
        <!--  -->
        <dxr:RibbonCheckedBorderControl
            x:Name="PART_Border"
            AppFocusValue="{Binding Path=(dxr:RibbonNavigationManager.IsSelected), RelativeSource={RelativeSource TemplatedParent}}"
            DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
            Focusable="False"
            IsChecked="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=TemplatedParent}}"
            IsTabStop="False"
            Template="{TemplateBinding ActualBorderTemplate}"
            UseAppFocusValue="True">
            <Grid>
                <dx:PixelSnapper HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding Path=Ribbon.IsOffice2010Style, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource invertBoolToVisibilityConverter}}">
                    <Image Source="{Binding Path=Ribbon.ActualApplicationButtonLargeIcon, RelativeSource={RelativeSource TemplatedParent}}" Stretch="None" />
                </dx:PixelSnapper>
                <Grid Visibility="{Binding Path=Ribbon.IsOffice2010Style, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <dx:PixelSnapper Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center">

                        <dx:DXImage Margin="0,1,0,0" Source="{Binding Path=Ribbon.ActualApplicationButtonSmallIcon, RelativeSource={RelativeSource TemplatedParent}}" Stretch="None" />
                    </dx:PixelSnapper>
                    <Grid Grid.Column="1" Visibility="{Binding Path=Ribbon.ActualIsApplicationButtonTextVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}">
                        <ContentControl
                            Name="ContentControl"
                            Content="{Binding Path=Ribbon.ApplicationButtonText, RelativeSource={RelativeSource TemplatedParent}}"
                            IsTabStop="False"
                            Style="{DynamicResource {dxrt:LWKey ApplicationButton.NormalTextStyle}}" />
                    </Grid>
                </Grid>
            </Grid>
        </dxr:RibbonCheckedBorderControl>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="ContentControl" Property="Style" Value="{DynamicResource {dxrt:LWKey ApplicationButton.SelectedTextStyle}}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="ContentControl" Property="Style" Value="{DynamicResource {dxrt:LWKey ApplicationButton.CheckedTextStyle}}" />
            </Trigger>
            <DataTrigger Binding="{Binding ElementName=PART_Border, Path=IsLeftButtonPressed}" Value="True">
                <Setter TargetName="ContentControl" Property="Style" Value="{DynamicResource {dxrt:LWKey ApplicationButton.PressedTextStyle}}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Ribbon\DevExpress.Xpf.Ribbon\Themes\Generic\ApplicationButton.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Ribbon\DevExpress.Xpf.Ribbon\Themes\Generic\ApplicationMenu.xaml-->
    <ControlTemplate x:Key="{dxrt:LWKey Ribbon.ApplicationMenuBarControlTemplate}" TargetType="{x:Type dxr:ApplicationMenuBarControl}">
        <ContentControl Template="{TemplateBinding ActualBorderTemplate}">
            <Grid x:Name="PART_LeftPaneGrid" dx:DragManager.DropTargetFactory="{dxb:SubMenuBarControlDropTargetFactory}" Background="Transparent">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid Grid.Row="0" Grid.Column="0">
                    <Grid Width="Auto" Height="Auto">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <dx:DXBorder
                            Grid.Column="0"
                            Width="{Binding Path=MaxGlyphSize.Width, RelativeSource={RelativeSource TemplatedParent}}"
                            Margin="{TemplateBinding GlyphPadding}"
                            SnapsToDevicePixels="True" />
                        <ContentControl Grid.ColumnSpan="2" SnapsToDevicePixels="True" Template="{DynamicResource {dxrt:LWKey Ribbon.ApplicationMenuBackgroundTemplate}}" />
                    </Grid>
                    <dxb:SubMenuScrollViewer x:Name="PART_ScrollViewer" Style="{DynamicResource {dxt:LWKey SubMenuBarControl.ScrollViewerStyle}}">
                        <ItemsPresenter />
                    </dxb:SubMenuScrollViewer>
                </Grid>
                <ContentControl
                    x:Name="PART_RightPane"
                    Grid.Row="0"
                    Grid.Column="1"
                    Width="{TemplateBinding ActualRightPaneWidth}"
                    Template="{DynamicResource {dxrt:LWKey Ribbon.ApplicationMenuRightPaneTemplate}}"
                    Visibility="Collapsed">
                    <dx:DXContentPresenter
                        x:Name="PART_RightPanePresenter"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Content="{Binding Path=Popup.RightPane, RelativeSource={RelativeSource TemplatedParent}}"
                        Foreground="{DynamicResource {dxrt:LWKey Ribbon.ApplicationMenuRightPaneForeground}}" />
                </ContentControl>
                <ContentControl Grid.Row="1" Grid.ColumnSpan="2" Template="{DynamicResource {dxrt:LWKey Ribbon.ApplicationMenuBottomPaneTemplate}}">
                    <dx:DXContentPresenter x:Name="PART_BottomPanePresenter" Content="{Binding Path=Popup.BottomPane, RelativeSource={RelativeSource TemplatedParent}}" />
                </ContentControl>
            </Grid>
        </ContentControl>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=Popup.ShowRightPane, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="PART_RightPane" Property="Visibility" Value="Visible" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxrt:LWKey Ribbon.ApplicationMenuContentControlTemplate}" TargetType="{x:Type dxr:ApplicationMenuContentControl}">
        <ContentControl Focusable="False" Template="{DynamicResource {dxrt:LWKey Ribbon.ApplicationMenuContentControlBorderTemplate}}">
            <dx:DXContentPresenter Content="{TemplateBinding Content}" />
        </ContentControl>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Ribbon\DevExpress.Xpf.Ribbon\Themes\Generic\ApplicationMenu.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Ribbon\DevExpress.Xpf.Ribbon\Themes\Generic\BackstageButtonItem.xaml-->
    <ControlTemplate x:Key="{dxrt:LWKey BackstageButtonItem.ControlTemplate}" TargetType="{x:Type dxr:BackstageButtonItem}">
        <dxr:RibbonCheckedBorderControl
            AppFocusValue="{TemplateBinding ActualIsFocused}"
            IsEnabled="{TemplateBinding ActualIsEnabled}"
            Style="{TemplateBinding BorderStyle}"
            UseAppFocusValue="true">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="backstagebutton_glyph" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <ContentControl x:Name="PART_Icon" Style="{TemplateBinding GlyphContainerStyle}">
                    <dx:PixelSnapper>
                        <dx:DXImage x:Name="PART_IconPresenter" Source="{TemplateBinding Glyph}" Style="{TemplateBinding GlyphStyle}" />
                    </dx:PixelSnapper>
                </ContentControl>
                <ContentControl
                    x:Name="PART_Content"
                    Grid.Column="1"
                    IsTabStop="False"
                    Style="{TemplateBinding ContentStyle}">
                    <ContentControl
                        Content="{TemplateBinding Content}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        IsTabStop="False"
                        Style="{TemplateBinding ActualTextStyle}" />
                </ContentControl>
            </Grid>
        </dxr:RibbonCheckedBorderControl>
        <ControlTemplate.Triggers>
            <Trigger Property="RibbonStyle" Value="TabletOffice">
                <Setter TargetName="PART_Icon" Property="Style" Value="{DynamicResource {dxrt:LWKey BackstageButtonItem.GlyphContainerTabletOfficeStyle}}" />
                <Setter TargetName="PART_Content" Property="Style" Value="{DynamicResource {dxrt:LWKey BackstageTabItem.ContentTabletOfficeStyle}}" />
            </Trigger>
            <Trigger Property="RibbonStyle" Value="OfficeSlim">
                <Setter TargetName="PART_Icon" Property="Style" Value="{DynamicResource {dxrt:LWKey BackstageButtonItem.GlyphContainerTabletOfficeStyle}}" />
                <Setter TargetName="PART_Content" Property="Style" Value="{DynamicResource {dxrt:LWKey BackstageTabItem.ContentTabletOfficeStyle}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Ribbon\DevExpress.Xpf.Ribbon\Themes\Generic\BackstageButtonItem.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Ribbon\DevExpress.Xpf.Ribbon\Themes\Generic\BackstageSeparatorItem.xaml-->
    <ControlTemplate x:Key="{dxrt:LWKey BackstageSeparatorItem.ControlTemplate}" TargetType="{x:Type dxr:BackstageSeparatorItem}">
        <dxr:RibbonCheckedBorderControl Style="{TemplateBinding BorderStyle}" />
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Ribbon\DevExpress.Xpf.Ribbon\Themes\Generic\BackstageSeparatorItem.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Ribbon\DevExpress.Xpf.Ribbon\Themes\Generic\BackstageTabItem.xaml-->
    <ControlTemplate x:Key="{dxrt:LWKey BackstageTabItem.ControlTemplate}" TargetType="{x:Type dxr:BackstageTabItem}">
        <dxr:RibbonCheckedBorderControl
            AppFocusValue="{TemplateBinding IsSelected}"
            IsChecked="{TemplateBinding IsSelected}"
            Style="{TemplateBinding BorderStyle}"
            UseAppFocusValue="True">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="backstagebutton_glyph" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <ContentControl x:Name="PART_Icon" Style="{TemplateBinding GlyphContainerStyle}">
                    <dx:PixelSnapper>
                        <dx:DXImage x:Name="PART_IconPresenter" Source="{TemplateBinding Glyph}" Style="{TemplateBinding GlyphStyle}" />
                    </dx:PixelSnapper>
                </ContentControl>
                <ContentControl
                    x:Name="PART_Content"
                    Grid.Column="1"
                    IsTabStop="False"
                    Style="{TemplateBinding ContentStyle}">
                    <ContentControl
                        HorizontalAlignment="{Binding ElementName=PART_Content, Path=HorizontalContentAlignment}"
                        Content="{TemplateBinding Content}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        IsTabStop="False"
                        Style="{TemplateBinding ActualTextStyle}" />
                </ContentControl>
            </Grid>
        </dxr:RibbonCheckedBorderControl>
        <ControlTemplate.Triggers>
            <Trigger Property="RibbonStyle" Value="TabletOffice">
                <Setter TargetName="PART_Icon" Property="Style" Value="{DynamicResource {dxrt:LWKey BackstageTabItem.GlyphContainerTabletOfficeStyle}}" />
                <Setter TargetName="PART_Content" Property="Style" Value="{DynamicResource {dxrt:LWKey BackstageTabItem.ContentTabletOfficeStyle}}" />
            </Trigger>
            <Trigger Property="RibbonStyle" Value="OfficeSlim">
                <Setter TargetName="PART_Icon" Property="Style" Value="{DynamicResource {dxrt:LWKey BackstageTabItem.GlyphContainerTabletOfficeStyle}}" />
                <Setter TargetName="PART_Content" Property="Style" Value="{DynamicResource {dxrt:LWKey BackstageTabItem.ContentTabletOfficeStyle}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Ribbon\DevExpress.Xpf.Ribbon\Themes\Generic\BackstageTabItem.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Ribbon\DevExpress.Xpf.Ribbon\Themes\Generic\BackstageView.xaml-->



    <ControlTemplate x:Key="{dxrt:LWKey Backstage.ControlItemsTemplate}" TargetType="{x:Type dxr:BackstageViewItemsControl}">
        <ItemsPresenter x:Name="itemsPresenter" Focusable="False" Style="{TemplateBinding ItemsPresenterStyle}" />
    </ControlTemplate>

    <ControlTemplate x:Key="{dxrt:LWKey Backstage.BackstageViewContentHostTemplate}" TargetType="{x:Type dxr:BackstageViewContentHost}">
        <Grid>
            <DockPanel x:Name="PART_Root" ClipToBounds="True" LastChildFill="True">
                <DockPanel.RenderTransform>
                    <TranslateTransform />
                </DockPanel.RenderTransform>
                <Grid DockPanel.Dock="Left">
                    <Control x:Name="PART_LeftPaneBackground" Template="{DynamicResource {dxrt:LWKey Backstage.LeftPartBackground}}" />
                    <DockPanel LastChildFill="True">
                        <dxr:RibbonCheckedBorderControl
                            x:Name="PART_Glyph"
                            dxi:WindowChrome.IsHitTestVisibleInChrome="True"
                            DockPanel.Dock="Top"
                            Style="{DynamicResource {dxrt:LWKey Backstage.BackstageViewBackGlyphTemplate}}" />
                        <ContentControl
                            x:Name="PART_Left"
                            HorizontalContentAlignment="Stretch"
                            VerticalContentAlignment="Stretch"
                            Content="{TemplateBinding LeftContent}"
                            DockPanel.Dock="Bottom" />
                    </DockPanel>
                </Grid>
                <DockPanel DockPanel.Dock="Right" LastChildFill="True">
                    <dx:DXBorder Height="{Binding ElementName=PART_HeaderAndButtons, Path=ActualHeight}" DockPanel.Dock="Top" Visibility="{Binding ElementName=PART_HeaderAndButtons, Path=Visibility}" />
                    <ContentControl
                        x:Name="PART_Right"
                        HorizontalContentAlignment="Stretch"
                        VerticalContentAlignment="Stretch"
                        Content="{TemplateBinding RightContent}"
                        DockPanel.Dock="Bottom" />
                </DockPanel>
            </DockPanel>
            <Grid x:Name="PART_HeaderAndButtons" VerticalAlignment="Top">
                <Control x:Name="PART_HeaderAndButtonsBackground" Template="{DynamicResource {dxrt:LWKey Backstage.HeaderAndButtonsBackground}}" />
                <dxri:BackstageViewHeaderPresenter
                    x:Name="PART_HeaderPresenter"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"
                    BackstageViewControl="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxr:BackstageViewControl}}"
                    Content="{Binding Path=(dxi:DXWindowsHelper.Window).Title, RelativeSource={RelativeSource Mode=Self}}"
                    LeftOffset="{Binding ElementName=PART_Left, Path=ActualWidth}"
                    RightOffset="{Binding ElementName=PART_ControlBoxContainer, Path=ActualWidth}"
                    Style="{DynamicResource {dxrt:LWKey Backstage.HeaderPresenterStyle}}" />
                <dxri:RibbonControlBoxContainer
                    x:Name="PART_ControlBoxContainer"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    dxi:WindowChrome.IsHitTestVisibleInChrome="True"
                    ShowCustomItems="False"
                    Style="{DynamicResource {dxrt:LWKey Backstage.ControlBoxContainerStyle}}" />
            </Grid>
            <Grid x:Name="PART_ResizeBox">
                <dx:DXBorder x:Name="PART_Resize_N" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=EnableWindowTitleShrink, RelativeSource={RelativeSource AncestorType={x:Type dxr:BackstageViewControl}}}" Value="False">
                <Setter TargetName="PART_HeaderAndButtons" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsFullScreen, RelativeSource={RelativeSource AncestorType={x:Type dxr:BackstageViewControl}}}" Value="False">
                <Setter TargetName="PART_Glyph" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_HeaderAndButtons" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxr:RibbonControl.Ribbon).IsInRibbonWindow, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter TargetName="PART_HeaderAndButtons" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxrt:LWKey Backstage.ControlTemplate}" TargetType="{x:Type dxr:BackstageViewControl}">
        <Grid Focusable="False">
            <Control Focusable="False" Template="{DynamicResource {dxrt:LWKey Backstage.BorderTemplate}}" />
            <Grid Margin="{TemplateBinding BorderThickness}" Focusable="False">
                <ContentControl Focusable="False" Style="{TemplateBinding BackgroundStyle}" />
                <Image
                    Focusable="False"
                    Source="{TemplateBinding ActualBackgroundGlyph}"
                    Style="{TemplateBinding BackgroundGlyphStyle}"
                    Visibility="{Binding IsBackgroundGlyphVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}" />
                <dxr:BackstageViewContentHost
                    x:Name="PART_ContentHost"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    ClipToBounds="True"
                    Focusable="False"
                    Template="{DynamicResource {dxrt:LWKey Backstage.BackstageViewContentHostTemplate}}">
                    <dxr:BackstageViewContentHost.LeftContent>
                        <dxr:BackstageViewLeftPartContentControl MinWidth="{TemplateBinding TabPaneMinWidth}" Focusable="False" Style="{TemplateBinding TabPaneStyle}">
                            <dxr:BackstageViewItemsControl x:Name="backstageViewItemsControl" Template="{DynamicResource {dxrt:LWKey Backstage.ControlItemsTemplate}}" />
                        </dxr:BackstageViewLeftPartContentControl>
                    </dxr:BackstageViewContentHost.LeftContent>
                    <dxr:BackstageViewContentHost.RightContent>
                        <dxri:BackstageControlPaneContentControl
                            Grid.Column="1"
                            dxr:RibbonControlHelper.DisableSharedSizeScope="True"
                            Content="{TemplateBinding ActualControlPane}"
                            Focusable="False"
                            Style="{TemplateBinding ControlPaneStyle}"
                            Visibility="{Binding SelectedTab.Visibility, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                    </dxr:BackstageViewContentHost.RightContent>
                </dxr:BackstageViewContentHost>
            </Grid>
        </Grid>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Ribbon\DevExpress.Xpf.Ribbon\Themes\Generic\BackstageView.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Ribbon\DevExpress.Xpf.Ribbon\Themes\Generic\BarItems.xaml-->
    <ItemsPanelTemplate x:Key="{dxrt:LWKey BarButtonGroup.PanelTemplate}">
        <dxr:BarButtonGroupItemsPanel IsItemsHost="True" />
    </ItemsPanelTemplate>

    <ControlTemplate x:Key="{dxrt:LWKey BarButtonGroup.Template}" TargetType="{x:Type dxr:BarButtonGroupLinkControl}">
        <ContentControl x:Name="PART_ResourceHolder" IsTabStop="False" Template="{TemplateBinding ResourceHolderTemplate}">
            <dx:DXBorder x:Name="PART_RootBorder">
                <Grid x:Name="PART_RootGrid">
                    <dxb:ItemBorderControl x:Name="PART_ItemBorder" />
                    <StackPanel
                        x:Name="PART_Item"
                        Margin="{TemplateBinding ActualMargin}"
                        Background="Transparent"
                        Orientation="Horizontal">
                        <dxr:BarButtonGroupItemsControl x:Name="PART_ItemsControl" />
                        <dxr:RibbonCheckedBorderControl
                            x:Name="PART_CustomizationButton"
                            Content="{TemplateBinding CustomizationButtonContent}"
                            Style="{TemplateBinding CustomizationButtonStyle}"
                            Visibility="Collapsed" />
                        <dxb:ItemBorderControl x:Name="PART_Separator" IsTabStop="False" NormalTemplate="{DynamicResource {dxrt:LWKey BarButtonGroup.SeparatorTemplate}}" />
                    </StackPanel>
                </Grid>
            </dx:DXBorder>
        </ContentControl>
        <ControlTemplate.Triggers>
            <Trigger Property="IsBorderVisible" Value="False">
                <Setter TargetName="PART_ItemBorder" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsCustomizationButtonVisible" Value="True">
                <Setter TargetName="PART_CustomizationButton" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="dxr:RibbonPageGroupItemsPanel.IsEndOfRow" Value="True">
                <Setter TargetName="PART_Separator" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsInSimplifiedRibbon" Value="True">
                <Setter TargetName="PART_Separator" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=(dxi:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="PART_RootBorder" Property="Background" Value="{Binding Path=(dxi:AppearanceOptions.Background), RelativeSource={RelativeSource TemplatedParent}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxi:AppearanceOptions.HasCornerRadius), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="PART_RootBorder" Property="CornerRadius" Value="{Binding Path=(dxi:AppearanceOptions.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxi:AppearanceOptions.HasPadding), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="PART_RootBorder" Property="Padding" Value="{Binding Path=(dxi:AppearanceOptions.Padding), RelativeSource={RelativeSource TemplatedParent}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxi:AppearanceOptions.HasBorderBrush), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="PART_RootBorder" Property="BorderBrush" Value="{Binding Path=(dxi:AppearanceOptions.BorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxi:AppearanceOptions.HasBorderThickness), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="PART_RootBorder" Property="BorderThickness" Value="{Binding Path=(dxi:AppearanceOptions.BorderThickness), RelativeSource={RelativeSource TemplatedParent}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxi:AppearanceOptions.HasSvgPalette), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="PART_RootBorder" Property="dx:WpfSvgPalette.Palette" Value="{Binding Path=(dxi:AppearanceOptions.SvgPalette), RelativeSource={RelativeSource TemplatedParent}}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxrt:LWKey BarButtonGroup.ItemsControlTemplate}">
        <ItemsPresenter x:Name="PART_ItemsPresenter" />
    </ControlTemplate>
    <Style x:Key="{dxrt:LWKey RibbonAutoHideCheckItemBehavior.Style}" TargetType="{x:Type dxb:BarCheckItem}">
        <Setter Property="IsChecked" Value="{Binding Path=Tag.AutoHideMode, RelativeSource={RelativeSource Mode=Self}, Mode=TwoWay}" />
        <Setter Property="Content" Value="Auto-hide Ribbon" />
        <Setter Property="Glyph" Value="{dx:DXImage Image=Reading_16x16.png}" />
        <Setter Property="LargeGlyph" Value="{dx:DXImage Image=Reading_32x32.png}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Tag.IsAeroMode, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Ribbon\DevExpress.Xpf.Ribbon\Themes\Generic\BarItems.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Ribbon\DevExpress.Xpf.Ribbon\Themes\Generic\DropDownGallery.xaml-->



    <ControlTemplate x:Key="{dxrt:LWKey GalleryDropDownControl.GalleryTemplate}" TargetType="{x:Type dxb:GalleryControl}">
        <ContentControl Template="{DynamicResource {dxrt:LWKey GalleryDropDownControl.GalleryBackgroundTemplate}}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <ContentControl
                    x:Name="PART_StandaloneBarManagerContainer"
                    Width="0"
                    Height="0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top" />

                <ToggleButton
                    x:Name="PART_Caption"
                    FocusVisualStyle="{x:Null}"
                    Template="{DynamicResource {dxrt:LWKey GalleryDropDownControl.GalleryCaptionTemplate}}"
                    Visibility="{Binding Path=Gallery.AllowFilter, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}">
                    <Grid>
                        <ContentControl
                            Width="0"
                            Content="Wg"
                            ContentTemplate="{Binding Path=Gallery.FilterCaptionTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            Focusable="False"
                            Visibility="Hidden"
                            Style="{TemplateBinding NormalFilterCaptionTextStyle}" />
                        <ContentControl
                            Width="0"
                            Content="Wg"
                            ContentTemplate="{Binding Path=Gallery.FilterCaptionTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            Focusable="False"
                            Visibility="Hidden"
                            Style="{TemplateBinding SelectedFilterCaptionTextStyle}" />

                        <ContentControl
                            Content="{Binding Path=Gallery.FilterCaption, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            ContentTemplate="{Binding Path=Gallery.FilterCaptionTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            Focusable="False"
                            Style="{TemplateBinding NormalFilterCaptionTextStyle}"
                            Visibility="{Binding Path=IsMouseOver, ElementName=PART_Caption, Converter={StaticResource invertBoolToVisibilityConverter}}" />
                        <ContentControl
                            Content="{Binding Path=Gallery.FilterCaption, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            ContentTemplate="{Binding Path=Gallery.FilterCaptionTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            Focusable="False"
                            Style="{TemplateBinding SelectedFilterCaptionTextStyle}"
                            Visibility="{Binding Path=IsMouseOver, ElementName=PART_Caption, Converter={StaticResource boolToVisibilityConverter}}" />
                    </Grid>
                </ToggleButton>

                <ContentControl Grid.Row="1" Template="{DynamicResource {dxrt:LWKey GalleryDropDownControl.GalleryGroupsBackgroundTemplate}}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <dxb:GalleryGroupsViewer Name="PART_ScrollHost" Grid.Column="0">
                            <Grid.ColumnSpan>
                                <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource Self}">
                                    <Binding.Converter>
                                        <dx:EnumToObjectConverter DefaultValue="1">
                                            <dx:EnumToObjectConverter.Values>
                                                <dx:EnumObjectProvider x:Key="TouchOverlap" Value="2" />
                                            </dx:EnumToObjectConverter.Values>
                                        </dx:EnumToObjectConverter>
                                    </Binding.Converter>
                                </Binding>
                            </Grid.ColumnSpan>
                            <dxb:GalleryItemGroupsControl
                                Name="PART_Groups"
                                ItemBorderTemplate="{TemplateBinding ActualItemBorderTemplate}"
                                ItemGlyphBorderTemplate="{TemplateBinding ActualItemGlyphBorderTemplate}"
                                ItemsSource="{Binding Path=Gallery.Groups, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </dxb:GalleryGroupsViewer>
                        <ContentControl
                            Grid.Column="1"
                            VerticalContentAlignment="Stretch"
                            Style="{DynamicResource {dxrt:LWKey GalleryDropDownControl.GalleryScrollBarContainerStyle}}"
                            Visibility="{TemplateBinding ActualVerticalScrollBarVisibility}">
                            <ScrollBar x:Name="PART_VerticalScrollBar" Orientation="Vertical" />
                        </ContentControl>
                    </Grid>
                </ContentControl>
            </Grid>
        </ContentControl>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxrt:LWKey GalleryDropDownControl.ControlTemplate}" TargetType="{x:Type dxr:GalleryDropDownControl}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <dxr:GalleryControlInDropDown
                x:Name="PART_GalleryControl"
                Grid.Row="0"
                dx:ScrollViewerTouchBehavior.IsEnabled="True"
                DefaultItemBorderTemplate="{DynamicResource {dxrt:LWKey GalleryDropDownControl.GalleryItemBorderTemplate}}"
                DefaultItemGlyphBorderTemplate="{DynamicResource {dxrt:LWKey GalleryDropDownControl.GalleryItemGlyphBorderTemplate}}"
                DesiredColCount="{Binding Path=InitialVisibleColCount, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                DesiredRowCount="{Binding Path=InitialVisibleRowCount, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                Gallery="{Binding Path=Gallery, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                PlacementTarget="DropDown"
                Template="{DynamicResource {dxrt:LWKey GalleryDropDownControl.GalleryTemplate}}" />

            <ContentControl
                x:Name="PART_Menu"
                Grid.Row="1"
                Template="{DynamicResource {dxrt:LWKey GalleryDropDownControl.MenuBorderTemplate}}"
                Visibility="{Binding Path=IsMenuVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}">
                <Grid dx:DragManager.DropTargetFactory="{dxb:SubMenuBarControlDropTargetFactory}" Background="Transparent">
                    <Grid Width="Auto" Height="Auto">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <dx:DXBorder
                            Grid.Column="0"
                            Width="{Binding Path=MaxGlyphSize.Width, RelativeSource={RelativeSource TemplatedParent}}"
                            Margin="{TemplateBinding GlyphPadding}"
                            SnapsToDevicePixels="True"
                            Visibility="{TemplateBinding GlyphSideVisibility}" />
                        <dxb:GlyphSidePanel
                            x:Name="PART_GlyphSide"
                            Grid.Column="0"
                            SnapsToDevicePixels="True"
                            Visibility="{TemplateBinding GlyphSideVisibility}" />
                        <ContentControl
                            x:Name="PART_ContentSide"
                            Grid.Column="1"
                            IsTabStop="False"
                            SnapsToDevicePixels="True"
                            Template="{DynamicResource {dxrt:LWKey GalleryDropDownControl.MenuContentSideBorderTemplate}}" />
                    </Grid>

                    <ItemsPresenter />

                </Grid>
            </ContentControl>
            <ContentControl
                Name="PART_SizeGripContainer"
                Grid.Row="2"
                Template="{DynamicResource {dxrt:LWKey GalleryDropDownControl.SizeGripContainerTemplate}}"
                Visibility="Collapsed">
                <Grid>
                    <Thumb
                        Name="PART_ThumbForVertResize"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Template="{DynamicResource {dxrt:LWKey GalleryDropDownControl.ThumbForVertResizeModeTemplate}}"
                        Visibility="Collapsed" />
                    <Thumb
                        Name="PART_ThumbForBothResize"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Bottom"
                        RenderTransformOrigin="0.5,0.5"
                        Template="{DynamicResource {dxrt:LWKey GalleryDropDownControl.ThumbForBothResizeModeTemplate}}"
                        Visibility="Collapsed" />
                </Grid>
            </ContentControl>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="ResizeMode">
                    <VisualState x:Name="BothResizeMode">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_SizeGripContainer" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ThumbForBothResize" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="VerticalResizeMode">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_SizeGripContainer" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_ThumbForVertResize" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="NoneResizeMode" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Ribbon\DevExpress.Xpf.Ribbon\Themes\Generic\DropDownGallery.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Ribbon\DevExpress.Xpf.Ribbon\Themes\Generic\InRibbonGallery.xaml-->


    <ControlTemplate x:Key="{dxrt:LWKey InRibbonGallery.GalleryTemplate}" TargetType="{x:Type dxb:GalleryControl}">
        <Grid>
            <ContentControl
                x:Name="PART_StandaloneBarManagerContainer"
                Width="0"
                Height="0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top" />
            <ContentControl IsTabStop="False" Template="{DynamicResource {dxrt:LWKey InRibbonGallery.GalleryBackgroundTemplate}}">
                <Grid>
                    <ToggleButton x:Name="PART_Caption" Visibility="Collapsed" />
                    <ContentControl IsTabStop="False" Template="{DynamicResource {dxrt:LWKey InRibbonGallery.GalleryGroupsBackgroundTemplate}}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <dxb:GalleryGroupsViewer Name="PART_ScrollHost" Grid.Column="0">
                                <dxb:GalleryItemGroupsControl
                                    Name="PART_Groups"
                                    ItemBorderTemplate="{TemplateBinding ActualItemBorderTemplate}"
                                    ItemGlyphBorderTemplate="{TemplateBinding ActualItemGlyphBorderTemplate}"
                                    ItemsSource="{Binding Path=Gallery.Groups, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            </dxb:GalleryGroupsViewer>
                            <ScrollBar
                                x:Name="PART_VerticalScrollBar"
                                Grid.Column="1"
                                Orientation="Vertical"
                                Visibility="Collapsed" />
                        </Grid>
                    </ContentControl>
                </Grid>
            </ContentControl>
        </Grid>
    </ControlTemplate>

    <Style x:Key="InRibbonGalleryStyle" TargetType="{x:Type dxb:GalleryControl}">
        <Setter Property="dxb:GalleryHelper.IsInRibbonControl" Value="True" />
        <Setter Property="Grid.Column" Value="0" />
        <Setter Property="PlacementTarget" Value="Ribbon" />
        <Setter Property="DefaultItemBorderTemplate" Value="{DynamicResource {dxrt:LWKey InRibbonGallery.GalleryItemBorderTemplate}}" />
        <Setter Property="DefaultItemGlyphBorderTemplate" Value="{DynamicResource {dxrt:LWKey InRibbonGallery.GalleryItemGlyphBorderTemplate}}" />
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey InRibbonGallery.GalleryTemplate}}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="DefaultIsGroupCaptionVisible" Value="False" />
        <Setter Property="DesiredColCount" Value="{Binding Path=ActualGallery.ColCount, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter Property="Width" Value="{Binding Path=ActualGallery.Width, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter Property="MinWidth" Value="{Binding Path=ActualGallery.MinWidth, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter Property="MaxWidth" Value="{Binding Path=ActualGallery.MaxWidth, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
    </Style>
    <ControlTemplate x:Key="{dxrt:LWKey InRibbonGallery.Template}" TargetType="{x:Type dxr:RibbonGalleryBarItemLinkControl}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <dxb:BarItemLayoutPanel x:Name="PART_LayoutPanel" />
            <Grid Grid.Row="1">
                <dx:DXBorder
                    x:Name="PART_PopupPlacementTarget"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"
                    EnableDPICorrection="False"
                    Focusable="False"
                    Visibility="Collapsed" />
                <ContentControl Name="GalleryPart" IsTabStop="False" Template="{DynamicResource {dxrt:LWKey InRibbonGallery.BorderTemplate}}">
                    <Grid x:Name="PART_RootGrid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <dxb:GalleryControl Name="PART_GalleryControl" Style="{StaticResource InRibbonGalleryStyle}" Gallery="{TemplateBinding ActualGallery}" />
                        <Grid Name="buttons" Grid.Column="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Name="dropDownRow" Height="*" />
                            </Grid.RowDefinitions>
                            <Button
                                Name="PART_Up"
                                Grid.Row="0"
                                MinWidth="0"
                                IsTabStop="False"
                                Template="{DynamicResource {dxrt:LWKey InRibbonGallery.UpButtonTemplate}}" />
                            <Button
                                Name="PART_Down"
                                Grid.Row="1"
                                MinWidth="0"
                                IsTabStop="False"
                                Template="{DynamicResource {dxrt:LWKey InRibbonGallery.DownButtonTemplate}}" />
                            <dxr:RibbonCheckedBorderControl
                                x:Name="PART_DropDown"
                                Grid.Row="2"
                                IsTabStop="False"
                                Template="{DynamicResource {dxrt:LWKey InRibbonGallery.DropDownButtonTemplate}}"
                                UseAppFocusValue="True" />
                        </Grid>
                    </Grid>
                </ContentControl>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsGalleryVisible" Value="True">
                <Setter TargetName="PART_LayoutPanel" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsGalleryVisible" Value="False">
                <Setter TargetName="GalleryPart" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="ActualDropDownGalleryEnabled" Value="False">
                <Setter TargetName="PART_DropDown" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="dropDownRow" Property="Height" Value="0" />
            </Trigger>
            <Trigger Property="IsInSimplifiedRibbon" Value="True">
                <Setter TargetName="PART_LayoutPanel" Property="Grid.RowSpan" Value="2" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxrt:LWKey InRibbonGallery.TemplateTouch}" TargetType="{x:Type dxr:RibbonGalleryBarItemLinkControl}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <dxb:BarItemLayoutPanel x:Name="PART_LayoutPanel" ArrowTemplate="{DynamicResource {dxt:LWKey BarSplitButtonItem.ArrowTemplate}}" Visibility="Collapsed"/>
            <Grid x:Name="PART_Grid" Grid.Row="1">
                <dx:DXBorder
                    x:Name="PART_PopupPlacementTarget"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"
                    EnableDPICorrection="False"
                    Focusable="False"
                    Visibility="Collapsed" />
                <ContentControl IsTabStop="False" Template="{DynamicResource {dxrt:LWKey InRibbonGallery.BorderTemplate}}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <dxb:GalleryControl Name="PART_GalleryControl" Style="{StaticResource InRibbonGalleryStyle}" Gallery="{TemplateBinding ActualGallery}" />
                        <dxr:RibbonCheckedBorderControl
                            x:Name="PART_DropDown"
                            Grid.Column="1"
                            IsTabStop="False"
                            Template="{DynamicResource {dxrt:LWKey InRibbonGallery.DropDownButtonTemplateTouch}}"
                            UseAppFocusValue="True" />
                    </Grid>
                </ContentControl>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsGalleryVisible" Value="False">
                <Setter TargetName="PART_LayoutPanel" Property="Visibility" Value="Visible"/>
                <Setter TargetName="PART_Grid" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="ActualDropDownGalleryEnabled" Value="False">
                <Setter TargetName="PART_DropDown" Property="Visibility" Value="Collapsed" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Ribbon\DevExpress.Xpf.Ribbon\Themes\Generic\InRibbonGallery.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Ribbon\DevExpress.Xpf.Ribbon\Themes\Generic\QuickAccessToolbar.xaml-->
    <ItemsPanelTemplate x:Key="{dxrt:LWKey QuickAccessToolbar.RibbonToolbarItemsPanelTemplate}">
        <dxr:RibbonQuickAccessToolbarPanel VerticalAlignment="Center" />
    </ItemsPanelTemplate>
    <ControlTemplate x:Key="{dxrt:LWKey QuickAccessToolbar.RibbonToolbarTemplate}" TargetType="{x:Type dxr:RibbonQuickAccessToolbarControl}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>


            <ContentControl
                x:Name="PART_LeftContentControl"
                Grid.Column="0"
                Focusable="False"
                IsTabStop="False"
                Template="{DynamicResource {dxrt:LWKey QuickAccessToolbar.RibbonToolbarLeftContentTemplate}}">
                <Grid>
                    <ContentControl
                        x:Name="PART_OriginItemContainer"
                        Width="1"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        HorizontalContentAlignment="Left"
                        VerticalContentAlignment="Center"
                        Focusable="False"
                        Visibility="Hidden"
                        IsTabStop="False"/>
                    <ItemsPresenter Name="PART_ItemsPresenter" ClipToBounds="True" />
                </Grid>
            </ContentControl>

            <ContentControl
                x:Name="PART_RightContentControl"
                Grid.Column="1"
                VerticalAlignment="Stretch"
                VerticalContentAlignment="Stretch"
                Focusable="False"
                IsTabStop="False"
                Template="{DynamicResource {dxrt:LWKey QuickAccessToolbar.RibbonToolbarRightContentTemplate}}">
                <Grid>
                    <dxr:RibbonCheckedBorderControl
                        x:Name="PART_ToolbarCustomizationButton"
                        Focusable="False"
                        IsTabStop="False"
                        Template="{DynamicResource {dxrt:LWKey QuickAccessToolbar.RibbonToolbarCustomizationButtonTemplate}}"
                        UseAppFocusValue="True" />
                    <dxr:RibbonCheckedBorderControl
                        x:Name="PART_ToolbarDropDownButton"
                        Focusable="False"
                        IsTabStop="False"
                        Template="{DynamicResource {dxrt:LWKey QuickAccessToolbar.RibbonToolbarDropDownButtonTemplate}}"
                        UseAppFocusValue="True" />
                </Grid>
            </ContentControl>
        </Grid>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Ribbon\DevExpress.Xpf.Ribbon\Themes\Generic\QuickAccessToolbar.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Ribbon\DevExpress.Xpf.Ribbon\Themes\Generic\Ribbon.xaml-->


    <ControlTemplate x:Key="{dxrt:LWKey RibbonPageHeaderLinksControl.ControlTemplate}" TargetType="{x:Type dxr:RibbonPageHeaderLinksControl}">
        <ItemsPresenter />
    </ControlTemplate>
    <ItemsPanelTemplate x:Key="{dxrt:LWKey RibbonPageHeaderLinksControl.PanelTemplate}">
        <StackPanel Orientation="Horizontal" />
    </ItemsPanelTemplate>

    <ItemsPanelTemplate x:Key="{dxrt:LWKey RibbonPageCategoriesPane.PanelTemplate}">
        <dxr:RibbonItemsPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch" IsItemsHost="True" />
    </ItemsPanelTemplate>
    <ItemsPanelTemplate x:Key="{dxrt:LWKey RibbonPageCategoriesPane.OfficeSlimPanelTemplate}">
        <dxr:RibbonItemsPanelOfficeSlim />
    </ItemsPanelTemplate>


    <ControlTemplate x:Key="{dxrt:LWKey RibbonPageCategoriesPane.ControlTemplate}" TargetType="{x:Type dxr:RibbonPageCategoriesPane}">
        <Grid Name="Root">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="*" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <dxr:RibbonPageCategoryHeaderControl
                x:Name="PART_OriginHeaderControl"
                Grid.ColumnSpan="3"
                Width="0"
                Visibility="Hidden">
                <dxr:RibbonPageCategoryHeaderControl.Category>
                    <dxr:RibbonPageCategory Caption="Origin" />
                </dxr:RibbonPageCategoryHeaderControl.Category>
            </dxr:RibbonPageCategoryHeaderControl>
            <dxri:RibbonPagesScrollViewer
                x:Name="PART_ScrollViewer"
                Grid.RowSpan="3"
                Grid.ColumnSpan="3"
                Padding="0,0,0,-3"
                VerticalContentAlignment="Stretch"
                BorderThickness="0"
                Focusable="False"
                HorizontalScrollBarVisibility="Disabled"
                IsTabStop="False"
                VerticalScrollBarVisibility="Disabled">
                <dxi:SelectionIndicatorDecorator Style="{DynamicResource {dxrt:LWKey Ribbon.SelectionIndicatorStyle}}">
                    <ItemsPresenter Name="PART_ItemsPresenter" Margin="0,0,0,3" />
                </dxi:SelectionIndicatorDecorator>
            </dxri:RibbonPagesScrollViewer>
            <dxr:RibbonPageHeaderControl
                x:Name="PART_OriginPageHeaderControl"
                Grid.Row="2"
                Grid.ColumnSpan="3"
                Width="0"
                Visibility="Hidden">
                <dxr:RibbonPageHeaderControl.Page>
                    <dxr:RibbonPage Caption="Wg" />
                </dxr:RibbonPageHeaderControl.Page>
            </dxr:RibbonPageHeaderControl>
            <RepeatButton
                x:Name="PART_LeftRepeatButton"
                Grid.Row="2"
                Grid.Column="0"
                dxi:WindowChrome.IsHitTestVisibleInChrome="True"
                Style="{DynamicResource {dxrt:LWKey Ribbon.LeftRepeatButtonStyle}}"
                Visibility="Hidden" />
            <RepeatButton
                x:Name="PART_RightRepeatButton"
                Grid.Row="2"
                Grid.Column="2"
                dxi:WindowChrome.IsHitTestVisibleInChrome="True"
                Style="{DynamicResource {dxrt:LWKey Ribbon.RightRepeatButtonStyle}}"
                Visibility="Hidden" />
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Ribbon.IsRibbonTitleBarActualVisible, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter TargetName="PART_OriginHeaderControl" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxrt:LWKey Ribbon.ControlTemplate}" TargetType="{x:Type dxr:RibbonControl}">
        <dxri:RibbonAutoHideControl
            Name="PART_AutoHideControl"
            VerticalAlignment="Top"
            Focusable="False"
            IsAutoHideActive="{TemplateBinding AutoHideMode}"
            IsRibbonShown="{Binding Path=IsHiddenRibbonCollapsed, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Converter={StaticResource inverseConverter}}"
            IsTabStop="False">
            <Grid x:Name="PART_DefaultRibbon">
                <ContentControl
                    x:Name="PART_Background"
                    Focusable="False"
                    IsTabStop="False"
                    Template="{DynamicResource {dxrt:LWKey Ribbon.BackgroundTemplate}}" />
                <Grid x:Name="PART_MainLayout">
                    <Grid.RowDefinitions>
                        <RowDefinition Name="headerAndTabRow" Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid x:Name="PART_SelectedPage" Grid.Row="1">
                        <ContentControl x:Name="PART_CollapsedSelectedPageBorder" Template="{DynamicResource {dxrt:LWKey Ribbon.CollapsedSelectedPageBorderTemplate}}" />
                        <dxr:RibbonSelectedPageContentPresenter x:Name="PART_SelectedPageControlContainer" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" />
                    </Grid>
                    <Grid x:Name="PART_HeaderAndTabsLayout" UseLayoutRounding="True">
                        <Grid.RowDefinitions>
                            <RowDefinition Name="HeaderRow" Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Name="AppBtnColumn" Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Name="lastColumn" Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <dxr:RibbonPageCategoryHeaderControl
                            x:Name="PART_OriginCategoryHeaderControl"
                            Grid.Row="0"
                            Width="0"
                            Visibility="Hidden">
                            <dxr:RibbonPageCategoryHeaderControl.Category>
                                <dxr:RibbonPageCategory Caption="Wg" />
                            </dxr:RibbonPageCategoryHeaderControl.Category>
                        </dxr:RibbonPageCategoryHeaderControl>
                        <dxr:RibbonPageHeaderControl
                            x:Name="PART_OriginPageHeaderControl"
                            Grid.Row="1"
                            Width="0"
                            Visibility="Hidden">
                            <dxr:RibbonPageHeaderControl.Page>
                                <dxr:RibbonPage Caption="Wg" />
                            </dxr:RibbonPageHeaderControl.Page>
                        </dxr:RibbonPageHeaderControl>

                        <ContentControl
                            Name="PART_TabBackground"
                            Grid.Row="0"
                            Grid.RowSpan="2"
                            Grid.ColumnSpan="4"
                            Focusable="False"
                            IsTabStop="False"
                            Template="{DynamicResource {dxrt:LWKey Ribbon.TabPartBorderTemplate}}" />

                        <Grid
                            x:Name="PART_HeaderBorder"
                            Grid.Row="0"
                            Grid.ColumnSpan="4"
                            Background="Transparent"
                            Visibility="Collapsed">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentControl
                                Name="HeaderBorderControl"
                                Grid.ColumnSpan="3"
                                Background="Transparent"
                                Focusable="False"
                                IsTabStop="False"
                                Template="{TemplateBinding ActualHeaderBorderTemplate}" />
                            <dxri:RibbonControlBoxContainer
                                x:Name="PART_ControlBoxContainer"
                                Grid.Column="2"
                                ShowCustomItems="False"
                                Visibility="Hidden" />
                        </Grid>

                        <dxr:RibbonPageCategoriesPane
                            x:Name="PART_PageCategoriesPane"
                            Grid.Row="0"
                            Grid.RowSpan="2"
                            Grid.Column="1"
                            Grid.ColumnSpan="2"
                            ItemsSource="{TemplateBinding ActualCategories}" />

                        <dxr:DXRibbonWindowTitlePanel
                            x:Name="PART_TitlePanel"
                            Grid.Row="0"
                            Grid.Column="2"
                            Grid.ColumnSpan="2"
                            ApplicationButton="{Binding ElementName=PART_ApplicationButton}"
                            CaptionContentControl="{Binding ElementName=PART_CaptionContainer}"
                            MinCaptionWidthBlock="{Binding ElementName=PART_MinCaptionBlock}"
                            RibbonStyle="{TemplateBinding RibbonStyle}"
                            ToolbarControl="{Binding ElementName=PART_ToolbarContainer}"
                            Visibility="Collapsed">
                            <ContentControl
                                x:Name="PART_CaptionContainer"
                                HorizontalAlignment="Left"
                                Focusable="False"
                                IsTabStop="False"
                                Style="{DynamicResource {dxrt:LWKey Ribbon.CaptionStyle}}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{TemplateBinding ActualWindowTitle}" TextTrimming="CharacterEllipsis" TextAlignment="Left"
                                               VerticalAlignment="Center" Grid.Column="0" />
                                    <ContentControl Grid.Column="1" x:Name="PART_SearchItem" Margin="10,0" Visibility="Collapsed"
                                                    dxi:WindowChrome.IsHitTestVisibleInChrome="True" />
                                </Grid>
                            </ContentControl>
                            <TextBlock x:Name="PART_MinCaptionBlock" Text="{Binding ActualWindowTitle, RelativeSource={RelativeSource TemplatedParent}, Converter={dxr:TitleToMinTextWidthConverter}}" TextAlignment="Left" />
                        </dxr:DXRibbonWindowTitlePanel>

                        <dxr:RibbonApplicationButtonControl
                            x:Name="PART_ApplicationButton"
                            Grid.Row="0"
                            Grid.RowSpan="2"
                            Grid.Column="0"
                            HorizontalAlignment="Right"
                            FocusVisualStyle="{x:Null}"
                            Focusable="False"
                            IsTabStop="False"
                            RibbonStyle="{TemplateBinding RibbonStyle}"
                            Style="{TemplateBinding ActualApplicationButtonStyle}" />

                        <ContentControl
                            x:Name="PART_ApplicationIconContainer"
                            Grid.Column="0"
                            Focusable="False"
                            IsTabStop="False"
                            Style="{DynamicResource {dxrt:LWKey Ribbon.ApplicationIconContainerStyle}}"
                            Visibility="Collapsed">
                            <dx:PixelSnapper>
                                <Image
                                    MaxWidth="16"
                                    MaxHeight="16"
                                    Source="{TemplateBinding ActualApplicationIcon}"
                                    Stretch="Uniform" />
                            </dx:PixelSnapper>
                        </ContentControl>

                        <ContentControl
                            x:Name="PART_ToolbarContainer"
                            Grid.Row="0"
                            Grid.Column="1"
                            Grid.ColumnSpan="4"
                            HorizontalAlignment="Left"
                            VerticalContentAlignment="Center"
                            Background="Transparent"
                            Focusable="False"
                            IsTabStop="False"
                            Style="{TemplateBinding ActualHeaderQuickAccessToolbarContainerStyle}" />

                        <DockPanel
                            x:Name="PART_RightTabContainer"
                            Grid.Row="1"
                            Grid.Column="3"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Bottom"
                            dxi:WindowChrome.IsHitTestVisibleInChrome="True"
                            LastChildFill="True">
                            <dxri:RibbonMinimizationButton
                                x:Name="PART_MinimizationButton"
                                DockPanel.Dock="Left"
                                Style="{DynamicResource {dxrt:LWKey Ribbon.MinimizationButtonStyle}}"
                                Template="{DynamicResource {dxrt:LWKey Ribbon.MinimizationButtonTemplate}}"
                                Visibility="Collapsed" />
                            <dx:DXContentPresenter x:Name="PART_PageHeaderLinksControlContainer" VerticalAlignment="Center" DockPanel.Dock="Right" />
                        </DockPanel>
                    </Grid>
                    <ContentControl
                        x:Name="PART_FooterToolbarContainer"
                        Grid.Row="2"
                        HorizontalAlignment="Stretch"
                        Focusable="False"
                        IsTabStop="False"
                        Style="{DynamicResource {dxrt:LWKey Ribbon.FooterQuickAccessToolbarContainerStyle}}"
                        Template="{DynamicResource {dxrt:LWKey Ribbon.FooterQuickAccessToolbarContainerTemplate}}" />
                </Grid>
            </Grid>
        </dxri:RibbonAutoHideControl>

        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="AutoHideMode" Value="True" />
                    <Condition Property="IsInRibbonWindow" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_ControlBoxContainer" Property="Visibility" Value="Visible" />
                <Setter TargetName="lastColumn" Property="MinWidth" Value="{Binding ElementName=PART_ControlBoxContainer, Path=ActualWidth}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="RibbonStyle" Value="Office2007" />
                    <Condition Property="IsInRibbonWindow" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_ToolbarContainer" Property="Grid.ColumnSpan" Value="1" />
            </MultiTrigger>
            <Trigger Property="RibbonStyle" Value="Office2010">
                <Setter TargetName="PART_ApplicationButton" Property="Grid.Row" Value="1" />
                <Setter TargetName="PART_ApplicationButton" Property="Grid.RowSpan" Value="1" />
                <Setter TargetName="PART_ToolbarContainer" Property="Grid.Column" Value="0" />
                <Setter TargetName="PART_ToolbarContainer" Property="Grid.ColumnSpan" Value="4" />
                <Setter TargetName="PART_PageCategoriesPane" Property="Grid.Column" Value="2" />
                <Setter TargetName="PART_PageCategoriesPane" Property="Grid.ColumnSpan" Value="1" />
            </Trigger>
            <Trigger Property="RibbonStyle" Value="Office2019">
                <Setter TargetName="PART_ApplicationButton" Property="Grid.Row" Value="1" />
                <Setter TargetName="PART_ApplicationButton" Property="Grid.RowSpan" Value="1" />
                <Setter TargetName="PART_ToolbarContainer" Property="Grid.Column" Value="0" />
                <Setter TargetName="PART_ToolbarContainer" Property="Grid.ColumnSpan" Value="4" />
                <Setter TargetName="PART_PageCategoriesPane" Property="Grid.Column" Value="2" />
                <Setter TargetName="PART_PageCategoriesPane" Property="Grid.ColumnSpan" Value="1" />
            </Trigger>
            <Trigger Property="RibbonStyle" Value="TabletOffice">
                <Setter TargetName="PART_TitlePanel" Property="Grid.Column" Value="1" />
                <Setter TargetName="PART_TitlePanel" Property="Grid.ColumnSpan" Value="3" />
                <Setter TargetName="PART_ApplicationButton" Property="Grid.Row" Value="1" />
                <Setter TargetName="PART_ApplicationButton" Property="Grid.RowSpan" Value="1" />
                <Setter TargetName="PART_ToolbarContainer" Property="Grid.Row" Value="1" />
                <Setter TargetName="PART_ToolbarContainer" Property="Grid.Column" Value="1" />
                <Setter TargetName="PART_ToolbarContainer" Property="Grid.ColumnSpan" Value="1" />
                <Setter TargetName="PART_PageCategoriesPane" Property="HorizontalAlignment" Value="Center" />
                <Setter TargetName="PART_PageCategoriesPane" Property="Grid.Column" Value="2" />
                <Setter TargetName="PART_PageCategoriesPane" Property="Grid.ColumnSpan" Value="1" />
            </Trigger>
            <Trigger Property="RibbonStyle" Value="OfficeSlim">
                <Setter TargetName="PART_ApplicationButton" Property="Grid.Row" Value="1" />
                <Setter TargetName="PART_ApplicationButton" Property="Grid.RowSpan" Value="1" />
                <Setter TargetName="PART_ToolbarContainer" Property="Grid.Column" Value="0" />
                <Setter TargetName="PART_ToolbarContainer" Property="Grid.ColumnSpan" Value="4" />
                <Setter TargetName="PART_PageCategoriesPane" Property="ItemsPanel" Value="{DynamicResource {dxrt:LWKey RibbonPageCategoriesPane.OfficeSlimPanelTemplate}}" />
            </Trigger>
            <Trigger Property="ShowApplicationButton" Value="False">
                <Setter TargetName="PART_ApplicationButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_ApplicationIconContainer" Property="Grid.ColumnSpan" Value="2" />
                <Setter TargetName="AppBtnColumn" Property="MaxWidth" Value="0" />
            </Trigger>
            <Trigger Property="RibbonHeaderVisibility" Value="Collapsed">
                <Setter TargetName="headerAndTabRow" Property="Height" Value="0" />
            </Trigger>
            <Trigger Property="IsInRibbonWindow" Value="True">
                <Setter TargetName="PART_TitlePanel" Property="Visibility" Value="Visible" />
                <Setter TargetName="PART_HeaderBorder" Property="Visibility" Value="Visible" />
                <Setter TargetName="HeaderRow" Property="MinHeight" Value="{DynamicResource {dxrt:LWKey Ribbon.HeaderMinHeight}}" />
                <Setter TargetName="PART_ToolbarContainer" Property="MinHeight" Value="{DynamicResource {dxrt:LWKey Ribbon.HeaderMinHeight}}" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=(dxi:DXWindowsHelper.Window).(dx:ThemedWindow.ShowTitle), RelativeSource={RelativeSource Self}}" Value="False">
                <Setter TargetName="PART_TitlePanel" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsInRibbonWindow, RelativeSource={RelativeSource Self}}" Value="True" />
                    <Condition Binding="{Binding Path=(dxi:DXWindowsHelper.WindowKind), RelativeSource={RelativeSource Self}}" Value="{x:Static dxi:DXWindowsHelper.ThemedWindow}" />
                    <Condition Binding="{Binding Path=(dxi:DXWindowsHelper.Window).(dx:ThemedWindow.ActualWindowKind), RelativeSource={RelativeSource Self}}" Value="Ribbon" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="HeaderRow" Property="MinHeight" Value="{Binding Path=(dxi:WindowChrome.CaptionHeight), RelativeSource={RelativeSource AncestorType={x:Type dx:ThemedWindow}}}" />
            </MultiDataTrigger>
            <!-- <Trigger Property="IsApplicationIconVisible" Value="True"> -->
            <!--     <Setter TargetName="PART_ApplicationIconContainer" Property="Visibility" Value="Visible"/> -->
            <!-- </Trigger> -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="MinimizationButtonPosition" Value="PageHeader" />
                    <Condition Property="IsMinimizationButtonVisible" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_MinimizationButton" Property="Visibility" Value="Visible" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsRibbonTitleBarActualVisible" Value="False" />
                    <Condition Property="IsInRibbonWindow" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_OriginCategoryHeaderControl" Property="Visibility" Value="Collapsed" />
            </MultiTrigger>
            <DataTrigger Binding="{Binding Path=(dxi:ThemedWindowsHelper.SearchItemDisplayMode), RelativeSource={RelativeSource Self}}" Value="Title">
                <Setter TargetName="PART_SearchItem" Property="Visibility" Value="Visible"/>
                <Setter TargetName="PART_SearchItem" Property="ContentTemplate"
                        Value="{Binding Path=(dxi:ThemedWindowsHelper.SearchItemTemplate), RelativeSource={RelativeSource Self}}"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxrt:LWKey Ribbon.AeroTemplate}" TargetType="{x:Type dxr:RibbonControl}">
        <Grid x:Name="PART_DefaultRibbon" VerticalAlignment="Top">
            <ContentControl
                x:Name="PART_Background"
                Focusable="False"
                IsTabStop="False"
                Template="{DynamicResource {dxrt:LWKey Ribbon.BackgroundTemplateInRibbonAeroWindow}}" />
            <Grid x:Name="PART_MainLayout">
                <Grid.RowDefinitions>
                    <RowDefinition Name="headerAndTabRow" Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid x:Name="PART_SelectedPage" Grid.Row="1">
                    <ContentControl x:Name="PART_CollapsedSelectedPageBorder" Template="{DynamicResource {dxrt:LWKey Ribbon.CollapsedSelectedPageBorderTemplateInAeroWindow}}" />
                    <dxr:RibbonSelectedPageContentPresenter x:Name="PART_SelectedPageControlContainer" />
                </Grid>
                <Grid x:Name="PART_HeaderAndTabsLayout" Grid.IsSharedSizeScope="True">
                    <Grid.RowDefinitions>
                        <RowDefinition Name="HeaderRow" Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid
                        x:Name="PART_HeaderBorder"
                        Grid.Row="0"
                        Grid.ColumnSpan="4"
                        Background="Transparent">
                        <ContentControl
                            Focusable="False"
                            IsTabStop="False"
                            Template="{DynamicResource {dxrt:LWKey Ribbon.HeaderBorderTemplateInRibbonAeroWindow}}"
                            Visibility="{Binding Path=IsInRibbonWindow, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}" />
                        <ContentControl
                            Focusable="False"
                            IsTabStop="False"
                            Template="{TemplateBinding ActualHeaderBorderTemplate}"
                            Visibility="{Binding Path=IsInRibbonWindow, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource invertBoolToVisibilityConverter}}" />
                    </Grid>
                    <dxr:DXRibbonWindowTitlePanel
                        x:Name="PART_TitlePanel"
                        Grid.Row="0"
                        Grid.Column="1"
                        Grid.ColumnSpan="3"
                        CaptionContentControl="{Binding ElementName=PART_CaptionContainer}"
                        MinCaptionWidthBlock="{Binding ElementName=PART_MinCaptionBlock}"
                        RibbonStyle="{TemplateBinding RibbonStyle}"
                        ToolbarControl="{Binding ElementName=PART_ToolbarContainer}"
                        Visibility="Collapsed">
                        <ContentControl
                            x:Name="PART_CaptionContainer"
                            Grid.Column="1"
                            HorizontalAlignment="Left"
                            Content="{TemplateBinding ActualWindowTitle}"
                            Focusable="False"
                            IsHitTestVisible="False"
                            IsTabStop="False"
                            Style="{DynamicResource {dxrt:LWKey Ribbon.CaptionStyleInRibbonAeroWindow}}" />
                        <TextBlock x:Name="PART_MinCaptionBlock" Text="{Binding ActualWindowTitle, RelativeSource={RelativeSource TemplatedParent}, Converter={dxr:TitleToMinTextWidthConverter}}" TextAlignment="Left" />
                    </dxr:DXRibbonWindowTitlePanel>
                    <ContentControl
                        Name="PART_TabBackground"
                        Grid.Row="1"
                        Grid.ColumnSpan="4"
                        Focusable="False"
                        IsTabStop="False"
                        Template="{DynamicResource {dxrt:LWKey Ribbon.TabPartBorderTemplateInRibbonAeroWindow}}" />
                    <dxr:RibbonApplicationButtonControl
                        x:Name="PART_ApplicationButton"
                        Grid.RowSpan="2"
                        FocusVisualStyle="{x:Null}"
                        Focusable="False"
                        IsTabStop="False"
                        RibbonStyle="{TemplateBinding RibbonStyle}"
                        Style="{TemplateBinding ActualApplicationButtonStyle}" />
                    <dxr:RibbonPageCategoriesPane
                        x:Name="PART_PageCategoriesPane"
                        Grid.Row="0"
                        Grid.RowSpan="2"
                        Grid.Column="1"
                        Grid.ColumnSpan="2"
                        ItemsSource="{TemplateBinding ActualCategories}" />
                    <ContentControl
                        x:Name="PART_ApplicationIconContainer"
                        Grid.Column="0"
                        Focusable="False"
                        IsTabStop="False"
                        Style="{DynamicResource {dxrt:LWKey Ribbon.ApplicationIconContainerStyleInRibbonAeroWindow}}"
                        Visibility="Collapsed">
                        <dx:PixelSnapper>
                            <Image
                                MaxWidth="16"
                                MaxHeight="16"
                                Source="{TemplateBinding ActualApplicationIcon}"
                                Stretch="Uniform" />
                        </dx:PixelSnapper>
                    </ContentControl>
                    <ContentControl
                        x:Name="PART_ToolbarContainer"
                        Grid.Row="0"
                        Grid.Column="1"
                        Margin="0"
                        HorizontalAlignment="Left"
                        VerticalContentAlignment="Center"
                        Background="Transparent"
                        Focusable="False"
                        IsTabStop="False"
                        Style="{TemplateBinding ActualHeaderQuickAccessToolbarContainerStyle}" />
                    <DockPanel
                        x:Name="PART_RightTabContainer"
                        Grid.Row="1"
                        Grid.Column="3"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Bottom"
                        dxi:WindowChrome.IsHitTestVisibleInChrome="True"
                        LastChildFill="True">
                        <dxri:RibbonMinimizationButton
                            x:Name="PART_MinimizationButton"
                            DockPanel.Dock="Left"
                            Style="{DynamicResource {dxrt:LWKey Ribbon.MinimizationButtonStyleInRibbonAeroWindow}}"
                            Template="{DynamicResource {dxrt:LWKey Ribbon.MinimizationButtonTemplateInRibbonAeroWindow}}"
                            Visibility="Collapsed" />
                        <dx:DXContentPresenter
                            x:Name="PART_PageHeaderLinksControlContainer"
                            VerticalAlignment="Stretch"
                            VerticalContentAlignment="Center"
                            DockPanel.Dock="Right" />
                    </DockPanel>
                </Grid>
                <ContentControl
                    x:Name="PART_FooterToolbarContainer"
                    Grid.Row="2"
                    HorizontalAlignment="Stretch"
                    Focusable="False"
                    IsTabStop="False"
                    Style="{DynamicResource {dxrt:LWKey Ribbon.FooterQuickAccessToolbarContainerStyle}}"
                    Template="{DynamicResource {dxrt:LWKey Ribbon.FooterQuickAccessToolbarContainerTemplate}}" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="RibbonStyle" Value="Office2010">
                <Setter TargetName="PART_ApplicationButton" Property="Grid.Row" Value="1" />
                <Setter TargetName="PART_ApplicationButton" Property="Grid.RowSpan" Value="1" />
                <Setter TargetName="PART_ToolbarContainer" Property="Grid.Column" Value="0" />
                <Setter TargetName="PART_ToolbarContainer" Property="Grid.ColumnSpan" Value="4" />
                <Setter TargetName="PART_PageCategoriesPane" Property="Grid.Column" Value="2" />
                <Setter TargetName="PART_PageCategoriesPane" Property="Grid.ColumnSpan" Value="1" />
            </Trigger>
            <Trigger Property="RibbonStyle" Value="Office2019">
                <Setter TargetName="PART_ApplicationButton" Property="Grid.Row" Value="1" />
                <Setter TargetName="PART_ApplicationButton" Property="Grid.RowSpan" Value="1" />
                <Setter TargetName="PART_ToolbarContainer" Property="Grid.Column" Value="0" />
                <Setter TargetName="PART_ToolbarContainer" Property="Grid.ColumnSpan" Value="4" />
                <Setter TargetName="PART_PageCategoriesPane" Property="Grid.Column" Value="2" />
                <Setter TargetName="PART_PageCategoriesPane" Property="Grid.ColumnSpan" Value="1" />
            </Trigger>
            <Trigger Property="RibbonStyle" Value="TabletOffice">
                <Setter TargetName="PART_TitlePanel" Property="Grid.Column" Value="1" />
                <Setter TargetName="PART_TitlePanel" Property="Grid.ColumnSpan" Value="3" />
                <Setter TargetName="PART_ApplicationButton" Property="Grid.Row" Value="1" />
                <Setter TargetName="PART_ApplicationButton" Property="Grid.RowSpan" Value="1" />
                <Setter TargetName="PART_ToolbarContainer" Property="Grid.Row" Value="1" />
                <Setter TargetName="PART_ToolbarContainer" Property="Grid.Column" Value="1" />
                <Setter TargetName="PART_ToolbarContainer" Property="Grid.ColumnSpan" Value="1" />
                <Setter TargetName="PART_PageCategoriesPane" Property="HorizontalAlignment" Value="Center" />
                <Setter TargetName="PART_PageCategoriesPane" Property="Grid.Column" Value="2" />
                <Setter TargetName="PART_PageCategoriesPane" Property="Grid.ColumnSpan" Value="1" />
            </Trigger>
            <Trigger Property="RibbonStyle" Value="OfficeSlim">
                <Setter TargetName="PART_ApplicationButton" Property="Grid.Row" Value="1" />
                <Setter TargetName="PART_ApplicationButton" Property="Grid.RowSpan" Value="1" />
                <Setter TargetName="PART_ToolbarContainer" Property="Grid.Column" Value="0" />
                <Setter TargetName="PART_ToolbarContainer" Property="Grid.ColumnSpan" Value="4" />
                <Setter TargetName="PART_PageCategoriesPane" Property="ItemsPanel" Value="{DynamicResource {dxrt:LWKey RibbonPageCategoriesPane.OfficeSlimPanelTemplate}}" />
            </Trigger>
            <Trigger Property="ShowApplicationButton" Value="False">
                <Setter TargetName="PART_ApplicationButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_ApplicationIconContainer" Property="Grid.ColumnSpan" Value="2" />
            </Trigger>
            <Trigger Property="AutoHideMode" Value="True">
                <Setter TargetName="PART_DefaultRibbon" Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="RibbonHeaderVisibility" Value="Collapsed">
                <Setter TargetName="headerAndTabRow" Property="Height" Value="0" />
            </Trigger>

            <Trigger Property="IsInRibbonWindow" Value="True">
                <Setter TargetName="PART_TitlePanel" Property="Visibility" Value="Visible" />
                <Setter TargetName="HeaderRow" Property="MinHeight" Value="{DynamicResource {dxrt:LWKey Ribbon.AeroHeaderMinHeight}}" />
                <Setter TargetName="PART_ToolbarContainer" Property="MinHeight" Value="{DynamicResource {dxrt:LWKey Ribbon.HeaderMinHeight}}" />
            </Trigger>

            <DataTrigger Binding="{Binding Path=(dxi:DXWindowsHelper.Window).(dx:ThemedWindow.ShowTitle), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="PART_TitlePanel" Property="Visibility" Value="Visible" />
            </DataTrigger>

            <!-- <Trigger Property="IsApplicationIconVisible" Value="True"> -->
            <!--     <Setter TargetName="PART_ApplicationIconContainer" Property="Visibility" Value="Visible"/> -->
            <!-- </Trigger> -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="MinimizationButtonPosition" Value="PageHeader" />
                    <Condition Property="IsMinimizationButtonVisible" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_MinimizationButton" Property="Visibility" Value="Visible" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxrt:LWKey Ribbon.RibbonPanelBorderTemplate}" TargetType="{x:Type ContentControl}">
        <dx:DXBorder Padding="3,3,3,3" BorderBrush="Black" BorderThickness="1">
            <dx:DXBorder x:Name="PART_Content">
                <ContentPresenter MinHeight="68" Content="{TemplateBinding Content}" />
            </dx:DXBorder>
        </dx:DXBorder>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxrt:LWKey KeyTipControl.ToolTipTemplate}" TargetType="{x:Type dxr:KeyTipToolTip}">
        <ContentPresenter />
    </ControlTemplate>
    <ControlTemplate x:Key="{dxrt:LWKey KeyTipControl.Template}" TargetType="{x:Type dxr:KeyTipControl}">
        <dxr:RibbonCheckedBorderControl IsEnabled="{TemplateBinding IsEnabled}" Template="{DynamicResource {dxrt:LWKey KeyTipControl.BorderTemplate}}">
            <TextBlock Style="{DynamicResource {dxrt:LWKey KeyTipControl.ContentStyle}}" Text="{TemplateBinding Text}" />
        </dxr:RibbonCheckedBorderControl>
    </ControlTemplate>
    <Style x:Key="{dxrt:LWKey Ribbon.RightRepeatButtonStyleInRibbonAeroWindow}" TargetType="{x:Type RepeatButton}">
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey Ribbon.RightRepeatButtonTemplateInRibbonAeroWindow}}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>
    <Style x:Key="{dxrt:LWKey Ribbon.LeftRepeatButtonStyleInRibbonAeroWindow}" TargetType="{x:Type RepeatButton}">
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey Ribbon.LeftRepeatButtonTemplateInRibbonAeroWindow}}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Ribbon\DevExpress.Xpf.Ribbon\Themes\Generic\Ribbon.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Ribbon\DevExpress.Xpf.Ribbon\Themes\Generic\RibbonAeroWindow.xaml-->


    <DataTemplate x:Key="{dxrt:LWKey DXRibbonAeroWindow.AeroWindowTemplate}">
        <Grid>
            <Grid Margin="{Binding Path=(dxr:DXRibbonWindow.AeroContentMargin), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <dx:DXWindowHeader Grid.Row="0" Visibility="{Binding Path=IsCaptionVisible, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}, Converter={StaticResource boolToVisibilityConverter}}">
                    <Grid>
                        <ContentControl IsTabStop="False" Template="{DynamicResource {dxrt:LWKey DXRibbonAeroWindow.AeroWindowHeaderBorderTemplate}}" />
                        <Thumb x:Name="PART_DragWidget" Template="{DynamicResource {dxt:LWKey FloatingContainer.FloatingContainerDragWidgetTemplate}}" />
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentControl
                                x:Name="PART_IconAndCaptionArea"
                                Grid.Column="0"
                                IsTabStop="False"
                                Style="{DynamicResource {dxrt:LWKey DXRibbonAeroWindow.AeroWindowIconAndCaptionAreaStyle}}"
                                Visibility="{Binding Path=IsCaptionVisible, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}, Converter={StaticResource boolToVisibilityConverter}}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Image
                                        x:Name="PART_Icon"
                                        Grid.Column="0"
                                        Panel.ZIndex="100"
                                        Source="{Binding Path=Icon, RelativeSource={RelativeSource AncestorType={x:Type dxr:DXRibbonWindow}}}"
                                        Style="{DynamicResource {dxrt:LWKey DXRibbonAeroWindow.AeroWindowIconStyle}}" />
                                    <ContentControl
                                        x:Name="PART_CaptionContainer"
                                        Grid.Column="1"
                                        Panel.ZIndex="100"
                                        Content="{Binding Path=Title, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}"
                                        IsHitTestVisible="False"
                                        IsTabStop="False"
                                        Style="{DynamicResource {dxrt:LWKey DXRibbonAeroWindow.AeroWindowCaptionStyle}}"
                                        Visibility="{Binding Path=ShowTitle, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}, Converter={StaticResource boolToVisibilityConverter}}" />
                                </Grid>
                            </ContentControl>
                            <StackPanel
                                Grid.Column="1"
                                Width="{Binding Path=(dx:DXWindow.AeroControlBoxWidth), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxr:DXRibbonWindow}}"
                                Height="{Binding Path=(dx:DXWindow.AeroControlBoxHeight), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxr:DXRibbonWindow}}"
                                Margin="{Binding Path=(dx:DXWindow.AeroControlBoxMargin), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxr:DXRibbonWindow}}"
                                VerticalAlignment="Top"
                                Orientation="Horizontal" />
                        </Grid>
                    </Grid>
                </dx:DXWindowHeader>
                <ContentControl
                    x:Name="PART_ContentContainer"
                    Grid.Row="1"
                    Focusable="False"
                    Style="{DynamicResource {dxrt:LWKey DXRibbonAeroWindow.AeroWindowContentStyle}}"
                    Template="{DynamicResource {dxrt:LWKey DXRibbonAeroWindow.AeroWindowContentTemplate}}">
                    <Grid>
                        <ContentControl Focusable="False" Style="{DynamicResource {dxrt:LWKey DXRibbonAeroWindow.AeroWindowBodyStyle}}" Template="{DynamicResource {dxrt:LWKey DXRibbonAeroWindow.AeroWindowBodyTemplate}}">
                            <dx:DXWindowBackgroundPanel
                                x:Name="PART_ContainerContent"
                                Margin="{Binding Path=(dxr:DXRibbonWindow.ContentPresenterMargin), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}"
                                Background="{x:Null}"
                                Content="{Binding Path=Content, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}"
                                ContentTemplate="{Binding Path=ContentTemplate, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}" />
                        </ContentControl>
                        <StackPanel x:Name="PART_StatusPanel" VerticalAlignment="Bottom">
                            <dx:DXBorder Height="Auto" HorizontalAlignment="Right" Background="{x:Null}">
                                <Thumb
                                    x:Name="PART_SizeGrip"
                                    Width="16"
                                    Height="16"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Bottom"
                                    Cursor="SizeNWSE"
                                    Template="{DynamicResource {dxt:LWKey FloatingContainer.FloatingContainerSizeGripTemplate}}" />
                            </dx:DXBorder>
                        </StackPanel>
                    </Grid>
                </ContentControl>

            </Grid>

            <Grid VerticalAlignment="Top" Background="{x:Null}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ContentControl
                    IsHitTestVisible="False"
                    IsTabStop="False"
                    Opacity="0"
                    Style="{DynamicResource {dxrt:LWKey DXRibbonAeroWindow.AeroWindowCaptionStyle}}"
                    Visibility="{Binding Path=IsCaptionVisible, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}, Converter={StaticResource boolToVisibilityConverter}}">
                    <ContentPresenter
                        Grid.Column="0"
                        Panel.ZIndex="100"
                        Content="{Binding Path=Title, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}"
                        ContentTemplate="{DynamicResource {dxrt:LWKey DXRibbonAeroWindow.AeroWindowCaptionTemplate}}" />
                </ContentControl>
                <StackPanel
                    x:Name="stackPanel"
                    Grid.Column="1"
                    Width="{Binding Path=(dx:DXWindow.AeroControlBoxWidth), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxr:DXRibbonWindow}}"
                    Height="{Binding Path=(dx:DXWindow.AeroControlBoxHeight), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxr:DXRibbonWindow}}"
                    Margin="{Binding Path=(dx:DXWindow.AeroControlBoxMargin), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxr:DXRibbonWindow}}"
                    VerticalAlignment="Top"
                    KeyboardNavigation.TabNavigation="None"
                    Orientation="Horizontal">
                    <Button
                        x:Name="PART_Minimize"
                        Width="0"
                        Height="0"
                        Focusable="False"
                        Template="{x:Null}" />
                    <Button
                        x:Name="PART_Restore"
                        Width="0"
                        Height="0"
                        Focusable="False"
                        Template="{x:Null}" />
                    <Button
                        x:Name="PART_Maximize"
                        Width="0"
                        Height="0"
                        Focusable="False"
                        Template="{x:Null}" />
                    <Button
                        x:Name="PART_CloseButton"
                        Width="0"
                        Height="0"
                        Focusable="False"
                        Template="{x:Null}" />
                </StackPanel>
            </Grid>
            <Control
                x:Name="PART_ResizeFrame"
                Focusable="False"
                Template="{DynamicResource {dxt:LWKey FloatingContainer.FloatingContainerResizeFrame}}"
                Visibility="{Binding Path=(dx:FloatingContainer.IsMaximized), Converter={dx:BooleanToVisibilityConverter Invert=True}, RelativeSource={RelativeSource Self}}" />
        </Grid>


        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=WindowState, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}" Value="Maximized">
                <Setter TargetName="PART_ContentContainer" Property="Margin" Value="0" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dx:FloatingContainer.IsActive)}" Value="False">
                <Setter TargetName="stackPanel" Property="Opacity" Value="0.5" />
                <Setter TargetName="PART_IconAndCaptionArea" Property="Opacity" Value="0.5" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dx:FloatingContainer.FloatingContainer), RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                <Setter TargetName="PART_StatusPanel" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dx:FloatingContainer.FloatingContainer).AllowSizing, RelativeSource={RelativeSource Self}}" Value="false">
                <Setter TargetName="PART_StatusPanel" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Ribbon\DevExpress.Xpf.Ribbon\Themes\Generic\RibbonAeroWindow.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Ribbon\DevExpress.Xpf.Ribbon\Themes\Generic\RibbonAutoHide.xaml-->
    <ControlTemplate x:Key="{dxrt:LWKey RibbonAutoHide.Template}" TargetType="{x:Type dxri:RibbonAutoHideControl}">
        <Grid Name="Root">
            <dxr:ShowAutoHidePopupButton
                x:Name="PART_ShowAutoHidePopupButton"
                VerticalAlignment="Bottom"
                Focusable="False"
                IsChecked="{Binding IsRibbonShown, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Style="{DynamicResource {dxrt:LWKey Ribbon.ShowAutoHidePopupButtonStyle}}"
                Template="{DynamicResource {dxrt:LWKey Ribbon.ShowAutoHidePopupButtonTemplate}}"
                Visibility="Collapsed" />
            <dxr:RibbonAutoHidePopup
                x:Name="PART_RibbonAutoHidePopup"
                Width="{TemplateBinding ActualWidth}"
                IsOpen="{Binding IsChecked, ElementName=PART_ShowAutoHidePopupButton, Mode=TwoWay}"
                PlacementTarget="{Binding ElementName=Root}"
                Style="{DynamicResource {dxrt:LWKey Ribbon.RibbonAutoHidePopupStyle}}" />
            <ContentControl Name="PART_ContainerControl" Focusable="False" IsTabStop="False">
                <ContentPresenter Name="PART_ContentPresenter" />
            </ContentControl>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsAutoHideActive" Value="True">
                <Setter TargetName="PART_ShowAutoHidePopupButton" Property="Visibility" Value="Visible" />
                <Setter TargetName="PART_ContainerControl" Property="Visibility" Value="Collapsed" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{dxrt:LWKey Ribbon.RibbonAutoHidePopupStyle}" TargetType="{x:Type dxr:RibbonAutoHidePopup}">
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="PopupAnimation" Value="Slide" />
        <Setter Property="Placement" Value="Relative" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Ribbon\DevExpress.Xpf.Ribbon\Themes\Generic\RibbonAutoHide.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Ribbon\DevExpress.Xpf.Ribbon\Themes\Generic\RibbonHeader.xaml-->
    <ControlTemplate x:Key="{dxrt:LWKey RibbonHeader.ControlTemplate}">
        <Grid>
            <dxr:RibbonPageCategoryHeaderControl x:Name="PART_OriginPageCategoryHeaderControl" Width="0" Visibility="Hidden" />
            <ItemsPresenter x:Name="PART_ItemsPresenter" />
        </Grid>
    </ControlTemplate>
    <ItemsPanelTemplate x:Key="{dxrt:LWKey RibbonHeader.ItemsPanelTemplate}">
        <dxr:RibbonHeaderItemsPanel HorizontalAlignment="Stretch" />
    </ItemsPanelTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Ribbon\DevExpress.Xpf.Ribbon\Themes\Generic\RibbonHeader.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Ribbon\DevExpress.Xpf.Ribbon\Themes\Generic\RibbonPage.xaml-->


    <ControlTemplate x:Key="{dxrt:LWKey RibbonPage.CaptionTemplate}" TargetType="{x:Type dxr:RibbonPageCaptionControl}">
        <Grid>
            <dxr:RibbonCheckedBorderControl
                AppFocusValue="{Binding Path=(dxr:RibbonNavigationManager.IsSelected), RelativeSource={RelativeSource TemplatedParent}}"
                FocusVisualStyle="{x:Null}"
                Focusable="False"
                IsChecked="{TemplateBinding IsSelected}"
                IsTabStop="False"
                MergeCheckedStates="True"
                Template="{TemplateBinding ActualBorderTemplate}"
                UseAppFocusValue="True"
                Color="{TemplateBinding Color}">
                <ContentControl
                    x:Name="PART_ContentContainer"
                    Focusable="False"
                    IsTabStop="False"
                    Style="{TemplateBinding ActualContentContainerStyle}">
                    <Grid ClipToBounds="True" Focusable="False">
                        <dxb:ContentViewport
                            x:Name="PART_Content"
                            Grid.Column="0"
                            VerticalContentAlignment="Center"
                            dx:FrameworkElementHelper.IsClipped="True"
                            Focusable="False"
                            KeepPositiveLeftContentPosition="True">
                            <ContentControl
                                x:Name="PART_UserContent"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ActualContentTemplate}"
                                Focusable="False"
                                IsTabStop="False"
                                Style="{TemplateBinding ActualTextStyle}" />
                        </dxb:ContentViewport>
                    </Grid>
                </ContentControl>
            </dxr:RibbonCheckedBorderControl>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Page.(dxi:AppearanceOptions.HasForeground)}" Value="True">
                <Setter TargetName="PART_UserContent" Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=TemplatedParent.Page.(dxi:AppearanceOptions.Foreground)}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxrt:LWKey RibbonPage.PageHeaderTemplate}" TargetType="{x:Type dxr:RibbonPageHeaderControl}">
        <Grid MinHeight="{DynamicResource {dxrt:LWKey RibbonPage.MinHeight}}" Focusable="False">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <dxr:RibbonPageCaptionControl
                x:Name="PART_CaptionControl"
                Grid.Column="0"
                MinWidth="{Binding Path=ActualPageCaptionMinWidth, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                Margin="{DynamicResource {dxrt:LWKey RibbonPage.CaptionControlMargin}}"
                VerticalAlignment="Bottom"
                FocusVisualStyle="{x:Null}"
                IsTabStop="False"
                Page="{TemplateBinding Page}"
                Color="{Binding Page.ActualColor, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
            <ContentControl
                x:Name="PART_Separator"
                Grid.Column="1"
                HorizontalAlignment="Right"
                Focusable="False"
                IsTabStop="False"
                Opacity="{TemplateBinding SeparatorOpacity}"
                Template="{DynamicResource {dxrt:LWKey RibbonPage.SeparatorTemplate}}" />
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=Page.Ribbon.RibbonStyle, RelativeSource={RelativeSource Self}}" Value="OfficeSlim">
                <Setter TargetName="PART_Separator" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ItemsPanelTemplate x:Key="{dxrt:LWKey RibbonPage.SelectedPagePanelTemplate}">
        <dxr:RibbonSelectedPageControlItemsPanel />
    </ItemsPanelTemplate>

    <ControlTemplate x:Key="{dxrt:LWKey RibbonPage.SelectedPageTemplate}" TargetType="{x:Type dxr:RibbonSelectedPageControl}">
        <dxr:RibbonSelectedPageControlRootPanel x:Name="root">
            <ContentControl
                DataContext="{Binding Path=SelectedPage.ActualColor, RelativeSource={RelativeSource TemplatedParent}}"
                Focusable="False"
                IsTabStop="False"
                Template="{TemplateBinding ActualBorderTemplate}" />
            <ContentControl Focusable="False" IsTabStop="False" Style="{DynamicResource {dxrt:LWKey RibbonPage.SelectedPageContainerStyle}}">
                <dx:DXBorder x:Name="PART_RootBorder">
                    <dxr:RibbonPageContentBorder x:Name="PART_AppearanceBorder" Style="{Binding Path=SelectedPage.(dxr:RibbonPage.ContentBorderStyle), RelativeSource={RelativeSource TemplatedParent}}">
                        <Grid x:Name="RootGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <ScrollViewer
                                x:Name="PART_ScrollViewer"
                                Grid.Column="1"
                                Padding="0"
                                VerticalAlignment="Stretch"
                                VerticalContentAlignment="Stretch"
                                BorderThickness="0"
                                Focusable="False"
                                HorizontalScrollBarVisibility="Hidden"
                                IsTabStop="False"
                                VerticalScrollBarVisibility="Disabled">
                                <ItemsPresenter x:Name="PART_ItemsPresenter" />
                            </ScrollViewer>

                            <RepeatButton
                                x:Name="PART_LeftRepeatButton"
                                Grid.Column="0"
                                Style="{DynamicResource {dxrt:LWKey RibbonPage.LeftRepeatButtonStyle}}"
                                Visibility="Collapsed" />
                            <RepeatButton
                                x:Name="PART_RightRepeatButton"
                                Grid.Column="2"
                                Style="{DynamicResource {dxrt:LWKey RibbonPage.RightRepeatButtonStyle}}"
                                Visibility="Collapsed" />
                            <dxri:RibbonMinimizationButton
                                x:Name="PART_MinimizationButtonInPageContent"
                                Grid.Column="3"
                                VerticalAlignment="Bottom"
                                dxi:WindowChrome.IsHitTestVisibleInChrome="True"
                                Style="{DynamicResource {dxrt:LWKey Ribbon.MinimizationButtonStyleInPageContent}}"
                                Template="{DynamicResource {dxrt:LWKey Ribbon.MinimizationButtonTemplateInPageContent}}"
                                Visibility="Collapsed" />
                        </Grid>
                    </dxr:RibbonPageContentBorder>
                </dx:DXBorder>
            </ContentControl>
        </dxr:RibbonSelectedPageControlRootPanel>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=Ribbon.(dxi:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="PART_RootBorder" Property="Background" Value="{Binding Path=Ribbon.(dxi:AppearanceOptions.Background), RelativeSource={RelativeSource TemplatedParent}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Ribbon.(dxi:AppearanceOptions.HasCornerRadius), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="PART_RootBorder" Property="CornerRadius" Value="{Binding Path=Ribbon.(dxi:AppearanceOptions.CornerRadius), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource cornerRadiusConverter}, ConverterParameter=Bottom}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Ribbon.(dxi:AppearanceOptions.HasBorderThickness), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="PART_RootBorder" Property="BorderThickness" Value="{Binding Path=Ribbon.(dxi:AppearanceOptions.BorderThickness), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource thicknessConverter}, ConverterParameter=Bottom}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Ribbon.(dxi:AppearanceOptions.HasBorderBrush), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="PART_RootBorder" Property="BorderBrush" Value="{Binding Path=Ribbon.(dxi:AppearanceOptions.BorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Ribbon.RibbonStyle, RelativeSource={RelativeSource Mode=Self}}" Value="TabletOffice">
                <Setter TargetName="PART_ScrollViewer" Property="HorizontalAlignment" Value="Center" />
                <Setter TargetName="PART_ScrollViewer" Property="HorizontalScrollBarVisibility" Value="Disabled" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Ribbon.RibbonStyle, RelativeSource={RelativeSource Mode=Self}}" Value="OfficeSlim">
                <Setter TargetName="PART_ScrollViewer" Property="HorizontalScrollBarVisibility" Value="Disabled" />
            </DataTrigger>
            <Trigger Property="IsInSimplifiedRibbon" Value="True">
                <Setter TargetName="PART_ScrollViewer" Property="HorizontalScrollBarVisibility" Value="Disabled" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=Ribbon.MinimizationButtonPosition, RelativeSource={RelativeSource Self}}" Value="PageContent" />
                    <Condition Binding="{Binding Path=Ribbon.IsMinimizationButtonVisible, RelativeSource={RelativeSource Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_MinimizationButtonInPageContent" Property="Visibility" Value="Visible" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxrt:LWKey Ribbon.PageGroupsControlTemplate}" TargetType="{x:Type dxr:RibbonPageGroupsControl}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <ItemsPresenter />
            <Grid x:Name="PART_DropDownContainer" Grid.Column="1" Visibility="Collapsed">
                <dxri:RibbonOverflowButton
                    x:Name="PART_OverflowButton"
                    FocusVisualStyle="{x:Null}"
                    Focusable="False"
                    IsTabStop="False"
                    Style="{DynamicResource {dxrt:LWKey Ribbon.PageGroupsControlDropDownButtonStyle}}"
                    Template="{DynamicResource {dxrt:LWKey Ribbon.PageGroupsControlDropDownButtonTemplate}}" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsInSimplifiedRibbon" Value="True">
                <Setter TargetName="PART_DropDownContainer" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ItemsPanelTemplate x:Key="{dxrt:LWKey Ribbon.PageGroupsControlItemsPanelTemplate}">
        <dxr:RibbonPageGroupsItemsPanel />
    </ItemsPanelTemplate>
    <ControlTemplate x:Key="{dxrt:LWKey Ribbon.PagesControlTemplate}" TargetType="{x:Type dxr:RibbonPagesControl}">
        <ItemsPresenter />
    </ControlTemplate>
    <ItemsPanelTemplate x:Key="{dxrt:LWKey Ribbon.PagesControlItemsPanelTemplate}">
        <dxr:RibbonPagesItemsPanel />
    </ItemsPanelTemplate>

    <ControlTemplate x:Key="{dxrt:LWKey RibbonPage.AeroPageHeaderTemplate}" TargetType="{x:Type dxr:RibbonPageHeaderControl}">
        <Grid MinHeight="{DynamicResource {dxrt:LWKey RibbonPage.AeroMinHeight}}" Focusable="False">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <dxr:RibbonPageCaptionControl
                x:Name="PART_CaptionControl"
                Grid.Column="0"
                MinWidth="{Binding Path=ActualPageCaptionMinWidth, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                Margin="{DynamicResource {dxrt:LWKey RibbonPage.CaptionControlMarginInAeroWindow}}"
                VerticalAlignment="Bottom"
                BorderTemplate="{DynamicResource {dxrt:LWKey RibbonPage.CaptionBackgroundTemplateInAeroWindow}}"
                BorderTemplateInMinimizedRibbon="{DynamicResource {dxrt:LWKey RibbonPage.CaptionBackgroundTemplateInAeroWindowInMinimizedRibbon}}"
                FocusVisualStyle="{x:Null}"
                HighlightedBorderTemplate="{DynamicResource {dxrt:LWKey RibbonPage.HighlightedCaptionBackgroundTemplateInAeroWindow}}"
                HighlightedBorderTemplateInMinimizedRibbon="{DynamicResource {dxrt:LWKey RibbonPage.HighlightedCaptionBackgroundTemplateInAeroWindowInMinimizedRibbon}}"
                HoverTextStyle="{DynamicResource {dxrt:LWKey RibbonPage.HoverTextStyleInAeroWindow}}"
                HoverTextStyleInMinimizedRibbon="{DynamicResource {dxrt:LWKey RibbonPage.HoverTextStyleInAeroWindowInMinimizedRibbon}}"
                IsTabStop="False"
                NormalTextStyle="{DynamicResource {dxrt:LWKey RibbonPage.NormalTextStyleInAeroWindow}}"
                NormalTextStyleInMinimizedRibbon="{DynamicResource {dxrt:LWKey RibbonPage.NormalTextStyleInAeroWindowInMinimizedRibbon}}"
                Page="{TemplateBinding Page}"
                SelectedTextStyle="{DynamicResource {dxrt:LWKey RibbonPage.SelectedTextStyleInAeroWindow}}"
                SelectedTextStyleInMinimizedRibbon="{DynamicResource {dxrt:LWKey RibbonPage.SelectedTextStyleInAeroWindowInMinimizedRibbon}}"
                Color="{Binding Page.ActualColor, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
            <ContentControl
                x:Name="PART_Separator"
                Grid.Column="1"
                HorizontalAlignment="Right"
                Focusable="False"
                IsTabStop="False"
                Opacity="{TemplateBinding SeparatorOpacity}"
                Template="{DynamicResource {dxrt:LWKey RibbonPage.SeparatorTemplateInAeroWindow}}" />
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=Page.Ribbon.RibbonStyle, RelativeSource={RelativeSource Self}}" Value="OfficeSlim">
                <Setter TargetName="PART_Separator" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Ribbon\DevExpress.Xpf.Ribbon\Themes\Generic\RibbonPage.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Ribbon\DevExpress.Xpf.Ribbon\Themes\Generic\RibbonPageCategory.xaml-->
    <sys:Double x:Key="{dxrt:LWKey RibbonPageCategory.CaptionHeight}">30.0</sys:Double>



    <ControlTemplate x:Key="{dxrt:LWKey RibbonPageCategory.HeaderTemplate}" TargetType="{x:Type dxr:RibbonPageCategoryHeaderControl}">
        <dxr:RibbonCheckedBorderControl
            Focusable="False"
            IsChecked="{Binding Path=Category.IsSelected, RelativeSource={RelativeSource TemplatedParent}}"
            IsInRibbonWindow="{TemplateBinding IsInRibbonWindow}"
            IsTabStop="False"
            Template="{DynamicResource {dxrt:LWKey RibbonPageCategory.HeaderBackgroundTemplate}}"
            Color="{Binding Path=Category.Color, RelativeSource={RelativeSource TemplatedParent}}">
            <dxb:ContentViewport
                x:Name="PART_Content"
                HorizontalContentAlignment="Center"
                dx:FrameworkElementHelper.IsClipped="True"
                ClipToBounds="True"
                UseWholeRow="False">
                <Grid>
                    <ContentControl
                        x:Name="PART_SelectedContent"
                        Content="{Binding Path=Category.Caption, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                        Focusable="False"
                        IsTabStop="False"
                        Style="{DynamicResource {dxrt:LWKey Ribbon.SelectedPageCategoryTextStyle}}"
                        Visibility="Collapsed" />
                    <ContentControl
                        x:Name="PART_NormalContent"
                        Content="{Binding Path=Category.Caption, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                        Focusable="False"
                        IsTabStop="False"
                        Style="{DynamicResource {dxrt:LWKey Ribbon.NormalPageCategoryTextStyle}}" />
                </Grid>
            </dxb:ContentViewport>
        </dxr:RibbonCheckedBorderControl>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Category.IsSelected, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="PART_SelectedContent" Property="Visibility" Value="Visible" />
                <Setter TargetName="PART_NormalContent" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Category.(dxi:AppearanceOptions.HasForeground), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="PART_SelectedContent" Property="Foreground" Value="{Binding Path=Category.(dxi:AppearanceOptions.Foreground), RelativeSource={RelativeSource TemplatedParent}}" />
                <Setter TargetName="PART_NormalContent" Property="Foreground" Value="{Binding Path=Category.(dxi:AppearanceOptions.Foreground), RelativeSource={RelativeSource TemplatedParent}}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ItemsPanelTemplate x:Key="{dxrt:LWKey RibbonPageCategory.PanelTemplate}">
        <dxr:RibbonPageCategoryItemsPanel dxi:WindowChrome.IsHitTestVisibleInChrome="True" />
    </ItemsPanelTemplate>
    <ItemsPanelTemplate x:Key="{dxrt:LWKey RibbonPageCategory.OfficeSlimPanelTemplate}">
        <dxr:OfficeSlimRibbonPageCategoryItemsPanel dxi:WindowChrome.IsHitTestVisibleInChrome="True" />
    </ItemsPanelTemplate>

    <ControlTemplate x:Key="{dxrt:LWKey RibbonPageCategory.ControlTemplate}" TargetType="{x:Type dxr:RibbonPageCategoryControl}">
        <dx:DXBorder x:Name="PART_AppearanceBorder">
            <Grid Name="Root">
                <Grid.RowDefinitions>
                    <RowDefinition Name="categoryHeaderRow" Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <dxr:RibbonPageCategoryHeaderControl Name="PART_CategoryHeaderControl" Category="{TemplateBinding PageCategory}" />
                <dxr:RibbonCheckedBorderControl
                    x:Name="PART_HeadersBackground"
                    Grid.Row="1"
                    Grid.RowSpan="2"
                    Focusable="False"
                    IsChecked="{Binding Path=PageCategory.IsSelected, RelativeSource={RelativeSource TemplatedParent}}"
                    IsTabStop="False"
                    Template="{DynamicResource {dxrt:LWKey RibbonPageCategory.HeadersBackgroundTemplate}}"
                    Visibility="{Binding Path=PageCategory.IsDefault, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}" />
                <dxr:RibbonCheckedBorderControl
                    x:Name="PART_HighlightedHeadersBackground"
                    Grid.Row="1"
                    Grid.RowSpan="2"
                    DataContext="{Binding Path=PageCategory.Color, RelativeSource={RelativeSource TemplatedParent}}"
                    Focusable="False"
                    IsChecked="{Binding Path=PageCategory.IsSelected, RelativeSource={RelativeSource TemplatedParent}}"
                    IsTabStop="False"
                    Template="{DynamicResource {dxrt:LWKey RibbonPageCategory.HighlightedHeadersBackgroundTemplate}}"
                    Visibility="{Binding Path=PageCategory.IsDefault, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource invertBoolToVisibilityConverter}}" />
                <Grid Grid.Row="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ItemsPresenter x:Name="PART_ItemsPresenter" Style="{DynamicResource {dxrt:LWKey RibbonPageCategory.HeadersPresenterStyle}}" />
                    <ToggleButton
                        Name="PART_CollapseButton"
                        Grid.Column="1"
                        Style="{DynamicResource {dxrt:LWKey RibbonPageCategory.CollapseButtonStyle}}"
                        Visibility="Collapsed" />
                    <dxb:PopupMenu
                        x:Name="popup"
                        IsOpen="{Binding ElementName=PART_CollapseButton, Path=IsChecked, Mode=TwoWay}"
                        ItemLinksSource="{TemplateBinding CollapsedPages}"
                        Placement="Bottom"
                        PlacementTarget="{Binding ElementName=PART_CollapseButton}"
                        Visibility="Collapsed">
                        <dxb:PopupMenu.ItemTemplate>
                            <DataTemplate>
                                <ContentControl>
                                    <dxb:BarCheckItem dxr:RibbonControl.AllowAddingToToolbar="False" Content="{Binding Caption}" IsChecked="{Binding IsSelected, Mode=TwoWay}" />
                                </ContentControl>
                            </DataTemplate>
                        </dxb:PopupMenu.ItemTemplate>
                    </dxb:PopupMenu>
                </Grid>
            </Grid>
        </dx:DXBorder>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Ribbon.RibbonTitleBarVisibility, RelativeSource={RelativeSource Self}}" Value="Collapsed">
                <Setter TargetName="PART_CategoryHeaderControl" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_HighlightedHeadersBackground" Property="Grid.Row" Value="2" />
            </DataTrigger>
            <Trigger Property="IsCollapsed" Value="True">
                <Setter TargetName="PART_CollapseButton" Property="Visibility" Value="Visible" />
                <Setter TargetName="popup" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="ShowHeader" Value="False">
                <Setter TargetName="PART_CategoryHeaderControl" Property="Visibility" Value="Hidden" />
            </Trigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=PageCategory.(dxi:AppearanceOptions.HasMargin)}" Value="True">
                <Setter TargetName="PART_AppearanceBorder" Property="Margin" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PageCategory.(dxi:AppearanceOptions.Margin)}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=PageCategory.(dxi:AppearanceOptions.HasBorderBrush)}" Value="True">
                <Setter TargetName="PART_AppearanceBorder" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PageCategory.(dxi:AppearanceOptions.BorderBrush)}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=PageCategory.(dxi:AppearanceOptions.HasBorderThickness)}" Value="True">
                <Setter TargetName="PART_AppearanceBorder" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PageCategory.(dxi:AppearanceOptions.BorderThickness)}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=PageCategory.(dxi:AppearanceOptions.HasCornerRadius)}" Value="True">
                <Setter TargetName="PART_AppearanceBorder" Property="CornerRadius" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PageCategory.(dxi:AppearanceOptions.CornerRadius)}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=PageCategory.ActualIsVisible}" Value="False">
                <Setter TargetName="PART_AppearanceBorder" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxrt:LWKey RibbonPageCategory.HeaderTemplateInAeroWindow}" TargetType="{x:Type dxr:RibbonPageCategoryHeaderControl}">
        <dxr:RibbonCheckedBorderControl
            Margin="{TemplateBinding Padding}"
            Focusable="False"
            IsChecked="{Binding Path=Category.IsSelected, RelativeSource={RelativeSource TemplatedParent}}"
            IsInRibbonWindow="{TemplateBinding IsInRibbonWindow}"
            IsTabStop="False"
            Template="{DynamicResource {dxrt:LWKey RibbonPageCategory.HeaderBackgroundTemplateInAeroWindow}}"
            Color="{Binding Path=Category.Color, RelativeSource={RelativeSource TemplatedParent}}">
            <dxb:ContentViewport
                x:Name="PART_Content"
                HorizontalContentAlignment="Left"
                dx:FrameworkElementHelper.IsClipped="True"
                ClipToBounds="True"
                UseWholeRow="False">
                <Grid>
                    <ContentControl
                        x:Name="PART_SelectedContent"
                        Content="{Binding Path=Category.Caption, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                        Focusable="False"
                        IsTabStop="False"
                        Style="{DynamicResource {dxrt:LWKey Ribbon.SelectedPageCategoryTextStyleInAeroWindow}}" />
                    <ContentControl
                        x:Name="PART_NormalContent"
                        Content="{Binding Path=Category.Caption, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                        Focusable="False"
                        IsTabStop="False"
                        Style="{DynamicResource {dxrt:LWKey Ribbon.NormalPageCategoryTextStyleInAeroWindow}}" />
                </Grid>
            </dxb:ContentViewport>
        </dxr:RibbonCheckedBorderControl>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Category.IsSelected, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="PART_SelectedContent" Property="Visibility" Value="Visible" />
                <Setter TargetName="PART_NormalContent" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxrt:LWKey RibbonPageCategory.ControlTemplateInAeroWindow}" TargetType="{x:Type dxr:RibbonPageCategoryControl}">
        <Grid x:Name="PART_Root">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <dxr:RibbonPageCategoryHeaderControl Name="PART_CategoryHeaderControl" Category="{TemplateBinding PageCategory}" />
            <dxr:RibbonCheckedBorderControl
                x:Name="PART_HeadersBackground"
                Grid.Row="1"
                Grid.RowSpan="2"
                Focusable="False"
                IsChecked="{Binding Path=PageCategory.IsSelected, RelativeSource={RelativeSource TemplatedParent}}"
                IsTabStop="False"
                Template="{DynamicResource {dxrt:LWKey RibbonPageCategory.HeadersBackgroundTemplateInAeroWindow}}"
                Visibility="{Binding Path=PageCategory.IsDefault, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}" />
            <dxr:RibbonCheckedBorderControl
                x:Name="PART_HighlightedHeadersBackground"
                Grid.Row="1"
                Grid.RowSpan="2"
                DataContext="{Binding Path=PageCategory.Color, RelativeSource={RelativeSource TemplatedParent}}"
                Focusable="False"
                IsChecked="{Binding Path=PageCategory.IsSelected, RelativeSource={RelativeSource TemplatedParent}}"
                IsTabStop="False"
                Template="{DynamicResource {dxrt:LWKey RibbonPageCategory.HighlightedHeadersBackgroundTemplateInAeroWindow}}"
                Visibility="{Binding Path=PageCategory.IsDefault, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource invertBoolToVisibilityConverter}}" />
            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ItemsPresenter x:Name="PART_ItemsPresenter" Style="{DynamicResource {dxrt:LWKey RibbonPageCategory.HeadersPresenterStyle}}" />
                <ToggleButton
                    Name="PART_CollapseButton"
                    Grid.Column="1"
                    Content="V"
                    Style="{DynamicResource {dxrt:LWKey RibbonPageCategory.AeroCollapseButtonStyle}}"
                    Visibility="Collapsed" />
                <dxb:PopupMenu
                    IsOpen="{Binding ElementName=PART_CollapseButton, Path=IsChecked, Mode=TwoWay}"
                    ItemLinksSource="{TemplateBinding CollapsedPages}"
                    Placement="Bottom"
                    PlacementTarget="{Binding ElementName=PART_CollapseButton}">
                    <dxb:PopupMenu.ItemTemplate>
                        <DataTemplate>
                            <ContentControl>
                                <dxb:BarCheckItem dxr:RibbonControl.AllowAddingToToolbar="False" Content="{Binding Caption}" IsChecked="{Binding IsSelected, Mode=TwoWay}" />
                            </ContentControl>
                        </DataTemplate>
                    </dxb:PopupMenu.ItemTemplate>
                </dxb:PopupMenu>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Ribbon.RibbonTitleBarVisibility, RelativeSource={RelativeSource Self}}" Value="Collapsed">
                <Setter TargetName="PART_CategoryHeaderControl" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <Trigger Property="IsCollapsed" Value="True">
                <Setter TargetName="PART_CollapseButton" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="ShowHeader" Value="False">
                <Setter TargetName="PART_CategoryHeaderControl" Property="Visibility" Value="Hidden" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=PageCategory.ActualIsVisible, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter TargetName="PART_Root" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Ribbon\DevExpress.Xpf.Ribbon\Themes\Generic\RibbonPageCategory.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Ribbon\DevExpress.Xpf.Ribbon\Themes\Generic\RibbonPageGroup.xaml-->
    <DataTemplate x:Key="CollapsedItemPathTemplate">
        <Grid>
            <Path
                Width="10"
                Height="2"
                Margin="2"
                Data="F1 M 0,0L 2,0L 2,2L 0,2L 0,0 Z M 4,4.76837e-007L 6,4.76837e-007L 6,2L 4,2L 4,4.76837e-007 Z M 8,4.76837e-007L 10,4.76837e-007L 10,2L 8,2L 8,4.76837e-007 Z "
                Fill="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Control}}}"
                Stretch="Fill" />
        </Grid>
    </DataTemplate>


    <ItemsPanelTemplate x:Key="{dxrt:LWKey RibbonPageGroup.PanelTemplate}">
        <dxr:RibbonPageGroupItemsPanel IsItemsHost="True" />
    </ItemsPanelTemplate>

    <Style x:Key="{dxrt:LWKey RibbonPageGroup.PopupControlStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey RibbonPageGroup.PopupControlTemplate}}" />
    </Style>

    <Style x:Key="{dxrt:LWKey RibbonPageGroup.CollapsedItemStyle}" TargetType="{x:Type dxb:BarSubItem}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid UseLayoutRounding="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBlock
                            Name="Caption"
                            Grid.RowSpan="2"
                            Margin="0,0,4,0"
                            Text="{Binding}"
                            Visibility="Collapsed">
                            <dxmvvm:Interaction.Behaviors>
                                <dxr:ControlClipper Target="{x:Reference path}" />
                            </dxmvvm:Interaction.Behaviors>
                        </TextBlock>
                        <Image
                            Name="Glyph"
                            Grid.RowSpan="2"
                            Width="16"
                            Height="16"
                            Source="{Binding PageGroup.SmallGlyph, RelativeSource={RelativeSource AncestorType={x:Type dxr:RibbonPageGroupControl}}}"
                            Stretch="None">
                            <dxmvvm:Interaction.Behaviors>
                                <dxr:ControlClipper Target="{x:Reference path}" />
                            </dxmvvm:Interaction.Behaviors>
                        </Image>
                        <ContentControl
                            Name="path"
                            Grid.Row="1"
                            Grid.Column="1"
                            Margin="-8,0,0,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Bottom"
                            ContentTemplate="{StaticResource CollapsedItemPathTemplate}" />
                    </Grid>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding PageGroup.SmallGlyph, RelativeSource={RelativeSource AncestorType={x:Type dxr:RibbonPageGroupControl}}}" Value="{x:Null}">
                            <Setter TargetName="Caption" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Glyph" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="path" Property="Margin" Value="-10,0,0,0" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BarItemDisplayMode" Value="Content" />
    </Style>
    <ControlTemplate x:Key="{dxrt:LWKey RibbonPageGroup.ControlTemplate}" TargetType="{x:Type dxr:RibbonPageGroupControl}">
        <Grid x:Name="PART_Root">
            <dxr:RibbonPageGroupContentBorder x:Name="PART_AppearanceBorder">
                <Grid>
                    <ContentControl
                        x:Name="PART_Border"
                        DataContext="{Binding Path=PageGroup.Page.PageCategory.Color, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                        Focusable="False"
                        IsTabStop="False"
                        Template="{TemplateBinding ActualBorderTemplate}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <ItemsPresenter x:Name="PART_ItemsPresenter" HorizontalAlignment="Center" Style="{DynamicResource {dxrt:LWKey RibbonPageGroup.ContentStyle}}" />
                            <ContentControl
                                x:Name="PART_Caption"
                                Grid.Row="1"
                                DataContext="{Binding Path=PageGroup.Page.PageCategory.Color, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                Focusable="False"
                                IsTabStop="False"
                                Template="{TemplateBinding ActualCaptionBorderTemplate}">
                                <dx:DXBorder x:Name="PART_HeaderBorder" Style="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PageGroup.HeaderBorderStyle}">
                                    <dxb:SplitLayoutPanel x:Name="PART_HeaderPanel" Style="{DynamicResource {dxrt:LWKey RibbonPageGroup.CaptionPanelStyle}}">
                                        <dxb:SplitLayoutPanel.Content1>
                                            <ContentControl
                                                Name="PART_CaptionContentControl"
                                                Grid.Column="1"
                                                Grid.ColumnSpan="1"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Content="{Binding Path=PageGroup.Caption, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                Focusable="False"
                                                IsTabStop="False"
                                                Style="{Binding Path=Ribbon.GroupCaptionTextStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                        </dxb:SplitLayoutPanel.Content1>
                                        <dxb:SplitLayoutPanel.Content2>
                                            <dxr:RibbonCheckedBorderControl
                                                x:Name="PART_CaptionButton"
                                                Grid.Column="1"
                                                Focusable="False"
                                                IsTabStop="False"
                                                Style="{DynamicResource {dxrt:LWKey RibbonPageGroup.CaptionButtonStyle}}"
                                                Template="{DynamicResource {dxrt:LWKey RibbonPageGroup.CaptionButtonTemplate}}"
                                                UseAppFocusValue="True"
                                                Visibility="Collapsed" />
                                        </dxb:SplitLayoutPanel.Content2>
                                    </dxb:SplitLayoutPanel>
                                </dx:DXBorder>
                            </ContentControl>
                        </Grid>
                    </ContentControl>
                    <Grid x:Name="PART_PopupButton" dxb:PopupMenuManager.IgnorePopupItemClickBehaviour="True" Visibility="Collapsed">
                        <dxb:ItemBorderControl
                            x:Name="PART_PopupButtonBorder"
                            DataContext="{Binding Path=PageGroup.Page.PageCategory.Color, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            HideBorderSide="None"
                            NormalTemplate="{TemplateBinding ActualPopupButtonBorderTemplate}" />
                        <dx:Items2Panel Style="{DynamicResource {dxrt:LWKey RibbonPageGroup.LayoutPanelStyle}}">
                            <dx:Items2Panel.Content1>
                                <ContentControl VerticalAlignment="Top" DataContext="{Binding Path=PageGroup.Page.PageCategory.Color, RelativeSource={RelativeSource Mode=TemplatedParent}}" Template="{TemplateBinding ActualPopupButtonGlyphBorderTemplate}">
                                    <dx:PixelSnapper HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <dx:DXImage Grid.Row="0" SnapsToDevicePixels="True" Source="{Binding Path=PageGroup.Glyph, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </dx:PixelSnapper>
                                </ContentControl>
                            </dx:Items2Panel.Content1>
                            <dx:Items2Panel.Content2>
                                <dxb:TextSplitterControl
                                    x:Name="PART_PopupButtonTextSplitter"
                                    BottomSideArrowContainerStyle="{DynamicResource {dxrt:LWKey RibbonPageGroup.BottomSideArrowContainerStyleInTextSplitter}}"
                                    Content="{Binding Path=PageGroup.Caption, RelativeSource={RelativeSource TemplatedParent}}"
                                    FontSettings="{DynamicResource {dxrt:LWKey RibbonPageGroup.PopupButtonFontSettings}}"
                                    IsArrowVisible="True"
                                    IsSelected="{TemplateBinding IsMouseOver}"
                                    NormalArrowTemplate="{DynamicResource {dxrt:LWKey RibbonPageGroup.NormalArrowTemplateInTextSplitter}}"
                                    NormalTextStyle="{DynamicResource {dxrt:LWKey RibbonPageGroup.NormalTextStyleInTextSplitter}}"
                                    RightSideArrowContainerStyle="{DynamicResource {dxrt:LWKey RibbonPageGroup.RightSideArrowContainerStyleInTextSplitter}}"
                                    SelectedArrowTemplate="{DynamicResource {dxrt:LWKey RibbonPageGroup.SelectedArrowTemplateInTextSplitter}}"
                                    SelectedTextStyle="{DynamicResource {dxrt:LWKey RibbonPageGroup.SelectedTextStyleInTextSplitter}}"
                                    SplitMethod="BySpace"
                                    Style="{DynamicResource {dxrt:LWKey RibbonPageGroup.TextSplitterStyle}}" />
                            </dx:Items2Panel.Content2>
                        </dx:Items2Panel>
                    </Grid>
                </Grid>
            </dxr:RibbonPageGroupContentBorder>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsCollapsed" Value="True" />
                    <Condition Property="IsInSimplifiedRibbon" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Border" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_PopupButton" Property="Visibility" Value="Visible" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsCollapsed" Value="True" />
                    <Condition Property="IsInSimplifiedRibbon" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Root" Property="Visibility" Value="Collapsed" />
            </MultiTrigger>
            <DataTrigger Binding="{Binding Path=PageGroup.IsCaptionButtonEnabled, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter TargetName="PART_CaptionButton" Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=PageGroup.ShowCaptionButton, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="PART_CaptionButton" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <Trigger Property="RibbonStyle" Value="TabletOffice">
                <Setter TargetName="PART_Caption" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="RibbonStyle" Value="OfficeSlim">
                <Setter TargetName="PART_Caption" Property="Visibility" Value="Collapsed" />
            </Trigger>

            <Trigger Property="IsInSimplifiedRibbon" Value="True">
                <Setter TargetName="PART_Caption" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_ItemsPresenter" Property="Grid.RowSpan" Value="2" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=LinksHolder.(dxi:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="PART_AppearanceBorder" Property="Background" Value="{Binding Path=LinksHolder.(dxi:AppearanceOptions.Background), RelativeSource={RelativeSource TemplatedParent}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=LinksHolder.(dxi:AppearanceOptions.HasCornerRadius), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="PART_AppearanceBorder" Property="CornerRadius" Value="{Binding Path=LinksHolder.(dxi:AppearanceOptions.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=LinksHolder.(dxi:AppearanceOptions.HasPadding), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="PART_AppearanceBorder" Property="Padding" Value="{Binding Path=LinksHolder.(dxi:AppearanceOptions.Padding), RelativeSource={RelativeSource TemplatedParent}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=LinksHolder.(dxi:AppearanceOptions.HasBorderBrush), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="PART_AppearanceBorder" Property="BorderBrush" Value="{Binding Path=LinksHolder.(dxi:AppearanceOptions.BorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=LinksHolder.(dxi:AppearanceOptions.HasBorderThickness), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="PART_AppearanceBorder" Property="BorderThickness" Value="{Binding Path=LinksHolder.(dxi:AppearanceOptions.BorderThickness), RelativeSource={RelativeSource TemplatedParent}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=LinksHolder.(dxi:AppearanceOptions.HasForeground), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="PART_CaptionContentControl" Property="Foreground" Value="{Binding Path=LinksHolder.(dxi:AppearanceOptions.Foreground), RelativeSource={RelativeSource TemplatedParent}}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Ribbon\DevExpress.Xpf.Ribbon\Themes\Generic\RibbonPageGroup.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Ribbon\DevExpress.Xpf.Ribbon\Themes\Generic\RibbonStatusBar.xaml-->



    <ItemsPanelTemplate x:Key="{dxrt:LWKey RibbonStatusBar.LeftItemsPanelTemplate}">
        <dxr:RibbonStatusBarLeftPartItemsPanel />
    </ItemsPanelTemplate>

    <ItemsPanelTemplate x:Key="{dxrt:LWKey RibbonStatusBar.RightItemsPanelTemplate}">
        <dxr:RibbonStatusBarRightPartItemsPanel />
    </ItemsPanelTemplate>

    <Style x:Key="{dxrt:LWKey RibbonStatusBar.LeftPartStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey RibbonStatusBar.LeftPartTemplate}}" />
    </Style>
    <Style x:Key="{dxrt:LWKey RibbonStatusBar.RightPartStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey RibbonStatusBar.RightPartTemplate}}" />
    </Style>
    <Style x:Key="{dxrt:LWKey RibbonStatusBar.SizeGripStyle}" TargetType="{x:Type Thumb}">
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey RibbonStatusBar.SizeGripTemplate}}" />
        <Setter Property="Width" Value="30" />
    </Style>

    <ControlTemplate x:Key="{dxrt:LWKey RibbonStatusBar.ControlTemplate}" TargetType="{x:Type dxr:RibbonStatusBarControl}">
        <Grid>
            <ContentControl
                x:Name="PART_OriginItemContent" Visibility="Hidden" />
            <DockPanel x:Name="PART_MainLayout">
                <ContentControl Focusable="False" IsTabStop="False" Style="{DynamicResource {dxrt:LWKey RibbonStatusBar.RightPartStyle}}">
                    <DockPanel.Dock>Right</DockPanel.Dock>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <dx:DXContentPresenter x:Name="PART_RightContentPresenter" />
                        <Thumb
                            x:Name="PART_GripSizeThumb"
                            Grid.Column="1"
                            Style="{DynamicResource {dxrt:LWKey RibbonStatusBar.SizeGripStyle}}"
                            Visibility="{Binding ActualIsSizeGripVisible, Converter={StaticResource boolToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                </ContentControl>
                <ContentControl IsTabStop="False" Style="{DynamicResource {dxrt:LWKey RibbonStatusBar.LeftPartStyle}}">
                    <dx:DXContentPresenter x:Name="PART_LeftContentPresenter" />
                </ContentControl>
            </DockPanel>
        </Grid>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Ribbon\DevExpress.Xpf.Ribbon\Themes\Generic\RibbonStatusBar.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Ribbon\DevExpress.Xpf.Ribbon\Themes\Generic\RibbonWindow.xaml-->
    <ControlTemplate x:Key="DXWindowTemplate" TargetType="{x:Type dxr:DXRibbonWindow}">
        <Grid x:Name="Root_Grid" VerticalAlignment="Stretch">
            <AdornerDecorator x:Name="PART_WindowAdornerDecorator" ClipToBounds="True">
                <ContentPresenter
                    x:Name="PART_RootContentPresenter"
                    dxr:RibbonControlHelper.DisplayShowModeSelector="{TemplateBinding DisplayShowModeSelector}"
                    dxr:RibbonControlHelper.IsAutoHide="{TemplateBinding RibbonAutoHideMode}"
                    ContentTemplate="{TemplateBinding ActualWindowTemplate}" />
            </AdornerDecorator>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="DXWindowEmptyTemplate" TargetType="{x:Type dx:DXWindow}">
        <Grid x:Name="Root_Grid" VerticalAlignment="Stretch">
            <AdornerDecorator x:Name="PART_WindowAdornerDecorator" ClipToBounds="True">
                <ContentPresenter x:Name="PART_RootContentPresenter" ContentTemplate="{TemplateBinding WindowTemplate}">
                    <ContentPresenter.Content>
                        <dx:DXBorder />
                    </ContentPresenter.Content>
                </ContentPresenter>
            </AdornerDecorator>
        </Grid>
    </ControlTemplate>


    <ControlTemplate x:Key="headercustomitemspresentertemplate">
        <dx:ThemedWindowHeaderItemsControl x:Name="PART_HeaderCustomItems" Style="{DynamicResource {dxt:LWKey DXTabbedWindow.ControlContainerStyle}}" />
    </ControlTemplate>

    <DataTemplate x:Key="{dxrt:LWKey Ribbon.FloatingContainerTemplate}">
        <Grid>
            <ContentControl Focusable="False" Template="{DynamicResource {dxrt:LWKey Ribbon.FloatingContainerBorderTemplate}}">
                <Grid>
                    <Grid Name="PART_RibbonLayout">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <ContentControl
                            Name="PART_HeaderBorder"
                            Height="{Binding Path=(dxr:DXRibbonWindow.RibbonHeaderBorderHeight), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}"
                            Focusable="False"
                            Template="{DynamicResource {dxrt:LWKey Ribbon.FloatingContainerHeaderBorderTemplate}}" />
                        <Grid x:Name="PART_Header" Grid.Row="0">
                            <ContentControl IsTabStop="False" Template="{DynamicResource {dxrt:LWKey Ribbon.FloatingContainerHeaderBorderTemplate}}" />
                            <Thumb x:Name="PART_DragWidget" Template="{DynamicResource {dxt:LWKey FloatingContainer.FloatingContainerDragWidgetTemplate}}" />
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentControl
                                    x:Name="PART_IconAndCaptionArea"
                                    Grid.Column="0"
                                    IsTabStop="False"
                                    Style="{DynamicResource {dxrt:LWKey Ribbon.FloatingContainerIconAndCaptionAreaStyle}}">
                                    <Grid Panel.ZIndex="100">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Image
                                            x:Name="PART_Icon"
                                            Grid.Column="0"
                                            Source="{Binding Path=(dx:FloatingContainer.FloatingContainer).Icon, RelativeSource={RelativeSource AncestorType=ContentPresenter}}"
                                            Style="{DynamicResource {dxrt:LWKey Ribbon.FloatingContainerIconStyle}}" />
                                        <ContentControl
                                            Name="PART_Title"
                                            Grid.Column="1"
                                            Content="{Binding Path=Title, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                            IsHitTestVisible="False"
                                            IsTabStop="False"
                                            Style="{DynamicResource {dxrt:LWKey Ribbon.FloatingContainerCaptionStyle}}" />
                                    </Grid>
                                </ContentControl>

                                <ContentControl
                                    Grid.Column="2"
                                    dx:HeaderItemControl.CloseTemplateProvider="{DynamicResource {dxt:LWKey RibbonHeaderItems.RibbonHeaderItemControlCloseTemplateProvider}}"
                                    dx:HeaderItemControl.CommonTemplateProvider="{DynamicResource {dxt:LWKey RibbonHeaderItems.RibbonHeaderItemControlCommonTemplateProvider}}"
                                    Focusable="False"
                                    IsTabStop="False"
                                    Opacity="0"
                                    Style="{DynamicResource {dxrt:LWKey Ribbon.FloatingContainerControlBoxStyle}}"
                                    Template="{DynamicResource {dxrt:LWKey Ribbon.FloatingContainerControlBoxTemplate}}">
                                    <StackPanel Orientation="Horizontal">

                                        <dx:HeaderItemControl Style="{DynamicResource {dxt:LWKey RibbonHeaderItems.RibbonHeaderButtonStyle}}" />
                                        <dx:HeaderItemControl Style="{DynamicResource {dxt:LWKey RibbonHeaderItems.RibbonHeaderButtonStyle}}" Visibility="{Binding Path=(dx:FloatingContainer.IsMaximized), Converter={dx:BooleanToVisibilityConverter Invert=False}, RelativeSource={RelativeSource Self}}" />
                                        <dx:HeaderItemControl Style="{DynamicResource {dxt:LWKey RibbonHeaderItems.RibbonHeaderButtonStyle}}" Visibility="{Binding Path=(dx:FloatingContainer.IsMaximized), Converter={dx:BooleanToVisibilityConverter Invert=True}, RelativeSource={RelativeSource Self}}" />
                                        <dx:HeaderItemControl Style="{DynamicResource {dxt:LWKey RibbonHeaderItems.RibbonHeaderCloseButtonStyle}}" />
                                    </StackPanel>
                                </ContentControl>
                            </Grid>
                        </Grid>
                        <ContentControl
                            x:Name="Part_WindowContent"
                            Grid.Row="1"
                            Focusable="False"
                            Style="{DynamicResource {dxrt:LWKey Ribbon.FloatingContainerContentStyle}}"
                            Template="{DynamicResource {dxrt:LWKey Ribbon.FloatingContainerContentTemplate}}">
                            <Grid>

                                <ContentControl Focusable="False" Style="{DynamicResource {dxrt:LWKey Ribbon.FloatingContainerBodyStyle}}" Template="{DynamicResource {dxrt:LWKey Ribbon.FloatingContainerBodyTemplate}}">
                                    <dx:DXWindowBackgroundPanel
                                        x:Name="PART_ContainerContent"
                                        Margin="{Binding Path=(dxr:DXRibbonWindow.ContentPresenterMargin), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}"
                                        Background="{x:Null}"
                                        Content="{Binding Path=Content, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}"
                                        ContentTemplate="{Binding Path=ContentTemplate, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}" />
                                </ContentControl>
                                <StackPanel x:Name="PART_StatusPanel" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                                    <dx:DXBorder Height="Auto" Background="{x:Null}">
                                        <Thumb
                                            x:Name="PART_SizeGrip"
                                            Width="16"
                                            Height="16"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Bottom"
                                            Cursor="SizeNWSE"
                                            Template="{DynamicResource {dxt:LWKey FloatingContainer.FloatingContainerSizeGripTemplate}}" />
                                    </dx:DXBorder>
                                </StackPanel>
                            </Grid>
                        </ContentControl>
                    </Grid>

                    <Grid
                        Name="PART_Buttons"
                        VerticalAlignment="Top"
                        Background="{x:Null}"
                        KeyboardNavigation.TabNavigation="None">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <ContentControl
                            Name="PART_Caption"
                            IsTabStop="False"
                            Visibility="Hidden"
                            Style="{DynamicResource {dxrt:LWKey Ribbon.FloatingContainerCaptionStyle}}">
                            <ContentPresenter
                                Grid.Column="0"
                                Panel.ZIndex="100"
                                Content="{Binding Path=Title, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}"
                                ContentTemplate="{DynamicResource {dxt:LWKey FloatingContainer.FloatingContainerCaptionTemplate}}" />
                        </ContentControl>
                        <dxri:RibbonControlBoxContainer x:Name="PART_ControlBoxContainer" Grid.Column="2" />
                    </Grid>
                </Grid>
            </ContentControl>
            <Control
                x:Name="PART_ResizeFrame"
                Focusable="False"
                Template="{DynamicResource {dxt:LWKey FloatingContainer.FloatingContainerResizeFrame}}"
                Visibility="{Binding Path=(dx:FloatingContainer.IsMaximized), Converter={dx:BooleanToVisibilityConverter Invert=True}, RelativeSource={RelativeSource Self}}" />
        </Grid>

        <DataTemplate.Triggers>
            <Trigger Property="dxr:RibbonControlHelper.IsAutoHide" Value="True">
                <Setter TargetName="Part_WindowContent" Property="Margin" Value="0" />
            </Trigger>
            <Trigger Property="dx:FloatingContainer.IsActive" Value="False">
                <Setter TargetName="PART_IconAndCaptionArea" Property="Opacity" Value="0.5" />
            </Trigger>
            <Trigger Property="dx:FloatingContainer.FloatingContainer" Value="{x:Null}">
                <Setter TargetName="PART_StatusPanel" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=(dx:FloatingContainer.FloatingContainer).AllowSizing, RelativeSource={RelativeSource Self}}" Value="false">
                <Setter TargetName="PART_StatusPanel" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsCaptionVisible, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}" Value="False">
                <Setter TargetName="PART_Header" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_IconAndCaptionArea" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_HeaderBorder" Property="Visibility" Value="Visible" />
                <Setter TargetName="PART_Caption" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=ShowTitle, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}" Value="False">
                <Setter TargetName="PART_Title" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=ShowIcon, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}" Value="False">
                <Setter TargetName="PART_Icon" Property="Visibility" Value="Collapsed" />
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=WindowState, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}" Value="Minimized" />
                    <Condition Binding="{Binding Path=ShowInTaskbar, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_Buttons" Property="Width" Value="{Binding Path=Width, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}" />
                <Setter TargetName="PART_Buttons" Property="HorizontalAlignment" Value="Left" />
            </MultiDataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <ControlTemplate x:Key="DXWindowContainerTemplate" TargetType="{x:Type dxr:DXRibbonWindowContainer}">
        <ContentControl Focusable="False" Template="{DynamicResource {dxrt:LWKey Ribbon.FloatingContainerBorderTemplate}}">
            <Grid>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <ContentControl
                        Name="PART_HeaderBorder"
                        Height="{Binding Path=(dxr:DXRibbonWindow.RibbonHeaderBorderHeight), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindowContainer}}}"
                        Template="{DynamicResource {dxrt:LWKey Ribbon.FloatingContainerHeaderBorderTemplate}}"
                        Visibility="Collapsed" />


                    <Grid
                        x:Name="PART_Header"
                        Grid.Row="0"
                        dx:HeaderItemControl.CloseTemplateProvider="{DynamicResource {dxt:LWKey RibbonHeaderItems.RibbonHeaderItemControlCloseTemplateProvider}}"
                        dx:HeaderItemControl.CommonTemplateProvider="{DynamicResource {dxt:LWKey RibbonHeaderItems.RibbonHeaderItemControlCommonTemplateProvider}}">
                        <ContentControl Template="{DynamicResource {dxrt:LWKey Ribbon.FloatingContainerHeaderBorderTemplate}}" />
                        <Thumb x:Name="PART_DragWidget" Template="{DynamicResource {dxt:LWKey FloatingContainer.FloatingContainerDragWidgetTemplate}}" />
                        <Grid UseLayoutRounding="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentControl x:Name="PART_IconAndCaptionArea" Grid.Column="0" Style="{DynamicResource {dxrt:LWKey Ribbon.FloatingContainerIconAndCaptionAreaStyle}}">
                                <Grid Panel.ZIndex="100">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Image
                                        x:Name="PART_Icon"
                                        Grid.Column="0"
                                        Source="{TemplateBinding Icon}"
                                        Style="{DynamicResource {dxrt:LWKey Ribbon.FloatingContainerIconStyle}}" />
                                    <ContentControl
                                        Name="PART_Caption"
                                        Grid.Column="1"
                                        Content="{TemplateBinding Caption}"
                                        IsHitTestVisible="False"
                                        Style="{DynamicResource {dxrt:LWKey Ribbon.FloatingContainerCaptionStyle}}" />
                                </Grid>
                            </ContentControl>
                            <dxri:RibbonControlBoxContainer
                                x:Name="PART_ControlBoxContainer"
                                Grid.Column="1"
                                IsCloseButtonVisible="{TemplateBinding IsCloseButtonVisible}"
                                IsMaximizeButtonVisible="{TemplateBinding IsMaximizeButtonVisible}"
                                IsMinimizeButtonVisible="{TemplateBinding IsMinimizeButtonVisible}"
                                IsRestoreButtonVisible="{TemplateBinding IsRestoreButtonVisible}" />
                        </Grid>
                    </Grid>

                    <ContentControl
                        Grid.Row="1"
                        Focusable="False"
                        Style="{DynamicResource {dxrt:LWKey Ribbon.FloatingContainerContentStyle}}"
                        Template="{DynamicResource {dxrt:LWKey Ribbon.FloatingContainerContentTemplate}}">
                        <Grid>
                            <ContentControl Focusable="False" Style="{DynamicResource {dxrt:LWKey Ribbon.FloatingContainerBodyStyle}}" Template="{DynamicResource {dxrt:LWKey Ribbon.FloatingContainerBodyTemplate}}">
                                <ContentPresenter Margin="{Binding Path=(dxr:DXRibbonWindow.ContentPresenterMargin), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindowContainer}}}" />
                            </ContentControl>
                            <StackPanel x:Name="PART_StatusPanel" Visibility="Collapsed">
                                <dx:DXBorder Height="Auto" HorizontalAlignment="Right" Background="{x:Null}">
                                    <Thumb
                                        x:Name="PART_SizeGrip"
                                        Width="16"
                                        Height="16"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Bottom"
                                        Cursor="SizeNWSE"
                                        Template="{DynamicResource {dxt:LWKey FloatingContainer.FloatingContainerSizeGripTemplate}}" />
                                </dx:DXBorder>
                            </StackPanel>
                        </Grid>
                    </ContentControl>
                </Grid>

                <Grid VerticalAlignment="Top" Background="{x:Null}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ContentControl
                        Name="PART_CaptionContainer"
                        Visibility="Hidden"
                        Style="{DynamicResource {dxrt:LWKey Ribbon.FloatingContainerCaptionStyle}}">
                        <ContentPresenter
                            Grid.Column="0"
                            Panel.ZIndex="100"
                            Content="{TemplateBinding Caption}"
                            ContentTemplate="{DynamicResource {dxt:LWKey FloatingContainer.FloatingContainerCaptionTemplate}}" />
                    </ContentControl>
                </Grid>
            </Grid>
        </ContentControl>

        <ControlTemplate.Triggers>
            <Trigger Property="IsHeaderVisible" Value="False">
                <Setter TargetName="PART_Header" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_IconAndCaptionArea" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_HeaderBorder" Property="Visibility" Value="Visible" />
                <Setter TargetName="PART_CaptionContainer" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsStatusBarVisible" Value="True">
                <Setter TargetName="PART_StatusPanel" Property="Visibility" Value="Visible" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=IsActive}" Value="False">
                <Setter TargetName="PART_IconAndCaptionArea" Property="Opacity" Value="0.5" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=ShowTitle, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}" Value="False">
                <Setter TargetName="PART_Caption" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=ShowIcon, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}" Value="False">
                <Setter TargetName="PART_Icon" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="DXAeroWindowContainerTemplate" TargetType="{x:Type dxr:DXRibbonWindowContainer}">
        <Grid>
            <dx:DXBorder BorderBrush="#FF4E6166" BorderThickness="1" CornerRadius="4">
                <dx:DXBorder
                    Background="#FFF0FFFF"
                    BorderBrush="#FFECF4FC"
                    BorderThickness="1"
                    CornerRadius="3" />
            </dx:DXBorder>

            <Grid>
                <Grid Margin="{Binding Path=(dxr:DXRibbonWindow.AeroContentMargin), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindowContainer}}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid x:Name="PART_Header" Grid.Row="0">
                        <ContentControl Template="{DynamicResource {dxrt:LWKey DXRibbonAeroWindow.AeroWindowHeaderBorderTemplate}}" />
                        <Thumb x:Name="PART_DragWidget" Template="{DynamicResource {dxt:LWKey FloatingContainer.FloatingContainerDragWidgetTemplate}}" />

                        <ContentControl x:Name="PART_IconAndCaptionArea" Grid.Column="0" Style="{DynamicResource {dxrt:LWKey DXRibbonAeroWindow.AeroWindowIconAndCaptionAreaStyle}}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Image
                                    x:Name="PART_Icon"
                                    Grid.Column="0"
                                    Panel.ZIndex="100"
                                    Source="{TemplateBinding Icon}"
                                    Style="{DynamicResource {dxrt:LWKey DXRibbonAeroWindow.AeroWindowIconStyle}}" />
                                <ContentControl
                                    Grid.Column="1"
                                    Panel.ZIndex="100"
                                    Content="{TemplateBinding Caption}"
                                    IsHitTestVisible="False"
                                    Style="{DynamicResource {dxrt:LWKey DXRibbonAeroWindow.AeroWindowCaptionStyle}}"
                                    Visibility="{Binding Path=ShowTitle, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}, Converter={StaticResource boolToVisibilityConverter}}" />
                            </Grid>
                        </ContentControl>
                    </Grid>

                    <ContentControl
                        Grid.Row="1"
                        Focusable="False"
                        Style="{DynamicResource {dxrt:LWKey DXRibbonAeroWindow.AeroWindowContentStyle}}"
                        Template="{DynamicResource {dxrt:LWKey DXRibbonAeroWindow.AeroWindowContentTemplate}}">
                        <Grid>
                            <ContentControl Focusable="False" Style="{DynamicResource {dxrt:LWKey DXRibbonAeroWindow.AeroWindowBodyStyle}}" Template="{DynamicResource {dxrt:LWKey DXRibbonAeroWindow.AeroWindowBodyTemplate}}">
                                <dx:DXWindowBackgroundPanel x:Name="PART_ContainerContent" Margin="{Binding Path=(dxr:DXRibbonWindow.ContentPresenterMargin), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindowContainer}}}" />
                            </ContentControl>
                            <StackPanel x:Name="PART_StatusPanel" VerticalAlignment="Bottom" Visibility="Collapsed">
                                <dx:DXBorder Height="Auto" HorizontalAlignment="Right" Background="{x:Null}">
                                    <Thumb
                                        x:Name="PART_SizeGrip"
                                        Width="16"
                                        Height="16"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Bottom"
                                        Cursor="SizeNWSE"
                                        Template="{DynamicResource {dxt:LWKey FloatingContainer.FloatingContainerSizeGripTemplate}}" />
                                </dx:DXBorder>
                            </StackPanel>
                        </Grid>
                    </ContentControl>
                </Grid>

                <Grid VerticalAlignment="Top" Background="{x:Null}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ContentControl
                        Name="PART_Caption"
                        IsHitTestVisible="False"
                        Opacity="0"
                        Style="{DynamicResource {dxrt:LWKey DXRibbonAeroWindow.AeroWindowCaptionStyle}}">
                        <ContentPresenter
                            Grid.Column="0"
                            Panel.ZIndex="100"
                            Content="{Binding Path=Title, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}"
                            ContentTemplate="{DynamicResource {dxrt:LWKey DXRibbonAeroWindow.AeroWindowCaptionTemplate}}" />
                    </ContentControl>
                    <ContentControl
                        x:Name="PART_ControlBoxContainer"
                        Grid.Column="1"
                        IsHitTestVisible="False"
                        Opacity="0" />
                </Grid>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHeaderVisible" Value="False">
                <Setter TargetName="PART_Caption" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_Header" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_IconAndCaptionArea" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsStatusBarVisible" Value="True">
                <Setter TargetName="PART_StatusPanel" Property="Visibility" Value="Visible" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=IsActive}" Value="False">
                <Setter TargetName="PART_IconAndCaptionArea" Property="Opacity" Value="0.5" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=ShowTitle, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}" Value="False">
                <Setter TargetName="PART_Caption" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=ShowIcon, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}" Value="False">
                <Setter TargetName="PART_Icon" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--#region DEFAULT STYLES-->

    <Style x:Key="RibbonControl.DefaultStyleBase" TargetType="{x:Type dxr:RibbonControl}">
        <Setter Property="dx:HeaderItemControl.ExtendedCommonTemplateProvider" Value="{DynamicResource {dxt:LWKey RibbonHeaderItems.RibbonHeaderItemControlCommonTemplateProvider}}" />
        <Setter Property="dx:HeaderItemControl.ExtendedCloseTemplateProvider" Value="{DynamicResource {dxt:LWKey RibbonHeaderItems.RibbonHeaderItemControlCloseTemplateProvider}}" />
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey Ribbon.ControlTemplate}}" />
        <Setter Property="PageCaptionMinWidth" Value="{DynamicResource {dxrt:LWKey Ribbon.PageCaptionMinWidth}}" />
        <Setter Property="HoverPageCaptionTextStyle" Value="{DynamicResource {dxrt:LWKey Ribbon.HoverPageCaptionTextStyle}}" />
        <Setter Property="NormalPageCaptionTextStyle" Value="{DynamicResource {dxrt:LWKey Ribbon.NormalPageCaptionTextStyle}}" />
        <Setter Property="SelectedPageCaptionTextStyle" Value="{DynamicResource {dxrt:LWKey Ribbon.SelectedPageCaptionTextStyle}}" />
        <Setter Property="GroupCaptionTextStyle" Value="{DynamicResource {dxrt:LWKey Ribbon.GroupCaptionTextStyle}}" />
        <Setter Property="MaxPageCaptionTextIndent" Value="{DynamicResource {dxrt:LWKey Ribbon.MaxPageCaptionTextIndent}}" />
        <Setter Property="RowIndent" Value="{DynamicResource {dxrt:LWKey Ribbon.RowIndent}}" />
        <Setter Property="ColumnIndent" Value="{DynamicResource {dxrt:LWKey Ribbon.ColumnIndent}}" />
        <Setter Property="ApplicationMenuVerticalOffset" Value="{DynamicResource {dxrt:LWKey Ribbon.ApplicationMenuVerticalOffset}}" />
        <Setter Property="ApplicationMenuHorizontalOffset" Value="{DynamicResource {dxrt:LWKey Ribbon.ApplicationMenuHorizontalOffset}}" />
        <Setter Property="StandaloneHeaderBorderTemplate" Value="{DynamicResource {dxrt:LWKey Ribbon.StandaloneHeaderBorderTemplate}}" />
        <Setter Property="ApplicationButton2007Style" Value="{DynamicResource {dxrt:LWKey ApplicationButton.Style2007}}" />
        <Setter Property="ApplicationButton2010Style" Value="{DynamicResource {dxrt:LWKey ApplicationButton.Style2010}}" />
        <Setter Property="ApplicationButton2007StyleInPopup" Value="{DynamicResource {dxrt:LWKey ApplicationButton.Style2007InPopup}}" />
        <Setter Property="ApplicationButton2010StyleInPopup" Value="{DynamicResource {dxrt:LWKey ApplicationButton.Style2010InPopup}}" />
        <Setter Property="ApplicationButtonTabletOfficeStyle" Value="{DynamicResource {dxrt:LWKey ApplicationButton.StyleTabletOffice}}" />
        <Setter Property="ApplicationButtonTabletOfficeStyleInPopup" Value="{DynamicResource {dxrt:LWKey ApplicationButton.StyleTabletOfficeInPopup}}" />
        <Setter Property="ApplicationButtonOfficeSlimStyle" Value="{DynamicResource {dxrt:LWKey ApplicationButton.StyleOfficeSlim}}" />
        <Setter Property="ApplicationButtonOfficeSlimStyleInPopup" Value="{DynamicResource {dxrt:LWKey ApplicationButton.StyleOfficeSlimInPopup}}" />

        <Setter Property="ApplicationButtonLargeIcon" Value="pack://application:,,,/DevExpress.Xpf.Ribbon.v24.1;component/Images/ApplicationButtonLargeIcon.png" />
        <Setter Property="ApplicationButtonSmallIcon" Value="{dx:SvgImageSource Uri='pack://application:,,,/DevExpress.Xpf.Ribbon.v24.1;component/Images/ApplicationButtonSmallIcon.svg', Size='20,16'}" />

        <Setter Property="ApplicationButtonPopupHorizontalOffset" Value="{DynamicResource {dxrt:LWKey ApplicationButton.PopupHorizontalOffset}}" />
        <Setter Property="ApplicationButtonPopupVerticalOffset" Value="{DynamicResource {dxrt:LWKey ApplicationButton.PopupVerticalOffset}}" />
        <Setter Property="ApplicationButton2010PopupHorizontalOffset" Value="{DynamicResource {dxrt:LWKey ApplicationButton.Popup2010HorizontalOffset}}" />
        <Setter Property="ApplicationButton2010PopupVerticalOffset" Value="{DynamicResource {dxrt:LWKey ApplicationButton.Popup2010VerticalOffset}}" />
        <Setter Property="SelectedPagePopupMargin" Value="{DynamicResource {dxrt:LWKey Ribbon.SelectedPagePopupMargin}}" />

        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="HeaderQAT2007ContainerStyle" Value="{DynamicResource {dxrt:LWKey Ribbon.HeaderQuickAccessToolbar2007ContainerStyle}}" />
        <Setter Property="HeaderQAT2007ContainerStyleInRibbonWindow" Value="{DynamicResource {dxrt:LWKey Ribbon.HeaderQuickAccessToolbar2007ContainerStyleInRibbonWindow}}" />
        <Setter Property="HeaderQAT2010ContainerStyle" Value="{DynamicResource {dxrt:LWKey Ribbon.HeaderQuickAccessToolbar2010ContainerStyle}}" />
        <Setter Property="HeaderQAT2010ContainerStyleInRibbonWindow" Value="{DynamicResource {dxrt:LWKey Ribbon.HeaderQuickAccessToolbar2010ContainerStyleInRibbonWindow}}" />
        <Setter Property="HeaderQATContainerStyleWithoutApplicationIcon" Value="{DynamicResource {dxrt:LWKey Ribbon.HeaderQuickAccessToolbarContainerStyleWithoutApplicationIcon}}" />

        <Setter Property="ApplicationButton2007StyleInAeroWindow" Value="{DynamicResource {dxrt:LWKey ApplicationButton.Style2007InAeroWindow}}" />
        <Setter Property="HeaderBorderTemplateInRibbonWindow" Value="{DynamicResource {dxrt:LWKey Ribbon.HeaderBorderTemplateInRibbonWindow}}" />
        <Setter Property="AeroTemplate" Value="{DynamicResource {dxrt:LWKey Ribbon.AeroTemplate}}" />
        <Setter Property="DefaultTemplate" Value="{DynamicResource {dxrt:LWKey Ribbon.ControlTemplate}}" />
        <Setter Property="AeroBorderRibbonStyle" Value="{DynamicResource {dxrt:LWKey Ribbon.AeroBorderRibbonStyle}}" />
        <Setter Property="AeroBorderTopOffset" Value="{DynamicResource {dxrt:LWKey Ribbon.AeroBorderTopOffset}}" />
        <Setter Property="CollapsedRibbonAeroBorderTopOffset" Value="{DynamicResource {dxrt:LWKey Ribbon.CollapsedRibbonAeroBorderTopOffset}}" />
        <Setter Property="HeaderQATContainerStyleWithoutAppIconInAeroWindow" Value="{DynamicResource {dxrt:LWKey Ribbon.HeaderQuickAccessToolbarContainerStyleWithoutAppIconInAeroWindow}}" />
        <Setter Property="HeaderQAT2010ContainerStyleInAeroWindow" Value="{DynamicResource {dxrt:LWKey Ribbon.HeaderQuickAccessToolbar2010ContainerStyleInAeroWindow}}" />
        <Setter Property="HeaderQAT2007ContainerStyleInAeroWindow" Value="{DynamicResource {dxrt:LWKey Ribbon.HeaderQuickAccessToolbar2007ContainerStyleInAeroWindow}}" />
        <Setter Property="ApplicationMenuVerticalOffsetInAeroWindow" Value="{DynamicResource {dxrt:LWKey Ribbon.ApplicationMenuVerticalOffsetInAeroWindow}}" />
        <Setter Property="ApplicationMenuHorizontalOffsetInAeroWindow" Value="{DynamicResource {dxrt:LWKey Ribbon.ApplicationMenuHorizontalOffsetInAeroWindow}}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Margin" Value="{dx:LWThickness '0, Win11=(0,0,0,2)'}"/>
        <Style.Triggers>
            <Trigger Property="RibbonStyle" Value="TabletOffice">
                <Setter Property="RibbonTitleBarVisibility" Value="Collapsed" />
                <Setter Property="ApplicationButtonSmallIcon" Value="{x:Null}" />
            </Trigger>
            <Trigger Property="RibbonStyle" Value="OfficeSlim">
                <Setter Property="ToolbarShowMode" Value="ShowBelow" />
                <Setter Property="RibbonTitleBarVisibility" Value="Collapsed" />
                <Setter Property="ApplicationButtonSmallIcon" Value="{x:Null}" />
                <Setter Property="ApplicationButtonText" Value="{dxr:RibbonControlStringId RibbonCustomizationStrings_File}" />
            </Trigger>
            <Trigger Property="RibbonStyle" Value="Office2019">
                <Setter Property="MinimizationButtonPosition" Value="PageContent" />
                <Setter Property="AllowSimplifiedRibbon" Value="True" />
                <Setter Property="ApplicationButtonSmallIcon" Value="{x:Null}" />
                <Setter Property="ApplicationButtonText" Value="{dxr:RibbonControlStringId RibbonCustomizationStrings_File}" />
                <Setter Property="ToolbarHideSeparators" Value="True" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RibbonPageCategoryControl.DefaultStyleBase" TargetType="{x:Type dxr:RibbonPageCategoryControl}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey RibbonPageCategory.ControlTemplate}}" />
        <Setter Property="ItemsPanel" Value="{DynamicResource {dxrt:LWKey RibbonPageCategory.PanelTemplate}}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="AeroTemplate" Value="{DynamicResource {dxrt:LWKey RibbonPageCategory.ControlTemplateInAeroWindow}}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(dxr:RibbonControl.Ribbon).PageCategoryAlignment, RelativeSource={RelativeSource Mode=Self}}" Value="Right" />
                    <Condition Binding="{Binding Path=PageCategory.IsDefault, RelativeSource={RelativeSource Mode=Self}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="HorizontalAlignment" Value="Right" />
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding Path=PageCategory.Ribbon.RibbonStyle, RelativeSource={RelativeSource Mode=Self}}" Value="OfficeSlim">
                <Setter Property="AllowCollapse" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=PageCategory.IsVisible, RelativeSource={RelativeSource Mode=Self}}" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <Trigger Property="AllowCollapse" Value="True">
                <Setter Property="ItemsPanel" Value="{DynamicResource {dxrt:LWKey RibbonPageCategory.OfficeSlimPanelTemplate}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RibbonPageCategoriesPane.DefaultStyleBase" TargetType="{x:Type dxr:RibbonPageCategoriesPane}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey RibbonPageCategoriesPane.ControlTemplate}}" />
        <Setter Property="ItemsPanel" Value="{DynamicResource {dxrt:LWKey RibbonPageCategoriesPane.PanelTemplate}}" />
        <Setter Property="IsTabStop" Value="False" />
    </Style>
    <Style x:Key="RibbonPageHeaderControl.DefaultStyleBase" TargetType="{x:Type dxr:RibbonPageHeaderControl}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey RibbonPage.PageHeaderTemplate}}" />
        <Setter Property="AeroTemplate" Value="{DynamicResource {dxrt:LWKey RibbonPage.AeroPageHeaderTemplate}}" />
        <Setter Property="IsPageSelected" Value="{Binding Path=Page.IsSelected, RelativeSource={RelativeSource Self}}" />
        <Setter Property="IsRibbonMinimized" Value="{Binding Path=(dxr:RibbonControl.Ribbon).IsMinimized, RelativeSource={RelativeSource Self}}" />
        <Setter Property="IsAeroMode" Value="{Binding Path=(dxr:RibbonControl.Ribbon).IsAeroMode, RelativeSource={RelativeSource Self}}" />
        <Setter Property="IsMinimizedRibbonCollapsed" Value="{Binding Path=(dxr:RibbonControl.Ribbon).IsMinimizedRibbonCollapsed, RelativeSource={RelativeSource Self}}" />
        <Setter Property="IsRibbonBackStageViewOpened" Value="{Binding Path=(dxr:RibbonControl.Ribbon).IsBackStageViewOpen, RelativeSource={RelativeSource Self}}" />
        <Setter Property="CommonPageCaptionMinWidth" Value="{Binding Path=(dxr:RibbonControl.Ribbon).PageCaptionMinWidth, RelativeSource={RelativeSource Self}}" />
        <Setter Property="PageCaptionMinWidth" Value="{Binding Path=Page.CaptionMinWidth, RelativeSource={RelativeSource Self}}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Page.ActualIsVisible, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RibbonSelectedPageControl.DefaultStyleBase" TargetType="{x:Type dxr:RibbonSelectedPageControl}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey RibbonPage.SelectedPageTemplate}}" />
        <Setter Property="ItemsPanel" Value="{DynamicResource {dxrt:LWKey RibbonPage.SelectedPagePanelTemplate}}" />
        <Setter Property="BorderTemplate" Value="{DynamicResource {dxrt:LWKey Ribbon.SelectedPageBorderTemplate}}" />
        <Setter Property="BorderTemplateInPopup" Value="{DynamicResource {dxrt:LWKey Ribbon.SelectedPageBorderTemplateInPopup}}" />
        <Setter Property="HighlightedBorderTemplate" Value="{DynamicResource {dxrt:LWKey Ribbon.HighlightedSelectedPageBorderTemplate}}" />
        <Setter Property="HighlightedBorderTemplateInPopup" Value="{DynamicResource {dxrt:LWKey Ribbon.HighlightedSelectedPageBorderTemplateInPopup}}" />
    </Style>
    <Style x:Key="RibbonPageGroupControl.DefaultStyleBase" TargetType="{x:Type dxr:RibbonPageGroupControl}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey RibbonPageGroup.ControlTemplate}}" />
        <Setter Property="UseLightweightTemplates" Value="{dxb:BarsUseLightweightTemplates {dxt:LWKey BarItemRender.UseLightweightTemplates}}" />
        <Setter Property="ItemRenderTemplateSelector" Value="{DynamicResource {dxt:LWKey BarItemRender.TemplateSelector}}" />
        <Setter Property="ItemsPanel" Value="{DynamicResource {dxrt:LWKey RibbonPageGroup.PanelTemplate}}" />
        <Setter Property="BorderTemplate" Value="{DynamicResource {dxrt:LWKey RibbonPageGroup.BorderTemplate}}" />
        <Setter Property="HighlightedBorderTemplate" Value="{DynamicResource {dxrt:LWKey RibbonPageGroup.HighlightedBorderTemplate}}" />
        <Setter Property="BorderTemplateInPopup" Value="{DynamicResource {dxrt:LWKey RibbonPageGroup.BorderTemplateInPopup}}" />
        <Setter Property="HighlightedBorderTemplateInPopup" Value="{DynamicResource {dxrt:LWKey RibbonPageGroup.HighlightedBorderTemplateInPopup}}" />
        <Setter Property="PopupButtonBorderTemplate" Value="{DynamicResource {dxrt:LWKey RibbonPageGroup.PopupButtonBorderTemplate}}" />
        <Setter Property="PopupButtonGlyphBorderTemplate" Value="{DynamicResource {dxrt:LWKey RibbonPageGroup.PopupButtonGlyphBorderTemplate}}" />
        <Setter Property="PopupButtonContentBorderTemplate" Value="{DynamicResource {dxrt:LWKey RibbonPageGroup.PopupButtonContentBorderTemplate}}" />
        <Setter Property="HighlightedPopupButtonBorderTemplate" Value="{DynamicResource {dxrt:LWKey RibbonPageGroup.HighlightedPopupButtonBorderTemplate}}" />
        <Setter Property="HighlightedPopupButtonGlyphBorderTemplate" Value="{DynamicResource {dxrt:LWKey RibbonPageGroup.HighlightedPopupButtonGlyphBorderTemplate}}" />
        <Setter Property="HighlightedPopupButtonContentBorderTemplate" Value="{DynamicResource {dxrt:LWKey RibbonPageGroup.HighlightedPopupButtonContentBorderTemplate}}" />
        <Setter Property="CaptionBorderTemplate" Value="{DynamicResource {dxrt:LWKey RibbonPageGroup.CaptionBorderTemplate}}" />
        <Setter Property="HighlightedCaptionBorderTemplate" Value="{DynamicResource {dxrt:LWKey RibbonPageGroup.HighlightedCaptionBorderTemplate}}" />
        <Setter Property="PopupHorizontalOffset" Value="{DynamicResource {dxrt:LWKey RibbonPageGroup.PopupHorizontalOffset}}" />
        <Setter Property="PopupVerticalOffset" Value="{DynamicResource {dxrt:LWKey RibbonPageGroup.PopupVerticalOffset}}" />
        <Setter Property="RibbonStyle" Value="{Binding Path=(dxr:RibbonControl.Ribbon).RibbonStyle, RelativeSource={RelativeSource Self}}" />
        <Setter Property="IsPageGroupVisible" Value="{Binding Path=PageGroup.ActualIsVisible, RelativeSource={RelativeSource Self}}" />
        <Setter Property="AllowCollapse" Value="{Binding Path=PageGroup.AllowCollapse, RelativeSource={RelativeSource Self}}" />
        <Setter Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxrt:LWKey RibbonSvgPalette.SvgPaletteInRibbonPageGroup}}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=LinksHolder.(dxi:AppearanceOptions.HasMargin), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Margin" Value="{Binding Path=LinksHolder.(dxi:AppearanceOptions.Margin), RelativeSource={RelativeSource Self}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RibbonQuickAccessToolbarControl.DefaultStyleBase" TargetType="{x:Type dxr:RibbonQuickAccessToolbarControl}">
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey QuickAccessToolbar.RibbonToolbarTemplate}}" />
        <Setter Property="ItemsPanel" Value="{DynamicResource {dxrt:LWKey QuickAccessToolbar.RibbonToolbarItemsPanelTemplate}}" />
        <Setter Property="UseLightweightTemplates" Value="{dxb:BarsUseLightweightTemplates {dxt:LWKey BarItemRender.UseLightweightTemplates}}" />
        <Setter Property="ItemRenderTemplateSelector" Value="{DynamicResource {dxt:LWKey BarItemRender.TemplateSelector}}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsEnabled" Value="{Binding Path=Toolbar.IsEnabled, RelativeSource={RelativeSource Mode=Self}}" />
        <Setter Property="LeftContentTemplateInHeaderForOffice2007RibbonStyle" Value="{DynamicResource {dxrt:LWKey QuickAccessToolbar.RibbonToolbarLeftContentTemplate}}" />

        <Setter Property="LeftContentTemplateInHeaderForOffice2010RibbonStyle" Value="{DynamicResource {dxrt:LWKey QuickAccessToolbar.RibbonToolbarLeftContentTemplate2010}}" />
        <Setter Property="LeftContentTemplateInFooterForOffice2007RibbonStyle" Value="{DynamicResource {dxrt:LWKey QuickAccessToolbar.RibbonToolbarLeftContentTemplateInFooter}}" />
        <Setter Property="RightContentTemplateInHeaderForOffice2007RibbonStyle" Value="{DynamicResource {dxrt:LWKey QuickAccessToolbar.RibbonToolbarRightContentTemplate}}" />
        <Setter Property="RightContentTemplateInFooterForOffice2007RibbonStyle" Value="{DynamicResource {dxrt:LWKey QuickAccessToolbar.RibbonToolbarRightContentTemplateInFooter}}" />

        <Setter Property="LeftContentTemplateInFooterForOffice2010RibbonStyle" Value="{DynamicResource {dxrt:LWKey QuickAccessToolbar.RibbonToolbarLeftContentTemplateInFooter}}" />
        <Setter Property="RightContentTemplateInHeaderForOffice2010RibbonStyle" Value="{DynamicResource {dxrt:LWKey QuickAccessToolbar.RibbonToolbarRightContentTemplate2010}}" />
        <Setter Property="RightContentTemplateInFooterForOffice2010RibbonStyle" Value="{DynamicResource {dxrt:LWKey QuickAccessToolbar.RibbonToolbarRightContentTemplateInFooter}}" />
        <Setter Property="LeftContentTemplateInPopup" Value="{DynamicResource {dxrt:LWKey QuickAccessToolbar.RibbonToolbarLeftContentTemplateInPopup}}" />
        <Setter Property="LeftContentTemplateInTitle" Value="{DynamicResource {dxrt:LWKey QuickAccessToolbar.RibbonToolbarLeftContentTemplateInTitle}}" />
        <Setter Property="RightContentTemplateInPopup" Value="{DynamicResource {dxrt:LWKey QuickAccessToolbar.RibbonToolbarRightContentTemplateInPopup}}" />
        <Setter Property="RightContentTemplateInTitle" Value="{DynamicResource {dxrt:LWKey QuickAccessToolbar.RibbonToolbarRightContentTemplateInTitle}}" />
        <Setter Property="CustomizationButtonTemplateInFooter" Value="{DynamicResource {dxrt:LWKey QuickAccessToolbar.RibbonToolbarCustomizationButtonTemplateInFooter}}" />
        <Setter Property="CustomizationButtonTemplateInHeader" Value="{DynamicResource {dxrt:LWKey QuickAccessToolbar.RibbonToolbarCustomizationButtonTemplate}}" />
        <Setter Property="DropDownButtonTemplateInFooter" Value="{DynamicResource {dxrt:LWKey QuickAccessToolbar.RibbonToolbarDropDownButtonTemplateInFooter}}" />
        <Setter Property="DropDownButtonTemplateInHeader" Value="{DynamicResource {dxrt:LWKey QuickAccessToolbar.RibbonToolbarDropDownButtonTemplate}}" />
        <Setter Property="LeftContentTemplateInAeroHeaderForOffice2007RibbonStyle" Value="{DynamicResource {dxrt:LWKey QuickAccessToolbar.RibbonToolbarLeftContentTemplateInAeroHeader}}" />
        <Setter Property="RightContentTemplateInAeroHeaderForOffice2007RibbonStyle" Value="{DynamicResource {dxrt:LWKey QuickAccessToolbar.RibbonToolbarRightContentTemplateInAeroHeader}}" />
        <Setter Property="LeftContentTemplateInAeroHeaderForOffice2010RibbonStyle" Value="{DynamicResource {dxrt:LWKey QuickAccessToolbar.RibbonToolbarLeftContentTemplate2010InAeroHeader}}" />
        <Setter Property="RightContentTemplateInAeroHeaderForOffice2010RibbonStyle" Value="{DynamicResource {dxrt:LWKey QuickAccessToolbar.RibbonToolbarRightContentTemplate2010InAeroHeader}}" />

        <Setter Property="dxi:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxrt:LWKey RibbonSvgPalette.SvgPaletteInRibbonToolbar}}" />
        <Style.Triggers>
            <Trigger Property="Placement" Value="Footer">
                <Setter Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxrt:LWKey RibbonSvgPalette.SvgPaletteInRibbonToolbarFooter}}" />
            </Trigger>
            <Trigger Property="Placement" Value="Popup">
                <Setter Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxrt:LWKey RibbonSvgPalette.SvgPaletteInRibbonToolbarPopup}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RibbonQuickAccessToolbarPopupBorderControl.DefaultStyleBase" TargetType="{x:Type dxr:RibbonQuickAccessToolbarPopupBorderControl}">
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey QuickAccessToolbar.RibbonToolbarPopupBorderTemplate}}" />
        <Setter Property="Margin" Value="0,0,0,20" />
    </Style>
    <Style x:Key="RibbonSelectedPagePopupBorderControl.DefaultStyleBase" TargetType="{x:Type dxr:RibbonSelectedPagePopupBorderControl}">
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey RibbonPage.SelectedPagePopupBorderTemplate}}" />
        <Setter Property="Margin" Value="{DynamicResource {dxrt:LWKey RibbonPage.SelectedPagePopupBorderMargin}}" />
    </Style>
    <Style x:Key="RibbonPageGroupPopupBorderControl.DefaultStyleBase" TargetType="{x:Type dxr:RibbonPageGroupPopupBorderControl}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey RibbonPageGroup.PopupBorderTemplate}}" />
        <Setter Property="Margin" Value="{DynamicResource {dxrt:LWKey RibbonPageGroup.PopupBorderMargin}}" />
    </Style>
    <Style x:Key="RibbonPopupBorderControl.DefaultStyleBase" TargetType="{x:Type dxr:RibbonPopupBorderControl}">
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey Ribbon.PopupBorderTemplate}}" />
    </Style>
    <Style x:Key="ApplicationMenuPopupBorderControl.DefaultStyleBase" TargetType="{x:Type dxr:ApplicationMenuPopupBorderControl}">
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey Ribbon.ApplicationMenuPopupBorderTemplate}}" />
    </Style>
    <Style x:Key="ApplicationMenuBarControl.DefaultStyleBase" TargetType="{x:Type dxr:ApplicationMenuBarControl}">
        <Setter Property="ItemsPanel" Value="{DynamicResource {dxt:LWKey SubMenuBarControl.ItemsPanelTemplate}}" />
        <Setter Property="UseLightweightTemplates" Value="{dxb:BarsUseLightweightTemplates {dxt:LWKey BarItemRender.UseLightweightTemplates}}" />
        <Setter Property="ItemRenderTemplateSelector" Value="{DynamicResource {dxt:LWKey BarItemRender.TemplateSelector}}" />
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey Ribbon.ApplicationMenuBarControlTemplate}}" />
        <Setter Property="DropIndicatorStyle" Value="{DynamicResource {dxt:LWKey SubMenuBarControl.DropIndicatorStyle}}" />
        <Setter Property="GlyphPadding" Value="{DynamicResource {dxt:LWKey SubMenuBarControl.GlyphPadding}}" />
        <Setter Property="MinHeight" Value="16" />
        <Setter Property="RightPaneWidth" Value="{DynamicResource {dxrt:LWKey Ribbon.DefaultRightPaneWidth}}" />
        <Setter Property="BorderTemplateForOffice2007Style" Value="{DynamicResource {dxrt:LWKey Ribbon.ApplicationMenuBarControlBorderTemplate2007}}" />
        <Setter Property="BorderTemplateForOffice2010Style" Value="{DynamicResource {dxrt:LWKey Ribbon.ApplicationMenuBarControlBorderTemplate2010}}" />
        <Setter Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxrt:LWKey RibbonSvgPalette.SvgPaletteInApplicationMenu}}" />
    </Style>
    <Style x:Key="RibbonStatusBarControl.DefaultStyleBase" TargetType="{x:Type dxr:RibbonStatusBarControl}">
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey RibbonStatusBar.ControlTemplate}}" />
        <Setter Property="MinHeight" Value="{DynamicResource {dxrt:LWKey RibbonStatusBar.MinHeight}}" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Focusable" Value="False" />
    </Style>
    <Style x:Key="RibbonStatusBarLeftPartControl.DefaultStyleBase" TargetType="{x:Type dxr:RibbonStatusBarLeftPartControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <ItemsPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel" Value="{DynamicResource {dxrt:LWKey RibbonStatusBar.LeftItemsPanelTemplate}}" />
        <Setter Property="UseLightweightTemplates" Value="{dxb:BarsUseLightweightTemplates {dxt:LWKey BarItemRender.UseLightweightTemplates}}" />
        <Setter Property="ItemRenderTemplateSelector" Value="{DynamicResource {dxt:LWKey BarItemRender.TemplateSelector}}" />
        <Setter Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxrt:LWKey RibbonSvgPalette.SvgPaletteInRibbonStatusBarLeft}}" />
    </Style>
    <Style x:Key="RibbonStatusBarRightPartControl.DefaultStyleBase" TargetType="{x:Type dxr:RibbonStatusBarRightPartControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <ItemsPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel" Value="{DynamicResource {dxrt:LWKey RibbonStatusBar.RightItemsPanelTemplate}}" />
        <Setter Property="UseLightweightTemplates" Value="{dxb:BarsUseLightweightTemplates {dxt:LWKey BarItemRender.UseLightweightTemplates}}" />
        <Setter Property="ItemRenderTemplateSelector" Value="{DynamicResource {dxt:LWKey BarItemRender.TemplateSelector}}" />
        <Setter Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxrt:LWKey RibbonSvgPalette.SvgPaletteInRibbonStatusBarRight}}" />
    </Style>
    <Style x:Key="GalleryDropDownControl.DefaultStyleBase" TargetType="{x:Type dxr:GalleryDropDownControl}">
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ItemsPanel" Value="{DynamicResource {dxt:LWKey SubMenuBarControl.ItemsPanelTemplate}}" />
        <Setter Property="UseLightweightTemplates" Value="{dxb:BarsUseLightweightTemplates {dxt:LWKey BarItemRender.UseLightweightTemplates}}" />
        <Setter Property="ItemRenderTemplateSelector" Value="{DynamicResource {dxt:LWKey BarItemRender.TemplateSelector}}" />
        <Setter Property="DropIndicatorStyle" Value="{DynamicResource {dxt:LWKey SubMenuBarControl.DropIndicatorStyle}}" />
        <Setter Property="GlyphPadding" Value="{DynamicResource {dxt:LWKey SubMenuBarControl.GlyphPadding}}" />
        <Setter Property="MinHeight" Value="22" />
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey GalleryDropDownControl.ControlTemplate}}" />
    </Style>
    <Style x:Key="ApplicationMenuContentControl.DefaultStyleBase" TargetType="{x:Type dxr:ApplicationMenuContentControl}">
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey Ribbon.ApplicationMenuContentControlTemplate}}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    </Style>
    <Style x:Key="RibbonHeaderControl.DefaultStyleBase" TargetType="{x:Type dxr:RibbonHeaderControl}">
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey RibbonHeader.ControlTemplate}}" />
        <Setter Property="ItemsPanel" Value="{DynamicResource {dxrt:LWKey RibbonHeader.ItemsPanelTemplate}}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
    </Style>
    <Style x:Key="RibbonPageCategoryHeaderControl.DefaultStyleBase" TargetType="{x:Type dxr:RibbonPageCategoryHeaderControl}">
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey RibbonPageCategory.HeaderTemplate}}" />
        <Setter Property="AeroTemplate" Value="{DynamicResource {dxrt:LWKey RibbonPageCategory.HeaderTemplateInAeroWindow}}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="MinHeight" Value="{DynamicResource {dxrt:LWKey Ribbon.HeaderMinHeight}}" />
        <Setter Property="dxi:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Category.IsVisible, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter Property="Visibility" Value="Hidden" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Category.IsDefault, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <Trigger Property="IsAeroMode" Value="True">
                <Setter Property="MinHeight" Value="{DynamicResource {dxrt:LWKey Ribbon.AeroHeaderMinHeight}}" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" Value="{DynamicResource {dxrt:LWKey Ribbon.HeaderMinHeightTouch}}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="dx:ThemeManager.IsTouchEnabled" Value="True" />
                    <Condition Property="IsAeroMode" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="MinHeight" Value="{DynamicResource {dxrt:LWKey Ribbon.AeroHeaderMinHeightTouch}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RibbonPageCaptionControl.DefaultStyleBase" TargetType="{x:Type dxr:RibbonPageCaptionControl}">
        <Setter Property="dx:Badge.Badge" Value="{Binding Path=Page.(dx:Badge.Badge), RelativeSource={RelativeSource Self}, Converter={dxi:FreezableCloneCurrentValueConverter}}" />
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey RibbonPage.CaptionTemplate}}" />
        <Setter Property="HighlightedContentContainerStyle" Value="{DynamicResource {dxrt:LWKey RibbonPage.HighlightedCaptionContentContainerStyle}}" />
        <Setter Property="NormalContentContainerStyle" Value="{DynamicResource {dxrt:LWKey RibbonPage.CaptionContentContainerStyle}}" />
        <Setter Property="DefaultContentTemplate" Value="{DynamicResource {dxrt:LWKey RibbonPage.DefaultCaptionContentTemplate}}" />
        <Setter Property="BorderTemplate" Value="{DynamicResource {dxrt:LWKey RibbonPage.CaptionBackgroundTemplate}}" />
        <Setter Property="HighlightedBorderTemplate" Value="{DynamicResource {dxrt:LWKey RibbonPage.HighlightedCaptionBackgroundTemplate}}" />
        <Setter Property="BorderTemplateInMinimizedRibbon" Value="{DynamicResource {dxrt:LWKey RibbonPage.CaptionBackgroundTemplate}}" />
        <Setter Property="HighlightedBorderTemplateInMinimizedRibbon" Value="{DynamicResource {dxrt:LWKey RibbonPage.HighlightedCaptionBackgroundTemplate}}" />
        <Setter Property="NormalTextStyle" Value="{DynamicResource {dxrt:LWKey Ribbon.NormalPageCaptionTextStyle}}" />
        <Setter Property="SelectedTextStyle" Value="{DynamicResource {dxrt:LWKey Ribbon.SelectedPageCaptionTextStyle}}" />
        <Setter Property="HoverTextStyleInMinimizedRibbon" Value="{DynamicResource {dxrt:LWKey Ribbon.HoverPageCaptionTextStyle}}" />
        <Setter Property="NormalTextStyleInMinimizedRibbon" Value="{DynamicResource {dxrt:LWKey Ribbon.NormalPageCaptionTextStyle}}" />
        <Setter Property="SelectedTextStyleInMinimizedRibbon" Value="{DynamicResource {dxrt:LWKey Ribbon.SelectedPageCaptionTextStyle}}" />
        <Setter Property="HoverTextStyle" Value="{DynamicResource {dxrt:LWKey Ribbon.HoverPageCaptionTextStyle}}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
    </Style>
    <Style x:Key="RibbonGalleryBarItemLinkControl.DefaultStyleBase" TargetType="{x:Type dxr:RibbonGalleryBarItemLinkControl}">
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey InRibbonGallery.Template}}" />
        <Setter Property="dxb:BarItemLinkControlTemplateProvider.TemplateInRibbonPageGroup" Value="{DynamicResource {dxrt:LWKey InRibbonGallery.Template}}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(dx:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource Mode=Self}}" Value="True">
                <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey InRibbonGallery.TemplateTouch}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxi:AppearanceOptions.HasMargin), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Margin" Value="{Binding Path=(dxi:AppearanceOptions.Margin), RelativeSource={RelativeSource Self}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RibbonPageHeaderLinksControl.DefaultStyleBase" TargetType="{x:Type dxr:RibbonPageHeaderLinksControl}">
        <Setter Property="dxi:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey RibbonPageHeaderLinksControl.ControlTemplate}}" />
        <Setter Property="ItemsPanel" Value="{DynamicResource {dxrt:LWKey RibbonPageHeaderLinksControl.PanelTemplate}}" />
        <Setter Property="UseLightweightTemplates" Value="{dxb:BarsUseLightweightTemplates {dxt:LWKey BarItemRender.UseLightweightTemplates}}" />
        <Setter Property="ItemRenderTemplateSelector" Value="{DynamicResource {dxt:LWKey BarItemRender.TemplateSelector}}" />
        <Setter Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxrt:LWKey RibbonSvgPalette.SvgPaletteInRibbonPageHeader}}" />
        <Setter Property="Focusable" Value="False" />
    </Style>
    <Style x:Key="BarButtonGroupItemsControl.DefaultStyleBase" TargetType="{x:Type dxr:BarButtonGroupItemsControl}">
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey BarButtonGroup.ItemsControlTemplate}}" />
        <Setter Property="ItemsPanel" Value="{DynamicResource {dxrt:LWKey BarButtonGroup.PanelTemplate}}" />
        <Setter Property="UseLightweightTemplates" Value="{dxb:BarsUseLightweightTemplates {dxt:LWKey BarItemRender.UseLightweightTemplates}}" />
        <Setter Property="ItemRenderTemplateSelector" Value="{DynamicResource {dxt:LWKey BarItemRender.TemplateSelector}}" />
        <Setter Property="IsTabStop" Value="False" />
    </Style>
    <Style x:Key="BarButtonGroupLinkControl.DefaultStyleBase" TargetType="{x:Type dxr:BarButtonGroupLinkControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey BarButtonGroup.Template}}" />
        <Setter Property="dxb:BarItemLinkControlTemplateProvider.TemplateInRibbonPageGroup" Value="{DynamicResource {dxrt:LWKey BarButtonGroup.Template}}" />
        <Setter Property="dxb:BarItemLinkControlTemplateProvider.Template" Value="{DynamicResource {dxrt:LWKey BarButtonGroup.Template}}" />
        <Setter Property="dxb:BarItemLinkControlTemplateProvider.TemplateInMenu" Value="{DynamicResource {dxrt:LWKey BarButtonGroup.Template}}" />
        <Setter Property="ResourceHolderTemplateInRibbonPageGroup" Value="{DynamicResource {dxrt:LWKey BarButtonGroup.ResourceHolderTemplateInPageGroup}}" />
        <Setter Property="CustomizationButtonStyle" Value="{DynamicResource {dxrt:LWKey BarButtonGroup.CustomizationButtonStyle}}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(dxi:AppearanceOptions.HasMargin), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Margin" Value="{Binding Path=(dxi:AppearanceOptions.Margin), RelativeSource={RelativeSource Self}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RibbonApplicationButtonControl.DefaultStyleBase" TargetType="{x:Type dxr:RibbonApplicationButtonControl}">
        <Setter Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxrt:LWKey ApplicationButton.SvgPalette}}" />
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey ApplicationButton.Template}}" />
        <Setter Property="BorderTemplateForOffice2007RibbonStyle" Value="{DynamicResource {dxrt:LWKey ApplicationButton.BorderTemplate2007}}" />
        <Setter Property="BorderTemplateInPopupForOffice2007RibbonStyle" Value="{DynamicResource {dxrt:LWKey ApplicationButton.BorderTemplate2007InPopup}}" />
        <Setter Property="BorderTemplateForOffice2010RibbonStyle" Value="{DynamicResource {dxrt:LWKey ApplicationButton.BorderTemplate2010}}" />
        <Setter Property="BorderTemplateInPopupForOffice2010RibbonStyle" Value="{DynamicResource {dxrt:LWKey ApplicationButton.BorderTemplate2010InPopup}}" />
        <Setter Property="BorderTemplateForTabletOfficeRibbonStyle" Value="{DynamicResource {dxrt:LWKey ApplicationButton.BorderTemplateTablet}}" />
        <Setter Property="BorderTemplateInPopupForTabletOfficeRibbonStyle" Value="{DynamicResource {dxrt:LWKey ApplicationButton.BorderTemplateTabletInPopup}}" />
        <Setter Property="BorderTemplateForOfficeSlimRibbonStyle" Value="{DynamicResource {dxrt:LWKey ApplicationButton.BorderTemplateOfficeSlim}}" />
        <Setter Property="BorderTemplateInPopupForOfficeSlimRibbonStyle" Value="{DynamicResource {dxrt:LWKey ApplicationButton.BorderTemplateOfficeSlimInPopup}}" />
        <Setter Property="dxi:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
    </Style>
    <Style x:Key="GalleryDropDownPopupBorderControl.DefaultStyleBase" TargetType="{x:Type dxr:GalleryDropDownPopupBorderControl}">
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey GalleryDropDownControl.PopupBorderTemplate}}" />
    </Style>
    <Style x:Key="RibbonPagesControl.DefaultStyleBase" TargetType="{x:Type dxr:RibbonPagesControl}">
        <Setter Property="ItemsPanel" Value="{DynamicResource {dxrt:LWKey Ribbon.PagesControlItemsPanelTemplate}}" />
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey Ribbon.PagesControlTemplate}}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsSelected}" Value="False">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RibbonPageGroupsControl.DefaultStyleBase" TargetType="{x:Type dxr:RibbonPageGroupsControl}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="ItemsPanel" Value="{DynamicResource {dxrt:LWKey Ribbon.PageGroupsControlItemsPanelTemplate}}" />
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey Ribbon.PageGroupsControlTemplate}}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Page.IsSelected, RelativeSource={RelativeSource Mode=Self}}" Value="False">
                <Setter Property="Visibility" Value="Collapsed"/>
                <Setter Property="dxi:BadgeProperties.Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="BackstageViewControl.DefaultStyleBase" TargetType="{x:Type dxr:BackstageViewControl}">
        <Setter Property="Grid.IsSharedSizeScope" Value="True" />
        <Setter Property="IsFullScreen" Value="{DynamicResource {dxrt:LWKey Backstage.IsFullScreen}}" />
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey Backstage.ControlTemplate}}" />
        <Setter Property="BackgroundStyle" Value="{DynamicResource {dxrt:LWKey Backstage.BackgroundStyle}}" />
        <Setter Property="BackgroundGlyphStyle" Value="{DynamicResource {dxrt:LWKey Backstage.BackgroundGlyphStyle}}" />
        <Setter Property="TabPaneStyle" Value="{DynamicResource {dxrt:LWKey Backstage.TabPaneStyle}}" />
        <Setter Property="ControlPaneStyle" Value="{DynamicResource {dxrt:LWKey Backstage.ControlPaneStyle}}" />
        <Setter Property="ItemsPresenterStyle" Value="{DynamicResource {dxrt:LWKey Backstage.ItemsPresenterStyle}}" />
        <Setter Property="DisableDefaultBackgroundGlyph" Value="{DynamicResource {dxrt:LWKey Backstage.DisableDefaultBackgroundGlyph}}" />
        <Setter Property="EnableWindowTitleShrink" Value="{DynamicResource {dxrt:LWKey Backstage.EnableWindowTitleShrink}}" />
        <Setter Property="Foreground" Value="{DynamicResource {dxrt:LWKey Backstage.Foreground}}" />
        <Setter Property="BorderThickness" Value="{DynamicResource {dxrt:LWKey Backstage.BorderThicknessNoFullscreen}}" />
        <Setter Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxrt:LWKey Backstage.SvgPalette}}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <dxri:BackstageViewLeftPartPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="RibbonStyle" Value="TabletOffice">
                <Setter Property="IsFullScreen" Value="True" />
            </Trigger>
            <Trigger Property="RibbonStyle" Value="OfficeSlim">
                <Setter Property="IsFullScreen" Value="True" />
            </Trigger>

            <Trigger Property="IsFullScreen" Value="False">
                <Setter Property="BorderThickness" Value="{DynamicResource {dxrt:LWKey Backstage.BorderThicknessNoFullscreen}}" />
            </Trigger>
            <Trigger Property="EnableWindowTitleShrink" Value="False">
                <Setter Property="BorderThickness" Value="{DynamicResource {dxrt:LWKey Backstage.BorderThicknessNoFullscreen}}" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(dxi:DXWindowsHelper.WindowKind), RelativeSource={RelativeSource Self}}" Value="{x:Static dxi:DXWindowsHelper.DXRibbonWindow}" />
                    <Condition Binding="{Binding IsFullScreen, RelativeSource={RelativeSource Self}}" Value="True" />
                    <Condition Binding="{Binding EnableWindowTitleShrink, RelativeSource={RelativeSource Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="BorderThickness" Value="{DynamicResource {dxrt:LWKey Backstage.BorderThickness}}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(dxi:DXWindowsHelper.WindowKind), RelativeSource={RelativeSource Self}}" Value="{x:Static dxi:DXWindowsHelper.ThemedWindow}" />
                    <Condition Binding="{Binding Path=(dxi:DXWindowsHelper.Window).(dx:ThemedWindow.ActualWindowKind), RelativeSource={RelativeSource Self}}" Value="Ribbon" />
                    <Condition Binding="{Binding IsFullScreen, RelativeSource={RelativeSource Self}}" Value="True" />
                    <Condition Binding="{Binding EnableWindowTitleShrink, RelativeSource={RelativeSource Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="BorderThickness" Value="{DynamicResource {dxrt:LWKey Backstage.BorderThickness}}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="BackstageButtonItem.DefaultStyleBase" TargetType="{x:Type dxr:BackstageButtonItem}">
        <Setter Property="RibbonStyle" Value="{Binding Path=RibbonStyle, RelativeSource={RelativeSource AncestorType=dxr:BackstageViewControl}}" />
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey BackstageButtonItem.ControlTemplate}}" />
        <Setter Property="BorderStyle" Value="{DynamicResource {dxrt:LWKey BackstageButtonItem.BorderStyle}}" />
        <Setter Property="ContentStyle" Value="{DynamicResource {dxrt:LWKey BackstageButtonItem.ContentStyle}}" />
        <Setter Property="NormalTextStyle" Value="{DynamicResource {dxrt:LWKey BackstageButtonItem.NormalTextStyle}}" />
        <Setter Property="HoverTextStyle" Value="{DynamicResource {dxrt:LWKey BackstageButtonItem.HoverTextStyle}}" />
        <Setter Property="GlyphContainerStyle" Value="{DynamicResource {dxrt:LWKey BackstageButtonItem.GlyphContainerStyle}}" />
        <Setter Property="GlyphStyle" Value="{DynamicResource {dxrt:LWKey BackstageButtonItem.GlyphStyle}}" />
    </Style>
    <Style x:Key="BackstageTabItem.DefaultStyleBase" TargetType="{x:Type dxr:BackstageTabItem}">
        <Setter Property="RibbonStyle" Value="{Binding Path=RibbonStyle, RelativeSource={RelativeSource AncestorType=dxr:BackstageViewControl}}" />
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey BackstageTabItem.ControlTemplate}}" />
        <Setter Property="BorderStyle" Value="{DynamicResource {dxrt:LWKey BackstageTabItem.BorderStyle}}" />
        <Setter Property="ContentStyle" Value="{DynamicResource {dxrt:LWKey BackstageTabItem.ContentStyle}}" />
        <Setter Property="NormalTextStyle" Value="{DynamicResource {dxrt:LWKey BackstageTabItem.NormalTextStyle}}" />
        <Setter Property="HoverTextStyle" Value="{DynamicResource {dxrt:LWKey BackstageTabItem.HoverTextStyle}}" />
        <Setter Property="SelectedTextStyle" Value="{DynamicResource {dxrt:LWKey BackstageTabItem.SelectedTextStyle}}" />
        <Setter Property="GlyphContainerStyle" Value="{DynamicResource {dxrt:LWKey BackstageTabItem.GlyphContainerStyle}}" />
        <Setter Property="GlyphStyle" Value="{DynamicResource {dxrt:LWKey BackstageTabItem.GlyphStyle}}" />
        <Setter Property="dxi:WindowChrome.IsHitTestVisibleInChrome" Value="True" />
    </Style>
    <Style x:Key="BackstageSeparatorItem.DefaultStyleBase" TargetType="{x:Type dxr:BackstageSeparatorItem}">
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey BackstageSeparatorItem.ControlTemplate}}" />
        <Setter Property="BorderStyle" Value="{DynamicResource {dxrt:LWKey BackstageSeparatorItem.BorderStyle}}" />
    </Style>
    <Style x:Key="KeyTipToolTip.DefaultStyleBase" TargetType="{x:Type dxr:KeyTipToolTip}">
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey KeyTipControl.ToolTipTemplate}}" />
    </Style>
    <Style x:Key="KeyTipControl.DefaultStyleBase" TargetType="{x:Type dxr:KeyTipControl}">
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey KeyTipControl.Template}}" />
    </Style>
    <Style x:Key="UpDownArrowButton.DefaultStyleBase" TargetType="{x:Type dxr:UpDownArrowButton}">
        <Setter Property="UpTemplate" Value="{DynamicResource {dxrt:LWKey RibbonCustomization.UpArrowThemeKey}}" />
        <Setter Property="DownTemplate" Value="{DynamicResource {dxrt:LWKey RibbonCustomization.DownArrowThemeKey}}" />
    </Style>
    <Style x:Key="CustomizationArrowControl.DefaultStyleBase" TargetType="{x:Type dxr:CustomizationArrowControl}">
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey RibbonCustomization.CustomizationArrowControlTemplate}}" />
    </Style>
    <Style x:Key="CustomizationSeparatorControl.DefaultStyleBase" TargetType="{x:Type dxr:CustomizationSeparatorControl}">
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey RibbonCustomization.CustomizationSeparatorControlTemplate}}" />
    </Style>
    <Style x:Key="RibbonSpacingSelectorItemLinkControl.DefaultStyleBase" TargetType="{x:Type dxr:RibbonSpacingSelectorItemLinkControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxr:RibbonSpacingSelectorItemLinkControl}">
                    <Grid>
                        <dxb:BarItemLayoutPanel x:Name="PART_LayoutPanel" />
                        <dxb:PopupMenu x:Name="PART_Popup" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RibbonAutoHideControl.DefaultStyleBase" TargetType="{x:Type dxri:RibbonAutoHideControl}">
        <Setter Property="MinHeight" Value="{DynamicResource {dxrt:LWKey Ribbon.HeaderMinHeight}}" />
        <Setter Property="Template" Value="{DynamicResource {dxrt:LWKey RibbonAutoHide.Template}}" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" Value="{DynamicResource {dxrt:LWKey Ribbon.HeaderMinHeightTouch}}" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=IsInRibbonWindow, RelativeSource={RelativeSource AncestorType=dxr:RibbonControl}}" Value="False">
                <Setter Property="MinHeight" Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RibbonMinimizationButton.DefaultStyleBase" TargetType="{x:Type dxri:RibbonMinimizationButton}">
        <Setter Property="UseAppFocusValue" Value="True" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="IsEnabled" Value="{Binding Path=(dxr:RibbonControl.Ribbon).IsBackStageViewOpen, RelativeSource={RelativeSource Self}, Converter={dxmvvm:BooleanNegationConverter}}" />
        <Setter Property="IsChecked" Value="{Binding Path=(dxr:RibbonControl.Ribbon).IsMinimized, RelativeSource={RelativeSource Self}}" />
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(dxr:RibbonControl.Ribbon).AllowMinimizeRibbon, RelativeSource={RelativeSource Self}}" Value="False" />
                    <Condition Binding="{Binding Path=(dxr:RibbonControl.Ribbon).AllowSimplifiedRibbon, RelativeSource={RelativeSource Self}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="False" />
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding Path=(dxr:RibbonControl.Ribbon).AllowSimplifiedRibbon, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="IsChecked" Value="{Binding Path=(dxr:RibbonControl.Ribbon).IsSimplified, RelativeSource={RelativeSource Self}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RibbonControlBoxContainer.DefaultStyleBase" TargetType="{x:Type dxri:RibbonControlBoxContainer}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="dx:HeaderItemControl.CommonTemplateProvider" Value="{DynamicResource {dxt:LWKey RibbonHeaderItems.RibbonHeaderItemControlCommonTemplateProvider}}" />
        <Setter Property="dx:HeaderItemControl.CloseTemplateProvider" Value="{DynamicResource {dxt:LWKey RibbonHeaderItems.RibbonHeaderItemControlCloseTemplateProvider}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxri:RibbonControlBoxContainer}">
                    <ContentControl Focusable="False" Style="{DynamicResource {dxrt:LWKey Ribbon.FloatingContainerControlBoxStyle}}" Template="{DynamicResource {dxrt:LWKey Ribbon.FloatingContainerControlBoxTemplate}}">
                        <StackPanel
                            x:Name="stackPanel"
                            KeyboardNavigation.TabNavigation="None"
                            Orientation="Horizontal"
                            UseLayoutRounding="True">
                            <dxr:RibbonShowModeSelectorItem Name="PART_ShowModeSelector" Style="{DynamicResource {dxrt:LWKey Ribbon.RibbonShowModeSelectorItemStyle}}" />
                            <Control x:Name="PART_HeaderCustomItemsHost" />
                            <StackPanel x:Name="PART_WindowButtons" Orientation="Horizontal">
                                <dx:HeaderItemControl
                                    x:Name="PART_Minimize"
                                    Command="{x:Static dxi:WindowSystemCommands.MinimizeWindowCommand}"
                                    Style="{Binding Path=TemplateProvider.HeaderItemControlStyle, RelativeSource={RelativeSource Self}}"
                                    TemplateProvider="{Binding Path=(dx:HeaderItemControl.CommonTemplateProvider), RelativeSource={RelativeSource Self}}" />
                                <dx:HeaderItemControl
                                    x:Name="PART_Restore"
                                    dx:WindowChromeHelper.IsSnapLayoutsElement="True"
                                    Command="{x:Static dxi:WindowSystemCommands.RestoreWindowCommand}"
                                    Style="{Binding Path=TemplateProvider.HeaderItemControlStyle, RelativeSource={RelativeSource Self}}"
                                    TemplateProvider="{Binding Path=(dx:HeaderItemControl.CommonTemplateProvider), RelativeSource={RelativeSource Self}}"
                                    Visibility="Collapsed" />
                                <dx:HeaderItemControl
                                    x:Name="PART_Maximize"
                                    dx:WindowChromeHelper.IsSnapLayoutsElement="True"
                                    Command="{x:Static dxi:WindowSystemCommands.MaximizeWindowCommand}"
                                    Style="{Binding Path=TemplateProvider.HeaderItemControlStyle, RelativeSource={RelativeSource Self}}"
                                    TemplateProvider="{Binding Path=(dx:HeaderItemControl.CommonTemplateProvider), RelativeSource={RelativeSource Self}}"
                                    Visibility="Visible" />
                                <dx:HeaderItemControl
                                    x:Name="PART_CloseButton"
                                    Command="{x:Static dxi:WindowSystemCommands.CloseWindowCommand}"
                                    Style="{Binding Path=TemplateProvider.HeaderItemControlStyle, RelativeSource={RelativeSource Self}}"
                                    TemplateProvider="{Binding Path=(dx:HeaderItemControl.CloseTemplateProvider), RelativeSource={RelativeSource Self}}" />
                            </StackPanel>
                        </StackPanel>
                    </ContentControl>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ShowCustomItems" Value="True">
                            <Setter TargetName="PART_HeaderCustomItemsHost" Property="Template" Value="{StaticResource headercustomitemspresentertemplate}" />
                        </Trigger>
                        <Trigger Property="IsMinimizeButtonVisible" Value="False">
                            <Setter TargetName="PART_Minimize" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsRestoreButtonVisible" Value="False">
                            <Setter TargetName="PART_Restore" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsMaximizeButtonVisible" Value="False">
                            <Setter TargetName="PART_Maximize" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsCloseButtonVisible" Value="False">
                            <Setter TargetName="PART_CloseButton" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="dxr:RibbonControlHelper.DisplayShowModeSelector" Value="False">
                            <Setter TargetName="PART_ShowModeSelector" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=(dxi:DXWindowsHelper.Window).WindowState, RelativeSource={RelativeSource Self}}" Value="Maximized">
                            <Setter TargetName="PART_Restore" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_Maximize" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <Trigger Property="dxr:RibbonControlHelper.IsAutoHide" Value="True">
                            <Setter TargetName="PART_Restore" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_Maximize" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DXRibbonWindow.DefaultStyleBase" TargetType="{x:Type dxr:DXRibbonWindow}">
        <Setter Property="ResizeMode" Value="CanResize" />
        <Setter Property="ResizeBorderThickness" Value="{DynamicResource {dxrt:LWKey Ribbon.ResizeBorderThickness}}" />
        <Setter Property="ResizeBorderThicknessInAeroMode" Value="{DynamicResource {dxrt:LWKey DXRibbonAeroWindow.AeroWindowResizeBorderThickness}}" />
        <Setter Property="AeroBorderSize" Value="{DynamicResource {dxrt:LWKey DXRibbonAeroWindow.AeroBorderSize}}" />
        <Setter Property="AeroWindowTemplate" Value="{DynamicResource {dxrt:LWKey DXRibbonAeroWindow.AeroWindowTemplate}}" />
        <Setter Property="WindowTemplate" Value="{DynamicResource {dxrt:LWKey Ribbon.FloatingContainerTemplate}}" />
        <Setter Property="BorderEffectOffset" Value="{DynamicResource {dxt:LWKey DXWindow.BorderEffectOffset}}" />
        <Setter Property="BorderEffectActiveColor" Value="{DynamicResource {dxt:LWKey DXWindow.BorderEffectActiveColor}}" />
        <Setter Property="BorderEffectInactiveColor" Value="{DynamicResource {dxt:LWKey DXWindow.BorderEffectInactiveColor}}" />
        <Setter Property="BorderEffectLeftMargins" Value="{DynamicResource {dxt:LWKey DXWindow.BorderEffectLeftMargins}}" />
        <Setter Property="BorderEffectRightMargins" Value="{DynamicResource {dxt:LWKey DXWindow.BorderEffectRightMargins}}" />
        <Setter Property="BorderEffectTopMargins" Value="{DynamicResource {dxt:LWKey DXWindow.BorderEffectTopMargins}}" />
        <Setter Property="BorderEffectBottomMargins" Value="{DynamicResource {dxt:LWKey DXWindow.BorderEffectBottomMargins}}" />
        <Setter Property="Template" Value="{StaticResource DXWindowTemplate}" />
        <Setter Property="RibbonAutoHideMode" Value="{Binding Path=ActualRibbon.AutoHideMode, RelativeSource={RelativeSource Mode=Self}, Mode=TwoWay}" />
        <Style.Triggers>
            <Trigger Property="HasContent" Value="False">
                <Setter Property="Template" Value="{StaticResource DXWindowEmptyTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DXRibbonWindowContainer.DefaultStyleBase" TargetType="{x:Type dxr:DXRibbonWindowContainer}">
        <Setter Property="Template" Value="{StaticResource DXWindowContainerTemplate}" />
        <Setter Property="AeroTemplate" Value="{StaticResource DXAeroWindowContainerTemplate}" />
    </Style>
    <!--#endregion DEFAULT STYLES-->
</ResourceDictionary>