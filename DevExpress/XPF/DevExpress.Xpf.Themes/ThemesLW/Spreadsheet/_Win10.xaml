<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxspst="http://schemas.devexpress.com/winfx/2008/xaml/spreadsheet/themekeys"
    xmlns:dxsps="http://schemas.devexpress.com/winfx/2008/xaml/spreadsheet"
    xmlns:dxspsi="http://schemas.devexpress.com/winfx/2008/xaml/spreadsheet/internal"
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars">
    <ResourceDictionary.MergedDictionaries>
        <dxi:ThemeResourceDictionary Path="Common/{ThemeName}/Common.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <sys:Double x:Key="{dxspst:LWKey Spreadsheet.CellStyleGalleryBarItemHeight}">61</sys:Double>
    <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    <dx:ColorStaticResource x:Key="UIBrush.Color" Color="{StaticResource Color.SelectionBackground}" />
    <dx:ColorStaticResource x:Key="UIColor.Spreadsheet.FormulaBar.Foreground" Color="{StaticResource Color.Foreground}" />
    <dx:ColorStaticResource x:Key="UIColor.Spreadsheet.FormulaBar.Foreground.Cancel" Color="{StaticResource Color.Custom.Red}" />
    <dx:ColorStaticResource x:Key="UIColor.Spreadsheet.FormulaBar.Foreground.Ok" Color="{StaticResource Color.Custom.Green}" />
    <dx:ColorStaticResource x:Key="UIColor.Spreadsheet.FormulaBar.Foreground.Function" Color="{StaticResource Color.Custom.Blue}" />
    <dx:ColorStaticResource x:Key="UIColor.Spreadsheet.ReferenceEdit.Foreground" Color="{StaticResource Color.Foreground}" />
    <dx:ColorStaticResource x:Key="UIColor.Spreadsheet.ReferenceEdit.HoverForeground" Color="{StaticResource Color.Foreground}" />
    <SolidColorBrush x:Key="{dxspst:LWKey Spreadsheet.CommentLineBrush}" Color="{StaticResource Color.Border}" />
    <dx:ColorStaticResource x:Key="{dxspst:LWKey Spreadsheet.GridLinesColor}" Color="{dx:LWColor 'Win10Dark=Color.AltBorder, Win10Light=Color.Delimiter'}" />
    <SolidColorBrush x:Key="{dxspst:LWKey Spreadsheet.SpreadsheetBorderBrush}" Color="{StaticResource Color.Border}" />
    <SolidColorBrush x:Key="{dxspst:LWKey Spreadsheet.SpreadsheetForegroundBrush}" Color="{StaticResource Color.Foreground}" />
    <SolidColorBrush x:Key="{dxspst:LWKey Spreadsheet.SpreadsheetBackgroundBrush}" Color="{StaticResource Color.Editor.Background}" />
    <SolidColorBrush x:Key="{dxspst:LWKey Spreadsheet.WorksheetBorderBrush}" Color="{StaticResource Color.Border}" />
    <SolidColorBrush x:Key="{dxspst:LWKey Spreadsheet.VisualFeedbackLineBrush}" Color="{StaticResource Color.Foreground}" />
    <SolidColorBrush x:Key="{dxspst:LWKey Spreadsheet.FrozenSeparatorBrush}" Color="{StaticResource Color.Foreground}" />
    <SolidColorBrush x:Key="{dxspst:LWKey Spreadsheet.AutoFilterBackgroundBrush}" Color="{StaticResource Color.Button.Background}" />
    <SolidColorBrush x:Key="{dxspst:LWKey Spreadsheet.GroupControlBackgroundBrush}" Color="{StaticResource Color.Window.Background}" />
    <SolidColorBrush x:Key="{dxspst:LWKey Spreadsheet.GroupLineBrush}" Color="{StaticResource Color.Border}" />
    <SolidColorBrush x:Key="{dxspst:LWKey Spreadsheet.GroupDotBrush}" Color="{StaticResource Color.Foreground}" />
    <dx:ColorOverlayConverter x:Key="ColorOverlayConveter" />
    <dxspsi:ForegroundOverlayConverter x:Key="ForegroundOverlayConverter"/>
    <ControlTemplate x:Key="{dxspst:LWKey Spreadsheet.HorizontalHeaderItem}" TargetType="{x:Type dxspsi:HeaderItem}">
        <dx:DXBorder
            x:Name="IsDefault"
            Background="{StaticResource Brush.Button.Background}"
            BorderBrush="{StaticResource Brush.Border}"
            BorderThickness="0,0,1,1">
            <TextBlock
                x:Name="Content"
                FontSize="{TemplateBinding FontHeight}"
                Foreground="{StaticResource Brush.Foreground}"
                HorizontalAlignment="Center"
                Text="{TemplateBinding Text}"
                TextAlignment="Center"
                VerticalAlignment="Center" />
        </dx:DXBorder>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" TargetName="Content" Value="{StaticResource Brush.HoverForeground}" />
                <Setter Property="Background" TargetName="IsDefault" Value="{StaticResource Brush.HoverBackground}" />
                <Setter Property="BorderBrush" TargetName="IsDefault" Value="{StaticResource Brush.Border}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" TargetName="Content" Value="{StaticResource Brush.SelectionForeground}" />
                <Setter Property="Background" TargetName="IsDefault" Value="{StaticResource Brush.SelectionBackground}" />
                <Setter Property="BorderBrush" TargetName="IsDefault" Value="{StaticResource Brush.Border}" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" Value="44" />
                <Setter Property="MinWidth" Value="44" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxspst:LWKey Spreadsheet.VerticalHeaderItem}" TargetType="{x:Type dxspsi:HeaderItem}">
        <dx:DXBorder
            x:Name="IsDefault"
            Background="{StaticResource Brush.Button.Background}"
            BorderBrush="{StaticResource Brush.Border}"
            BorderThickness="0,0,1,1">
            <TextBlock
                x:Name="Content"
                FontSize="{TemplateBinding FontHeight}"
                Foreground="{StaticResource Brush.Foreground}"
                HorizontalAlignment="Center"
                Text="{TemplateBinding Text}"
                TextAlignment="Center"
                VerticalAlignment="Center" />
        </dx:DXBorder>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" TargetName="Content" Value="{StaticResource Brush.HoverForeground}" />
                <Setter Property="Background" TargetName="IsDefault" Value="{StaticResource Brush.HoverBackground}" />
                <Setter Property="BorderBrush" TargetName="IsDefault" Value="{StaticResource Brush.Border}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" TargetName="Content" Value="{StaticResource Brush.SelectionForeground}" />
                <Setter Property="Background" TargetName="IsDefault" Value="{StaticResource Brush.SelectionBackground}" />
                <Setter Property="BorderBrush" TargetName="IsDefault" Value="{StaticResource Brush.Border}" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" Value="44" />
                <Setter Property="MinWidth" Value="44" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxspst:LWKey Spreadsheet.TabSelectorColoredItemTemplate}" TargetType="{x:Type dxspsi:TabSelectorItem}">
        <Grid x:Name="PART_Root" Margin="0,0,-1,0">
            <dx:DXBorder
                x:Name="IsDefault"
                Background="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorOverlayConveter}, ConverterParameter=#FFEFEFEF}"
                BorderBrush="{StaticResource Brush.Border}"
                BorderThickness="0,1,0,0" />
            <TextBlock
                x:Name="Content"
                Focusable="False"
                Foreground="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ForegroundOverlayConverter}, ConverterParameter=#FFA2A2A2}"
                Margin="12,0,12,0"
                Text="{TemplateBinding Text}"
                TextAlignment="Center"
                VerticalAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="State" Value="Normal">
                <Setter Property="Margin" TargetName="IsDefault" Value="1,0,0,0" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" TargetName="Content" Value="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ForegroundOverlayConverter}, ConverterParameter=#FFA2A2A2}" />
                <Setter Property="Background" TargetName="IsDefault" Value="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorOverlayConveter}, ConverterParameter=#FFD9D9D9}" />
                <Setter Property="BorderBrush" TargetName="IsDefault" Value="{StaticResource Brush.Border}" />
                <Setter Property="BorderThickness" TargetName="IsDefault" Value="0,1,0,0" />
                <Setter Property="Margin" TargetName="IsDefault" Value="1,0,0,0" />
            </Trigger>
            <Trigger Property="State" Value="Selected">
                <Setter Property="Foreground" TargetName="Content" Value="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ForegroundOverlayConverter}, ConverterParameter=#FF646464}" />
                <Setter Property="Background" TargetName="IsDefault" Value="{StaticResource Brush.Editor.Background}" />
                <Setter Property="BorderBrush" TargetName="IsDefault" Value="{StaticResource Brush.Border}" />
                <Setter Property="BorderThickness" TargetName="IsDefault" Value="1,1,1,0" />
            </Trigger>
            <Trigger Property="State" Value="Active">
                <Setter Property="Foreground" TargetName="Content" Value="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ForegroundOverlayConverter}, ConverterParameter=#FF646464}" />
                <Setter Property="Background" TargetName="IsDefault" Value="{StaticResource Brush.Editor.Background}" />
                <Setter Property="BorderBrush" TargetName="IsDefault" Value="{StaticResource Brush.Border}" />
                <Setter Property="BorderThickness" TargetName="IsDefault" Value="1,0,1,0" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="State" Value="Selected" />
                </MultiTrigger.Conditions>
                <Setter Property="Margin" TargetName="IsDefault" Value="0" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="State" Value="Active" />
                </MultiTrigger.Conditions>
                <Setter Property="Margin" TargetName="IsDefault" Value="0" />
            </MultiTrigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Margin" TargetName="Content" Value="14" />
                <Setter Property="MinHeight" TargetName="PART_Root" Value="44" />
                <Setter Property="MinWidth" TargetName="PART_Root" Value="44" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="{dxspst:LWKey Spreadsheet.BaseButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="MinWidth" Value="24" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="PART_Root">
                        <dx:DXBorder
                            x:Name="IsDefault"
                            Background="{StaticResource Brush.Button.Background}"
                            BorderBrush="{StaticResource Brush.Border}"
                            BorderThickness="0,1,0,0">
                            <ContentPresenter
                                x:Name="Content"
                                Content="{TemplateBinding Content}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center" />
                        </dx:DXBorder>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="IsDefault" Value="{StaticResource Brush.HoverBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="IsDefault" Value="{StaticResource Brush.SelectionBackground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="Content" Value="0.38" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" Value="44" />
                <Setter Property="MinWidth" Value="44" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="{dxspst:LWKey Spreadsheet.FormulaBarControlTemplate}" TargetType="{x:Type dxsps:SpreadsheetFormulaBarControl}">
        <dx:DXBorder>
            <Grid
            x:Name="Root"
            Height="{TemplateBinding Height}"
            Margin="3"
            Width="{TemplateBinding Width}">
                <Grid.RowDefinitions>
                    <RowDefinition x:Name="RootRowGrid1" MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition x:Name="RootRowGrid2" Height="Auto" />
                </Grid.RowDefinitions>
                <Grid x:Name="PART_HorizontalContainer">
                    <Grid x:Name="PART_FormulaBarEditorContainer" Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="120" Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition
                            x:Name="EditorRowGrid"
                            Height="{TemplateBinding MinHeight}"
                            MaxHeight="{TemplateBinding MinHeight}"
                            MinHeight="{TemplateBinding MinHeight}" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <dxspsi:SpreadsheetNameBoxControl
                        x:Name="PART_Combobox"
                        EditValuePostMode="Immediate"
                        IsReadOnly="False"
                        SpreadsheetControl="{TemplateBinding SpreadsheetControl}"
                        ValidateOnTextInput="True"
                        VerticalAlignment="Center" />
                        <Thumb
                        x:Name="PART_VerticalThumb"
                        Grid.Column="1"
                        Margin="4,0,0,0"
                        Style="{DynamicResource {dxspst:LWKey Spreadsheet.FormulaBarVerticalThumbStyle}}" />
                        <dx:DXBorder
                        Grid.Column="2"
                        Background="{StaticResource Brush.Editor.Background}"
                        BorderBrush="{StaticResource Brush.Border}"
                        BorderThickness="1"
                        Margin="4,0,0,0"
                        MaxHeight="{TemplateBinding MaxHeight}"
                        MinHeight="{TemplateBinding MinHeight}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="EditorColumnGrid1" />
                                    <ColumnDefinition x:Name="EditorColumnGrid2" />
                                    <ColumnDefinition x:Name="EditorColumnGrid3" />
                                </Grid.ColumnDefinitions>
                                <Button x:Name="PART_CancelButton" Style="{DynamicResource {dxspst:LWKey Spreadsheet.FormulaBarCancelButtonStyle}}" />
                                <Button x:Name="PART_OkButton" Grid.Column="1" Style="{DynamicResource {dxspst:LWKey Spreadsheet.FormulaBarOkButtonStyle}}" />
                                <Button x:Name="PART_FunctionButton" Grid.Column="2" Style="{DynamicResource {dxspst:LWKey Spreadsheet.FormulaBarFunctionButtonStyle}}" />
                            </Grid>
                        </dx:DXBorder>
                        <dx:DXBorder
                        Grid.RowSpan="2"
                        Grid.Column="3"
                        Background="{StaticResource Brush.Editor.Background}"
                        BorderBrush="{StaticResource Brush.Border}"
                        BorderThickness="1"
                        Margin="4,0,0,0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <dxspsi:FormulaBarEditor
                                x:Name="PART_Editor"
                                Grid.RowSpan="2"
                                Background="{StaticResource Brush.Editor.Background}"
                                CaretBrush="{StaticResource Brush.Foreground}"
                                Foreground="{StaticResource Brush.Foreground}"
                                Margin="1" />
                                <ToggleButton
                                x:Name="PART_ExpandButton"
                                Grid.Row="0"
                                Grid.Column="1"
                                IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                Style="{DynamicResource {dxspst:LWKey Spreadsheet.FormulaBarExpandButtonStyle}}" />
                                <ScrollBar
                                Grid.Row="1"
                                Grid.Column="1"
                                LargeChange="{Binding ScrollViewer.ViewportHeight, ElementName=PART_Editor}"
                                Maximum="{Binding ScrollViewer.ScrollableHeight, ElementName=PART_Editor}"
                                Minimum="0"
                                ViewportSize="{Binding ScrollViewer.ViewportHeight, ElementName=PART_Editor}"
                                Visibility="{Binding IsExpanded, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                            </Grid>
                        </dx:DXBorder>
                    </Grid>
                </Grid>
                <Thumb x:Name="PART_HorizontalThumb" Style="{DynamicResource {dxspst:LWKey Spreadsheet.FormulaBarHorizontalThumbStyle}}" VerticalAlignment="Bottom" />
            </Grid>
        </dx:DXBorder>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" TargetName="Root" Value="44" />
                <Setter Property="MinHeight" TargetName="RootRowGrid1" Value="44" />
                <Setter Property="Height" TargetName="EditorRowGrid" Value="44" />
                <Setter Property="MinHeight" TargetName="EditorRowGrid" Value="44" />
                <Setter Property="MaxHeight" TargetName="EditorRowGrid" Value="44" />
                <Setter Property="MinHeight" TargetName="PART_HorizontalContainer" Value="44" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxspst:LWKey Spreadsheet.TabSelectorTemplate}" TargetType="{x:Type dxspsi:SpreadsheetTabSelector}">
        <Grid x:Name="PART_RootContainer">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <dx:DXBorder Background="{StaticResource Brush.Border}">
                <Grid x:Name="PART_NavButtonContainer">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Button
                        x:Name="PART_FirstButton"
                        Grid.Column="0"
                        Command="{TemplateBinding FirstTabCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                        Focusable="False"
                        Style="{DynamicResource {dxspst:LWKey Spreadsheet.BaseButtonStyle}}">
                        <Path Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}" Style="{StaticResource UIShape.Navigation.First}" />
                    </Button>
                    <Button
                        x:Name="PART_PrevButton"
                        Grid.Column="1"
                        Command="{TemplateBinding PrevTabCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                        Focusable="False"
                        Style="{DynamicResource {dxspst:LWKey Spreadsheet.BaseButtonStyle}}">
                        <Path Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}" Style="{StaticResource UIShape.Navigation.PrevItem}" />
                    </Button>
                    <Button
                        x:Name="PART_NextButton"
                        Grid.Column="2"
                        Command="{TemplateBinding NextTabCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                        Focusable="False"
                        Style="{DynamicResource {dxspst:LWKey Spreadsheet.BaseButtonStyle}}">
                        <Path Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}" Style="{StaticResource UIShape.Navigation.NextItem}" />
                    </Button>
                    <Button
                        x:Name="PART_LastButton"
                        Grid.Column="3"
                        Command="{TemplateBinding LastTabCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                        Focusable="False"
                        Style="{DynamicResource {dxspst:LWKey Spreadsheet.BaseButtonStyle}}">
                        <Path Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}" Style="{StaticResource UIShape.Navigation.Last}" />
                    </Button>
                </Grid>
            </dx:DXBorder>
            <dxspsi:TabSelectorPanel
                Grid.Column="1"
                Grid.ColumnSpan="2"
                AddButtonTemplate="{DynamicResource {dxspst:LWKey Spreadsheet.AddButtonDataTemplate}}"
                TabSelectorItemColoredTemplate="{DynamicResource {dxspst:LWKey Spreadsheet.TabSelectorColoredItemTemplate}}"
                TabSelectorItemDefaultTemplate="{DynamicResource {dxspst:LWKey Spreadsheet.TabSelectorItemTemplate}}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" Value="44" />
                <Setter Property="MinWidth" Value="44" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>