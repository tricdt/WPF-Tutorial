<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxspst="http://schemas.devexpress.com/winfx/2008/xaml/spreadsheet/themekeys"
    xmlns:dxsps="http://schemas.devexpress.com/winfx/2008/xaml/spreadsheet"
    xmlns:dxspsi="http://schemas.devexpress.com/winfx/2008/xaml/spreadsheet/internal"
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars">
    <ResourceDictionary.MergedDictionaries>
        <dxi:ThemeResourceDictionary Path="Common/{ThemeName}/Common.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <!-- Header Vertical -->
    <dx:ColorOverlayConverter x:Key="ColorOverlayConveter" />
    <dxspsi:ForegroundOverlayConverter x:Key="ForegroundOverlayConverter"/>
    <ControlTemplate x:Key="{dxspst:LWKey Spreadsheet.TabSelectorColoredItemTemplate}" TargetType="{x:Type dxspsi:TabSelectorItem}">
        <Grid x:Name="PART_Root" Margin="0,0,-1,0">
            <dx:DXBorder
                x:Name="IsDefault"
                Background="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorOverlayConveter}, ConverterParameter=#FFEFEFEF}"
                BorderBrush="{StaticResource Brush.Border}"
                BorderThickness="0,1,0,0" />
            <TextBlock
                x:Name="Content"
                Focusable="False"
                Foreground="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ForegroundOverlayConverter}, ConverterParameter=#FFA2A2A2}"
                Margin="12,0,12,0"
                Text="{TemplateBinding Text}"
                TextAlignment="Center"
                VerticalAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="State" Value="Normal">
                <Setter Property="Margin" TargetName="IsDefault" Value="1,0,0,0" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" TargetName="Content" Value="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ForegroundOverlayConverter}, ConverterParameter=#FFA2A2A2}" />
                <Setter Property="Background" TargetName="IsDefault" Value="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorOverlayConveter}, ConverterParameter=#FFD9D9D9}" />
                <Setter Property="BorderBrush" TargetName="IsDefault" Value="{StaticResource Brush.Border}" />
                <Setter Property="BorderThickness" TargetName="IsDefault" Value="0,1,0,0" />
                <Setter Property="Margin" TargetName="IsDefault" Value="1,0,0,0" />
            </Trigger>
            <Trigger Property="State" Value="Selected">
                <Setter Property="Foreground" TargetName="Content" Value="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ForegroundOverlayConverter}, ConverterParameter=#FFA2A2A2}" />
                <Setter Property="Background" TargetName="IsDefault" Value="{StaticResource Brush.Editor.Background}" />
                <Setter Property="BorderBrush" TargetName="IsDefault" Value="{StaticResource Brush.Border}" />
                <Setter Property="BorderThickness" TargetName="IsDefault" Value="1,1,1,0" />
            </Trigger>
            <Trigger Property="State" Value="Active">
                <Setter Property="Foreground" TargetName="Content" Value="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ForegroundOverlayConverter}, ConverterParameter=#FFA2A2A2}" />
                <Setter Property="Background" TargetName="IsDefault" Value="{StaticResource Brush.Editor.Background}" />
                <Setter Property="BorderBrush" TargetName="IsDefault" Value="{StaticResource Brush.Border}" />
                <Setter Property="BorderThickness" TargetName="IsDefault" Value="1,0,1,0" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="State" Value="Selected" />
                </MultiTrigger.Conditions>
                <Setter Property="Margin" TargetName="IsDefault" Value="0" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="State" Value="Active" />
                </MultiTrigger.Conditions>
                <Setter Property="Margin" TargetName="IsDefault" Value="0" />
            </MultiTrigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Margin" TargetName="Content" Value="14" />
                <Setter Property="MinHeight" TargetName="PART_Root" Value="44" />
                <Setter Property="MinWidth" TargetName="PART_Root" Value="44" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="{dxspst:LWKey Spreadsheet.BaseButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="MinWidth" Value="24" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="PART_Root">
                        <dx:DXBorder
                            x:Name="IsDefault"
                            Background="{StaticResource Brush.Control.Background}"
                            BorderBrush="{StaticResource Brush.Border}"
                            BorderThickness="0,1,0,0">
                            <ContentPresenter
                                x:Name="Content"
                                Content="{TemplateBinding Content}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center" />
                        </dx:DXBorder>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="IsDefault" Value="{StaticResource Brush.HoverBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="IsDefault" Value="{StaticResource Brush.SelectionBackground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="Content" Value="0.38" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" Value="44" />
                <Setter Property="MinWidth" Value="44" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="{dxspst:LWKey Spreadsheet.TabSelectorTemplate}" TargetType="{x:Type dxspsi:SpreadsheetTabSelector}">
        <Grid x:Name="PART_RootContainer">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <dx:DXBorder Background="{StaticResource Brush.Border}">
                <Grid x:Name="PART_NavButtonContainer">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Button
                        x:Name="PART_FirstButton"
                        Grid.Column="0"
                        Command="{TemplateBinding FirstTabCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                        Focusable="False"
                        Style="{DynamicResource {dxspst:LWKey Spreadsheet.BaseButtonStyle}}">
                        <Path Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}" Style="{StaticResource UIShape.Navigation.First}" />
                    </Button>
                    <Button
                        x:Name="PART_PrevButton"
                        Grid.Column="1"
                        Command="{TemplateBinding PrevTabCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                        Focusable="False"
                        Style="{DynamicResource {dxspst:LWKey Spreadsheet.BaseButtonStyle}}">
                        <Path Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}" Style="{StaticResource UIShape.Navigation.PrevItem}" />
                    </Button>
                    <Button
                        x:Name="PART_NextButton"
                        Grid.Column="2"
                        Command="{TemplateBinding NextTabCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                        Focusable="False"
                        Style="{DynamicResource {dxspst:LWKey Spreadsheet.BaseButtonStyle}}">
                        <Path Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}" Style="{StaticResource UIShape.Navigation.NextItem}" />
                    </Button>
                    <Button
                        x:Name="PART_LastButton"
                        Grid.Column="3"
                        Command="{TemplateBinding LastTabCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                        Focusable="False"
                        Style="{DynamicResource {dxspst:LWKey Spreadsheet.BaseButtonStyle}}">
                        <Path Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}" Style="{StaticResource UIShape.Navigation.Last}" />
                    </Button>
                </Grid>
            </dx:DXBorder>
            <dxspsi:TabSelectorPanel
                Grid.Column="1"
                Grid.ColumnSpan="2"
                AddButtonTemplate="{DynamicResource {dxspst:LWKey Spreadsheet.AddButtonDataTemplate}}"
                TabSelectorItemColoredTemplate="{DynamicResource {dxspst:LWKey Spreadsheet.TabSelectorColoredItemTemplate}}"
                TabSelectorItemDefaultTemplate="{DynamicResource {dxspst:LWKey Spreadsheet.TabSelectorItemTemplate}}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" Value="44" />
                <Setter Property="MinWidth" Value="44" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>