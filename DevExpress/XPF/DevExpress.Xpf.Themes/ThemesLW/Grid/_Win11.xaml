<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
    xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dxgtl="clr-namespace:DevExpress.Xpf.Grid.TreeList;assembly=DevExpress.Xpf.Grid.v24.1"
    xmlns:dxfuit="http://schemas.devexpress.com/winfx/2008/xaml/core/filteringui/themekeys"
    xmlns:dxgi="http://schemas.devexpress.com/winfx/2008/xaml/grid/internal"
    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
    xmlns:dxfui_local_native="http://schemas.devexpress.com/winfx/2008/xaml/core/filteringui/internal"
    xmlns:dxgn="clr-namespace:DevExpress.Xpf.Grid.Native;assembly=DevExpress.Xpf.Grid.v24.1">

    <ResourceDictionary.MergedDictionaries>
        <dxi:ThemeResourceDictionary Path="Common/{ThemeName}/Common.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <sys:Boolean x:Key="{dxgt:LWKey ScrollBar.AllowSetScrollHeight}">True</sys:Boolean>
    <dx:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <dx:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverterInverted" Invert="True" />
    <Geometry x:Key="FilterEditor.AddChildSplitButtonPathStyle.Data">F1 M9,6z M0,0z M0,1.125C0,1.02344 0.0371094,0.935547 0.111328,0.861328 0.185547,0.787109 0.273438,0.75 0.375,0.75 0.476562,0.75 0.564453,0.787109 0.638672,0.861328L4.5,4.7168 8.36133,0.861328C8.43555,0.787109 8.52344,0.75 8.625,0.75 8.72656,0.75 8.81445,0.787109 8.88867,0.861328 8.96289,0.935547 9,1.02344 9,1.125 9,1.22656 8.96289,1.31445 8.88867,1.38867L4.76367,5.51367C4.68945,5.58789 4.60156,5.625 4.5,5.625 4.39844,5.625 4.31055,5.58789 4.23633,5.51367L0.111328,1.38867C0.0371094,1.31445,0,1.22656,0,1.125z</Geometry>
    <dx:WpfSvgPalette x:Key="{dxgt:LWKey FilteringPanel.SvgPalette}">
        <SolidColorBrush x:Key="BlackColor" Color="{StaticResource Color.Foreground.Primary}" />
    </dx:WpfSvgPalette>
    <dx:WpfSvgPalette x:Key="{dxgt:LWKey FilteringPanel.ButtonSvgPalette}">
        <SolidColorBrush x:Key="BlackColor" Color="{StaticResource Color.Foreground.Primary}" />
        <dx:WpfSvgPalette.States>
            <dx:WpfSvgPalette x:Key="Hover">
                <SolidColorBrush x:Key="BlackColor" Color="{StaticResource Color.Foreground.Primary}" />
            </dx:WpfSvgPalette>
            <dx:WpfSvgPalette x:Key="Pressed">
                <SolidColorBrush x:Key="BlackColor" Color="{StaticResource Color.Foreground.Primary}" />
            </dx:WpfSvgPalette>
        </dx:WpfSvgPalette.States>
    </dx:WpfSvgPalette>
    <Thickness x:Key="{dxgt:LWKey GridRow.RowBreakThickness}">0,0,0,2</Thickness>
    <SolidColorBrush x:Key="{dxgt:LWKey TableView.AnnotationErrorBrush}" Color="{StaticResource Color.Custom.Red}" />
    <SolidColorBrush x:Key="{dxgt:LWKey TableView.AnnotationSearchBrush}" Color="#FFEEC833" />
    <SolidColorBrush x:Key="{dxgt:LWKey TableView.AnnotationSelectionBrush}" Color="{StaticResource Color.ListItem.HoverBackground}" />
    <SolidColorBrush x:Key="{dxgt:LWKey TableView.AnnotationFocusedRowBrush}" Color="{StaticResource Color.ListItem.SelectionBackground}" />
    <SolidColorBrush x:Key="{dxgt:LWKey ExcelColumnFilterPopup.FilterPanelBackground}" Color="Transparent" />
    <SolidColorBrush x:Key="{dxgt:LWKey CardView.Background}" Color="{StaticResource Color.Editor.Background}" />
    <SolidColorBrush x:Key="{dxgt:LWKey CardView.GroupPanelBackground}" Color="{StaticResource Color.Control.Background}" />
    <SolidColorBrush x:Key="{dxgt:LWKey CardView.GroupPanelBorderBrush}" Color="{StaticResource Color.Border}" />
    <SolidColorBrush x:Key="{dxgt:LWKey CardTemplates.CellFocusedBackground}" Color="{StaticResource Color.Editor.Background}" />
    <SolidColorBrush x:Key="{dxgt:LWKey CardTemplates.CellFocusedBrush}" Color="{StaticResource Color.Editor.Border}" />
    <SolidColorBrush x:Key="{dxgt:LWKey CardTemplates.CellFocusedForeground}" Color="{StaticResource Color.Foreground.Primary}"/> 
    <SolidColorBrush x:Key="{dxgt:LWKey GridColumnHeader.BorderBrush}" Color="{StaticResource Color.Border}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GridColumnHeader.Background}" Color="{StaticResource Color.Control.Background}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GridColumnHeader.BackgroundMouseOver}" Color="{StaticResource Color.Button.SimpleButtonBackground}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GridColumnHeader.BackgroundPressed}" Color="{StaticResource Color.Button.SimpleButtonBackground}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GridColumnHeader.HeaderCaptionForeground}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GridColumnHeader.HeaderHoverCaptionForeground}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GridColumnHeader.HeaderPressedCaptionForeground}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GridColumnHeader.FilterPopupForegroundBrush}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxgt:LWKey TableView.GroupPanelBorderBrush}" Color="{StaticResource Color.Border}" />
    <SolidColorBrush x:Key="{dxgt:LWKey TableView.GroupPanelSeparatorBrush}" Color="{StaticResource Color.Delimiter}" />
    <SolidColorBrush x:Key="{dxgt:LWKey TableView.SearchPanelBorderBottomBrush}" Color="{StaticResource Color.Border}" />
    <SolidColorBrush x:Key="{dxgt:LWKey TableView.SearchPanelBackground}" Color="{StaticResource Color.Control.Background}" />
    <SolidColorBrush x:Key="{dxgt:LWKey TableView.EditFormBackground}" Color="{StaticResource Color.Button.SimpleButtonBackground}" />
    <SolidColorBrush x:Key="{dxgt:LWKey TableView.EditFormForeground}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxgt:LWKey TableView.DataNavigatorBorderBrush}" Color="{StaticResource Color.Border}" />
    <SolidColorBrush x:Key="{dxgt:LWKey TableView.DataNavigatorBackground}" Color="{StaticResource Color.Button.SimpleButtonBackground}" />
    <SolidColorBrush x:Key="{dxgt:LWKey TableView.DataNavigatorFocusedBackground}" Color="{StaticResource Color.ListItem.HoverBackground}" />
    <SolidColorBrush x:Key="{dxgt:LWKey TableView.DataNavigatorDisableBackground}" Color="{StaticResource Color.Button.SimpleButtonBackground}" />
    <SolidColorBrush x:Key="{dxgt:LWKey TableView.DataNavigatorTextBrush}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxgt:LWKey TableView.DataNavigatorHoverTextBrush}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxgt:LWKey TableView.DataNavigatorBackgroundText}" Color="{StaticResource Color.Editor.Background}" />
    <SolidColorBrush x:Key="{dxgt:LWKey TableView.ColumnChooserBackgroundBrush}" Color="{StaticResource Color.Control.Background}" />
    <SolidColorBrush x:Key="{dxgt:LWKey TableView.ColumnChooserBorderBrush}" Color="{StaticResource Color.Border}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GridRow.UpdateRowButtonsControlBackground}" Color="{StaticResource Color.Button.SimpleButtonBackground}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GridRow.UpdateRowRectangleBackground}" Color="{StaticResource Color.Editor.Background}" Opacity="0.75" />
    <SolidColorBrush x:Key="{dxgt:LWKey GridRow.BorderBrush}" Color="{StaticResource Color.Border}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GridRow.GridDataRowDelimiterBrush}" Color="{StaticResource Color.Delimiter}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GridRow.EvenRowBackgroundBrush}" Color="{StaticResource Color.Delimiter}" Opacity="0.16" />
    <SolidColorBrush x:Key="{dxgt:LWKey GridRow.BorderNoneBrush}" Color="{dx:LWColor 'Color.Editor.Background, Win11Dark=#00000000'}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GridRow.BorderSelectedBrush}"
                     Color="{dx:LWColor 'Color.ListItem.HoverBackground, Win11Dark=Color.Accent'}"
                     Opacity="{dx:LWDouble '1, Win11Dark=0.2'}"/>
    <SolidColorBrush x:Key="{dxgt:LWKey GridRow.BorderUnfocusedBrush}"
                     Color="{dx:LWColor 'Color.ListItem.HoverBackground, Win11Dark=Color.Accent'}"
                     Opacity="{dx:LWDouble '1, Win11Dark=0.2'}"/>
    <SolidColorBrush x:Key="{dxgt:LWKey GridRow.BorderFocusedBrush}"
                     Color="{dx:LWColor 'Color.ListItem.SelectionAlt, Win11Dark=Color.Accent'}"
                     Opacity="{dx:LWDouble '1, Win11Dark=0.5'}"/>
    <SolidColorBrush x:Key="{dxgt:LWKey GridRow.TextUnfocusedBrush}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GridRow.TextFocusedBrush}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GridRow.TextRowSelectedBrush}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GridRow.ValidationErrorBrush}" Color="{StaticResource Color.Custom.Red}" Opacity="0.16" />
    <SolidColorBrush x:Key="{dxgt:LWKey GridRow.CellMergeNoneBrush}" Color="{StaticResource Color.Editor.Background}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GridRow.CellBorderNoneBrush}" Color="Transparent" />
    <SolidColorBrush x:Key="{dxgt:LWKey GridRow.CellBorderFocusedBorderBrush}" Color="{StaticResource Color.Delimiter}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GridRow.CellBorderFocusedBrush}" Color="{StaticResource Color.Editor.Background}" Opacity="0.74" />
    <SolidColorBrush x:Key="{dxgt:LWKey GridRow.CellTextFocusedBrush}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GridRow.TotalSummaryBrush}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GridRow.TotalSummaryBorderBrush}" Color="{StaticResource Color.Border}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GridRow.FixedSummaryFillBrush}" Color="{StaticResource Color.Control.Background}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GridRow.RowBreakBrush}" Color="{StaticResource Color.Delimiter}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GridRow.SelectionRectangleBackground}" Color="{StaticResource Color.Accent}" Opacity="0.38" />
    <SolidColorBrush x:Key="{dxgt:LWKey GridRow.SelectionRectangleBorderBrush}" Color="{StaticResource Color.Accent}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GridRow.NewItemRowBorderFocusedBrush}" Color="{StaticResource Color.ListItem.SelectionBackground}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GridRow.NewItemRowFadeBorderFocusedBrush}" Color="{StaticResource Color.ListItem.SelectionBackground}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GridRow.RowSeparatorBrush}" Color="{StaticResource Color.Editor.Background}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GroupRow.GroupGridRowHeaderTextBrush}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GroupRow.GroupRowBackground}" Color="{StaticResource Color.Control.Background}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GroupRow.GroupRowBackgroundSelected}" Color="{StaticResource Color.ListItem.HoverBackground}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GroupRow.GroupRowBackgroundFocused}" Color="{StaticResource Color.ListItem.SelectionAlt}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GroupRow.GroupRowForeground}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GroupRow.GroupRowFocusForeground}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GroupRow.GroupBandSummaryNormalBorderBrush}" Color="{StaticResource Color.Delimiter}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GroupRow.GroupBandSummaryFocusedBorderBrush}" Color="{StaticResource Color.Delimiter}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GroupRow.GroupBandSummaryNormalBackground}" Color="{StaticResource Color.Editor.Background}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GroupRow.GroupBandSummaryFocusedBackground}" Color="{StaticResource Color.ListItem.SelectionBackground}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GroupRow.GroupColumnSummaryFocusedBorderBrush}" Color="{StaticResource Color.Delimiter}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GroupRow.GroupFooterRowContentBackground}" Color="{StaticResource Color.Editor.Background}" />
    <SolidColorBrush x:Key="{dxgt:LWKey TreeListView.RowMarginBackgroundBrush}" Color="{dx:LWColor 'Color.Editor.Background, Win11Dark=Color.PanelBackground'}" />
    <SolidColorBrush x:Key="{dxgt:LWKey TreeListView.NodeFooterRowContentBackground}" Color="{StaticResource Color.Control.Background}" />
    <SolidColorBrush x:Key="{dxgt:LWKey ExcelColumnFilterPopup.HeaderPanelBottomBorderColor}" Color="{StaticResource Color.Border}" />
    <SolidColorBrush x:Key="{dxgt:LWKey ExcelColumnFilterPopup.HeaderPanelSeparatorColor}" Color="{StaticResource Color.Delimiter}" />
    <SolidColorBrush x:Key="{dxgt:LWKey ExcelColumnFilterPopup.ButtonHeaderForeground}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxgt:LWKey ExcelColumnFilterPopup.ButtonHeaderSelectedForeground}" Color="{StaticResource Color.Accent}" />
    <SolidColorBrush x:Key="{dxgt:LWKey ExcelColumnFilterPopup.ButtonHeaderFocusedForeground}" Color="{StaticResource Color.Accent}" />
    <SolidColorBrush x:Key="{dxgt:LWKey ExcelColumnFilterPopup.ButtonHeaderBackground}" Color="{StaticResource Color.Control.Background}" />
    <SolidColorBrush x:Key="{dxgt:LWKey ExcelColumnFilterPopup.HeaderPanelBackground}" Color="{StaticResource Color.Control.Background}" />
    <SolidColorBrush x:Key="{dxgt:LWKey ExcelColumnFilterPopup.SearchControlAdditionalButtonColor}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxgt:LWKey ExcelColumnFilterPopup.ButtonHeaderDecorationBackground}" Color="{StaticResource Color.Control.Background}" />
    <SolidColorBrush x:Key="{dxgt:LWKey TableView.CompactPanelForeground}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxgt:LWKey TableView.CompactPanelMouseOverForeground}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxgt:LWKey TableView.CompactPanelMousePressedForeground}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxgt:LWKey TableView.CompactPanelMouseOverBorderBrush}" Color="{StaticResource Color.ListItem.HoverBorder}" />
    <SolidColorBrush x:Key="{dxgt:LWKey TableView.CompactPanelMouseOverBackground}" Color="{StaticResource Color.ListItem.HoverBackground}" />
    <SolidColorBrush x:Key="{dxgt:LWKey TableView.CompactPanelMousePressedBorderBrush}" Color="{StaticResource Color.ListItem.SelectionBorder}" />
    <SolidColorBrush x:Key="{dxgt:LWKey TableView.CompactPanelMousePressedBackground}" Color="{StaticResource Color.ListItem.SelectionBackground}" />
    <SolidColorBrush x:Key="{dxgt:LWKey ExtendedColumnChooser.SearchPanelBackground}" Color="{StaticResource Color.WindowBackground}" />
    <SolidColorBrush x:Key="{dxgt:LWKey ExtendedColumnChooser.SearchPanelBorderBrush}" Color="Transparent" />
    <SolidColorBrush x:Key="{dxgt:LWKey GridRow.HoverForeground}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GridRow.HoverBackground}" Color="{StaticResource Color.ListItem.HoverBackground}" Opacity="0.74" />
    <SolidColorBrush x:Key="{dxgt:LWKey GroupRow.GroupRowHoverForeground}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GroupRow.GroupRowHoverBackground}" Color="{StaticResource Color.ListItem.HoverBackground}" Opacity="0.74" />
    <SolidColorBrush x:Key="{dxgt:LWKey GridControl.Foreground}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxgt:LWKey RowIndicator.ForegroundBrush}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxgt:LWKey TableView.NoRecordsForeground}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxgt:LWKey FilterEditor.PropertySelectorForeground}" Color="#FF000000" />
    <SolidColorBrush x:Key="{dxgt:LWKey FilterEditor.OperatorSelectorForeground}" Color="#FF000000" />
    <SolidColorBrush x:Key="{dxgt:LWKey FilterEditor.GroupOperatorSelectorForeground}" Color="{StaticResource Color.Editor.Background}" />
    <SolidColorBrush x:Key="{dxgt:LWKey FilterEditor.InplaceEditorActiveForeground}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxgt:LWKey FilterEditor.InplaceEditorInactiveForeground}" Color="#FF000000" />
    <SolidColorBrush x:Key="{dxgt:LWKey FilterEditor.PropertySelectorBackground}" Color="#FFF9D3B0" />
    <SolidColorBrush x:Key="{dxgt:LWKey FilterEditor.OperatorSelectorBackground}" Color="#FFBCD7E7" />
    <SolidColorBrush x:Key="{dxgt:LWKey FilterEditor.GroupOperatorSelectorBackground}" Color="#FF5590CC" />
    <SolidColorBrush x:Key="{dxgt:LWKey FilterEditor.InplaceEditorActiveBackground}" Color="{StaticResource Color.Editor.Background}" />
    <SolidColorBrush x:Key="{dxgt:LWKey FilterEditor.InplaceEditorInactiveBackground}" Color="#FFBBE2C5" />
    <SolidColorBrush x:Key="{dxgt:LWKey FilterEditor.InplaceEditorActiveBorderBrush}" Color="{StaticResource Color.Accent}" />
    <SolidColorBrush x:Key="{dxgt:LWKey FilterEditor.InplaceEditorInactiveBorderBrush}" Color="{StaticResource Color.Delimiter}" />
    <SolidColorBrush x:Key="{dxgt:LWKey FilterEditor.BorderBrush}" Color="{StaticResource Color.Border}" />
    <SolidColorBrush x:Key="{dxgt:LWKey FilterEditor.Background}" Color="{StaticResource Color.Editor.Background}" />
    <SolidColorBrush x:Key="{dxgt:LWKey FilterEditor.Foreground}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxgt:LWKey FilterEditor.AddChildSplitButtonMouseOverFill}" Color="#FF76C484" />
    <SolidColorBrush x:Key="{dxgt:LWKey CheckedTreeListFilterElement.DataPresenterBackground}" Color="{StaticResource Color.Editor.Background}" />
    <SolidColorBrush x:Key="{dxgt:LWKey ExcelStyleFilterElement.BorderBrush}" Color="{StaticResource Color.Border}" />
    <SolidColorBrush x:Key="{dxgt:LWKey ExcelStyleFilterElement.Background}" Color="{dx:LWColor 'Color.Control.Background, Win11Dark=Color.PanelBackground'}" />
    <SolidColorBrush x:Key="{dxgt:LWKey ExcelStyleFilterElement.HeaderPanelBottomBorderColor}" Color="{StaticResource Color.Border}" />
    <SolidColorBrush x:Key="{dxgt:LWKey ExcelStyleFilterElement.HeaderPanelSeparatorColor}" Color="{StaticResource Color.Delimiter}" />
    <SolidColorBrush x:Key="{dxgt:LWKey ExcelStyleFilterElement.HeaderPanelSelectionMarkerBackground}" Color="{dx:LWColor 'Color.Control.Background, Win11Dark=Color.PanelBackground'}" />
    <SolidColorBrush x:Key="{dxgt:LWKey ExcelStyleFilterElement.FilterValueContainerTopAreaBackground}" Color="{StaticResource Color.WindowBackground}" />
    <SolidColorBrush x:Key="{dxgt:LWKey ExcelStyleFilterElement.FilterValueContainerTopAreaBorderColor}" Color="{StaticResource Color.Border}" />
    <SolidColorBrush x:Key="{dxgt:LWKey ExcelStyleFilterElement.HeaderPanelBackground}" Color="{dx:LWColor 'Color.Control.Background, Win11Dark=Color.PanelBackground'}" />
    <SolidColorBrush x:Key="{dxgt:LWKey FilteringPanel.ControlBackground}" Color="{StaticResource Color.FlyoutBackground}" />
    <SolidColorBrush x:Key="{dxgt:LWKey FilteringPanel.ControlButtonsBackgroundPressed}" Color="{StaticResource Color.ListItem.SelectionBackground}" />
    <SolidColorBrush x:Key="{dxgt:LWKey FilteringPanel.ControlButtonsBorderBrushPressed}" Color="{StaticResource Color.ListItem.SelectionBorder}" />
    <SolidColorBrush x:Key="{dxgt:LWKey FilteringPanel.ControlButtonsBackgroundHover}" Color="{StaticResource Color.ListItem.HoverBackground}" />
    <SolidColorBrush x:Key="{dxgt:LWKey FilteringPanel.ControlButtonsBorderBrushHover}" Color="{StaticResource Color.Button.HoverBorder}" />
    <SolidColorBrush x:Key="{dxgt:LWKey FilteringPanel.ControlBorderBrush}" Color="{StaticResource Color.Editor.Border}" />
    <SolidColorBrush x:Key="{dxgt:LWKey FilteringPanel.PropertyBackground}" Color="#FFF9D3B0" />
    <SolidColorBrush x:Key="{dxgt:LWKey FilteringPanel.ValueBackground}" Color="#FFBBE2C5" />
    <SolidColorBrush x:Key="{dxgt:LWKey FilteringPanel.HighlightedBackground}" Color="#FFBCD7E7" />
    <SolidColorBrush x:Key="{dxgt:LWKey FilteringPanel.ElementForeground}" Color="#FF000000" />
    <SolidColorBrush x:Key="{dxgt:LWKey FilteringPanel.Foreground}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxgt:LWKey FilteringPanel.BracketBorderBrush}" Color="{StaticResource Color.Delimiter}" />
    <SolidColorBrush x:Key="{dxgt:LWKey FilteringPanel.PopupElementHoverBackground}" Color="{StaticResource Color.Border}" Opacity="0.13" />
    <SolidColorBrush x:Key="{dxgt:LWKey FilteringPanel.PopupElementPressedBackground}" Color="{StaticResource Color.Border}" Opacity="0.22" />
    <SolidColorBrush x:Key="{dxgt:LWKey TableView.DataPresenterBackground}" Color="{StaticResource Color.Editor.Background}" />
    <ControlTemplate x:Key="{dxgt:LWKey GridCard.ExpandButtonTemplate}" TargetType="{x:Type dx:ToggleStateButton}">
        <Grid x:Name="Root" Height="16" Width="16">
            <dx:DXBorder
                x:Name="IsDefault"
                Background="Transparent"
                BorderBrush="Transparent"
                BorderThickness="1" />
            <Grid x:Name="Path">
                <Path x:Name="Collapsed" Fill="{TemplateBinding Foreground}" Style="{StaticResource UIShape.Down}" />
                <Path
                    x:Name="Expanded"
                    Fill="{TemplateBinding Foreground}"
                    Style="{StaticResource UIShape.Up}"
                    Visibility="Collapsed" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill" TargetName="Collapsed" Value="{StaticResource Brush.Foreground.Primary}" />
                <Setter Property="Fill" TargetName="Expanded" Value="{StaticResource Brush.Foreground.Primary}" />
                <Setter Property="Background" TargetName="IsDefault" Value="{StaticResource Brush.ListItem.HoverBackground}" />
                <Setter Property="BorderBrush" TargetName="IsDefault" Value="{StaticResource Brush.ListItem.HoverBorder}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Fill" TargetName="Collapsed" Value="{StaticResource Brush.Foreground.Primary}" />
                <Setter Property="Fill" TargetName="Expanded" Value="{StaticResource Brush.Foreground.Primary}" />
                <Setter Property="Background" TargetName="IsDefault" Value="{StaticResource Brush.ListItem.SelectionBackground}" />
                <Setter Property="BorderBrush" TargetName="IsDefault" Value="{StaticResource Brush.ListItem.SelectionBorder}" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=SelectionState}" Value="Selected" />
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Visibility" TargetName="Collapsed" Value="Collapsed" />
                <Setter Property="Visibility" TargetName="Expanded" Value="Visible" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" TargetName="Root" Value="44" />
                <Setter Property="Width" TargetName="Root" Value="44" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:LWKey RowIndicator.RowIndicatorTemplate}" TargetType="{x:Type dxg:RowIndicator}">
        <Grid>
            <dx:DXBorder
                x:Name="PART_ContentBorder"
                Background="{StaticResource Brush.Button.SimpleButtonBackground}"
                BorderBrush="{StaticResource Brush.Border}"
                BorderThickness="0,0,1,1" />
            <dx:DXBorder
                x:Name="BottomBorder"
                BorderBrush="{StaticResource {dxgt:LWKey GridRow.RowBreakBrush}}"
                BorderThickness="{StaticResource {dxgt:LWKey GridRow.RowBreakThickness}}"
                Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ShowRowBreak" Value="True">
                <Setter Property="Visibility" TargetName="BottomBorder" Value="Visible" />
            </Trigger>
            <Trigger Property="IsLastFixedRow" Value="True">
                <Setter Property="BorderThickness" TargetName="BottomBorder" Value="0,1,0,1" />
                <Setter Property="VerticalAlignment" TargetName="BottomBorder" Value="Bottom" />
                <Setter Property="Visibility" TargetName="BottomBorder" Value="Visible" />
            </Trigger>
            <Trigger Property="FixedRowPosition" Value="Bottom">
                <Setter Property="VerticalAlignment" TargetName="BottomBorder" Value="Top" />
                <Setter Property="BorderThickness" TargetName="PART_ContentBorder" Value="0,1,1,0" />
            </Trigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(dxg:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.HasBackground)}" Value="True">
                <Setter Property="Background" TargetName="PART_ContentBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(dxg:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.Background)}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:LWKey RowIndicator.GroupRowIndicatorTemplate}" TargetType="{x:Type dxg:RowIndicator}">
        <dx:DXBorder
            x:Name="PART_ContentBorder"
            Background="{StaticResource Brush.Button.SimpleButtonBackground}"
            BorderBrush="{StaticResource Brush.Border}"
            BorderThickness="0,0,1,1" />
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(dxg:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.HasBackground)}" Value="True">
                <Setter Property="Background" TargetName="PART_ContentBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(dxg:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.Background)}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Thickness x:Key="{dxgt:LWKey GridColumnHeader.HeaderFilterContainerMargin}">-6,-4,-5,-4</Thickness>
    <SolidColorBrush x:Key="{dxgt:LWKey GridColumnHeader.HeaderFilterContainerBackground}" Color="{StaticResource Color.Editor.Background}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GridColumnHeader.HeaderFilterForeground}" Color="{StaticResource Color.Foreground.Primary}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GridColumnHeader.HeaderFilterDisplayForeground}" Color="{StaticResource Color.Accent}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GridColumnHeader.HeaderFilterDisplayForegroundHeaderHover}" Color="{StaticResource Color.Accent}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GridColumnHeader.HeaderFilterDisplayForegroundHeaderPressed}" Color="{StaticResource Color.Accent}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GridColumnHeader.HeaderFilterDisplayForegroundHover}" Color="{StaticResource Color.Foreground.Primary}" />
    <ControlTemplate x:Key="{dxgt:LWKey GridRow.RowTemplate}" TargetType="dxg:RowControl">
        <Grid>
            <dx:DXBorder x:Name="Background" Background="{TemplateBinding Background}" />
            <dx:DXBorder
                x:Name="BottomLine"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="0,0,0,1"
                VerticalAlignment="Bottom" />
            <Grid x:Name="PART_LayoutPanel" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ShowHorizontalLine" Value="False">
                <Setter Property="Visibility" TargetName="BottomLine" Value="Collapsed" />
            </Trigger>
            <Trigger Property="ShowBottomLine" Value="True">
                <Setter Property="Visibility" TargetName="BottomLine" Value="Visible" />
            </Trigger>
            <Trigger Property="FadeSelection" Value="True">
                <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey GridRow.BorderUnfocusedBrush}}" />
                <Setter Property="Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.TextUnfocusedBrush}}" />
            </Trigger>
            <Trigger Property="ShowRowBreak" Value="True">
                <Setter Property="BorderBrush" TargetName="BottomLine" Value="{StaticResource {dxgt:LWKey GridRow.RowBreakBrush}}" />
                <Setter Property="BorderThickness" TargetName="BottomLine" Value="{StaticResource {dxgt:LWKey GridRow.RowBreakThickness}}" />
            </Trigger>
            <Trigger Property="FixedRowPosition" Value="Bottom">
                <Setter Property="VerticalAlignment" TargetName="BottomLine" Value="Top" />
            </Trigger>
            <Trigger Property="IsLastFixedRow" Value="True">
                <Setter Property="Background" TargetName="BottomLine" Value="{DynamicResource {dxgt:LWKey GridRow.RowSeparatorBrush}}" />
                <Setter Property="BorderThickness" TargetName="BottomLine" Value="0,1,0,1" />
            </Trigger>
            <!-- <DataTrigger Binding="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True"> -->
            <!--     <Setter Property="Background" Value="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.Background), RelativeSource={RelativeSource Self}}"/> -->
            <!-- </DataTrigger> -->
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:LWKey GroupRow.GroupRowLightweightTemplate}" TargetType="dxg:GroupRowControl">
        <Grid x:Name="PART_RootPanel" Background="{DynamicResource {dxgt:LWKey GroupRow.GroupRowBackground}}" MinHeight="{DynamicResource {dxgt:LWKey GroupRow.GroupRowMinHeight}}">
            <dx:DXBorder x:Name="Background" Background="{TemplateBinding Background}" />
            <dx:DXBorder
                x:Name="BottomLine"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{DynamicResource {dxgt:LWKey GroupRow.GroupRowBottomLineThickness}}"
                VerticalAlignment="Bottom" />
            <dxg:GroupRowControlPanel x:Name="PART_LayoutPanel" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="FadeSelection" Value="True">
                <Setter Property="Background" TargetName="Background" Value="{DynamicResource {dxgt:LWKey GridRow.BorderUnfocusedBrush}}" />
                <Setter Property="Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.TextUnfocusedBrush}}" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" TargetName="PART_RootPanel" Value="43" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Background" TargetName="PART_RootPanel" Value="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.Background), RelativeSource={RelativeSource TemplatedParent}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxi:GridAppearanceOptions.HasDataAreaBackground), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Background" TargetName="PART_RootPanel" Value="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxi:GridAppearanceOptions.DataAreaBackground), RelativeSource={RelativeSource TemplatedParent}}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:LWKey CardView.GroupRowLightweightTemplate}" TargetType="dxg:GroupCardRowControl">
        <Grid x:Name="PART_RootPanel" Grid.Row="1" Background="{DynamicResource {dxgt:LWKey GroupRow.GroupRowBackground}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <dx:DXBorder
                x:Name="BorderTop"
                Grid.Row="0"
                BorderBrush="{StaticResource Brush.Delimiter}"
                BorderThickness="0,1,0,0"
                DockPanel.Dock="Top" />
            <Grid x:Name="PART_GroupContent" Grid.Row="1" MinHeight="{DynamicResource {dxgt:LWKey GroupRow.GroupRowMinHeight}}">
                <dx:DXBorder x:Name="Background" Background="{TemplateBinding Background}" />
                <dx:DXBorder
                    x:Name="BottomLine"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{DynamicResource {dxgt:LWKey GroupRow.GroupRowBottomLineThickness}}"
                    VerticalAlignment="Bottom" />
                <dxg:GroupRowControlPanel x:Name="PART_LayoutPanel" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="FadeSelection" Value="True">
                <Setter Property="Background" TargetName="Background" Value="{DynamicResource {dxgt:LWKey GridRow.BorderUnfocusedBrush}}" />
                <Setter Property="Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.TextUnfocusedBrush}}" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" TargetName="PART_GroupContent" Value="43" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:LWKey GroupRow.ExpandButtonTemplate}" TargetType="{x:Type dx:ToggleStateButton}">
        <Grid x:Name="Root" Background="Transparent">
            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                <Path x:Name="Collapsed" Fill="{StaticResource Brush.Foreground.Secondary}" Style="{StaticResource UIShape.Expand}" />
                <Path
                    x:Name="Expanded"
                    Fill="{StaticResource Brush.Foreground.Secondary}"
                    Opacity="0"
                    Style="{StaticResource UIShape.Collapse}" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Opacity" TargetName="Collapsed" Value="0" />
                <Setter Property="Opacity" TargetName="Expanded" Value="1" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill" TargetName="Collapsed" Value="{StaticResource Brush.Foreground.Primary}" />
                <Setter Property="Fill" TargetName="Expanded" Value="{StaticResource Brush.Foreground.Primary}" />
                <Setter Property="Opacity" TargetName="Root" Value="1" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Fill" TargetName="Collapsed" Value="{StaticResource Brush.Foreground.Muted}" />
                <Setter Property="Fill" TargetName="Expanded" Value="{StaticResource Brush.Foreground.Muted}" />
                <Setter Property="Opacity" TargetName="Root" Value="1" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" TargetName="Root" Value="23" />
                <Setter Property="MinWidth" TargetName="Root" Value="42" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <DataTemplate x:Key="{dxgt:LWKey RowIndicator.RowTemplate}">
        <dx:DXBorder
            x:Name="PART_ContentBorder"
            Background="{StaticResource Brush.Button.SimpleButtonBackground}"
            BorderBrush="{StaticResource Brush.Border}"
            BorderThickness="0,0,1,1">
            <ContentPresenter Content="{Binding DataContext, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{Binding Path=View.RowIndicatorContentTemplate}" />
        </dx:DXBorder>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Background" TargetName="PART_ContentBorder" Value="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.Background), RelativeSource={RelativeSource TemplatedParent}}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <DataTemplate x:Key="{dxgt:LWKey RowIndicator.GroupRowTemplate}">
        <dx:DXBorder
            x:Name="PART_Background"
            Background="{StaticResource Brush.Button.SimpleButtonBackground}"
            BorderBrush="{StaticResource Brush.Border}"
            BorderThickness="0,0,1,1">
            <ContentPresenter Content="{Binding DataContext, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{Binding Path=View.RowIndicatorContentTemplate}" />
        </dx:DXBorder>
    </DataTemplate>
    <DataTemplate x:Key="{dxgt:LWKey RowIndicator.FocusedIconTemplate}">
        <Path Fill="{StaticResource Brush.Foreground.Primary}" Style="{StaticResource UIShape.Right}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxgt:LWKey RowIndicator.FocusedErrorIconTemplate}">
        <Path Fill="{StaticResource Brush.Custom.Red}" Style="{StaticResource UIShape.Row.FocusedError}" />
    </DataTemplate>
    <Thickness x:Key="FixedSummaryTextBlock.Margin">0</Thickness>
    <FontWeight x:Key="FixedSummaryTextBlock.FontWeight">Normal</FontWeight>
    <ControlTemplate x:Key="{dxgt:LWKey GridColumnHeader.ColumnFilterTemplate}" TargetType="{x:Type ToggleButton}">
        <Grid Background="Transparent">
            <Path
                x:Name="Filter"
                Fill="{StaticResource Brush.Border}"
                Margin="3,0,0,0"
                Style="{StaticResource UIShape.Filter}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill" TargetName="Filter" Value="{StaticResource Brush.Accent}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Fill" TargetName="Filter" Value="{StaticResource Brush.Accent}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Fill" TargetName="Filter" Value="{StaticResource Brush.Accent}" />
            </Trigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(dxe:BaseEdit.OwnerEdit).Parent.IsMouseOver}" Value="True">
                <Setter Property="Fill" TargetName="Filter" Value="{StaticResource Brush.Foreground.Primary}" />
            </DataTrigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Margin" TargetName="Filter" Value="14,0,14,0" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:LWKey GridColumnHeader.SortArrowUpTemplate}">
        <StackPanel VerticalAlignment="Center">
            <dx:DXBorder
                x:Name="Line"
                Background="{StaticResource Brush.Foreground.Primary}"
                Height="1"
                Visibility="{Binding IsSortedBySummary, Converter={StaticResource BooleanToVisibilityConverter}}"
                Width="8" />
            <Path x:Name="Path"
                  Fill="{StaticResource Brush.Foreground.Primary}"
                  Style="{StaticResource UIShape.Up}" />
        </StackPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="Line" Value="{StaticResource Brush.Foreground.Primary}" />
                <Setter Property="Fill" TargetName="Path" Value="{StaticResource Brush.Foreground.Primary}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:LWKey GridColumnHeader.SortArrowDownTemplate}">
        <StackPanel VerticalAlignment="Center">
            <dx:DXBorder
                x:Name="Line"
                Background="{StaticResource Brush.Foreground.Primary}"
                Height="1"
                Visibility="{Binding IsSortedBySummary, Converter={StaticResource BooleanToVisibilityConverter}}"
                Width="8" />
            <Path x:Name="Path" Fill="{StaticResource Brush.Foreground.Primary}" Style="{StaticResource UIShape.Down}" />
        </StackPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="Line" Value="{StaticResource Brush.Foreground.Primary}" />
                <Setter Property="Fill" TargetName="Path" Value="{StaticResource Brush.Foreground.Primary}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <sys:Double x:Key="TreeViewControl.RowMarginControlOpacity">0.25</sys:Double>
    <ControlTemplate x:Key="{dxgt:LWKey GroupRow.GroupRowContentTemplate}" TargetType="{x:Type ContentControl}">
        <Grid x:Name="Root" Background="Transparent" MinHeight="{DynamicResource {dxgt:LWKey GroupRow.GroupRowMinHeight}}">
            <dx:DXBorder
                x:Name="IsDefault"
                Background="{TemplateBinding Background}"
                BorderBrush="{StaticResource {dxgt:LWKey GridRow.BorderBrush}}"
                BorderThickness="0,0,0,1"
                Padding="{TemplateBinding Padding}">
                <Grid>
                    <dx:DXBorder x:Name="IsSelected" Background="{DynamicResource {dxgt:LWKey GroupRow.GroupRowBackgroundSelected}}">
                        <dx:DXBorder.Visibility>
                            <Binding Path="SelectionState">
                                <Binding.Converter>
                                    <dxg:SelectionStateToVisibilityConverter Value="Selected" />
                                </Binding.Converter>
                            </Binding>
                        </dx:DXBorder.Visibility>
                    </dx:DXBorder>
                    <dx:DXBorder x:Name="IsFocus" Background="{DynamicResource {dxgt:LWKey GroupRow.GroupRowBackgroundFocused}}">
                        <dx:DXBorder.Visibility>
                            <Binding Path="SelectionState">
                                <Binding.Converter>
                                    <dxg:SelectionStateToVisibilityConverter Value="Focused" />
                                </Binding.Converter>
                            </Binding>
                        </dx:DXBorder.Visibility>
                    </dx:DXBorder>
                    <dx:DXBorder
                        x:Name="FadeBorder"
                        Background="{DynamicResource {dxgt:LWKey GridRow.BorderUnfocusedBrush}}"
                        dxg:FadeSelectionHelper.FadeSelectionOnLostFocus="{Binding Path=View.ActualFadeSelectionOnLostFocus}"
                        dxg:FadeSelectionHelper.IsKeyboardFocusWithinView="{Binding Path=(dxg:GridControl.ActiveView).IsKeyboardFocusWithin, RelativeSource={RelativeSource Mode=Self}}"
                        dxg:FadeSelectionHelper.IsSelected="{Binding SelectionState, Converter={dxg:SelectionStateToBooleanConverter}}"
                        dxg:FadeSelectionHelper.Opacity="1"
                        Visibility="Collapsed" />
                    <ContentPresenter>
                        <ContentPresenter.Margin>
                            <Binding Path="GroupLevel">
                                <Binding.Converter>
                                    <dxg:GroupLevelToMarginConverter />
                                </Binding.Converter>
                                <Binding.ConverterParameter>
                                    <Thickness>30,0,0,0</Thickness>
                                </Binding.ConverterParameter>
                            </Binding>
                        </ContentPresenter.Margin>
                    </ContentPresenter>
                </Grid>
            </dx:DXBorder>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding ElementName=FadeBorder}" Value="Visible">
                <Setter Property="Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.TextUnfocusedBrush}}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <dxg:DefaultStyle x:Key="{dxgt:LWKey GroupRow.GroupRowStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="Control.Foreground" Value="{StaticResource {dxgt:LWKey GroupRow.GroupRowForeground}}" />
        <Setter Property="Control.Background" Value="{StaticResource {dxgt:LWKey GroupRow.GroupRowBackground}}" />
        <Setter Property="Control.FontWeight" Value="Bold" />
        <dxg:DefaultStyle.Triggers>
            <DataTrigger Binding="{Binding Path=SelectionState}" Value="Highlighted">
                <Setter Property="Control.Background" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupRowHoverBackground}}" />
                <Setter Property="Control.Foreground" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupRowHoverForeground}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=SelectionState}" Value="Selected">
                <Setter Property="Control.Foreground" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupRowForeground}}" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=SelectionState}" Value="Focused" />
                    <Condition Binding="{Binding Path=(dxg:GridControl.ActiveView).IsKeyboardFocusWithin, RelativeSource={RelativeSource Mode=Self}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Control.Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.TextUnfocusedBrush}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=SelectionState}" Value="Focused" />
                    <Condition Binding="{Binding Path=(dxg:GridControl.ActiveView).IsKeyboardFocusWithin, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Control.Foreground" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupRowFocusForeground}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=SelectionState}" Value="Selected" />
                    <Condition Binding="{Binding Path=(dxg:GridControl.ActiveView).IsKeyboardFocusWithin, RelativeSource={RelativeSource Mode=Self}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Control.Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.TextUnfocusedBrush}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </dxg:DefaultStyle.Triggers>
    </dxg:DefaultStyle>
    
    <Style x:Key="TreeListBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="CornerRadius" Value="4" />
    </Style>
    <sys:Boolean x:Key="FilterElement.ShowBorder">False</sys:Boolean>
    <ControlTemplate x:Key="{dxgt:LWKey GridRow.AutoFilterRowClearButtonTemplate}" TargetType="{x:Type Button}">
        <Grid Background="Transparent">
            <Grid
                Height="16"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Width="16">
                <Path
                    x:Name="Glyph"
                    Data="F1 M 6.5,0.00012207C 10.0899,0.00012207 13,2.91028 13,6.50012C 13,10.09 10.0898,13.0001 6.5,13.0001C 2.91014,13.0001 2.58287e-006,10.09 2.58287e-006,6.50012C 2.58287e-006,2.91028 2.91004,0.00012207 6.5,0.00012207 Z M 3.00002,3.99988L 5.50002,6.49988L 3.00003,8.99988L 3.00003,9.99988L 4.00003,9.99988L 6.49998,7.49988L 9.00001,9.99988L 10,9.99988L 10,8.99988L 7.49994,6.49988L 10,3.99976L 10,2.99988L 9.00003,2.99988L 6.49998,5.49988L 4.00001,2.99988L 3.00001,2.99988L 3.00002,3.99988 Z "
                    Fill="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}"
                    Height="12"
                    HorizontalAlignment="Center"
                    Opacity="{DynamicResource {dx:LWDouble '0.62, Win11=1'}}"
                    Stretch="Fill"
                    VerticalAlignment="Center"
                    Width="12" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Glyph" Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Glyph" Property="Opacity" Value="1" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:LWKey GridColumnHeader.HeaderFilterDisplayClearButtonTemplate}" TargetType="{x:Type Button}">
        <Grid Background="Transparent">
            <Grid
                Height="16"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Width="16">
                <Path
                    x:Name="Glyph"
                    Data="F1 M 6.5,0.00012207C 10.0899,0.00012207 13,2.91028 13,6.50012C 13,10.09 10.0898,13.0001 6.5,13.0001C 2.91014,13.0001 2.58287e-006,10.09 2.58287e-006,6.50012C 2.58287e-006,2.91028 2.91004,0.00012207 6.5,0.00012207 Z M 3.00002,3.99988L 5.50002,6.49988L 3.00003,8.99988L 3.00003,9.99988L 4.00003,9.99988L 6.49998,7.49988L 9.00001,9.99988L 10,9.99988L 10,8.99988L 7.49994,6.49988L 10,3.99976L 10,2.99988L 9.00003,2.99988L 6.49998,5.49988L 4.00001,2.99988L 3.00001,2.99988L 3.00002,3.99988 Z "
                    Fill="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}"
                    Height="12"
                    HorizontalAlignment="Center"
                    Opacity="0.62"
                    Stretch="Fill"
                    VerticalAlignment="Center"
                    Width="12" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Glyph" Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Glyph" Property="Opacity" Value="1" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:LWKey GroupRow.ExpandDetailButtonTemplate}" TargetType="{x:Type dxg:GridToggleStateButton}">
        <Grid x:Name="Root" Background="Transparent" dx:FrameworkElementHelper.IsVisible="{Binding Path=(dxg:GridDetailExpandButtonContainer.IsDetailButtonVisible), RelativeSource={RelativeSource TemplatedParent}}">
            <dx:DXBorder
                x:Name="BottomBorder"
                Background="{StaticResource Brush.Delimiter}"
                BorderBrush="{StaticResource Brush.Editor.Background}"
                BorderThickness="0,0,0,1"
                Margin="0,0,1,0"
                VerticalAlignment="Bottom"
                Visibility="Collapsed" />
            <dx:DXBorder Background="{StaticResource Brush.Editor.Background}"
                    CornerRadius="7"
                    Height="9"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center">
                <Grid>
                    <Path Style="{StaticResource UIShape.MasterDetailMinus}" Visibility="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    <Path Style="{StaticResource UIShape.MasterDetailPlus}" Visibility="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverterInverted}}" />
                </Grid>
            </dx:DXBorder>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ShowRowBreak" Value="False" />
                    <Condition Property="IsChecked" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Visibility" TargetName="BottomBorder" Value="Visible" />
            </MultiTrigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" TargetName="Root" Value="42" />
                <Setter Property="MinWidth" TargetName="Root" Value="42" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="BorderBrush" TargetName="BottomBorder" Value="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.Background), RelativeSource={RelativeSource TemplatedParent}}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:LWKey GridControl.BorderTemplate}" TargetType="{x:Type ContentControl}">
        <dx:DXBorder x:Name="border1" Background="{StaticResource Brush.Border}">
            <dx:DXBorder.Padding>
                <Binding Path="(dxg:GridBorderHelper.ShowBorder)" RelativeSource="{RelativeSource TemplatedParent}">
                    <Binding.Converter>
                        <dx:BoolToObjectConverter FalseValue="0" TrueValue="1" />
                    </Binding.Converter>
                </Binding>
            </dx:DXBorder.Padding>
            <dx:DXBorder x:Name="border2"
                         Background="{dx:LWBrush 'Brush.Control.Background, Win11Dark=Brush.WindowBackground'}">
                <ContentPresenter />
            </dx:DXBorder>
        </dx:DXBorder>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxi:GridAppearanceOptions.HasDataAreaBackground), RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                <Setter Property="Background" TargetName="border1" Value="{Binding Path=TemplatedParent.(dxi:GridAppearanceOptions.DataAreaBackground), RelativeSource={RelativeSource TemplatedParent}}" />
                <Setter Property="Background" TargetName="border2" Value="{Binding Path=Background, ElementName=border1}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxi:AppearanceOptions.HasBackground), RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                <Setter Property="Background" TargetName="border1" Value="{Binding Path=TemplatedParent.(dxi:AppearanceOptions.Background), RelativeSource={RelativeSource TemplatedParent}}" />
                <Setter Property="Background" TargetName="border2" Value="{Binding Path=Background, ElementName=border1}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:LWKey TotalSummary.TotalSummaryControlTemplate}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <dx:DXBorder
                x:Name="leftBandSeparator"
                Background="{Binding Column.ActualBandCellLeftSeparatorColor}"
                BorderBrush="{DynamicResource {dxgt:LWKey GridRow.TotalSummaryBorderBrush}}"
                BorderThickness="1,0,1,0">
                <dx:DXBorder.Margin>
                    <Binding Path="Column.HasTopElement">
                        <Binding.Converter>
                            <dxg:TotalSummarySeparatorMarginConverter Left="-1" />
                        </Binding.Converter>
                    </Binding>
                </dx:DXBorder.Margin>
                <dx:DXBorder.Width>
                    <Binding Path="Column.ActualBandLeftSeparatorWidth">
                        <Binding.Converter>
                            <dxg:BandSeparatorAddWidthConverter />
                        </Binding.Converter>
                    </Binding>
                </dx:DXBorder.Width>
            </dx:DXBorder>
            <dx:DXBorder Grid.Column="1" Background="Transparent">
                <Grid x:Name="Root" Margin="{TemplateBinding Padding}">
                    <Grid.Visibility>
                        <Binding Path="Column.HasTotalSummaries">
                            <Binding.Converter>
                                <dx:BoolToObjectConverter FalseValue="Hidden" TrueValue="Visible" />
                            </Binding.Converter>
                        </Binding>
                    </Grid.Visibility>
                    <dx:DXBorder
                        x:Name="Border"
                        Background="{dx:LWBrush 'Brush.Editor.Background, Office2019Colorful=Brush.Control.Background, Office2019HighContrast=Brush.Control.Background, Win11=#00FFFFFF'}"
                        BorderBrush="#00FFFFFF"
                        BorderThickness="{dx:LWThickness '1, Win11=0'}"
                        Margin="3,4,3,3">
                        <dxg:TotalSummaryContentPresenter
                            Content="{Binding}"
                            ContentTemplateSelector="{Binding Path=Column.View.ActualTotalSummaryItemTemplateSelector}"
                            DataContext="{TemplateBinding DataContext}"
                            Style="{Binding Path=Column.ActualTotalSummaryContentStyle}" />
                    </dx:DXBorder>
                </Grid>
            </dx:DXBorder>
            <dx:DXBorder
                x:Name="rightBandSeparator"
                Grid.Column="2"
                Background="{Binding Column.ActualBandCellRightSeparatorColor}"
                BorderBrush="{DynamicResource {dxgt:LWKey GridRow.TotalSummaryBorderBrush}}"
                BorderThickness="1,0,1,0">
                <dx:DXBorder.Margin>
                    <Binding Path="Column.HasTopElement">
                        <Binding.Converter>
                            <dxg:TotalSummarySeparatorMarginConverter Left="0" />
                        </Binding.Converter>
                    </Binding>
                </dx:DXBorder.Margin>
                <dx:DXBorder.Width>
                    <Binding Path="Column.ActualBandRightSeparatorWidth">
                        <Binding.Converter>
                            <dxg:BandSeparatorAddWidthConverter />
                        </Binding.Converter>
                    </Binding>
                </dx:DXBorder.Width>
            </dx:DXBorder>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Column.ActualBandCellLeftSeparatorColor}" Value="{x:Null}">
                <Setter Property="Background" TargetName="leftBandSeparator" Value="{DynamicResource {dxgt:LWKey GridRow.GridDataRowDelimiterBrush}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Column.ActualBandCellRightSeparatorColor}" Value="{x:Null}">
                <Setter Property="Background" TargetName="rightBandSeparator" Value="{DynamicResource {dxgt:LWKey GridRow.GridDataRowDelimiterBrush}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Background" TargetName="Border" Value="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.Background), RelativeSource={RelativeSource TemplatedParent}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxi:GridAppearanceOptions.HasDataAreaBackground), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Background" TargetName="Border" Value="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxi:GridAppearanceOptions.DataAreaBackground), RelativeSource={RelativeSource TemplatedParent}}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:LWKey GridRow.FilterCellContentPresenterTemplate}" TargetType="{x:Type dxg:FilterCellContentPresenter}">
        <dx:DXBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderState}" Padding="{TemplateBinding Padding}">
            <dx:DXBorder.Background>
                <Binding Path="Background" RelativeSource="{RelativeSource TemplatedParent}" />
            </dx:DXBorder.Background>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <dx:DXBorder
                    x:Name="leftBandSeparator"
                    Background="{Binding Column.ActualBandCellLeftSeparatorColor}"
                    BorderBrush="{DynamicResource {dxgt:LWKey GridRow.GridDataRowDelimiterBrush}}"
                    BorderThickness="0,0,1,0"
                    Margin="0,0,0,-1"
                    Width="{Binding Column.ActualBandLeftSeparatorWidth}" />
                <dxg:FilterCriteriaControl Grid.Column="1" Column="{Binding Column}" Visibility="{Binding Path=Column.ActualShowCriteriaInAutoFilterRow, Converter={dx:BooleanToVisibilityConverter}}" />
                <dxg:FilterRowCellEditor x:Name="PART_CellEditor" Grid.Column="2" />
                <Button
                    Name="PART_ClearButton"
                    Grid.Column="3"
                    Height="18"
                    Visibility="Collapsed"
                    Background="#00000000"
                    dx:FocusHelper2.Focusable="False"
                    Template="{DynamicResource {dxgt:LWKey GridRow.AutoFilterRowClearButtonTemplate}}">
                    <dxmvvm:Interaction.Behaviors>
                        <dxmvvm:EventToCommand EventName="PreviewMouseLeftButtonDown" Command="{Binding Path=ClearCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxg:FilterCellContentPresenter}}" />
                    </dxmvvm:Interaction.Behaviors>
                </Button>
                <dx:DXBorder
                    x:Name="rightBandSeparator"
                    Grid.Column="4"
                    Background="{Binding Column.ActualBandCellRightSeparatorColor}"
                    BorderBrush="{DynamicResource {dxgt:LWKey GridRow.GridDataRowDelimiterBrush}}"
                    BorderThickness="1,0,0,0"
                    Margin="0,0,0,-1"
                    Width="{Binding Column.ActualBandRightSeparatorWidth}" />
            </Grid>
        </dx:DXBorder>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Column.ActualBandCellLeftSeparatorColor}" Value="{x:Null}">
                <Setter Property="Background" TargetName="leftBandSeparator" Value="{DynamicResource {dxgt:LWKey GridRow.GridDataRowDelimiterBrush}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Column.ActualBandCellRightSeparatorColor}" Value="{x:Null}">
                <Setter Property="Background" TargetName="rightBandSeparator" Value="{DynamicResource {dxgt:LWKey GridRow.GridDataRowDelimiterBrush}}" />
            </DataTrigger>
            <Trigger Property="dxg:TableView.IsFocusedRow" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.TextRowSelectedBrush}}" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsFocusedCell}" Value="False" />
                    <Condition Binding="{Binding View.DataControl.SelectionMode}" Value="None" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.TextFocusedBrush}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsFocusedCell}" Value="True" />
                    <Condition Binding="{Binding View.DataControl.SelectionMode}" Value="Row" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.TextUnfocusedBrush}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <Trigger Property="dxg:TableView.IsFocusedRow" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.TextUnfocusedBrush}}" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Column.ActualAllowAutoFilterClearButton}" Value="True" />
                    <Condition Binding="{Binding Column.AutoFilterValue, Converter={dxgi:StringToBoolConverter}}" Value="True" />
                    <Condition Binding="{Binding View.AutoFilterRowClearButtonMode}" Value="Always" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_ClearButton" Property="Visibility" Value="Visible" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Column.ActualAllowAutoFilterClearButton}" Value="True" />
                    <Condition Binding="{Binding Column.AutoFilterValue, Converter={dxgi:StringToBoolConverter}}" Value="True" />
                    <Condition Binding="{Binding View.AutoFilterRowClearButtonMode}" Value="Display" />
                    <Condition Binding="{Binding IsFocusedCell, ElementName=PART_CellEditor}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_ClearButton" Property="Visibility" Value="Visible" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Column.ActualAllowAutoFilterClearButton}" Value="True" />
                    <Condition Binding="{Binding Column.AutoFilterValue, Converter={dxgi:StringToBoolConverter}}" Value="True" />
                    <Condition Binding="{Binding View.AutoFilterRowClearButtonMode}" Value="Edit" />
                    <Condition Binding="{Binding IsFocusedCell, ElementName=PART_CellEditor}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_ClearButton" Property="Visibility" Value="Visible" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>