<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
    xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dxgtl="clr-namespace:DevExpress.Xpf.Grid.TreeList;assembly=DevExpress.Xpf.Grid.v24.1"
    xmlns:dxfuit="http://schemas.devexpress.com/winfx/2008/xaml/core/filteringui/themekeys"
    xmlns:dxgi="http://schemas.devexpress.com/winfx/2008/xaml/grid/internal"
    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
    xmlns:dxfui_local_native="http://schemas.devexpress.com/winfx/2008/xaml/core/filteringui/internal"
    xmlns:dxgn="clr-namespace:DevExpress.Xpf.Grid.Native;assembly=DevExpress.Xpf.Grid.v24.1">
    <ResourceDictionary.MergedDictionaries>
        <dxi:ThemeResourceDictionary Path="Common/{ThemeName}/Common.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <!--#region Svg-->
    <!--#endregion Svg-->
    <SolidColorBrush x:Key="{dxgt:LWKey TableView.SearchPanelBackground}" Color="{StaticResource Color.Control.Background}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GridRow.BorderUnfocusedBrush}" Color="{StaticResource Color.HoverBackground}" />
    <SolidColorBrush x:Key="{dxgt:LWKey GridRow.ValidationErrorBrush}" Color="{StaticResource Color.Custom.Red}" Opacity="0.16" />
    <dx:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <!--#region GridCardButton-->
    <!--#endregion GridCardButton-->
    <!--#region GridControlLightweightStyles-->
    <Thickness x:Key="{dxgt:LWKey GridColumnHeader.HeaderFilterContainerMargin}">-4,-2,-3,-2</Thickness>
    <ControlTemplate x:Key="{dxgt:LWKey GridRow.RowTemplate}" TargetType="dxg:RowControl">
        <Grid>
            <dx:DXBorder x:Name="Background" Background="{TemplateBinding Background}" />
            <dx:DXBorder
                x:Name="BottomLine"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="0,0,0,1"
                VerticalAlignment="Bottom" />
            <Grid x:Name="PART_LayoutPanel" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ShowHorizontalLine" Value="False">
                <Setter Property="Visibility" TargetName="BottomLine" Value="Collapsed" />
            </Trigger>
            <Trigger Property="ShowBottomLine" Value="True">
                <Setter Property="Visibility" TargetName="BottomLine" Value="Visible" />
            </Trigger>
            <Trigger Property="FadeSelection" Value="True">
                <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey GridRow.BorderUnfocusedBrush}}" />
                <Setter Property="Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.TextUnfocusedBrush}}" />
            </Trigger>
            <Trigger Property="ShowRowBreak" Value="True">
                <Setter Property="BorderBrush" TargetName="BottomLine" Value="{DynamicResource {dxgt:LWKey GridRow.RowBreakBrush}}" />
                <Setter Property="BorderThickness" TargetName="BottomLine" Value="{DynamicResource {dxgt:LWKey GridRow.RowBreakThickness}}" />
            </Trigger>
            <Trigger Property="FixedRowPosition" Value="Bottom">
                <Setter Property="VerticalAlignment" TargetName="BottomLine" Value="Top" />
            </Trigger>
            <Trigger Property="IsLastFixedRow" Value="True">
                <Setter Property="Background" TargetName="BottomLine" Value="{DynamicResource {dxgt:LWKey GridRow.RowSeparatorBrush}}" />
                <Setter Property="BorderThickness" TargetName="BottomLine" Value="0,1,0,1" />
            </Trigger>
            <!-- <DataTrigger Binding="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True"> -->
            <!--     <Setter Property="Background" Value="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.Background), RelativeSource={RelativeSource Self}}"/> -->
            <!-- </DataTrigger> -->
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:LWKey GroupRow.GroupRowLightweightTemplate}" TargetType="dxg:GroupRowControl">
        <Grid x:Name="PART_RootPanel" Background="{DynamicResource {dxgt:LWKey GroupRow.GroupRowBackground}}" MinHeight="{DynamicResource {dxgt:LWKey GroupRow.GroupRowMinHeight}}">
            <dx:DXBorder x:Name="Background" Background="{TemplateBinding Background}" />
            <dx:DXBorder
                x:Name="BottomLine"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{DynamicResource {dxgt:LWKey GroupRow.GroupRowBottomLineThickness}}"
                VerticalAlignment="Bottom" />
            <dxg:GroupRowControlPanel x:Name="PART_LayoutPanel" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="FadeSelection" Value="True">
                <Setter Property="Background" TargetName="Background" Value="{DynamicResource {dxgt:LWKey GridRow.BorderUnfocusedBrush}}" />
                <Setter Property="Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.TextUnfocusedBrush}}" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" TargetName="PART_RootPanel" Value="43" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Background" TargetName="PART_RootPanel" Value="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.Background), RelativeSource={RelativeSource TemplatedParent}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxi:GridAppearanceOptions.HasDataAreaBackground), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Background" TargetName="PART_RootPanel" Value="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxi:GridAppearanceOptions.DataAreaBackground), RelativeSource={RelativeSource TemplatedParent}}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:LWKey CardView.GroupRowLightweightTemplate}" TargetType="dxg:GroupCardRowControl">
        <Grid x:Name="PART_RootPanel" Grid.Row="1" Background="{DynamicResource {dxgt:LWKey GroupRow.GroupRowBackground}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <dx:DXBorder
                x:Name="BorderTop"
                Grid.Row="0"
                BorderBrush="{StaticResource Brush.Delimiter}"
                BorderThickness="0,1,0,0"
                DockPanel.Dock="Top" />
            <Grid x:Name="PART_GroupContent" Grid.Row="1" MinHeight="{DynamicResource {dxgt:LWKey GroupRow.GroupRowMinHeight}}">
                <dx:DXBorder x:Name="Background" Background="{TemplateBinding Background}" />
                <dx:DXBorder
                    x:Name="BottomLine"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{DynamicResource {dxgt:LWKey GroupRow.GroupRowBottomLineThickness}}"
                    VerticalAlignment="Bottom" />
                <dxg:GroupRowControlPanel x:Name="PART_LayoutPanel" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="FadeSelection" Value="True">
                <Setter Property="Background" TargetName="Background" Value="{DynamicResource {dxgt:LWKey GridRow.BorderUnfocusedBrush}}" />
                <Setter Property="Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.TextUnfocusedBrush}}" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" TargetName="PART_GroupContent" Value="43" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion GridControlLightweightStyles-->
    <!--#region GridControlExpandButton-->
    <ControlTemplate x:Key="{dxgt:LWKey GroupRow.ExpandButtonTemplate}" TargetType="{x:Type dx:ToggleStateButton}">
        <Grid x:Name="Root" Background="Transparent">
            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                <Path x:Name="Collapsed" Fill="{TemplateBinding Foreground}" Style="{StaticResource UIShape.Expand}" />
                <Path
                    x:Name="Expanded"
                    Fill="{TemplateBinding Foreground}"
                    Opacity="0"
                    Style="{StaticResource UIShape.Collapse}" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Opacity" TargetName="Collapsed" Value="0" />
                <Setter Property="Opacity" TargetName="Expanded" Value="1" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill" TargetName="Collapsed" Value="{StaticResource Brush.HoverForeground}" />
                <Setter Property="Fill" TargetName="Expanded" Value="{StaticResource Brush.HoverForeground}" />
                <Setter Property="Opacity" TargetName="Root" Value="1" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Fill" TargetName="Collapsed" Value="{StaticResource Brush.HoverForeground}" />
                <Setter Property="Fill" TargetName="Expanded" Value="{StaticResource Brush.HoverForeground}" />
                <Setter Property="Opacity" TargetName="Root" Value="1" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" TargetName="Root" Value="23" />
                <Setter Property="MinWidth" TargetName="Root" Value="42" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion GridControlExpandButton-->
    <!--#region RowIndicator-->
    <DataTemplate x:Key="{dxgt:LWKey RowIndicator.RowTemplate}">
        <dx:DXBorder
            x:Name="PART_ContentBorder"
            Background="{StaticResource Brush.Editor.Background}"
            BorderBrush="{StaticResource Brush.Delimiter}"
            BorderThickness="0,0,1,0">
            <ContentPresenter Content="{Binding DataContext, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{Binding Path=View.RowIndicatorContentTemplate}" />
        </dx:DXBorder>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Background" TargetName="PART_ContentBorder" Value="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.Background), RelativeSource={RelativeSource TemplatedParent}}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <DataTemplate x:Key="{dxgt:LWKey RowIndicator.GroupRowTemplate}">
        <dx:DXBorder
            x:Name="PART_Background"
            Background="{StaticResource Brush.Editor.Background}"
            BorderBrush="{StaticResource Brush.Delimiter}"
            BorderThickness="0,0,1,0">
            <ContentPresenter Content="{Binding DataContext, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{Binding Path=View.RowIndicatorContentTemplate}" />
        </dx:DXBorder>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(dxg:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.HasBackground)}" Value="True">
                <Setter Property="Background"
                        TargetName="PART_Background"
                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(dxg:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.Background)}"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <!--#endregion RowIndicator-->
    <!--#region HeaderFooterItemsControlStyles-->
    <Thickness x:Key="FixedSummaryTextBlock.Margin">0,0,4,0</Thickness>
    <FontWeight x:Key="FixedSummaryTextBlock.FontWeight">Bold</FontWeight>
    <!--#endregion HeaderFooterItemsControlStyles-->
    <!--#region ColumnHeaderFilter-->
    <ControlTemplate x:Key="{dxgt:LWKey GridColumnHeader.ColumnFilterTemplate}" TargetType="{x:Type ToggleButton}">
        <Grid Background="Transparent">
            <Path
                x:Name="Filter"
                Fill="{StaticResource Brush.Foreground}"
                Margin="3,0,0,0"
                Style="{StaticResource UIShape.Filter}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill" TargetName="Filter" Value="{StaticResource Brush.HoverForeground}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Fill" TargetName="Filter" Value="{StaticResource Brush.SelectionForeground}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Fill" TargetName="Filter" Value="{StaticResource Brush.SelectionForeground}" />
            </Trigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(dxe:BaseEdit.OwnerEdit).Parent.IsMouseOver}" Value="True">
                <Setter Property="Fill" TargetName="Filter" Value="{StaticResource Brush.Foreground}" />
            </DataTrigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Margin" TargetName="Filter" Value="14,0,14,0" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion ColumnHeaderFilter-->
    <!--#region ColumnHeaderSortArrow-->
    <ControlTemplate x:Key="{dxgt:LWKey GridColumnHeader.SortArrowUpTemplate}">
        <StackPanel VerticalAlignment="Center">
            <dx:DXBorder
                x:Name="Line"
                Background="{StaticResource Brush.Foreground}"
                Height="1"
                Visibility="{Binding IsSortedBySummary, Converter={StaticResource BooleanToVisibilityConverter}}"
                Width="8" />
            <Path x:Name="Path"
                  Fill="{StaticResource Brush.Foreground}"
                  Style="{StaticResource UIShape.Up}" />
        </StackPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="Line" Value="{StaticResource Brush.HoverForeground}" />
                <Setter Property="Fill" TargetName="Path" Value="{StaticResource Brush.HoverForeground}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:LWKey GridColumnHeader.SortArrowDownTemplate}">
        <StackPanel VerticalAlignment="Center">
            <dx:DXBorder
                x:Name="Line"
                Background="{StaticResource Brush.Foreground}"
                Height="1"
                Visibility="{Binding IsSortedBySummary, Converter={StaticResource BooleanToVisibilityConverter}}"
                Width="8" />
            <Path x:Name="Path" Fill="{StaticResource Brush.Foreground}" Style="{StaticResource UIShape.Down}" />
        </StackPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="Line" Value="{StaticResource Brush.HoverForeground}" />
                <Setter Property="Fill" TargetName="Path" Value="{StaticResource Brush.HoverForeground}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion ColumnHeaderSortArrow-->
    <!--#region GridViewGroupRow-->
    <ControlTemplate x:Key="{dxgt:LWKey GroupRow.GroupRowContentTemplate}" TargetType="{x:Type ContentControl}">
        <Grid x:Name="Root" Background="Transparent" MinHeight="{DynamicResource {dxgt:LWKey GroupRow.GroupRowMinHeight}}">
            <dx:DXBorder
                x:Name="IsDefault"
                Background="{TemplateBinding Background}"
                BorderBrush="{DynamicResource {dxgt:LWKey GridRow.BorderBrush}}"
                BorderThickness="0,0,0,1"
                Padding="{TemplateBinding Padding}">
                <Grid>
                    <dx:DXBorder x:Name="IsSelected" Background="{DynamicResource {dxgt:LWKey GroupRow.GroupRowBackgroundSelected}}">
                        <dx:DXBorder.Visibility>
                            <Binding Path="SelectionState">
                                <Binding.Converter>
                                    <dxg:SelectionStateToVisibilityConverter Value="Selected" />
                                </Binding.Converter>
                            </Binding>
                        </dx:DXBorder.Visibility>
                    </dx:DXBorder>
                    <dx:DXBorder x:Name="IsFocus" Background="{DynamicResource {dxgt:LWKey GroupRow.GroupRowBackgroundFocused}}">
                        <dx:DXBorder.Visibility>
                            <Binding Path="SelectionState">
                                <Binding.Converter>
                                    <dxg:SelectionStateToVisibilityConverter Value="Focused" />
                                </Binding.Converter>
                            </Binding>
                        </dx:DXBorder.Visibility>
                    </dx:DXBorder>
                    <dx:DXBorder
                        x:Name="FadeBorder"
                        Background="{DynamicResource {dxgt:LWKey GridRow.BorderUnfocusedBrush}}"
                        dxg:FadeSelectionHelper.FadeSelectionOnLostFocus="{Binding Path=View.ActualFadeSelectionOnLostFocus}"
                        dxg:FadeSelectionHelper.IsKeyboardFocusWithinView="{Binding Path=(dxg:GridControl.ActiveView).IsKeyboardFocusWithin, RelativeSource={RelativeSource Mode=Self}}"
                        dxg:FadeSelectionHelper.IsSelected="{Binding SelectionState, Converter={dxg:SelectionStateToBooleanConverter}}"
                        dxg:FadeSelectionHelper.Opacity="1"
                        Visibility="Collapsed" />
                    <ContentPresenter>
                        <ContentPresenter.Margin>
                            <Binding Path="GroupLevel">
                                <Binding.Converter>
                                    <dxg:GroupLevelToMarginConverter />
                                </Binding.Converter>
                                <Binding.ConverterParameter>
                                    <Thickness>30,0,0,0</Thickness>
                                </Binding.ConverterParameter>
                            </Binding>
                        </ContentPresenter.Margin>
                    </ContentPresenter>
                </Grid>
            </dx:DXBorder>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding ElementName=FadeBorder}" Value="Visible">
                <Setter Property="Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.TextUnfocusedBrush}}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <dxg:DefaultStyle x:Key="{dxgt:LWKey GroupRow.GroupRowStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="Control.Foreground" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupRowForeground}}" />
        <Setter Property="Control.Background" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupRowBackground}}" />
        <Setter Property="Control.FontWeight" Value="Bold" />
        <dxg:DefaultStyle.Triggers>
            <DataTrigger Binding="{Binding Path=SelectionState}" Value="Highlighted">
                <Setter Property="Control.Background" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupRowHoverBackground}}" />
                <Setter Property="Control.Foreground" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupRowHoverForeground}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=SelectionState}" Value="Selected">
                <Setter Property="Control.Foreground" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupRowForeground}}" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=SelectionState}" Value="Focused" />
                    <Condition Binding="{Binding Path=(dxg:GridControl.ActiveView).IsKeyboardFocusWithin, RelativeSource={RelativeSource Mode=Self}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Control.Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.TextUnfocusedBrush}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=SelectionState}" Value="Focused" />
                    <Condition Binding="{Binding Path=(dxg:GridControl.ActiveView).IsKeyboardFocusWithin, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Control.Foreground" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupRowFocusForeground}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=SelectionState}" Value="Selected" />
                    <Condition Binding="{Binding Path=(dxg:GridControl.ActiveView).IsKeyboardFocusWithin, RelativeSource={RelativeSource Mode=Self}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Control.Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.TextUnfocusedBrush}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </dxg:DefaultStyle.Triggers>
    </dxg:DefaultStyle>
    <!--#endregion GridViewGroupRow-->
</ResourceDictionary>