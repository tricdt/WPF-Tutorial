<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:conditionalFormattingManager="clr-namespace:DevExpress.Xpf.Core.ConditionalFormattingManager;assembly=DevExpress.Xpf.Core.v24.1"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
    xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dxe_helpers="clr-namespace:DevExpress.Xpf.Editors.Helpers;assembly=DevExpress.Xpf.Core.v24.1"
    xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
    xmlns:dxep="clr-namespace:DevExpress.Xpf.Editors.Popups;assembly=DevExpress.Xpf.Core.v24.1"
    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
    xmlns:dxfui="http://schemas.devexpress.com/winfx/2008/xaml/core/filteringui"
    xmlns:dxfui_local="clr-namespace:DevExpress.Xpf.Core.FilteringUI;assembly=DevExpress.Xpf.Grid.v24.1"
    xmlns:dxfui_local_native="clr-namespace:DevExpress.Xpf.Core.FilteringUI.Native;assembly=DevExpress.Xpf.Grid.v24.1"
    xmlns:dxfuit="clr-namespace:DevExpress.Xpf.Core.FilteringUI.Themes;assembly=DevExpress.Xpf.Grid.v24.1"
    xmlns:dxg="clr-namespace:DevExpress.Xpf.Grid;assembly=DevExpress.Xpf.Grid.v24.1"
    xmlns:dxgc="clr-namespace:DevExpress.Xpf.Grid.Native;assembly=DevExpress.Xpf.Grid.v24.1.Core"
    xmlns:dxgcore="clr-namespace:DevExpress.Xpf.Grid;assembly=DevExpress.Xpf.Grid.v24.1.Core"
    xmlns:dxgfui_local="clr-namespace:DevExpress.Xpf.Grid.Core.FilteringUI.Native;assembly=DevExpress.Xpf.Grid.v24.1.Core"
    xmlns:dxgh="clr-namespace:DevExpress.Xpf.Grid.Hierarchy;assembly=DevExpress.Xpf.Grid.v24.1.Core"
    xmlns:dxght="clr-namespace:DevExpress.Xpf.Grid.HitTest;assembly=DevExpress.Xpf.Grid.v24.1"
    xmlns:dxgi="clr-namespace:DevExpress.Xpf.Grid.Internal;assembly=DevExpress.Xpf.Grid.v24.1"
    xmlns:dxgl="clr-namespace:DevExpress.Xpf.Grid.LookUp;assembly=DevExpress.Xpf.Grid.v24.1"
    xmlns:dxgn="clr-namespace:DevExpress.Xpf.Core.Native;assembly=DevExpress.Xpf.Grid.v24.1.Core"
    xmlns:dxgr="clr-namespace:DevExpress.Xpf.Grid;assembly=DevExpress.Xpf.Grid.v24.1"
    xmlns:dxgt="clr-namespace:DevExpress.Xpf.Grid.Themes;assembly=DevExpress.Xpf.Grid.v24.1"
    xmlns:dxgtl="clr-namespace:DevExpress.Xpf.Grid.TreeList;assembly=DevExpress.Xpf.Grid.v24.1"
    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
    xmlns:dxp="http://schemas.devexpress.com/winfx/2008/xaml/printing"
    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">

    <ResourceDictionary.MergedDictionaries>
        <dxi:ThemeResourceDictionary Path="Grid/_{ThemeCategory}.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <dxgn:DebugConverter x:Key="DebugConverter" />
    <dx:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverterInverted" Invert="True" />
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <dxgr:DoubleToVisibilityConverter x:Key="DoubleToVisibilityConverter" />
    <dxgr:DoubleToVisibilityInverseConverter x:Key="DoubleToVisibilityInverseConverter" />
    <dxgr:FootersPanelMarginConverter x:Key="FootersPanelMarginConverter" />
    <dxgi:TotalSummaryPositionToRowConverter x:Key="TotalSummaryPositionToRowConverter" BottomRow="3" TopRow="0" />
    <dxgi:TotalSummaryPositionToVisibilityConverter x:Key="TotalSummaryPositionToVisibilityConverter" />
    <dxgi:TotalSummaryPositionToBooleanConverter x:Key="TotalSummaryPositionToBooleanConverter" />
    <dx:EnumToObjectConverter x:Key="ScrollBarModeToVerticalAlignmentConverter" DefaultValue="Stretch">
        <dx:EnumToObjectConverter.Values>
            <dx:EnumObjectProvider x:Key="TouchOverlap" Value="Bottom" />
        </dx:EnumToObjectConverter.Values>
    </dx:EnumToObjectConverter>
    <dx:ObjectToBooleanConverter x:Key="objectToBooleanConverter" />
    <dxgr:PrintFixedTotalSummaryBorderConverter x:Key="PrintFixedTotalSummaryBorderConverter" />
    <dx:StringToVisibilityConverter x:Key="StringToVisibilityConverter" />
    <SolidColorBrush x:Key="PrintHeaderBackColor" Color="#FFC0C0C0" />
    <dx:BoolToObjectConverter x:Key="PrintBorderConverter" FalseValue="1,0,0,1" TrueValue="1,0,1,1" />
    <dxgr:PrintTotalSummaryCellConverter x:Key="PrintTotalSummaryCellConverter" BorderThickness="1,0,1,1" />
    <dxgr:PrintGroupSummaryBorderConverter x:Key="PrintGroupSummaryBorderConverter" BorderThickness="1,0,1,1" />
    <dxgr:PrintHeaderBorderConverter x:Key="PrintHeaderBorderConverter" />
    <dxgr:PrintHeaderImageBorderConverter x:Key="PrintHeaderImageBorderConverter" />
    <dxmvvm:ObjectToObjectConverter x:Key="partialGroupingBorderConverter" DefaultSource="False" DefaultTarget="None">
        <dxmvvm:MapItem Source="True" Target="Panel" />
    </dxmvvm:ObjectToObjectConverter>
    <dx:EnumToObjectConverter x:Key="PrintTotalSummaryLeftSideAlignmentConverter" DefaultValue="Left">
        <dx:EnumToObjectConverter.Values>
            <dx:EnumObjectProvider x:Key="Collapsed" Value="Stretch" />
        </dx:EnumToObjectConverter.Values>
    </dx:EnumToObjectConverter>
    <dx:EnumToObjectConverter x:Key="PrintTotalSummaryRightSideAlignmentConverter" DefaultValue="Right">
        <dx:EnumToObjectConverter.Values>
            <dx:EnumObjectProvider x:Key="Collapsed" Value="Stretch" />
        </dx:EnumToObjectConverter.Values>
    </dx:EnumToObjectConverter>
    <dx:EnumToObjectConverter x:Key="PrintTotalSummaryLeftSideMarginConverter" DefaultValue="1,0,0,1">
        <dx:EnumToObjectConverter.Values>
            <dx:EnumObjectProvider x:Key="Collapsed" Value="1,0,1,1" />
        </dx:EnumToObjectConverter.Values>
    </dx:EnumToObjectConverter>
    <dx:EnumToObjectConverter x:Key="PrintTotalSummaryRightSideMarginConverter" DefaultValue="0,0,1,1">
        <dx:EnumToObjectConverter.Values>
            <dx:EnumObjectProvider x:Key="Collapsed" Value="1,0,1,1" />
        </dx:EnumToObjectConverter.Values>
    </dx:EnumToObjectConverter>
    <dx:BoolToObjectConverter x:Key="headerPanelExportTypeConverter" FalseValue="{x:Static dxp:ExportSettingDefaultValue.TargetType}" TrueValue="Panel" />
    <dx:BoolToObjectConverter x:Key="headersRowHeightConverter" FalseValue="Auto" TrueValue="*" />
    <dxgr:PrintHeaderVisibilityConverter x:Key="printHeaderVisibilityConverter" />
    <dxgr:CardViewPrintFixedTotalSummaryBorderConverter x:Key="CardViewPrintFixedTotalSummaryBorderConverterLeft" IsLeft="True" />
    <dxgr:CardViewPrintFixedTotalSummaryBorderConverter x:Key="CardViewPrintFixedTotalSummaryBorderConverterRight" IsLeft="False" />
    <dxmvvm:ObjectToObjectConverter x:Key="IntToVisibilityConverter" DefaultTarget="Visible">
        <dxmvvm:MapItem Source="0" Target="Collapsed" />
    </dxmvvm:ObjectToObjectConverter>
    <dx:BoolToObjectConverter x:Key="BooleanToThicknessConverter" FalseValue="0,0,0,1" TrueValue="0" />
    <dxgr:PrintCardMarginConverter x:Key="PrintCardMarginConverter" />
    <dxgr:GroupRowOuterMarginConverter
        x:Key="GroupRowIndentThicknessConverter"
        CollapsedIsLastMargin="0,0,0,1"
        CollapsedMargin="0,0,0,0"
        ExpandedIsLastMargin="0,0,0,0"
        ExpandedMargin="0,0,0,0" />
    <dxgr:GroupRowOuterMarginConverter
        x:Key="GroupRowOuterMarginConverter"
        CollapsedIsLastMargin="0,0,0,1"
        CollapsedMargin="0,0,0,14"
        ExpandedIsLastMargin="0,0,0,4"
        ExpandedMargin="0,0,0,4" />
    <dx:BoolToObjectConverter x:Key="IsExpandedMarginConverter" FalseValue="0,0,0,7" TrueValue="0,0,0,15" />
    <dxgi:TotalSummaryPositionToVisibilityConverter x:Key="HeaderTotalSummaryPositionToVisibilityConverter" VisiblePosition="Top" />
    <dxgi:TotalSummaryPositionToVisibilityConverter x:Key="FooterTotalSummaryPositionToVisibilityConverter" VisiblePosition="Bottom" />
    <dxgi:TotalSummaryPositionToMarginConverter x:Key="TotalSummaryPositionToPrintPaddingConverter" BottomMargin="0,9,0,9" TopMargin="0,0,0,9" />
    <dxgi:TotalSummaryPositionToMarginConverter x:Key="TotalSummaryPositionPrintMarginConverter" BottomMargin="0,15,0,0" TopMargin="0,0,0,15" />
    <dxmvvm:ObjectToObjectConverter x:Key="HeaderPresenterTypeConverter" DefaultSource="False" DefaultTarget="ColumnChooser">
        <dxmvvm:MapItem Source="True" Target="Headers" />
    </dxmvvm:ObjectToObjectConverter>
    <dx:BoolInverseConverter x:Key="boolInverseConverter" />
    <dxgr:ExtendedColumnChooserHeaderPresenterTypeConverter x:Key="ExtendedColumnChooserHeaderPresenterTypeConverter" />
    <dxmvvm:ObjectToObjectConverter x:Key="HeaderVisibilityConverter" DefaultTarget="Collapsed">
        <dxmvvm:MapItem Source="{x:Null}" Target="Visible" />
    </dxmvvm:ObjectToObjectConverter>
    <dxgr:ExcelCustomFilterOperandConverter x:Key="ExcelCustomFilterOperandConverter" />
    <dxgr:InverseBooleanConverter x:Key="InverseBooleanConverter" />
    <dxgr:NavigationRowConverter x:Key="NavigationRowConverter" />
    <dxgr:DisplayedNavigationConverter x:Key="DisplayedNavigationConverter" />
    <dx:ObjectToVisibilityConverter x:Key="ObjectToVisibilityConverter" HandleList="false" />
    <dx:ObjectToVisibilityConverter x:Key="ObjectToVisibilityConverterInverted" Invert="True" />
    <dxgr:FilterPanelCaptionConverter x:Key="FilterPanelCaptionConverter" />
    <dxgr:GroupDetailNameConverter x:Key="GroupDetailNameConverter" />
    <dxgr:ShowRowBreakConverter x:Key="ShowRowBreakConverter" />
    <dxgr:SortOrderConverter x:Key="SortOrderConverter" />
    <dxgr:IsTreeViewConverter x:Key="IsTreeViewConverter" />
    <dxgi:TotalSummaryPositionToMarginConverter x:Key="TotalSummaryPositionToMarginConverter" BottomMargin="0,0,0,0" TopMargin="0,-1,0,1" />
    <dxi:ButtonAsyncIndicationSizeConverter x:Key="buttonAsyncIndicationSizeConverter" />
    <dx:BoolToThicknessConverter x:Key="GroupColumnSummaryBoolToThicknessConverter" ThicknessFalse="0" ThicknessTrue="0,0,1,0" />
    <dx:BooleanToDoubleConverter x:Key="BooleanToDoubleConverter" />
    <Thickness x:Key="filterEditorMargin">6,2,6,6</Thickness>
    <Thickness x:Key="filterEditorRowMargin">0,2</Thickness>
    <Thickness x:Key="filterEditorButtonMargin">0,0,0,-1</Thickness>
    <dxfui_local_native:PaletteForegroundConverter x:Key="PaletteConverter" />
    <dxfui_local_native:OperandMenuItemsVisibilityConverter x:Key="OperandMenuItemsVisibilityConverter" />
    <dxfui_local:NodeModelTemplateSelector x:Key="FilterEditorNodeTemplateSelector">
        <dxfui_local:NodeModelTemplateSelector.LeafTemplate>
            <DataTemplate>
                <dxfui_local:FilterEditorLeafControl HorizontalContentAlignment="Stretch" Content="{Binding}" />
            </DataTemplate>
        </dxfui_local:NodeModelTemplateSelector.LeafTemplate>
        <dxfui_local:NodeModelTemplateSelector.GroupTemplate>
            <DataTemplate>
                <dxfui_local:FilterEditorGroupControl HorizontalContentAlignment="Stretch" Content="{Binding}" />
            </DataTemplate>
        </dxfui_local:NodeModelTemplateSelector.GroupTemplate>
        <dxfui_local:NodeModelTemplateSelector.CustomExpressionTemplate>
            <DataTemplate>
                <dxfui_local:FilterEditorCustomExpressionControl HorizontalContentAlignment="Stretch" Content="{Binding}" />
            </DataTemplate>
        </dxfui_local:NodeModelTemplateSelector.CustomExpressionTemplate>
    </dxfui_local:NodeModelTemplateSelector>
    <sys:Double x:Key="{dxgt:LWKey ExtendedColumnChooser.SearchPanelTextBoxMinWidth}">190</sys:Double>
    <dx:EditorStringIdConverter x:Key="EditorStringIdConverter" />
    <dxmvvm:ObjectToObjectConverter x:Key="TopBottomValueTypeConverter">
        <dxmvvm:MapItem Source="Items" Target="{dxe:EditorStringId TopBottomValueTypeItems}" />
        <dxmvvm:MapItem Source="Percent" Target="{dxe:EditorStringId TopBottomValueTypePercent}" />
    </dxmvvm:ObjectToObjectConverter>
    <dxmvvm:ObjectToObjectConverter x:Key="FilterValuesSortModesConverter" DefaultSource="{x:Null}">
        <dxmvvm:MapItem Target="{dxe:EditorStringId FilterValuesSortModeNoSort}">
            <dxmvvm:MapItem.Source>
                <dxfui:FilterValuesSortMode>NoSort</dxfui:FilterValuesSortMode>
            </dxmvvm:MapItem.Source>
        </dxmvvm:MapItem>
        <dxmvvm:MapItem Target="{dxe:EditorStringId FilterValuesSortModeAvailableFirst}">
            <dxmvvm:MapItem.Source>
                <dxfui:FilterValuesSortMode>AvailableFirst</dxfui:FilterValuesSortMode>
            </dxmvvm:MapItem.Source>
        </dxmvvm:MapItem>
        <dxmvvm:MapItem Target="{dxe:EditorStringId FilterValuesSortModePopularFirst}">
            <dxmvvm:MapItem.Source>
                <dxfui:FilterValuesSortMode>PopularFirst</dxfui:FilterValuesSortMode>
            </dxmvvm:MapItem.Source>
        </dxmvvm:MapItem>
    </dxmvvm:ObjectToObjectConverter>
    <dxgr:DynamicLocalizationStringValueConvertor x:Key="LocalizationStringValueConverter" />


    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\ConditionalFormatting.xaml-->
    <DataTemplate x:Key="EmptyFormatTemplate">
        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{dx:DataControlStringId ConditionalFormatting_Manager_NoFormatSet}" />
    </DataTemplate>
    <ControlTemplate x:Key="SimpleFormatContainerTemplate" TargetType="{x:Type ContentControl}">
        <dx:DXBorder
            Padding="{Binding Padding, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxgr:FormatPreviewControl}}}"
            BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxgr:FormatPreviewControl}}}"
            BorderThickness="1"
            CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxgr:FormatPreviewControl}}}">
            <ContentPresenter />
        </dx:DXBorder>
    </ControlTemplate>
    <DataTemplate x:Key="SimpleFormatContentTemplate">
        <StackPanel Orientation="Horizontal">
            <TextBlock
                x:Name="PART_Text"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="{Binding PreviewString, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxgr:FormatPreviewControl}}}"
                TextDecorations="{Binding TextDecorations}" />
            <dx:DXImage
                x:Name="PART_Image"
                Margin="1,0,0,0"
                HorizontalAlignment="Center"
                Source="{Binding Icon}"
                Stretch="None"
                Visibility="{Binding Icon, Converter={dx:NullableToVisibilityConverter}}" />
        </StackPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Format.IsIconSetConditionalFormat, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxgr:FormatPreviewControl}}}" Value="True">
                <Setter TargetName="PART_Text" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <DataTemplate x:Key="IconSetFormatTemplate">
        <dx:DXImage
            Source="{Binding DataContext.Icon, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxgr:FormatPreviewControl}}}"
            Stretch="None"
            HorizontalAlignment="Center"
            Margin="1"/>
    </DataTemplate>
    <DataTemplate x:Key="ColorScaleFormatTemplate">
        <Rectangle Fill="{Binding Converter={dxgc:ColorScalePreviewConverter}}" />
    </DataTemplate>
    <DataTemplate x:Key="DataBarFormatTemplate">
        <dx:DXBorder Padding="2,2,20,2" BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxgr:FormatPreviewControl}}}" BorderThickness="1">
            <Rectangle Fill="{Binding Fill}" Stroke="{Binding BorderBrush}" />
        </dx:DXBorder>
    </DataTemplate>
    <DataTemplate x:Key="SimpleFormatTemplate">
        <ContentControl Content="{Binding}" ContentTemplate="{Binding SimpleFormatTemplate, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxgr:FormatPreviewControl}}}" Template="{StaticResource SimpleFormatContainerTemplate}" />
    </DataTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\ConditionalFormatting.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\ColumnHeader.xaml-->

    <dxgcore:DefaultDataTemplate x:Key="{dxgt:LWKey GridColumnHeader.ContentTemplate}">

        <ContentPresenter Name="textBlock" dxgr:GridColumnHeader.GridColumn="{Binding Path=(dxgr:GridColumnHeader.GridColumn), RelativeSource={RelativeSource TemplatedParent}}" Content="{Binding}">
            <ContentPresenter.Resources>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                    <Setter Property="dxei:TextBlockService.AllowIsTextTrimmed" Value="True" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(dxgr:GridColumnHeader.GridColumn).HeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}" Value="{x:Null}" />
                                <Condition Binding="{Binding Path=(dxei:TextBlockService.IsTextTrimmed), RelativeSource={RelativeSource Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="ToolTipService.ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Text}" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </ContentPresenter.Resources>
        </ContentPresenter>
    </dxgcore:DefaultDataTemplate>

    <dxgcore:DefaultDataTemplate x:Key="{dxgt:LWKey GridColumnHeader.CustomizationAreaTemplate}" />
    <ControlTemplate x:Key="{dxgt:LWKey GridColumnHeader.FilterAreaTemplate}" TargetType="{x:Type dxe:PopupBaseEdit}">
        <ToggleButton
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            AutomationProperties.AutomationId="FilterButton"
            AutomationProperties.Name="FilterButton"
            Focusable="False"
            Foreground="{Binding Path=Parent.(TextElement.Foreground), RelativeSource={RelativeSource TemplatedParent}}"
            IsChecked="{Binding Path=IsPopupOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
            IsTabStop="False"
            Template="{DynamicResource {dxgt:LWKey GridColumnHeader.ColumnFilterTemplate}}" />
    </ControlTemplate>
    <DataTemplate x:Key="{dxgt:LWKey GridColumnHeader.CheckBoxSelectorColumnHeaderTemplate}">
        <dx:DXBorder Margin="{DynamicResource {dxgt:LWKey GridColumnHeader.CheckBoxSelectorMargin}}" Padding="0,0,2,0">
            <dxe:CheckEdit x:Name="PART_ColumnSelectionCheckBox"
                           IsHitTestVisible="False"
                           EditValue="{Binding Path=GridView.AllItemsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxg:GridColumnHeader}}, Mode=OneWay}"
                           IsEnabled="{Binding Path=GridView.EnabledCheckBoxSelector, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxg:GridColumnHeader}}, Mode=OneWay}" />
        </dx:DXBorder>
    </DataTemplate>

    <Style x:Key="{dxgt:LWKey GridColumnHeader.ImageStyle}" TargetType="Image">
        <Setter Property="Stretch" Value="None" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="dxb:BarItem.UseAsBarItemGlyph" Value="True" />
        <Setter Property="Margin" Value="{dx:LWThickness '(0,0,4,0), Win11=(0,0,6,0)'}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(dxgr:GridColumnHeader.GridColumn).ImageAlignment, RelativeSource={RelativeSource Self}}" Value="Center">
                <Setter Property="Margin" Value="0,0,0,0" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxgr:GridColumnHeader.GridColumn).ImageAlignment, RelativeSource={RelativeSource Self}}" Value="Far">
                <Setter Property="Margin" Value="{dx:LWThickness '(4,0,0,0), Win11=(6,0,0,0)'}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\ColumnHeader.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\CardTemplates.xaml-->
    <Style x:Key="{dxgt:LWKey CardTemplates.SearchPanelContentTemplate}" TargetType="{x:Type ContentControl}">
        <Setter Property="dx:FocusHelper2.Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid x:Name="grid" Background="{DynamicResource {dxgt:LWKey TableView.SearchPanelBackground}}">
                        <dxgr:GridSearchControl
                            x:Name="PART_SearchControl"
                            Margin="{DynamicResource {dxgt:LWKey TableView.SearchPanelWithoutGroupedPanelMargin}}"
                            HorizontalAlignment="{Binding Path=(dxg:GridControl.CurrentView).ActualSearchPanelHorizontalAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                            View="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}">
                            <dxgr:GridSearchControl.Visibility>
                                <Binding Converter="{StaticResource BooleanToVisibilityConverter}" Path="View.ActualShowSearchPanel" RelativeSource="{RelativeSource Self}" />
                            </dxgr:GridSearchControl.Visibility>
                        </dxgr:GridSearchControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_SearchControl" Property="GroupPanelShown" Value="True">
                            <Setter TargetName="PART_SearchControl" Property="Margin" Value="{DynamicResource {dxgt:LWKey TableView.SearchPanelWithGroupedPanelMargin}}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=(dxg:GridControl.CurrentView).ActualSearchPanelPosition, RelativeSource={RelativeSource TemplatedParent}}" Value="Default">
                            <Setter Property="VerticalAlignment" Value="Top" />
                            <Setter TargetName="PART_SearchControl" Property="Margin" Value="{DynamicResource {dxgt:LWKey CardView.HeadersButtonMargin}}" />
                            <Setter TargetName="PART_SearchControl" Property="AllowAnimation" Value="true" />
                            <Setter TargetName="PART_SearchControl" Property="SearchTextBoxMinWidth" Value="{DynamicResource {dxgt:LWKey TableView.SearchPanelWidth}}" />
                            <Setter TargetName="grid" Property="Margin">
                                <Setter.Value>
                                    <Binding Path="(dxg:GridControl.CurrentView).ShowSearchPanelMode" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.Converter>
                                            <dxmvvm:ObjectToObjectConverter DefaultSource="Default" DefaultTarget="0">
                                                <dxmvvm:MapItem Source="Always" Target="0,0,4,0" />
                                                <dxmvvm:MapItem Source="HotKey" Target="0" />
                                                <dxmvvm:MapItem Source="Never" Target="0" />
                                            </dxmvvm:ObjectToObjectConverter>
                                        </Binding.Converter>
                                    </Binding>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                            <Setter TargetName="PART_SearchControl" Property="SearchTextBoxMinWidth" Value="{DynamicResource {dxgt:LWKey TableView.SearchPanelWidthTouch}}" />
                        </Trigger>
                        <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                            <Setter TargetName="PART_SearchControl" Property="SearchTextBoxMinWidth" Value="{DynamicResource {dxgt:LWKey TableView.SearchPanelWidthTouch}}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=(dxg:GridControl.CurrentView).ActualSearchPanelPosition, RelativeSource={RelativeSource TemplatedParent}}" Value="OverGroupPanel">
                            <Setter TargetName="PART_SearchControl" Property="SearchTextBoxMinWidth" Value="{DynamicResource {dxgt:LWKey TableView.SearchPanelTextBoxMinWidth}}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="{dxgt:LWKey CardTemplates.CardHeaderTemplate}">
        <TextBlock Text="{Binding Path=Value}" />
    </DataTemplate>
    <ControlTemplate x:Key="{dxgt:LWKey CardTemplates.CellContentPresenterTemplate}" TargetType="{x:Type dxgcore:CellContentPresenter}">
        <dx:DXBorder
            x:Name="ContentBorder"
            Padding="{TemplateBinding Padding}"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="{TemplateBinding Border.CornerRadius}">
            <dxgcore:CellEditor x:Name="PART_CellEditor" Margin="{DynamicResource {dxgt:LWKey CardView.CellEditorMargin}}" ClipToBounds="{DynamicResource {dxgt:LWKey CardView.ClipCellEditor}}" />
        </dx:DXBorder>
    </ControlTemplate>

    <DataTemplate x:Key="{dxgt:LWKey CardTemplates.CardRowTemplate}">
        <Grid x:Name="grid" dxgr:GridColumn.NavigationIndex="{Binding Path=DataContext.Column.ActualVisibleIndex, RelativeSource={RelativeSource TemplatedParent}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition SharedSizeGroup="cardRowDescription" />
                <ColumnDefinition Width="6" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <TextBlock Style="{DynamicResource {dxgt:LWKey CardTemplates.CardRowHeaderTextStyle}}">
                <TextBlock.Text>
                    <Binding Path="Column.HeaderCaption">
                        <Binding.Converter>
                            <dx:FormatStringConverter FormatString="{}{0}:" />
                        </Binding.Converter>
                    </Binding>
                </TextBlock.Text>
                <dxgr:GridViewHitInfoBase.HitTestAcceptor>
                    <dxght:FieldCaptionCardViewHitTestAcceptor />
                </dxgr:GridViewHitInfoBase.HitTestAcceptor>
            </TextBlock>
            <dxgr:CardCellContentPresenter
                x:Name="cell"
                Grid.Column="2"
                CellStyle="{Binding Path=DataContext.Column.ActualCellStyle, RelativeSource={RelativeSource TemplatedParent}}"
                Column="{Binding Path=DataContext.Column, RelativeSource={RelativeSource TemplatedParent}}" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="{dxgt:LWKey CardTemplates.CardTemplate}">
        <dxgr:CardItemsControl x:Name="cardItemsControl" ItemsSource="{Binding Path=CellData}">
            <dxgr:CardItemsControl.ItemTemplate>
                <DataTemplate>
                    <dx:DataContentPresenter ContentTemplateSelector="{Binding Path=(dxg:GridControl.ActiveView).ActualCardRowTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
                </DataTemplate>
            </dxgr:CardItemsControl.ItemTemplate>
            <dxgr:CardItemsControl.ItemsPanel>
                <ControlTemplate>
                    <dx:StackVisibleIndexPanel ArrangeAccordingToVisibleIndex="True" Orientation="Vertical" />
                </ControlTemplate>
            </dxgr:CardItemsControl.ItemsPanel>
        </dxgr:CardItemsControl>
    </DataTemplate>

    <DataTemplate x:Key="{dxgt:LWKey CardView.HeaderTemplate}">
        <ContentPresenter
            Margin="3"
            VerticalAlignment="Center"
            Content="{Binding}"
            TextBlock.FontSize="14"
            UseLayoutRounding="True" />
    </DataTemplate>

    <ControlTemplate x:Key="{dxgt:LWKey CardView.TopPanel}">
        <Grid x:Name="TopGrid">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <dx:DXBorder
                x:Name="headerContent"
                Grid.Row="0"
                Grid.ColumnSpan="3"
                Background="{DynamicResource {dxgt:LWKey CardView.GroupPanelBackground}}">
                <ContentControl
                    Margin="{DynamicResource {dxgt:LWKey TableView.HeaderMargin}}"
                    HorizontalAlignment="{Binding Path=(dxg:GridControl.CurrentView).HeaderHorizontalAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                    Content="{Binding Path=(dxg:GridControl.CurrentView).Header, RelativeSource={RelativeSource TemplatedParent}}"
                    ContentTemplate="{DynamicResource {dxgt:LWKey CardView.HeaderTemplate}}" />
                <dx:DXBorder.Visibility>
                    <Binding Path="(dxg:GridControl.CurrentView).Header" RelativeSource="{RelativeSource TemplatedParent}">
                        <Binding.Converter>
                            <dx:ObjectToVisibilityConverter HandleList="False" />
                        </Binding.Converter>
                    </Binding>
                </dx:DXBorder.Visibility>
            </dx:DXBorder>

            <dx:DXBorder
                x:Name="borderSearchPanel"
                Grid.Row="1"
                Grid.Column="1"
                Grid.ColumnSpan="3"
                Background="{DynamicResource {dxgt:LWKey CardView.GroupPanelBackground}}">
                <Grid ClipToBounds="True">
                    <ContentControl
                        x:Name="part_SearchControlContainer"
                        Margin="0,0,-4,0"
                        dxgr:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                        Style="{DynamicResource {dxgt:LWKey CardTemplates.SearchPanelContentTemplate}}"
                        Visibility="{Binding Path=(dxg:GridControl.CurrentView).ActualShowSearchPanel, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <dxgr:GridViewHitInfoBase.HitTestAcceptor>
                            <dxght:GridSearchPanelHitTestAcceptor />
                        </dxgr:GridViewHitInfoBase.HitTestAcceptor>
                    </ContentControl>

                    <Button
                        x:Name="searchPanelShowButton"
                        Grid.Row="2"
                        Grid.Column="2"
                        Margin="{DynamicResource {dxgt:LWKey CardView.HeadersButtonMargin}}"
                        VerticalAlignment="Top"
                        Command="{Binding Path=(dxg:GridControl.CurrentView).Commands.ShowSearchPanel, RelativeSource={RelativeSource TemplatedParent}}"
                        CommandParameter="True"
                        Style="{DynamicResource {dxt:LWKey SearchControl.ShowButtonStyle}}">
                        <Button.Content>
                            <Path
                                Width="14"
                                Height="14"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="F1 M 4,1.90735e-006C 6.20914,1.90735e-006 8,1.79086 8,4C 8,4.84917 7.73539,5.63653 7.28414,6.28414L 10,9L 9,10L 6.28414,7.28414C 5.63653,7.7354 4.84917,8 4,8C 1.79086,8 0,6.20914 0,4C 0,1.79086 1.79086,1.90735e-006 4,1.90735e-006 Z M 4,1C 2.34315,1 1,2.34315 1,4C 1,5.65686 2.34315,7 4,7C 5.65685,7 7,5.65686 7,4C 7,2.34315 5.65685,1 4,1 Z "
                                Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}"
                                Stretch="Fill" />
                        </Button.Content>
                        <Button.Visibility>
                            <MultiBinding>
                                <MultiBinding.Bindings>
                                    <Binding Path="(dxgcore:DataControlBase.CurrentView).ActualShowSearchPanel" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(dxgcore:DataControlBase.CurrentView).ActualSearchPanelPosition" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(dxgcore:DataControlBase.CurrentView).ShowSearchPanelMode" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding.Bindings>
                                <MultiBinding.Converter>
                                    <dxgr:SearchPanelShowButtonVisibilityConverter />
                                </MultiBinding.Converter>
                            </MultiBinding>
                        </Button.Visibility>
                        <dxgr:GridViewHitInfoBase.HitTestAcceptor>
                            <dxght:SearchPanelShowButtonHitTestAcceptor />
                        </dxgr:GridViewHitInfoBase.HitTestAcceptor>
                    </Button>
                </Grid>
            </dx:DXBorder>
            <dx:DXBorder
                x:Name="PART_GroupPanel"
                Grid.Row="2"
                Grid.ColumnSpan="3"
                dxgr:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                Background="{DynamicResource {dxgt:LWKey CardView.GroupPanelBackground}}">
                <dxgr:GridControl.CurrentViewChangedListener>
                    <dxgr:GroupPanelInitializer />
                </dxgr:GridControl.CurrentViewChangedListener>
                <dxgr:GridViewHitInfoBase.HitTestAcceptor>
                    <dxght:GroupPanelTableViewHitTestAcceptor />
                </dxgr:GridViewHitInfoBase.HitTestAcceptor>
                <Grid x:Name="grid" Margin="8">
                    <TextBlock x:Name="GroupPanelDragText" Style="{DynamicResource {dxgt:LWKey TableView.GroupPanelDragTextStyle}}">
                        <TextBlock.Text>
                            <Binding
                                Converter="{StaticResource LocalizationStringValueConverter}"
                                ConverterParameter="GridGroupPanelText"
                                Path="(dxg:GridControl.CurrentView).LocalizationDescriptor"
                                RelativeSource="{RelativeSource TemplatedParent}" />
                        </TextBlock.Text>
                    </TextBlock>
                    <dxgr:ColumnItemsControl
                        x:Name="groupPanelItemsControl"
                        dxb:BarManager.DXContextMenu="{Binding Path=(dxg:GridControl.ActiveView).GridMenu, RelativeSource={RelativeSource TemplatedParent}}"
                        dxgr:GridPopupMenu.GridMenuType="GroupPanel"
                        ItemsSource="{Binding Path=(dxg:GridControl.CurrentView).GroupedColumns, RelativeSource={RelativeSource TemplatedParent}}"
                        Style="{DynamicResource {dxgt:LWKey GroupRow.GroupItemsControlStyle}}" />
                </Grid>
            </dx:DXBorder>
        </Grid>

        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.CurrentView).HeaderPosition, RelativeSource={RelativeSource Self}}" Value="SearchPanel">
                <Setter TargetName="borderSearchPanel" Property="Grid.Row" Value="0" />
                <Setter TargetName="borderSearchPanel" Property="Grid.Column" Value="1" />
                <Setter TargetName="borderSearchPanel" Property="Grid.ColumnSpan" Value="2" />
                <Setter TargetName="headerContent" Property="Grid.ColumnSpan" Value="1" />
                <Setter TargetName="headerContent" Property="Grid.Column" Value="0" />
                <Setter TargetName="headerContent" Property="Grid.Row" Value="0" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.CurrentView).ShowGroupPanel, RelativeSource={RelativeSource TemplatedParent}}" Value="false">
                <Setter TargetName="PART_GroupPanel" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.CurrentView).DataControl.IsGrouped, RelativeSource={RelativeSource TemplatedParent}}" Value="true">
                <Setter TargetName="GroupPanelDragText" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="False">
                <Setter TargetName="part_SearchControlContainer" Property="MaxWidth" Value="{DynamicResource {dxgt:LWKey TableView.SearchPanelWidth}}" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="False">
                <Setter TargetName="part_SearchControlContainer" Property="MaxWidth" Value="{DynamicResource {dxgt:LWKey TableView.SearchPanelWidth}}" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                <Setter TargetName="grid" Property="Margin" Value="8,10,8,10" />
                <Setter TargetName="GroupPanelDragText" Property="Margin" Value="0,10,0,14" />
                <Setter TargetName="part_SearchControlContainer" Property="MaxWidth" Value="{DynamicResource {dxgt:LWKey TableView.SearchPanelWidthTouch}}" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter TargetName="grid" Property="Margin" Value="14" />
                <Setter TargetName="part_SearchControlContainer" Property="MaxWidth" Value="{DynamicResource {dxgt:LWKey TableView.SearchPanelWidthTouch}}" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.CurrentView).ActualSearchPanelPosition, RelativeSource={RelativeSource Self}}" Value="OverGroupPanel">
                <Setter TargetName="part_SearchControlContainer" Property="Width" Value="NaN" />
                <Setter TargetName="part_SearchControlContainer" Property="MaxWidth" Value="Infinity" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxgcore:DataControlBase.CurrentView).ActualSearchPanelPosition, RelativeSource={RelativeSource TemplatedParent}}" Value="Default">
                <Setter TargetName="headerContent" Property="Grid.ColumnSpan" Value="3" />
                <Setter TargetName="headerContent" Property="Grid.Column" Value="0" />
                <Setter TargetName="headerContent" Property="Grid.Row" Value="0" />
                <Setter TargetName="borderSearchPanel" Property="Grid.Row" Value="2" />
                <Setter TargetName="borderSearchPanel" Property="Grid.Column" Value="2" />
                <Setter TargetName="borderSearchPanel" Property="Grid.ColumnSpan" Value="1" />
                <Setter TargetName="PART_GroupPanel" Property="Grid.ColumnSpan" Value="2" />
                <Setter TargetName="PART_GroupPanel" Property="Grid.Column" Value="0" />
                <Setter TargetName="PART_GroupPanel" Property="Grid.Row" Value="2" />
                <Setter TargetName="borderSearchPanel" Property="Background" Value="{DynamicResource {dxgt:LWKey CardView.GroupPanelBackground}}" />
                <Setter TargetName="part_SearchControlContainer" Property="Width">
                    <Setter.Value>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding ElementName="TopGrid" Path="ActualWidth" />
                                <Binding Path="MaxWidth" RelativeSource="{RelativeSource Self}" />
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxgr:SearchPanelWidthConverter Delta="10" />
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.CurrentView).HeaderPosition, RelativeSource={RelativeSource Self}}" Value="CompactPanel">
                <Setter TargetName="headerContent" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.CurrentView).DataControl.(dxcn:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="headerContent" Property="Background" Value="{Binding Path=(dxg:GridControl.CurrentView).DataControl.(dxcn:AppearanceOptions.Background), RelativeSource={RelativeSource Self}}" />
                <Setter TargetName="borderSearchPanel" Property="Background" Value="{Binding Path=(dxg:GridControl.CurrentView).DataControl.(dxcn:AppearanceOptions.Background), RelativeSource={RelativeSource Self}}" />
                <Setter TargetName="PART_GroupPanel" Property="Background" Value="{Binding Path=(dxg:GridControl.CurrentView).DataControl.(dxcn:AppearanceOptions.Background), RelativeSource={RelativeSource Self}}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\CardTemplates.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\Rows.xaml-->

    <ControlTemplate x:Key="{dxgt:LWKey TableView.FixedNoneHeadersPanelTemplate}">
        <dx:StackVisibleIndexPanel
            Name="headersPanel"
            dxgr:GridColumn.HeaderPresenterType="Headers"
            ArrangeAccordingToVisibleIndex="True"
            Orientation="Horizontal">
            <dx:DragManager.DropTargetFactory>
                <dxgcore:FixedNoneColumnHeaderDropTargetFactory />
            </dx:DragManager.DropTargetFactory>
        </dx:StackVisibleIndexPanel>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:LWKey TableView.FixedNoneDropPanelTemplate}">
        <dxgr:OrdinaryStackVisibleIndexPanel ArrangeAccordingToVisibleIndex="True" Orientation="Horizontal" />
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:LWKey TableView.FixedLeftHeadersPanelTemplate}">
        <dx:StackVisibleIndexPanel
            Name="fixedLeftHeadersPanel"
            dxgr:GridColumn.HeaderPresenterType="Headers"
            ArrangeAccordingToVisibleIndex="True"
            Orientation="Horizontal">
            <dx:DragManager.DropTargetFactory>
                <dxgcore:FixedLeftColumnHeaderDropTargetFactory />
            </dx:DragManager.DropTargetFactory>
        </dx:StackVisibleIndexPanel>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:LWKey TableView.FixedLeftNoneDropPanelTemplate}">
        <dx:StackVisibleIndexPanel ArrangeAccordingToVisibleIndex="True" Orientation="Horizontal" />
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:LWKey TableView.FixedRightHeadersPanelTemplate}">
        <dx:StackVisibleIndexPanel
            Name="fixedRightHeadersPanel"
            dxgr:GridColumn.HeaderPresenterType="Headers"
            ArrangeAccordingToVisibleIndex="True"
            Orientation="Horizontal">
            <dx:DragManager.DropTargetFactory>
                <dxgcore:FixedRightColumnHeaderDropTargetFactory />
            </dx:DragManager.DropTargetFactory>
        </dx:StackVisibleIndexPanel>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:LWKey TableView.FixedRightNoneDropPanelTemplate}">
        <dx:StackVisibleIndexPanel ArrangeAccordingToVisibleIndex="True" Orientation="Horizontal" />
    </ControlTemplate>
    <dxgcore:DefaultControlTemplate x:Key="{dxgt:LWKey GridRow.RowDecorationTemplate}" TargetType="{x:Type ContentControl}">

        <ContentPresenter />
    </dxgcore:DefaultControlTemplate>

    <DataTemplate x:Key="{dxgt:LWKey GridRow.RowToolTipTemplate}">
        <dx:DXDockPanel LastChildFill="True">
            <dxe:ErrorControl Content="{Binding}" />
            <ContentPresenter VerticalAlignment="Center" Content="{Binding Path=ErrorContent}" />
        </dx:DXDockPanel>
    </DataTemplate>
    <ControlTemplate x:Key="{dxgt:LWKey GridRow.RowControlTemplate}">
        <ContentControl Template="{Binding Path=View.RowDecorationTemplate}">
            <dxgr:GridRowContent x:Name="PART_DataRow" MinHeight="{Binding Path=View.RowMinHeight}" Style="{Binding Path=View.RowStyle}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <dx:DXDockPanel>
                        <dxgr:RowIndicatorControl
                            Width="{Binding Path=View.ActualIndicatorWidth}"
                            dxb:BarManager.DXContextMenu="{Binding Path=View.DataControlMenu}"
                            dxgr:GridPopupMenu.GridMenuType="RowCell"
                            Template="{DynamicResource {dxgt:LWKey RowIndicator.ItemTemplate}}"
                            Visibility="{Binding Path=View.ActualShowIndicator, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        <dxgr:DetailRowsIndentControl ItemsSource="{Binding Path=View.DataControl.OwnerDetailDescriptor.DetailViewIndents}" />
                        <ContentPresenter x:Name="PART_RowOffsetPresenter" />
                        <dxgr:GridDetailExpandButtonContainer dx:FrameworkElementHelper.IsVisible="{Binding View.ActualShowDetailButtons}" />
                        <Grid>
                            <dx:DataContentPresenter
                                x:Name="PART_DataRowContent"
                                Margin="0,0,0,1"
                                Content="{Binding}"
                                ContentTemplateSelector="{Binding Path=View.ActualDataRowTemplateSelector}">
                                <ToolTipService.ToolTip>
                                    <Binding Path="(dxgcore:RowData.CurrentRowData).(dxe:BaseEdit.HasValidationError)" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.Converter>
                                            <dx:BoolToObjectConverter FalseValue="{x:Null}">
                                                <dx:BoolToObjectConverter.TrueValue>
                                                    <ToolTip Name="toolTip" Content="{Binding Path=(dxgcore:RowData.CurrentRowData).(dxe:BaseEdit.ValidationError), RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{DynamicResource {dxgt:LWKey GridRow.RowToolTipTemplate}}" />
                                                </dx:BoolToObjectConverter.TrueValue>
                                            </dx:BoolToObjectConverter>
                                        </Binding.Converter>
                                    </Binding>
                                </ToolTipService.ToolTip>
                            </dx:DataContentPresenter>
                            <dx:DataContentPresenter
                                x:Name="PART_CompactModeRowContent"
                                Margin="0,0,0,1"
                                Content="{Binding}"
                                ContentTemplate="{Binding Path=View.DataRowCompactTemplate}"
                                Visibility="Collapsed" />
                        </Grid>
                    </dx:DXDockPanel>
                    <dxgr:DetailRowsIndentControl Grid.Column="1" IsLeft="False" ItemsSource="{Binding Path=View.DataControl.OwnerDetailDescriptor.DetailViewIndents}" />
                </Grid>
            </dxgr:GridRowContent>
        </ContentControl>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=View.ShowHorizontalLines}" Value="false">
                <Setter TargetName="PART_DataRowContent" Property="dx:DataContentPresenter.Margin" Value="0,0,0,0" />
                <Setter TargetName="PART_CompactModeRowContent" Property="dx:DataContentPresenter.Margin" Value="0,0,0,0" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=ShowBottomLine}" Value="true">
                <Setter TargetName="PART_DataRowContent" Property="dx:DataContentPresenter.Margin" Value="0,0,0,1" />
                <Setter TargetName="PART_CompactModeRowContent" Property="dx:DataContentPresenter.Margin" Value="0,0,0,1" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=View.IsCompactMode}" Value="True">
                <Setter TargetName="PART_DataRowContent" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_CompactModeRowContent" Property="Visibility" Value="Visible" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <dxgr:DefaultStyle x:Key="{dxgt:LWKey GridRow.RowStyle}" TargetType="{x:Type dxg:GridRowContent}">
        <Setter Property="dxg:GridRowContent.Background" Value="{DynamicResource {dxgt:LWKey GridRow.BorderNoneBrush}}" />
        <Setter Property="dxg:GridRowContent.Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.TextUnfocusedBrush}}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=AlternateRow}" Value="True">
                <Setter Property="dxg:GridRowContent.Background" Value="{Binding Path=View.ActualAlternateRowBackground}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=SelectionState}" Value="Selected">
                <Setter Property="dxg:GridRowContent.Background" Value="{DynamicResource {dxgt:LWKey GridRow.BorderSelectedBrush}}" />
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.TextRowSelectedBrush}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=SelectionState}" Value="Focused">
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.TextFocusedBrush}}" />
                <Setter Property="dxg:GridRowContent.Background" Value="{DynamicResource {dxgt:LWKey GridRow.BorderFocusedBrush}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=SelectionState}" Value="Highlighted">
                <Setter Property="dxg:GridRowContent.Background" Value="{DynamicResource {dxgt:LWKey GridRow.HoverBackground}}" />
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.HoverForeground}}" />
            </DataTrigger>

        </Style.Triggers>
    </dxgr:DefaultStyle>
    <dxgcore:DefaultDataTemplate x:Key="{dxgt:LWKey GridRow.DataRowTemplate}">

        <dxgr:BandedViewContentSelector HorizontalContentAlignment="Stretch" BandsLayout="{Binding Path=View.DataControl.BandsLayout}">
            <dxgr:BandedViewContentSelector.TableViewContent>
                <ControlTemplate>
                    <dxgr:GridScrollablePart
                        x:Name="ScrollablePart"
                        dxgr:GridControl.CurrentView="{Binding Path=View}"
                        FixedColumnsDelimiterTemplate="{DynamicResource {dxgt:LWKey GridRow.FixedColumnsDelimiterTemplate}}"
                        FixedLeftVisibleColumns="{Binding Path=View.FixedLeftVisibleColumns}"
                        FixedLineWidth="{Binding Path=View.FixedLineWidth}"
                        FixedNoneContentWidth="{Binding Path=FixedNoneContentWidth}"
                        FixedRightVisibleColumns="{Binding Path=View.FixedRightVisibleColumns}"
                        ScrollingMargin="{Binding Path=View.ScrollingVirtualizationMargin}">
                        <dxgr:GridScrollablePart.FitContent>
                            <dxgr:FitRowContentPresenter
                                VerticalContentAlignment="Stretch"
                                dxb:BarManager.DXContextMenu="{Binding Path=View.DataControlMenu}"
                                dxgr:GridPopupMenu.GridMenuType="RowCell"
                                Content="{Binding}" />
                        </dxgr:GridScrollablePart.FitContent>
                        <dxgr:GridScrollablePart.FixedLeftContent>
                            <dxgr:CellItemsControl dxgr:GridControl.CurrentView="{Binding View}" ItemsPanel="{DynamicResource {dxgt:LWKey TableView.FixedLeftNoneDropPanelTemplate}}" ItemsSource="{Binding Path=FixedLeftCellData}" />
                        </dxgr:GridScrollablePart.FixedLeftContent>
                        <dxgr:GridScrollablePart.FixedRightContent>
                            <dxgr:CellItemsControl dxgr:GridControl.CurrentView="{Binding View}" ItemsPanel="{DynamicResource {dxgt:LWKey TableView.FixedRightNoneDropPanelTemplate}}" ItemsSource="{Binding Path=FixedRightCellData}" />
                        </dxgr:GridScrollablePart.FixedRightContent>
                        <dxgr:GridScrollablePart.FixedNoneContent>
                            <dxgr:CellItemsControl dxgr:GridControl.CurrentView="{Binding View}" ItemsPanel="{DynamicResource {dxgt:LWKey TableView.FixedNoneDropPanelTemplate}}" ItemsSource="{Binding Path=FixedNoneCellData}" />
                        </dxgr:GridScrollablePart.FixedNoneContent>
                    </dxgr:GridScrollablePart>
                </ControlTemplate>
            </dxgr:BandedViewContentSelector.TableViewContent>
            <dxgr:BandedViewContentSelector.BandedViewContent>
                <ControlTemplate>
                    <dxgr:GridScrollablePart
                        x:Name="ScrollablePart"
                        dxgr:GridControl.CurrentView="{Binding Path=View}"
                        FixedColumnsDelimiterTemplate="{DynamicResource {dxgt:LWKey GridRow.FixedColumnsDelimiterTemplate}}"
                        FixedLeftVisibleColumns="{Binding Path=View.DataControl.BandsLayout.FixedLeftVisibleBands}"
                        FixedLineWidth="{Binding Path=View.FixedLineWidth}"
                        FixedNoneContentWidth="{Binding Path=FixedNoneContentWidth}"
                        FixedRightVisibleColumns="{Binding Path=View.DataControl.BandsLayout.FixedRightVisibleBands}"
                        ScrollingMargin="{Binding Path=View.ScrollingVirtualizationMargin}">
                        <dxgr:GridScrollablePart.FitContent>
                            <dxgr:FitRowContentPresenter
                                VerticalContentAlignment="Stretch"
                                dxb:BarManager.DXContextMenu="{Binding Path=View.DataControlMenu}"
                                dxgr:GridPopupMenu.GridMenuType="RowCell"
                                Content="{Binding}" />
                        </dxgr:GridScrollablePart.FitContent>
                        <dxgr:GridScrollablePart.FixedLeftContent>
                            <dxgr:CellItemsControl dxgr:GridControl.CurrentView="{Binding View}" ItemsSource="{Binding Path=FixedLeftCellData}">
                                <dxgr:CellItemsControl.ItemsPanel>
                                    <ControlTemplate>
                                        <dxgr:BandsCellsPanel Bands="{Binding Path=View.DataControl.BandsLayout.FixedLeftVisibleBands}" />
                                    </ControlTemplate>
                                </dxgr:CellItemsControl.ItemsPanel>
                            </dxgr:CellItemsControl>
                        </dxgr:GridScrollablePart.FixedLeftContent>
                        <dxgr:GridScrollablePart.FixedRightContent>
                            <dxgr:CellItemsControl dxgr:GridControl.CurrentView="{Binding View}" ItemsSource="{Binding Path=FixedRightCellData}">
                                <dxgr:CellItemsControl.ItemsPanel>
                                    <ControlTemplate>
                                        <dxgr:BandsCellsPanel Bands="{Binding Path=View.DataControl.BandsLayout.FixedRightVisibleBands}" />
                                    </ControlTemplate>
                                </dxgr:CellItemsControl.ItemsPanel>
                            </dxgr:CellItemsControl>
                        </dxgr:GridScrollablePart.FixedRightContent>
                        <dxgr:GridScrollablePart.FixedNoneContent>
                            <dxgr:CellItemsControl dxgr:GridControl.CurrentView="{Binding View}" ItemsSource="{Binding Path=FixedNoneCellData}">
                                <dxgr:CellItemsControl.ItemsPanel>
                                    <ControlTemplate>
                                        <dxgr:BandsCellsPanel Bands="{Binding Path=View.DataControl.BandsLayout.FixedNoneVisibleBands}" FixedNoneContentWidth="{Binding Path=FixedNoneContentWidth}" />
                                    </ControlTemplate>
                                </dxgr:CellItemsControl.ItemsPanel>
                            </dxgr:CellItemsControl>
                        </dxgr:GridScrollablePart.FixedNoneContent>
                    </dxgr:GridScrollablePart>
                </ControlTemplate>
            </dxgr:BandedViewContentSelector.BandedViewContent>
        </dxgr:BandedViewContentSelector>
    </dxgcore:DefaultDataTemplate>
    <ControlTemplate x:Key="{dxgt:LWKey GroupRow.GroupRowControlTemplate}">
        <Grid x:Name="group" Visibility="{Binding IsRowVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <dxgr:RowIndicatorControl
                Grid.Column="0"
                Width="{Binding Path=View.ActualIndicatorWidth}"
                Template="{DynamicResource {dxgt:LWKey RowIndicator.GroupPresenterTemplate}}"
                Visibility="{Binding Path=View.ActualShowIndicator, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <dxgr:DetailRowsIndentControl Grid.Column="1" ItemsSource="{Binding Path=View.DataControl.OwnerDetailDescriptor.DetailViewIndents}" />
            <dxgr:GroupRowOffsetPresenter Grid.Column="2" />
            <ContentControl Grid.Column="3" Template="{DynamicResource {dxgt:LWKey GroupRow.GroupRowControlContainerTemplate}}">
                <ContentControl Template="{DynamicResource {dxgt:LWKey GroupRow.GroupRowControlHeaderContentTemplate}}">
                    <dx:DoubleClicker HorizontalContentAlignment="Stretch" Command="{Binding View.Commands.ChangeGroupExpanded}" CommandParameter="{Binding RowHandle.Value}">
                        <dxgr:GroupGridRowPresenter
                            x:Name="PART_HeaderContentPresenter"
                            Content="{Binding}"
                            ContentTemplateSelector="{Binding Path=View.ActualGroupRowTemplateSelector}"
                            Style="{DynamicResource {dxgt:LWKey GroupRow.GroupRowPresenterStyle}}" />
                    </dx:DoubleClicker>
                </ContentControl>
            </ContentControl>
            <dxgr:DetailRowsIndentControl Grid.Column="4" IsLeft="False" ItemsSource="{Binding Path=View.DataControl.OwnerDetailDescriptor.DetailViewIndents}" />
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:LWKey GroupRow.GroupFooterRowControlTemplate}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <dxgr:RowIndicatorControl
                Grid.Column="0"
                Width="{Binding Path=View.ActualIndicatorWidth}"
                Template="{DynamicResource {dxgt:LWKey RowIndicator.AdditionalTemplate}}"
                Visibility="{Binding Path=View.ActualShowIndicator, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <dxgr:DetailRowsIndentControl Grid.Column="1" ItemsSource="{Binding Path=View.DataControl.OwnerDetailDescriptor.DetailViewIndents}" />
            <dxgr:GroupRowOffsetPresenter Grid.Column="2" Visibility="{Binding Path=IsFooterMarginControlVisible, Converter={StaticResource BooleanToVisibilityConverterInverted}}" />
            <dxgr:FooterMarginControl
                Grid.Column="3"
                NextRowLevel="{Binding Path=NextRowLevel}"
                ScrollingMargin="{Binding View.ScrollingHeaderVirtualizationMargin}"
                Visibility="{Binding Path=IsFooterMarginControlVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <dxgr:FooterContentPresenter
                x:Name="PART_GroupFooterContentPresenter"
                Grid.Column="4"
                Content="{Binding}"
                ContentTemplateSelector="{Binding Path=View.ActualGroupFooterRowTemplateSelector}"
                Style="{Binding Path=View.FooterRowStyle}" />
            <dxgr:DetailRowsIndentControl Grid.Column="5" IsLeft="False" ItemsSource="{Binding Path=View.DataControl.OwnerDetailDescriptor.DetailViewIndents}" />
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:LWKey CardView.GroupRowControlTemplate}">
        <ContentControl Template="{DynamicResource {dxgt:LWKey CardView.GroupRowControlContainerTemplate}}">
            <ContentControl x:Name="headerContainer" DockPanel.Dock="Top" Template="{DynamicResource {dxgt:LWKey CardView.GroupRowControlHeaderContentTemplate}}">
                <dx:DoubleClicker Command="{x:Static dxg:GridCommands.ChangeGroupExpanded}" CommandParameter="{Binding RowHandle.Value}">
                    <dxgr:GroupGridRowPresenter x:Name="PART_HeaderContentPresenter" Content="{Binding}" ContentTemplateSelector="{Binding Path=View.ActualGroupRowTemplateSelector}" />
                </dx:DoubleClicker>
            </ContentControl>
        </ContentControl>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.ActiveView).Orientation, RelativeSource={RelativeSource Self}}" Value="Horizontal">
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter TargetName="headerContainer" Property="DockPanel.Dock" Value="Left" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <ControlTemplate x:Key="{dxgt:LWKey GridControl.GroupPanelCaptionTemplate}" TargetType="dxg:GroupPanelCaptionControl">
        <ContentPresenter />
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:LWKey GridControl.DetailHeaderControlTemplate}" TargetType="dxg:DetailHeaderControl">
        <dxgr:DetailRowsContentControl DetailDescriptor="{TemplateBinding DetailDescriptor}" ShowLastDetailMargin="{TemplateBinding ShowLastDetailMargin}" View="{Binding Path=MasterRowData.View, RelativeSource={RelativeSource TemplatedParent}}">
            <dxgr:DetailDescriptorContentBorder ShowBottomLine="{TemplateBinding ShowBottomLine}">
                <dxgcore:DetailRowContentPresenter Content="{Binding DetailDescriptor.HeaderContent, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{Binding DetailDescriptor.HeaderContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" MasterRowData="{TemplateBinding MasterRowData}" />
            </dxgr:DetailDescriptorContentBorder>
        </dxgr:DetailRowsContentControl>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\Rows.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\LightweightStyles.xaml-->

    <Style x:Key="{dxgt:LWKey GridRow.LightweightCellStyle}" TargetType="dxg:LightweightCellEditor">
        <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:LWKey GridRow.GridDataRowDelimiterBrush}}" />
        <Setter Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxt:LWKey InplaceBaseEdit.ValidationErrorSvgPalette}}" />
        <Setter Property="ConditionalFormattingSvgPalette" Value="{DynamicResource {dxt:LWKey InplaceBaseEdit.ConditionalFormattingSvgPalette}}" />
        <Style.Triggers>
            <Trigger Property="SelectionState" Value="CellMerge">
                <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey GridRow.CellMergeNoneBrush}}" />
            </Trigger>
            <!-- <DataTrigger Binding="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxcn:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True"> -->
            <!--     <Setter Property="Background" Value="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxcn:AppearanceOptions.Background), RelativeSource={RelativeSource Self}}"/> -->
            <!-- </DataTrigger> -->
            <!-- <DataTrigger Binding="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxcn:GridAppearanceOptions.HasDataAreaBackground), RelativeSource={RelativeSource Self}}" Value="True"> -->
            <!--     <Setter Property="Background" Value="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxcn:GridAppearanceOptions.DataAreaBackground), RelativeSource={RelativeSource Self}}"/> -->
            <!-- </DataTrigger> -->
            <Trigger Property="SelectionState" Value="Focused">
                <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey GridRow.CellBorderFocusedBrush}}" />
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.CellTextFocusedBrush}}" />
            </Trigger>
            <Trigger Property="SelectionState" Value="Selected">
                <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey GridRow.BorderSelectedBrush}}" />
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.TextRowSelectedBrush}}" />
            </Trigger>
            <Trigger Property="SelectionState" Value="FocusedAndSelected">
                <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey GridRow.BorderFocusedBrush}}" />
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.TextFocusedBrush}}" />
            </Trigger>
            <Trigger Property="RowSelectionState" Value="Focused">
                <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:LWKey GridRow.CellBorderFocusedBorderBrush}}" />
            </Trigger>
            <Trigger Property="HasCustomAppearance" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:LWKey GridRow.GridDataRowDelimiterBrush}}" />
            </Trigger>
            <Trigger Property="SelectionState" Value="Highlighted">
                <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey GridRow.HoverBackground}}" />
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.HoverForeground}}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="EditorOpacity" Value="0.35" />
            </Trigger>
            <Trigger Property="IsTreeViewCell" Value="True">
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:LWKey GridRow.GridDataRowDelimiterBrush}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RowControlBaseStyle" TargetType="dxg:RowControl">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <!--<Setter Property="CellStyle" Value="{StaticResource cellStyle}" />-->
        <Setter Property="CellForegroundBrushes" Value="{DynamicResource {dxgt:LWKey GridRow.CellForegroundBrushes}}" />
        <Setter Property="CellBackgroundBrushes" Value="{DynamicResource {dxgt:LWKey GridRow.CellBackgroundBrushes}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:LWKey GridRow.GridDataRowDelimiterBrush}}" />
        <Setter Property="RowFitBorderBrush" Value="{DynamicResource {dxgt:LWKey GridRow.GridDataRowDelimiterBrush}}" />
        <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey GridRow.BorderNoneBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.TextUnfocusedBrush}}" />
        <Setter Property="dxg:ToolTipHelper.ShowTooltip" Value="{Binding Path=(dxe:BaseEdit.HasValidationError)}" />
        <Setter Property="dxg:ToolTipHelper.Content" Value="{Binding Path=(dxe:BaseEdit.ValidationError)}" />
        <Setter Property="dxg:ToolTipHelper.ContentTemplate" Value="{DynamicResource {dxgt:LWKey GridRow.RowToolTipTemplate}}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxcn:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Background" Value="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxcn:AppearanceOptions.Background), RelativeSource={RelativeSource Self}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxcn:GridAppearanceOptions.HasDataAreaBackground), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Background" Value="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxcn:GridAppearanceOptions.DataAreaBackground), RelativeSource={RelativeSource Self}}" />
            </DataTrigger>
            <Trigger Property="IsAlternateRow" Value="True">
                <Setter Property="Background" Value="{Binding Path=View.ActualAlternateRowBackground}" />
            </Trigger>
            <Trigger Property="dxe:BaseEdit.HasValidationError" Value="True">
                <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey GridRow.ValidationErrorBrush}}" />
            </Trigger>
            <Trigger Property="SelectionState" Value="Selected">
                <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey GridRow.BorderSelectedBrush}}" />
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.TextRowSelectedBrush}}" />
            </Trigger>
            <Trigger Property="SelectionState" Value="Highlighted">
                <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey GridRow.HoverBackground}}" />
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.HoverForeground}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="{dxgt:LWKey GridRow.RowNewItemTemplate}" TargetType="dxg:RowNewItemControl">
        <Grid x:Name="PART_RootGrid" Background="{DynamicResource {dxgt:LWKey GridRow.BorderNoneBrush}}">
            <dx:DXBorder x:Name="Background" Background="{TemplateBinding Background}" />
            <dx:DXBorder
                x:Name="BottomLine"
                VerticalAlignment="Bottom"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="0,0,0,1" />
            <Grid x:Name="PART_LayoutPanel" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ShowHorizontalLine" Value="False">
                <Setter TargetName="BottomLine" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="ShowBottomLine" Value="True">
                <Setter TargetName="BottomLine" Property="Visibility" Value="Visible" />
                <Setter TargetName="BottomLine" Property="BorderBrush" Value="{DynamicResource {dxgt:LWKey GridRow.BorderBrush}}" />
            </Trigger>
            <Trigger Property="FadeSelection" Value="True">
                <Setter TargetName="Background" Property="Background" Value="{DynamicResource {dxgt:LWKey GridRow.NewItemRowFadeBorderFocusedBrush}}" />
            </Trigger>
            <Trigger Property="ShowRowBreak" Value="True">
                <Setter TargetName="BottomLine" Property="BorderThickness" Value="0,0,0,2" />
                <Setter TargetName="BottomLine" Property="BorderBrush" Value="{DynamicResource {dxgt:LWKey GridRow.RowBreakBrush}}" />
            </Trigger>
            <Trigger Property="FixedRowPosition" Value="Bottom">
                <Setter TargetName="BottomLine" Property="VerticalAlignment" Value="Top" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxcn:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Background" Value="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxcn:AppearanceOptions.Background), RelativeSource={RelativeSource Self}}" />
                <Setter TargetName="PART_RootGrid" Property="Background" Value="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxcn:AppearanceOptions.Background), RelativeSource={RelativeSource Self}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxcn:GridAppearanceOptions.HasDataAreaBackground), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Background" Value="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxcn:GridAppearanceOptions.DataAreaBackground), RelativeSource={RelativeSource Self}}" />
                <Setter TargetName="PART_RootGrid" Property="Background" Value="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxcn:GridAppearanceOptions.DataAreaBackground), RelativeSource={RelativeSource Self}}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="RowControlStyle" BasedOn="{StaticResource RowControlBaseStyle}" TargetType="{x:Type dxg:RowControl}">
        <Style.Triggers>
            <Trigger Property="SelectionState" Value="Focused">
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.TextFocusedBrush}}" />
                <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey GridRow.BorderFocusedBrush}}" />
                <Setter Property="RowFitBorderBrush" Value="{DynamicResource {dxgt:LWKey GridRow.CellBorderFocusedBorderBrush}}" />
            </Trigger>
            <Trigger Property="ShowVerticalLines" Value="false">
                <Setter Property="RowFitBorderBrush" Value="{x:Null}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RowIndicatorStyleBase" TargetType="dxg:RowIndicator">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{DynamicResource {dxgt:LWKey RowIndicator.ForegroundBrush}}" />
        <Setter Property="FocusedContentTemplate" Value="{DynamicResource {dxgt:LWKey RowIndicator.FocusedIconTemplate}}" />
        <Setter Property="ChangedContentTemplate" Value="{DynamicResource {dxgt:LWKey RowIndicator.ChangedIconTemplate}}" />
        <Setter Property="NewItemRowContentTemplate" Value="{DynamicResource {dxgt:LWKey RowIndicator.NewItemRowIconTemplate}}" />
        <Setter Property="EditingContentTemplate" Value="{DynamicResource {dxgt:LWKey RowIndicator.EditingIconTemplate}}" />
        <Setter Property="ErrorContentTemplate" Value="{DynamicResource {dxgt:LWKey RowIndicator.ErrorIconTemplate}}" />
        <Setter Property="FocusedErrorContentTemplate" Value="{DynamicResource {dxgt:LWKey RowIndicator.FocusedErrorIconTemplate}}" />
        <Setter Property="AutoFilterRowContentTemplate" Value="{DynamicResource {dxgt:LWKey RowIndicator.AutoFilterRowIconTemplate}}" />
    </Style>
    <ControlTemplate x:Key="{dxgt:LWKey GridRow.UpdateRowButtonsControlTemplate}" TargetType="dxg:UpdateRowButtonsControl">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <dx:DXBorder
                x:Name="Border"
                Margin="0,-1,0,0"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="0,1,0,0" />
            <dx:DXBorder Background="{DynamicResource {dxgt:LWKey GridRow.UpdateRowButtonsControlBackground}}">
                <dx:DataContentPresenter x:Name="Content" Grid.Row="1" Margin="12" />
            </dx:DXBorder>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=View.ShowHorizontalLines}" Value="False">
                <Setter TargetName="Border" Property="BorderThickness" Value="0" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=ActualHeight, ElementName=Content}" Value="0">
                <Setter TargetName="Border" Property="BorderThickness" Value="0" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:LWKey GridControl.ContentWaitIndicatorTemplate}" TargetType="{x:Type dx:WaitIndicator}">
        <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
            <ContentPresenter x:Name="content" Content="{TemplateBinding Content}" />
            <Grid
                x:Name="root"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Visibility="Collapsed">
                <ProgressBar
                    x:Name="progressBar"
                    Width="16"
                    Height="16"
                    MinWidth="4"
                    MinHeight="4"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    BorderBrush="{x:Null}"
                    Foreground="{x:Null}"
                    IsEnabled="True"
                    IsIndeterminate="True"
                    Template="{DynamicResource {dxgt:LWKey GridControl.ButtonWaitIndicator}}" />
            </Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="Visibility">
                    <VisualState x:Name="Visible">
                        <Storyboard>
                            <DoubleAnimation BeginTime="0:0:0.1" Storyboard.TargetName="content" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.1" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="root" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.1">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="content" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.1">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Hidden</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="progressBar" Storyboard.TargetProperty="IsIndeterminate">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.1">
                                    <DiscreteObjectKeyFrame.Value>
                                        <sys:Boolean>True</sys:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Collapsed">
                        <Storyboard>
                            <DoubleAnimation BeginTime="0:0:0.1" Storyboard.TargetName="root" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.1" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="root" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="content" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="progressBar" Storyboard.TargetProperty="IsIndeterminate">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.1">
                                    <DiscreteObjectKeyFrame.Value>
                                        <sys:Boolean>False</sys:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <DataTemplate x:Key="{dxgt:LWKey GridRow.DefaultUpdateRowButtonsControlTemplate}">
        <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
            <Grid Margin="0,0,6,0">
                <Button Command="{Binding View.Commands.UpdateRow}" TabIndex="0">
                    <Button.Content>
                        <dx:WaitIndicator
                            x:Name="updateWaitIndicator"
                            DeferedVisibility="{Binding Path=IsWaitIndicatorVisible}"
                            IsHitTestVisible="False"
                            IsTabStop="False"
                            Template="{DynamicResource {dxgt:LWKey GridControl.ContentWaitIndicatorTemplate}}">
                            <dx:WaitIndicator.Content>
                                <Binding Path="IsNewItemRow">
                                    <Binding.Converter>
                                        <dxmvvm:BooleanToObjectConverter FalseValue="{dxg:GridControlStringId UpdateRowButtonsUpdate}" TrueValue="{dxg:GridControlStringId UpdateRowButtonsAdd}" />
                                    </Binding.Converter>
                                </Binding>
                            </dx:WaitIndicator.Content>
                        </dx:WaitIndicator>
                    </Button.Content>
                </Button>
                <dx:WaitIndicator
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    DeferedVisibility="{Binding Path=IsWaitIndicatorVisible}"
                    IsHitTestVisible="False"
                    IsTabStop="False"
                    Template="{DynamicResource {dxgt:LWKey GridControl.ContentWaitIndicatorTemplate}}" />
            </Grid>
            <Button Command="{Binding View.Commands.CancelRowChanges}" Content="{dxg:GridControlStringId UpdateRowButtonsCancel}" TabIndex="1" />
        </StackPanel>
    </DataTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\LightweightStyles.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\GridControl.xaml-->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\GridControl.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\GridView.xaml-->
    <Style x:Key="SearchPanelContentControlStyle" TargetType="ContentControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <ContentPresenter Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <dx:LWDouble x:Key="{dxgt:LWKey ScrollBar.GridScrollBarSize}" Value="17, Win11=16"/>
    <DataTemplate x:Key="{dxgt:LWKey TableView.HeadersTemplate}">
        <dx:MeasurePixelSnapper>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid>
                    <dxgr:IndicatorColumnHeader
                        x:Name="PART_Indicator"
                        Width="{Binding Path=(dxgr:GridControl.CurrentView).IndicatorHeaderWidth, RelativeSource={RelativeSource TemplatedParent}}"
                        dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                        ColumnPosition="Left"
                        HasTopElement="{Binding Path=(dxgr:GridControl.CurrentView).DataControl.BandsLayout.ShowBandsPanel, RelativeSource={RelativeSource TemplatedParent}}"
                        Visibility="{Binding Path=(dxgr:GridControl.CurrentView).ActualShowIndicator, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <dxgr:GridViewHitInfoBase.HitTestAcceptor>
                            <dxght:ColumnButtonTableViewHitTestAcceptor />
                        </dxgr:GridViewHitInfoBase.HitTestAcceptor>
                    </dxgr:IndicatorColumnHeader>
                    <ContentControl dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" Template="{DynamicResource {dxgt:LWKey GridColumnHeader.IndicatorColumnHeaderTemplate}}" Visibility="{Binding Path=(dxgr:GridControl.CurrentView).ActualShowIndicator, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                </Grid>
                <dxgr:ColumnHeaderPanel Grid.Column="1" dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" />
            </Grid>
        </dx:MeasurePixelSnapper>
    </DataTemplate>
    <DataTemplate x:Key="{dxgt:LWKey GridRow.AutoFilterRowItemTemplate}">
        <dxgr:FilterCellContentPresenter
            Width="{Binding Path=Column.ActualAdditionalRowDataWidth}"
            dxgr:GridColumn.NavigationIndex="{Binding Path=Column.(dxgr:GridColumn.ActualVisibleIndex)}"
            Column="{Binding Path=Column}"
            ColumnPosition="{Binding Path=Column.ColumnPosition}"
            HasLeftSibling="{Binding Path=Column.HasLeftSibling}"
            HasRightSibling="{Binding Path=Column.HasRightSibling}"
            HasTopElement="{Binding Path=Column.HasTopElement}"
            IsFocusedCell="{Binding Path=IsFocusedCell}"
            RowData="{Binding RowData}"
            SelectionState="{Binding Path=SelectionState}"
            ShowHorizontalLines="{Binding Path=View.ShowHorizontalLines}"
            ShowVerticalLines="{Binding Path=View.ShowVerticalLines}"
            Style="{Binding Path=Column.ActualAutoFilterRowCellStyle}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxgt:LWKey GridRow.NewItemRowItemTemplate}">
        <dxgr:NewItemRowCellContentPresenter
            Width="{Binding Path=Column.ActualAdditionalRowDataWidth}"
            dxgr:GridColumn.NavigationIndex="{Binding Path=Column.(dxgr:GridColumn.ActualVisibleIndex)}"
            Column="{Binding Path=Column}"
            ColumnPosition="{Binding Path=Column.ColumnPosition}"
            HasLeftSibling="{Binding Path=Column.HasLeftSibling}"
            HasRightSibling="{Binding Path=Column.HasRightSibling}"
            HasTopElement="{Binding Path=Column.HasTopElement}"
            IsFocusedCell="{Binding Path=IsFocusedCell}"
            RowData="{Binding RowData}"
            SelectionState="{Binding Path=SelectionState}"
            ShowHorizontalLines="{Binding Path=View.ShowHorizontalLines}"
            ShowVerticalLines="{Binding Path=View.ShowVerticalLines}"
            Style="{Binding Path=Column.ActualNewItemRowCellStyle}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxgt:LWKey TableView.TotalSummaryContainerTemplate}">
        <dxgr:GridTotalSummary
            Width="{Binding Path=Column.ActualHeaderWidth}"
            dxb:BarManager.DXContextMenu="{Binding Path=Column.View.DataControlMenu}"
            dxgr:GridColumn.ActualVisibleIndex="{Binding Path=Column.(dxgr:GridColumn.ActualVisibleIndex)}"
            DataContext="{Binding Path=DataContext, RelativeSource={RelativeSource TemplatedParent}}">
            <dxgr:GridViewHitInfoBase.HitTestAcceptor>
                <dxght:TotalSummaryTableViewHitTestAcceptor />
            </dxgr:GridViewHitInfoBase.HitTestAcceptor>
        </dxgr:GridTotalSummary>
    </DataTemplate>
    <DataTemplate x:Key="{dxgt:LWKey TotalSummary.FootersTemplate}">
        <dx:MeasurePixelSnapper>
            <ContentControl dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" Template="{DynamicResource {dxgt:LWKey TotalSummary.FootersContentTemplate}}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <dxgr:TotalSummaryLeftIndentControl Visibility="{Binding Path=View.FixedLeftContentWidth, Converter={StaticResource DoubleToVisibilityConverter}}" />
                    <dxgr:BandedViewContentSelector Grid.Column="1" BandsLayout="{Binding Path=View.DataControl.BandsLayout}">
                        <dxgr:BandedViewContentSelector.TableViewContent>
                            <ControlTemplate>
                                <dxgr:GridTotalSummaryScrollablePart
                                    Margin="{Binding Path=View.VerticalScrollBarWidth, Converter={StaticResource FootersPanelMarginConverter}}"
                                    dxgr:GridControl.CurrentView="{Binding Path=View}"
                                    FixedColumnsDelimiterTemplate="{DynamicResource {dxgt:LWKey ScrollBar.ScrollingFixedLineTotalSummaryTemplate}}"
                                    FixedLeftVisibleColumns="{Binding Path=View.FixedLeftVisibleColumns}"
                                    FixedLineWidth="{Binding Path=View.FixedLineWidth}"
                                    FixedNoneContentWidth="{Binding Path=View.TotalSummaryFixedNoneContentWidth}"
                                    FixedRightVisibleColumns="{Binding Path=View.FixedRightVisibleColumns}"
                                    ScrollingMargin="{Binding Path=View.ScrollingHeaderVirtualizationMargin}">
                                    <dxgr:GridTotalSummaryScrollablePart.FixedLeftContent>
                                        <dxgr:TotalSummaryItemsControl ItemTemplate="{DynamicResource {dxgt:LWKey TableView.TotalSummaryContainerTemplate}}" ItemsPanel="{DynamicResource {dxgt:LWKey TableView.FixedLeftNoneDropPanelTemplate}}" ItemsSource="{Binding FixedLeftCellData}" />
                                    </dxgr:GridTotalSummaryScrollablePart.FixedLeftContent>
                                    <dxgr:GridTotalSummaryScrollablePart.FixedRightContent>
                                        <dxgr:TotalSummaryItemsControl ItemTemplate="{DynamicResource {dxgt:LWKey TableView.TotalSummaryContainerTemplate}}" ItemsPanel="{DynamicResource {dxgt:LWKey TableView.FixedRightNoneDropPanelTemplate}}" ItemsSource="{Binding FixedRightCellData}" />
                                    </dxgr:GridTotalSummaryScrollablePart.FixedRightContent>
                                    <dxgr:GridTotalSummaryScrollablePart.FixedNoneContent>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <dxgr:TotalSummaryLeftIndentControl Visibility="{Binding Path=View.FixedLeftContentWidth, Converter={StaticResource DoubleToVisibilityInverseConverter}}" />
                                            <dxgr:TotalSummaryItemsControl
                                                x:Name="footerItemsControl"
                                                Grid.Column="1"
                                                ItemTemplate="{DynamicResource {dxgt:LWKey TableView.TotalSummaryContainerTemplate}}"
                                                ItemsPanel="{DynamicResource {dxgt:LWKey TableView.FixedNoneDropPanelTemplate}}"
                                                ItemsSource="{Binding FixedNoneCellData}" />
                                        </Grid>
                                    </dxgr:GridTotalSummaryScrollablePart.FixedNoneContent>
                                </dxgr:GridTotalSummaryScrollablePart>
                            </ControlTemplate>
                        </dxgr:BandedViewContentSelector.TableViewContent>
                        <dxgr:BandedViewContentSelector.BandedViewContent>
                            <ControlTemplate>
                                <dxgr:GridTotalSummaryScrollablePart
                                    Margin="{Binding Path=View.VerticalScrollBarWidth, Converter={StaticResource FootersPanelMarginConverter}}"
                                    dxgr:GridControl.CurrentView="{Binding Path=View}"
                                    FixedColumnsDelimiterTemplate="{DynamicResource {dxgt:LWKey ScrollBar.ScrollingFixedLineTotalSummaryTemplate}}"
                                    FixedLeftVisibleColumns="{Binding Path=View.DataControl.BandsLayout.FixedLeftVisibleBands}"
                                    FixedLineWidth="{Binding Path=View.FixedLineWidth}"
                                    FixedNoneContentWidth="{Binding Path=View.TotalSummaryFixedNoneContentWidth}"
                                    FixedRightVisibleColumns="{Binding Path=View.DataControl.BandsLayout.FixedRightVisibleBands}"
                                    ScrollingMargin="{Binding Path=View.ScrollingHeaderVirtualizationMargin}">
                                    <dxgr:GridTotalSummaryScrollablePart.FixedLeftContent>
                                        <dxgr:BandedViewTotalSummaryControl dxgr:GridControl.CurrentView="{Binding Path=View}" ItemTemplate="{DynamicResource {dxgt:LWKey TableView.TotalSummaryContainerTemplate}}" ItemsSource="{Binding FixedLeftCellData}">
                                            <dxgr:BandedViewTotalSummaryControl.ItemsPanel>
                                                <ControlTemplate>
                                                    <dxgr:BandsNoneDropPanel Bands="{Binding Path=View.DataControl.BandsLayout.FixedLeftVisibleBands}" />
                                                </ControlTemplate>
                                            </dxgr:BandedViewTotalSummaryControl.ItemsPanel>
                                        </dxgr:BandedViewTotalSummaryControl>
                                    </dxgr:GridTotalSummaryScrollablePart.FixedLeftContent>
                                    <dxgr:GridTotalSummaryScrollablePart.FixedRightContent>
                                        <dxgr:BandedViewTotalSummaryControl dxgr:GridControl.CurrentView="{Binding Path=View}" ItemTemplate="{DynamicResource {dxgt:LWKey TableView.TotalSummaryContainerTemplate}}" ItemsSource="{Binding FixedRightCellData}">
                                            <dxgr:BandedViewTotalSummaryControl.ItemsPanel>
                                                <ControlTemplate>
                                                    <dxgr:BandsNoneDropPanel Bands="{Binding Path=View.DataControl.BandsLayout.FixedRightVisibleBands}" />
                                                </ControlTemplate>
                                            </dxgr:BandedViewTotalSummaryControl.ItemsPanel>
                                        </dxgr:BandedViewTotalSummaryControl>
                                    </dxgr:GridTotalSummaryScrollablePart.FixedRightContent>
                                    <dxgr:GridTotalSummaryScrollablePart.FixedNoneContent>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <dxgr:TotalSummaryLeftIndentControl Visibility="{Binding Path=View.FixedLeftContentWidth, Converter={StaticResource DoubleToVisibilityInverseConverter}}" />
                                            <dxgr:BandedViewTotalSummaryControl
                                                x:Name="footerItemsControl"
                                                Grid.Column="1"
                                                dxgr:GridControl.CurrentView="{Binding Path=View}"
                                                ItemTemplate="{DynamicResource {dxgt:LWKey TableView.TotalSummaryContainerTemplate}}"
                                                ItemsSource="{Binding FixedNoneCellData}">
                                                <dxgr:BandedViewTotalSummaryControl.ItemsPanel>
                                                    <ControlTemplate>
                                                        <dxgr:BandsNoneDropPanel Bands="{Binding Path=View.DataControl.BandsLayout.FixedNoneVisibleBands}" />
                                                    </ControlTemplate>
                                                </dxgr:BandedViewTotalSummaryControl.ItemsPanel>
                                            </dxgr:BandedViewTotalSummaryControl>
                                        </Grid>
                                    </dxgr:GridTotalSummaryScrollablePart.FixedNoneContent>
                                </dxgr:GridTotalSummaryScrollablePart>
                            </ControlTemplate>
                        </dxgr:BandedViewContentSelector.BandedViewContent>
                    </dxgr:BandedViewContentSelector>
                </Grid>
            </ContentControl>
        </dx:MeasurePixelSnapper>
    </DataTemplate>

    <DataTemplate x:Key="{dxgt:LWKey TableView.HeaderTemplate}">
        <ContentPresenter
            Margin="{TemplateBinding Margin}"
            VerticalAlignment="Center"
            Content="{Binding}"
            TextBlock.FontSize="14"
            UseLayoutRounding="True" />
    </DataTemplate>
    <ControlTemplate x:Key="{dxgt:LWKey TableView.TopPanel}">
        <Grid
            x:Name="TopGrid"
            Background="{DynamicResource {dxgt:LWKey TableView.SearchPanelBackground}}"
            ClipToBounds="True"
            SnapsToDevicePixels="true">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <dx:DXBorder x:Name="headerContent">
                <Grid>
                    <ContentControl
                        Margin="{DynamicResource {dxgt:LWKey TableView.HeaderMargin}}"
                        HorizontalAlignment="{Binding Path=(dxgr:GridControl.CurrentView).HeaderHorizontalAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                        Content="{Binding Path=(dxgr:GridControl.CurrentView).Header, RelativeSource={RelativeSource TemplatedParent}}"
                        ContentTemplate="{DynamicResource {dxgt:LWKey TableView.HeaderTemplate}}" />
                    <dx:DXBorder
                        x:Name="PART_HeaderBorderBottom"
                        Margin="-3,0,-3,-3"
                        VerticalAlignment="Bottom"
                        BorderBrush="{DynamicResource {dxgt:LWKey TableView.SearchPanelBorderBottomBrush}}"
                        BorderThickness="0,0,0,1">
                        <dx:DXBorder.Visibility>
                            <Binding ElementName="PART_GroupPanel" Path="Visibility">
                                <Binding.Converter>
                                    <dx:VisibilityInverseConverter />
                                </Binding.Converter>
                            </Binding>
                        </dx:DXBorder.Visibility>
                    </dx:DXBorder>
                </Grid>
                <Grid.ColumnSpan>
                    <MultiBinding>
                        <MultiBinding.Bindings>
                            <Binding Path="(dxgr:GridControl.CurrentView).IsCompactMode" RelativeSource="{RelativeSource TemplatedParent}" />
                            <Binding Path="(dxgr:GridControl.CurrentView).ActualShowCompactPanel" RelativeSource="{RelativeSource TemplatedParent}" />
                            <Binding Path="(dxgr:GridControl.CurrentView).HeaderPosition" RelativeSource="{RelativeSource TemplatedParent}" />
                            <Binding Path="(dxgr:GridControl.CurrentView).Header" RelativeSource="{RelativeSource TemplatedParent}" />
                            <Binding Path="(dxgr:GridControl.CurrentView).ActualSearchPanelPosition" RelativeSource="{RelativeSource Self}" />
                        </MultiBinding.Bindings>
                        <MultiBinding.Converter>
                            <dxgr:HeaderGridColumnSpanConverter />
                        </MultiBinding.Converter>
                    </MultiBinding>
                </Grid.ColumnSpan>
                <Grid.Row>
                    <MultiBinding>
                        <MultiBinding.Bindings>
                            <Binding Path="(dxgr:GridControl.CurrentView).IsCompactMode" RelativeSource="{RelativeSource TemplatedParent}" />
                            <Binding Path="(dxgr:GridControl.CurrentView).ActualShowCompactPanel" RelativeSource="{RelativeSource TemplatedParent}" />
                            <Binding Path="(dxgr:GridControl.CurrentView).HeaderPosition" RelativeSource="{RelativeSource TemplatedParent}" />
                            <Binding Path="(dxgr:GridControl.CurrentView).Header" RelativeSource="{RelativeSource TemplatedParent}" />
                            <Binding Path="(dxgr:GridControl.CurrentView).ActualSearchPanelPosition" RelativeSource="{RelativeSource Self}" />
                        </MultiBinding.Bindings>
                        <MultiBinding.Converter>
                            <dxgr:HeaderGridRowConverter />
                        </MultiBinding.Converter>
                    </MultiBinding>
                </Grid.Row>
                <dx:DXBorder.Visibility>
                    <Binding Path="(dxgr:GridControl.CurrentView).Header" RelativeSource="{RelativeSource TemplatedParent}">
                        <Binding.Converter>
                            <dx:ObjectToVisibilityConverter HandleList="False" />
                        </Binding.Converter>
                    </Binding>
                </dx:DXBorder.Visibility>
                <dx:DXBorder.Margin>
                    <Binding Path="(dxgr:GridControl.CurrentView).HeaderPosition" RelativeSource="{RelativeSource TemplatedParent}">
                        <Binding.Converter>
                            <dxmvvm:ObjectToObjectConverter DefaultSource="Top" DefaultTarget="3">
                                <dxmvvm:MapItem Source="CompactPanel" Target="3,0,3,3" />
                            </dxmvvm:ObjectToObjectConverter>
                        </Binding.Converter>
                    </Binding>
                </dx:DXBorder.Margin>
            </dx:DXBorder>
            <dxgr:CompactPanel
                x:Name="PART_CompactPanel"
                Grid.Row="2"
                View="{Binding Path=(dxgcore:DataControlBase.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                Visibility="{Binding View.ActualShowCompactPanel, RelativeSource={RelativeSource Self}, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid.ColumnSpan>
                    <MultiBinding>
                        <MultiBinding.Bindings>
                            <Binding Path="(dxgr:GridControl.CurrentView).IsCompactMode" RelativeSource="{RelativeSource Self}" />
                            <Binding Path="(dxgr:GridControl.CurrentView).ActualShowCompactPanel" RelativeSource="{RelativeSource Self}" />
                            <Binding Path="(dxgr:GridControl.CurrentView).HeaderPosition" RelativeSource="{RelativeSource Self}" />
                            <Binding Path="(dxgr:GridControl.CurrentView).Header" RelativeSource="{RelativeSource Self}" />
                            <Binding Path="(dxgr:GridControl.CurrentView).ActualSearchPanelPosition" RelativeSource="{RelativeSource Self}" />
                        </MultiBinding.Bindings>
                        <MultiBinding.Converter>
                            <dxgr:CompactPanelGridColumnSpanConverter />
                        </MultiBinding.Converter>
                    </MultiBinding>
                </Grid.ColumnSpan>
                <Grid.Column>
                    <MultiBinding>
                        <MultiBinding.Bindings>
                            <Binding Path="(dxgr:GridControl.CurrentView).IsCompactMode" RelativeSource="{RelativeSource Self}" />
                            <Binding Path="(dxgr:GridControl.CurrentView).ActualShowCompactPanel" RelativeSource="{RelativeSource Self}" />
                            <Binding Path="(dxgr:GridControl.CurrentView).HeaderPosition" RelativeSource="{RelativeSource Self}" />
                            <Binding Path="(dxgr:GridControl.CurrentView).Header" RelativeSource="{RelativeSource Self}" />
                        </MultiBinding.Bindings>
                        <MultiBinding.Converter>
                            <dxgr:CompactPanelGridColumnConverter />
                        </MultiBinding.Converter>
                    </MultiBinding>
                </Grid.Column>
            </dxgr:CompactPanel>
            <dxgr:GroupPanelControl
                x:Name="PART_GroupPanel"
                Grid.Row="3"
                Grid.ColumnSpan="3"
                dxb:BarManager.DXContextMenu="{Binding Path=(dxgr:GridControl.CurrentView).DataControlMenu, RelativeSource={RelativeSource TemplatedParent}}"
                View="{Binding Path=(dxgcore:DataControlBase.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                Visibility="Collapsed" />

            <Button
                x:Name="searchPanelShowButton"
                Grid.Row="3"
                Grid.Column="2"
                Command="{Binding Path=(dxgr:GridControl.CurrentView).Commands.ShowSearchPanel, RelativeSource={RelativeSource TemplatedParent}}"
                CommandParameter="True"
                Style="{DynamicResource {dxt:LWKey SearchControl.ShowButtonStyle}}">
                <Button.Content>
                    <Path
                        Width="14"
                        Height="14"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Data="F1 M 4,1.90735e-006C 6.20914,1.90735e-006 8,1.79086 8,4C 8,4.84917 7.73539,5.63653 7.28414,6.28414L 10,9L 9,10L 6.28414,7.28414C 5.63653,7.7354 4.84917,8 4,8C 1.79086,8 0,6.20914 0,4C 0,1.79086 1.79086,1.90735e-006 4,1.90735e-006 Z M 4,1C 2.34315,1 1,2.34315 1,4C 1,5.65686 2.34315,7 4,7C 5.65685,7 7,5.65686 7,4C 7,2.34315 5.65685,1 4,1 Z "
                        Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}"
                        Stretch="Fill" />
                </Button.Content>
                <Button.Visibility>
                    <MultiBinding>
                        <MultiBinding.Bindings>
                            <Binding Path="(dxgcore:DataControlBase.CurrentView).ActualShowSearchPanel" RelativeSource="{RelativeSource TemplatedParent}" />
                            <Binding Path="(dxgcore:DataControlBase.CurrentView).ActualSearchPanelPosition" RelativeSource="{RelativeSource TemplatedParent}" />
                            <Binding Path="(dxgcore:DataControlBase.CurrentView).ShowSearchPanelMode" RelativeSource="{RelativeSource TemplatedParent}" />
                        </MultiBinding.Bindings>
                        <MultiBinding.Converter>
                            <dxgr:SearchPanelShowButtonVisibilityConverter />
                        </MultiBinding.Converter>
                    </MultiBinding>
                </Button.Visibility>
                <dxgr:GridViewHitInfoBase.HitTestAcceptor>
                    <dxght:SearchPanelShowButtonHitTestAcceptor />
                </dxgr:GridViewHitInfoBase.HitTestAcceptor>
            </Button>

            <ContentControl
                x:Name="part_SearchControlContainer"
                Grid.Row="1"
                dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                Style="{DynamicResource {dxgt:LWKey TableView.SearchPanelContentTemplate}}"
                Visibility="{Binding Path=(dxgr:GridControl.CurrentView).ActualShowSearchPanel, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}">
                <dxgr:GridViewHitInfoBase.HitTestAcceptor>
                    <dxght:GridSearchPanelHitTestAcceptor />
                </dxgr:GridViewHitInfoBase.HitTestAcceptor>
                <Grid.ColumnSpan>
                    <MultiBinding>
                        <MultiBinding.Bindings>
                            <Binding Path="(dxgr:GridControl.CurrentView).IsCompactMode" RelativeSource="{RelativeSource Self}" />
                            <Binding Path="(dxgr:GridControl.CurrentView).ActualShowCompactPanel" RelativeSource="{RelativeSource Self}" />
                            <Binding Path="(dxgr:GridControl.CurrentView).HeaderPosition" RelativeSource="{RelativeSource Self}" />
                            <Binding Path="(dxgr:GridControl.CurrentView).Header" RelativeSource="{RelativeSource Self}" />
                            <Binding Path="(dxgr:GridControl.CurrentView).ActualSearchPanelPosition" RelativeSource="{RelativeSource Self}" />
                        </MultiBinding.Bindings>
                        <MultiBinding.Converter>
                            <dxgr:SearchPanelGridColumnSpanConverter />
                        </MultiBinding.Converter>
                    </MultiBinding>
                </Grid.ColumnSpan>
                <Grid.Column>
                    <MultiBinding>
                        <MultiBinding.Bindings>
                            <Binding Path="(dxgr:GridControl.CurrentView).IsCompactMode" RelativeSource="{RelativeSource Self}" />
                            <Binding Path="(dxgr:GridControl.CurrentView).ActualShowCompactPanel" RelativeSource="{RelativeSource Self}" />
                            <Binding Path="(dxgr:GridControl.CurrentView).HeaderPosition" RelativeSource="{RelativeSource Self}" />
                            <Binding Path="(dxgr:GridControl.CurrentView).Header" RelativeSource="{RelativeSource Self}" />
                            <Binding Path="(dxgr:GridControl.CurrentView).ActualSearchPanelPosition" RelativeSource="{RelativeSource Self}" />
                        </MultiBinding.Bindings>
                        <MultiBinding.Converter>
                            <dxgr:SearchPanelGridColumnConverter />
                        </MultiBinding.Converter>
                    </MultiBinding>
                </Grid.Column>
            </ContentControl>

            <dx:DXBorder
                x:Name="compactPanelBorder"
                Grid.Row="4"
                Grid.ColumnSpan="3"
                Background="Transparent"
                BorderBrush="{DynamicResource {dxgt:LWKey TableView.GroupPanelBorderBrush}}"
                Visibility="{Binding GroupPanelShown, ElementName=PART_CompactPanel, Converter={StaticResource BooleanToVisibilityConverterInverted}}" />

            <dx:DXBorder
                x:Name="GroupPanelBorder"
                Grid.Row="5"
                Grid.ColumnSpan="3"
                Background="Transparent"
                BorderBrush="{DynamicResource {dxgt:LWKey TableView.GroupPanelBorderBrush}}"
                BorderThickness="{DynamicResource {dxgt:LWKey TableView.GroupPanelBorderThickness}}"
                Visibility="{Binding Visibility, ElementName=PART_GroupPanel}" />
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxgr:GridControl.CurrentView).ActualShowCompactPanel, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="part_SearchControlContainer" Property="Grid.Row" Value="2" />
                <Setter TargetName="compactPanelBorder" Property="Margin" Value="0,-1,0,0" />
                <Setter TargetName="compactPanelBorder" Property="BorderThickness" Value="{DynamicResource {dxgt:LWKey TableView.GroupPanelBorderThickness}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxgr:GridControl.CurrentView).IsCompactMode, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="part_SearchControlContainer" Property="Grid.Row" Value="1" />
            </DataTrigger>
            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="False">
                <Setter TargetName="part_SearchControlContainer" Property="MaxWidth" Value="{DynamicResource {dxgt:LWKey TableView.SearchPanelWidth}}" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="False">
                <Setter TargetName="part_SearchControlContainer" Property="MaxWidth" Value="{DynamicResource {dxgt:LWKey TableView.SearchPanelWidth}}" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                <Setter TargetName="part_SearchControlContainer" Property="MaxWidth" Value="{DynamicResource {dxgt:LWKey TableView.SearchPanelWidthTouch}}" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter TargetName="part_SearchControlContainer" Property="MaxWidth" Value="{DynamicResource {dxgt:LWKey TableView.SearchPanelWidthTouch}}" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=(dxgr:GridControl.CurrentView).ActualSearchPanelPosition, RelativeSource={RelativeSource Self}}" Value="OverGroupPanel">
                <Setter TargetName="part_SearchControlContainer" Property="Width" Value="NaN" />
                <Setter TargetName="part_SearchControlContainer" Property="MaxWidth" Value="Infinity" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxgr:GridControl.CurrentView).ActualSearchPanelPosition, RelativeSource={RelativeSource Self}}" Value="Default">
                <Setter TargetName="part_SearchControlContainer" Property="Grid.Row" Value="3" />
                <Setter TargetName="PART_GroupPanel" Property="Grid.ColumnSpan" Value="2" />
                <Setter TargetName="part_SearchControlContainer" Property="Width">
                    <Setter.Value>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding ElementName="TopGrid" Path="ActualWidth" />
                                <Binding Path="MaxWidth" RelativeSource="{RelativeSource Self}" />
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxgr:SearchPanelWidthConverter Delta="10" />
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxgr:GridControl.CurrentView).Header, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                <Setter TargetName="headerContent" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxgr:GridControl.CurrentView).HeaderPosition, RelativeSource={RelativeSource Self}}" Value="CompactPanel">
                <Setter TargetName="headerContent" Property="Visibility">
                    <Setter.Value>
                        <Binding Path="(dxgr:GridControl.CurrentView).ActualShowCompactPanel" RelativeSource="{RelativeSource TemplatedParent}">
                            <Binding.Converter>
                                <dx:BoolToObjectConverter FalseValue="Collapsed" TrueValue="Visible" />
                            </Binding.Converter>
                        </Binding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxgr:GridControl.CurrentView).HeaderPosition, RelativeSource={RelativeSource Self}}" Value="SearchPanel">
                <Setter TargetName="headerContent" Property="Visibility">
                    <Setter.Value>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding Path="(dxgr:GridControl.CurrentView).ActualShowSearchPanel" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxgr:GridControl.CurrentView).ActualSearchPanelPosition" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxgr:HeaderVisibilityConverter />
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxgr:GridControl.CurrentView).DataControl.(dxi:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="TopGrid" Property="Background" Value="{Binding Path=(dxgr:GridControl.CurrentView).DataControl.(dxi:AppearanceOptions.Background), RelativeSource={RelativeSource TemplatedParent}}" />
                <Setter TargetName="part_SearchControlContainer" Property="Background" Value="{Binding Path=(dxgr:GridControl.CurrentView).DataControl.(dxi:AppearanceOptions.Background), RelativeSource={RelativeSource TemplatedParent}}" />
            </DataTrigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>

    <Style x:Key="{dxgt:LWKey TableView.NoRecordsControlStyle}" TargetType="{x:Type dxgr:NoRecordsControl}">
        <Setter Property="NoRecordsFoundText" Value="{Binding Path=DataControl.(dxgr:GridControl.ActiveView).LocalizationDescriptor, Converter={StaticResource LocalizationStringValueConverter}, ConverterParameter=NoRecordsFound, RelativeSource={RelativeSource Self}}" />
        <Setter Property="NoRecordsText" Value="{Binding Path=DataControl.(dxgr:GridControl.ActiveView).LocalizationDescriptor, Converter={StaticResource LocalizationStringValueConverter}, ConverterParameter=NoRecords, RelativeSource={RelativeSource Self}}" />
    </Style>

    <ControlTemplate x:Key="{dxgt:LWKey TableView.DataPresenterTemplate}" TargetType="{x:Type dxgr:DataPresenter}">
        <dx:DXBorder x:Name="PART_DataPresenterBackground" Background="{DynamicResource {dxgt:LWKey TableView.DataPresenterBackground}}">
            <Grid>
                <ContentPresenter
                    x:Name="PART_AdditionalElementBackgroundContainer"
                    HorizontalAlignment="Right"
                    dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                    Visibility="Collapsed">
                    <dxgr:GridControl.CurrentViewChangedListener>
                        <dxgr:AdditionalElementBackgroundContainerInitializer />
                    </dxgr:GridControl.CurrentViewChangedListener>
                </ContentPresenter>

                <ContentPresenter />

                <ContentPresenter
                    x:Name="PART_AdditionalElementRowsPanelContainer"
                    HorizontalAlignment="Right"
                    dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                    Visibility="Collapsed">
                    <dxgr:GridControl.CurrentViewChangedListener>
                        <dxgr:AdditionalElementRowsPanelInitializer />
                    </dxgr:GridControl.CurrentViewChangedListener>
                </ContentPresenter>
                <dxgr:NoRecordsControl Style="{DynamicResource {dxgt:LWKey TableView.NoRecordsControlStyle}}" />
            </Grid>
        </dx:DXBorder>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxgr:GridControl.CurrentView).IsAdditionalElementScrollBarVisible, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="PART_AdditionalElementBackgroundContainer" Property="Visibility" Value="Visible" />
                <Setter TargetName="PART_AdditionalElementRowsPanelContainer" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(dxgr:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.HasBackground)}" Value="True">
                <Setter TargetName="PART_DataPresenterBackground" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(dxgr:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.Background)}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(dxgr:GridControl.ActiveView).DataControl.(dxi:GridAppearanceOptions.HasDataAreaBackground)}" Value="True">
                <Setter TargetName="PART_DataPresenterBackground" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(dxgr:GridControl.ActiveView).DataControl.(dxi:GridAppearanceOptions.DataAreaBackground)}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:LWKey TableView.ScrollViewerTemplate}">
        <Grid dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" ClipToBounds="True" SnapsToDevicePixels="true">
            <dx:ScrollBarExtensions.ScrollBehavior>
                <Binding Path="(dxgr:GridControl.CurrentView).UseExtendedMouseScrolling" RelativeSource="{RelativeSource Self}">
                    <Binding.Converter>
                        <dx:BoolToObjectConverter FalseValue="{dx:NativeScrollBehavior}" TrueValue="{dxgcore:DataPresenterScrollBehavior}" />
                    </Binding.Converter>
                </Binding>
            </dx:ScrollBarExtensions.ScrollBehavior>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <dx:BestFitDecorator
                x:Name="PART_BestFitControlDecorator"
                Width="0"
                Height="0"
                dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}">
                <dxgr:GridControl.CurrentViewChangedListener>
                    <dxgr:BestFitControlDecoratorInitializer />
                </dxgr:GridControl.CurrentViewChangedListener>
            </dx:BestFitDecorator>
            <ContentControl Grid.Row="0" dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" Template="{DynamicResource {dxgt:LWKey TableView.TopPanel}}" />
            <DockPanel Grid.Row="1">
                <ContentPresenter
                    x:Name="PART_AdditionalElementHeaderContainer"
                    dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                    DockPanel.Dock="Right"
                    Visibility="Collapsed">
                    <dxgr:GridControl.CurrentViewChangedListener>
                        <dxgr:AdditionalElementHeaderInitializer />
                    </dxgr:GridControl.CurrentViewChangedListener>
                </ContentPresenter>
                <dxgr:BandsContainerControl
                    x:Name="PART_BandsContainer"
                    dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                    BandsLayout="{Binding Path=(dxgr:GridControl.CurrentView).DataControl.BandsLayout, RelativeSource={RelativeSource TemplatedParent}}"
                    DataContext="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                    DockPanel.Dock="Top"
                    Visibility="Collapsed">
                    <dxgr:GridViewHitInfoBase.HitTestAcceptor>
                        <dxght:BandHeaderPanelTableViewHitTestAcceptor />
                    </dxgr:GridViewHitInfoBase.HitTestAcceptor>
                    <dxgr:GridControl.CurrentViewChangedListener>
                        <dxgr:BandsContainerInitializer />
                    </dxgr:GridControl.CurrentViewChangedListener>
                </dxgr:BandsContainerControl>
                <ContentPresenter
                    Name="PART_HeadersPanel"
                    MinHeight="{Binding Path=(dxgr:GridControl.CurrentView).HeaderPanelMinHeight, RelativeSource={RelativeSource TemplatedParent}}"
                    dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                    Content="{Binding Path=(dxgr:GridControl.CurrentView).HeadersData, RelativeSource={RelativeSource TemplatedParent}}"
                    ContentTemplate="{Binding Path=(dxgr:GridControl.CurrentView).HeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}">
                    <dxgr:GridControl.CurrentViewChangedListener>
                        <dxgr:HeadersPanelInitializer />
                    </dxgr:GridControl.CurrentViewChangedListener>
                    <dxgr:GridViewHitInfoBase.HitTestAcceptor>
                        <dxght:ColumnHeaderPanelTableViewHitTestAcceptor />
                    </dxgr:GridViewHitInfoBase.HitTestAcceptor>
                </ContentPresenter>
            </DockPanel>
            <dxgcore:AdditionalRowItemsControl Grid.Row="2" Margin="{DynamicResource {dxgt:LWKey TableView.RowPresenterGridMargin}}" dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" />
            <Grid
                x:Name="rowPresenterGrid"
                Grid.Row="3"
                Margin="{DynamicResource {dxgt:LWKey TableView.RowPresenterGridMargin}}"
                dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ContentPresenter
                    x:Name="PART_FootersPanel"
                    Grid.Row="{Binding Path=(dxgr:GridControl.CurrentView).TotalSummaryPosition, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TotalSummaryPositionToRowConverter}}"
                    dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                    Content="{Binding Path=(dxgr:GridControl.CurrentView).HeadersData, RelativeSource={RelativeSource TemplatedParent}}"
                    ContentTemplate="{Binding Path=(dxgr:GridControl.CurrentView).FooterTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                    Visibility="{Binding Path=(dxgr:GridControl.CurrentView).TotalSummaryPosition, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TotalSummaryPositionToVisibilityConverter}}">
                    <Grid.ColumnSpan>2</Grid.ColumnSpan>
                    <dxgr:GridViewHitInfoBase.HitTestAcceptor>
                        <dxght:TotalSummaryPanelTableViewHitTestAcceptor />
                    </dxgr:GridViewHitInfoBase.HitTestAcceptor>
                </ContentPresenter>

                <ContentControl Grid.Row="1" Margin="{DynamicResource {dxgt:LWKey TableView.IndicatorMargin}}" Visibility="{Binding Path=(dxgr:GridControl.CurrentView).ShowColumnHeaders, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverterInverted}}">
                    <Grid.ColumnSpan>
                        <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}">
                            <Binding.Converter>
                                <dx:EnumToObjectConverter DefaultValue="1">
                                    <dx:EnumToObjectConverter.Values>
                                        <dx:EnumObjectProvider x:Key="TouchOverlap" Value="2" />
                                    </dx:EnumToObjectConverter.Values>
                                </dx:EnumToObjectConverter>
                            </Binding.Converter>
                        </Binding>
                    </Grid.ColumnSpan>
                </ContentControl>
                <Grid Grid.Row="2">
                    <Grid.ColumnSpan>
                        <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}">
                            <Binding.Converter>
                                <dxmvvm:ObjectToObjectConverter DefaultSource="Default" DefaultTarget="1">
                                    <dxmvvm:MapItem Source="TouchOverlap" Target="2" />
                                </dxmvvm:ObjectToObjectConverter>
                            </Binding.Converter>
                        </Binding>
                    </Grid.ColumnSpan>
                    <ScrollContentPresenter MinWidth="{Binding Path=(dxgr:GridControl.CurrentView).ScrollableAreaMinWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}">
                        <dxgcore:FocusRectPresenter.IsVerticalScrollHost>True</dxgcore:FocusRectPresenter.IsVerticalScrollHost>
                        <ScrollViewer.CanContentScroll>True</ScrollViewer.CanContentScroll>
                        <ScrollContentPresenter.Name>PART_ScrollContentPresenter</ScrollContentPresenter.Name>

                        <dxgr:GridControl.CurrentViewChangedListener>
                            <dxgr:ScrollContentPresenterInitializer />
                        </dxgr:GridControl.CurrentViewChangedListener>

                        <ScrollContentPresenter.Content>
                            <dxgr:DataPresenter x:Name="dataPresenter" dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" Template="{DynamicResource {dxgt:LWKey TableView.DataPresenterTemplate}}" />
                        </ScrollContentPresenter.Content>
                        <dxgr:GridViewHitInfoBase.HitTestAcceptor>
                            <dxght:DataAreaTableViewHitTestAcceptor />
                        </dxgr:GridViewHitInfoBase.HitTestAcceptor>
                    </ScrollContentPresenter>
                    <ContentControl HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                        <ContentControl.Template>
                            <ControlTemplate TargetType="{x:Type ContentControl}">
                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Content="{TemplateBinding Content}" />
                            </ControlTemplate>
                        </ContentControl.Template>
                        <ContentControl.Visibility>
                            <Binding Path="(dxgr:GridControl.CurrentView).WaitIndicatorType" RelativeSource="{RelativeSource TemplatedParent}">
                                <Binding.Converter>
                                    <dx:EnumToObjectConverter DefaultValue="Collapsed">
                                        <dx:EnumToObjectConverter.Values>
                                            <dx:EnumObjectProvider x:Key="Panel" Value="Visible" />
                                        </dx:EnumToObjectConverter.Values>
                                    </dx:EnumToObjectConverter>
                                </Binding.Converter>
                            </Binding>
                        </ContentControl.Visibility>
                        <dx:WaitIndicator DeferedVisibility="{Binding Path=(dxgr:GridControl.CurrentView).IsWaitIndicatorVisible, RelativeSource={RelativeSource TemplatedParent}}" Style="{Binding Path=(dxgr:GridControl.CurrentView).WaitIndicatorStyle, RelativeSource={RelativeSource TemplatedParent}}" />
                    </ContentControl>
                    <dxgr:FixedGroupsAdorner
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        FixedElements="{Binding Content.FixedElements, ElementName=dataPresenter}"
                        ParentControl="{Binding Content, ElementName=dataPresenter}">
                        <Grid.ColumnSpan>
                            <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}">
                                <Binding.Converter>
                                    <dx:EnumToObjectConverter DefaultValue="1">
                                        <dx:EnumToObjectConverter.Values>
                                            <dx:EnumObjectProvider x:Key="TouchOverlap" Value="2" />
                                        </dx:EnumToObjectConverter.Values>
                                    </dx:EnumToObjectConverter>
                                </Binding.Converter>
                            </Binding>
                        </Grid.ColumnSpan>
                    </dxgr:FixedGroupsAdorner>
                </Grid>
                <Grid
                    Grid.Row="1"
                    Grid.Column="1"
                    HorizontalAlignment="Right"
                    Visibility="{Binding ComputedVerticalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                    <Grid.RowSpan>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxgr:GridControl.CurrentView).TotalSummaryPosition" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxgr:VerticalScrollBarRowSpanConverter />
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </Grid.RowSpan>

                    <ScrollBar
                        x:Name="PART_VerticalScrollBar"
                        HorizontalAlignment="Right"
                        dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                        Maximum="{Binding ScrollableHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        ViewportSize="{Binding ViewportHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        Value="{Binding VerticalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                        <dxgr:GridControl.CurrentViewChangedListener>
                            <dxgr:VerticalScrollBarBlendCustomizationExtension />
                        </dxgr:GridControl.CurrentViewChangedListener>
                        <dxgr:GridViewHitInfoBase.HitTestAcceptor>
                            <dxght:VerticalScrollBarTableViewHitTestAcceptor />
                        </dxgr:GridViewHitInfoBase.HitTestAcceptor>
                    </ScrollBar>

                    <dxgr:ScrollBarAnnotationsControl
                        Margin="{DynamicResource {dxgt:LWKey TableView.AnnotationMargin}}"
                        IsHitTestVisible="False"
                        Maximum="{Binding ScrollableHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        RangeCollection="{Binding Path=(dxgr:GridControl.CurrentView).ScrollBarAnnotationInfoRange, RelativeSource={RelativeSource TemplatedParent}}"
                        ScrollBar="{Binding ElementName=PART_VerticalScrollBar}"
                        ViewportSize="{Binding ViewportHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                </Grid>
                <Grid
                    x:Name="gridTouchModeDataNavigator"
                    Grid.Row="5"
                    Grid.ColumnSpan="2"
                    VerticalAlignment="Stretch"
                    Background="{DynamicResource {dxgt:LWKey TableView.DataNavigatorBackground}}"
                    Visibility="Collapsed">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <dx:DXBorder
                        x:Name="borderUpDataNavigatorTouch"
                        Grid.Column="0"
                        BorderBrush="{DynamicResource {dxgt:LWKey GridRow.TotalSummaryBorderBrush}}"
                        BorderThickness="0" />
                    <dxgr:DataNavigator
                        x:Name="PART_DataNavigationScrollTouchMode"
                        Grid.Column="1"
                        Height="{Binding Height, ElementName=PART_HorizontalScrollBar}"
                        HorizontalAlignment="Right"
                        View="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" />
                </Grid>


                <DockPanel
                    x:Name="gridScroll"
                    Margin="{DynamicResource {dxgt:LWKey TableView.HorizontalScrollbarMargin}}"
                    VerticalAlignment="Bottom"
                    Visibility="{Binding Path=(dxgr:GridControl.CurrentView).ShowDataNavigator, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Grid.Row>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxgr:GridControl.CurrentView).TotalSummaryPosition" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxgr:HorizontalScrollBarRowConverter />
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </Grid.Row>
                    <Grid.RowSpan>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxgr:GridControl.CurrentView).TotalSummaryPosition" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxgr:HorizontalScrollBarRowSpanConverter />
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </Grid.RowSpan>
                    <Grid.ColumnSpan>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding Path="(dxgr:GridControl.CurrentView).TotalSummaryPosition" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxgr:GridControl.CurrentView).FixedRightContentWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxgr:GridControl.CurrentView).ExtendScrollBarToFixedColumns" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxgr:HorizontalScrollBarGridColumnSpanConverter />
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </Grid.ColumnSpan>
                    <ContentPresenter
                        x:Name="PART_AdditionalElementScrollBarContainer"
                        dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                        DockPanel.Dock="Right"
                        Visibility="Collapsed">
                        <dxgr:GridControl.CurrentViewChangedListener>
                            <dxgr:AdditionalElementScrollBarInitializer />
                        </dxgr:GridControl.CurrentViewChangedListener>
                    </ContentPresenter>
                    <Grid x:Name="PART_ScrollBarContainer">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <dx:DXBorder x:Name="scrollLeftCorner" Width="{Binding Path=(dxgr:GridControl.CurrentView).ActualIndicatorWidth, RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource {dxgt:LWKey ScrollBar.ScrollingCornerLeftStyle}}">
                            <dx:DXBorder.VerticalAlignment>
                                <Binding Converter="{StaticResource ScrollBarModeToVerticalAlignmentConverter}" Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource Self}" />
                            </dx:DXBorder.VerticalAlignment>
                            <dx:DXBorder.BorderThickness>
                                <MultiBinding>
                                    <MultiBinding.Bindings>
                                        <Binding Path="(dxgr:GridControl.CurrentView).TotalSummaryPosition" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="(dxgr:GridControl.CurrentView).FixedLeftContentWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="(dxgr:GridControl.CurrentView).ExtendScrollBarToFixedColumns" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="(dxgr:GridControl.CurrentView).ShowDataNavigator" RelativeSource="{RelativeSource TemplatedParent}" />
                                    </MultiBinding.Bindings>
                                    <MultiBinding.Converter>
                                        <dxgr:HorizontalScrollBarLeftCornerBorderThicknessConverter UseVerticalBorder="True" />
                                    </MultiBinding.Converter>
                                </MultiBinding>
                            </dx:DXBorder.BorderThickness>
                            <dx:DXBorder.Visibility>
                                <MultiBinding>
                                    <MultiBinding.Bindings>
                                        <Binding Path="(dxgr:GridControl.CurrentView).ShowIndicator" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="(dxgr:GridControl.CurrentView).TotalSummaryPosition" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="(dxgr:GridControl.CurrentView).FixedLeftContentWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="(dxgr:GridControl.CurrentView).ExtendScrollBarToFixedColumns" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="(dxgr:GridControl.CurrentView).ShowDataNavigator" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}" />
                                    </MultiBinding.Bindings>
                                    <MultiBinding.Converter>
                                        <dxgr:HorizontalScrollBarIndicatorVisibilityConverter />
                                    </MultiBinding.Converter>
                                </MultiBinding>

                            </dx:DXBorder.Visibility>
                        </dx:DXBorder>
                        <dx:DXBorder
                            x:Name="scrollFixedLeftThumb"
                            Grid.Column="1"
                            dxgr:GridBorderHelper.ShowBorder="{Binding Path=(dxgr:GridControl.CurrentView).TotalSummaryPosition, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TotalSummaryPositionToBooleanConverter}}"
                            Style="{DynamicResource {dxgt:LWKey ScrollBar.ScrollingFixedLeftThumbStyle}}">
                            <dx:DXBorder.VerticalAlignment>
                                <Binding Converter="{StaticResource ScrollBarModeToVerticalAlignmentConverter}" Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource Self}" />
                            </dx:DXBorder.VerticalAlignment>
                            <dx:DXBorder.Width>
                                <MultiBinding>
                                    <MultiBinding.Bindings>
                                        <Binding Path="(dxgr:GridControl.CurrentView).FixedLeftContentWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="(dxgr:GridControl.CurrentView).TotalGroupAreaIndent" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="(dxgr:GridControl.CurrentView).ActualShowDetailButtons" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="(dxgr:GridControl.CurrentView).ExpandDetailButtonWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                                    </MultiBinding.Bindings>
                                    <MultiBinding.Converter>
                                        <dxgr:HorizontalScrollBarFixedLeftThumbWidthConverter />
                                    </MultiBinding.Converter>
                                </MultiBinding>
                            </dx:DXBorder.Width>
                            <dx:DXBorder.Visibility>
                                <MultiBinding>
                                    <MultiBinding.Bindings>
                                        <Binding Path="(dxgr:GridControl.CurrentView).TotalSummaryPosition" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="(dxgr:GridControl.CurrentView).FixedLeftContentWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="(dxgr:GridControl.CurrentView).ExtendScrollBarToFixedColumns" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="(dxgr:GridControl.CurrentView).ShowDataNavigator" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}" />
                                    </MultiBinding.Bindings>
                                    <MultiBinding.Converter>
                                        <dxgr:HorizontalScrollBarFixedLeftThumbVisibilityConverter />
                                    </MultiBinding.Converter>
                                </MultiBinding>

                            </dx:DXBorder.Visibility>
                        </dx:DXBorder>
                        <dx:DXBorder
                            x:Name="scrollFixedLeftLine"
                            Grid.Column="2"
                            Width="{Binding Path=(dxgr:GridControl.CurrentView).FixedLineWidth, RelativeSource={RelativeSource TemplatedParent}}"
                            dxgr:GridBorderHelper.ShowBorder="{Binding Path=(dxgr:GridControl.CurrentView).TotalSummaryPosition, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TotalSummaryPositionToBooleanConverter}}"
                            Style="{DynamicResource {dxgt:LWKey ScrollBar.ScrollingFixedLineStyle}}">
                            <dx:DXBorder.VerticalAlignment>
                                <Binding Converter="{StaticResource ScrollBarModeToVerticalAlignmentConverter}" Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource Self}" />
                            </dx:DXBorder.VerticalAlignment>
                            <dx:DXBorder.Visibility>
                                <MultiBinding>
                                    <MultiBinding.Bindings>
                                        <Binding Path="(dxgr:GridControl.CurrentView).TotalSummaryPosition" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="(dxgr:GridControl.CurrentView).FixedLeftContentWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="(dxgr:GridControl.CurrentView).ExtendScrollBarToFixedColumns" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="(dxgr:GridControl.CurrentView).ShowDataNavigator" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}" />
                                    </MultiBinding.Bindings>
                                    <MultiBinding.Converter>
                                        <dxgr:HorizontalScrollBarFixedLeftThumbVisibilityConverter />
                                    </MultiBinding.Converter>
                                </MultiBinding>

                            </dx:DXBorder.Visibility>
                        </dx:DXBorder>
                        <dx:DXBorder
                            x:Name="scrollFixedRightLine"
                            Grid.Column="4"
                            Width="{Binding Path=(dxgr:GridControl.CurrentView).FixedLineWidth, RelativeSource={RelativeSource TemplatedParent}}"
                            dxgr:GridBorderHelper.ShowBorder="{Binding Path=(dxgr:GridControl.CurrentView).TotalSummaryPosition, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TotalSummaryPositionToBooleanConverter}}"
                            Style="{DynamicResource {dxgt:LWKey ScrollBar.ScrollingFixedLineStyle}}">
                            <dx:DXBorder.VerticalAlignment>
                                <Binding Converter="{StaticResource ScrollBarModeToVerticalAlignmentConverter}" Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource Self}" />
                            </dx:DXBorder.VerticalAlignment>
                            <dx:DXBorder.Visibility>
                                <MultiBinding>
                                    <MultiBinding.Bindings>
                                        <Binding Path="(dxgr:GridControl.CurrentView).TotalSummaryPosition" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="(dxgr:GridControl.CurrentView).FixedRightContentWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="(dxgr:GridControl.CurrentView).ExtendScrollBarToFixedColumns" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="(dxgr:GridControl.CurrentView).ShowDataNavigator" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}" />
                                    </MultiBinding.Bindings>
                                    <MultiBinding.Converter>
                                        <dxgr:HorizontalScrollBarFixedLeftThumbVisibilityConverter />
                                    </MultiBinding.Converter>
                                </MultiBinding>

                            </dx:DXBorder.Visibility>
                        </dx:DXBorder>
                        <dx:DXBorder
                            x:Name="scrollFixedRightThumb"
                            Grid.Column="5"
                            Width="{Binding Path=(dxgr:GridControl.CurrentView).FixedRightContentWidth, RelativeSource={RelativeSource TemplatedParent}}"
                            dxgr:GridBorderHelper.ShowBorder="{Binding Path=(dxgr:GridControl.CurrentView).TotalSummaryPosition, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TotalSummaryPositionToBooleanConverter}}"
                            Style="{DynamicResource {dxgt:LWKey ScrollBar.ScrollingFixedRightThumbStyle}}">
                            <dx:DXBorder.VerticalAlignment>
                                <Binding Converter="{StaticResource ScrollBarModeToVerticalAlignmentConverter}" Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource Self}" />
                            </dx:DXBorder.VerticalAlignment>
                            <dx:DXBorder.Visibility>
                                <MultiBinding>
                                    <MultiBinding.Bindings>
                                        <Binding Path="(dxgr:GridControl.CurrentView).TotalSummaryPosition" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="(dxgr:GridControl.CurrentView).FixedRightContentWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="(dxgr:GridControl.CurrentView).ExtendScrollBarToFixedColumns" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="(dxgr:GridControl.CurrentView).ShowDataNavigator" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}" />
                                    </MultiBinding.Bindings>
                                    <MultiBinding.Converter>
                                        <dxgr:HorizontalScrollBarFixedLeftThumbVisibilityConverter />
                                    </MultiBinding.Converter>
                                </MultiBinding>

                            </dx:DXBorder.Visibility>
                        </dx:DXBorder>

                        <Grid Grid.Column="3">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <ScrollBar
                                x:Name="PART_HorizontalScrollBar"
                                Grid.Column="0"
                                dxgt:ScrollBarHelper.AllowSetScrollHeight="{DynamicResource {dxgt:LWKey ScrollBar.AllowSetScrollHeight}}"
                                Maximum="{Binding ScrollableWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                Orientation="Horizontal"
                                ViewportSize="{Binding ViewportWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                Value="{Binding HorizontalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                                <dxgr:GridViewHitInfoBase.HitTestAcceptor>
                                    <dxght:HorizontalScrollBarTableViewHitTestAcceptor />
                                </dxgr:GridViewHitInfoBase.HitTestAcceptor>
                            </ScrollBar>

                            <dxgr:DataNavigator
                                x:Name="PART_DataNavigation"
                                Grid.Column="1"
                                Height="{Binding Height, ElementName=PART_HorizontalScrollBar}"
                                View="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                                Visibility="Visible" />
                        </Grid>
                    </Grid>
                </DockPanel>
                <dxgr:FitContentContainer Grid.Row="4" Grid.Column="1">
                    <dxgr:FitContentContainer.Visibility>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding Path="(dxgr:GridControl.CurrentView).TotalSummaryPosition" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxgr:GridControl.CurrentView).FixedRightContentWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxgr:GridControl.CurrentView).ExtendScrollBarToFixedColumns" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxgr:FitContentContainerConverter />
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </dxgr:FitContentContainer.Visibility>
                    <dx:DXBorder
                        x:Name="PART_HorizontalScrollCorner"
                        dxgr:GridBorderHelper.ShowBorder="{Binding Path=(dxgr:GridControl.CurrentView).TotalSummaryPosition, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TotalSummaryPositionToBooleanConverter}}"
                        dxgr:GridScrollBarHelper.ExtendScrollBarToFixedColumns="{Binding Path=(dxgr:GridControl.CurrentView).ExtendScrollBarToFixedColumns, RelativeSource={RelativeSource TemplatedParent}}"
                        Style="{DynamicResource {dxgt:LWKey ScrollBar.ScrollingCornerStyle}}">
                        <dxgr:GridScrollBarHelper.HasFixedRightColumns>
                            <Binding Path="(dxgr:GridControl.CurrentView).FixedRightContentWidth" RelativeSource="{RelativeSource TemplatedParent}">
                                <Binding.Converter>
                                    <dxmvvm:ObjectToObjectConverter DefaultTarget="True">
                                        <dxmvvm:ObjectToObjectConverter.Map>
                                            <dxmvvm:MapItem Source="0" Target="False" />
                                        </dxmvvm:ObjectToObjectConverter.Map>
                                    </dxmvvm:ObjectToObjectConverter>
                                </Binding.Converter>
                            </Binding>
                        </dxgr:GridScrollBarHelper.HasFixedRightColumns>
                    </dx:DXBorder>
                </dxgr:FitContentContainer>
            </Grid>
            <ContentPresenter
                x:Name="PART_AdditionalElementSplitterContainer"
                Grid.Row="1"
                Grid.RowSpan="3"
                Margin="{DynamicResource {dxgt:LWKey TableView.HorizontalScrollbarMargin}}"
                dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                Visibility="Collapsed">
                <dxgr:GridControl.CurrentViewChangedListener>
                    <dxgr:AdditionalElementSplitterInitializer />
                </dxgr:GridControl.CurrentViewChangedListener>
            </ContentPresenter>
            <dxgr:OuterBorderElement
                x:Name="outerBorder"
                Grid.Row="2"
                Grid.RowSpan="2"
                ActualShowCompactPanel="{Binding Path=(dxgr:GridControl.CurrentView).ActualShowCompactPanel, RelativeSource={RelativeSource TemplatedParent}}"
                ShowColumnHeaders="{Binding Path=(dxgr:GridControl.CurrentView).ShowColumnHeaders, RelativeSource={RelativeSource TemplatedParent}}" />
            <dxgr:FixedTotalSummaryContainerControl
                Grid.Row="4"
                dxb:BarManager.DXContextMenu="{Binding Path=(dxgr:GridControl.CurrentView).DataControlMenu, RelativeSource={RelativeSource TemplatedParent}}"
                dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                dxgr:GridPopupMenu.GridMenuType="FixedTotalSummary"
                DataContext="{Binding Path=(dxgr:GridControl.CurrentView).HeadersData, RelativeSource={RelativeSource TemplatedParent}}"
                Visibility="{Binding Path=(dxgr:GridControl.CurrentView).ShowFixedTotalSummary, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <dxgr:FilterPanelContainer
                x:Name="PART_FilterPanelContainer"
                Grid.Row="5"
                dxfui_local_native:FilteringPanelMasterDetailHelper.IsGroupRoot="True"
                View="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" />
            <dxgcore:FocusRectPresenter
                x:Name="PART_FocusRectPresenter"
                Grid.RowSpan="6"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                View="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" />
        </Grid>

        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxgt:ScrollBarHelper.AllowSetScrollHeight), ElementName=PART_HorizontalScrollBar}" Value="True">
                <Setter TargetName="PART_HorizontalScrollBar" Property="Height" Value="{DynamicResource {dxgt:LWKey ScrollBar.GridScrollBarSize}}" />
                <Setter TargetName="PART_VerticalScrollBar" Property="Width" Value="{DynamicResource {dxgt:LWKey ScrollBar.GridScrollBarSize}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dx:ScrollBarExtensions.ScrollBarMode), RelativeSource={RelativeSource TemplatedParent}}" Value="TouchOverlap">
                <Setter TargetName="gridScroll" Property="Visibility" Value="{Binding ComputedHorizontalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="gridTouchModeDataNavigator" Property="Visibility" Value="Visible" />
                <Setter TargetName="PART_DataNavigation" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="borderUpDataNavigatorTouch" Property="BorderThickness" Value="0,1,0,0" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxgr:GridControl.CurrentView).ShowDataNavigator, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter TargetName="gridScroll" Property="Visibility" Value="{Binding ComputedHorizontalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="gridTouchModeDataNavigator" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_DataNavigation" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(dxgr:GridControl.CurrentView).ShowDataNavigator, RelativeSource={RelativeSource Self}}" Value="True" />
                    <Condition Binding="{Binding Path=ComputedHorizontalScrollBarVisibility, RelativeSource={RelativeSource Self}}" Value="Collapsed" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_HorizontalScrollBar" Property="IsEnabled" Value="False" />
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding Path=(dxgr:GridControl.CurrentView).IsCompactMode, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter TargetName="PART_HeadersPanel" Property="Visibility" Value="{Binding Path=(dxgr:GridControl.CurrentView).ShowColumnHeaders, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxgr:GridControl.CurrentView).IsCompactMode, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="PART_HeadersPanel" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="gridScroll" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_FootersPanel" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxgr:GridControl.CurrentView).IsAdditionalElementScrollBarVisible, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="gridScroll" Property="Visibility" Value="Visible" />
                <Setter TargetName="PART_AdditionalElementScrollBarContainer" Property="Visibility" Value="Visible" />
                <Setter TargetName="PART_AdditionalElementHeaderContainer" Property="Visibility" Value="Visible" />
                <Setter TargetName="PART_AdditionalElementSplitterContainer" Property="Visibility" Value="Visible" />
                <Setter TargetName="PART_ScrollBarContainer" Property="Visibility" Value="{Binding ComputedHorizontalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxgr:GridControl.CurrentView).DataControl.(dxi:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="PART_HorizontalScrollBar" Property="Background" Value="{Binding Path=(dxgr:GridControl.CurrentView).DataControl.(dxi:AppearanceOptions.Background), RelativeSource={RelativeSource TemplatedParent}}" />
                <Setter TargetName="PART_VerticalScrollBar" Property="Background" Value="{Binding Path=(dxgr:GridControl.CurrentView).DataControl.(dxi:AppearanceOptions.Background), RelativeSource={RelativeSource TemplatedParent}}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>



    <ControlTemplate x:Key="{dxgt:LWKey TableView.ControlTemplate}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <ScrollViewer
                x:Name="scr"
                dx:ScrollBarExtensions.ScrollBehavior="{x:Null}"
                dxgr:GridControl.CurrentView="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                Focusable="False"
                HorizontalScrollBarVisibility="{Binding HorizontalScrollbarVisibility, RelativeSource={RelativeSource TemplatedParent}}"
                Template="{DynamicResource {dxgt:LWKey TableView.ScrollViewerTemplate}}"
                VerticalScrollBarVisibility="{Binding VerticalScrollbarVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                <ScrollViewer.CanContentScroll>True</ScrollViewer.CanContentScroll>
                <dx:ScrollBarExtensions.AllowMouseScrolling>
                    <Binding Path="(dxgr:GridControl.CurrentView).UseExtendedMouseScrolling" RelativeSource="{RelativeSource Self}" />
                </dx:ScrollBarExtensions.AllowMouseScrolling>

            </ScrollViewer>
            <dx:DXBorder
                Grid.Row="1"
                Padding="0,2,0,2"
                Background="{DynamicResource {dxgt:LWKey GridRow.FixedSummaryFillBrush}}"
                BorderBrush="{DynamicResource {dxgt:LWKey GridRow.TotalSummaryBorderBrush}}"
                BorderThickness="0,1,0,0"
                Visibility="{Binding ActualShowPager, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                <dxe:PagerControl x:Name="PART_PagerControl" />
            </dx:DXBorder>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:LWKey CardView.ControlTemplate}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <ScrollViewer
                x:Name="scr3"
                dx:ScrollBarExtensions.ScrollBehavior="{x:Null}"
                dxgr:GridControl.CurrentView="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                CanContentScroll="true"
                Focusable="False"
                HorizontalScrollBarVisibility="Auto"
                Template="{DynamicResource {dxgt:LWKey CardView.ScrollViewerTemplate}}"
                VerticalScrollBarVisibility="Auto">
                <dx:ScrollBarExtensions.AllowMouseScrolling>
                    <Binding Path="(dxgr:GridControl.CurrentView).UseExtendedMouseScrolling" RelativeSource="{RelativeSource Self}" />
                </dx:ScrollBarExtensions.AllowMouseScrolling>
                <dxmvvm:Interaction.Behaviors>
                    <dx:ScrollViewerTouchBehavior>
                        <dx:ScrollViewerTouchBehavior.Orientation>
                            <Binding ElementName="scr3" Path="(dxgr:GridControl.CurrentView).CardLayout">
                                <Binding.Converter>
                                    <dx:EnumToObjectConverter DefaultValue="Horizontal">
                                        <dx:EnumToObjectConverter.Values>
                                            <dx:EnumObjectProvider x:Key="Rows" Value="Vertical" />
                                        </dx:EnumToObjectConverter.Values>
                                    </dx:EnumToObjectConverter>
                                </Binding.Converter>
                            </Binding>
                        </dx:ScrollViewerTouchBehavior.Orientation>
                    </dx:ScrollViewerTouchBehavior>
                </dxmvvm:Interaction.Behaviors>
            </ScrollViewer>
            <dx:DXBorder
                Grid.Row="1"
                Padding="0,2,0,2"
                Background="{DynamicResource {dxgt:LWKey GridRow.FixedSummaryFillBrush}}"
                BorderBrush="{DynamicResource {dxgt:LWKey GridRow.TotalSummaryBorderBrush}}"
                BorderThickness="0,1,0,0"
                Visibility="{Binding ActualShowPager, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                <dxe:PagerControl x:Name="PART_PagerControl" />
            </dx:DXBorder>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:LWKey TableView.ExtendedColumnChooserTemplate}">
        <dx:NonLogicalDecorator>
            <dxgr:ExtendedColumnChooserControl FlowDirection="{Binding Path=(dxgr:GridControl.ActiveView).FlowDirection, RelativeSource={RelativeSource TemplatedParent}}" Owner="{Binding Path=(dxgr:GridControl.ActiveView), RelativeSource={RelativeSource TemplatedParent}}" />
        </dx:NonLogicalDecorator>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:LWKey TableView.ColumnChooserTemplate}">
        <dx:NonLogicalDecorator>
            <dxgr:ColumnChooserControl Columns="{Binding Path=Owner.ColumnChooserColumns, RelativeSource={RelativeSource Self}}" FlowDirection="{Binding Path=(dxgr:GridControl.ActiveView).FlowDirection, RelativeSource={RelativeSource TemplatedParent}}" Owner="{Binding Path=(dxgr:GridControl.ActiveView), RelativeSource={RelativeSource TemplatedParent}}">
                <dxgr:ColumnChooserControl.DragText>
                    <Binding
                        Converter="{StaticResource LocalizationStringValueConverter}"
                        ConverterParameter="ColumnChooserDragText"
                        Path="Owner.LocalizationDescriptor"
                        RelativeSource="{RelativeSource Self}" />
                </dxgr:ColumnChooserControl.DragText>
            </dxgr:ColumnChooserControl>
        </dx:NonLogicalDecorator>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:LWKey TableView.ColumnBandChooserTemplate}">
        <dx:NonLogicalDecorator>
            <dx:DXTabControl FlowDirection="{Binding Path=(dxgr:GridControl.ActiveView).FlowDirection, RelativeSource={RelativeSource TemplatedParent}}">
                <dx:DXTabItem>
                    <dx:DXTabItem.Header>
                        <Binding
                            Converter="{StaticResource LocalizationStringValueConverter}"
                            ConverterParameter="ColumnBandChooserColumnsTabCaption"
                            Path="(dxgr:GridControl.ActiveView).LocalizationDescriptor"
                            RelativeSource="{RelativeSource TemplatedParent}" />
                    </dx:DXTabItem.Header>
                    <dx:DXBorder Background="{DynamicResource {dxgt:LWKey TableView.ColumnChooserBackgroundBrush}}" BorderBrush="{DynamicResource {dxgt:LWKey TableView.ColumnChooserBorderBrush}}" BorderThickness="1">
                        <dxgr:ColumnChooserControl Columns="{Binding Path=Owner.ColumnChooserColumns, RelativeSource={RelativeSource Self}}" Owner="{Binding Path=(dxgr:GridControl.ActiveView), RelativeSource={RelativeSource TemplatedParent}}">
                            <dxgr:ColumnChooserControl.DragText>
                                <Binding
                                    Converter="{StaticResource LocalizationStringValueConverter}"
                                    ConverterParameter="ColumnChooserDragText"
                                    Path="Owner.LocalizationDescriptor"
                                    RelativeSource="{RelativeSource Self}" />
                            </dxgr:ColumnChooserControl.DragText>
                        </dxgr:ColumnChooserControl>
                    </dx:DXBorder>
                </dx:DXTabItem>
                <dx:DXTabItem>
                    <dx:DXTabItem.Header>
                        <Binding
                            Converter="{StaticResource LocalizationStringValueConverter}"
                            ConverterParameter="ColumnBandChooserBandsTabCaption"
                            Path="(dxgr:GridControl.ActiveView).LocalizationDescriptor"
                            RelativeSource="{RelativeSource TemplatedParent}" />
                    </dx:DXTabItem.Header>
                    <dx:DXBorder Background="{DynamicResource {dxgt:LWKey TableView.ColumnChooserBackgroundBrush}}" BorderBrush="{DynamicResource {dxgt:LWKey TableView.ColumnChooserBorderBrush}}" BorderThickness="1">
                        <dxgr:ColumnChooserControl Columns="{Binding Path=Owner.DataControl.BandsLayout.ColumnChooserBands, RelativeSource={RelativeSource Self}}" Owner="{Binding Path=(dxgr:GridControl.ActiveView), RelativeSource={RelativeSource TemplatedParent}}">
                            <dxgr:ColumnChooserControl.DragText>
                                <Binding
                                    Converter="{StaticResource LocalizationStringValueConverter}"
                                    ConverterParameter="BandChooserDragText"
                                    Path="Owner.LocalizationDescriptor"
                                    RelativeSource="{RelativeSource Self}" />
                            </dxgr:ColumnChooserControl.DragText>
                            <dxgr:ColumnChooserControl.ItemTemplate>
                                <DataTemplate>
                                    <dxgr:BandHeaderControl
                                        Margin="1,1,1,0"
                                        dxb:BarManager.DXContextMenu="{Binding Path=View.DataControlMenu}"
                                        dxgr:GridColumn.HeaderPresenterType="ColumnChooser"
                                        dxgr:GridColumnHeader.GridColumn="{Binding}"
                                        dxgr:GridPopupMenu.GridMenuType="Band"
                                        ColumnPosition="Standalone"
                                        DataContext="{Binding Path=Content.Column, RelativeSource={RelativeSource TemplatedParent}}"
                                        SnapsToDevicePixels="True" />
                                </DataTemplate>
                            </dxgr:ColumnChooserControl.ItemTemplate>
                            <dx:DragManager.DropTargetFactory>
                                <dxgcore:BandChooserDropTargetFactory />
                            </dx:DragManager.DropTargetFactory>
                        </dxgr:ColumnChooserControl>
                    </dx:DXBorder>
                </dx:DXTabItem>
            </dx:DXTabControl>
        </dx:NonLogicalDecorator>
    </ControlTemplate>
    <Style x:Key="{dxgt:LWKey GroupRow.GroupFooterRowStyle}" TargetType="{x:Type dx:DataContentPresenter}">
        <Setter Property="dxgr:FooterContentPresenter.Background" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupFooterRowContentBackground}}" />
    </Style>
    <Style x:Key="{dxgt:LWKey TreeListView.NodeFooterRowStyle}" TargetType="{x:Type dx:DataContentPresenter}">
        <Setter Property="dxgr:FooterContentPresenter.Background" Value="{DynamicResource {dxgt:LWKey TreeListView.NodeFooterRowContentBackground}}" />
    </Style>

    <DataTemplate x:Key="{dxgt:LWKey GroupRow.GroupFooterSummaryContainerTemplate}">
        <dxgr:GroupFooterSummaryControl
            dxb:BarManager.DXContextMenu="{Binding Path=Column.View.DataControlMenu}"
            dxgr:GridColumn.ActualVisibleIndex="{Binding Path=Column.(dxgr:GridColumn.ActualVisibleIndex)}"
            DataContext="{Binding Path=DataContext, RelativeSource={RelativeSource TemplatedParent}}"
            HeaderWidth="{Binding Path=ActualWidthFooter}"
            IsReady="{Binding Path=GroupRowData.IsReady}"
            Level="{Binding Path=GroupRowData.Level}">
            <dxgr:GridViewHitInfoBase.HitTestAcceptor>
                <dxght:GroupFooterSummaryTableViewHitTestAcceptor />
            </dxgr:GridViewHitInfoBase.HitTestAcceptor>
        </dxgr:GroupFooterSummaryControl>
    </DataTemplate>

    <DataTemplate x:Key="{dxgt:LWKey GroupRow.GroupFooterRowTemplate}">
        <dx:MeasurePixelSnapper>
            <ContentControl dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" Template="{DynamicResource {dxgt:LWKey GroupRow.GroupFooterRowContentTemplate}}">
                <Grid>
                    <dxgr:BandedViewContentSelector BandsLayout="{Binding Path=View.DataControl.BandsLayout}">
                        <dxgr:BandedViewContentSelector.TableViewContent>
                            <ControlTemplate>
                                <dxgr:GridGroupFooterScrollablePart
                                    dxgr:GridControl.CurrentView="{Binding Path=View}"
                                    FixedColumnsDelimiterTemplate="{DynamicResource {dxgt:LWKey GridRow.FixedColumnsDelimiterTemplate}}"
                                    FixedLeftVisibleColumns="{Binding Path=View.FixedLeftVisibleColumns}"
                                    FixedLineWidth="{Binding Path=View.FixedLineWidth}"
                                    FixedNoneContentWidth="{Binding Path=FixedNoneContentWidth}"
                                    FixedRightVisibleColumns="{Binding Path=View.FixedRightVisibleColumns}"
                                    Level="{Binding Path=GroupLevel}"
                                    ScrollingMargin="{Binding Path=View.ScrollingHeaderVirtualizationMargin}">
                                    <dxgr:GridGroupFooterScrollablePart.FixedLeftContent>
                                        <dxgr:TotalSummaryItemsControl ItemTemplate="{DynamicResource {dxgt:LWKey GroupRow.GroupFooterSummaryContainerTemplate}}" ItemsPanel="{DynamicResource {dxgt:LWKey TableView.FixedLeftNoneDropPanelTemplate}}" ItemsSource="{Binding Path=FixedLeftGroupSummaryData}" />
                                    </dxgr:GridGroupFooterScrollablePart.FixedLeftContent>
                                    <dxgr:GridGroupFooterScrollablePart.FixedRightContent>
                                        <dxgr:TotalSummaryItemsControl ItemTemplate="{DynamicResource {dxgt:LWKey GroupRow.GroupFooterSummaryContainerTemplate}}" ItemsPanel="{DynamicResource {dxgt:LWKey TableView.FixedRightNoneDropPanelTemplate}}" ItemsSource="{Binding FixedRightGroupSummaryData}" />
                                    </dxgr:GridGroupFooterScrollablePart.FixedRightContent>
                                    <dxgr:GridGroupFooterScrollablePart.FixedNoneContent>
                                        <dxgr:TotalSummaryItemsControl
                                            x:Name="footerItemsControl"
                                            ItemTemplate="{DynamicResource {dxgt:LWKey GroupRow.GroupFooterSummaryContainerTemplate}}"
                                            ItemsPanel="{DynamicResource {dxgt:LWKey TableView.FixedNoneDropPanelTemplate}}"
                                            ItemsSource="{Binding FixedNoneGroupSummaryData}" />
                                    </dxgr:GridGroupFooterScrollablePart.FixedNoneContent>
                                </dxgr:GridGroupFooterScrollablePart>
                            </ControlTemplate>
                        </dxgr:BandedViewContentSelector.TableViewContent>
                        <dxgr:BandedViewContentSelector.BandedViewContent>
                            <ControlTemplate>
                                <dxgr:GridGroupFooterScrollablePart
                                    dxgr:GridControl.CurrentView="{Binding Path=View}"
                                    FixedLeftVisibleColumns="{Binding Path=View.DataControl.BandsLayout.FixedLeftVisibleBands}"
                                    FixedLineWidth="{Binding Path=View.FixedLineWidth}"
                                    FixedNoneContentWidth="{Binding Path=FixedNoneContentWidth}"
                                    FixedRightVisibleColumns="{Binding Path=View.DataControl.BandsLayout.FixedRightVisibleBands}"
                                    ScrollingMargin="{Binding Path=View.ScrollingHeaderVirtualizationMargin}">
                                    <dxgr:GridGroupFooterScrollablePart.FixedLeftContent>
                                        <dxgr:BandedViewTotalSummaryControl dxgr:GridControl.CurrentView="{Binding Path=View}" ItemTemplate="{DynamicResource {dxgt:LWKey GroupRow.GroupFooterSummaryContainerTemplate}}" ItemsSource="{Binding FixedLeftGroupSummaryData}">
                                            <dxgr:BandedViewTotalSummaryControl.ItemsPanel>
                                                <ControlTemplate>
                                                    <dxgr:GroupFooterBandsNoneDropPanel Bands="{Binding Path=View.DataControl.BandsLayout.FixedLeftVisibleBands}" Level="{Binding Level}" />
                                                </ControlTemplate>
                                            </dxgr:BandedViewTotalSummaryControl.ItemsPanel>
                                        </dxgr:BandedViewTotalSummaryControl>
                                    </dxgr:GridGroupFooterScrollablePart.FixedLeftContent>
                                    <dxgr:GridGroupFooterScrollablePart.FixedRightContent>
                                        <dxgr:BandedViewTotalSummaryControl dxgr:GridControl.CurrentView="{Binding Path=View}" ItemTemplate="{DynamicResource {dxgt:LWKey GroupRow.GroupFooterSummaryContainerTemplate}}" ItemsSource="{Binding FixedRightGroupSummaryData}">
                                            <dxgr:BandedViewTotalSummaryControl.ItemsPanel>
                                                <ControlTemplate>
                                                    <dxgr:GroupFooterBandsNoneDropPanel Bands="{Binding Path=View.DataControl.BandsLayout.FixedRightVisibleBands}" Level="{Binding Level}" />
                                                </ControlTemplate>
                                            </dxgr:BandedViewTotalSummaryControl.ItemsPanel>
                                        </dxgr:BandedViewTotalSummaryControl>
                                    </dxgr:GridGroupFooterScrollablePart.FixedRightContent>
                                    <dxgr:GridGroupFooterScrollablePart.FixedNoneContent>
                                        <dxgr:BandedViewTotalSummaryControl
                                            x:Name="footerItemsControl"
                                            dxgr:GridControl.CurrentView="{Binding Path=View}"
                                            ItemTemplate="{DynamicResource {dxgt:LWKey GroupRow.GroupFooterSummaryContainerTemplate}}"
                                            ItemsSource="{Binding FixedNoneGroupSummaryData}">
                                            <dxgr:BandedViewTotalSummaryControl.ItemsPanel>
                                                <ControlTemplate>
                                                    <dxgr:GroupFooterBandsNoneDropPanel Bands="{Binding Path=View.DataControl.BandsLayout.FixedNoneVisibleBands}" Level="{Binding Level}" />
                                                </ControlTemplate>
                                            </dxgr:BandedViewTotalSummaryControl.ItemsPanel>
                                        </dxgr:BandedViewTotalSummaryControl>
                                    </dxgr:GridGroupFooterScrollablePart.FixedNoneContent>
                                </dxgr:GridGroupFooterScrollablePart>
                            </ControlTemplate>
                        </dxgr:BandedViewContentSelector.BandedViewContent>
                    </dxgr:BandedViewContentSelector>
                </Grid>
            </ContentControl>
        </dx:MeasurePixelSnapper>
    </DataTemplate>
    <dxgcore:DefaultDataTemplate x:Key="{dxgt:LWKey GroupRow.GroupRowTemplate}">
        <dx:MeasurePixelSnapper>
            <dxgr:GroupGridRowContent x:Name="PART_GroupRowContent" Style="{Binding Path=View.GroupRowStyle}">
                <dx:DXDockPanel>
                    <dxgr:GridGroupExpandButton
                        x:Name="Toggle"
                        Margin="{DynamicResource {dxgt:LWKey GroupRow.ExpandButtonMargin}}"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Command="{Binding View.Commands.ChangeGroupExpanded}"
                        CommandParameter="{Binding RowHandle.Value}"
                        Foreground="{Binding Foreground, ElementName=PART_GroupRowContent}"
                        IsChecked="{Binding Path=IsRowExpanded}" />
                    <dxe:CheckEdit
                        x:Name="PART_CheckBoxRowSelector"
                        Margin="{DynamicResource {dxgt:LWKey GroupRow.CheckBoxSelectorMargin}}"
                        Padding="0"
                        VerticalAlignment="Center"
                        Focusable="False"
                        IsChecked="{Binding AllItemsSelected, Mode=TwoWay}"
                        IsEnabled="{Binding EnabledSelected}"
                        IsReadOnly="{Binding View.HasValidationError}">
                        <dx:DoubleClicker.IsDoubleClickArea>False</dx:DoubleClicker.IsDoubleClickArea>
                        <dxgr:GridViewHitInfoBase.HitTestAcceptor>
                            <dxght:GroupRowCheckBoxTableViewHitTestAcceptor />
                        </dxgr:GridViewHitInfoBase.HitTestAcceptor>
                    </dxe:CheckEdit>
                    <ItemsControl x:Name="groupValueContentPresenter" ItemsSource="{Binding GroupValues}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <dxgr:GroupValueContentPresenter Content="{Binding}" ContentTemplateSelector="{Binding Column.ActualGroupValueTemplateSelector}" />
                                    <dxgr:GroupValueSeparator Content="; ">
                                        <dxgr:GroupValueSeparator.Visibility>
                                            <Binding Path="ShowSeparator">
                                                <Binding.Converter>
                                                    <dx:BooleanToVisibilityConverter />
                                                </Binding.Converter>
                                            </Binding>
                                        </dxgr:GroupValueSeparator.Visibility>
                                    </dxgr:GroupValueSeparator>
                                </StackPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel HorizontalAlignment="Left" VerticalAlignment="Center" Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                    <dxgr:GroupSummaryContainer x:Name="PART_GroupSummaryPlaceHolder" dxgcore:RowData.CurrentRowData="{Binding}" />
                </dx:DXDockPanel>
            </dxgr:GroupGridRowContent>
        </dx:MeasurePixelSnapper>
        <DataTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter TargetName="Toggle" Property="Margin" Value="15,10,0,9" />
            </Trigger>
            <DataTrigger Binding="{Binding View.DataControl.BandsLayout, Converter={StaticResource objectToBooleanConverter}}" Value="True">
                <DataTrigger.Setters>
                    <Setter TargetName="groupValueContentPresenter" Property="Margin" Value="{DynamicResource {dxgt:LWKey GroupRow.BandedGroupValuePresenterMargin}}" />
                </DataTrigger.Setters>
            </DataTrigger>
            <DataTrigger Binding="{Binding View.ActualShowCheckBoxInGroupRow}" Value="False">
                <Setter TargetName="PART_CheckBoxRowSelector" Property="Visibility" Value="{Binding View.ActualShowCheckBoxSelectorInGroupRow, Converter={StaticResource BooleanToVisibilityConverter}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding View.ActualShowCheckBoxInGroupRow}" Value="True">
                <Setter TargetName="PART_CheckBoxRowSelector" Property="Visibility" Value="Visible" />
                <Setter TargetName="PART_CheckBoxRowSelector" Property="IsEnabled" Value="True" />
                <Setter TargetName="PART_CheckBoxRowSelector" Property="IsReadOnly" Value="False" />
                <Setter TargetName="PART_CheckBoxRowSelector" Property="IsChecked" Value="{Binding IsChecked, Mode=TwoWay}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </dxgcore:DefaultDataTemplate>
    <ControlTemplate x:Key="{dxgt:LWKey TableView.EditFormItemsPanelTemplate}">
        <Grid />
    </ControlTemplate>
    <DataTemplate x:Key="{dxgt:LWKey TableView.EditFormItemTemplate}">
        <ContentPresenter>
            <ContentPresenter.ContentTemplateSelector>
                <dxgr:EditFormCellTemplateSelector>
                    <dxgr:EditFormCellTemplateSelector.CaptionTemplate>
                        <DataTemplate>
                            <TextBlock
                                Margin="16,0,12,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Text="{Binding Caption}" />
                        </DataTemplate>
                    </dxgr:EditFormCellTemplateSelector.CaptionTemplate>
                    <dxgr:EditFormCellTemplateSelector.EditorTemplate>
                        <DataTemplate>
                            <dxgr:EditFormEditor Margin="0,0,19,4" EditFormCellData="{Binding}" />
                        </DataTemplate>
                    </dxgr:EditFormCellTemplateSelector.EditorTemplate>
                </dxgr:EditFormCellTemplateSelector>
            </ContentPresenter.ContentTemplateSelector>
        </ContentPresenter>
    </DataTemplate>
    <DataTemplate x:Key="{dxgt:LWKey TableView.EditFormContentTemplate}">
        <Grid KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <dxgr:EditFormControl
                Margin="0,12,0,0"
                ItemsSource="{Binding EditFormCellData}"
                KeyboardNavigation.IsTabStop="False"
                LayoutSettings="{Binding LayoutSettings}">
                <dxmvvm:Interaction.Behaviors>
                    <dxmvvm:EventToCommand Command="{Binding EditFormLoadedCommand}" EventName="Loaded" />
                </dxmvvm:Interaction.Behaviors>
            </dxgr:EditFormControl>
            <StackPanel
                Grid.Row="1"
                MinHeight="27"
                Margin="0,11,19,16"
                HorizontalAlignment="Right"
                Orientation="Horizontal"
                Visibility="{Binding ShowUpdateCancelButtons, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Button MinWidth="83" Command="{Binding CommitCommand}">
                    <Button.Content>
                        <Binding Converter="{StaticResource LocalizationStringValueConverter}" ConverterParameter="EditForm_UpdateButton" Path="Source.View.LocalizationDescriptor" />
                    </Button.Content>
                </Button>
                <Button MinWidth="83" Margin="10,0,0,0" Command="{Binding CancelCommand}">
                    <Button.Content>
                        <Binding Converter="{StaticResource LocalizationStringValueConverter}" ConverterParameter="EditForm_CancelButton" Path="Source.View.LocalizationDescriptor" />
                    </Button.Content>
                </Button>
            </StackPanel>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="{dxgt:LWKey TableView.EditFormDialogServiceTemplate}">
        <ContentControl>
            <dx:DialogService DialogWindowStartupLocation="CenterOwner">
                <dx:DialogService.ViewTemplate>
                    <DataTemplate>
                        <dxgr:PopupEditFormContainer
                            dxgcore:DataControlBase.ActiveView="{Binding Source.View}"
                            Content="{Binding}"
                            ContentTemplate="{Binding Path=Source.View.EditFormTemplate}"
                            KeyboardNavigation.IsTabStop="False" />
                    </DataTemplate>
                </dx:DialogService.ViewTemplate>
                <dx:DialogService.DialogStyle>
                    <Style TargetType="{x:Type dx:ThemedWindow}">
                        <Setter Property="ShowInTaskbar" Value="False" />
                        <Setter Property="WindowStyle" Value="ToolWindow" />
                        <Setter Property="ShowIcon" Value="False" />
                        <Setter Property="UseLayoutRounding" Value="True" />
                        <Setter Property="Width" Value="900" />
                        <Setter Property="ResizeMode" Value="NoResize" />
                        <Setter Property="SizeToContent" Value="Height" />
                    </Style>
                </dx:DialogService.DialogStyle>
            </dx:DialogService>
        </ContentControl>
    </DataTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\GridView.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\PrintingTemplates.xaml-->

    <!-- PROCESS SETTERS WITH BINDING -->
    <Style x:Key="{dxgt:LWKey TableView.DefaultPrintStyleBase}" TargetType="dxe:BaseEdit">

        <Setter Property="Padding" Value="2" />
        <Setter Property="IsPrintingMode" Value="True" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>
    <Style x:Key="{dxgt:LWKey TableView.DefaultPrintHeaderStyle}" BasedOn="{StaticResource {dxgt:LWKey TableView.DefaultPrintStyleBase}}" TargetType="dxe:BaseEdit">
        <Setter Property="BorderThickness" Value="{Binding Path=(dxgr:GridPrintingHelper.PrintCellInfo), Converter={StaticResource PrintHeaderBorderConverter}, ConverterParameter=1}" />
        <Setter Property="Background" Value="{StaticResource PrintHeaderBackColor}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=(dxgr:GridPrintingHelper.PrintCellInfo).HorizontalHeaderContentAlignment}" />
    </Style>
    <Style x:Key="{dxgt:LWKey TableView.DefaultPrintGroupRowStyle}" BasedOn="{StaticResource {dxgt:LWKey TableView.DefaultPrintStyleBase}}" TargetType="dxe:BaseEdit">
        <Style.Setters>
            <Setter Property="Background" Value="#FFDCDCDC" />
        </Style.Setters>
    </Style>
    <Style x:Key="{dxgt:LWKey TableView.DefaultPrintGroupFooterStyle}" BasedOn="{StaticResource {dxgt:LWKey TableView.DefaultPrintStyleBase}}" TargetType="dxe:BaseEdit">
        <Setter Property="BorderThickness" Value="{Binding Path=(dxgr:GridPrintingHelper.PrintGroupSummaryInfo).IsRight, Converter={StaticResource PrintBorderConverter}}" />
        <Setter Property="Background" Value="{StaticResource PrintHeaderBackColor}" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="dxp:TextExportSettings.TextWrapping" Value="Wrap" />
        <Setter Property="UseLayoutRounding" Value="True" />
    </Style>
    <Style x:Key="{dxgt:LWKey TableView.DefaultPrintCellStyle}" BasedOn="{StaticResource {dxgt:LWKey TableView.DefaultPrintStyleBase}}" TargetType="dxe:BaseEdit">
        <Setter Property="BorderThickness" Value="{Binding Path=(dxgr:GridPrintingHelper.PrintCellInfo).PrintCellThickness}" />
        <Setter Property="AllowUpdateTextBlockWhenPrinting" Value="False" />
    </Style>
    <Style x:Key="{dxgt:LWKey TableView.DefaultPrintTotalSummaryStyle}" BasedOn="{StaticResource {dxgt:LWKey TableView.DefaultPrintStyleBase}}" TargetType="dxe:BaseEdit">
        <Setter Property="BorderThickness" Value="{Binding Path=(dxgr:GridPrintingHelper.PrintCellInfo), Converter={StaticResource PrintTotalSummaryCellConverter}}" />
        <Setter Property="Background" Value="{StaticResource PrintHeaderBackColor}" />
        <Setter Property="dxp:TextExportSettings.TextTrimming" Value="None" />
        <Setter Property="dxp:TextExportSettings.TextWrapping" Value="Wrap" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=(dxgr:GridPrintingHelper.PrintCellInfo).HorizontalTotalSummaryContentAlignment}" />
    </Style>
    <Style x:Key="{dxgt:LWKey TableView.DefaultPrintFixedTotalSummaryStyle}" BasedOn="{StaticResource {dxgt:LWKey TableView.DefaultPrintStyleBase}}" TargetType="dxe:TextEdit">
        <Style.Setters>
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="VerticalContentAlignment" Value="Top" />
            <Setter Property="Background" Value="{StaticResource PrintHeaderBackColor}" />
            <Setter Property="BorderThickness">
                <Setter.Value>
                    <MultiBinding>
                        <MultiBinding.Bindings>
                            <Binding Path="Name" RelativeSource="{RelativeSource Self}" />
                            <Binding Path="Content" />
                        </MultiBinding.Bindings>
                        <MultiBinding.Converter>
                            <dxgr:FixedTotalSummaryBorderThicknessConverter BorderThickness="1" />
                        </MultiBinding.Converter>
                    </MultiBinding>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <Style x:Key="{dxgt:LWKey TableView.DefaultPrintRowIndentStyle}" TargetType="Control">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <dxe:TextEdit
                        Name="PART_Edit"
                        Width="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).PrintDataIndent}"
                        Margin="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).PrintDataIndentMargin}"
                        dxp:TextExportSettings.NoTextExport="True"
                        Background="Transparent"
                        BorderThickness="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).PrintDataIndentBorderThickness}"
                        Style="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).PrintGroupRowStyle}">
                        <dxp:ExportSettings.OnPageUpdater>
                            <dxgr:LastOnPageUpdater />
                        </dxp:ExportSettings.OnPageUpdater>
                    </dxe:TextEdit>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxgt:LWKey TreeListView.DefaultPrintRowIndentStyle}" TargetType="Control">
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="UseLayoutRounding" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Name="panel" dxp:ExportSettings.TargetType="Panel" Orientation="Horizontal">
                        <Grid
                            Width="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).EmptyIndentWidth}"
                            VerticalAlignment="Stretch"
                            dxp:ExportSettings.BorderColor="{Binding Path=BorderBrush.Color, RelativeSource={RelativeSource TemplatedParent}}"
                            dxp:ExportSettings.BorderThickness="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).EmptyIndentBorderThickness}"
                            dxp:ExportSettings.TargetType="Text"
                            Background="Transparent" />
                        <Grid
                            Width="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).PrintButtonIndent}"
                            VerticalAlignment="Stretch"
                            dxp:ExportSettings.BorderColor="{Binding Path=BorderBrush.Color, RelativeSource={RelativeSource TemplatedParent}}"
                            dxp:ExportSettings.BorderThickness="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).PrintButtonIndentBorderThickness}"
                            dxp:ExportSettings.TargetType="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).PrintButtonTargetType}"
                            dxp:ImageExportSettings.ImageKey="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).PrintButtonKey}"
                            Background="Transparent">
                            <Grid>
                                <Grid.Visibility>
                                    <Binding Path="Content.(dxgr:GridPrintingHelper.PrintRowInfo).RowState">
                                        <Binding.Converter>
                                            <dx:EnumToObjectConverter DefaultValue="Collapsed">
                                                <dx:EnumToObjectConverter.Values>
                                                    <dx:EnumObjectProvider x:Key="Expanded" Value="Visible" />
                                                    <dx:EnumObjectProvider x:Key="Collapsed" Value="Visible" />
                                                </dx:EnumToObjectConverter.Values>
                                            </dx:EnumToObjectConverter>
                                        </Binding.Converter>
                                    </Binding>
                                </Grid.Visibility>
                                <Grid Margin="0,0,4,0" HorizontalAlignment="Right" VerticalAlignment="Center">
                                    <dx:DXBorder
                                        x:Name="border"
                                        Width="11"
                                        Height="11"
                                        BorderBrush="{TemplateBinding Foreground}"
                                        BorderThickness="1" />
                                    <Grid Background="Transparent">
                                        <Rectangle
                                            Width="7"
                                            Height="1"
                                            Margin="0,2,0,2"
                                            Fill="{TemplateBinding Foreground}"
                                            Stroke="{x:Null}" />
                                        <Rectangle
                                            Width="1"
                                            Height="7"
                                            Margin="2,0,2,0"
                                            Fill="{TemplateBinding Foreground}"
                                            Stroke="{x:Null}">
                                            <Rectangle.Visibility>
                                                <Binding Path="Content.(dxgr:GridPrintingHelper.PrintRowInfo).RowState">
                                                    <Binding.Converter>
                                                        <dx:EnumToObjectConverter DefaultValue="Collapsed">
                                                            <dx:EnumToObjectConverter.Values>
                                                                <dx:EnumObjectProvider x:Key="Collapsed" Value="Visible" />
                                                            </dx:EnumToObjectConverter.Values>
                                                        </dx:EnumToObjectConverter>
                                                    </Binding.Converter>
                                                </Binding>
                                            </Rectangle.Visibility>
                                        </Rectangle>
                                    </Grid>
                                </Grid>
                            </Grid>
                        </Grid>
                        <!-- End Button -->
                        <!-- Image -->
                        <Grid
                            Width="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).PrintImageIndent}"
                            VerticalAlignment="Stretch"
                            dxp:ExportSettings.BorderColor="{Binding Path=BorderBrush.Color, RelativeSource={RelativeSource TemplatedParent}}"
                            dxp:ExportSettings.BorderThickness="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).PrintImageIndentBorderThickness}"
                            dxp:ExportSettings.TargetType="Image"
                            Background="Transparent">
                            <Grid>
                                <Grid.Visibility>
                                    <Binding Path="Content.(dxgr:GridPrintingHelper.PrintRowInfo).Image">
                                        <Binding.Converter>
                                            <dx:ObjectToVisibilityConverter HandleList="False" />
                                        </Binding.Converter>
                                    </Binding>
                                </Grid.Visibility>
                                <Image
                                    Width="16"
                                    Height="16"
                                    Margin="2,0,2,0"
                                    VerticalAlignment="Center"
                                    Source="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).Image}" />
                            </Grid>
                        </Grid>
                        <!-- End Image -->
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).ShowIndentTopBorder}" Value="True">
                            <DataTrigger.Setters>
                                <Setter TargetName="panel" Property="dxp:ExportSettings.OnPageUpdater">
                                    <Setter.Value>
                                        <dxgr:IndentBorderUpdater />
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger.Setters>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).ShowIndentHorizontalLines}" Value="false">
                            <DataTrigger.Setters>
                                <Setter TargetName="panel" Property="dxp:ExportSettings.OnPageUpdater">
                                    <Setter.Value>
                                        <dxgr:IndentBorderUpdater UpdateBottomBorder="True" />
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger.Setters>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="{dxgt:LWKey TableView.PrintGroupRowTemplate}">
        <StackPanel Orientation="Horizontal">
            <dxgr:CellFillControl Style="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).PrintRowIndentStyle}" />
            <dxgr:FixedTotalSummaryPrintPanel Width="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintGroupRowInfo).CaptionCell.Width}">
                <dxgr:PrintTextEdit
                    x:Name="PART_EditLeft"
                    HorizontalAlignment="Stretch"
                    dxp:TextExportSettings.TextTrimming="None"
                    BorderThickness="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintGroupRowInfo).CaptionCell, Converter={StaticResource PrintGroupSummaryBorderConverter}}"
                    DetailLevel="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintGroupRowInfo).CaptionCell.DetailLevel}"
                    EditValue="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintGroupRowInfo).CaptionCell.Text, Mode=OneWay}"
                    IsBottomRow="True"
                    IsTopBorderVisible="True"
                    Style="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintGroupRowInfo).CaptionCell.PrintGroupRowStyle}" />
                <dxgr:PrintTextEdit
                    x:Name="PART_EditRight"
                    HorizontalAlignment="Right"
                    dxp:TextExportSettings.TextTrimming="None"
                    BorderThickness="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintGroupRowInfo).FirstColumnCell, Converter={StaticResource PrintGroupSummaryBorderConverter}}"
                    DetailLevel="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintGroupRowInfo).FirstColumnCell.DetailLevel}"
                    EditValue="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintGroupRowInfo).FirstColumnCell.Text, Mode=OneWay}"
                    IsBottomRow="True"
                    IsTopBorderVisible="True"
                    Style="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintGroupRowInfo).FirstColumnCell.PrintGroupRowStyle}"
                    Visibility="{Binding EditValue, RelativeSource={RelativeSource Self}, Converter={StaticResource StringToVisibilityConverter}}" />
            </dxgr:FixedTotalSummaryPrintPanel>
            <dxgr:PrintingGroupItemsControl ItemsSource="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintGroupRowInfo).GroupCells}">
                <dxgr:PrintingGroupItemsControl.ItemTemplate>
                    <DataTemplate>
                        <dxgr:PrintTextEdit
                            Width="{Binding Width}"
                            HorizontalContentAlignment="Right"
                            dxp:TextExportSettings.TextTrimming="None"
                            BorderThickness="{Binding Converter={StaticResource PrintGroupSummaryBorderConverter}}"
                            DetailLevel="{Binding DetailLevel}"
                            EditValue="{Binding Text, Mode=OneWay}"
                            IsBottomRow="True"
                            IsTopBorderVisible="True"
                            Style="{Binding PrintGroupRowStyle}" />
                    </DataTemplate>
                </dxgr:PrintingGroupItemsControl.ItemTemplate>
                <dxgr:PrintingGroupItemsControl.ItemsPanel>
                    <ControlTemplate>
                        <dx:StackVisibleIndexPanel ArrangeAccordingToVisibleIndex="True" Orientation="Horizontal" />
                    </ControlTemplate>
                </dxgr:PrintingGroupItemsControl.ItemsPanel>
            </dxgr:PrintingGroupItemsControl>
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="{dxgt:LWKey TableView.PrintGroupFooterTemplate}">
        <dxgr:PrintRowStackPanel IsRowDataBottomIndentVisible="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).IsPrintBottomDetailIndentVisible}" IsRowDataBottomLastIndentVisible="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).IsPrintBottomLastDetailIndentVisible}">
            <StackPanel Orientation="Horizontal">
                <dxgr:CellFillControl Style="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).PrintRowIndentStyle}" Visibility="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).IsCellFillControlVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <dxgr:PrintingGroupFooterItemsControl ItemsSource="{Binding Path=Content.FixedNoneGroupSummaryData}">
                    <dxgr:PrintingGroupFooterItemsControl.ItemTemplate>
                        <DataTemplate>
                            <dxgr:PrintTextEdit
                                Width="{Binding Path=(dxgr:GridPrintingHelper.PrintGroupSummaryInfo).PrintColumnWidth}"
                                DetailLevel="{Binding Path=GroupRowData.(dxgr:GridPrintingHelper.PrintRowInfo).DetailLevel}"
                                EditValue="{Binding Path=(dxgr:GridPrintingHelper.PrintGroupSummaryInfo).GroupFooterText, Mode=OneWay}"
                                IsTopBorderVisible="{Binding Path=GroupRowData.(dxgr:GridPrintingHelper.PrintRowInfo).IsPrintTopDetailRowVisible}"
                                Style="{Binding Path=(dxgr:GridPrintingHelper.PrintGroupSummaryInfo).PrintGroupFooterStyle}" />
                        </DataTemplate>
                    </dxgr:PrintingGroupFooterItemsControl.ItemTemplate>
                    <dxgr:PrintingGroupFooterItemsControl.ItemsPanel>
                        <Binding Path="Content.(dxgr:GridPrintingHelper.PrintRowInfo).BandsLayout">
                            <Binding.Converter>
                                <dxgr:BandsLayoutTemplateConverter>
                                    <dxgr:BandsLayoutTemplateConverter.TableViewTemplate>
                                        <ControlTemplate>
                                            <dx:StackVisibleIndexPanel ArrangeAccordingToVisibleIndex="True" Orientation="Horizontal" />
                                        </ControlTemplate>
                                    </dxgr:BandsLayoutTemplateConverter.TableViewTemplate>
                                    <dxgr:BandsLayoutTemplateConverter.BandedViewTemplate>
                                        <ControlTemplate>
                                            <dxgr:PrintBandsColumnsPanel Bands="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).BandsLayout.VisibleBands}" IsFooterPanel="True" />
                                        </ControlTemplate>
                                    </dxgr:BandsLayoutTemplateConverter.BandedViewTemplate>
                                </dxgr:BandsLayoutTemplateConverter>
                            </Binding.Converter>
                        </Binding>
                    </dxgr:PrintingGroupFooterItemsControl.ItemsPanel>
                </dxgr:PrintingGroupFooterItemsControl>
            </StackPanel>
            <dxgr:RowDataBottomIndentControl Height="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).DetailTopIndent}" Visibility="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).IsPrintBottomDetailIndentVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <dxgr:RowDataBottomLastIndentControl Height="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).DetailBottomIndent}" Visibility="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).IsPrintBottomLastDetailIndentVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
        </dxgr:PrintRowStackPanel>
    </DataTemplate>
    <DataTemplate x:Key="{dxgt:LWKey TableView.PrintRowTemplate}">
        <dxgr:PrintRowStackPanel IsRowDataBottomIndentVisible="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).IsPrintBottomDetailIndentVisible}" IsRowDataBottomLastIndentVisible="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).IsPrintBottomLastDetailIndentVisible}" UseLayoutRounding="True">
            <StackPanel Orientation="Horizontal">
                <Grid x:Name="indentContainer" Visibility="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).ShowGridElement, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <dxgr:CellFillControl Style="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).PrintRowIndentStyle}" Visibility="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).IsCellFillControlVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    <dxgr:PartialGroupingLineControl
                        Grid.Row="1"
                        Height="1"
                        dxp:ExportSettings.Background="Black"
                        dxp:ExportSettings.TargetType="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).ShowRowBreak, Converter={StaticResource partialGroupingBorderConverter}}"
                        Visibility="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).ShowIndentRowBreak, Converter={StaticResource BooleanToVisibilityConverter}}" />
                </Grid>
                <Grid x:Name="rowContainer" Visibility="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).ShowGridElement, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <dxgr:PrintingCellItemsControl x:Name="rowItemsControl" ItemsSource="{Binding Path=Content.CellData}">
                        <dxgr:PrintingCellItemsControl.ItemTemplate>
                            <DataTemplate>
                                <dxgr:GridCellContentPresenter Width="{Binding Path=(dxgr:GridPrintingHelper.PrintCellInfo).PrintColumnWidth}" Column="{Binding Column}" RowData="{Binding RowData}">
                                    <dxgr:GridCellContentPresenter.Template>
                                        <ControlTemplate>
                                            <dxgr:PrintCellEditor
                                                x:Name="PART_CellEditor"
                                                Width="{Binding Path=(dxgr:GridPrintingHelper.PrintCellInfo).PrintColumnWidth}"
                                                DetailLevel="{Binding Path=RowData.(dxgr:GridPrintingHelper.PrintRowInfo).DetailLevel, RelativeSource={RelativeSource TemplatedParent}}"
                                                IsTopBorderVisible="{Binding Path=RowData.(dxgr:GridPrintingHelper.PrintRowInfo).IsPrintTopDetailRowVisible, RelativeSource={RelativeSource TemplatedParent}}" />
                                        </ControlTemplate>
                                    </dxgr:GridCellContentPresenter.Template>
                                </dxgr:GridCellContentPresenter>
                            </DataTemplate>
                        </dxgr:PrintingCellItemsControl.ItemTemplate>
                        <dxgr:PrintingCellItemsControl.ItemsPanel>
                            <Binding Path="Content.(dxgr:GridPrintingHelper.PrintRowInfo).BandsLayout">
                                <Binding.Converter>
                                    <dxgr:BandsLayoutTemplateConverter>
                                        <dxgr:BandsLayoutTemplateConverter.TableViewTemplate>
                                            <ControlTemplate>
                                                <dx:StackVisibleIndexPanel ArrangeAccordingToVisibleIndex="True" Orientation="Horizontal" />
                                            </ControlTemplate>
                                        </dxgr:BandsLayoutTemplateConverter.TableViewTemplate>
                                        <dxgr:BandsLayoutTemplateConverter.BandedViewTemplate>
                                            <ControlTemplate>
                                                <dxgr:PrintBandsCellsPanel Bands="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).BandsLayout.VisibleBands}" FixedNoneContentWidth="{Binding Path=Content.FixedNoneContentWidth}" Level="{Binding Path=Content.Level}" />
                                            </ControlTemplate>
                                        </dxgr:BandsLayoutTemplateConverter.BandedViewTemplate>
                                    </dxgr:BandsLayoutTemplateConverter>
                                </Binding.Converter>
                            </Binding>
                        </dxgr:PrintingCellItemsControl.ItemsPanel>
                    </dxgr:PrintingCellItemsControl>
                    <dxgr:PartialGroupingLineControl
                        Grid.Row="1"
                        Height="1"
                        dxp:ExportSettings.Background="Black"
                        dxp:ExportSettings.TargetType="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).ShowRowBreak, Converter={StaticResource partialGroupingBorderConverter}}"
                        Visibility="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).ShowRowBreak, Converter={StaticResource BooleanToVisibilityConverter}}" />
                </Grid>
                <ContentControl
                    x:Name="PART_AdditionalElement"
                    Panel.ZIndex="-10"
                    Content="{Binding Content}"
                    ContentTemplate="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).AdditionalElementTemplate}"
                    Visibility="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).ShowAdditionalElement, Converter={StaticResource BooleanToVisibilityConverter}}" />
            </StackPanel>
            <dxgr:RowDataBottomIndentControl Height="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).DetailTopIndent}" Visibility="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).IsPrintBottomDetailIndentVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <dxgr:RowDataBottomLastIndentControl Height="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).DetailBottomIndent}" Visibility="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).IsPrintBottomLastDetailIndentVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
        </dxgr:PrintRowStackPanel>
    </DataTemplate>
    <DataTemplate x:Key="{dxgt:LWKey TableView.PrintHeaderTemplate}">
        <StackPanel Margin="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).PrintDataIndentMargin}" dxp:ExportSettings.TargetType="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).IsPrintHeaderBottomIndentVisible, Converter={StaticResource headerPanelExportTypeConverter}}" UseLayoutRounding="True">
            <dxgr:HeaderFillControl
                Width="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).TotalHeaderWidth}"
                Height="2"
                BorderThickness="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).PrintDataIndentBorderThickness}"
                Visibility="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).IsPrintTopRowVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <dxgr:HeaderFillControl.Template>
                    <ControlTemplate>
                        <dxe:TextEdit
                            Height="2"
                            Padding="0"
                            dxp:ExportSettings.BorderThickness="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).PrintDataIndentBorderThickness}"
                            dxp:ExportSettings.TargetType="Text"
                            dxp:TextExportSettings.NoTextExport="True"
                            Background="Transparent"
                            Style="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).PrintColumnHeaderStyle}" />
                    </ControlTemplate>
                </dxgr:HeaderFillControl.Template>
            </dxgr:HeaderFillControl>
            <StackPanel Orientation="Horizontal" Visibility="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo), Converter={StaticResource printHeaderVisibilityConverter}}">
                <Grid x:Name="headersContainer" Visibility="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).ShowGridElement, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).IsPrintBandHeadersVisible, Converter={StaticResource headersRowHeightConverter}}" />
                        <RowDefinition Height="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).IsPrintColumnHeadersVisible, Converter={StaticResource headersRowHeightConverter}}" />
                    </Grid.RowDefinitions>
                    <dxgr:PrintBandsPanel x:Name="bandsPanel" Bands="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).BandsLayout.VisibleBands}" Visibility="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).IsPrintBandHeadersVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <dxmvvm:Interaction.Behaviors>
                            <dxgr:PrintBandsPanelBehavior HeaderItemsControl="{Binding ElementName=headerItemsControl}" />
                        </dxmvvm:Interaction.Behaviors>
                    </dxgr:PrintBandsPanel>
                    <dxgr:PrintingHeaderItemsControl
                        x:Name="headerItemsControl"
                        Grid.Row="1"
                        ItemsSource="{Binding Path=Content.CellData}"
                        Visibility="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).IsPrintColumnHeadersVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <dxgr:PrintingCellItemsControl.ItemTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding}">
                                    <ContentControl.ContentTemplateSelector>
                                        <dxgr:PrintHeaderTemplateSelector>
                                            <dxgr:PrintHeaderTemplateSelector.NearTemplate>
                                                <DataTemplate>
                                                    <Grid Width="{Binding Path=(dxgr:GridPrintingHelper.PrintCellInfo).PrintColumnWidth}">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto" />
                                                            <ColumnDefinition Width="*" />
                                                        </Grid.ColumnDefinitions>
                                                        <Grid dxp:ExportSettings.Background="{Binding Color, Source={StaticResource PrintHeaderBackColor}}">
                                                            <Grid.Visibility>
                                                                <Binding Path="(dxgr:GridPrintingHelper.PrintCellInfo).HeaderImage">
                                                                    <Binding.Converter>
                                                                        <dx:ObjectToVisibilityConverter HandleList="False" />
                                                                    </Binding.Converter>
                                                                </Binding>
                                                            </Grid.Visibility>
                                                            <Grid
                                                                VerticalAlignment="Stretch"
                                                                dxp:ExportSettings.BorderThickness="{Binding Path=(dxgr:GridPrintingHelper.PrintCellInfo), Converter={StaticResource PrintHeaderImageBorderConverter}, ConverterParameter=1}"
                                                                dxp:ExportSettings.TargetType="Image"
                                                                Background="Transparent">
                                                                <Image
                                                                    Width="16"
                                                                    Height="16"
                                                                    Margin="2,0,2,0"
                                                                    VerticalAlignment="Center"
                                                                    Source="{Binding Path=(dxgr:GridPrintingHelper.PrintCellInfo).HeaderImage}" />
                                                            </Grid>
                                                        </Grid>
                                                        <dxe:TextEdit Grid.Column="1" EditValue="{Binding Path=(dxgr:GridPrintingHelper.PrintCellInfo).HeaderCaption, Mode=OneWay}" Style="{Binding Path=(dxgr:GridPrintingHelper.PrintCellInfo).PrintColumnHeaderStyle}" />
                                                    </Grid>
                                                </DataTemplate>
                                            </dxgr:PrintHeaderTemplateSelector.NearTemplate>
                                            <dxgr:PrintHeaderTemplateSelector.FarTemplate>
                                                <DataTemplate>
                                                    <Grid Width="{Binding Path=(dxgr:GridPrintingHelper.PrintCellInfo).PrintColumnWidth}">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*" />
                                                            <ColumnDefinition Width="Auto" />
                                                        </Grid.ColumnDefinitions>
                                                        <Grid Grid.Column="1" dxp:ExportSettings.Background="{Binding Color, Source={StaticResource PrintHeaderBackColor}}">
                                                            <Grid.Visibility>
                                                                <Binding Path="(dxgr:GridPrintingHelper.PrintCellInfo).HeaderImage">
                                                                    <Binding.Converter>
                                                                        <dx:ObjectToVisibilityConverter HandleList="False" />
                                                                    </Binding.Converter>
                                                                </Binding>
                                                            </Grid.Visibility>
                                                            <Grid
                                                                VerticalAlignment="Stretch"
                                                                dxp:ExportSettings.BorderThickness="{Binding Path=(dxgr:GridPrintingHelper.PrintCellInfo), Converter={StaticResource PrintHeaderImageBorderConverter}, ConverterParameter=1}"
                                                                dxp:ExportSettings.TargetType="Image"
                                                                Background="Transparent">
                                                                <Image
                                                                    Width="16"
                                                                    Height="16"
                                                                    Margin="2,0,2,0"
                                                                    VerticalAlignment="Center"
                                                                    Source="{Binding Path=(dxgr:GridPrintingHelper.PrintCellInfo).HeaderImage}" />
                                                            </Grid>
                                                        </Grid>
                                                        <dxe:TextEdit Grid.Column="0" EditValue="{Binding Path=(dxgr:GridPrintingHelper.PrintCellInfo).HeaderCaption, Mode=OneWay}" Style="{Binding Path=(dxgr:GridPrintingHelper.PrintCellInfo).PrintColumnHeaderStyle}" />
                                                    </Grid>
                                                </DataTemplate>
                                            </dxgr:PrintHeaderTemplateSelector.FarTemplate>
                                            <dxgr:PrintHeaderTemplateSelector.CenterTemplate>
                                                <DataTemplate>
                                                    <Grid Width="{Binding Path=(dxgr:GridPrintingHelper.PrintCellInfo).PrintColumnWidth}">
                                                        <Grid dxp:ExportSettings.Background="{Binding Color, Source={StaticResource PrintHeaderBackColor}}">
                                                            <Grid.Visibility>
                                                                <Binding Path="(dxgr:GridPrintingHelper.PrintCellInfo).HeaderImage">
                                                                    <Binding.Converter>
                                                                        <dx:ObjectToVisibilityConverter HandleList="False" />
                                                                    </Binding.Converter>
                                                                </Binding>
                                                            </Grid.Visibility>
                                                            <Grid
                                                                VerticalAlignment="Stretch"
                                                                dxp:ExportSettings.BorderThickness="{Binding Path=(dxgr:GridPrintingHelper.PrintCellInfo), Converter={StaticResource PrintHeaderImageBorderConverter}, ConverterParameter=1}"
                                                                dxp:ExportSettings.TargetType="Image"
                                                                Background="Transparent">
                                                                <Image
                                                                    Width="16"
                                                                    Height="16"
                                                                    Margin="2,0,2,0"
                                                                    VerticalAlignment="Center"
                                                                    Source="{Binding Path=(dxgr:GridPrintingHelper.PrintCellInfo).HeaderImage}" />
                                                            </Grid>
                                                        </Grid>
                                                        <Grid>
                                                            <Grid.Visibility>
                                                                <Binding Path="(dxgr:GridPrintingHelper.PrintCellInfo).HeaderImage">
                                                                    <Binding.Converter>
                                                                        <dx:ObjectToVisibilityConverter HandleList="False" Invert="True" />
                                                                    </Binding.Converter>
                                                                </Binding>
                                                            </Grid.Visibility>
                                                            <dxe:TextEdit Style="{Binding Path=(dxgr:GridPrintingHelper.PrintCellInfo).PrintColumnHeaderStyle}" />
                                                        </Grid>
                                                    </Grid>
                                                </DataTemplate>
                                            </dxgr:PrintHeaderTemplateSelector.CenterTemplate>
                                        </dxgr:PrintHeaderTemplateSelector>
                                    </ContentControl.ContentTemplateSelector>
                                </ContentControl>
                            </DataTemplate>
                        </dxgr:PrintingCellItemsControl.ItemTemplate>
                        <dxgr:PrintingHeaderItemsControl.ItemsPanel>
                            <Binding Path="Content.(dxgr:GridPrintingHelper.PrintRowInfo).BandsLayout">
                                <Binding.Converter>
                                    <dxgr:BandsLayoutTemplateConverter>
                                        <dxgr:BandsLayoutTemplateConverter.TableViewTemplate>
                                            <ControlTemplate>
                                                <dx:StackVisibleIndexPanel ArrangeAccordingToVisibleIndex="True" Orientation="Horizontal" />
                                            </ControlTemplate>
                                        </dxgr:BandsLayoutTemplateConverter.TableViewTemplate>
                                        <dxgr:BandsLayoutTemplateConverter.BandedViewTemplate>
                                            <ControlTemplate>
                                                <dxgr:PrintBandsColumnsPanel Bands="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).BandsLayout.VisibleBands}" />
                                            </ControlTemplate>
                                        </dxgr:BandsLayoutTemplateConverter.BandedViewTemplate>
                                    </dxgr:BandsLayoutTemplateConverter>
                                </Binding.Converter>
                            </Binding>
                        </dxgr:PrintingHeaderItemsControl.ItemsPanel>
                    </dxgr:PrintingHeaderItemsControl>
                </Grid>
                <ContentControl
                    x:Name="PART_AdditionalElementHeader"
                    Panel.ZIndex="-10"
                    Content="{Binding Content}"
                    ContentTemplate="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).AdditionalElementHeaderTemplate}"
                    Visibility="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).ShowAdditionalElement, Converter={StaticResource BooleanToVisibilityConverter}}" />
            </StackPanel>
            <dxgr:RowDataBottomLastIndentControl Height="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).DetailBottomIndent}" Visibility="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).IsPrintHeaderBottomIndentVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="{dxgt:LWKey TableView.PrintFooterTemplate}">
        <dxgr:PrintRowStackPanel Margin="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).PrintDataIndentMargin}" IsRowDataBottomIndentVisible="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).IsPrintFooterBottomIndentVisible}">
            <dxgr:PrintingFooterItemsControl ItemsSource="{Binding Path=Content.CellData}">
                <dxgr:PrintingFooterItemsControl.ItemTemplate>
                    <DataTemplate>
                        <dxgr:PrintTextEdit
                            Width="{Binding Path=(dxgr:GridPrintingHelper.PrintCellInfo).PrintColumnWidth}"
                            DetailLevel="{Binding Path=(dxgr:GridPrintingHelper.PrintCellInfo).DetailLevel}"
                            EditValue="{Binding Path=(dxgr:GridPrintingHelper.PrintCellInfo).TotalSummaryText, Mode=OneWay}"
                            IsBottomRow="True"
                            IsTopBorderVisible="True"
                            Style="{Binding Path=(dxgr:GridPrintingHelper.PrintCellInfo).PrintTotalSummaryStyle}" />
                    </DataTemplate>
                </dxgr:PrintingFooterItemsControl.ItemTemplate>
                <dxgr:PrintingFooterItemsControl.ItemsPanel>
                    <Binding Path="Content.(dxgr:GridPrintingHelper.PrintRowInfo).BandsLayout">
                        <Binding.Converter>
                            <dxgr:BandsLayoutTemplateConverter>
                                <dxgr:BandsLayoutTemplateConverter.TableViewTemplate>
                                    <ControlTemplate>
                                        <dx:StackVisibleIndexPanel ArrangeAccordingToVisibleIndex="True" Orientation="Horizontal" />
                                    </ControlTemplate>
                                </dxgr:BandsLayoutTemplateConverter.TableViewTemplate>
                                <dxgr:BandsLayoutTemplateConverter.BandedViewTemplate>
                                    <ControlTemplate>
                                        <dxgr:PrintBandsColumnsPanel Bands="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).BandsLayout.VisibleBands}" IsFooterPanel="True" />
                                    </ControlTemplate>
                                </dxgr:BandsLayoutTemplateConverter.BandedViewTemplate>
                            </dxgr:BandsLayoutTemplateConverter>
                        </Binding.Converter>
                    </Binding>
                </dxgr:PrintingFooterItemsControl.ItemsPanel>
            </dxgr:PrintingFooterItemsControl>
            <dxgr:RowDataBottomLastIndentControl Height="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).DetailBottomIndent}" Visibility="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).IsPrintFooterBottomIndentVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
        </dxgr:PrintRowStackPanel>
    </DataTemplate>
    <DataTemplate x:Key="{dxgt:LWKey TableView.PrintFixedFooterTemplate}">
        <dxgr:PrintRowStackPanel Margin="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).PrintDataIndentMargin}" IsRowDataBottomIndentVisible="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).IsPrintFixedFooterBottomIndentVisible}">
            <dxgr:GroupRowContentControl>
                <dxgr:GroupRowContentControl.Template>
                    <ControlTemplate>
                        <dxgr:FixedTotalSummaryPrintPanel Width="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).TotalHeaderWidth}">
                            <dxgr:PrintTextEdit
                                x:Name="PART_EditLeft"
                                dxp:TextExportSettings.TextTrimming="None"
                                DetailLevel="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).DetailLevel}"
                                EditValue="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintFixedFooterTextLeft), Mode=OneWay}"
                                IsBottomRow="True"
                                IsPrintingMode="True"
                                IsTopBorderVisible="True"
                                Style="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).PrintFixedFooterStyle}">
                                <dxgr:PrintTextEdit.HorizontalAlignment>Stretch</dxgr:PrintTextEdit.HorizontalAlignment>
                                <dxgr:PrintTextEdit.Visibility>
                                    <MultiBinding>
                                        <Binding Path="Content.(dxgr:GridPrintingHelper.PrintFixedFooterTextLeft)" />
                                        <Binding Path="Content.(dxgr:GridPrintingHelper.PrintFixedFooterTextRight)" />
                                        <MultiBinding.Converter>
                                            <dxgr:FixedTotalSummaryLeftVisibilityConverter />
                                        </MultiBinding.Converter>
                                    </MultiBinding>
                                </dxgr:PrintTextEdit.Visibility>
                            </dxgr:PrintTextEdit>
                            <dxgr:PrintTextEdit
                                x:Name="PART_EditRight"
                                dxp:TextExportSettings.TextTrimming="None"
                                DetailLevel="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).DetailLevel}"
                                EditValue="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintFixedFooterTextRight), Mode=OneWay}"
                                IsBottomRow="True"
                                IsPrintingMode="True"
                                IsTopBorderVisible="True"
                                Style="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).PrintFixedFooterStyle}"
                                Visibility="{Binding EditValue, RelativeSource={RelativeSource Self}, Converter={StaticResource StringToVisibilityConverter}}">
                                <dxgr:PrintTextEdit.HorizontalAlignment>Stretch</dxgr:PrintTextEdit.HorizontalAlignment>
                                <dxgr:PrintTextEdit.HorizontalContentAlignment>Right</dxgr:PrintTextEdit.HorizontalContentAlignment>
                            </dxgr:PrintTextEdit>
                        </dxgr:FixedTotalSummaryPrintPanel>
                    </ControlTemplate>
                </dxgr:GroupRowContentControl.Template>
            </dxgr:GroupRowContentControl>
            <dxgr:RowDataBottomLastIndentControl Height="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).DetailBottomIndent}" BorderThickness="1" Visibility="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintRowInfo).IsPrintFixedFooterBottomIndentVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
        </dxgr:PrintRowStackPanel>
    </DataTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\PrintingTemplates.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\CardViewPrintingTemplates.xaml-->




























    <Style x:Key="{dxgt:LWKey CardView.DefaultPrintStyleBase}" TargetType="dxe:BaseEdit">
        <Setter Property="Padding" Value="2" />
        <Setter Property="IsPrintingMode" Value="True" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>
    <Style x:Key="{dxgt:LWKey CardView.DefaultPrintRowIndentStyle}" TargetType="Control">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <dxe:TextEdit
                        Name="PART_Edit"
                        Width="{Binding Path=Content.(dxgr:CardViewPrintingHelper.PrintCardInfo).PrintDataIndent}"
                        Margin="0"
                        dxp:ExportSettings.TargetType="None"
                        dxp:TextExportSettings.NoTextExport="True"
                        Background="Transparent"
                        BorderThickness="{Binding Path=Content.(dxgr:CardViewPrintingHelper.PrintCardInfo).PrintDataIndentBorderThickness}"
                        Style="{Binding Path=Content.(dxgr:CardViewPrintingHelper.PrintCardInfo).PrintGroupRowStyle}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="dxp:ExportSettings.TargetType" Value="None" />
    </Style>
    <Style x:Key="{dxgt:LWKey CardView.DefaultPrintTotalSummaryStyle}" BasedOn="{StaticResource {dxgt:LWKey CardView.DefaultPrintStyleBase}}" TargetType="dxe:BaseEdit">
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="dxp:TextExportSettings.TextTrimming" Value="None" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
    </Style>
    <Style x:Key="{dxgt:LWKey CardView.DefaultPrintTotalSummarySeparatorStyle}" BasedOn="{StaticResource {dxgt:LWKey CardView.DefaultPrintStyleBase}}" TargetType="dxe:BaseEdit">
        <Setter Property="Padding" Value="0" />
        <Setter Property="Foreground" Value="#FFBFBFBF" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="dxp:TextExportSettings.TextTrimming" Value="None" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
    </Style>
    <Style x:Key="{dxgt:LWKey CardView.DefaultPrintFixedTotalSummaryStyle}" BasedOn="{StaticResource {dxgt:LWKey CardView.DefaultPrintStyleBase}}" TargetType="dxe:TextEdit">
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0,22,0,0" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="dxp:TextExportSettings.TextTrimming" Value="None" />
    </Style>
    <DataTemplate x:Key="{dxgt:LWKey CardView.DefaultPrintCardContentTemplate}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition SharedSizeGroup="cardViewHeader" />
                <ColumnDefinition Width="6" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <dxe:TextEdit
                x:Name="columnHedaer"
                AllowUpdateTextBlockWhenPrinting="False"
                DataContext="{Binding Path=Column.HeaderCaption}"
                DisplayFormatString="{}{0}:"
                EditValue="{Binding Mode=OneWay}"
                IsPrintingMode="True" />
            <dxgr:CardPrintCellContentPresenter
                x:Name="cell"
                Grid.Column="2"
                Column="{Binding Column, Mode=OneWay}"
                RowData="{Binding RowData, Mode=OneWay}">
                <dxgr:CardPrintCellContentPresenter.Template>
                    <ControlTemplate>
                        <dxgr:PrintCardCellEditor x:Name="PART_CellEditor" />
                    </ControlTemplate>
                </dxgr:CardPrintCellContentPresenter.Template>
            </dxgr:CardPrintCellContentPresenter>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="{dxgt:LWKey CardView.DefaultPrintCardHeaderTemplate}">
        <dxe:TextEdit
            Padding="7,3,7,3"
            dxp:ExportSettings.Background="#FFDCDCDC"
            AllowUpdateTextBlockWhenPrinting="False"
            Background="#FFDCDCDC"
            BorderBrush="#FF989898"
            BorderThickness="0,0,0,1"
            EditValue="{Binding Path=Value, Mode=OneWay}"
            IsPrintingMode="True" />
    </DataTemplate>
    <DataTemplate x:Key="{dxgt:LWKey CardView.DefaultPrintCardTemplate}">
        <ContentControl
            Width="{Binding Path=(dxgr:CardViewPrintingHelper.PrintCardInfo).PrintCardWidth}"
            dxp:ExportSettings.Background="White"
            dxp:ExportSettings.TargetType="Panel"
            Content="{Binding}"
            ContentTemplate="{Binding Path=(dxgr:CardViewPrintingHelper.PrintCardInfo).PrintCardViewItemTemplate}">
            <ContentControl.Margin>
                <MultiBinding Converter="{StaticResource PrintCardMarginConverter}">
                    <Binding Path="(dxgr:CardViewPrintingHelper.PrintCardInfo).PrintCardMargin" />
                    <Binding Path="(dxgr:CardViewPrintRowPanel.IsFirstCardInRow)" />
                </MultiBinding>
            </ContentControl.Margin>
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="{dxgt:LWKey CardView.DefaultPrintCardViewItemTemplate}">
        <StackPanel dxp:ExportSettings.BorderColor="#FF989898" dxp:ExportSettings.BorderThickness="1" dxp:ExportSettings.TargetType="Panel">
            <ContentControl Content="{Binding Path=CardHeaderData, Mode=OneWay}" ContentTemplate="{Binding Path=(dxgr:CardViewPrintingHelper.PrintCardInfo).PrintCardHeaderTemplate}" />
            <Grid dxp:ExportSettings.TargetType="Panel">
                <dxgr:CardViewPrintingCellItemsControl
                    Margin="8,4,8,4"
                    Grid.IsSharedSizeScope="True"
                    ItemTemplate="{Binding Path=(dxgr:CardViewPrintingHelper.PrintCardInfo).PrintCardContentTemplate}"
                    ItemsSource="{Binding Path=CellData, Mode=OneWay}">
                    <dxgr:CardViewPrintingCellItemsControl.ItemsPanel>
                        <ControlTemplate>
                            <dx:StackVisibleIndexPanel ArrangeAccordingToVisibleIndex="True" Orientation="Vertical" />
                        </ControlTemplate>
                    </dxgr:CardViewPrintingCellItemsControl.ItemsPanel>
                </dxgr:CardViewPrintingCellItemsControl>
            </Grid>
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="{dxgt:LWKey CardView.DefaultPrintCardRowIndentTemplate}">
        <dxgr:CellFillControl Style="{Binding Path=Content.(dxgr:CardViewPrintingHelper.PrintCardInfo).PrintRowIndentStyle}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxgt:LWKey CardView.DefaultPrintCardRowTemplate}">
        <dxgr:CardViewPrintRowPanel
            Width="{Binding Path=Content.(dxgr:CardViewPrintingHelper.PrintCardInfo).PrintCardsRowWidth}"
            ItemTemplate="{Binding Path=Content.(dxgr:CardViewPrintingHelper.PrintCardInfo).PrintCardTemplate, Mode=OneWay}"
            PrintAutoCardWidth="{Binding Path=Content.(dxgr:CardViewPrintingHelper.PrintCardInfo).PrintAutoCardWidth}"
            PrintMaximumCardColumns="{Binding Path=Content.(dxgr:CardViewPrintingHelper.PrintCardInfo).PrintMaximumCardColumns}"
            Row="{Binding Content.Row, Mode=OneWay}"
            RowData="{Binding Path=Content, Mode=OneWay}"
            RowIndentControlTemplate="{Binding Path=Content.(dxgr:CardViewPrintingHelper.PrintCardInfo).PrintCardRowIndentTemplate}" />
    </DataTemplate>
    <DataTemplate x:Key="defaultPrintHeaderFooterTemplate">
        <ItemsControl
            Width="{Binding Path=Content.(dxgr:CardViewPrintingHelper.PrintCardInfo).TotalHeaderWidth}"
            Margin="{Binding Path=Content.(dxgr:CardViewPrintingHelper.PrintCardInfo).TotalSummaryPosition, Converter={StaticResource TotalSummaryPositionPrintMarginConverter}}"
            Padding="{Binding Path=Content.(dxgr:CardViewPrintingHelper.PrintCardInfo).TotalSummaryPosition, Converter={StaticResource TotalSummaryPositionToPrintPaddingConverter}}"
            HorizontalAlignment="Right"
            HorizontalContentAlignment="Right"
            dxp:ExportSettings.BorderColor="#FFBFBFBF"
            dxp:ExportSettings.BorderThickness="{Binding Path=Content.(dxgr:CardViewPrintingHelper.PrintCardInfo).TotalSummaryPosition, Mode=OneWay, Converter={dxgi:CardViewTotalSummaryPanelBorderThicknessConverter}}"
            dxp:ExportSettings.TargetType="Panel"
            ItemsSource="{Binding Path=Content.(dxgr:CardViewPrintingHelper.PrintCardInfo).TotalSummaries}"
            Visibility="{Binding Path=Content.(dxgr:CardViewPrintingHelper.PrintCardInfo).TotalSummaries.Count, Mode=OneWay, Converter={StaticResource IntToVisibilityConverter}}">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <dxe:TextEdit x:Name="PART_TotalSummary" EditValue="{Binding Path=TotalSummaryText, Mode=OneWay}" Style="{Binding Path=PrintTotalSummaryStyle}" />
                </DataTemplate>
            </ItemsControl.ItemTemplate>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel HorizontalAlignment="Right" Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
    </DataTemplate>
    <DataTemplate x:Key="{dxgt:LWKey CardView.DefaultPrintHeaderTemplate}">
        <ContentPresenter ContentTemplate="{StaticResource defaultPrintHeaderFooterTemplate}" Visibility="{Binding Path=Content.(dxgr:CardViewPrintingHelper.PrintCardInfo).TotalSummaryPosition, Mode=OneWay, Converter={StaticResource HeaderTotalSummaryPositionToVisibilityConverter}}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxgt:LWKey CardView.DefaultPrintGroupRowTemplate}">
        <StackPanel Orientation="Horizontal">
            <StackPanel.Margin>
                <MultiBinding Converter="{StaticResource GroupRowOuterMarginConverter}">
                    <Binding Path="Content.(dxgr:GridPrintingHelper.PrintGroupRowInfo).IsLast" />
                    <Binding Path="Content.(dxgr:GridPrintingHelper.PrintGroupRowInfo).IsExpanded" />
                </MultiBinding>
            </StackPanel.Margin>
            <StackPanel dxp:ExportSettings.BorderColor="#FFBFBFBF" dxp:ExportSettings.TargetType="Panel">
                <dxp:ExportSettings.BorderThickness>
                    <MultiBinding Converter="{StaticResource GroupRowIndentThicknessConverter}">
                        <Binding Path="Content.(dxgr:GridPrintingHelper.PrintGroupRowInfo).IsLast" />
                        <Binding Path="Content.(dxgr:GridPrintingHelper.PrintGroupRowInfo).IsExpanded" />
                    </MultiBinding>
                </dxp:ExportSettings.BorderThickness>
                <dxgr:CellFillControl Style="{Binding Path=Content.(dxgr:CardViewPrintingHelper.PrintCardInfo).PrintRowIndentStyle}" />
            </StackPanel>
            <StackPanel
                Width="{Binding Path=Content.(dxgr:CardViewPrintingHelper.PrintCardInfo).TotalHeaderWidth}"
                dxp:ExportSettings.BorderColor="#FFBFBFBF"
                dxp:ExportSettings.BorderThickness="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintGroupRowInfo).IsExpanded, Converter={StaticResource BooleanToThicknessConverter}}"
                dxp:ExportSettings.TargetType="Panel"
                Orientation="Vertical">
                <StackPanel Margin="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintGroupRowInfo).IsExpanded, Converter={StaticResource IsExpandedMarginConverter}}" Orientation="Vertical">
                    <dxe:TextEdit
                        x:Name="PART_GroupHeader"
                        EditValue="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintGroupRowInfo).CaptionCell.Text, Mode=OneWay}"
                        FontSize="18"
                        Foreground="#FF262626"
                        Style="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintGroupRowInfo).CaptionCell.PrintGroupRowStyle}" />
                    <dxe:TextEdit
                        x:Name="PART_GroupSummary"
                        EditValue="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintGroupRowInfo).FirstColumnCell.Text, Mode=OneWay}"
                        Style="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintGroupRowInfo).FirstColumnCell.PrintGroupRowStyle}"
                        Visibility="{Binding EditValue, RelativeSource={RelativeSource Self}, Converter={StaticResource StringToVisibilityConverter}}" />
                </StackPanel>
            </StackPanel>
        </StackPanel>
    </DataTemplate>
    <Style x:Key="{dxgt:LWKey CardView.DefaultPrintCellStyle}" BasedOn="{StaticResource {dxgt:LWKey CardView.DefaultPrintStyleBase}}" TargetType="dxe:BaseEdit">
        <Setter Property="AllowUpdateTextBlockWhenPrinting" Value="False" />
        <Setter Property="dxp:TextExportSettings.TextTrimming" Value="None" />
        <Setter Property="dxp:TextExportSettings.TextWrapping" Value="Wrap" />
    </Style>
    <Style x:Key="{dxgt:LWKey CardView.DefaultPrintGroupRowStyle}" BasedOn="{StaticResource {dxgt:LWKey CardView.DefaultPrintStyleBase}}" TargetType="dxe:BaseEdit">
        <Setter Property="dxp:TextExportSettings.TextTrimming" Value="None" />
        <Setter Property="Foreground" Value="#FF666666" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>

    <DataTemplate x:Key="{dxgt:LWKey CardView.DefaultPrintFooterTemplate}">
        <ContentPresenter ContentTemplate="{StaticResource defaultPrintHeaderFooterTemplate}" Visibility="{Binding Path=Content.(dxgr:CardViewPrintingHelper.PrintCardInfo).TotalSummaryPosition, Mode=OneWay, Converter={StaticResource FooterTotalSummaryPositionToVisibilityConverter}}" />
    </DataTemplate>

    <DataTemplate x:Key="{dxgt:LWKey CardView.DefaultPrintFixedFooterTemplate}">
        <dxgr:FixedTotalSummaryPrintPanel
            Width="{Binding Path=Content.(dxgr:CardViewPrintingHelper.PrintCardInfo).TotalHeaderWidth}"
            dxp:ExportSettings.BorderColor="#FFBFBFBF"
            dxp:ExportSettings.BorderThickness="0,1,0,0"
            dxp:ExportSettings.TargetType="Panel">
            <dxgr:PrintTextEdit
                x:Name="PART_EditLeft"
                HorizontalAlignment="Stretch"
                EditValue="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintFixedFooterTextLeft), Mode=OneWay}"
                Style="{Binding Path=Content.(dxgr:CardViewPrintingHelper.PrintCardInfo).PrintFixedFooterStyle}">
                <dxgr:PrintTextEdit.Visibility>
                    <MultiBinding>
                        <Binding Path="Content.(dxgr:GridPrintingHelper.PrintFixedFooterTextLeft)" />
                        <Binding Path="Content.(dxgr:GridPrintingHelper.PrintFixedFooterTextRight)" />
                        <MultiBinding.Converter>
                            <dxgr:FixedTotalSummaryLeftVisibilityConverter />
                        </MultiBinding.Converter>
                    </MultiBinding>
                </dxgr:PrintTextEdit.Visibility>
            </dxgr:PrintTextEdit>
            <dxgr:PrintTextEdit
                x:Name="PART_EditRight"
                HorizontalAlignment="Right"
                HorizontalContentAlignment="Right"
                EditValue="{Binding Path=Content.(dxgr:GridPrintingHelper.PrintFixedFooterTextRight), Mode=OneWay}"
                Style="{Binding Path=Content.(dxgr:CardViewPrintingHelper.PrintCardInfo).PrintFixedFooterStyle}"
                Visibility="{Binding EditValue, RelativeSource={RelativeSource Self}, Converter={StaticResource StringToVisibilityConverter}}" />
        </dxgr:FixedTotalSummaryPrintPanel>
    </DataTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\CardViewPrintingTemplates.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\RowIndicator.xaml-->
    <ControlTemplate x:Key="{dxgt:LWKey RowIndicator.ItemsControlItemPanelTemplate}">
        <dx:StackVisibleIndexPanel ArrangeAccordingToVisibleIndex="True" Orientation="Vertical" />
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:LWKey RowIndicator.ItemTemplate}">
        <ContentPresenter x:Name="PART_Indicator" Content="{Binding}" ContentTemplate="{DynamicResource {dxgt:LWKey RowIndicator.RowTemplate}}" />
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:LWKey RowIndicator.GroupPresenterTemplate}">
        <ContentPresenter x:Name="PART_Indicator" Content="{Binding}" ContentTemplate="{DynamicResource {dxgt:LWKey RowIndicator.GroupRowTemplate}}" />
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:LWKey RowIndicator.AdditionalTemplate}">
        <ContentPresenter x:Name="PART_Indicator" Content="{Binding}" ContentTemplate="{DynamicResource {dxgt:LWKey RowIndicator.RowTemplate}}" />
    </ControlTemplate>

    <dxgcore:DefaultDataTemplate x:Key="{dxgt:LWKey RowIndicator.IconPresenterTemplate}">
        <dx:DXBorder
            x:Name="errorIndicatorBorder"
            dxgr:ToolTipHelper.Content="{Binding Path=(dxe:BaseEdit.ValidationError)}"
            dxgr:ToolTipHelper.ContentTemplate="{DynamicResource {dxgt:LWKey GridRow.RowToolTipTemplate}}"
            dxgr:ToolTipHelper.ShowTooltip="{Binding Path=(dxe:BaseEdit.HasValidationError)}"
            Background="Transparent">
            <ContentPresenter x:Name="iconPresenter" Content="{Binding}">
                <ContentPresenter.ContentTemplate>
                    <DataTemplate>
                        <Grid />
                    </DataTemplate>
                </ContentPresenter.ContentTemplate>
            </ContentPresenter>
        </dx:DXBorder>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IndicatorState}" Value="Focused">
                <Setter TargetName="iconPresenter" Property="ContentTemplate" Value="{DynamicResource {dxgt:LWKey RowIndicator.FocusedIconTemplate}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IndicatorState}" Value="Changed">
                <Setter TargetName="iconPresenter" Property="ContentTemplate" Value="{DynamicResource {dxgt:LWKey RowIndicator.ChangedIconTemplate}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IndicatorState}" Value="NewItemRow">
                <Setter TargetName="iconPresenter" Property="ContentTemplate" Value="{DynamicResource {dxgt:LWKey RowIndicator.NewItemRowIconTemplate}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IndicatorState}" Value="Editing">
                <Setter TargetName="iconPresenter" Property="ContentTemplate" Value="{DynamicResource {dxgt:LWKey RowIndicator.EditingIconTemplate}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IndicatorState}" Value="Error">
                <Setter TargetName="iconPresenter" Property="ContentTemplate" Value="{DynamicResource {dxgt:LWKey RowIndicator.ErrorIconTemplate}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IndicatorState}" Value="FocusedError">
                <Setter TargetName="iconPresenter" Property="ContentTemplate" Value="{DynamicResource {dxgt:LWKey RowIndicator.FocusedErrorIconTemplate}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IndicatorState}" Value="AutoFilterRow">
                <Setter TargetName="iconPresenter" Property="ContentTemplate" Value="{DynamicResource {dxgt:LWKey RowIndicator.AutoFilterRowIconTemplate}}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </dxgcore:DefaultDataTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\RowIndicator.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\ExtendedColumnChooser.xaml-->

    <DataTemplate x:Key="{dxgt:LWKey ExtendedColumnChooser.CheckBoxColumnCellTemplate}">
        <dxe:CheckEdit
            Margin="0,0,0,0"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            EditMode="Standalone"
            EditValue="{Binding Path=RowData.Row.IsVisible, Mode=TwoWay}"
            Focusable="False"
            IsEnabled="{Binding Path=RowData.Row.AllowChangeVisibility}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxgt:LWKey ExtendedColumnChooser.DropMarkerTemplate}">
        <ContentPresenter
            dxgr:GridColumnHeader.CanGroupMergeState="False"
            dxgr:GridColumnHeader.DropPlaceOrientation="Vertical"
            dxgr:GridColumnHeader.IsColumnChooser="True"
            dxgr:GridColumnHeader.IsGroupPanel="False"
            ContentTemplate="{DynamicResource {dxgt:LWKey GridColumnHeader.DragIndicatorTemplate}}" />
    </DataTemplate>
    <DataTemplate x:Key="ColumnHeaderTemplate">
        <dxgr:ExtendedColumnChooserGridColumnHeader
            Margin="1,1,2,0"
            dxb:BarManager.DXContextMenu="{Binding Path=View.DataControlMenu}"
            dxgr:GridColumn.HeaderPresenterType="ColumnChooser"
            dxgr:GridColumnHeader.ExtendedColumnChooserView="{Binding RowData.View, RelativeSource={RelativeSource TemplatedParent}}"
            dxgr:GridColumnHeader.GridColumn="{Binding}"
            dxgr:GridControl.CurrentView="{Binding View}"
            dxgr:GridPopupMenu.GridMenuType="Column"
            ColumnPosition="Standalone"
            DataContext="{Binding Value}"
            DropMarkerTemplate="{DynamicResource {dxgt:LWKey ExtendedColumnChooser.DropMarkerTemplate}}"
            SnapsToDevicePixels="True">
            <dxgr:ExtendedColumnChooserGridColumnHeader.ColumnChooserHeaderPresenterType>
                <MultiBinding Converter="{StaticResource ExtendedColumnChooserHeaderPresenterTypeConverter}">
                    <Binding Path="Visible" />
                    <Binding Path="RowData.Row.IsGrouped" RelativeSource="{RelativeSource TemplatedParent}" />
                </MultiBinding>
            </dxgr:ExtendedColumnChooserGridColumnHeader.ColumnChooserHeaderPresenterType>
            <dxgr:GridControl.CurrentViewChangedListener>
                <dxgr:ExtendedColumnChooserColumnHeaderInitializer />
            </dxgr:GridControl.CurrentViewChangedListener>
        </dxgr:ExtendedColumnChooserGridColumnHeader>
    </DataTemplate>
    <DataTemplate x:Key="BandHeaderTemplate">
        <dxgr:ExtendedColumnChooserBandHeaderControl
            Margin="1,1,2,0"
            dxb:BarManager.DXContextMenu="{Binding Path=View.DataControlMenu}"
            dxgr:GridColumn.HeaderPresenterType="ColumnChooser"
            dxgr:GridColumnHeader.ExtendedColumnChooserView="{Binding RowData.View, RelativeSource={RelativeSource TemplatedParent}}"
            dxgr:GridColumnHeader.GridColumn="{Binding}"
            dxgr:GridControl.CurrentView="{Binding View}"
            dxgr:GridPopupMenu.GridMenuType="Band"
            ColumnChooserHeaderPresenterType="{Binding Visible, Converter={StaticResource HeaderPresenterTypeConverter}}"
            ColumnPosition="Standalone"
            DataContext="{Binding Value}"
            DropMarkerTemplate="{DynamicResource {dxgt:LWKey ExtendedColumnChooser.DropMarkerTemplate}}"
            SnapsToDevicePixels="True">
            <dxgr:GridControl.CurrentViewChangedListener>
                <dxgr:ExtendedColumnChooserColumnHeaderInitializer />
            </dxgr:GridControl.CurrentViewChangedListener>
        </dxgr:ExtendedColumnChooserBandHeaderControl>
    </DataTemplate>
    <Style x:Key="{dxgt:LWKey ExtendedColumnChooser.ColumnStyle}" TargetType="{x:Type dxgr:TreeListColumn}">
        <Setter Property="CellTemplateSelector">
            <Setter.Value>
                <dxgr:ExtendedColumnChooserColumnTemplateSelector BandHeaderTemplate="{StaticResource BandHeaderTemplate}" ColumnHeaderTemplate="{StaticResource ColumnHeaderTemplate}" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxgt:LWKey ExtendedColumnChooser.CheckBoxColumnStyle}" TargetType="{x:Type dxgr:TreeListColumn}">
        <Setter Property="Width" Value="{DynamicResource {dxgt:LWKey ExtendedColumnChooser.CheckBoxColumnWidth}}" />
        <Setter Property="CellTemplate" Value="{DynamicResource {dxgt:LWKey ExtendedColumnChooser.CheckBoxColumnCellTemplate}}" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Width" Value="34" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="{dxgt:LWKey ExtendedColumnChooser.RowTemplate}" TargetType="{x:Type dxgr:ExtendedColumnChooserRowControl}">
        <Grid>
            <Grid.Margin>
                <Binding Path="RowPosition">
                    <Binding.Converter>
                        <dxmvvm:ObjectToObjectConverter DefaultTarget="0">
                            <dxmvvm:MapItem Source="Top">
                                <dxmvvm:MapItem.Target>
                                    <Thickness>0,2,0,0</Thickness>
                                </dxmvvm:MapItem.Target>
                            </dxmvvm:MapItem>
                            <dxmvvm:MapItem Source="Bottom">
                                <dxmvvm:MapItem.Target>
                                    <Thickness>0,0,0,3</Thickness>
                                </dxmvvm:MapItem.Target>
                            </dxmvvm:MapItem>
                            <dxmvvm:MapItem Source="Single">
                                <dxmvvm:MapItem.Target>
                                    <Thickness>0,2,0,3</Thickness>
                                </dxmvvm:MapItem.Target>
                            </dxmvvm:MapItem>
                        </dxmvvm:ObjectToObjectConverter>
                    </Binding.Converter>
                </Binding>
            </Grid.Margin>
            <dx:DXBorder x:Name="Background" Background="{TemplateBinding Background}" Margin="{DynamicResource {dxgt:LWKey ExtendedColumnChooser.RowPadding}}"/>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid x:Name="PART_LayoutPanel" Margin="{DynamicResource {dxgt:LWKey ExtendedColumnChooser.RowMargin}}"/>
                <dx:DXBorder
                    x:Name="BottomLine"
                    Grid.Row="1"
                    Height="1"
                    Margin="0,2,0,1"
                    VerticalAlignment="Bottom"
                    Background="{DynamicResource {dxgt:LWKey GridRow.RowSeparatorBrush}}"
                    BorderBrush="{DynamicResource {dxgt:LWKey GridRow.BorderBrush}}"
                    BorderThickness="0,1,0,0"
                    Visibility="Collapsed" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="FadeSelection" Value="True">
                <Setter TargetName="Background" Property="Opacity" Value="0.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="{dxgt:LWKey ExtendedColumnChooser.TreeListControlStyle}" TargetType="{x:Type dxgr:TreeListControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="ShowBorder" Value="False" />
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey ExtendedColumnChooser.TreeListControlTemplate}}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.35" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <dxgr:DefaultStyle x:Key="{dxgt:LWKey ExtendedColumnChooser.RowStyle}" TargetType="{x:Type dxgr:GridRowContent}">
        <Setter Property="dxgr:GridRowContent.Background" Value="{DynamicResource {dxgt:LWKey GridRow.BorderNoneBrush}}" />
        <Setter Property="dxgr:GridRowContent.Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.TextUnfocusedBrush}}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=AlternateRow}" Value="True">
                <Setter Property="dxgr:GridRowContent.Background" Value="{Binding Path=View.ActualAlternateRowBackground}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=SelectionState}" Value="Selected">
                <Setter Property="dxgr:GridRowContent.Background" Value="{DynamicResource {dxgt:LWKey GridRow.BorderSelectedBrush}}" />
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.TextRowSelectedBrush}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=SelectionState}" Value="Focused">
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.TextFocusedBrush}}" />
                <Setter Property="dxgr:GridRowContent.Background" Value="{DynamicResource {dxgt:LWKey GridRow.BorderFocusedBrush}}" />
            </DataTrigger>
        </Style.Triggers>
    </dxgr:DefaultStyle>
    <Style x:Key="{dxgt:LWKey ExtendedColumnChooser.TreeListViewStyle}" TargetType="{x:Type dxgr:TreeListView}">
        <Setter Property="AllowSorting" Value="False" />
        <Setter Property="ShowColumnHeaders" Value="False" />
        <Setter Property="ShowVerticalLines" Value="False" />
        <Setter Property="ShowHorizontalLines" Value="False" />
        <Setter Property="ShowIndicator" Value="False" />
        <Setter Property="RowStyle" Value="{DynamicResource {dxgt:LWKey ExtendedColumnChooser.RowStyle}}" />
        <Setter Property="TreeLineStyle" Value="None" />
        <Setter Property="SearchDelay" Value="0" />
        <Setter Property="SearchPanelHorizontalAlignment" Value="Stretch" />
        <Setter Property="ShowRootIndent" Value="{Binding HasBands}" />
        <Setter Property="ShowSearchPanelMode" Value="Always" />
        <Setter Property="AutoExpandAllNodes" Value="True" />
        <Setter Property="ExpandNodesOnFiltering" Value="True" />
        <Setter Property="FilterMode" Value="Extended" />
        <Setter Property="ShowDragDropHint" Value="True" />
        <Setter Property="NavigationStyle" Value="None" />
        <Setter Property="VerticalScrollbarVisibility" Value="Auto" />
        <Setter Property="SearchPanelNullText">
            <Setter.Value>
                <MultiBinding>
                    <Binding Path="DataControl.View.LocalizationDescriptor" />
                    <Binding Path="HasBands" />
                    <MultiBinding.Converter>
                        <dxgr:ExtendedColumnChooserSearchNullTextConverter SearchColumnsAndBandsKey="ExtendedColumnChooserSearchColumnsAndBands" SearchColumnsKey="ExtendedColumnChooserSearchColumns" />
                    </MultiBinding.Converter>
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey ExtendedColumnChooser.TreeViewTemplate}}" />
    </Style>
    <ControlTemplate x:Key="{dxgt:LWKey ExtendedColumnChooser.Template}">
        <dxgr:TreeListControl DataContext="{Binding Path=(dxgr:ExtendedColumnChooserControl.ViewModel), RelativeSource={RelativeSource Self}}" ItemsSource="{Binding Path=Columns}" Style="{DynamicResource {dxgt:LWKey ExtendedColumnChooser.TreeListControlStyle}}">
            <dxgr:TreeListControl.Columns>
                <dxgr:TreeListColumn FieldName="IsVisible" AllowSearchPanel="False" Style="{DynamicResource {dxgt:LWKey ExtendedColumnChooser.CheckBoxColumnStyle}}" />
                <dxgr:TreeListColumn
                    FieldName="Source"
                    Width="*"
                    AllowSearchPanel="False"
                    Style="{DynamicResource {dxgt:LWKey ExtendedColumnChooser.ColumnStyle}}" />
                <dxgr:TreeListColumn
                    FieldName="VisibleIndex"
                    AllowSearchPanel="False"
                    SortOrder="Ascending"
                    Visible="False" />
                <dxgr:TreeListColumn FieldName="Header" AllowSearchPanel="True" Visible="False" />
            </dxgr:TreeListControl.Columns>
            <dxgr:TreeListControl.View>
                <dxgr:ExtendedColumnChooserTreeListView
                    KeyFieldName="Source"
                    OriginalDataControl="{Binding DataControl}"
                    ParentFieldName="ParentBand"
                    Style="{DynamicResource {dxgt:LWKey ExtendedColumnChooser.TreeListViewStyle}}"
                    TreeColumnFieldName="Source">
                    <dxmvvm:Interaction.Behaviors>
                        <dxmvvm:EventToCommand Command="{DXCommand Execute='@s.AssociatedObject.UpdateRowsFixedState()'}" EventName="ColumnsFixedStateChanged" SourceObject="{Binding}" />
                        <dxmvvm:EventToCommand
                            Command="{DXCommand Execute='@s.AssociatedObject.UpdateNodeExpandState(@parameter.TargetBand, @parameter.Source)'}"
                            EventName="DropInEmptyBand"
                            PassEventArgsToCommand="True"
                            SourceObject="{Binding DragDropManager}" />
                    </dxmvvm:Interaction.Behaviors>
                    <dx:DragManager.DropTargetFactory>
                        <dxgr:ExtendedColumnChooserDropTargetFactory />
                    </dx:DragManager.DropTargetFactory>
                </dxgr:ExtendedColumnChooserTreeListView>
            </dxgr:TreeListControl.View>
        </dxgr:TreeListControl>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:LWKey ExtendedColumnChooser.TreeViewTemplate}" TargetType="{x:Type dxgr:TreeListView}">
        <ScrollViewer
            x:Name="scr"
            dx:ScrollBarExtensions.ScrollBehavior="{x:Null}"
            dxgr:GridControl.CurrentView="{Binding RelativeSource={RelativeSource TemplatedParent}}"
            Focusable="False"
            HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollbarVisibility}"
            Template="{DynamicResource {dxgt:LWKey ExtendedColumnChooser.TreeViewScrollViewerTemplate}}"
            VerticalScrollBarVisibility="{TemplateBinding VerticalScrollbarVisibility}">
            <ScrollViewer.CanContentScroll>True</ScrollViewer.CanContentScroll>
            <dx:ScrollBarExtensions.AllowMouseScrolling>
                <Binding Path="(dxgr:GridControl.CurrentView).UseExtendedMouseScrolling" RelativeSource="{RelativeSource Self}" />
            </dx:ScrollBarExtensions.AllowMouseScrolling>
        </ScrollViewer>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:LWKey ExtendedColumnChooser.SearchControlTemplate}" TargetType="dxgr:GridSearchControl">
        <ContentControl HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" dx:FocusHelper2.Focusable="False">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <dxei:ChildMinWidthPanel ChildMinWidth="{TemplateBinding SearchTextBoxMinWidth}">
                    <dxe:ComboBoxEdit
                        x:Name="editor"
                        MinHeight="22"
                        Margin="0"
                        dxei:MVVMFocusBehavior.IsFocused="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                        AllowDefaultButton="False"
                        AutomationProperties.AutomationId="SearchComboBox"
                        AutomationProperties.Name="SearchComboBox"
                        EditValue="{Binding Path=SearchText, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                        EditValuePostDelay="{TemplateBinding SearchTextPostDelay}"
                        EditValuePostMode="{Binding Path=SearchControlPropertyProvider.ActualPostMode, RelativeSource={RelativeSource TemplatedParent}}"
                        ImmediatePopup="{Binding Path=SearchControlPropertyProvider.ActualImmediateMRUPopup, RelativeSource={RelativeSource TemplatedParent}}"
                        IncrementalFiltering="False"
                        IsCaseSensitiveSearch="True"
                        IsTabStop="{Binding IsEditorTabStop, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                        ItemsSource="{TemplateBinding MRU}"
                        NullTextForeground="{Binding Path=NullTextForeground, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                        ShowNullText="{Binding Path=SearchControlPropertyProvider.ActualShowFindButton, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource boolInverseConverter}}"
                        ValidateOnEnterKeyPressed="True">
                        <dxe:ComboBoxEdit.NullText>
                            <MultiBinding>
                                <Binding Path="NullText" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding
                                    Converter="{StaticResource EditorStringIdConverter}"
                                    ConverterParameter="LookUpSearch"
                                    Path="IsTabStop"
                                    RelativeSource="{RelativeSource Self}" />
                                <MultiBinding.Converter>
                                    <dx:SearchControlNullTextConverter />
                                </MultiBinding.Converter>
                            </MultiBinding>
                        </dxe:ComboBoxEdit.NullText>
                        <dxe:ComboBoxEdit.Buttons>
                            <dxe:ButtonInfo
                                x:Name="buttonClear"
                                Command="{Binding Path=SearchControlPropertyProvider.ClearSearchTextCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                GlyphKind="Custom"
                                Visibility="{Binding Path=SearchControlPropertyProvider.ActualShowClearButton, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <dxe:ButtonInfo.Template>
                                    <DataTemplate>
                                        <dxe:ButtonClose
                                            Margin="2,0"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Command="{Binding Command}"
                                            Visibility="{Binding Visibility}" />
                                    </DataTemplate>
                                </dxe:ButtonInfo.Template>
                            </dxe:ButtonInfo>
                            <dxe:ButtonInfo Command="{Binding Path=OpenPopupCommand, ElementName=editor}" GlyphKind="DropDown" Visibility="{Binding Path=ShowMRUButton, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        </dxe:ComboBoxEdit.Buttons>
                    </dxe:ComboBoxEdit>
                </dxei:ChildMinWidthPanel>
                <Button
                    x:Name="SearchFindButton"
                    Grid.Column="1"
                    MinWidth="55"
                    Margin="4,0,0,0"
                    Command="{Binding Path=SearchControlPropertyProvider.FindCommand, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                    CommandParameter="{TemplateBinding FilterCriteria}"
                    Style="{DynamicResource {dxt:LWKey SearchControl.FindButtonStyle}}"
                    Visibility="{Binding Path=SearchControlPropertyProvider.ActualShowFindButton, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" />
                <Button
                    Grid.Column="2"
                    MinWidth="70"
                    Margin="4,0,0,0"
                    Command="{Binding PrevCommand, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                    Style="{DynamicResource {dxt:LWKey SearchControl.PrevButtonStyle}}"
                    Visibility="{Binding Path=ShowSearchPanelNavigationButtons, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}" />

                <Button
                    Grid.Column="3"
                    MinWidth="70"
                    Margin="4,0,0,0"
                    Command="{Binding NextCommand, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                    Style="{DynamicResource {dxt:LWKey SearchControl.NextButtonStyle}}"
                    Visibility="{Binding Path=ShowSearchPanelNavigationButtons, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}" />
                <Button
                    x:Name="SearchCloseButton"
                    Grid.Column="4"
                    MinWidth="55"
                    Margin="4,0,0,0"
                    Command="{Binding Path=SearchControlPropertyProvider.CloseCommandInternal, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                    Style="{DynamicResource {dxt:LWKey SearchControl.CloseButtonStyle}}"
                    Visibility="{Binding Path=ShowCloseButton, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}" />
            </Grid>
        </ContentControl>
    </ControlTemplate>
    <Style x:Key="{dxgt:LWKey ExtendedColumnChooser.SearchPanelContentStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="dx:FocusHelper2.Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Background="{DynamicResource {dxgt:LWKey ExtendedColumnChooser.SearchPanelBackground}}">
                        <dxgr:GridSearchControl
                            x:Name="PART_SearchControl"
                            Margin="{DynamicResource {dxgt:LWKey ExtendedColumnChooser.SearchPanelMargin}}"
                            HorizontalAlignment="{Binding Path=(dxgr:GridControl.CurrentView).SearchPanelHorizontalAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                            IsEditorTabStop="False"
                            IsTabStop="False"
                            SearchTextBoxMinWidth="{DynamicResource {dxgt:LWKey ExtendedColumnChooser.SearchPanelTextBoxMinWidth}}"
                            Template="{DynamicResource {dxgt:LWKey ExtendedColumnChooser.SearchControlTemplate}}"
                            View="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                            Visibility="{Binding Path=View.ActualShowSearchPanel, RelativeSource={RelativeSource Self}, Converter={dx:BooleanToVisibilityConverter}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxgt:LWKey ExtendedColumnChooser.OuterBorderElementStyle}" TargetType="{x:Type dxgr:OuterBorderElement}">
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey ExtendedColumnChooser.OuterBorderElementTemplate}}" />
    </Style>

    <ControlTemplate x:Key="{dxgt:LWKey ExtendedColumnChooser.TreeViewScrollViewerTemplate}">
        <Grid dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" ClipToBounds="True" SnapsToDevicePixels="true">
            <dx:ScrollBarExtensions.ScrollBehavior>
                <Binding Path="(dxgr:GridControl.CurrentView).UseExtendedMouseScrolling" RelativeSource="{RelativeSource Self}">
                    <Binding.Converter>
                        <dx:BoolToObjectConverter FalseValue="{dx:NativeScrollBehavior}" TrueValue="{dxgcore:DataPresenterScrollBehavior}" />
                    </Binding.Converter>
                </Binding>
            </dx:ScrollBarExtensions.ScrollBehavior>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <dx:DXBorder Grid.Row="0" BorderBrush="{DynamicResource {dxgt:LWKey ExtendedColumnChooser.SearchPanelBorderBrush}}" BorderThickness="{DynamicResource {dxgt:LWKey ExtendedColumnChooser.SearchPanelBorderThickness}}">
                <ContentControl
                    x:Name="part_SearchControlContainer"
                    dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                    Style="{DynamicResource {dxgt:LWKey ExtendedColumnChooser.SearchPanelContentStyle}}"
                    Visibility="{Binding Path=(dxgr:GridControl.CurrentView).ActualShowSearchPanel, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <dxgr:GridViewHitInfoBase.HitTestAcceptor>
                        <dxght:GridSearchPanelHitTestAcceptor />
                    </dxgr:GridViewHitInfoBase.HitTestAcceptor>
                </ContentControl>
            </dx:DXBorder>
            <Grid
                x:Name="rowPresenterGrid"
                Grid.Row="1"
                Margin="{DynamicResource {dxgt:LWKey ExtendedColumnChooser.RowPresenterGridMargin}}"
                dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Grid Grid.Row="1">
                    <Grid.ColumnSpan>
                        <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}">
                            <Binding.Converter>
                                <dxmvvm:ObjectToObjectConverter DefaultSource="Default" DefaultTarget="1">
                                    <dxmvvm:MapItem Source="TouchOverlap" Target="2" />
                                </dxmvvm:ObjectToObjectConverter>
                            </Binding.Converter>
                        </Binding>
                    </Grid.ColumnSpan>
                    <ScrollContentPresenter
                        x:Name="PART_ScrollContentPresenter"
                        MinWidth="{Binding Path=(dxgr:GridControl.CurrentView).ScrollableAreaMinWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        dxgcore:FocusRectPresenter.IsVerticalScrollHost="True"
                        dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                        ScrollViewer.CanContentScroll="True">
                        <dxgr:GridControl.CurrentViewChangedListener>
                            <dxgr:ScrollContentPresenterInitializer />
                        </dxgr:GridControl.CurrentViewChangedListener>

                        <ScrollContentPresenter.Content>
                            <dxgr:DataPresenter x:Name="dataPresenter" dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" Template="{DynamicResource {dxgt:LWKey ExtendedColumnChooser.DataPresenterTemplate}}" />
                        </ScrollContentPresenter.Content>
                        <dxgr:GridViewHitInfoBase.HitTestAcceptor>
                            <dxght:DataAreaTableViewHitTestAcceptor />
                        </dxgr:GridViewHitInfoBase.HitTestAcceptor>
                    </ScrollContentPresenter>
                    <ContentControl HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                        <ContentControl.Template>
                            <ControlTemplate TargetType="{x:Type ContentControl}">
                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Content="{TemplateBinding Content}" />
                            </ControlTemplate>
                        </ContentControl.Template>
                        <ContentControl.Visibility>
                            <Binding Path="(dxgr:GridControl.CurrentView).WaitIndicatorType" RelativeSource="{RelativeSource TemplatedParent}">
                                <Binding.Converter>
                                    <dx:EnumToObjectConverter DefaultValue="Collapsed">
                                        <dx:EnumToObjectConverter.Values>
                                            <dx:EnumObjectProvider x:Key="Panel" Value="Visible" />
                                        </dx:EnumToObjectConverter.Values>
                                    </dx:EnumToObjectConverter>
                                </Binding.Converter>
                            </Binding>
                        </ContentControl.Visibility>
                        <dx:WaitIndicator DeferedVisibility="{Binding Path=(dxgr:GridControl.CurrentView).IsWaitIndicatorVisible, RelativeSource={RelativeSource TemplatedParent}}" Style="{Binding Path=(dxgr:GridControl.CurrentView).WaitIndicatorStyle, RelativeSource={RelativeSource TemplatedParent}}" />
                    </ContentControl>
                </Grid>
                <Grid Grid.Column="1" HorizontalAlignment="Right" Visibility="{Binding ComputedVerticalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                    <Grid.RowSpan>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxgr:GridControl.CurrentView).ShowTotalSummary" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxgr:VerticalScrollBarRowSpanConverter />
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </Grid.RowSpan>

                    <ScrollBar
                        x:Name="PART_VerticalScrollBar"
                        HorizontalAlignment="Right"
                        dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                        Maximum="{Binding ScrollableHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        ViewportSize="{Binding ViewportHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        Value="{Binding VerticalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                        <dxgr:GridControl.CurrentViewChangedListener>
                            <dxgr:VerticalScrollBarBlendCustomizationExtension />
                        </dxgr:GridControl.CurrentViewChangedListener>
                        <dxgr:GridViewHitInfoBase.HitTestAcceptor>
                            <dxght:VerticalScrollBarTableViewHitTestAcceptor />
                        </dxgr:GridViewHitInfoBase.HitTestAcceptor>
                    </ScrollBar>
                </Grid>
                <Grid
                    x:Name="gridScroll"
                    Margin="{DynamicResource {dxgt:LWKey ExtendedColumnChooser.HorizontalScrollbarMargin}}"
                    VerticalAlignment="Bottom"
                    Visibility="{Binding Path=(dxgr:GridControl.CurrentView).ShowDataNavigator, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.Row>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxgr:GridControl.CurrentView).ShowTotalSummary" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxgr:HorizontalScrollBarRowConverter />
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </Grid.Row>
                    <Grid.RowSpan>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxgr:GridControl.CurrentView).ShowTotalSummary" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxgr:HorizontalScrollBarRowSpanConverter />
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </Grid.RowSpan>
                    <Grid.ColumnSpan>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding Path="(dxgr:GridControl.CurrentView).TotalSummaryPosition" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxgr:GridControl.CurrentView).FixedRightContentWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxgr:GridControl.CurrentView).ExtendScrollBarToFixedColumns" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxgr:HorizontalScrollBarGridColumnSpanConverter />
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </Grid.ColumnSpan>

                    <ScrollBar
                        x:Name="PART_HorizontalScrollBar"
                        Maximum="{Binding ScrollableWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        Orientation="Horizontal"
                        ViewportSize="{Binding ViewportWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        Value="{Binding HorizontalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                        <dxgr:GridViewHitInfoBase.HitTestAcceptor>
                            <dxght:HorizontalScrollBarTableViewHitTestAcceptor />
                        </dxgr:GridViewHitInfoBase.HitTestAcceptor>
                    </ScrollBar>
                </Grid>

                <dxgr:FitContentContainer Grid.Row="3" Grid.Column="1">
                    <dxgr:FitContentContainer.Visibility>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding Path="(dxgr:GridControl.CurrentView).TotalSummaryPosition" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxgr:GridControl.CurrentView).FixedRightContentWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxgr:GridControl.CurrentView).ExtendScrollBarToFixedColumns" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxgr:FitContentContainerConverter />
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </dxgr:FitContentContainer.Visibility>
                    <dx:DXBorder
                        x:Name="PART_HorizontalScrollCorner"
                        dxgr:GridBorderHelper.ShowBorder="{Binding Path=(dxgr:GridControl.CurrentView).ShowTotalSummary, RelativeSource={RelativeSource TemplatedParent}}"
                        dxgr:GridScrollBarHelper.ExtendScrollBarToFixedColumns="{Binding Path=(dxgr:GridControl.CurrentView).ExtendScrollBarToFixedColumns, RelativeSource={RelativeSource TemplatedParent}}"
                        dxgr:GridScrollBarHelper.HasFixedRightColumns="False"
                        Style="{DynamicResource {dxgt:LWKey ScrollBar.ScrollingCornerStyle}}" />
                </dxgr:FitContentContainer>
            </Grid>
            <dxgr:OuterBorderElement
                x:Name="outerBorder"
                Grid.Row="1"
                Grid.RowSpan="2"
                ShowColumnHeaders="{Binding Path=(dxgr:GridControl.CurrentView).ShowColumnHeaders, RelativeSource={RelativeSource TemplatedParent}}"
                Style="{DynamicResource {dxgt:LWKey ExtendedColumnChooser.OuterBorderElementStyle}}" />
            <dxgcore:FocusRectPresenter
                x:Name="PART_FocusRectPresenter"
                Grid.RowSpan="4"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                View="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" />
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dx:ScrollBarExtensions.ScrollBarMode), RelativeSource={RelativeSource TemplatedParent}}" Value="TouchOverlap">
                <Setter TargetName="gridScroll" Property="Grid.Visibility" Value="{Binding ComputedHorizontalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxgr:GridControl.CurrentView).ShowDataNavigator, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter TargetName="gridScroll" Property="Grid.Visibility" Value="{Binding ComputedHorizontalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\ExtendedColumnChooser.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\ExcelColumnFilterTreeView.xaml-->
    <DataTemplate x:Key="{dxgt:LWKey ExcelColumnFilterPopup.TreeListBehaviorTemplate}">
        <ItemsControl>
            <dxgr:ExcelColumnFilterListBehavior />
            <dxgr:ExcelColumnFilterMouseClickBehavior />
        </ItemsControl>
    </DataTemplate>

    <Style x:Key="{dxgt:LWKey ExcelColumnFilterPopup.TreeListStyle}" TargetType="{x:Type dxgr:TreeListView}">
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate" Value="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.TreeListBehaviorTemplate}}" />
        <Setter Property="NavigationStyle" Value="Row" />
        <Setter Property="ShowCheckboxes" Value="True" />
        <Setter Property="ShowVerticalLines" Value="False" />
        <Setter Property="ShowHorizontalLines" Value="False" />
        <Setter Property="ShowColumnHeaders" Value="False" />
        <Setter Property="ShowIndicator" Value="False" />
        <Setter Property="TreeLineStyle" Value="None" />
        <Setter Property="ShowSearchPanelMode" Value="Never" />
        <Setter Property="AllowEditing" Value="False" />
        <Setter Property="CheckBoxFieldName" Value="IsChecked" />
        <Setter Property="ShowNodeImages" Value="False" />
        <Setter Property="ShowExpandButtons" Value="{Binding IsHierarchicalView}" />
        <Setter Property="ShowRootIndent" Value="{Binding IsHierarchicalView}" />
        <Setter Property="SearchPanelHighlightResults" Value="False" />
        <Setter Property="ImmediateUpdateCheckBoxState" Value="True" />
        <Setter Property="TreeDerivationMode" Value="ChildNodesSelector" />
        <Setter Property="EnableDynamicLoading" Value="False" />
        <Setter Property="SearchString" Value="{Binding Path=ActualSearchText, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" />
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.TreeViewTemplate}}" />
    </Style>

    <ControlTemplate x:Key="{dxgt:LWKey ExcelColumnFilterPopup.TreeViewTemplate}" TargetType="{x:Type dxgr:TreeListView}">
        <ScrollViewer
            x:Name="scr"
            dx:ScrollBarExtensions.ScrollBehavior="{x:Null}"
            dxgr:GridControl.CurrentView="{Binding RelativeSource={RelativeSource TemplatedParent}}"
            Focusable="False"
            HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollbarVisibility}"
            Template="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.TreeViewScrollViewerTemplate}}"
            VerticalScrollBarVisibility="{TemplateBinding VerticalScrollbarVisibility}">
            <ScrollViewer.CanContentScroll>True</ScrollViewer.CanContentScroll>
            <dx:ScrollBarExtensions.AllowMouseScrolling>
                <Binding Path="(dxgr:GridControl.CurrentView).UseExtendedMouseScrolling" RelativeSource="{RelativeSource Self}" />
            </dx:ScrollBarExtensions.AllowMouseScrolling>
        </ScrollViewer>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:LWKey ExcelColumnFilterPopup.TreeViewScrollViewerTemplate}">
        <Grid dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" ClipToBounds="True" SnapsToDevicePixels="true">
            <dx:ScrollBarExtensions.ScrollBehavior>
                <Binding Path="(dxgr:GridControl.CurrentView).UseExtendedMouseScrolling" RelativeSource="{RelativeSource Self}">
                    <Binding.Converter>
                        <dx:BoolToObjectConverter FalseValue="{dx:NativeScrollBehavior}" TrueValue="{dxgcore:DataPresenterScrollBehavior}" />
                    </Binding.Converter>
                </Binding>
            </dx:ScrollBarExtensions.ScrollBehavior>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <dx:BestFitDecorator
                x:Name="PART_BestFitControlDecorator"
                Width="0"
                Height="0"
                dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}">
                <dxgr:GridControl.CurrentViewChangedListener>
                    <dxgr:BestFitControlDecoratorInitializer />
                </dxgr:GridControl.CurrentViewChangedListener>
            </dx:BestFitDecorator>
            <Grid
                x:Name="rowPresenterGrid"
                Grid.Row="1"
                Margin="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.RowPresenterGridMargin}}"
                dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Grid Grid.Row="1">
                    <Grid.ColumnSpan>
                        <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}">
                            <Binding.Converter>
                                <dxmvvm:ObjectToObjectConverter DefaultSource="Default" DefaultTarget="1">
                                    <dxmvvm:MapItem Source="TouchOverlap" Target="2" />
                                </dxmvvm:ObjectToObjectConverter>
                            </Binding.Converter>
                        </Binding>
                    </Grid.ColumnSpan>
                    <ScrollContentPresenter
                        x:Name="PART_ScrollContentPresenter"
                        MinWidth="{Binding Path=(dxgr:GridControl.CurrentView).ScrollableAreaMinWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        dxgcore:FocusRectPresenter.IsVerticalScrollHost="True"
                        dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                        ScrollViewer.CanContentScroll="True">
                        <dxgr:GridControl.CurrentViewChangedListener>
                            <dxgr:ScrollContentPresenterInitializer />
                        </dxgr:GridControl.CurrentViewChangedListener>

                        <ScrollContentPresenter.Content>
                            <dxgr:DataPresenter x:Name="dataPresenter" dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" Template="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.DataPresenterTemplate}}" />
                        </ScrollContentPresenter.Content>
                        <dxgr:GridViewHitInfoBase.HitTestAcceptor>
                            <dxght:DataAreaTableViewHitTestAcceptor />
                        </dxgr:GridViewHitInfoBase.HitTestAcceptor>
                    </ScrollContentPresenter>
                    <ContentControl HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                        <ContentControl.Template>
                            <ControlTemplate TargetType="{x:Type ContentControl}">
                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Content="{TemplateBinding Content}" />
                            </ControlTemplate>
                        </ContentControl.Template>
                        <ContentControl.Visibility>
                            <Binding Path="(dxgr:GridControl.CurrentView).WaitIndicatorType" RelativeSource="{RelativeSource TemplatedParent}">
                                <Binding.Converter>
                                    <dx:EnumToObjectConverter DefaultValue="Collapsed">
                                        <dx:EnumToObjectConverter.Values>
                                            <dx:EnumObjectProvider x:Key="Panel" Value="Visible" />
                                        </dx:EnumToObjectConverter.Values>
                                    </dx:EnumToObjectConverter>
                                </Binding.Converter>
                            </Binding>
                        </ContentControl.Visibility>
                        <dx:WaitIndicator DeferedVisibility="{Binding Path=(dxgr:GridControl.CurrentView).IsWaitIndicatorVisible, RelativeSource={RelativeSource TemplatedParent}}" Style="{Binding Path=(dxgr:GridControl.CurrentView).WaitIndicatorStyle, RelativeSource={RelativeSource TemplatedParent}}" />
                    </ContentControl>
                </Grid>
                <Grid Grid.Column="1" HorizontalAlignment="Right" Visibility="{Binding ComputedVerticalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                    <Grid.RowSpan>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxgr:GridControl.CurrentView).ShowTotalSummary" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxgr:VerticalScrollBarRowSpanConverter />
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </Grid.RowSpan>

                    <ScrollBar
                        x:Name="PART_VerticalScrollBar"
                        HorizontalAlignment="Right"
                        dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                        Maximum="{Binding ScrollableHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        ViewportSize="{Binding ViewportHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        Value="{Binding VerticalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                        <dxgr:GridControl.CurrentViewChangedListener>
                            <dxgr:VerticalScrollBarBlendCustomizationExtension />
                        </dxgr:GridControl.CurrentViewChangedListener>
                        <dxgr:GridViewHitInfoBase.HitTestAcceptor>
                            <dxght:VerticalScrollBarTableViewHitTestAcceptor />
                        </dxgr:GridViewHitInfoBase.HitTestAcceptor>
                    </ScrollBar>
                </Grid>
                <Grid
                    x:Name="gridScroll"
                    Margin="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.HorizontalScrollbarMargin}}"
                    VerticalAlignment="Bottom"
                    Visibility="{Binding Path=(dxgr:GridControl.CurrentView).ShowDataNavigator, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.Row>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxgr:GridControl.CurrentView).ShowTotalSummary" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxgr:HorizontalScrollBarRowConverter />
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </Grid.Row>
                    <Grid.RowSpan>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxgr:GridControl.CurrentView).ShowTotalSummary" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxgr:HorizontalScrollBarRowSpanConverter />
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </Grid.RowSpan>
                    <Grid.ColumnSpan>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding Path="(dxgr:GridControl.CurrentView).TotalSummaryPosition" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxgr:GridControl.CurrentView).FixedRightContentWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxgr:GridControl.CurrentView).ExtendScrollBarToFixedColumns" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxgr:HorizontalScrollBarGridColumnSpanConverter />
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </Grid.ColumnSpan>

                    <ScrollBar
                        x:Name="PART_HorizontalScrollBar"
                        Maximum="{Binding ScrollableWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        Orientation="Horizontal"
                        ViewportSize="{Binding ViewportWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        Value="{Binding HorizontalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                        <dxgr:GridViewHitInfoBase.HitTestAcceptor>
                            <dxght:HorizontalScrollBarTableViewHitTestAcceptor />
                        </dxgr:GridViewHitInfoBase.HitTestAcceptor>
                    </ScrollBar>
                </Grid>

                <dxgr:FitContentContainer Grid.Row="3" Grid.Column="1">
                    <dxgr:FitContentContainer.Visibility>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding Path="(dxgr:GridControl.CurrentView).TotalSummaryPosition" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxgr:GridControl.CurrentView).FixedRightContentWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxgr:GridControl.CurrentView).ExtendScrollBarToFixedColumns" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxgr:FitContentContainerConverter />
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </dxgr:FitContentContainer.Visibility>
                    <dx:DXBorder
                        x:Name="PART_HorizontalScrollCorner"
                        dxgr:GridBorderHelper.ShowBorder="{Binding Path=(dxgr:GridControl.CurrentView).ShowTotalSummary, RelativeSource={RelativeSource TemplatedParent}}"
                        dxgr:GridScrollBarHelper.ExtendScrollBarToFixedColumns="{Binding Path=(dxgr:GridControl.CurrentView).ExtendScrollBarToFixedColumns, RelativeSource={RelativeSource TemplatedParent}}"
                        dxgr:GridScrollBarHelper.HasFixedRightColumns="False"
                        Style="{DynamicResource {dxgt:LWKey ScrollBar.ScrollingCornerStyle}}" />
                </dxgr:FitContentContainer>
            </Grid>
            <dxgr:OuterBorderElement
                x:Name="outerBorder"
                Grid.Row="0"
                Grid.RowSpan="2"
                ShowColumnHeaders="{Binding Path=(dxgr:GridControl.CurrentView).ShowColumnHeaders, RelativeSource={RelativeSource TemplatedParent}}" />
            <dxgcore:FocusRectPresenter
                x:Name="PART_FocusRectPresenter"
                Grid.RowSpan="4"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                View="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" />
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dx:ScrollBarExtensions.ScrollBarMode), RelativeSource={RelativeSource TemplatedParent}}" Value="TouchOverlap">
                <Setter TargetName="gridScroll" Property="Grid.Visibility" Value="{Binding ComputedHorizontalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxgr:GridControl.CurrentView).ShowDataNavigator, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter TargetName="gridScroll" Property="Grid.Visibility" Value="{Binding ComputedHorizontalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\ExcelColumnFilterTreeView.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\ExcelColumnFilter.xaml-->
    <Style x:Key="{dxgt:LWKey ExcelColumnFilterPopup.TreeListBorderStyle}" BasedOn="{StaticResource TreeListBorderStyle}" TargetType="{x:Type Border}" />

    <DataTemplate x:Key="{dxgt:LWKey ExcelColumnFilterPopup.Template}">
        <DataTemplate.Resources>
            <dxmvvm:ObjectToObjectConverter x:Key="FilterTypeRulesConverter" DefaultSource="FilterRules" DefaultTarget="Visible">
                <dxmvvm:MapItem Source="FilterValues" Target="Collapsed" />
            </dxmvvm:ObjectToObjectConverter>
            <dxmvvm:ObjectToObjectConverter x:Key="FilterTypeValuesConverter" DefaultSource="FilterValues" DefaultTarget="Visible">
                <dxmvvm:MapItem Source="FilterRules" Target="Collapsed" />
            </dxmvvm:ObjectToObjectConverter>
            <dxmvvm:ObjectToObjectConverter x:Key="HeaderButtonRulesConverter" DefaultSource="FilterRules" DefaultTarget="True">
                <dxmvvm:MapItem Source="FilterValues" Target="False" />
            </dxmvvm:ObjectToObjectConverter>
            <dxmvvm:ObjectToObjectConverter x:Key="HeaderButtonValuesConverter" DefaultSource="FilterValues" DefaultTarget="True">
                <dxmvvm:MapItem Source="FilterRules" Target="False" />
            </dxmvvm:ObjectToObjectConverter>
        </DataTemplate.Resources>
        <dxgr:ExcelColumnFilterPanel
            Background="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.FilterPanelBackground}}"
            ChildMinWidth="{Binding Path=(dxe:PopupBaseEdit.PopupOwnerEdit).PopupMinWidth, RelativeSource={RelativeSource Self}}"
            DataContext="{Binding Path=ColumnFilterInfo, RelativeSource={RelativeSource TemplatedParent}}"
            LastChildFilled="{Binding FilterType, Converter={StaticResource HeaderButtonValuesConverter}}">
            <Grid
                x:Name="PART_HeadersPanel"
                VerticalAlignment="Top"
                Style="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.HeaderContainerStyle}}"
                Visibility="{Binding Path=AllowedFilterTypes, Converter={StaticResource HeaderVisibilityConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <dx:DXBorder Grid.ColumnSpan="4" Style="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.HeaderPanelBottomBorderStyle}}" />
                <dxgr:ExcelColumnFilterHeaderButton
                    x:Name="PART_HeaderCustom"
                    Command="{Binding SetIsSelectedCommand, RelativeSource={RelativeSource Self}}"
                    IsSelected="{Binding Path=FilterType, Converter={StaticResource HeaderButtonRulesConverter}, Mode=TwoWay}"
                    Style="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.ButtonHeaderStyle}}">
                    <dxgr:ExcelColumnFilterHeaderButton.Content>
                        <Binding Converter="{StaticResource LocalizationStringValueConverter}" ConverterParameter="ExcelColumnFilterPopupFilterRulesTabCaption" Path="Column.View.LocalizationDescriptor" />
                    </dxgr:ExcelColumnFilterHeaderButton.Content>
                </dxgr:ExcelColumnFilterHeaderButton>
                <Control x:Name="PART_HeaderSeparator" Grid.Column="1" Style="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.HeaderSeparatorStyle}}" />
                <dxgr:ExcelColumnFilterHeaderButton
                    x:Name="PART_HeaderValues"
                    Grid.Column="2"
                    Command="{Binding SetIsSelectedCommand, RelativeSource={RelativeSource Self}}"
                    IsSelected="{Binding Path=FilterType, Converter={StaticResource HeaderButtonValuesConverter}, Mode=TwoWay}"
                    Style="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.ButtonHeaderStyle}}">
                    <dxgr:ExcelColumnFilterHeaderButton.Content>
                        <Binding Converter="{StaticResource LocalizationStringValueConverter}" ConverterParameter="ExcelColumnFilterPopupValuesTabCaption" Path="Column.View.LocalizationDescriptor" />
                    </dxgr:ExcelColumnFilterHeaderButton.Content>
                </dxgr:ExcelColumnFilterHeaderButton>
            </Grid>
            <Grid VerticalAlignment="Stretch" Style="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.ContentStyle}}">
                <ContentControl
                    x:Name="PART_ContentCustom"
                    Grid.Row="1"
                    dx:FocusHelper2.Focusable="False"
                    Content="{Binding}"
                    ContentTemplate="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.RulesTemplate}}"
                    IsTabStop="False"
                    Visibility="{Binding Path=FilterType, Converter={StaticResource FilterTypeRulesConverter}}" />
                <ContentControl
                    x:Name="PART_ContentValues"
                    Grid.Row="1"
                    dx:FocusHelper2.Focusable="False"
                    Content="{Binding}"
                    ContentTemplate="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.ValuesTemplate}}"
                    IsTabStop="False"
                    Visibility="{Binding Path=FilterType, Converter={StaticResource FilterTypeValuesConverter}}" />
            </Grid>
        </dxgr:ExcelColumnFilterPanel>
    </DataTemplate>
    <ControlTemplate x:Key="{dxgt:LWKey ExcelColumnFilterPopup.HeaderSeparatorTemplate}" TargetType="{x:Type Control}">
        <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" StrokeThickness="0" />
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:LWKey ExcelColumnFilterPopup.CustomFilterOperandLineTemplate}" TargetType="{x:Type dxgr:ExcelCustomFilterOperandLineControl}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="2*" />
            </Grid.ColumnDefinitions>
            <TextBlock
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Text="{TemplateBinding OperandCaption}"
                Visibility="{Binding Path=Text, RelativeSource={RelativeSource Self}, Converter={dx:NullableToVisibilityConverter}}" />
            <dxgr:ExcelCustomFilterOperandLineContentPresenter
                x:Name="PART_EditorValuesContainer"
                Content="{Binding}"
                CustomFilterInfo="{TemplateBinding CustomFilterInfo}"
                EditValuePath="{Binding Path=EditValuePath, RelativeSource={RelativeSource TemplatedParent}}"
                ValueConverter="{Binding Path=ValueConverter, RelativeSource={RelativeSource TemplatedParent}}">
                <Grid.Column>
                    <Binding Path="OperandCaption" RelativeSource="{RelativeSource TemplatedParent}">
                        <Binding.Converter>
                            <dxmvvm:ObjectToObjectConverter DefaultTarget="1">
                                <dxmvvm:MapItem Source="{x:Null}" Target="0" />
                            </dxmvvm:ObjectToObjectConverter>
                        </Binding.Converter>
                    </Binding>
                </Grid.Column>
                <Grid.ColumnSpan>
                    <Binding Path="OperandCaption" RelativeSource="{RelativeSource TemplatedParent}">
                        <Binding.Converter>
                            <dxmvvm:ObjectToObjectConverter DefaultTarget="1">
                                <dxmvvm:MapItem Source="{x:Null}" Target="2" />
                            </dxmvvm:ObjectToObjectConverter>
                        </Binding.Converter>
                    </Binding>
                </Grid.ColumnSpan>
                <dxgr:ExcelCustomFilterOperandLineContentPresenter.ContentTemplateSelector>
                    <dxgr:ExcelCustonFilterEditorTemplateSelector>
                        <dxgr:ExcelCustonFilterEditorTemplateSelector.NumericTemplate>
                            <DataTemplate>
                                <dxgr:ExcelCustomFilterOperandEditorContainer
                                    CustomFilterInfo="{Binding Path=CustomFilterInfo, RelativeSource={RelativeSource TemplatedParent}}"
                                    EditValuePath="{Binding Path=EditValuePath, RelativeSource={RelativeSource TemplatedParent}}"
                                    NullTextLocalizationKey="ExcelColumnFilterPopupEnterValue"
                                    ValueConverter="{Binding Path=ValueConverter, RelativeSource={RelativeSource TemplatedParent}}" />
                            </DataTemplate>
                        </dxgr:ExcelCustonFilterEditorTemplateSelector.NumericTemplate>
                        <dxgr:ExcelCustonFilterEditorTemplateSelector.DateTimeTemplate>
                            <DataTemplate>
                                <dxgr:ExcelCustomFilterOperandDateEditorContainer
                                    CustomFilterInfo="{Binding Path=CustomFilterInfo, RelativeSource={RelativeSource TemplatedParent}}"
                                    EditValuePath="{Binding Path=EditValuePath, RelativeSource={RelativeSource TemplatedParent}}"
                                    NullTextLocalizationKey="ExcelColumnFilterPopupSelectDate"
                                    ValueConverter="{Binding Path=ValueConverter, RelativeSource={RelativeSource TemplatedParent}}">
                                    <dxgr:ExcelCustomFilterOperandDateEditorContainer.DateButtonTemplate>
                                        <DataTemplate>
                                            <dx:DXImage Source="{dx:SvgImageSource Uri='/DevExpress.Xpf.Grid.v24.1;component/Images/CalendarDate.svg'}">
                                                <dx:DXImage.Style>
                                                    <Style TargetType="{x:Type dx:DXImage}">
                                                        <Setter Property="Margin" Value="2,1,1,0" />
                                                        <Setter Property="VerticalAlignment" Value="Center" />
                                                        <Setter Property="HorizontalAlignment" Value="Center" />
                                                        <Setter Property="Width" Value="16" />
                                                        <Setter Property="Height" Value="16" />
                                                        <Style.Triggers>
                                                            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                                                                <Setter Property="Margin" Value="16,1,17,0" />
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </dx:DXImage.Style>
                                            </dx:DXImage>
                                        </DataTemplate>
                                    </dxgr:ExcelCustomFilterOperandDateEditorContainer.DateButtonTemplate>
                                </dxgr:ExcelCustomFilterOperandDateEditorContainer>
                            </DataTemplate>
                        </dxgr:ExcelCustonFilterEditorTemplateSelector.DateTimeTemplate>
                        <dxgr:ExcelCustonFilterEditorTemplateSelector.ObjectEditableTemplate>
                            <DataTemplate>
                                <dxgr:ExcelCustomFilterOperandEditorContainer
                                    CustomFilterInfo="{Binding Path=CustomFilterInfo, RelativeSource={RelativeSource TemplatedParent}}"
                                    EditValuePath="{Binding Path=EditValuePath, RelativeSource={RelativeSource TemplatedParent}}"
                                    NullTextLocalizationKey="ExcelColumnFilterPopupEnterValue"
                                    ValueConverter="{Binding Path=ValueConverter, RelativeSource={RelativeSource TemplatedParent}}" />
                            </DataTemplate>
                        </dxgr:ExcelCustonFilterEditorTemplateSelector.ObjectEditableTemplate>
                        <dxgr:ExcelCustonFilterEditorTemplateSelector.ObjectNonEditableTemplate>
                            <DataTemplate>
                                <dxgr:ExcelCustomFilterOperandEditorContainer
                                    CustomFilterInfo="{Binding Path=CustomFilterInfo, RelativeSource={RelativeSource TemplatedParent}}"
                                    EditValuePath="{Binding Path=EditValuePath, RelativeSource={RelativeSource TemplatedParent}}"
                                    NullTextLocalizationKey="ExcelColumnFilterPopupEnterValue"
                                    ValueConverter="{Binding Path=ValueConverter, RelativeSource={RelativeSource TemplatedParent}}" />
                            </DataTemplate>
                        </dxgr:ExcelCustonFilterEditorTemplateSelector.ObjectNonEditableTemplate>
                    </dxgr:ExcelCustonFilterEditorTemplateSelector>
                </dxgr:ExcelCustomFilterOperandLineContentPresenter.ContentTemplateSelector>
            </dxgr:ExcelCustomFilterOperandLineContentPresenter>
        </Grid>
    </ControlTemplate>
    <DataTemplate x:Key="{dxgt:LWKey ExcelColumnFilterPopup.RulesSimpleTemplate}" />
    <DataTemplate x:Key="{dxgt:LWKey ExcelColumnFilterPopup.RulesUnaryTemplate}">
        <dxgr:ExcelCustomFilterOperandLineControl
            x:Name="PART_LeftOperandContainer"
            CustomFilterInfo="{Binding CustomFilterInfo}"
            EditValuePath="AdditionalOperands[0].Operand"
            ValueConverter="{StaticResource ExcelCustomFilterOperandConverter}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxgt:LWKey ExcelColumnFilterPopup.RulesBinaryTemplate}">
        <StackPanel>
            <dxgr:ExcelCustomFilterOperandLineControl
                x:Name="PART_LeftOperandContainer"
                CustomFilterInfo="{Binding CustomFilterInfo}"
                EditValuePath="AdditionalOperands[0].Operand"
                ValueConverter="{StaticResource ExcelCustomFilterOperandConverter}">
                <dxgr:ExcelCustomFilterOperandLineControl.OperandCaption>
                    <Binding Converter="{StaticResource LocalizationStringValueConverter}" ConverterParameter="ExcelColumnFilterPopupFilterBetweenFrom" Path="CustomFilterInfo.Column.View.LocalizationDescriptor" />
                </dxgr:ExcelCustomFilterOperandLineControl.OperandCaption>
            </dxgr:ExcelCustomFilterOperandLineControl>
            <dxgr:ExcelCustomFilterOperandLineControl
                x:Name="PART_RightOperandContainer"
                CustomFilterInfo="{Binding CustomFilterInfo}"
                EditValuePath="AdditionalOperands[1].Operand"
                ValueConverter="{StaticResource ExcelCustomFilterOperandConverter}">
                <dxgr:ExcelCustomFilterOperandLineControl.OperandCaption>
                    <Binding Converter="{StaticResource LocalizationStringValueConverter}" ConverterParameter="ExcelColumnFilterPopupFilterBetweenTo" Path="CustomFilterInfo.Column.View.LocalizationDescriptor" />
                </dxgr:ExcelCustomFilterOperandLineControl.OperandCaption>
            </dxgr:ExcelCustomFilterOperandLineControl>
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="{dxgt:LWKey ExcelColumnFilterPopup.RulesOneLocalDateTimeTemplate}">
        <DataTemplate.Resources>
            <dxgr:ExcelCustomFilterLocalDateTimeOperandConverter x:Key="ExcelCustomFilterLocalDateTimeOperandConverter" />
        </DataTemplate.Resources>
        <dxgr:ExcelCustomFilterOperandLineControl
            x:Name="PART_OperandContainer"
            CustomFilterInfo="{Binding CustomFilterInfo}"
            EditValuePath="AdditionalOperands[0].Operand"
            ValueConverter="{StaticResource ExcelCustomFilterLocalDateTimeOperandConverter}" />
    </DataTemplate>
    <Style x:Key="{dxgt:LWKey ExcelColumnFilterPopup.CustomOperatorTypeStyle}" TargetType="{x:Type dxe:ComboBoxEdit}">
        <Setter Property="ValidateOnTextInput" Value="True" />
        <Setter Property="Margin" Value="0,0,0,12" />
    </Style>
    <DataTemplate x:Key="{dxgt:LWKey ExcelColumnFilterPopup.RulesTemplate}">
        <Grid DataContext="{Binding CustomFilterInfo}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <dxe:ComboBoxEdit
                x:Name="PART_OperatorType"
                AllowUpdateTwoWayBoundPropertiesOnSynchronization="False"
                DisplayMember="Caption"
                EditValue="{Binding CurrentOperator, UpdateSourceTrigger=PropertyChanged}"
                IsTextEditable="False"
                ItemsSource="{Binding Operators}"
                Style="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.CustomOperatorTypeStyle}}"
                ValueMember="Operator" />
            <ContentControl
                Grid.Row="1"
                dx:FocusHelper2.Focusable="False"
                Content="{Binding Clause}"
                IsTabStop="False">
                <ContentControl.ContentTemplateSelector>
                    <dxgr:ExcelCustomFilterTemplateSelector>
                        <dxgr:ExcelCustomFilterTemplateSelector.SimpleOperandTemplate>
                            <DataTemplate>
                                <ContentControl
                                    dx:FocusHelper2.Focusable="False"
                                    Content="{Binding}"
                                    ContentTemplate="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.RulesSimpleTemplate}}"
                                    IsTabStop="False" />
                            </DataTemplate>
                        </dxgr:ExcelCustomFilterTemplateSelector.SimpleOperandTemplate>
                        <dxgr:ExcelCustomFilterTemplateSelector.UnaryOperandTemplate>
                            <DataTemplate>
                                <ContentControl
                                    dx:FocusHelper2.Focusable="False"
                                    Content="{Binding}"
                                    ContentTemplate="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.RulesUnaryTemplate}}"
                                    IsTabStop="False" />
                            </DataTemplate>
                        </dxgr:ExcelCustomFilterTemplateSelector.UnaryOperandTemplate>
                        <dxgr:ExcelCustomFilterTemplateSelector.BinaryOperandTemplate>
                            <DataTemplate>
                                <ContentControl
                                    dx:FocusHelper2.Focusable="False"
                                    Content="{Binding}"
                                    ContentTemplate="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.RulesBinaryTemplate}}"
                                    IsTabStop="False" />
                            </DataTemplate>
                        </dxgr:ExcelCustomFilterTemplateSelector.BinaryOperandTemplate>
                        <dxgr:ExcelCustomFilterTemplateSelector.OneLocalDateTimeOperandTemplate>
                            <DataTemplate>
                                <ContentControl
                                    dx:FocusHelper2.Focusable="False"
                                    Content="{Binding}"
                                    ContentTemplate="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.RulesOneLocalDateTimeTemplate}}"
                                    IsTabStop="False" />
                            </DataTemplate>
                        </dxgr:ExcelCustomFilterTemplateSelector.OneLocalDateTimeOperandTemplate>
                    </dxgr:ExcelCustomFilterTemplateSelector>
                </ContentControl.ContentTemplateSelector>
            </ContentControl>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="{dxgt:LWKey ExcelColumnFilterPopup.ValuesTemplate}">
        <Grid HorizontalAlignment="Stretch">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid Style="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.SearchControlContainerStyle}}">
                <dxe:ButtonEdit x:Name="searchTextEdit" EditValue="{Binding Path=SearchText, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Style="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.SearchControlStyle}}">
                    <dxmvvm:Interaction.Behaviors>
                        <dxmvvm:KeyToCommand Command="{DXCommand Execute='@e(treeListView).Focus()'}" KeyGesture="Down" />
                    </dxmvvm:Interaction.Behaviors>
                    <dxe:ButtonEdit.Buttons>
                        <dxe:ButtonInfo
                            x:Name="buttonClear"
                            Command="{Binding Path=SetNullValueCommand, ElementName=searchTextEdit}"
                            GlyphKind="Custom"
                            Visibility="{Binding Path=EditValue, ElementName=searchTextEdit, Converter={dx:NullableToVisibilityConverter}}">
                            <dxe:ButtonInfo.Template>
                                <DataTemplate>
                                    <dxe:ButtonClose
                                        Margin="2,0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Command="{Binding Command}"
                                        Visibility="{Binding Visibility}" />
                                </DataTemplate>
                            </dxe:ButtonInfo.Template>
                        </dxe:ButtonInfo>
                        <dxe:ButtonInfo GlyphKind="Custom" IsLeft="True">
                            <dxe:ButtonInfo.Template>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Control Template="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.SearchGlyphTemplate}}" />
                                        <dxe:ComboBoxEdit
                                            x:Name="PART_SearchScope"
                                            DataContext="{Binding Path=(dxe:BaseEdit.OwnerEdit).DataContext}"
                                            EditMode="InplaceActive"
                                            EditValue="{Binding Path=SearchScope, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            Style="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.SearchScopeSelectorStyle}}"
                                            Visibility="{Binding Path=ShowSearchPanelScopeSelector, Converter={dx:BooleanToVisibilityConverter}}">
                                            <dxe:ComboBoxEdit.ItemsSource>
                                                <x:Array Type="{x:Type dxgcore:ExcelDateColumnFilterScope}">
                                                    <dxgcore:ExcelDateColumnFilterScope>Day</dxgcore:ExcelDateColumnFilterScope>
                                                    <dxgcore:ExcelDateColumnFilterScope>Month</dxgcore:ExcelDateColumnFilterScope>
                                                    <dxgcore:ExcelDateColumnFilterScope>Year</dxgcore:ExcelDateColumnFilterScope>
                                                    <dxgcore:ExcelDateColumnFilterScope>All</dxgcore:ExcelDateColumnFilterScope>
                                                </x:Array>
                                            </dxe:ComboBoxEdit.ItemsSource>
                                            <dxmvvm:Interaction.Behaviors>
                                                <dxgr:ExcelColumnFilterSearchScopeBehavior />
                                            </dxmvvm:Interaction.Behaviors>
                                            <dxe:ComboBoxEdit.Buttons>
                                                <dxe:ButtonInfo Command="{Binding Path=(dxe:BaseEdit.OwnerEdit).OpenPopupCommand, RelativeSource={RelativeSource Self}}" GlyphKind="Custom" IsDefaultButton="True">
                                                    <dxe:ButtonInfo.Template>
                                                        <DataTemplate>
                                                            <dxgr:ExcelColumnFilterDropDownButton x:Name="buttonSearchScope" Command="{Binding Command}" Template="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.DropDownGlyphTemplate}}" />
                                                        </DataTemplate>
                                                    </dxe:ButtonInfo.Template>
                                                </dxe:ButtonInfo>
                                            </dxe:ComboBoxEdit.Buttons>
                                        </dxe:ComboBoxEdit>
                                    </StackPanel>
                                </DataTemplate>
                            </dxe:ButtonInfo.Template>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEdit.Buttons>
                </dxe:ButtonEdit>
            </Grid>
            <dx:DXBorder Grid.Row="1" Style="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.TreeListBorderStyle}}">
                <dxgr:TreeListControl ItemsSource="{Binding FilterItems}" Style="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.TreeListControlStyle}}">
                    <dxgr:TreeListControl.Columns>
                        <dxgr:TreeListColumn FieldName="EditValue" AllowSearchPanel="False" Style="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.ValueColumnStyle}}" />
                        <dxgr:TreeListColumn
                            FieldName="SearchValue"
                            AllowSearchPanel="True"
                            UnboundType="String"
                            Visible="False" />
                        <dxgr:TreeListColumn FieldName="IsExpanded" AllowSearchPanel="False" Visible="False" />
                    </dxgr:TreeListControl.Columns>
                    <dxgr:TreeListControl.View>
                        <dxgr:TreeListView x:Name="treeListView" ExpandStateFieldName="IsExpanded" Style="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.TreeListStyle}}">
                            <dxmvvm:Interaction.Behaviors>
                                <dxgr:ExcelColumnFilterNavigationBehavior SearchControl="{Binding ElementName=searchTextEdit}" />
                            </dxmvvm:Interaction.Behaviors>
                        </dxgr:TreeListView>
                    </dxgr:TreeListControl.View>
                </dxgr:TreeListControl>
            </dx:DXBorder>
        </Grid>
    </DataTemplate>
    <Style x:Key="{dxgt:LWKey ExcelColumnFilterPopup.ValueColumnStyle}" TargetType="{x:Type dxgr:TreeListColumn}">
        <Setter Property="Width" Value="*" />
        <Setter Property="EditSettings" Value="{Binding ValueColumnEditSettings}" />
        <Setter Property="CellTemplateSelector">
            <Setter.Value>
                <dxgr:ExcelColumnFilterCellTemplateSelector>
                    <dxgr:ExcelColumnFilterCellTemplateSelector.ServiceValueTemplate>
                        <DataTemplate>
                            <dxe:TextEdit EditMode="InplaceInactive" EditValue="{Binding RowData.Row.DisplayValue, Mode=OneWay}" />
                        </DataTemplate>
                    </dxgr:ExcelColumnFilterCellTemplateSelector.ServiceValueTemplate>
                </dxgr:ExcelColumnFilterCellTemplateSelector>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxgt:LWKey ExcelColumnFilterPopup.TreeListControlStyle}" TargetType="{x:Type dxgr:TreeListControl}">
        <Setter Property="SelectionMode" Value="None" />
        <Setter Property="ShowLoadingPanel" Value="{Binding IsWaitIndicatorVisible, Mode=OneWay}" />
        <Setter Property="ShowBorder" Value="{StaticResource FilterElement.ShowBorder}" />
    </Style>

    <Style x:Key="{dxgt:LWKey ExcelColumnFilterPopup.SearchControlStyle}" TargetType="{x:Type dxe:ButtonEdit}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="NullText">
            <Setter.Value>
                <MultiBinding>
                    <MultiBinding.Bindings>
                        <Binding Path="." />
                        <Binding Path="SearchScope" />
                    </MultiBinding.Bindings>
                    <MultiBinding.Converter>
                        <dxgr:ExcelColumnFilterSearchNullTextConverter
                            DateAll="ExcelColumnFilterPopupSearchNullTextAll"
                            DateDay="ExcelColumnFilterPopupSearchNullTextDate"
                            DateMonth="ExcelColumnFilterPopupSearchNullTextMonth"
                            DateYear="ExcelColumnFilterPopupSearchNullTextYear"
                            Simple="ExcelColumnFilterPopupSearchNullText" />
                    </MultiBinding.Converter>
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="ValidateOnTextInput" Value="True" />
        <Setter Property="AllowDefaultButton" Value="False" />
    </Style>

    <Style x:Key="{dxgt:LWKey ExcelColumnFilterPopup.SearchScopeSelectorStyle}" TargetType="{x:Type dxe:ComboBoxEdit}">
        <Setter Property="EditMode" Value="InplaceActive" />
        <Setter Property="ShowText" Value="False" />
        <Setter Property="AllowDefaultButton" Value="False" />
        <Setter Property="FocusPopupOnOpen" Value="True" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock>
                        <TextBlock.Text>
                            <MultiBinding>
                                <MultiBinding.Converter>
                                    <dxgr:ExcelColumnFilterSearchNullTextConverter
                                        DateAll="ExcelColumnFilterPopupSearchScopeAll"
                                        DateDay="ExcelColumnFilterPopupSearchScopeDay"
                                        DateMonth="ExcelColumnFilterPopupSearchScopeMonth"
                                        DateYear="ExcelColumnFilterPopupSearchScopeYear"
                                        Simple="ExcelColumnFilterPopupSearchNullText" />
                                </MultiBinding.Converter>
                                <Binding ElementName="PART_SearchScope" Path="DataContext" />
                                <Binding Path="." />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxgt:LWKey ExcelColumnFilterPopup.ContentStyle}" TargetType="{x:Type Grid}">
        <Setter Property="Margin" Value="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.ContentMargin}}" />
    </Style>
    <Style x:Key="{dxgt:LWKey ExcelColumnFilterPopup.SearchControlContainerStyle}" TargetType="{x:Type Grid}">
        <Setter Property="Margin" Value="0,0,0,4" />
    </Style>

    <Style x:Key="{dxgt:LWKey ExcelColumnFilterPopup.HeaderPanelBottomBorderStyle}" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.HeaderPanelBottomBorderColor}}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
    </Style>
    <Style x:Key="{dxgt:LWKey ExcelColumnFilterPopup.HeaderSeparatorStyle}" TargetType="{x:Type Control}">
        <Setter Property="Width" Value="1" />
        <Setter Property="Height" Value="14" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.HeaderPanelSeparatorColor}}" />
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.HeaderSeparatorTemplate}}" />
    </Style>
    <Style x:Key="{dxgt:LWKey ExcelColumnFilterPopup.HeaderContainerStyle}" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.HeaderPanelBackground}}" />
    </Style>
    <Style x:Key="{dxgt:LWKey ExcelColumnFilterPopup.ButtonHeaderStyle}" TargetType="{x:Type dxgr:ExcelColumnFilterHeaderButton}">
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Foreground" Value="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.ButtonHeaderForeground}}" />
        <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.ButtonHeaderBackground}}" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="Padding" Value="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.ButtonHeaderPadding}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxgr:ExcelColumnFilterHeaderButton}">
                    <Grid>
                        <dx:DXBorder Background="{TemplateBinding Background}" BorderBrush="{x:Null}" BorderThickness="{TemplateBinding BorderThickness}" />
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Path
                            x:Name="PART_IsSelected_Top"
                            Grid.Row="1"
                            Width="9"
                            Height="6"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Bottom"
                            Data="M0,1 L1,0 2,1"
                            Fill="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.ButtonHeaderDecorationBackground}}"
                            Stretch="Fill"
                            Stroke="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.HeaderPanelBottomBorderColor}}"
                            StrokeThickness="1" />
                        <Path
                            x:Name="PART_IsSelected_Bottom"
                            Grid.Row="1"
                            Width="7"
                            Height="1"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Bottom"
                            Data="M0,0 L1,0"
                            Fill="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.ButtonHeaderDecorationBackground}}"
                            Stretch="Fill"
                            Stroke="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.ButtonHeaderDecorationBackground}}"
                            StrokeThickness="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="PART_IsSelected_Top" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_IsSelected_Bottom" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.ButtonHeaderSelectedForeground}}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="False" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Foreground" Value="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.ButtonHeaderFocusedForeground}}" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding" Value="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.ButtonHeaderPaddingTouch}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="{dxgt:LWKey ExcelColumnFilterPopup.PopupBottomAreaTemplate}" TargetType="{x:Type ContentControl}">
        <Grid x:Name="PART_Root" Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).PopupViewModel.FooterVisibility, RelativeSource={RelativeSource TemplatedParent}}">
            <ContentPresenter />
            <ContentControl dx:FocusHelper2.Focusable="False" Template="{DynamicResource {dxt:LWKey PopupBaseEdit.FooterTemplate}}" />
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <dx:UniformStackPanel
                    Width="Auto"
                    Margin="14,0,0,0"
                    HorizontalAlignment="Left"
                    ChildSpacing="0"
                    Orientation="Horizontal">
                    <Button
                        x:Name="PART_ClearFilterButton"
                        Margin="0,6"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        dx:FocusHelper2.Focusable="False"
                        Command="{Binding Path=ClearFilterCommand}"
                        IsEnabled="{Binding Path=IsFiltered}">
                        <Button.Content>
                            <Binding Converter="{StaticResource LocalizationStringValueConverter}" ConverterParameter="ExcelColumnFilterPopupClearFilter" Path="Column.View.LocalizationDescriptor" />
                        </Button.Content>
                    </Button>
                </dx:UniformStackPanel>
                <dx:UniformStackPanel
                    Grid.Column="2"
                    Width="Auto"
                    Margin="3,0,14,0"
                    HorizontalAlignment="Right"
                    ChildSpacing="0"
                    Orientation="Horizontal">
                    <Button
                        x:Name="PART_OkButton"
                        Margin="0,6,3,6"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        dx:FocusHelper2.Focusable="False"
                        Command="{Binding Path=(dxe:BaseEdit.OwnerEdit).ClosePopupCommand, RelativeSource={RelativeSource TemplatedParent}}"
                        Content="{Binding IsTabStop, RelativeSource={RelativeSource Self}, ConverterParameter=OK, Converter={StaticResource EditorStringIdConverter}}"
                        IsEnabled="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).PopupViewModel.OkButtonIsEnabled, RelativeSource={RelativeSource TemplatedParent}}"
                        Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).PopupViewModel.OkButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                        <Button.CommandParameter>
                            <dxe:PopupCloseMode>Normal</dxe:PopupCloseMode>
                        </Button.CommandParameter>
                    </Button>
                    <Button
                        x:Name="PART_CancelButton"
                        Margin="3,6,0,6"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        dx:FocusHelper2.Focusable="False"
                        Command="{Binding Path=(dxe:BaseEdit.OwnerEdit).ClosePopupCommand, RelativeSource={RelativeSource TemplatedParent}}"
                        Content="{Binding IsTabStop, RelativeSource={RelativeSource Self}, ConverterParameter=Cancel, Converter={StaticResource EditorStringIdConverter}}"
                        Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).PopupViewModel.CancelButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                        <Button.CommandParameter>
                            <dxe:PopupCloseMode>Cancel</dxe:PopupCloseMode>
                        </Button.CommandParameter>
                    </Button>
                </dx:UniformStackPanel>
            </Grid>
            <dxe:PopupSizeGrip
                x:Name="PART_SizeGrip"
                Margin="2,3,2,2"
                HorizontalAlignment="Right"
                VerticalAlignment="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).ResizeGripViewModel.VerticalAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                dx:FocusHelper2.Focusable="False"
                Style="{DynamicResource {dxt:LWKey PopupBaseEdit.ResizeGripStyle}}"
                Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).ResizeGripViewModel.Visibility, RelativeSource={RelativeSource TemplatedParent}}" />
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).PopupViewModel.IsLeft, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="PART_SizeGrip" Property="HorizontalAlignment" Value="Left" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\ExcelColumnFilter.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\DefaultGridViewStyles.xaml-->
    <Thickness x:Key="{dxgt:LWKey CardTemplates.CellFocusedBorderThickness}">1</Thickness>
    <dxgr:NavigationStyleToBoolean x:Key="NavigationStyleToBoolean" />

    <!-- PROCESS SETTERS WITH BINDING -->
    <DataTemplate x:Key="{dxgt:LWKey GridColumnHeader.DragElementTemplate}">
        <Grid HorizontalAlignment="Left" VerticalAlignment="Top" DataContext="{Binding Path=Content.Column, RelativeSource={RelativeSource TemplatedParent}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <dxgr:DragGridColumnHeader
                x:Name="header"
                Width="{Binding Path=(dxgr:GridColumnHeader.DragElementSize).Width, RelativeSource={RelativeSource TemplatedParent}}"
                Height="{Binding Path=(dxgr:GridColumnHeader.DragElementSize).Height, RelativeSource={RelativeSource TemplatedParent}}"
                dxgr:GridColumnHeader.GridColumn="{Binding}"
                ColumnPosition="Standalone" />
            <dx:DragIconControl
                x:Name="dropIndicator"
                Grid.Row="1"
                Grid.Column="1"
                Margin="-12,-12,0,0"
                DragType="Remove">
                <dx:DragIconControl.Opacity>
                    <Binding Path="(dxgr:GridColumnHeader.IsInDropArea)" RelativeSource="{RelativeSource TemplatedParent}">
                        <Binding.Converter>
                            <dx:BoolToObjectConverter FalseValue="0" TrueValue="1" />
                        </Binding.Converter>
                    </Binding>
                </dx:DragIconControl.Opacity>
            </dx:DragIconControl>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxgcore:BaseGridColumnHeader.DragElementAllowTransparency), RelativeSource={RelativeSource Self}}" Value="False">
                <Setter TargetName="header" Property="Grid.ColumnSpan" Value="2" />
                <Setter TargetName="header" Property="Grid.RowSpan" Value="2" />

                <Setter TargetName="dropIndicator" Property="Grid.Column" Value="0" />
                <Setter TargetName="dropIndicator" Property="Grid.ColumnSpan" Value="2" />
                <Setter TargetName="dropIndicator" Property="Grid.Row" Value="0" />
                <Setter TargetName="dropIndicator" Property="Grid.RowSpan" Value="2" />
                <Setter TargetName="dropIndicator" Property="Grid.Column" Value="0" />
                <Setter TargetName="dropIndicator" Property="Margin" Value="0" />
                <Setter TargetName="dropIndicator" Property="HorizontalAlignment" Value="Right" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>


    <Style x:Key="GridColumnHeaderBaseStyle" TargetType="{x:Type dxgcore:GridColumnHeaderBase}">
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey GridColumnHeader.ControlTemplate}}" />
        <Setter Property="dxgr:GridColumnHeader.DragElementTemplate" Value="{DynamicResource {dxgt:LWKey GridColumnHeader.DragElementTemplate}}" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="TextElement.Foreground" Value="{DynamicResource {dxgt:LWKey GridColumnHeader.HeaderCaptionForeground}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:LWKey GridColumnHeader.BorderBrush}}" />
        <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey GridColumnHeader.Background}}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey GridColumnHeader.BackgroundMouseOver}}" />
                <Setter Property="TextElement.Foreground" Value="{DynamicResource {dxgt:LWKey GridColumnHeader.HeaderHoverCaptionForeground}}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey GridColumnHeader.BackgroundPressed}}" />
                <Setter Property="TextElement.Foreground" Value="{DynamicResource {dxgt:LWKey GridColumnHeader.HeaderPressedCaptionForeground}}" />
            </Trigger>
            <Trigger Property="dxgr:ExtendedColumnChooserGridColumnHeader.IsDragOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey GridColumnHeader.BackgroundMouseOver}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {dxt:LWKey DragDrop.DropMarkerBorderBrush}}" />
            </Trigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(dxgr:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.HasBackground)}" Value="True">
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxgr:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.Background)}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxgt:LWKey GridColumnHeader.FilterAreaStyle}" TargetType="{x:Type dxe:PopupBaseEdit}">
        <Setter Property="Foreground" Value="{DynamicResource {dxgt:LWKey GridColumnHeader.FilterPopupForegroundBrush}}" />
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey GridColumnHeader.FilterAreaTemplate}}" />
        <Setter Property="AutomationProperties.Name" Value="FilterDropDown" />
        <Setter Property="AutomationProperties.AutomationId" Value="FilterDropDown" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(dxgr:GridColumnHeader.GridColumn).FilterPopupMode, RelativeSource={RelativeSource Self}}" Value="ExcelSmart">
                <Setter Property="PopupBottomAreaTemplate" Value="{DynamicResource {dxgt:LWKey ExcelStyleFilterElement.PopupBottomAreaTemplate}}" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(dxgr:GridColumnHeader.GridColumn).FilterPopupMode, RelativeSource={RelativeSource Self}}" Value="Default" />
                    <Condition Binding="{Binding Path=(dxgr:GridControl.ActiveView).ColumnFilterPopupMode, RelativeSource={RelativeSource Self}, Converter={dxfui_local_native:ColumnFilterPopupModeConverter}}" Value="ExcelSmart" />
                </MultiDataTrigger.Conditions>
                <Setter Property="PopupBottomAreaTemplate" Value="{DynamicResource {dxgt:LWKey ExcelStyleFilterElement.PopupBottomAreaTemplate}}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="GridColumnHeaderStyle" BasedOn="{StaticResource GridColumnHeaderBaseStyle}" TargetType="{x:Type dxgr:GridColumnHeader}">
        <Setter Property="ColumnFilterPopupStyle" Value="{DynamicResource {dxgt:LWKey GridColumnHeader.FilterAreaStyle}}" />
    </Style>
    <Storyboard x:Key="{dxgt:LWKey GroupRow.ExpandingStoryboard}">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="AnimationProgress">
            <SplineDoubleKeyFrame KeySpline="0,0,0,1" KeyTime="0:0:1" Value="1" />
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>
    <Storyboard x:Key="{dxgt:LWKey GroupRow.CollapsingStoryboard}">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="AnimationProgress">
            <SplineDoubleKeyFrame KeySpline="0,0,1,0.25" KeyTime="0:0:1" Value="0" />
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>
    <Storyboard x:Key="{dxgt:LWKey GroupRow.CardGroupExpandingStoryboard}">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="AnimationProgress">
            <SplineDoubleKeyFrame KeySpline="0,0,0,1" KeyTime="0:0:1" Value="1" />
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>
    <Storyboard x:Key="{dxgt:LWKey GroupRow.CardGroupCollapsingStoryboard}">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="AnimationProgress">
            <SplineDoubleKeyFrame KeySpline="0,0,1,0.25" KeyTime="0:0:1" Value="0" />
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>
    <Style x:Key="{dxgt:LWKey GridControl.SelectionRectangleStyle}" TargetType="Border">
        <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:LWKey GridRow.SelectionRectangleBorderBrush}}" />
        <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey GridRow.SelectionRectangleBackground}}" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>
    <Style x:Key="{dxgt:LWKey GridControl.UpdateRowRectangleStyle}" TargetType="Path">
        <Setter Property="Fill" Value="{DynamicResource {dxgt:LWKey GridRow.UpdateRowRectangleBackground}}" />
    </Style>
    <dxgcore:DefaultDataTemplate x:Key="{dxgt:LWKey GroupRow.GroupSummaryItemTemplate}">
        <dx:DXBorder Style="{Binding Path=View.GroupSummaryContentStyle}">
            <StackPanel x:Name="defaultGroupSummaryItemTemplateStackPanel" Orientation="Horizontal">
                <TextBlock Text="{Binding Text}" />
                <TextBlock x:Name="commaTextBlock" Text=", " Visibility="{Binding IsLast, Converter={StaticResource BooleanToVisibilityConverterInverted}}" />
            </StackPanel>
        </dx:DXBorder>
    </dxgcore:DefaultDataTemplate>
    <dxgcore:DefaultDataTemplate x:Key="{dxgt:LWKey GroupRow.GroupColumnSummaryItemTemplate}">
        <TextBlock x:Name="textBlock" dxgcore:InlineTextService.InlineInfo="{Binding SummaryTextInfo}" TextAlignment="Right">
            <TextBlock.TextTrimming>CharacterEllipsis</TextBlock.TextTrimming>
            <dxe_helpers:TextBlockService.AllowIsTextTrimmed>true</dxe_helpers:TextBlockService.AllowIsTextTrimmed>
        </TextBlock>
        <DataTemplate.Triggers>
            <Trigger SourceName="textBlock" Property="dxe_helpers:TextBlockService.IsTextTrimmed" Value="true">
                <Setter TargetName="textBlock" Property="ToolTip" Value="{Binding Value}" />
            </Trigger>
        </DataTemplate.Triggers>
    </dxgcore:DefaultDataTemplate>
    <Style x:Key="DataViewBaseStyle" TargetType="{x:Type dxgcore:DataViewBase}">
        <Setter Property="HeaderTemplate" Value="{DynamicResource {dxgt:LWKey TableView.HeadersTemplate}}" />
        <Setter Property="FooterTemplate" Value="{DynamicResource {dxgt:LWKey TotalSummary.FootersTemplate}}" />
        <Setter Property="TotalSummaryItemTemplate" Value="{DynamicResource {dxgt:LWKey TotalSummary.TotalSummaryItemTemplate}}" />
        <Setter Property="ColumnHeaderTemplate" Value="{DynamicResource {dxgt:LWKey GridColumnHeader.ContentTemplate}}" />
        <Setter Property="ColumnHeaderCustomizationAreaTemplate" Value="{DynamicResource {dxgt:LWKey GridColumnHeader.CustomizationAreaTemplate}}" />
        <Setter Property="CellStyle" Value="{DynamicResource {dxgt:LWKey GridRow.CellStyle}}" />
        <Setter Property="TotalSummaryContentStyle" Value="{DynamicResource {dxgt:LWKey TotalSummary.TotalSummaryContentStyle}}" />
        <Setter Property="ColumnHeaderDragIndicatorTemplate" Value="{DynamicResource {dxgt:LWKey GridColumnHeader.DragIndicatorTemplate}}" />
        <Setter Property="ColumnChooserTemplate" Value="{DynamicResource {dxgt:LWKey TableView.ColumnChooserTemplate}}" />
        <Setter Property="ExtendedColumnChooserTemplate" Value="{DynamicResource {dxgt:LWKey TableView.ExtendedColumnChooserTemplate}}" />
        <Setter Property="Margin" Value="{DynamicResource {dxgt:LWKey TableView.Margin}}" />
        <Setter Property="FocusedCellBorderTemplate" Value="{DynamicResource {dxgt:LWKey GridControl.FocusedCellBorderTemplate}}" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SelectionRectangleStyle" Value="{DynamicResource {dxgt:LWKey GridControl.SelectionRectangleStyle}}" />
        <Setter Property="ColumnHeaderImageStyle" Value="{DynamicResource {dxgt:LWKey GridColumnHeader.ImageStyle}}" />
        <Setter Property="DropMarkerTemplate" Value="{DynamicResource {dxt:LWKey DragDrop.DropMarker}}" />
        <Setter Property="DragDropHintTemplate" Value="{DynamicResource {dxt:LWKey DragDrop.DragDropHint}}" />
        <Setter Property="FilterEditorTemplate" Value="{DynamicResource {dxgt:LWKey FilterEditor.FilterEditorTemplate}}" />
        <Setter Property="FilterEditorDialogServiceTemplate" Value="{DynamicResource {dxgt:LWKey FilterEditor.FilterEditorDialogServiceTemplate}}" />
    </Style>
    <Style x:Key="GridViewBaseStyle" BasedOn="{StaticResource DataViewBaseStyle}" TargetType="{x:Type dxgr:GridViewBase}">
        <Setter Property="GroupRowTemplate" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupRowTemplate}}" />
        <Setter Property="GroupValueTemplate" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupValueTemplate}}" />
        <Setter Property="FocusedGroupRowBorderTemplate" Value="{DynamicResource {dxgt:LWKey GridControl.FocusedGroupRowBorderTemplate}}" />
        <Setter Property="DefaultGroupSummaryItemTemplate" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupSummaryItemTemplate}}" />
        <Setter Property="GroupSummaryItemTemplate" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupSummaryItemTemplate}}" />
        <Setter Property="GroupRowStyle" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupRowStyle}}" />
        <Setter Property="GroupValueContentStyle" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupValueContentStyle}}" />
        <Setter Property="GroupSummaryContentStyle" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupSummaryContentStyle}}" />
        <Setter Property="FilteringPanelStyle" Value="{DynamicResource {dxgt:LWKey FilteringPanel.ControlStyle}}" />
    </Style>
    <dxgr:DefaultStyle x:Key="{dxgt:LWKey GroupRow.GroupSummaryContentStyle}" />

    <Style x:Key="DataControlBaseStyle" TargetType="{x:Type dxgcore:DataControlBase}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey GridControl.Template}}" />
        <Setter Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxt:LWKey Brushes.SvgPalette}}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.35" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AdditionalRowContainerStyle" TargetType="{x:Type dxgr:AdditionalRowContainerControl}">
        <Setter Property="Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.TextUnfocusedBrush}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:LWKey GridRow.GridDataRowDelimiterBrush}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxgr:AdditionalRowContainerControl}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <dx:DXBorder x:Name="RowContentBorder" Background="{DynamicResource {dxgt:LWKey GridRow.BorderNoneBrush}}" />
                        <dx:DXBorder
                            x:Name="RowBottomLine"
                            Grid.Row="1"
                            Padding="{TemplateBinding Padding}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0,0,0,1" />
                        <dx:DXDockPanel Grid.RowSpan="2" MinHeight="{Binding Path=View.RowMinHeight}">
                            <dxgr:RowIndicatorControl
                                Width="{TemplateBinding IndicatorWidth}"
                                dx:DXDockPanel.Dock="Left"
                                Template="{DynamicResource {dxgt:LWKey RowIndicator.AdditionalTemplate}}"
                                Visibility="{Binding Path=View.ActualShowIndicator, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            <dxgr:DetailRowsIndentControl DataContext="{Binding Path=(dx:DataObjectBase.DataObject), RelativeSource={RelativeSource Mode=TemplatedParent}}" ItemsSource="{Binding Path=DataContext.View.DataControl.OwnerDetailDescriptor.DetailViewIndents, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <dxgr:DetailRowsIndentControl
                                DataContext="{Binding Path=(dx:DataObjectBase.DataObject), RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                DockPanel.Dock="Right"
                                IsLeft="False"
                                ItemsSource="{Binding Path=DataContext.View.DataControl.OwnerDetailDescriptor.DetailViewIndents, RelativeSource={RelativeSource TemplatedParent}}" />
                            <dxgr:BandedViewContentSelector x:Name="bandedViewContentSelector" HorizontalContentAlignment="Stretch" OwnerElement="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                <dxgr:BandedViewContentSelector.TableViewContent>
                                    <ControlTemplate>
                                        <ContentControl Template="{Binding Path=OwnerElement.RowTemplate, RelativeSource={RelativeSource TemplatedParent}}">
                                            <dx:MeasurePixelSnapper>
                                                <dxgr:GridScrollablePart
                                                    x:Name="ScrollablePart"
                                                    dxgr:GridControl.CurrentView="{Binding Path=View}"
                                                    FixedColumnsDelimiterTemplate="{DynamicResource {dxgt:LWKey GridRow.FixedColumnsDelimiterTemplate}}"
                                                    FixedLeftVisibleColumns="{Binding Path=View.FixedLeftVisibleColumns}"
                                                    FixedLineWidth="{Binding Path=View.FixedLineWidth}"
                                                    FixedNoneContentWidth="{Binding Path=FixedNoneContentWidth}"
                                                    FixedRightVisibleColumns="{Binding Path=View.FixedRightVisibleColumns}"
                                                    ScrollingMargin="{Binding Path=View.ScrollingHeaderVirtualizationMargin}">
                                                    <dxgr:GridScrollablePart.FitLeftContent>
                                                        <dxgr:FitRowLeftContentPresenter
                                                            Width="{Binding View.ActualExpandDetailHeaderWidth}"
                                                            VerticalContentAlignment="Stretch"
                                                            Content="{Binding Path=OwnerElement.DataContext, RelativeSource={RelativeSource TemplatedParent}}"
                                                            Visibility="{Binding View.ActualShowDetailHeader, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                    </dxgr:GridScrollablePart.FitLeftContent>
                                                    <dxgr:GridScrollablePart.FitContent>
                                                        <dxgr:FitRowContentPresenter VerticalContentAlignment="Stretch" Content="{TemplateBinding DataContext}" />
                                                    </dxgr:GridScrollablePart.FitContent>
                                                    <dxgr:GridScrollablePart.FixedLeftContent>
                                                        <dxgr:RowItemsControl
                                                            x:Name="PART_FixedLeftColumnsItemsControl"
                                                            ItemTemplate="{Binding Path=OwnerElement.ItemTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ItemsPanel="{DynamicResource {dxgt:LWKey TableView.FixedLeftNoneDropPanelTemplate}}"
                                                            ItemsSource="{Binding Path=FixedLeftCellData}" />
                                                    </dxgr:GridScrollablePart.FixedLeftContent>
                                                    <dxgr:GridScrollablePart.FixedRightContent>
                                                        <dxgr:RowItemsControl
                                                            x:Name="PART_FixedRightColumnsItemsControl"
                                                            ItemTemplate="{Binding Path=OwnerElement.ItemTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ItemsPanel="{DynamicResource {dxgt:LWKey TableView.FixedRightNoneDropPanelTemplate}}"
                                                            ItemsSource="{Binding Path=FixedRightCellData}" />
                                                    </dxgr:GridScrollablePart.FixedRightContent>
                                                    <dxgr:GridScrollablePart.FixedNoneContent>
                                                        <dxgr:RowItemsControl
                                                            x:Name="PART_FixedNoneColumnsItemsControl"
                                                            ItemTemplate="{Binding Path=OwnerElement.ItemTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ItemsPanel="{DynamicResource {dxgt:LWKey TableView.FixedNoneDropPanelTemplate}}"
                                                            ItemsSource="{Binding Path=FixedNoneCellData}" />
                                                    </dxgr:GridScrollablePart.FixedNoneContent>
                                                </dxgr:GridScrollablePart>
                                            </dx:MeasurePixelSnapper>
                                        </ContentControl>
                                    </ControlTemplate>
                                </dxgr:BandedViewContentSelector.TableViewContent>
                                <dxgr:BandedViewContentSelector.BandedViewContent>
                                    <ControlTemplate>
                                        <ContentControl Template="{Binding Path=OwnerElement.RowTemplate, RelativeSource={RelativeSource TemplatedParent}}">
                                            <dxgr:GridScrollablePart
                                                dxgr:GridControl.CurrentView="{Binding Path=View}"
                                                FixedColumnsDelimiterTemplate="{DynamicResource {dxgt:LWKey GridRow.FixedColumnsDelimiterTemplate}}"
                                                FixedLeftVisibleColumns="{Binding Path=View.DataControl.BandsLayout.FixedLeftVisibleBands}"
                                                FixedLineWidth="{Binding Path=View.FixedLineWidth}"
                                                FixedNoneContentWidth="{Binding Path=FixedNoneContentWidth}"
                                                FixedRightVisibleColumns="{Binding Path=View.DataControl.BandsLayout.FixedRightVisibleBands}"
                                                ScrollingMargin="{Binding Path=View.ScrollingHeaderVirtualizationMargin}">
                                                <dxgr:GridScrollablePart.FitLeftContent>
                                                    <dxgr:FitRowLeftContentPresenter
                                                        Width="{Binding View.ActualExpandDetailHeaderWidth}"
                                                        VerticalContentAlignment="Stretch"
                                                        Content="{Binding Path=OwnerElement.DataContext, RelativeSource={RelativeSource TemplatedParent}}"
                                                        Visibility="{Binding View.ActualShowDetailHeader, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                </dxgr:GridScrollablePart.FitLeftContent>
                                                <dxgr:GridScrollablePart.FitContent>
                                                    <dxgr:FitRowContentPresenter VerticalContentAlignment="Stretch" Content="{TemplateBinding DataContext}" />
                                                </dxgr:GridScrollablePart.FitContent>
                                                <dxgr:GridScrollablePart.FixedLeftContent>
                                                    <dxgr:BandedViewAdditionalRowControl
                                                        Margin="0,0,0,-1"
                                                        dxgr:GridControl.CurrentView="{Binding View}"
                                                        ClipToBounds="True"
                                                        ItemTemplate="{Binding Path=OwnerElement.ItemTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                        ItemsSource="{Binding Path=FixedLeftCellData}">
                                                        <dxgr:BandedViewAdditionalRowControl.ItemsPanel>
                                                            <ControlTemplate>
                                                                <dxgr:BandsNoneDropPanel Margin="0,0,0,1" Bands="{Binding Path=View.DataControl.BandsLayout.FixedLeftVisibleBands}" />
                                                            </ControlTemplate>
                                                        </dxgr:BandedViewAdditionalRowControl.ItemsPanel>
                                                    </dxgr:BandedViewAdditionalRowControl>
                                                </dxgr:GridScrollablePart.FixedLeftContent>
                                                <dxgr:GridScrollablePart.FixedRightContent>
                                                    <dxgr:BandedViewAdditionalRowControl
                                                        Margin="0,0,0,-1"
                                                        dxgr:GridControl.CurrentView="{Binding View}"
                                                        ClipToBounds="True"
                                                        ItemTemplate="{Binding Path=OwnerElement.ItemTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                        ItemsSource="{Binding Path=FixedRightCellData}">
                                                        <dxgr:BandedViewAdditionalRowControl.ItemsPanel>
                                                            <ControlTemplate>
                                                                <dxgr:BandsNoneDropPanel Margin="0,0,0,1" Bands="{Binding Path=View.DataControl.BandsLayout.FixedRightVisibleBands}" />
                                                            </ControlTemplate>
                                                        </dxgr:BandedViewAdditionalRowControl.ItemsPanel>
                                                    </dxgr:BandedViewAdditionalRowControl>
                                                </dxgr:GridScrollablePart.FixedRightContent>
                                                <dxgr:GridScrollablePart.FixedNoneContent>
                                                    <dxgr:BandedViewAdditionalRowControl
                                                        Margin="0,0,0,-1"
                                                        dxgr:GridControl.CurrentView="{Binding View}"
                                                        ClipToBounds="True"
                                                        ItemTemplate="{Binding Path=OwnerElement.ItemTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                        ItemsSource="{Binding Path=FixedNoneCellData}">
                                                        <dxgr:BandedViewAdditionalRowControl.ItemsPanel>
                                                            <ControlTemplate>
                                                                <dxgr:BandsNoneDropPanel Margin="0,0,0,1" Bands="{Binding Path=View.DataControl.BandsLayout.FixedNoneVisibleBands}" />
                                                            </ControlTemplate>
                                                        </dxgr:BandedViewAdditionalRowControl.ItemsPanel>
                                                    </dxgr:BandedViewAdditionalRowControl>
                                                </dxgr:GridScrollablePart.FixedNoneContent>
                                            </dxgr:GridScrollablePart>
                                        </ContentControl>
                                    </ControlTemplate>
                                </dxgr:BandedViewContentSelector.BandedViewContent>
                            </dxgr:BandedViewContentSelector>
                        </dx:DXDockPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=(dxgr:GridControl.CurrentView).DataControl.(dxi:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter TargetName="RowContentBorder" Property="Background" Value="{Binding Path=(dxgr:GridControl.CurrentView).DataControl.(dxi:AppearanceOptions.Background), RelativeSource={RelativeSource TemplatedParent}}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=(dxgr:GridControl.CurrentView).DataControl.(dxi:GridAppearanceOptions.HasDataAreaBackground), RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter TargetName="RowContentBorder" Property="Background" Value="{Binding Path=(dxgr:GridControl.CurrentView).DataControl.(dxi:GridAppearanceOptions.HasDataAreaBackground), RelativeSource={RelativeSource TemplatedParent}}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsTreeView}" Value="False">
                            <Setter TargetName="bandedViewContentSelector" Property="BandsLayout" Value="{Binding Path=View.DataControl.BandsLayout}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="dxgr:GridViewHitInfoBase.HitTestAcceptor">
            <Setter.Value>
                <dxght:RowTableViewHitTestAcceptor />
            </Setter.Value>
        </Setter>
    </Style>
    <dxgr:DefaultStyle x:Key="{dxgt:LWKey GridRow.CellStyle}" TargetType="{x:Type dxgcore:CellContentPresenter}">
        <Style.Triggers>
            <Trigger Property="dxgcore:CellContentPresenter.SelectionState" Value="Selected">
                <Setter Property="dxgcore:CellContentPresenter.Background" Value="{DynamicResource {dxgt:LWKey GridRow.BorderSelectedBrush}}" />
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.TextRowSelectedBrush}}" />
            </Trigger>
            <Trigger Property="dxgcore:CellContentPresenter.SelectionState" Value="Focused">
                <Setter Property="dxgcore:CellContentPresenter.Background" Value="{DynamicResource {dxgt:LWKey GridRow.CellBorderFocusedBrush}}" />
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.CellTextFocusedBrush}}" />
            </Trigger>
            <Trigger Property="dxgcore:CellContentPresenter.SelectionState" Value="FocusedAndSelected">
                <Setter Property="dxgcore:CellContentPresenter.Background" Value="{DynamicResource {dxgt:LWKey GridRow.BorderFocusedBrush}}" />
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.TextFocusedBrush}}" />
            </Trigger>
            <Trigger Property="dxgcore:CellContentPresenter.SelectionState" Value="Highlighted">
                <Setter Property="dxgcore:CellContentPresenter.Background" Value="{DynamicResource {dxgt:LWKey GridRow.HoverBackground}}" />
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.HoverForeground}}" />
            </Trigger>
        </Style.Triggers>
    </dxgr:DefaultStyle>
    <ControlTemplate x:Key="{dxgt:LWKey TableView.GroupPanelContentTemplate}" TargetType="{x:Type dxgr:GroupPanelControl}">
        <dx:MeasurePixelSnapper>
            <dx:DXBorder
                x:Name="GroupPanelBorder"
                Background="Transparent"
                BorderBrush="Transparent"
                BorderThickness="0">
                <Grid Margin="{DynamicResource {dxgt:LWKey TableView.GroupPanelMargin}}">
                    <TextBlock x:Name="PART_GroupPanelDragText" Style="{DynamicResource {dxgt:LWKey TableView.GroupPanelDragTextStyle}}">
                        <TextBlock.Text>
                            <Binding
                                Converter="{StaticResource LocalizationStringValueConverter}"
                                ConverterParameter="GridGroupPanelText"
                                Path="View.LocalizationDescriptor"
                                RelativeSource="{RelativeSource TemplatedParent}" />
                        </TextBlock.Text>
                    </TextBlock>
                    <dxgr:GroupPanelContainer Margin="{DynamicResource {dxgt:LWKey TableView.GroupPanelSeparatorMargin}}" View="{TemplateBinding View}" />
                </Grid>
            </dx:DXBorder>
        </dx:MeasurePixelSnapper>
    </ControlTemplate>
    <Style x:Key="{dxgt:LWKey TableView.CompactPanelOrderStyle}" TargetType="TextBlock">
        <Style.Triggers>
            <DataTrigger Binding="{Binding SortOrder}" Value="Descending">
                <Setter Property="Text">
                    <Setter.Value>
                        <Binding
                            Converter="{StaticResource LocalizationStringValueConverter}"
                            ConverterParameter="CompactModeDescendingOrder"
                            Path="(dxgr:GridControl.CurrentView).LocalizationDescriptor"
                            RelativeSource="{RelativeSource Self}" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding SortOrder}" Value="Ascending">
                <Setter Property="Text">
                    <Setter.Value>
                        <Binding
                            Converter="{StaticResource LocalizationStringValueConverter}"
                            ConverterParameter="CompactModeAscendingOrder"
                            Path="(dxgr:GridControl.CurrentView).LocalizationDescriptor"
                            RelativeSource="{RelativeSource Self}" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CompactPanelSimpleButtonStyleBase" TargetType="dx:SimpleButton">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:LWKey TableView.CompactPanelMouseOverBorderBrush}}" />
                <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey TableView.CompactPanelMouseOverBackground}}" />
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:LWKey TableView.CompactPanelMouseOverForeground}}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:LWKey TableView.CompactPanelMousePressedBorderBrush}}" />
                <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey TableView.CompactPanelMousePressedBackground}}" />
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:LWKey TableView.CompactPanelMousePressedForeground}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CompactContentBorderStyle" TargetType="Border">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="BorderThickness" Value="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="BorderBrush" Value="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Padding" Value="{DynamicResource {dxgt:LWKey TableView.CompactPanelContentMargin}}" />
        <Setter Property="CornerRadius" Value="{DynamicResource {dxgt:LWKey TableView.CompactPanelCornerRadius}}" />
    </Style>

    <Style x:Key="{dxgt:LWKey TableView.CompactPanelSortElementStyle}" BasedOn="{StaticResource CompactPanelSimpleButtonStyleBase}" TargetType="dx:SimpleButton">
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <dx:DXBorder Style="{StaticResource CompactContentBorderStyle}">
                        <dxgr:TrimmingPanel VerticalAlignment="Center" DirectionTrimming="LeftToRight">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock>
                                    <TextBlock.Text>
                                        <Binding
                                            Converter="{StaticResource LocalizationStringValueConverter}"
                                            ConverterParameter="CompactModeBy"
                                            Path="View.LocalizationDescriptor"
                                            StringFormat="{}{0} " />
                                    </TextBlock.Text>
                                </TextBlock>
                                <ContentControl Content="{Binding ColumnContent}" ContentTemplate="{Binding ColumnHeaderTemplate}" />
                            </StackPanel>
                            <ContentControl Margin="3,7,0,0" VerticalAlignment="Top" ContentTemplate="{DynamicResource {dxgt:LWKey TableView.CompactPanelDownGlyph}}" />
                        </dxgr:TrimmingPanel>
                    </dx:DXBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxgt:LWKey TableView.CompactPanelFilterMenu}" BasedOn="{StaticResource CompactPanelSimpleButtonStyleBase}" TargetType="dx:SimpleButton">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <dx:DXBorder Style="{StaticResource CompactContentBorderStyle}">
                        <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                            <TextBlock x:Name="tbFilterText">
                                <TextBlock.Text>
                                    <Binding Path="SelectedFilter.DisplayValue" />
                                </TextBlock.Text>
                            </TextBlock>
                            <ContentControl Margin="3,7,0,0" VerticalAlignment="Top" ContentTemplate="{DynamicResource {dxgt:LWKey TableView.CompactPanelDownGlyph}}" />
                        </StackPanel>
                    </dx:DXBorder>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding SelectedFilter}" Value="{x:Null}">
                            <Setter TargetName="tbFilterText" Property="Text">
                                <Setter.Value>
                                    <Binding Converter="{StaticResource LocalizationStringValueConverter}" ConverterParameter="CompactModeFilter" Path="View.LocalizationDescriptor" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxgt:LWKey TableView.CompactPanelMergeMenu}" BasedOn="{StaticResource CompactPanelSimpleButtonStyleBase}" TargetType="dx:SimpleButton">
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <dx:DXBorder Style="{StaticResource CompactContentBorderStyle}">
                        <Grid>
                            <StackPanel x:Name="filterPanel" VerticalAlignment="Center" Orientation="Horizontal">
                                <TextBlock x:Name="tbFilterText">
                                    <TextBlock.Text>
                                        <Binding Path="SelectedFilter.DisplayValue" />
                                    </TextBlock.Text>
                                </TextBlock>
                                <ContentControl Margin="3,7,0,0" VerticalAlignment="Top" ContentTemplate="{DynamicResource {dxgt:LWKey TableView.CompactPanelDownGlyph}}" />
                            </StackPanel>
                            <dxgr:TrimmingPanel
                                x:Name="columnPanel"
                                VerticalAlignment="Center"
                                DirectionTrimming="LeftToRight"
                                Visibility="Collapsed">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock>
                                        <TextBlock.Text>
                                            <Binding
                                                Converter="{StaticResource LocalizationStringValueConverter}"
                                                ConverterParameter="CompactModeBy"
                                                Path="View.LocalizationDescriptor"
                                                StringFormat="{}{0} " />
                                        </TextBlock.Text>
                                    </TextBlock>
                                    <ContentControl Content="{Binding ColumnContent}" ContentTemplate="{Binding ColumnHeaderTemplate}" />
                                </StackPanel>
                                <ContentControl Margin="3,7,0,0" VerticalAlignment="Top" ContentTemplate="{DynamicResource {dxgt:LWKey TableView.CompactPanelDownGlyph}}" />
                            </dxgr:TrimmingPanel>
                        </Grid>
                    </dx:DXBorder>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding SelectedFilter}" Value="{x:Null}">
                            <Setter TargetName="tbFilterText" Property="Text">
                                <Setter.Value>
                                    <Binding Converter="{StaticResource LocalizationStringValueConverter}" ConverterParameter="CompactModeFilter" Path="View.LocalizationDescriptor" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding View.CompactModeFilterItems.Count}" Value="0">
                            <Setter TargetName="filterPanel" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="columnPanel" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <ControlTemplate x:Key="{dxgt:LWKey TableView.CompactPanelOrderTemplate}">
        <dx:DXBorder x:Name="border" Style="{StaticResource CompactContentBorderStyle}">
            <dxgr:TrimmingPanel DirectionTrimming="LeftToRight">
                <TextBlock
                    x:Name="tbSortText"
                    HorizontalAlignment="Right"
                    dxgr:GridControl.CurrentView="{Binding DataContext.View, RelativeSource={RelativeSource TemplatedParent}}"
                    Style="{DynamicResource {dxgt:LWKey TableView.CompactPanelOrderStyle}}" />
                <Grid Margin="3,3,0,0" VerticalAlignment="Center">
                    <ContentControl ContentTemplate="{DynamicResource {dxgt:LWKey TableView.CompactPanelSortGlyph}}">
                        <ContentControl.LayoutTransform>
                            <Binding Path="DataContext.SortOrder" RelativeSource="{RelativeSource TemplatedParent}">
                                <Binding.Converter>
                                    <dx:EnumToObjectConverter>
                                        <dx:EnumToObjectConverter.Values>
                                            <dx:EnumObjectProvider x:Key="Ascending">
                                                <dx:EnumObjectProvider.Value>
                                                    <RotateTransform Angle="-180" />
                                                </dx:EnumObjectProvider.Value>
                                            </dx:EnumObjectProvider>
                                        </dx:EnumToObjectConverter.Values>
                                    </dx:EnumToObjectConverter>
                                </Binding.Converter>
                            </Binding>
                        </ContentControl.LayoutTransform>
                    </ContentControl>
                </Grid>
            </dxgr:TrimmingPanel>
        </dx:DXBorder>
    </ControlTemplate>

    <Style x:Key="{dxgt:LWKey TableView.CompactPanelOrderElementStyle}" TargetType="CheckBox">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey TableView.CompactPanelOrderTemplate}}" />
        <Setter Property="Foreground" Value="{DynamicResource {dxgt:LWKey TableView.CompactPanelForeground}}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:LWKey TableView.CompactPanelMouseOverBorderBrush}}" />
                <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey TableView.CompactPanelMouseOverBackground}}" />
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:LWKey TableView.CompactPanelMouseOverForeground}}" />
            </Trigger>
            <Trigger Property="Button.IsPressed" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:LWKey TableView.CompactPanelMousePressedBorderBrush}}" />
                <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey TableView.CompactPanelMousePressedBackground}}" />
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:LWKey TableView.CompactPanelMousePressedForeground}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxgt:LWKey TableView.CompactPanelFilterListElementStyle}" TargetType="ListBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <dx:DXBorder Style="{StaticResource CompactContentBorderStyle}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </dx:DXBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="1,0,1,0" />
        <Setter Property="Foreground" Value="{DynamicResource {dxgt:LWKey TableView.CompactPanelForeground}}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:LWKey TableView.CompactPanelMouseOverBorderBrush}}" />
                <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey TableView.CompactPanelMouseOverBackground}}" />
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:LWKey TableView.CompactPanelMouseOverForeground}}" />
            </Trigger>
            <Trigger Property="Button.IsPressed" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:LWKey TableView.CompactPanelMousePressedBorderBrush}}" />
                <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey TableView.CompactPanelMousePressedBackground}}" />
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:LWKey TableView.CompactPanelMousePressedForeground}}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:LWKey TableView.CompactPanelMousePressedBorderBrush}}" />
                <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey TableView.CompactPanelMousePressedBackground}}" />
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:LWKey TableView.CompactPanelMousePressedForeground}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxgt:LWKey TableView.CompactPanelFilterStyle}" TargetType="ListBox">
        <Setter Property="Foreground" Value="{DynamicResource {dxgt:LWKey TableView.CompactPanelForeground}}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <ItemsPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <dxgr:TrimmingPanel HorizontalAlignment="Left" VerticalAlignment="Stretch" DirectionTrimming="RightToLeft" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource {dxgt:LWKey TableView.CompactPanelFilterListElementStyle}}" />
    </Style>
    <ControlTemplate x:Key="{dxgt:LWKey TableView.CompactPanelTemplate}" TargetType="{x:Type dxgr:CompactPanel}">
        <dx:DXBorder Background="Transparent">
            <DockPanel Margin="{DynamicResource {dxgt:LWKey TableView.SearchPanelWithoutGroupedPanelMargin}}">
                <Grid x:Name="PanelFilter" DockPanel.Dock="Left">
                    <ListBox
                        x:Name="PART_lbFilters"
                        DisplayMemberPath="DisplayValue"
                        ItemsSource="{Binding View.CompactModeFilterItems, RelativeSource={RelativeSource TemplatedParent}}"
                        SelectedItem="{Binding SelectedFilter, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                        Style="{DynamicResource {dxgt:LWKey TableView.CompactPanelFilterStyle}}" />
                    <dx:SimpleButton x:Name="PART_FilterContextMenu" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource {dxgt:LWKey TableView.CompactPanelFilterMenu}}" />
                    <Grid.Visibility>
                        <Binding Path="View.CompactModeFilterItems.Count" RelativeSource="{RelativeSource TemplatedParent}">
                            <Binding.Converter>
                                <dxmvvm:ObjectToObjectConverter DefaultTarget="Visible">
                                    <dxmvvm:MapItem Source="0" Target="Collapsed" />
                                </dxmvvm:ObjectToObjectConverter>
                            </Binding.Converter>
                        </Binding>
                    </Grid.Visibility>
                </Grid>
                <CheckBox
                    x:Name="cbOrder"
                    DataContext="{TemplateBinding Column}"
                    DockPanel.Dock="Right"
                    IsChecked="{Binding Order, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                    Style="{DynamicResource {dxgt:LWKey TableView.CompactPanelOrderElementStyle}}">
                    <CheckBox.IsEnabled>
                        <MultiBinding Converter="{StaticResource SortOrderConverter}">
                            <Binding Path="SortOrder" />
                            <Binding Path="AllowedSortOrders" />
                        </MultiBinding>
                    </CheckBox.IsEnabled>
                </CheckBox>
                <dx:SimpleButton
                    x:Name="PART_Columns"
                    DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                    DockPanel.Dock="Right"
                    Style="{DynamicResource {dxgt:LWKey TableView.CompactPanelSortElementStyle}}" />
                <dx:SimpleButton
                    x:Name="PART_MergeBtn"
                    DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                    DockPanel.Dock="Right"
                    Style="{DynamicResource {dxgt:LWKey TableView.CompactPanelMergeMenu}}"
                    Visibility="Collapsed" />
            </DockPanel>
        </dx:DXBorder>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding CompactFilterElementShowMode, RelativeSource={RelativeSource Self}}" Value="List">
                <Setter TargetName="PART_FilterContextMenu" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_lbFilters" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding CompactFilterElementShowMode, RelativeSource={RelativeSource Self}}" Value="ContextMenu">
                <Setter TargetName="PART_FilterContextMenu" Property="Visibility" Value="Visible" />
                <Setter TargetName="PART_lbFilters" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding CompactFilterElementShowMode, RelativeSource={RelativeSource Self}}" Value="Never">
                <Setter TargetName="PART_FilterContextMenu" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_lbFilters" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding CompactSortElementShowMode, RelativeSource={RelativeSource Self}}" Value="CompactMode">
                <Setter TargetName="PART_Columns" Property="Visibility" Value="{Binding View.IsCompactMode, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <Setter TargetName="cbOrder" Property="Visibility" Value="{Binding View.IsCompactMode, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding CompactSortElementShowMode, RelativeSource={RelativeSource Self}}" Value="Never">
                <Setter TargetName="PART_Columns" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="cbOrder" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding CompactFilterElementShowMode, RelativeSource={RelativeSource Self}}" Value="ContextMenuWithSorting">
                <Setter TargetName="PART_FilterContextMenu" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_lbFilters" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="cbOrder" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_Columns" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_MergeBtn" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding CompactSortElementShowMode, RelativeSource={RelativeSource Self}}" Value="Always">
                <Setter TargetName="PART_Columns" Property="Visibility" Value="Visible" />
                <Setter TargetName="cbOrder" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Column, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                <Setter TargetName="cbOrder" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                <Setter Property="TextBlock.FontSize" Value="18" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <dxgcore:DefaultDataTemplate x:Key="{dxgt:LWKey GroupRow.GroupColumnSummaryControlTemplate}">
        <dxgr:GroupColumnSummaryControl IsGroupRowFocused="{Binding GroupRowData.IsFocused}" IsReady="{Binding Path=GroupRowData.IsReady}" Style="{Binding View.GroupColumnSummaryContentStyle}" />
    </dxgcore:DefaultDataTemplate>
    <DataTemplate x:Key="{dxgt:LWKey GroupRow.GroupBandSummaryControlTemplate}">
        <Grid Margin="{DynamicResource {dxgt:LWKey GridRow.GroupBandSummaryMargin}}">
            <dxgr:GroupBandSummaryControl
                HasTopElement="{Binding Column.HasTopElement}"
                IsGroupRowFocused="{Binding GroupRowData.IsFocused}"
                IsReady="{Binding Path=GroupRowData.IsReady}"
                Style="{Binding View.GroupBandSummaryContentStyle}" />
        </Grid>
    </DataTemplate>

    <ControlTemplate x:Key="{dxgt:LWKey GridControl.DataNavigatorTemplate}" TargetType="{x:Type dxgr:DataNavigator}">
        <dx:DXBorder
            x:Name="NavigationBorder"
            BorderBrush="{DynamicResource {dxgt:LWKey TableView.DataNavigatorBorderBrush}}"
            BorderThickness="{DynamicResource {dxgt:LWKey TableView.DataNavigatorBorderThickness}}"
            IsEnabled="{Binding Path=View.NavigationStyle, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NavigationStyleToBoolean}}">
            <StackPanel Orientation="Horizontal">
                <dxgr:GridNavigatorButton
                    ButtonType="MoveFirstRow"
                    ClickMode="Release"
                    Command="{x:Static dxgr:GridCommands.MoveFirstRow}"
                    Delay="{x:Static sys:Int32.MaxValue}"
                    Interval="{x:Static sys:Int32.MaxValue}"
                    Visibility="{Binding Path=View.DataNavigatorButtons, RelativeSource={RelativeSource TemplatedParent}, ConverterParameter=MoveFirstRow, Converter={StaticResource DisplayedNavigationConverter}}">
                    <dxgr:GridNavigatorButton.ToolTip>
                        <Binding
                            Converter="{StaticResource LocalizationStringValueConverter}"
                            ConverterParameter="NavigationMoveFirstRow"
                            Path="View.LocalizationDescriptor"
                            RelativeSource="{RelativeSource TemplatedParent}" />
                    </dxgr:GridNavigatorButton.ToolTip>
                </dxgr:GridNavigatorButton>

                <dxgr:GridNavigatorButton
                    ButtonType="MovePrevPage"
                    ClickMode="Press"
                    Command="{x:Static dxgr:GridCommands.MovePrevPage}"
                    Delay="500"
                    Interval="100"
                    Visibility="{Binding Path=View.DataNavigatorButtons, RelativeSource={RelativeSource TemplatedParent}, ConverterParameter=MovePrevPage, Converter={StaticResource DisplayedNavigationConverter}}">
                    <dxgr:GridNavigatorButton.ToolTip>
                        <Binding
                            Converter="{StaticResource LocalizationStringValueConverter}"
                            ConverterParameter="NavigationMovePrevPage"
                            Path="View.LocalizationDescriptor"
                            RelativeSource="{RelativeSource TemplatedParent}" />
                    </dxgr:GridNavigatorButton.ToolTip>
                </dxgr:GridNavigatorButton>

                <dxgr:GridNavigatorButton
                    ButtonType="MovePrevRow"
                    ClickMode="Press"
                    Command="{x:Static dxgr:GridCommands.MovePrevRow}"
                    Delay="500"
                    Interval="100"
                    Visibility="{Binding Path=View.DataNavigatorButtons, RelativeSource={RelativeSource TemplatedParent}, ConverterParameter=MovePrevRow, Converter={StaticResource DisplayedNavigationConverter}}">
                    <dxgr:GridNavigatorButton.ToolTip>
                        <Binding
                            Converter="{StaticResource LocalizationStringValueConverter}"
                            ConverterParameter="NavigationMovePrevRow"
                            Path="View.LocalizationDescriptor"
                            RelativeSource="{RelativeSource TemplatedParent}" />
                    </dxgr:GridNavigatorButton.ToolTip>
                </dxgr:GridNavigatorButton>

                <ContentControl
                    x:Name="contentControl"
                    Margin="{DynamicResource {dxgt:LWKey TableView.DataNavigatorBorderMarginText}}"
                    Padding="3,0,3,0"
                    VerticalAlignment="Stretch"
                    HorizontalContentAlignment="Center"
                    Background="{DynamicResource {dxgt:LWKey TableView.DataNavigatorBackgroundText}}"
                    FontSize="{DynamicResource {dxgt:LWKey TableView.DataNavigatorTextSize}}"
                    Foreground="{DynamicResource {dxgt:LWKey TableView.DataNavigatorTextBrush}}">
                    <MultiBinding Converter="{StaticResource NavigationRowConverter}">
                        <Binding Path="View.FocusedView" RelativeSource="{RelativeSource TemplatedParent}" />
                        <Binding Path="View.FocusedView.FocusedRowHandle" RelativeSource="{RelativeSource TemplatedParent}" />
                        <Binding Mode="OneWay" Path="View.FocusedView.DataControl.VisibleRowCount" RelativeSource="{RelativeSource TemplatedParent}" />
                    </MultiBinding>
                    <ContentControl.Template>
                        <ControlTemplate TargetType="ContentControl">
                            <dx:DXBorder Background="{TemplateBinding Background}">
                                <ContentPresenter Margin="{TemplateBinding Padding}" VerticalAlignment="Center" Content="{TemplateBinding Content}" />
                            </dx:DXBorder>
                        </ControlTemplate>
                    </ContentControl.Template>
                </ContentControl>

                <dxgr:GridNavigatorButton
                    ButtonType="MoveNextRow"
                    ClickMode="Press"
                    Command="{x:Static dxgr:GridCommands.MoveNextRow}"
                    Delay="500"
                    Interval="100"
                    Visibility="{Binding Path=View.DataNavigatorButtons, RelativeSource={RelativeSource TemplatedParent}, ConverterParameter=MoveNextRow, Converter={StaticResource DisplayedNavigationConverter}}">
                    <dxgr:GridNavigatorButton.ToolTip>
                        <Binding
                            Converter="{StaticResource LocalizationStringValueConverter}"
                            ConverterParameter="NavigationMoveNextRow"
                            Path="View.LocalizationDescriptor"
                            RelativeSource="{RelativeSource TemplatedParent}" />
                    </dxgr:GridNavigatorButton.ToolTip>
                </dxgr:GridNavigatorButton>

                <dxgr:GridNavigatorButton
                    ButtonType="MoveNextPage"
                    ClickMode="Press"
                    Command="{x:Static dxgr:GridCommands.MoveNextPage}"
                    Delay="500"
                    Interval="100"
                    Visibility="{Binding Path=View.DataNavigatorButtons, RelativeSource={RelativeSource TemplatedParent}, ConverterParameter=MoveNextPage, Converter={StaticResource DisplayedNavigationConverter}}">
                    <dxgr:GridNavigatorButton.ToolTip>
                        <Binding
                            Converter="{StaticResource LocalizationStringValueConverter}"
                            ConverterParameter="NavigationMoveNextPage"
                            Path="View.LocalizationDescriptor"
                            RelativeSource="{RelativeSource TemplatedParent}" />
                    </dxgr:GridNavigatorButton.ToolTip>
                </dxgr:GridNavigatorButton>

                <dxgr:GridNavigatorButton
                    ButtonType="MoveLastRow"
                    ClickMode="Release"
                    Command="{x:Static dxgr:GridCommands.MoveLastRow}"
                    Delay="{x:Static sys:Int32.MaxValue}"
                    Interval="{x:Static sys:Int32.MaxValue}"
                    Visibility="{Binding Path=View.DataNavigatorButtons, RelativeSource={RelativeSource TemplatedParent}, ConverterParameter=MoveLastRow, Converter={StaticResource DisplayedNavigationConverter}}">
                    <dxgr:GridNavigatorButton.ToolTip>
                        <Binding
                            Converter="{StaticResource LocalizationStringValueConverter}"
                            ConverterParameter="NavigationMoveLastRow"
                            Path="View.LocalizationDescriptor"
                            RelativeSource="{RelativeSource TemplatedParent}" />
                    </dxgr:GridNavigatorButton.ToolTip>
                </dxgr:GridNavigatorButton>

                <dxgr:GridNavigatorButton
                    x:Name="ButtonAddNewRow"
                    ButtonType="AddNewRow"
                    ClickMode="Release"
                    Command="{x:Static dxgr:GridCommands.AddNewRow}"
                    Delay="{x:Static sys:Int32.MaxValue}"
                    Interval="{x:Static sys:Int32.MaxValue}"
                    Visibility="{Binding Path=View.DataNavigatorButtons, RelativeSource={RelativeSource TemplatedParent}, ConverterParameter=AddNewRow, Converter={StaticResource DisplayedNavigationConverter}}">
                    <dxgr:GridNavigatorButton.ToolTip>
                        <Binding
                            Converter="{StaticResource LocalizationStringValueConverter}"
                            ConverterParameter="NavigationAddNewRow"
                            Path="View.LocalizationDescriptor"
                            RelativeSource="{RelativeSource TemplatedParent}" />
                    </dxgr:GridNavigatorButton.ToolTip>
                </dxgr:GridNavigatorButton>

                <dxgr:GridNavigatorButton
                    ButtonType="DeleteFocusedRow"
                    ClickMode="Release"
                    Command="{x:Static dxgr:GridCommands.DeleteFocusedRow}"
                    Delay="{x:Static sys:Int32.MaxValue}"
                    Interval="{x:Static sys:Int32.MaxValue}"
                    Visibility="{Binding Path=View.DataNavigatorButtons, RelativeSource={RelativeSource TemplatedParent}, ConverterParameter=DeleteFocusedRow, Converter={StaticResource DisplayedNavigationConverter}}">
                    <dxgr:GridNavigatorButton.ToolTip>
                        <Binding
                            Converter="{StaticResource LocalizationStringValueConverter}"
                            ConverterParameter="NavigationDeleteFocusedRow"
                            Path="View.LocalizationDescriptor"
                            RelativeSource="{RelativeSource TemplatedParent}" />
                    </dxgr:GridNavigatorButton.ToolTip>
                </dxgr:GridNavigatorButton>

                <dxgr:GridNavigatorButton
                    ButtonType="EditFocusedRow"
                    ClickMode="Release"
                    Command="{x:Static dxgr:GridCommands.EditFocusedRow}"
                    Delay="{x:Static sys:Int32.MaxValue}"
                    Interval="{x:Static sys:Int32.MaxValue}"
                    Visibility="{Binding Path=View.DataNavigatorButtons, RelativeSource={RelativeSource TemplatedParent}, ConverterParameter=EditFocusedRow, Converter={StaticResource DisplayedNavigationConverter}}">
                    <dxgr:GridNavigatorButton.ToolTip>
                        <Binding
                            Converter="{StaticResource LocalizationStringValueConverter}"
                            ConverterParameter="NavigationEditFocusedRow"
                            Path="View.LocalizationDescriptor"
                            RelativeSource="{RelativeSource TemplatedParent}" />
                    </dxgr:GridNavigatorButton.ToolTip>
                </dxgr:GridNavigatorButton>

            </StackPanel>
        </dx:DXBorder>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={dxgcore:IsDesignTimeConverter}, Mode=OneTime}" Value="true">
                <Setter TargetName="NavigationBorder" Property="IsEnabled" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dx:ScrollBarExtensions.ScrollBarMode), RelativeSource={RelativeSource TemplatedParent}}" Value="TouchOverlap">
                <Setter TargetName="NavigationBorder" Property="BorderThickness" Value="0,1,0,0" />
                <Setter TargetName="NavigationBorder" Property="BorderBrush" Value="{DynamicResource {dxgt:LWKey GridRow.TotalSummaryBorderBrush}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxgr:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="contentControl" Property="Background" Value="{Binding Path=(dxgr:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.Background), RelativeSource={RelativeSource TemplatedParent}}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\DefaultGridViewStyles.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\LookUpEdit.xaml-->
    <ControlTemplate x:Key="{dxgt:LWKey LookUpEdit.PopupContentTemplate}" TargetType="{x:Type ContentControl}">
        <dxgr:GridControl x:Name="PART_GridControl" ShowBorder="False" />
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:LWKey AutoCompleteEdit.PopupContentTemplate}" TargetType="{x:Type ContentControl}">
        <dxgr:GridControl
            x:Name="PART_Content"
            AutoGenerateColumns="AddNew"
            ItemsSource="{Binding Path=(dxe:BaseEdit.OwnerEdit).ItemsSource, RelativeSource={RelativeSource TemplatedParent}}"
            ShowBorder="False" />
    </ControlTemplate>
    <DataTemplate x:Key="{dxgt:LWKey LookUpEdit.GridHeaderContentStyle}">
        <TextBlock FontStyle="Oblique" Text="{Binding}" />
    </DataTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\LookUpEdit.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\TreeViewControl.xaml-->
    <ControlTemplate x:Key="{dxgt:LWKey TreeViewControl.DataPresenterTemplate}" TargetType="{x:Type dxgr:DataPresenter}">
        <dx:DXBorder x:Name="PART_TreeViewDataAreaBackground" Background="{DynamicResource {dxgt:LWKey TableView.DataPresenterBackground}}">
            <ContentPresenter />
        </dx:DXBorder>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(dxgcore:DataControlBase.ActiveView).DataControl.(dxi:GridAppearanceOptions.HasDataAreaBackground)}" Value="True">
                <Setter TargetName="PART_TreeViewDataAreaBackground" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxgcore:DataControlBase.ActiveView).DataControl.(dxi:GridAppearanceOptions.DataAreaBackground)}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:LWKey TreeViewControl.ViewTemplate}" TargetType="{x:Type dxgr:TreeViewControlView}">
        <ScrollViewer
            x:Name="scr"
            dx:ScrollBarExtensions.ScrollBehavior="{x:Null}"
            dxgr:GridControl.CurrentView="{Binding RelativeSource={RelativeSource TemplatedParent}}"
            Focusable="False"
            HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollbarVisibility}"
            Template="{DynamicResource {dxgt:LWKey TreeViewControl.ScrollViewerTemplate}}"
            VerticalScrollBarVisibility="{TemplateBinding VerticalScrollbarVisibility}">
            <ScrollViewer.CanContentScroll>True</ScrollViewer.CanContentScroll>
            <dx:ScrollBarExtensions.AllowMouseScrolling>
                <Binding Path="(dxgr:GridControl.CurrentView).UseExtendedMouseScrolling" RelativeSource="{RelativeSource Self}" />
            </dx:ScrollBarExtensions.AllowMouseScrolling>
        </ScrollViewer>
    </ControlTemplate>

    <Style x:Key="SearchPanelIconStyle" TargetType="{x:Type dx:DXImage}">
        <Setter Property="Margin" Value="2,0,0,0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Width" Value="18" />
        <Setter Property="Height" Value="18" />
        <Setter Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxt:LWKey Brushes.ContrastSvgPalette}}" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Margin" Value="8,0,0,0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="{dxgt:LWKey TreeViewControl.SearchPanelTemplate}">
        <Grid
            x:Name="TopGrid"
            Background="{DynamicResource {dxgt:LWKey TableView.DataPresenterBackground}}"
            ClipToBounds="True"
            SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <dx:DXImage Source="{dx:SvgImageSource Uri='/DevExpress.Xpf.Grid.v24.1.Core;component/FilteringUI/FilterEditor/Images/Default.svg'}" Style="{StaticResource SearchPanelIconStyle}" />
            <dxgr:GridSearchControl
                x:Name="SearchControl"
                Grid.Column="1"
                Margin="0"
                Padding="0,0,2,0"
                HorizontalAlignment="Stretch"
                IsEditorTabStop="False"
                IsTabStop="False"
                ShowEditorBorder="False"
                View="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" />
            <dx:DXBorder
                Grid.Row="1"
                Grid.ColumnSpan="2"
                Background="Transparent"
                BorderBrush="{DynamicResource {dxgt:LWKey TableView.GroupPanelBorderBrush}}"
                BorderThickness="{DynamicResource {dxgt:LWKey TableView.GroupPanelBorderThickness}}" />
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxgr:GridControl.CurrentView).DataControl.(dxi:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="TopGrid" Property="Background" Value="{Binding Path=(dxgr:GridControl.CurrentView).DataControl.(dxi:AppearanceOptions.Background), RelativeSource={RelativeSource TemplatedParent}}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:LWKey TreeViewControl.ScrollViewerTemplate}">
        <Grid dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" ClipToBounds="True" SnapsToDevicePixels="true">
            <dx:ScrollBarExtensions.ScrollBehavior>
                <Binding Path="(dxgr:GridControl.CurrentView).UseExtendedMouseScrolling" RelativeSource="{RelativeSource Self}">
                    <Binding.Converter>
                        <dx:BoolToObjectConverter FalseValue="{dx:NativeScrollBehavior}" TrueValue="{dxgcore:DataPresenterScrollBehavior}" />
                    </Binding.Converter>
                </Binding>
            </dx:ScrollBarExtensions.ScrollBehavior>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <dx:BestFitDecorator
                x:Name="PART_BestFitControlDecorator"
                Width="0"
                Height="0"
                dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}">
                <dxgr:GridControl.CurrentViewChangedListener>
                    <dxgr:BestFitControlDecoratorInitializer />
                </dxgr:GridControl.CurrentViewChangedListener>
            </dx:BestFitDecorator>
            <ContentControl
                x:Name="SearchPanelContainer"
                dx:FocusHelper2.Focusable="False"
                dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                IsTabStop="False"
                Template="{DynamicResource {dxgt:LWKey TreeViewControl.SearchPanelTemplate}}"
                Visibility="{Binding Path=(dxgr:GridControl.CurrentView).ActualShowSearchPanel, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <Grid
                x:Name="rowPresenterGrid"
                Grid.Row="2"
                Margin="{DynamicResource {dxgt:LWKey TableView.RowPresenterGridMargin}}"
                dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Grid Grid.Row="1">
                    <Grid.ColumnSpan>
                        <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}">
                            <Binding.Converter>
                                <dxmvvm:ObjectToObjectConverter DefaultSource="Default" DefaultTarget="1">
                                    <dxmvvm:MapItem Source="TouchOverlap" Target="2" />
                                </dxmvvm:ObjectToObjectConverter>
                            </Binding.Converter>
                        </Binding>
                    </Grid.ColumnSpan>
                    <ScrollContentPresenter
                        x:Name="PART_ScrollContentPresenter"
                        MinWidth="{Binding Path=(dxgr:GridControl.CurrentView).ScrollableAreaMinWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        dxgcore:FocusRectPresenter.IsVerticalScrollHost="True"
                        dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                        ScrollViewer.CanContentScroll="True">
                        <dxgr:GridControl.CurrentViewChangedListener>
                            <dxgr:ScrollContentPresenterInitializer />
                        </dxgr:GridControl.CurrentViewChangedListener>

                        <ScrollContentPresenter.Content>
                            <dxgr:DataPresenter x:Name="dataPresenter" dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" Template="{DynamicResource {dxgt:LWKey TreeViewControl.DataPresenterTemplate}}" />
                        </ScrollContentPresenter.Content>
                        <dxgr:GridViewHitInfoBase.HitTestAcceptor>
                            <dxght:DataAreaTableViewHitTestAcceptor />
                        </dxgr:GridViewHitInfoBase.HitTestAcceptor>
                    </ScrollContentPresenter>
                    <ContentControl HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                        <ContentControl.Template>
                            <ControlTemplate TargetType="{x:Type ContentControl}">
                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Content="{TemplateBinding Content}" />
                            </ControlTemplate>
                        </ContentControl.Template>
                        <ContentControl.Visibility>
                            <Binding Path="(dxgr:GridControl.CurrentView).WaitIndicatorType" RelativeSource="{RelativeSource TemplatedParent}">
                                <Binding.Converter>
                                    <dx:EnumToObjectConverter DefaultValue="Collapsed">
                                        <dx:EnumToObjectConverter.Values>
                                            <dx:EnumObjectProvider x:Key="Panel" Value="Visible" />
                                        </dx:EnumToObjectConverter.Values>
                                    </dx:EnumToObjectConverter>
                                </Binding.Converter>
                            </Binding>
                        </ContentControl.Visibility>
                        <dx:WaitIndicator DeferedVisibility="{Binding Path=(dxgr:GridControl.CurrentView).IsWaitIndicatorVisible, RelativeSource={RelativeSource TemplatedParent}}" Style="{Binding Path=(dxgr:GridControl.CurrentView).WaitIndicatorStyle, RelativeSource={RelativeSource TemplatedParent}}" />
                    </ContentControl>
                </Grid>
                <Grid Grid.Column="1" HorizontalAlignment="Right" Visibility="{Binding ComputedVerticalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                    <Grid.RowSpan>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxgr:GridControl.CurrentView).ShowTotalSummary" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxgr:VerticalScrollBarRowSpanConverter />
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </Grid.RowSpan>

                    <ScrollBar
                        x:Name="PART_VerticalScrollBar"
                        HorizontalAlignment="Right"
                        dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                        Maximum="{Binding ScrollableHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        ViewportSize="{Binding ViewportHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        Value="{Binding VerticalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                        <dxgr:GridControl.CurrentViewChangedListener>
                            <dxgr:VerticalScrollBarBlendCustomizationExtension />
                        </dxgr:GridControl.CurrentViewChangedListener>
                        <dxgr:GridViewHitInfoBase.HitTestAcceptor>
                            <dxght:VerticalScrollBarTableViewHitTestAcceptor />
                        </dxgr:GridViewHitInfoBase.HitTestAcceptor>
                    </ScrollBar>
                </Grid>
                <Grid
                    x:Name="gridScroll"
                    Margin="{DynamicResource {dxgt:LWKey TableView.HorizontalScrollbarMargin}}"
                    VerticalAlignment="Bottom"
                    Visibility="{Binding Path=(dxgr:GridControl.CurrentView).ShowDataNavigator, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.Row>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxgr:GridControl.CurrentView).ShowTotalSummary" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxgr:HorizontalScrollBarRowConverter />
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </Grid.Row>
                    <Grid.RowSpan>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxgr:GridControl.CurrentView).ShowTotalSummary" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxgr:HorizontalScrollBarRowSpanConverter />
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </Grid.RowSpan>
                    <Grid.ColumnSpan>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding Path="(dxgr:GridControl.CurrentView).TotalSummaryPosition" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxgr:GridControl.CurrentView).FixedRightContentWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxgr:GridControl.CurrentView).ExtendScrollBarToFixedColumns" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxgr:HorizontalScrollBarGridColumnSpanConverter />
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </Grid.ColumnSpan>

                    <ScrollBar
                        x:Name="PART_HorizontalScrollBar"
                        Maximum="{Binding ScrollableWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        Orientation="Horizontal"
                        ViewportSize="{Binding ViewportWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        Value="{Binding HorizontalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                        <dxgr:GridViewHitInfoBase.HitTestAcceptor>
                            <dxght:HorizontalScrollBarTableViewHitTestAcceptor />
                        </dxgr:GridViewHitInfoBase.HitTestAcceptor>
                    </ScrollBar>
                </Grid>

                <dxgr:FitContentContainer Grid.Row="3" Grid.Column="1">
                    <dxgr:FitContentContainer.Visibility>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding Path="(dxgr:GridControl.CurrentView).TotalSummaryPosition" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxgr:GridControl.CurrentView).FixedRightContentWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxgr:GridControl.CurrentView).ExtendScrollBarToFixedColumns" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxgr:FitContentContainerConverter />
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </dxgr:FitContentContainer.Visibility>
                    <dx:DXBorder
                        x:Name="PART_HorizontalScrollCorner"
                        dxgr:GridBorderHelper.ShowBorder="{Binding Path=(dxgr:GridControl.CurrentView).ShowTotalSummary, RelativeSource={RelativeSource TemplatedParent}}"
                        dxgr:GridScrollBarHelper.ExtendScrollBarToFixedColumns="{Binding Path=(dxgr:GridControl.CurrentView).ExtendScrollBarToFixedColumns, RelativeSource={RelativeSource TemplatedParent}}"
                        dxgr:GridScrollBarHelper.HasFixedRightColumns="False"
                        Style="{DynamicResource {dxgt:LWKey ScrollBar.ScrollingCornerStyle}}" />
                </dxgr:FitContentContainer>
            </Grid>
            <dxgr:OuterBorderElement
                x:Name="outerBorder"
                Grid.Row="0"
                Grid.RowSpan="2"
                ShowColumnHeaders="{Binding Path=(dxgr:GridControl.CurrentView).ShowColumnHeaders, RelativeSource={RelativeSource TemplatedParent}}" />
            <dxgcore:FocusRectPresenter
                x:Name="PART_FocusRectPresenter"
                Grid.RowSpan="5"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                View="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" />
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dx:ScrollBarExtensions.ScrollBarMode), RelativeSource={RelativeSource TemplatedParent}}" Value="TouchOverlap">
                <Setter TargetName="gridScroll" Property="Grid.Visibility" Value="{Binding ComputedHorizontalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxgr:GridControl.CurrentView).ShowDataNavigator, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter TargetName="gridScroll" Property="Grid.Visibility" Value="{Binding ComputedHorizontalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\TreeViewControl.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\FilteringUI\FilterEditor.xaml-->
    <sys:Double x:Key="{dxgt:LWKey FilterEditor.IconButtonWidth}">18</sys:Double>
    <dx:LWThickness x:Key="{dxgt:LWKey FilterEditor.EditorBorderThickness}" Value="1, Win11=0"/>
    <dx:LWThickness x:Key="{dxgt:LWKey FilterEditor.FilterEditorItemMargin}" Value="(0,0,4,0), Win11=(0,0,7,0)"/>
    <Style x:Key="menuOwner" TargetType="{x:Type FrameworkElement}">
        <Setter Property="Focusable" Value="True" />
        <Setter Property="dxb:BarManager.MenuShowMouseButton" Value="LeftButton" />
        <Setter Property="dxb:BarManager.DXContextMenuPlacement" Value="Bottom" />
    </Style>
    <DataTemplate x:Key="FilterEditorConstantTemplate" />
    <DataTemplate x:Key="FilterEditorBinaryTemplate">
        <dxfui_local:FilterModelValueItemContentPresenter Content="{Binding ValueItem}" />
    </DataTemplate>
    <DataTemplate x:Key="FilterEditorVariadicItemTemplate">
        <dxfui_local:FilterModelValueItemContentPresenter dxfui_local:FilterEditorNavigation.Index="{Binding Index}" Content="{Binding}" />
    </DataTemplate>
    <DataTemplate x:Key="MenuItemTemplate">
        <dxb:BarButtonItem Command="{Binding Command}" Content="{Binding DisplayName}" Glyph="{Binding Icon}" />
    </DataTemplate>
    <DataTemplate x:Key="FormatConditionMenuItemTemplate">
        <dxb:BarButtonItem
            Command="{Binding Command}"
            Content="{Binding}"
            CustomGlyphSize="20,20"
            GlyphSize="Custom">
            <dxb:BarButtonItem.GlyphTemplate>
                <DataTemplate>
                    <dxgr:FormatPreviewControl Content="{Binding FormatCondition.Format}" PreviewString="Aa">
                        <dxgr:FormatPreviewControl.SimpleFormatTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding PreviewString, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxgr:FormatPreviewControl}}}" TextDecorations="{Binding TextDecorations}" />
                            </DataTemplate>
                        </dxgr:FormatPreviewControl.SimpleFormatTemplate>
                    </dxgr:FormatPreviewControl>
                </DataTemplate>
            </dxb:BarButtonItem.GlyphTemplate>
            <dxb:BarButtonItem.ContentTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <dxgr:FormatPreviewControl
                            Margin="0,0,2,0"
                            Background="Transparent"
                            Content="{Binding Format}"
                            DataContext="{Binding FormatCondition}"
                            Visibility="{Binding Format.Icon, Converter={dx:NullableToVisibilityConverter}}">
                            <dxgr:FormatPreviewControl.Template>
                                <ControlTemplate TargetType="{x:Type dxgr:FormatPreviewControl}">
                                    <dx:DXImage HorizontalAlignment="Center" Source="{Binding Format.Icon, RelativeSource={RelativeSource TemplatedParent}}" Stretch="None" />
                                </ControlTemplate>
                            </dxgr:FormatPreviewControl.Template>
                        </dxgr:FormatPreviewControl>
                        <TextBlock VerticalAlignment="Center" Text="{Binding DisplayName}" />
                    </StackPanel>
                </DataTemplate>
            </dxb:BarButtonItem.ContentTemplate>
        </dxb:BarButtonItem>
    </DataTemplate>
    <!-- begin Resources -->

    <Style x:Key="{dxgt:LWKey FilterEditor.AddChildSplitButtonPathStyle}" TargetType="{x:Type Path}">
        <Setter Property="Data" Value="{StaticResource FilterEditor.AddChildSplitButtonPathStyle.Data}" />
        <Setter Property="Fill" Value="#7B7B7B" />
        <Setter Property="Height" Value="4" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,1,0,0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Stretch" Value="Fill" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Width" Value="8" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill" Value="{DynamicResource {dxgt:LWKey FilterEditor.AddChildSplitButtonMouseOverFill}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="filterEditorButtonStyle" TargetType="Button">
        <Setter Property="MaxWidth" Value="{DynamicResource {dxgt:LWKey FilterEditor.IconButtonWidth}}" />
        <Setter Property="Margin" Value="{StaticResource filterEditorButtonMargin}" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style x:Key="removeButtonStyle" BasedOn="{StaticResource filterEditorButtonStyle}" TargetType="Button">
        <Setter Property="ToolTipService.ToolTip">
            <Setter.Value>
                <ToolTip>
                    <StackPanel Orientation="Vertical">
                        <TextBlock Margin="0,0,0,4" FontWeight="Bold" Text="{dxe:EditorStringId FilterToolTipKeysRemove}" />
                        <TextBlock Text="{dxe:EditorStringId FilterToolTipNodeRemove}" />
                    </StackPanel>
                </ToolTip>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="addChildButtonStyle" BasedOn="{StaticResource filterEditorButtonStyle}" TargetType="Button">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- end -->
    <!-- begin OperationModelTemplateSelector -->

    <DataTemplate x:Key="OperandTypeContentTemplate">
        <dx:DXImage
            x:Name="PART_OperandType"
            Width="10"
            Height="10"
            Margin="6,0,0,0"
            VerticalAlignment="Center"
            dx:WpfSvgPalette.Palette="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}, Converter={StaticResource PaletteConverter}}"
            Source="{Binding Image}">
            <dx:DXImage.Style>
                <Style BasedOn="{StaticResource menuOwner}" TargetType="{x:Type FrameworkElement}">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    <Setter Property="dxb:BarManager.DXContextMenu">
                        <Setter.Value>
                            <dxb:PopupMenu ItemLinksSource="{Binding Path=(dxfui_local_native:FilterElementHelper.ValueItem).OperandMenuItems, RelativeSource={RelativeSource Self}}">
                                <dxb:PopupMenu.ItemTemplate>
                                    <DataTemplate>
                                        <dxb:BarButtonItem
                                            Command="{Binding Path=Command}"
                                            Content="{Binding DisplayText}"
                                            CustomGlyphSize="10,10"
                                            Glyph="{Binding Image}"
                                            GlyphSize="Custom" />
                                    </DataTemplate>
                                </dxb:PopupMenu.ItemTemplate>
                            </dxb:PopupMenu>
                        </Setter.Value>
                    </Setter>
                </Style>
            </dx:DXImage.Style>
            <dxmvvm:Interaction.Behaviors>
                <dxfui_local:FilterEditorContextMenuBehavior />
            </dxmvvm:Interaction.Behaviors>
        </dx:DXImage>
    </DataTemplate>
    <Style x:Key="operandTypeStyle" TargetType="{x:Type ContentControl}">
        <Setter Property="DataContext" Value="{Binding Path=(dxfui_local_native:FilterElementHelper.ValueItem), RelativeSource={RelativeSource Self}}" />
        <Setter Property="Content" Value="{Binding SelectedOperandMenuItem}" />
        <Setter Property="Margin" Value="0,0,4,0" />
        <Setter Property="ContentTemplate" Value="{StaticResource OperandTypeContentTemplate}" />
    </Style>
    <DataTemplate x:Key="{dxgt:LWKey FilterEditor.FilterEditorCancelGlyph}">
        <Grid x:Name="Root" MinWidth="16">
            <Path
                Width="8"
                Height="8"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Data="F1 M 0,1 1,0 4,3 7,0 8,1 5,4 8,7 7,8 4,5 1,8 0,7 3,4 0,1 Z "
                Fill="{TemplateBinding TextElement.Foreground}"
                SnapsToDevicePixels="True"
                Stretch="Fill" />
        </Grid>
        <DataTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter TargetName="Root" Property="MinWidth" Value="42" />
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <Style x:Key="removeOperandButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Command" Value="{Binding RemoveCommand}" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Foreground" Value="{DynamicResource {dxgt:LWKey FilterEditor.OperatorSelectorForeground}}" />
        <Setter Property="Visibility" Value="{Binding AllowRemoving, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <ContentPresenter ContentTemplate="{DynamicResource {dxgt:LWKey FilterEditor.FilterEditorCancelGlyph}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="OperandEditorValueTemplate">
        <dxfui_local:InplaceEditorCell
            Margin="{DynamicResource {dxgt:LWKey FilterEditor.FilterEditorItemMargin}}"
            dxfui_local:FilterEditorNavigation.Index="{Binding Index}"
            DataContext="{Binding Path=(dxfui_local_native:FilterElementHelper.ValueItem), RelativeSource={RelativeSource Self}}"
            EditSettings="{Binding EditSettings}"
            FilterModel="{Binding Path=(dxfui_local_native:FilterElementHelper.FilterModel), RelativeSource={RelativeSource Self}}"
            Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <dxfui_local:InplaceEditorCell.Template>
                <ControlTemplate TargetType="dxfui_local:InplaceEditorCell">
                    <dx:DXBorder
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{DynamicResource {dxgt:LWKey FilterEditor.ItemCornerRadius}}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentControl Style="{StaticResource operandTypeStyle}">
                                <ContentControl.Visibility>
                                    <MultiBinding Converter="{StaticResource OperandMenuItemsVisibilityConverter}">
                                        <Binding Path="OperandMenuItems" />
                                        <Binding Path="SelectedOperandMenuItem" />
                                    </MultiBinding>
                                </ContentControl.Visibility>
                            </ContentControl>
                            <ContentPresenter Grid.Column="1" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                            <Button
                                x:Name="RemoveVariadicItemButton"
                                Grid.Column="2"
                                DataContext="{Binding Path=(dxfui_local_native:FilterElementHelper.ValueItem), RelativeSource={RelativeSource Self}}"
                                Style="{StaticResource removeOperandButtonStyle}"
                                Visibility="{DXBinding 'AllowRemoving and !(@p.IsActive) ? $Visibility.Visible : $Visibility.Collapsed'}" />
                        </Grid>
                    </dx:DXBorder>
                </ControlTemplate>
            </dxfui_local:InplaceEditorCell.Template>
        </dxfui_local:InplaceEditorCell>
    </DataTemplate>
    <DataTemplate x:Key="OperandEditorPropertyTemplate">
        <ContentControl Margin="{DynamicResource {dxgt:LWKey FilterEditor.FilterEditorItemMargin}}" Background="{DynamicResource {dxgt:LWKey FilterEditor.PropertySelectorBackground}}" Style="{DynamicResource {dxgt:LWKey FilterEditor.FilterEditorItemStyle}}">
            <StackPanel DataContext="{Binding Path=(dxfui_local_native:FilterElementHelper.ValueItem), RelativeSource={RelativeSource Self}}" Orientation="Horizontal">
                <ContentControl Style="{StaticResource operandTypeStyle}" TextElement.Foreground="{DynamicResource {dxgt:LWKey FilterEditor.PropertySelectorForeground}}" />
                <dxfui_local:FilterEditorPropertySelector
                    x:Name="RightPropertySelector"
                    dxfui_local:FilterEditorNavigation.Index="0"
                    EditValue="{Binding SelectedProperty}"
                    IsEnabled="{DXBinding Expr='Properties.Count gt 0'}"
                    ItemsSource="{Binding Properties}"
                    NullText="{dxe:EditorStringId FilterEmptyPropertyText}"
                    SelectedItem="{Binding SelectedProperty}"
                    Style="{DynamicResource {dxgt:LWKey FilterEditor.PropertySelectorStyle}}" />
                <Button x:Name="RemoveVariadicItemButton" Style="{StaticResource removeOperandButtonStyle}" />
            </StackPanel>
        </ContentControl>
    </DataTemplate>
    <Style x:Key="{dxgt:LWKey FilterEditor.OperandEditorParameterStyle}" BasedOn="{StaticResource menuOwner}" TargetType="{x:Type FrameworkElement}">
        <Setter Property="dxb:BarManager.DXContextMenu">
            <Setter.Value>
                <dxmvvm:ValueFactory>
                    <DataTemplate>
                        <dxb:PopupMenu ItemLinksSource="{Binding Path=(dxfui_local_native:FilterElementHelper.ValueItem).Parameters, RelativeSource={RelativeSource Self}}">
                            <dxb:PopupMenu.ItemTemplate>
                                <DataTemplate>
                                    <dxb:BarButtonItem Command="{Binding Path=(dxfui_local_native:FilterElementHelper.ValueItem).SelectParameterCommand, RelativeSource={RelativeSource Self}}" CommandParameter="{Binding}" Content="{Binding}" />
                                </DataTemplate>
                            </dxb:PopupMenu.ItemTemplate>
                        </dxb:PopupMenu>
                    </DataTemplate>
                </dxmvvm:ValueFactory>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="OperandEditorParameterTemplate">
        <ContentControl Margin="{DynamicResource {dxgt:LWKey FilterEditor.FilterEditorItemMargin}}" Background="{DynamicResource {dxgt:LWKey FilterEditor.PropertySelectorBackground}}" Style="{DynamicResource {dxgt:LWKey FilterEditor.FilterEditorItemStyle}}">
            <StackPanel DataContext="{Binding Path=(dxfui_local_native:FilterElementHelper.ValueItem), RelativeSource={RelativeSource Self}}" Orientation="Horizontal">
                <ContentControl Style="{StaticResource operandTypeStyle}" TextElement.Foreground="{DynamicResource {dxgt:LWKey FilterEditor.PropertySelectorForeground}}" />
                <TextBlock
                    x:Name="PART_Parameter"
                    Margin="{DynamicResource {dxgt:LWKey FilterEditor.FilterEditorItemMargin}}"
                    VerticalAlignment="Center"
                    Foreground="{DynamicResource {dxgt:LWKey FilterEditor.PropertySelectorForeground}}"
                    Style="{DynamicResource {dxgt:LWKey FilterEditor.OperandEditorParameterStyle}}"
                    Text="{DXBinding 'SelectedParameter ?? $dxe:EditorLocalizer.GetString($dxe:EditorStringId.FilterEmptyParameterText)'}" />
                <Button x:Name="RemoveVariadicItemButton" Style="{StaticResource removeOperandButtonStyle}" />
            </StackPanel>
        </ContentControl>
    </DataTemplate>
    <Style x:Key="OperandEditorDateTimeFunctionStyle" BasedOn="{StaticResource menuOwner}" TargetType="{x:Type TextBlock}">
        <Setter Property="dxb:BarManager.DXContextMenu">
            <Setter.Value>
                <dxmvvm:ValueFactory>
                    <DataTemplate>
                        <dxb:PopupMenu ItemLinksSource="{Binding Path=(dxfui_local_native:FilterElementHelper.ValueItem).DateTimeFunctions, RelativeSource={RelativeSource Self}}">
                            <dxb:PopupMenu.ItemTemplate>
                                <DataTemplate>
                                    <dxb:BarButtonItem Command="{Binding Path=(dxfui_local_native:FilterElementHelper.ValueItem).SelectDateTimeFunctionCommand, RelativeSource={RelativeSource Self}}" CommandParameter="{Binding}" Content="{Binding Converter={dxfui_local_native:DateTimeFunctionTypeTextConverter}}" />
                                </DataTemplate>
                            </dxb:PopupMenu.ItemTemplate>
                        </dxb:PopupMenu>
                    </DataTemplate>
                </dxmvvm:ValueFactory>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="OperandEditorLocalDateTimeFunctionTemplate">
        <ContentControl Margin="{DynamicResource {dxgt:LWKey FilterEditor.FilterEditorItemMargin}}" Background="{DynamicResource {dxgt:LWKey FilterEditor.PropertySelectorBackground}}" Style="{DynamicResource {dxgt:LWKey FilterEditor.FilterEditorItemStyle}}">
            <StackPanel DataContext="{Binding Path=(dxfui_local_native:FilterElementHelper.ValueItem), RelativeSource={RelativeSource Self}}" Orientation="Horizontal">
                <ContentControl Style="{StaticResource operandTypeStyle}" TextElement.Foreground="{DynamicResource {dxgt:LWKey FilterEditor.PropertySelectorForeground}}" />
                <TextBlock
                    x:Name="PART_LocalDateTimeFunction"
                    Margin="{DynamicResource {dxgt:LWKey FilterEditor.FilterEditorItemMargin}}"
                    VerticalAlignment="Center"
                    Foreground="{DynamicResource {dxgt:LWKey FilterEditor.PropertySelectorForeground}}"
                    Style="{StaticResource OperandEditorDateTimeFunctionStyle}"
                    Text="{Binding SelectedDateTimeFunction, Converter={dxfui_local_native:DateTimeFunctionTypeTextConverter}}" />
                <Button x:Name="RemoveVariadicItemButton" Style="{StaticResource removeOperandButtonStyle}" />
            </StackPanel>
        </ContentControl>
    </DataTemplate>
    <dxfui_local:OperandEditorTemplateSelector
        x:Key="{dxgt:LWKey FilterEditor.OperandEditorTemplateSelector}"
        LocalDateTimeFunctionTemplate="{StaticResource OperandEditorLocalDateTimeFunctionTemplate}"
        ParameterTemplate="{StaticResource OperandEditorParameterTemplate}"
        PropertyTemplate="{StaticResource OperandEditorPropertyTemplate}"
        ValueTemplate="{StaticResource OperandEditorValueTemplate}" />
    <DataTemplate x:Key="FilterEditorTernaryTemplate">
        <StackPanel Orientation="Horizontal">
            <dxfui_local:FilterModelValueItemContentPresenter dxfui_local:FilterEditorNavigation.Index="0" Content="{Binding LeftValueItem}" />
            <TextBlock Margin="{DynamicResource {dxgt:LWKey FilterEditor.FilterEditorItemMargin}}" VerticalAlignment="Center" Text="{dxe:EditorStringId FilterClauseBetweenAnd}" />
            <dxfui_local:FilterModelValueItemContentPresenter dxfui_local:FilterEditorNavigation.Index="1" Content="{Binding RightValueItem}" />
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="FilterEditorVariadicTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <ItemsControl x:Name="filterItems" ItemTemplate="{StaticResource FilterEditorVariadicItemTemplate}" ItemsSource="{Binding Items}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel
                            MaxWidth="3000"
                            ClipToBounds="True"
                            IsVirtualizing="True"
                            Orientation="Horizontal"
                            VirtualizationMode="Recycling">
                            <dxmvvm:Interaction.Behaviors>
                                <dxfui_local_native:AttachParentScrollViewerBehavior />
                            </dxmvvm:Interaction.Behaviors>
                        </VirtualizingStackPanel>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.Template>
                    <ControlTemplate TargetType="ItemsControl">
                        <ItemsPresenter />
                    </ControlTemplate>
                </ItemsControl.Template>
                <dxmvvm:Interaction.Behaviors>
                    <dxfui_local:FilterEditorVariadicBehavior AddCommand="{Binding AddCommand}" />
                </dxmvvm:Interaction.Behaviors>
            </ItemsControl>
            <Rectangle
                Width="40"
                HorizontalAlignment="Right"
                VerticalAlignment="Stretch"
                Focusable="False"
                IsHitTestVisible="False"
                Visibility="{Binding ActualWidth, ElementName=filterItems, Converter={dxfui_local_native:ValueEqualsParameterToVisibilityConverter}, ConverterParameter=3000}">
                <Rectangle.Fill>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                        <GradientStop Offset="0" Color="Transparent" />
                        <GradientStop Offset="1" Color="White" />
                    </LinearGradientBrush>
                </Rectangle.Fill>
            </Rectangle>
            <Button
                x:Name="AddButton"
                Grid.Column="1"
                Command="{Binding AddCommand}"
                Style="{StaticResource addChildButtonStyle}"
                Template="{DynamicResource {dxgt:LWKey FilterEditor.NewOperandButtonControlTemplate}}">
                <ToolTipService.ToolTip>
                    <ToolTip>
                        <StackPanel Orientation="Vertical">
                            <TextBlock Margin="0,0,0,4" FontWeight="Bold" Text="{dxe:EditorStringId FilterToolTipKeysAdd}" />
                            <TextBlock Text="{dxe:EditorStringId FilterToolTipElementAdd}" />
                        </StackPanel>
                    </ToolTip>
                </ToolTipService.ToolTip>
            </Button>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="FilterEditorPredefinedFormatConditionTemplate">
        <DataTemplate.Resources>
            <DataTemplate x:Key="valueEditSettingsItemsTemplate">
                <dxe:SpinEditSettings
                    AllowRoundOutOfRangeValue="True"
                    Mask="d"
                    MaskType="Numeric"
                    MaskUseAsDisplayFormat="True"
                    MaxValue="2147483647"
                    MinValue="1" />
                <!-- {x:Static sys:Int32.MaxValue} -->
            </DataTemplate>
            <DataTemplate x:Key="valueEditSettingsPercentTemplate">
                <dxe:SpinEditSettings
                    AllowRoundOutOfRangeValue="True"
                    MaskType="Numeric"
                    MaskUseAsDisplayFormat="True"
                    MaxValue="100"
                    MinValue="0" />
            </DataTemplate>
            <DataTemplate x:Key="valueTypeEditSettingsTemplate">
                <dxe:ComboBoxEditSettings ApplyItemTemplateToSelectedItem="True" IsTextEditable="False">
                    <dxe:ComboBoxEditSettings.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Converter={StaticResource TopBottomValueTypeConverter}}" />
                        </DataTemplate>
                    </dxe:ComboBoxEditSettings.ItemTemplate>
                    <dxe:ComboBoxEditSettings.ItemsSource>
                        <x:Array Type="{x:Type dxfui:TopBottomValueType}">
                            <dxfui:TopBottomValueType>Items</dxfui:TopBottomValueType>
                            <dxfui:TopBottomValueType>Percent</dxfui:TopBottomValueType>
                        </x:Array>
                    </dxe:ComboBoxEditSettings.ItemsSource>
                </dxe:ComboBoxEditSettings>
            </DataTemplate>

            <dxfui_local_native:FormatConditionValueEditSettingsConverter x:Key="valueEditSettingsConverter" EditSettingsItemTemplate="{StaticResource valueEditSettingsItemsTemplate}" EditSettingsPercentTemplate="{StaticResource valueEditSettingsPercentTemplate}" />
            <dxfui_local_native:FormatConditionValueTypeEditSettingsConverter x:Key="valueTypeEditSettingsConverter" EditSettingsTemplate="{StaticResource valueTypeEditSettingsTemplate}" />
            <Style x:Key="editorCellStyle" TargetType="{x:Type dxfui_local:InplaceEditorCell}">
                <Setter Property="FilterModel" Value="{Binding Path=(dxfui_local_native:FilterElementHelper.FilterModel), RelativeSource={RelativeSource Self}}" />
                <Setter Property="Margin" Value="{DynamicResource {dxgt:LWKey FilterEditor.FilterEditorItemMargin}}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="dxfui_local:InplaceEditorCell">
                            <dx:DXBorder
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{DynamicResource {dxgt:LWKey FilterEditor.ItemCornerRadius}}">
                                <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                            </dx:DXBorder>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </DataTemplate.Resources>
        <StackPanel Orientation="Horizontal">
            <dxfui_local:InplaceEditorCell
                x:Name="PART_Value"
                dxfui_local:FilterEditorNavigation.Index="0"
                EditSettings="{Binding ValueType, Converter={StaticResource valueEditSettingsConverter}}"
                Style="{StaticResource editorCellStyle}"
                Value="{Binding Value, Mode=TwoWay, Converter={dxmvvm:TypeCastConverter}}" />
            <dxfui_local:InplaceEditorCell
                x:Name="PART_ValueType"
                dxfui_local:FilterEditorNavigation.Index="1"
                EditSettings="{Binding Converter={StaticResource valueTypeEditSettingsConverter}}"
                Style="{StaticResource editorCellStyle}"
                Value="{Binding ValueType, Mode=TwoWay}" />
        </StackPanel>
    </DataTemplate>
    <dxfui_local:OperationModelTemplateSelector
        x:Key="{dxgt:LWKey FilterEditor.OperatorTemplateSelector}"
        BinaryTemplate="{StaticResource FilterEditorBinaryTemplate}"
        ConstantTemplate="{StaticResource FilterEditorConstantTemplate}"
        PredefinedFormatConditionTemplate="{StaticResource FilterEditorPredefinedFormatConditionTemplate}"
        TernaryTemplate="{StaticResource FilterEditorTernaryTemplate}"
        VariadicTemplate="{StaticResource FilterEditorVariadicTemplate}" />


    <!-- end -->

    <!-- begin FilterEditorPropertySelector -->

    <ControlTemplate x:Key="propertySelectorPopupContentTemplate">
        <Grid>
            <Grid.Resources>
                <ControlTemplate x:Key="{dxgt:LWKey GridRow.RowTemplate}" TargetType="dxgr:RowControl">
                    <Grid Margin="1,0,1,0">
                        <dx:DXBorder x:Name="Background" Background="{TemplateBinding Background}" />
                        <Grid x:Name="PART_LayoutPanel" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="FadeSelection" Value="True">
                            <Setter TargetName="Background" Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <dx:DXBorder
                Background="{DynamicResource {dxgt:LWKey ExcelStyleFilterElement.FilterValueContainerTopAreaBackground}}"
                BorderBrush="{DynamicResource {dxgt:LWKey ExcelStyleFilterElement.FilterValueContainerTopAreaBorderColor}}"
                BorderThickness="0,0,0,1"
                Visibility="{Binding ShowSearchPanel, Converter={dxmvvm:BooleanToVisibilityConverter}}">
                <dxgr:GridSearchControl Margin="4" View="{Binding ElementName=view}" />
            </dx:DXBorder>
            <dxgr:GridControl x:Name="PART_GridControl" Grid.Row="1" MinHeight="50">
                <dxgr:GridControl.Columns>
                    <dxgr:GridColumn FieldName="ContentString">
                        <dxgr:GridColumn.CellTemplate>
                            <DataTemplate>
                                <ContentPresenter
                                    Margin="3"
                                    VerticalAlignment="Center"
                                    Content="{Binding RowData.Row.Content}"
                                    ContentTemplateSelector="{Binding DataContext.RowData.Row.CaptionTemplateSelector, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            </DataTemplate>
                        </dxgr:GridColumn.CellTemplate>
                    </dxgr:GridColumn>
                </dxgr:GridControl.Columns>
                <dxgr:GridControl.View>
                    <dxgr:TreeListView
                        x:Name="view"
                        AutoExpandAllNodes="True"
                        AutoWidth="True"
                        FilterMode="Extended"
                        KeyFieldName="ID"
                        ParentFieldName="ParentID"
                        RowMinHeight="22"
                        SearchDelay="0"
                        ShowColumnHeaders="False"
                        ShowEmptyText="True"
                        ShowExpandButtons="False"
                        ShowHorizontalLines="False"
                        ShowIndicator="False"
                        ShowRootIndent="False"
                        ShowSearchPanelMode="Never"
                        ShowVerticalLines="False"
                        TreeLineStyle="Solid"
                        VerticalScrollbarVisibility="Auto">
                        <dxgr:TreeListView.Style>
                            <Style TargetType="{x:Type dxgr:TreeListView}">
                                <Style.Resources>
                                    <Style x:Key="{dxgt:LWKey TableView.NoRecordsControlStyle}" TargetType="{x:Type dxgr:NoRecordsControl}">
                                        <Setter Property="NoRecordsFoundText" Value="{DXBinding '$dxe:EditorLocalizer.GetString($dxe:EditorStringId.FilterNoPropertiesFoundText)'}" />
                                    </Style>
                                </Style.Resources>
                                <Style.Triggers>
                                    <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                                        <Setter Property="RowMinHeight" Value="42" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </dxgr:TreeListView.Style>
                    </dxgr:TreeListView>
                </dxgr:GridControl.View>
            </dxgr:GridControl>
        </Grid>
    </ControlTemplate>
    <Style x:Key="{dxgt:LWKey FilterEditor.PropertySelectorStyle}" TargetType="dxfui_local:FilterEditorPropertySelector">
        <Setter Property="AutoPopulateColumns" Value="False" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="PopupContentTemplate" Value="{StaticResource propertySelectorPopupContentTemplate}" />
        <Setter Property="FilterCondition" Value="Contains" />
        <Setter Property="Foreground" Value="{DynamicResource {dxgt:LWKey FilterEditor.PropertySelectorForeground}}" />
        <Setter Property="IsTextEditable" Value="False" />
        <Setter Property="ShowBorder" Value="False" />
        <Setter Property="ShowEditorButtons" Value="False" />
        <Setter Property="PopupMinHeight" Value="{x:Static sys:Double.NaN}" />
        <Setter Property="PopupMaxHeight" Value="300" />
        <Setter Property="ShowSizeGrip" Value="False" />
        <Setter Property="IncrementalSearch" Value="False" />
        <Setter Property="AllowSpinOnMouseWheel" Value="False" />
        <Setter Property="AllowUpdateTwoWayBoundPropertiesOnSynchronization" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxfui_local:FilterEditorPropertySelector}">
                    <Grid>
                        <TextBlock VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Text="{TemplateBinding NullText}" Visibility="{Binding EditValue, Converter={dx:NullableToVisibilityConverter Invert=True}, RelativeSource={RelativeSource TemplatedParent}}" />
                        <ContentPresenter
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{Binding Path=EditValue.Content, RelativeSource={RelativeSource TemplatedParent}}"
                            ContentTemplateSelector="{Binding Path=EditValue.SelectedCaptionTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                            Visibility="{Binding Path=EditValue, Converter={dx:NullableToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                        <Grid.Style>
                            <Style TargetType="{x:Type FrameworkElement}">
                                <Style.Setters>
                                    <Setter Property="Margin" Value="{DynamicResource {dxgt:LWKey FilterEditor.PropertySelectorContentMargin}}" />
                                </Style.Setters>
                                <Style.Triggers>
                                    <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                                        <Setter Property="Margin" Value="13,14,13,13" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- end -->

    <!-- begin Buttons -->

    <ControlTemplate x:Key="{dxgt:LWKey FilterEditor.AddButtonControlTemplate}" TargetType="Button">
        <dx:DXImage x:Name="image" Source="{dxfui_local:FilterImageSource Name=Add_Inactive}" />
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="image" Property="Source" Value="{dxfui_local:FilterImageSource Name=Add_Active}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:LWKey FilterEditor.NewOperandButtonControlTemplate}" TargetType="Button">
        <dx:DXBorder MinWidth="16" Background="Transparent">
            <Path>
                <Path.Style>
                    <Style TargetType="{x:Type Path}">
                        <Setter Property="Data" Value="F1 M 0,3 3,3 3,0 5,0 5,3 8,3 8,5 5,5 5,8 3,8 3,5 0,5 0,3 Z " />
                        <Setter Property="Fill" Value="#7B7B7B" />
                        <Setter Property="Height" Value="8" />
                        <Setter Property="HorizontalAlignment" Value="Center" />
                        <Setter Property="SnapsToDevicePixels" Value="True" />
                        <Setter Property="Stretch" Value="Fill" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="Width" Value="8" />
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.62" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Path.Style>
            </Path>
        </dx:DXBorder>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:LWKey FilterEditor.RemoveButtonControlTemplate}" TargetType="Button">
        <dx:DXImage x:Name="image" Source="{dxfui_local:FilterImageSource Name=Close_Inactive}" />
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="image" Property="Source" Value="{dxfui_local:FilterImageSource Name=Close_Active}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxgt:LWKey FilterEditor.EditButtonControlTemplate}" TargetType="Button">
        <dx:DXImage x:Name="image" Source="{dxfui_local:FilterImageSource Name=Edit_Inactive}" />
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="image" Property="Source" Value="{dxfui_local:FilterImageSource Name=Edit_Active}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- end -->

    <!-- begin Row Controls -->

    <ControlTemplate x:Key="{dxgt:LWKey FilterEditor.RowControlTemplate}" TargetType="ContentControl">
        <ContentPresenter
            Margin="{TemplateBinding Padding}"
            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
            Content="{TemplateBinding Content}"
            ContentTemplate="{TemplateBinding ContentTemplate}" />
    </ControlTemplate>

    <Style x:Key="{dxgt:LWKey FilterEditor.FilterEditorItemStyle}" TargetType="ContentControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Grid>
                        <dx:DXBorder
                            x:Name="BackgroundBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{DynamicResource {dxgt:LWKey FilterEditor.ItemCornerRadius}}"
                            TextBlock.Foreground="{TemplateBinding Foreground}">
                            <ContentPresenter x:Name="Content" Content="{TemplateBinding Content}" />
                        </dx:DXBorder>
                        <dx:DXBorder
                            x:Name="BottomBorder"
                            BorderBrush="{TemplateBinding Background}"
                            BorderThickness="0,0,0,2"
                            CornerRadius="{DynamicResource {dxgt:LWKey FilterEditor.ItemCornerRadius}}"
                            IsHitTestVisible="False"
                            Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.Setters>
                                <Setter TargetName="BackgroundBorder" Property="Opacity" Value="0.62" />
                            </Trigger.Setters>
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=Content.(dxfui_local:FilterEditorNavigation.IsFocused), RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <DataTrigger.Setters>
                                <Setter TargetName="BackgroundBorder" Property="Opacity" Value="0.62" />
                                <Setter TargetName="BottomBorder" Property="Visibility" Value="Visible" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="{dxgt:LWKey FilterEditor.LeafTemplate}">
        <Grid Background="Transparent">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <StackPanel
                Grid.Row="0"
                MinHeight="{DynamicResource {dxgt:LWKey FilterEditor.RowMinHeight}}"
                Margin="{StaticResource filterEditorRowMargin}"
                dxfui_local:FilterEditorNavigation.Node="{Binding}"
                Orientation="Horizontal">
                <ContentControl x:Name="PART_PropertySelector"
                                Margin="{DynamicResource {dxgt:LWKey FilterEditor.FilterEditorItemMargin}}"
                                Background="{DynamicResource {dxgt:LWKey FilterEditor.PropertySelectorBackground}}"
                                Style="{DynamicResource {dxgt:LWKey FilterEditor.FilterEditorItemStyle}}">
                    <dxfui_local:FilterEditorPropertySelector
                        x:Name="PropertySelector"
                        dxfui_local:FilterEditorNavigation.Index="0"
                        EditValue="{Binding SelectedProperty}"
                        IsEnabled="{DXBinding Expr='Properties.Count gt 0'}"
                        ItemsSource="{Binding Properties}"
                        SelectedItem="{Binding SelectedProperty}"
                        Style="{DynamicResource {dxgt:LWKey FilterEditor.PropertySelectorStyle}}" />
                </ContentControl>
                <ContentControl x:Name="PART_OperatorSelector"
                                Margin="{DynamicResource {dxgt:LWKey FilterEditor.FilterEditorItemMargin}}"
                                Background="{DynamicResource {dxgt:LWKey FilterEditor.OperatorSelectorBackground}}"
                                Foreground="{DynamicResource {dxgt:LWKey FilterEditor.OperatorSelectorForeground}}"
                                Style="{DynamicResource {dxgt:LWKey FilterEditor.FilterEditorItemStyle}}">
                    <StackPanel x:Name="OperatorSelector" dxfui_local:FilterEditorNavigation.Index="1" Orientation="Horizontal">
                        <StackPanel.Style>
                            <Style BasedOn="{StaticResource menuOwner}" TargetType="{x:Type FrameworkElement}">
                                <Style.Resources>
                                    <DataTemplate x:Key="operatorMenuSubItemTemplate">
                                        <dxb:BarSplitButtonItem ActAsDropDown="True" Content="{Binding DisplayName}">
                                            <dxb:PopupMenu ItemLinksSource="{Binding Children}" ItemTemplateSelector="{DynamicResource operatorMenuTemplateSelector}" />
                                        </dxb:BarSplitButtonItem>
                                    </DataTemplate>
                                    <dxfui:MenuItemTemplateSelector
                                        x:Key="operatorMenuTemplateSelector"
                                        Button="{StaticResource MenuItemTemplate}"
                                        FormatConditionButton="{StaticResource FormatConditionMenuItemTemplate}"
                                        Group="{StaticResource operatorMenuSubItemTemplate}" />
                                </Style.Resources>
                                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                <Style.Triggers>
                                    <Trigger Property="dxfui_local:FilterEditorNavigation.IsFocused" Value="True">
                                        <Setter Property="dxb:BarManager.DXContextMenu">
                                            <Setter.Value>
                                                <dxb:PopupMenu ItemLinksSource="{Binding MultiModel.ItemsMenu}" ItemTemplateSelector="{StaticResource operatorMenuTemplateSelector}" />
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        <dxmvvm:Interaction.Behaviors>
                            <dxfui_local:FilterEditorContextMenuBehavior />
                        </dxmvvm:Interaction.Behaviors>
                        <Grid DataContext="{Binding MultiModel.SelectedItem.FormatCondition}" Visibility="{Binding Converter={dx:NullableToVisibilityConverter}}">
                            <dxgr:FormatPreviewControl
                                x:Name="FormatPreviewControl"
                                BorderBrush="{DynamicResource {dxgt:LWKey FilterEditor.OperatorSelectorBackground}}"
                                Content="{Binding Format}"
                                CornerRadius="{DynamicResource {dxgt:LWKey FilterEditor.FormatConditionCornerRadius}}"
                                PreviewString="Aa" />
                        </Grid>
                        <dxe:TextEdit EditMode="InplaceInactive" EditValue="{Binding MultiModel.SelectedItem.DisplayName, Mode=OneWay}" />
                    </StackPanel>
                </ContentControl>

                <ContentControl Margin="{DynamicResource {dxgt:LWKey FilterEditor.FilterEditorItemMargin}}"
                                Background="{DynamicResource {dxgt:LWKey FilterEditor.PropertySelectorBackground}}"
                                Style="{DynamicResource {dxgt:LWKey FilterEditor.FilterEditorItemStyle}}"
                                x:Name="PART_AggregatePropertySelector"
                                Visibility="Collapsed">
                    <dxfui_local:FilterEditorPropertySelector
                        x:Name="AggregatePropertySelector"
                        EditValue="{Binding AggregateSelectedProperty}"
                        ItemsSource="{Binding SelectedProperty.Properties}"
                        SelectedItem="{Binding AggregateSelectedProperty}"
                        dxfui_local:FilterEditorNavigation.Index="2"
                        IsEnabled="{DXBinding Expr='SelectedProperty.Properties.Count gt 0'}"
                        Style="{DynamicResource {dxgt:LWKey FilterEditor.PropertySelectorStyle}}" />
                </ContentControl>

                <ContentControl
                    Margin="{DynamicResource {dxgt:LWKey FilterEditor.FilterEditorItemMargin}}"
                    Background="{DynamicResource {dxgt:LWKey FilterEditor.OperatorSelectorBackground}}"
                    Foreground="{DynamicResource {dxgt:LWKey FilterEditor.OperatorSelectorForeground}}"
                    Style="{DynamicResource {dxgt:LWKey FilterEditor.FilterEditorItemStyle}}"
                    x:Name="PART_AggregateOperatorSelector"
                    Visibility="Collapsed">
                    <StackPanel x:Name="AggregateOperatorSelector" dxfui_local:FilterEditorNavigation.Index="3" Orientation="Horizontal">
                        <StackPanel.Style>
                            <Style BasedOn="{StaticResource menuOwner}" TargetType="{x:Type FrameworkElement}">
                                <Style.Resources>
                                    <DataTemplate x:Key="operatorMenuSubItemTemplate">
                                        <dxb:BarSplitButtonItem ActAsDropDown="True" Content="{Binding DisplayName}">
                                            <dxb:PopupMenu ItemLinksSource="{Binding Children}" ItemTemplateSelector="{DynamicResource operatorMenuTemplateSelector}" />
                                        </dxb:BarSplitButtonItem>
                                    </DataTemplate>
                                    <dxfui:MenuItemTemplateSelector
                                        x:Key="operatorMenuTemplateSelector"
                                        Button="{StaticResource MenuItemTemplate}"
                                        FormatConditionButton="{StaticResource FormatConditionMenuItemTemplate}"
                                        Group="{StaticResource operatorMenuSubItemTemplate}" />
                                </Style.Resources>
                                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                <Style.Triggers>
                                    <Trigger Property="dxfui_local:FilterEditorNavigation.IsFocused" Value="True">
                                        <Setter Property="dxb:BarManager.DXContextMenu">
                                            <Setter.Value>
                                                <dxb:PopupMenu ItemLinksSource="{Binding MultiModel.SubItemsMultiModel.ItemsMenu}" ItemTemplateSelector="{StaticResource operatorMenuTemplateSelector}" />
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        <dxmvvm:Interaction.Behaviors>
                            <dxfui_local:FilterEditorContextMenuBehavior />
                        </dxmvvm:Interaction.Behaviors>
                        <Grid DataContext="{Binding MultiModel.SubItemsMultiModel.SelectedItem.FormatCondition}" Visibility="{Binding Converter={dx:NullableToVisibilityConverter}}">
                            <dxgr:FormatPreviewControl
                                x:Name="AggregateFormatPreviewControl"
                                BorderBrush="{DynamicResource {dxgt:LWKey FilterEditor.OperatorSelectorBackground}}"
                                Content="{Binding Format}"
                                CornerRadius="{DynamicResource {dxgt:LWKey FilterEditor.FormatConditionCornerRadius}}"
                                PreviewString="Aa" />
                        </Grid>
                        <dxe:TextEdit EditMode="InplaceInactive" EditValue="{Binding MultiModel.SubItemsMultiModel.SelectedItem.DisplayName, Mode=OneWay}" />
                    </StackPanel>
                </ContentControl>

                <ContentPresenter
                    x:Name="PART_AggregateValuePresenter"
                    VerticalAlignment="Stretch"
                    Visibility="Collapsed"
                    dxfui_local:FilterEditorNavigation.Index="4"
                    dxfui_local_native:FilterElementHelper.FilterModel="{Binding}"
                    Content="{Binding MultiModel.SubItemsMultiModel.Model}"
                    ContentTemplateSelector="{Binding DataContext.MultiModel.SubItemsMultiModel.ModelTemplateSelector, RelativeSource={RelativeSource Mode=TemplatedParent}}" />

                <ContentPresenter
                    x:Name="PART_ValuePresenter"
                    VerticalAlignment="Stretch"
                    dxfui_local:FilterEditorNavigation.Index="5"
                    dxfui_local_native:FilterElementHelper.FilterModel="{Binding}"
                    Content="{Binding MultiModel.Model}"
                    ContentTemplateSelector="{Binding DataContext.MultiModel.ModelTemplateSelector, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                <Button
                    x:Name="RemoveButton"
                    MinWidth="18"
                    Margin="4,0,0,0"
                    Command="{Binding RemoveCommand}"
                    Style="{StaticResource removeButtonStyle}"
                    Template="{DynamicResource {dxgt:LWKey FilterEditor.RemoveButtonControlTemplate}}"
                    Visibility="Hidden" />
            </StackPanel>
            <dxfui_local:FilterEditorGroupControl x:Name="PART_AggregateGroup"
                                                  Grid.Row="1"
                                                  Content="{Binding AggregateGroup}"
                                                  Margin="24,0,0,0"
                                                  MinHeight="{DynamicResource {dxgt:LWKey FilterEditor.RowMinHeight}}"
                                                  Visibility="Collapsed"/>
        </Grid>
        <DataTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition SourceName="RemoveButton" Property="IsEnabled" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter TargetName="RemoveButton" Property="Visibility" Value="Visible" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter TargetName="FormatPreviewControl" Property="Padding" Value="12" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                <Setter TargetName="FormatPreviewControl" Property="Padding" Value="12" />
            </Trigger>

            <DataTrigger Binding="{Binding IsCollectionProperty}" Value="True">
                <Setter Property="Visibility" Value="Visible" TargetName="PART_AggregatePropertySelector"/>
                <Setter Property="Visibility" Value="Visible" TargetName="PART_AggregateOperatorSelector"/>
                <!-- <Setter Property="Visibility" Value="Visible" TargetName="PART_AggregateGroup"/> -->
                <Setter Property="Visibility" Value="Visible" TargetName="PART_AggregateValuePresenter"/>
                <Setter Property="Visibility" Value="Collapsed" TargetName="PART_ValuePresenter"/>
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsCollectionProperty}" Value="True" />
                    <Condition Binding="{Binding ShowConditionGroupProperty}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Visibility" Value="Visible" TargetName="PART_AggregateGroup" />
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding MultiModel.SelectedItem.DisplayName, Mode=OneWay}" Value="Exists">
                <Setter Property="Visibility" Value="Collapsed" TargetName="PART_AggregatePropertySelector"/>
                <Setter Property="Visibility" Value="Collapsed" TargetName="PART_AggregateOperatorSelector"/>
                <Setter Property="Visibility" Value="Collapsed" TargetName="PART_AggregateValuePresenter"/>
                <Setter Property="Visibility" Value="Collapsed" TargetName="PART_ValuePresenter"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding MultiModel.SelectedItem.DisplayName, Mode=OneWay}" Value="Single">
                <Setter Property="Visibility" Value="Collapsed" TargetName="PART_AggregatePropertySelector"/>
                <Setter Property="Visibility" Value="Collapsed" TargetName="PART_AggregateOperatorSelector"/>
                <Setter Property="Visibility" Value="Collapsed" TargetName="PART_AggregateValuePresenter"/>
                <Setter Property="Visibility" Value="Collapsed" TargetName="PART_ValuePresenter"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding MultiModel.SelectedItem.DisplayName, Mode=OneWay}" Value="Count">
                <!-- <Setter Property="Visibility" Value="Collapsed" TargetName="PART_AggregateOperatorSelector"/> -->
                <Setter Property="Visibility" Value="Collapsed" TargetName="PART_AggregatePropertySelector"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="{dxgt:LWKey FilterEditor.GroupTemplate}">
        <StackPanel Orientation="Vertical">
            <ContentPresenter>
                <ContentPresenter.ContentTemplate>
                    <DataTemplate>
                        <Grid Background="Transparent">
                            <StackPanel
                                MinHeight="{DynamicResource {dxgt:LWKey FilterEditor.RowMinHeight}}"
                                Margin="{StaticResource filterEditorRowMargin}"
                                dxfui_local:FilterEditorNavigation.Node="{Binding}"
                                Orientation="Horizontal">
                                <ContentControl
                                    Margin="{DynamicResource {dxgt:LWKey FilterEditor.FilterEditorItemMargin}}"
                                    Background="{DynamicResource {dxgt:LWKey FilterEditor.GroupOperatorSelectorBackground}}"
                                    Foreground="{DynamicResource {dxgt:LWKey FilterEditor.GroupOperatorSelectorForeground}}"
                                    Style="{DynamicResource {dxgt:LWKey FilterEditor.FilterEditorItemStyle}}">
                                    <dxe:TextEdit
                                        x:Name="OperatorSelector"
                                        dxfui_local:FilterEditorNavigation.Index="0"
                                        EditMode="InplaceInactive"
                                        EditValue="{Binding GroupOperator.DisplayName, Mode=OneWay}">
                                        <dxe:TextEdit.Style>
                                            <Style BasedOn="{StaticResource menuOwner}" TargetType="{x:Type FrameworkElement}">
                                                <Style.Triggers>
                                                    <Trigger Property="dxfui_local:FilterEditorNavigation.IsFocused" Value="True">
                                                        <Setter Property="dxb:BarManager.DXContextMenu">
                                                            <Setter.Value>
                                                                <dxb:PopupMenu ItemLinksSource="{Binding OperatorTypeMenu}" ItemTemplate="{StaticResource MenuItemTemplate}" />
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </dxe:TextEdit.Style>
                                        <dxmvvm:Interaction.Behaviors>
                                            <dxfui_local:FilterEditorContextMenuBehavior />
                                        </dxmvvm:Interaction.Behaviors>
                                    </dxe:TextEdit>
                                </ContentControl>
                                <Button
                                    x:Name="AddButton"
                                    Command="{Binding AddCommand}"
                                    Style="{StaticResource addChildButtonStyle}"
                                    Template="{DynamicResource {dxgt:LWKey FilterEditor.AddButtonControlTemplate}}">
                                    <ToolTipService.ToolTip>
                                        <ToolTip>
                                            <StackPanel Orientation="Vertical">
                                                <TextBlock Margin="0,0,0,4" FontWeight="Bold" Text="{dxe:EditorStringId FilterToolTipKeysAdd}" />
                                                <TextBlock Text="{dxe:EditorStringId FilterToolTipNodeAdd}" />
                                            </StackPanel>
                                        </ToolTip>
                                    </ToolTipService.ToolTip>
                                </Button>
                                <dx:DXBorder
                                    x:Name="AddChildSplitButton"
                                    MinWidth="12"
                                    Background="Transparent"
                                    Style="{StaticResource menuOwner}"
                                    Visibility="{DXBinding Expr='AddChildMenu.Count gt 0 ? `Visible` : `Collapsed`'}">
                                    <dxb:BarManager.DXContextMenu>
                                        <dxb:PopupMenu ItemLinksSource="{Binding AddChildMenu}" ItemTemplate="{StaticResource MenuItemTemplate}" />
                                    </dxb:BarManager.DXContextMenu>
                                    <Path Style="{DynamicResource {dxgt:LWKey FilterEditor.AddChildSplitButtonPathStyle}}" />
                                </dx:DXBorder>
                                <Button
                                    x:Name="RemoveButton"
                                    MinWidth="18"
                                    Margin="4,0,0,0"
                                    Command="{Binding RemoveCommand}"
                                    Style="{StaticResource removeButtonStyle}"
                                    Template="{DynamicResource {dxgt:LWKey FilterEditor.RemoveButtonControlTemplate}}"
                                    Visibility="Hidden" />
                            </StackPanel>
                        </Grid>
                        <DataTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition SourceName="RemoveButton" Property="IsEnabled" Value="True" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter TargetName="RemoveButton" Property="Visibility" Value="Visible" />
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ContentPresenter.ContentTemplate>
            </ContentPresenter>
            <ItemsControl Margin="24,0,0,0" ItemTemplateSelector="{StaticResource FilterEditorNodeTemplateSelector}" ItemsSource="{Binding Children}" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="{dxgt:LWKey FilterEditor.CustomExpressionNodeBehaviorsTemplate}">
        <ItemsControl>
            <dx:DialogService DialogWindowStartupLocation="CenterOwner">
                <dx:DialogService.DialogStyle>
                    <Style TargetType="{x:Type Window}">
                        <Setter Property="ShowInTaskbar" Value="False" />
                        <Setter Property="WindowStyle" Value="ToolWindow" />
                        <Setter Property="UseLayoutRounding" Value="True" />
                        <Setter Property="Width" Value="600" />
                        <Setter Property="Height" Value="450" />
                    </Style>
                </dx:DialogService.DialogStyle>
                <dx:DialogService.ViewTemplate>
                    <DataTemplate>
                        <dxe:ExpressionEditorContainer BindableExpression="{Binding Expression, Mode=OneWayToSource}" CurrentColumnInfo="{Binding Column, Mode=OneTime}" />
                    </DataTemplate>
                </dx:DialogService.ViewTemplate>
            </dx:DialogService>
        </ItemsControl>
    </DataTemplate>

    <DataTemplate x:Key="{dxgt:LWKey FilterEditor.CustomExpressionTemplate}">
        <Grid Background="Transparent">
            <StackPanel
                MinHeight="{DynamicResource {dxgt:LWKey FilterEditor.RowMinHeight}}"
                Margin="{StaticResource filterEditorRowMargin}"
                dxfui_local:FilterEditorNavigation.Node="{Binding}"
                dxmvvm:Interaction.BehaviorsTemplate="{DynamicResource {dxgt:LWKey FilterEditor.CustomExpressionNodeBehaviorsTemplate}}"
                Orientation="Horizontal">
                <ContentControl
                    VerticalAlignment="Center"
                    BorderBrush="{DynamicResource {dxgt:LWKey FilterEditor.InplaceEditorInactiveBorderBrush}}"
                    BorderThickness="1"
                    Style="{DynamicResource {dxgt:LWKey FilterEditor.FilterEditorItemStyle}}">
                    <dxe:TextEdit
                        x:Name="CustomFilterTextEdit"
                        dxfui_local:FilterEditorNavigation.Index="0"
                        EditMode="InplaceInactive"
                        EditValue="{Binding FilterText, Mode=OneWay}"
                        IsReadOnly="True"
                        NullText="{dxe:EditorStringId FilterExpressionEmptyValueText}" />
                    <ContentControl.InputBindings>
                        <KeyBinding Key="Space" Command="{Binding ShowExpressionEditorCommand}" />
                        <KeyBinding Key="Enter" Command="{Binding ShowExpressionEditorCommand}" />
                    </ContentControl.InputBindings>
                    <dxmvvm:Interaction.Behaviors>
                        <dxmvvm:EventToCommand Command="{Binding ShowExpressionEditorCommand}" EventName="MouseLeftButtonDown" />
                    </dxmvvm:Interaction.Behaviors>
                </ContentControl>
                <Button
                    x:Name="RemoveButton"
                    MinWidth="18"
                    Margin="4,0,0,0"
                    Command="{Binding RemoveCommand}"
                    Style="{StaticResource removeButtonStyle}"
                    Template="{DynamicResource {dxgt:LWKey FilterEditor.RemoveButtonControlTemplate}}"
                    Visibility="Hidden" />
            </StackPanel>
        </Grid>
        <DataTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition SourceName="RemoveButton" Property="IsEnabled" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter TargetName="RemoveButton" Property="Visibility" Value="Visible" />
                </MultiTrigger.Setters>
            </MultiTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!-- end -->

    <ControlTemplate x:Key="{dxgt:LWKey FilterEditor.ControlTemplate}" TargetType="{x:Type dxfui_local:FilterEditorControl}">
        <dx:DXBorder Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
                <ScrollViewer
                    x:Name="PART_ScrollViewer"
                    Focusable="False"
                    HorizontalScrollBarVisibility="Auto"
                    VerticalScrollBarVisibility="Auto"
                    Visibility="{TemplateBinding AllowEditFilter, Converter={dxmvvm:BooleanToVisibilityConverter}}">
                    <ContentPresenter Margin="{StaticResource filterEditorMargin}" Content="{Binding RootNode, RelativeSource={RelativeSource Mode=TemplatedParent}}" ContentTemplateSelector="{StaticResource FilterEditorNodeTemplateSelector}" />
                </ScrollViewer>
                <TextBlock
                    x:Name="PART_Placeholder"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="{dxgr:GridControlStringIdExtension FilterEditorNotEditableMessage}"
                    Visibility="{TemplateBinding AllowEditFilter, Converter={dxmvvm:BooleanToVisibilityConverter Inverse=True}}" />
            </Grid>
        </dx:DXBorder>
    </ControlTemplate>

    <DataTemplate x:Key="{dxgt:LWKey FilterEditor.InplaceEditorTemplate}">
        <dxfui_local:FilterValueEditor
            x:Name="PART_Editor"
            EditSettings="{Binding EditSettings}"
            FilterModel="{Binding Model}"
            NullText="{dxe:EditorStringId FilterEmptyValueText}" />
    </DataTemplate>

    <Style x:Key="{dxgt:LWKey FilterEditor.FilterEditorStyle}" TargetType="{x:Type dxfui_local:FilterEditorControl}">
        <Style.Setters>
            <Setter Property="Context" Value="{Binding Context}" />
            <Setter Property="PropertyName" Value="{Binding PropertyName}" />
            <Setter Property="RespondToContextFiltersChanges" Value="False" />
            <Setter Property="AllowFieldOperand" Value="{Binding AllowFieldOperand}" />
            <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <ItemsControl>
                            <dxfui_local:FilterEditorApplyService />
                            <dxmvvm:EventToCommand Command="{DXCommand Execute='@a($dxfui_local:FilterEditorControl).Focus()'}" Event="Loaded" />
                        </ItemsControl>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <DataTemplate x:Key="{dxgt:LWKey FilterEditor.FilterEditorTemplate}">
        <dxfui_local:FilterEditorControl />
    </DataTemplate>
    <DataTemplate x:Key="{dxgt:LWKey FilterEditor.FilterEditorDialogServiceViewTemplate}">
        <DataTemplate.Resources>
            <Style x:Key="{x:Type dxfui_local:FilterEditorControl}" BasedOn="{StaticResource {dxgt:LWKey FilterEditor.FilterEditorStyle}}" TargetType="{x:Type dxfui_local:FilterEditorControl}" />
        </DataTemplate.Resources>
        <ContentPresenter Content="{Binding}" ContentTemplate="{Binding FilterEditorTemplate}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxgt:LWKey FilterEditor.FilterEditorDialogServiceTemplate}">
        <ContentControl>
            <dx:DialogService DialogWindowStartupLocation="CenterOwner" ViewTemplate="{DynamicResource {dxgt:LWKey FilterEditor.FilterEditorDialogServiceViewTemplate}}">
                <dx:DialogService.DialogStyle>
                    <Style TargetType="{x:Type dx:ThemedWindow}">
                        <Setter Property="dxi:ThemedWindowOptions.ShowOverPopups" Value="True" />
                        <Setter Property="ShowInTaskbar" Value="False" />
                        <Setter Property="WindowStyle" Value="ToolWindow" />
                        <Setter Property="ShowIcon" Value="False" />
                        <Setter Property="UseLayoutRounding" Value="True" />
                        <Setter Property="Width" Value="500" />
                        <Setter Property="Height" Value="350" />
                        <Setter Property="MinWidth" Value="500" />
                        <Setter Property="MinHeight" Value="350" />
                    </Style>
                </dx:DialogService.DialogStyle>
            </dx:DialogService>
        </ContentControl>
    </DataTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\FilteringUI\FilterEditor.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\FilteringUI\FilterElements.xaml-->
    <Style x:Key="CountTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Opacity" Value="0.6" />
        <Setter Property="Margin" Value="2,0,0,0" />
    </Style>
    <DataTemplate x:Key="FilterValueContainerTemplate">
        <dxfui_local:ValueCountContentControl Count="{Binding Count}">
            <dxfui_local:ValueEditorContainer EditSettingsLazy="{Binding EditSettingsLazy}" GetDisplayText="{Binding GetDisplayText}" Value="{Binding Value}" />
        </dxfui_local:ValueCountContentControl>
    </DataTemplate>
    <Style x:Key="DateCalendarImageStyle" TargetType="{x:Type dx:DXImage}">
        <Setter Property="Margin" Value="2,1,1,0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Margin" Value="16,1,17,0" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="filterElementStyle" TargetType="dxfui_local:FilterElement">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxfui_local:FilterElement">
                    <dxfui_local:FilterElementContentPresenter ContentSource="FilterModel" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsEnabled" Value="{Binding Path=FilterModel.CanBuildFilter, RelativeSource={RelativeSource Mode=Self}}" />
    </Style>
    <DataTemplate x:Key="MultiFilterConstantTemplate" />
    <DataTemplate x:Key="MultiFilterBinaryTemplate">
        <dxfui_local:FilterValueEditor
            VerticalAlignment="Top"
            EditSettings="{Binding ValueItem.EditSettings}"
            FilterModel="{Binding}"
            NullText="{dxe:EditorStringId FilterRulesEmptyValueText}"
            Value="{Binding ValueItem.Value, Mode=TwoWay}" />
    </DataTemplate>
    <DataTemplate x:Key="MultiFilterTernaryTemplate">
        <Grid VerticalAlignment="Top">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="4" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="2*" />
            </Grid.ColumnDefinitions>
            <TextBlock VerticalAlignment="Center" Text="{dxe:EditorStringId FilterElementClauseFrom}" />
            <dxfui_local:FilterValueEditor
                Grid.Column="1"
                EditSettings="{Binding LeftValueItem.EditSettings}"
                FilterModel="{Binding}"
                NullText="{dxe:EditorStringId FilterRulesEmptyValueText}"
                Value="{Binding LeftValueItem.Value, Mode=TwoWay}" />
            <TextBlock Grid.Row="2" VerticalAlignment="Center" Text="{dxe:EditorStringId FilterElementClauseTo}" />
            <dxfui_local:FilterValueEditor
                Grid.Row="2"
                Grid.Column="1"
                EditSettings="{Binding RightValueItem.EditSettings}"
                FilterModel="{Binding}"
                NullText="{dxe:EditorStringId FilterRulesEmptyValueText}"
                Value="{Binding RightValueItem.Value, Mode=TwoWay}" />
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="MultiFilterFormatConditionsTemplate">
        <dxfui_local:FormatConditionFilterElement VerticalAlignment="Top" dxfui_local_native:FilterElementHelper.FilterModel="{Binding}" />
    </DataTemplate>
    <DataTemplate x:Key="MultiFilterPredefinedTemplate">
        <dxfui_local:PredefinedFiltersElement VerticalAlignment="Top" dxfui_local_native:FilterElementHelper.FilterModel="{Binding}" />
    </DataTemplate>
    <DataTemplate x:Key="MultiFilterDateTimeOperatorsTemplate">
        <dxfui_local:DatePeriodsFilterElement dxfui_local_native:FilterElementHelper.FilterModel="{Binding}" />
    </DataTemplate>
    <ControlTemplate x:Key="FilterValueContainerTopAreaTemplate">
        <dx:DXBorder
            Background="{DynamicResource {dxgt:LWKey ExcelStyleFilterElement.FilterValueContainerTopAreaBackground}}"
            BorderBrush="{DynamicResource {dxgt:LWKey ExcelStyleFilterElement.FilterValueContainerTopAreaBorderColor}}"
            BorderThickness="0,0,0,1"
            DataContext="{Binding FilterModel, RelativeSource={RelativeSource AncestorType={x:Type dxfui_local:FilterValueEditor}}}"
            Visibility="{DXBinding Expr='FilterValuesSortModes.Count gt 1 and FilterValues.Count gt 0 ? `Visible` : `Collapsed`'}">
            <dxe:HyperlinkEdit
                x:Name="PART_FilterValuesSortMode"
                Margin="{DynamicResource {dxgt:LWKey ExcelStyleFilterElement.FilterValueContainerTopAreaMargin}}"
                Focusable="False"
                Text="{Binding Path=FilterValuesSortMode, Mode=OneWay, Converter={StaticResource FilterValuesSortModesConverter}}"
                ToolTipService.IsEnabled="False">
                <dxmvvm:Interaction.Behaviors>
                    <dxfui_local_native:HyperlinkToogleBehavior ItemsSource="{Binding FilterValuesSortModes, Mode=OneWay}" SelectedItem="{Binding FilterValuesSortMode, Mode=TwoWay}" />
                </dxmvvm:Interaction.Behaviors>
            </dxe:HyperlinkEdit>
        </dx:DXBorder>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter TargetName="PART_FilterValuesSortMode" Property="Margin" Value="{DynamicResource {dxgt:LWKey ExcelStyleFilterElement.FilterValueContainerTopAreaMarginTouch}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <DataTemplate x:Key="DateCalendarButtonTemplate">
        <dx:DXImage Source="{dx:SvgImageSource Uri='/DevExpress.Xpf.Grid.v24.1;component/Images/CalendarDate.svg'}" Style="{StaticResource DateCalendarImageStyle}" />
    </DataTemplate>

    <!-- begin MultiFilterElement -->
    <DataTemplate x:Key="MultiFilterPredefinedFormatConditionTemplate">
        <DataTemplate.Resources>
            <Style x:Key="baseEditorStyle" TargetType="{x:Type dxe:SpinEdit}">
                <Setter Property="MaskType" Value="Numeric" />
                <Setter Property="MaskUseAsDisplayFormat" Value="True" />
                <Setter Property="EditValueType" Value="{x:Type sys:Double}" />
                <Setter Property="AllowRoundOutOfRangeValue" Value="True" />
            </Style>
            <Style x:Key="itemsStyle" BasedOn="{StaticResource baseEditorStyle}" TargetType="{x:Type dxe:SpinEdit}">
                <Setter Property="Mask" Value="D" />
                <Setter Property="MinValue" Value="1" />
                <Setter Property="MaxValue" Value="2147483647" />
                <!-- {x:Static sys:Int32.MaxValue} -->
            </Style>
            <Style x:Key="percentStyle" BasedOn="{StaticResource baseEditorStyle}" TargetType="{x:Type dxe:SpinEdit}">
                <Setter Property="MaxValue" Value="100" />
                <Setter Property="MinValue" Value="0" />
            </Style>
        </DataTemplate.Resources>
        <Grid VerticalAlignment="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <dxe:SpinEdit x:Name="PART_Value" EditValue="{Binding Value, UpdateSourceTrigger=PropertyChanged, Converter={dxmvvm:TypeCastConverter}}">
                <dxe:SpinEdit.Style>
                    <Binding Path="ValueType">
                        <Binding.Converter>
                            <dxmvvm:ObjectToObjectConverter DefaultSource="Items" DefaultTarget="{StaticResource itemsStyle}">
                                <dxmvvm:MapItem Source="Percent" Target="{StaticResource percentStyle}" />
                            </dxmvvm:ObjectToObjectConverter>
                        </Binding.Converter>
                    </Binding>
                </dxe:SpinEdit.Style>
            </dxe:SpinEdit>
            <dxe:ComboBoxEdit
                x:Name="PART_ValueType"
                Grid.Column="1"
                MinWidth="80"
                Margin="4,0,0,0"
                ApplyItemTemplateToSelectedItem="True"
                EditValue="{Binding ValueType, UpdateSourceTrigger=PropertyChanged}"
                IsTextEditable="False">
                <dxe:ComboBoxEdit.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Converter={StaticResource TopBottomValueTypeConverter}}" />
                    </DataTemplate>
                </dxe:ComboBoxEdit.ItemTemplate>
                <dxe:ComboBoxEdit.ItemsSource>
                    <x:Array Type="{x:Type dxfui:TopBottomValueType}">
                        <dxfui:TopBottomValueType>Items</dxfui:TopBottomValueType>
                        <dxfui:TopBottomValueType>Percent</dxfui:TopBottomValueType>
                    </x:Array>
                </dxe:ComboBoxEdit.ItemsSource>
            </dxe:ComboBoxEdit>
        </Grid>
    </DataTemplate>

    <dxfui_local:OperationModelTemplateSelector
        x:Key="{dxgt:LWKey FilteringUI.MultiFilterElementOperatorTemplateSelector}"
        BinaryTemplate="{StaticResource MultiFilterBinaryTemplate}"
        ConstantTemplate="{StaticResource MultiFilterConstantTemplate}"
        DateTimeOperatorsTemplate="{StaticResource MultiFilterDateTimeOperatorsTemplate}"
        FormatConditionsTemplate="{StaticResource MultiFilterFormatConditionsTemplate}"
        PredefinedFormatConditionTemplate="{StaticResource MultiFilterPredefinedFormatConditionTemplate}"
        PredefinedTemplate="{StaticResource MultiFilterPredefinedTemplate}"
        TernaryTemplate="{StaticResource MultiFilterTernaryTemplate}" />

    <DataTemplate x:Key="{dxgt:LWKey FilteringUI.MultiFilterElementTemplate}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <dxe:ComboBoxEdit
                x:Name="operatorSelector"
                AutomationProperties.Name="{dxg:GridControlStringId ExcelColumnFilterPopupConditionPeer}"
                Margin="0,0,0,12"
                DisplayMember="DisplayName"
                EditValue="{Binding SelectedItem, UpdateSourceTrigger=PropertyChanged}"
                IsTextEditable="False"
                ItemsSource="{Binding Items}">
                <dxmvvm:Interaction.Behaviors>
                    <dxgfui_local:FilterRulesComboBoxChangeRuleBehavior />
                </dxmvvm:Interaction.Behaviors>
            </dxe:ComboBoxEdit>
            <ContentPresenter
                x:Name="modelPresenter"
                Grid.Row="1"
                Content="{Binding Model}"
                ContentTemplateSelector="{Binding DataContext.ModelTemplateSelector, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        </Grid>
    </DataTemplate>

    <!-- end -->

    <!-- begin ExcelStyleFilterElement -->

    <ControlTemplate x:Key="{dxgt:LWKey ExcelStyleFilterElement.HeaderSeparatorTemplate}">
        <Rectangle
            x:Name="PART_Separator"
            Width="1"
            Height="14"
            HorizontalAlignment="Right"
            VerticalAlignment="Center"
            Fill="{DynamicResource {dxgt:LWKey ExcelStyleFilterElement.HeaderPanelSeparatorColor}}" />
    </ControlTemplate>
    <DataTemplate x:Key="{dxgt:LWKey ExcelStyleFilterElement.HeaderBackgroundTemplate}">
        <Control Focusable="False" Template="{DynamicResource {dxgt:LWKey ExcelStyleFilterElement.HeaderSeparatorTemplate}}" Visibility="{DXBinding '(@a($dx:DXTabItem).DataContext is $dxfui:MultiFilterModel) ? `Visible` : `Collapsed`'}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxgt:LWKey ExcelStyleFilterElement.FocusedHeaderBackgroundTemplate}">
        <Grid>
            <Path
                Width="9"
                Height="6"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                Data="M0,1 L1,0 2,1"
                Fill="{DynamicResource {dxgt:LWKey ExcelStyleFilterElement.HeaderPanelSelectionMarkerBackground}}"
                Stretch="Fill"
                Stroke="{DynamicResource {dxgt:LWKey ExcelStyleFilterElement.HeaderPanelBottomBorderColor}}"
                StrokeThickness="1" />
            <Path
                Width="7"
                Height="1"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                Data="M0,0 L1,0"
                Fill="{DynamicResource {dxgt:LWKey ExcelStyleFilterElement.HeaderPanelSelectionMarkerBackground}}"
                Stretch="Fill"
                Stroke="{DynamicResource {dxgt:LWKey ExcelStyleFilterElement.HeaderPanelSelectionMarkerBackground}}"
                StrokeThickness="1" />
            <Control Focusable="False" Template="{DynamicResource {dxgt:LWKey ExcelStyleFilterElement.HeaderSeparatorTemplate}}" Visibility="{DXBinding '(@a($dx:DXTabItem).DataContext is $dxfui:MultiFilterModel) ? `Visible` : `Collapsed`'}" />
        </Grid>
    </DataTemplate>
    <Style x:Key="{dxgt:LWKey ExcelStyleFilterElement.HeaderStyle}" TargetType="dx:DXTabItem">
        <Setter Property="NormalBackgroundTemplate" Value="{DynamicResource {dxgt:LWKey ExcelStyleFilterElement.HeaderBackgroundTemplate}}" />
        <Setter Property="HoverBackgroundTemplate" Value="{DynamicResource {dxgt:LWKey ExcelStyleFilterElement.HeaderBackgroundTemplate}}" />
        <Setter Property="FocusedBackgroundTemplate" Value="{DynamicResource {dxgt:LWKey ExcelStyleFilterElement.FocusedHeaderBackgroundTemplate}}" />
        <Setter Property="SelectedBackgroundTemplate" Value="{DynamicResource {dxgt:LWKey ExcelStyleFilterElement.FocusedHeaderBackgroundTemplate}}" />
        <Setter Property="AutomationProperties.AutomationId" Value="{DXBinding Expr='@c.GetType().Name'}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,0,0,1" />
        <Setter Property="Padding" Value="{DynamicResource {dxgt:LWKey ExcelStyleFilterElement.HeaderPadding}}" />
        <Setter Property="Focusable" Value="True" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding" Value="12,8,12,9" />
            </Trigger>
            <DataTrigger Binding="{DXBinding Expr='@c is $dxfui:CheckedTreeListFilterModel'}" Value="true">
                <Setter Property="AutomationProperties.Name" Value="{dxe:EditorStringId FilterElementFilterValues}" />
            </DataTrigger>
            <DataTrigger Binding="{DXBinding Expr='@c is $dxfui:CheckedTreeListFilterModel'}" Value="false">
                <Setter Property="AutomationProperties.Name" Value="{dxe:EditorStringId FilterElementFilterRules}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="{dxgt:LWKey ExcelStyleFilterElement.FilterRulesTemplate}">
        <dxfui_local:MultiFilterElement dxfui_local_native:FilterElementHelper.FilterModel="{Binding}" ShowAllLookUpFilterValues="{Binding Path=(dxfui_local_native:FilterElementHelper.FilterElement).ShowAllLookUpFilterValues, RelativeSource={RelativeSource Self}}" ShowCounts="{Binding Path=(dxfui_local_native:FilterElementHelper.FilterElement).ShowCounts, RelativeSource={RelativeSource Self}}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxgt:LWKey ExcelStyleFilterElement.FilterValuesTemplate}">
        <dxfui_local:CheckedTreeListFilterElement dxfui_local_native:FilterElementHelper.FilterModel="{Binding}" ShowAllLookUpFilterValues="{Binding Path=(dxfui_local_native:FilterElementHelper.FilterElement).ShowAllLookUpFilterValues, RelativeSource={RelativeSource Self}}" ShowCounts="{Binding Path=(dxfui_local_native:FilterElementHelper.FilterElement).ShowCounts, RelativeSource={RelativeSource Self}}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxgt:LWKey ExcelStyleFilterElement.HeaderTemplate}">
        <TextBlock Text="{Binding}" />
    </DataTemplate>

    <Style x:Key="tabControlStyle" TargetType="dx:DXTabControl">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="11,12,11,11" />
        <Setter Property="TabContentCacheMode" Value="CacheAllTabs" />
        <Setter Property="ItemContainerStyle" Value="{DynamicResource {dxgt:LWKey ExcelStyleFilterElement.HeaderStyle}}" />
        <Setter Property="BackgroundTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dx:DXBorder Background="{DynamicResource {dxgt:LWKey ExcelStyleFilterElement.Background}}" BorderBrush="{DynamicResource {dxgt:LWKey ExcelStyleFilterElement.BorderBrush}}" BorderThickness="0,1,0,0" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style x:Key="{dxt:LWKey DXTabControl.PanelContainerStyle}" TargetType="{x:Type dxi:TabPanelContainer}">
                <Setter Property="NormalMargin" Value="0,0,0,-2" />
                <Setter Property="Background" Value="Transparent" />
            </Style>
        </Style.Resources>
    </Style>

    <DataTemplate x:Key="{dxgt:LWKey ExcelStyleFilterElement.Template}">
        <Grid Background="{DynamicResource {dxgt:LWKey ExcelStyleFilterElement.HeaderPanelBackground}}">
            <dx:DXTabControl
                x:Name="tabControl"
                dxfui_local:FilterElement.Context="{x:Null}"
                ItemTemplateSelector="{Binding Path=(dxfui_local_native:FilterElementHelper.FilterElement).ActualTemplateSelector, RelativeSource={RelativeSource Mode=Self}}"
                ItemsSource="{Binding FilterModels}"
                Style="{StaticResource tabControlStyle}">
                <dxmvvm:Interaction.Behaviors>
                    <dxfui_local_native:ExcelStyleTabControlBehavior />
                </dxmvvm:Interaction.Behaviors>
                <dx:DXTabControl.View>
                    <dx:TabControlScrollView ScrollButtonShowMode="Never">
                        <dx:TabControlScrollView.HeaderLocation>
                            <Binding Path="Owner.DataContext.ActualAllowedFilterTypes" RelativeSource="{RelativeSource Mode=Self}">
                                <Binding.Converter>
                                    <dxmvvm:ObjectToObjectConverter DefaultTarget="None">
                                        <dxmvvm:MapItem Source="All" Target="Top" />
                                        <dxmvvm:MapItem Source="None" Target="Top" />
                                    </dxmvvm:ObjectToObjectConverter>
                                </Binding.Converter>
                            </Binding>
                        </dx:TabControlScrollView.HeaderLocation>
                    </dx:TabControlScrollView>
                </dx:DXTabControl.View>
                <dx:DXTabControl.ItemHeaderTemplate>
                    <DataTemplate>
                        <ContentPresenter x:Name="presenter" ContentTemplate="{DynamicResource {dxgt:LWKey ExcelStyleFilterElement.HeaderTemplate}}" />
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{DXBinding Expr='@c is $dxfui:CheckedTreeListFilterModel'}" Value="true">
                                <Setter TargetName="presenter" Property="Content" Value="{dxe:EditorStringId FilterElementFilterValues}" />
                            </DataTrigger>
                            <DataTrigger Binding="{DXBinding Expr='@c is $dxfui:CheckedTreeListFilterModel'}" Value="false">
                                <Setter TargetName="presenter" Property="Content" Value="{dxe:EditorStringId FilterElementFilterRules}" />
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </dx:DXTabControl.ItemHeaderTemplate>
            </dx:DXTabControl>
        </Grid>
    </DataTemplate>

    <!-- end -->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\FilteringUI\FilterElements.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\FilteringUI\HierarchyFilterElement.xaml-->
    <Thickness x:Key="{dxgt:LWKey CheckedTreeListFilterElement.SearchControlMargin}">0,0,0,4</Thickness>
    <Style x:Key="ValueCountContentControlStyle" TargetType="{x:Type dxfui_local:ValueCountContentControl}">
        <Setter Property="Count" Value="{Binding Path=RowData.Row.Count}" />
        <Setter Property="ShowCount" Value="{Binding Path=RowData.Row.ShowCount}" />
        <Setter Property="Margin" Value="2,0,0,0" />
    </Style>
    <!-- begin TreeView -->

    <Style x:Key="{dxgt:LWKey CheckedTreeListFilterElement.TreeListBorderStyle}" BasedOn="{StaticResource TreeListBorderStyle}" TargetType="{x:Type Border}" />

    <Style x:Key="{dxgt:LWKey CheckedTreeListFilterElement.TreeListStyle}" TargetType="{x:Type dxgr:TreeListControl}">
        <Setter Property="ShowBorder" Value="{StaticResource FilterElement.ShowBorder}" />
    </Style>

    <ControlTemplate x:Key="dataPresenterTemplate" TargetType="{x:Type dxgr:DataPresenter}">
        <dx:DXBorder Background="{DynamicResource {dxgt:LWKey CheckedTreeListFilterElement.DataPresenterBackground}}">
            <ContentPresenter />
        </dx:DXBorder>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:LWKey CheckedTreeListFilterElement.TreeViewScrollViewerTemplate}">
        <Grid dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" ClipToBounds="True" SnapsToDevicePixels="true">
            <dx:ScrollBarExtensions.ScrollBehavior>
                <Binding Path="(dxgr:GridControl.CurrentView).UseExtendedMouseScrolling" RelativeSource="{RelativeSource Self}">
                    <Binding.Converter>
                        <dx:BoolToObjectConverter FalseValue="{dx:NativeScrollBehavior}" TrueValue="{dxgcore:DataPresenterScrollBehavior}" />
                    </Binding.Converter>
                </Binding>
            </dx:ScrollBarExtensions.ScrollBehavior>
            <Grid x:Name="rowPresenterGrid" Margin="{DynamicResource {dxgt:LWKey TableView.RowPresenterGridMargin}}" dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid Grid.Row="1">
                    <Grid.ColumnSpan>
                        <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}">
                            <Binding.Converter>
                                <dxmvvm:ObjectToObjectConverter DefaultSource="Default" DefaultTarget="1">
                                    <dxmvvm:MapItem Source="TouchOverlap" Target="2" />
                                </dxmvvm:ObjectToObjectConverter>
                            </Binding.Converter>
                        </Binding>
                    </Grid.ColumnSpan>
                    <ScrollContentPresenter
                        x:Name="PART_ScrollContentPresenter"
                        MinWidth="{Binding Path=(dxgr:GridControl.CurrentView).ScrollableAreaMinWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        dxgcore:FocusRectPresenter.IsVerticalScrollHost="True"
                        dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                        ScrollViewer.CanContentScroll="True">
                        <dxgr:GridControl.CurrentViewChangedListener>
                            <dxgr:ScrollContentPresenterInitializer />
                        </dxgr:GridControl.CurrentViewChangedListener>

                        <ScrollContentPresenter.Content>
                            <dxgr:DataPresenter x:Name="dataPresenter" dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource dataPresenterTemplate}" />
                        </ScrollContentPresenter.Content>
                    </ScrollContentPresenter>
                </Grid>
                <Grid Grid.Column="1" HorizontalAlignment="Right" Visibility="{Binding ComputedVerticalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                    <Grid.RowSpan>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="(dxgr:GridControl.CurrentView).ShowTotalSummary" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxgr:VerticalScrollBarRowSpanConverter />
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </Grid.RowSpan>

                    <ScrollBar
                        x:Name="PART_VerticalScrollBar"
                        HorizontalAlignment="Right"
                        dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                        Maximum="{Binding ScrollableHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        ViewportSize="{Binding ViewportHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        Value="{Binding VerticalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                        <dxgr:GridControl.CurrentViewChangedListener>
                            <dxgr:VerticalScrollBarBlendCustomizationExtension />
                        </dxgr:GridControl.CurrentViewChangedListener>
                    </ScrollBar>
                </Grid>
            </Grid>
            <dxgcore:FocusRectPresenter
                x:Name="PART_FocusRectPresenter"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                View="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:LWKey CheckedTreeListFilterElement.TreeViewTemplate}" TargetType="dxgr:TreeListView">
        <ScrollViewer
            x:Name="scr"
            dx:ScrollBarExtensions.ScrollBehavior="{x:Null}"
            dxgr:GridControl.CurrentView="{Binding RelativeSource={RelativeSource TemplatedParent}}"
            Focusable="False"
            HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollbarVisibility}"
            Template="{DynamicResource {dxgt:LWKey CheckedTreeListFilterElement.TreeViewScrollViewerTemplate}}"
            VerticalScrollBarVisibility="{TemplateBinding VerticalScrollbarVisibility}">
            <ScrollViewer.CanContentScroll>True</ScrollViewer.CanContentScroll>
            <dx:ScrollBarExtensions.AllowMouseScrolling>
                <Binding Path="(dxgr:GridControl.CurrentView).UseExtendedMouseScrolling" RelativeSource="{RelativeSource Self}" />
            </dx:ScrollBarExtensions.AllowMouseScrolling>
        </ScrollViewer>
    </ControlTemplate>

    <Style x:Key="{dxgt:LWKey CheckedTreeListFilterElement.TreeViewStyle}" TargetType="dxgr:TreeListView">
        <Setter Property="HasChildNodesPath" Value="HasNodes" />
        <Setter Property="TreeDerivationMode" Value="ChildNodesSelector" />
        <Setter Property="AllowEditing" Value="False" />
        <Setter Property="ChildNodesPath" Value="Nodes" />
        <Setter Property="ShowCheckboxes" Value="True" />
        <Setter Property="ShowRootIndent" Value="False" />
        <Setter Property="SearchString" Value="{Binding SearchString, Mode=TwoWay}" />
        <Setter Property="ShowSearchPanelMode" Value="Never" />
        <Setter Property="SearchPanelHighlightResults" Value="False" />
        <Setter Property="SearchPanelAllowFilter" Value="False" />
        <Setter Property="CheckBoxFieldName" Value="IsChecked" />
        <Setter Property="AllowRecursiveNodeChecking" Value="False" />
        <Setter Property="FilterMode" Value="Standard" />
        <Setter Property="ExpandStateFieldName" Value="IsExpanded" />
        <Setter Property="ImmediateUpdateCheckBoxState" Value="True" />
        <Setter Property="NavigationStyle" Value="Row" />
        <Setter Property="ShowIndicator" Value="False" />
        <Setter Property="TreeLineStyle" Value="None" />
        <Setter Property="ShowHorizontalLines" Value="False" />
        <Setter Property="ShowVerticalLines" Value="False" />
        <Setter Property="ShowColumnHeaders" Value="False" />
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey CheckedTreeListFilterElement.TreeViewTemplate}}" />
    </Style>
    <Style x:Key="{dxgt:LWKey CheckedTreeListFilterElement.SearchControlStyle}" TargetType="dxgr:GridSearchControl">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="PostMode" Value="Delayed" />
        <Setter Property="Margin" Value="{DynamicResource {dxgt:LWKey CheckedTreeListFilterElement.SearchControlMargin}}" />
        <Setter Property="Visibility" Value="{Binding ActualShowSearchPanel, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
    </Style>

    <!-- end -->

    <Style x:Key="{dxgt:LWKey CheckedTreeListFilterElement.ExcelFilterPopupValueColumnStyle}" TargetType="{x:Type dxgcore:ColumnBase}" />

    <DataTemplate x:Key="{dxgt:LWKey CheckedTreeListFilterElement.Template}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <dxgr:GridSearchControl Grid.Row="0" Style="{DynamicResource {dxgt:LWKey CheckedTreeListFilterElement.SearchControlStyle}}" View="{x:Reference Name=treeListView}" />
            <dxfui_local:LoadingIndicatorControl Grid.Row="1" IsLoading="{Binding IsLoading}">
                <dx:DXBorder Grid.Row="1" Style="{DynamicResource {dxgt:LWKey CheckedTreeListFilterElement.TreeListBorderStyle}}">
                    <dxgr:TreeListControl x:Name="treeListControl" Style="{DynamicResource {dxgt:LWKey CheckedTreeListFilterElement.TreeListStyle}}">
                        <dxgr:TreeListColumn
                            x:Name="PART_ValueColumn"
                            FieldName="Value"
                            Width="*"
                            Style="{DynamicResource {dxgt:LWKey CheckedTreeListFilterElement.ExcelFilterPopupValueColumnStyle}}">
                            <dxgr:TreeListColumn.CellTemplateSelector>
                                <dxfui_local:HierarchyItemTemplateSelector>
                                    <dxfui_local:HierarchyItemTemplateSelector.RegularNodeTemplate>
                                        <DataTemplate>
                                            <dxfui_local:ValueCountContentControl Style="{StaticResource ValueCountContentControlStyle}">
                                                <dxfui_local:ValueEditorContainer
                                                    DataContext="{Binding Value}"
                                                    EditSettingsLazy="{Binding EditSettingsLazy}"
                                                    GetDisplayText="{Binding GetDisplayText}"
                                                    Value="{Binding Value}" />
                                            </dxfui_local:ValueCountContentControl>
                                        </DataTemplate>
                                    </dxfui_local:HierarchyItemTemplateSelector.RegularNodeTemplate>
                                    <dxfui_local:HierarchyItemTemplateSelector.CustomNodeTemplate>
                                        <DataTemplate>
                                            <dxfui_local:ValueCountContentControl Style="{StaticResource ValueCountContentControlStyle}">
                                                <dxe:TextEdit x:Name="PART_Editor" dxfui_local_native:FilterElementHelper.ClearTextBlockMargin="True" EditValue="{Binding 'Value.DisplayTextLazy.Value', Mode=OneWay}" />
                                            </dxfui_local:ValueCountContentControl>
                                        </DataTemplate>
                                    </dxfui_local:HierarchyItemTemplateSelector.CustomNodeTemplate>
                                </dxfui_local:HierarchyItemTemplateSelector>
                            </dxgr:TreeListColumn.CellTemplateSelector>
                        </dxgr:TreeListColumn>
                        <dxgr:TreeListControl.View>
                            <dxfui_local:CheckedTreeListView
                                x:Name="treeListView"
                                AllowRecreateNodesOnEndDataUpdate="True"
                                HasGroupedNodes="{Binding HasGroupedNodes}"
                                Style="{DynamicResource {dxgt:LWKey CheckedTreeListFilterElement.TreeViewStyle}}">
                                <dxmvvm:Interaction.Behaviors>
                                    <dxfui_local:HierarchyFilterBehavior LockUpdates="{Binding IsUpdating}" />
                                    <dxgr:ExcelColumnFilterMouseClickBehavior />
                                </dxmvvm:Interaction.Behaviors>
                            </dxfui_local:CheckedTreeListView>
                        </dxgr:TreeListControl.View>
                    </dxgr:TreeListControl>
                </dx:DXBorder>
            </dxfui_local:LoadingIndicatorControl>
        </Grid>
    </DataTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\FilteringUI\HierarchyFilterElement.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\FilteringUI\ColumnFilteringUI.xaml-->

    <ControlTemplate x:Key="{dxgt:LWKey ExcelStyleFilterElement.PopupBottomAreaTemplate}" TargetType="{x:Type ContentControl}">
        <Grid x:Name="PART_Root" Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).PopupViewModel.FooterVisibility, RelativeSource={RelativeSource TemplatedParent}}">
            <ContentPresenter />
            <ContentControl dx:FocusHelper2.Focusable="False" Template="{DynamicResource {dxt:LWKey PopupBaseEdit.FooterTemplate}}" />
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <dx:UniformStackPanel
                    Width="Auto"
                    Margin="14,0,0,0"
                    HorizontalAlignment="Left"
                    ChildSpacing="0"
                    Orientation="Horizontal">
                    <Button
                        x:Name="PART_ClearFilterButton"
                        Margin="0,6"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        dx:FocusHelper2.Focusable="False"
                        Content="{Binding ClearFilterButtonCaption}">
                        <Button.Command>
                            <PriorityBinding>
                                <Binding Path="(dxe:BaseEdit.OwnerEdit).(dxfui_local_native:RemoteBindingBehavior.Content).ClearFilterCommand" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="ClearFilterCommand" />
                            </PriorityBinding>
                        </Button.Command>
                    </Button>
                </dx:UniformStackPanel>
                <dx:UniformStackPanel
                    Grid.Column="2"
                    Width="Auto"
                    Margin="3,0,14,0"
                    HorizontalAlignment="Right"
                    ChildSpacing="0"
                    Orientation="Horizontal">
                    <Button
                        x:Name="PART_OkButton"
                        Margin="0,6,3,6"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        dx:FocusHelper2.Focusable="False"
                        Content="{Binding IsTabStop, RelativeSource={RelativeSource Self}, ConverterParameter=OK, Converter={StaticResource EditorStringIdConverter}}"
                        IsEnabled="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).PopupViewModel.OkButtonIsEnabled, RelativeSource={RelativeSource TemplatedParent}}"
                        Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).PopupViewModel.OkButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                        <dxmvvm:Interaction.Behaviors>
                            <dxmvvm:CompositeCommandBehavior CanExecuteCondition="AnyCommandCanBeExecuted">
                                <dxmvvm:CommandItem Command="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxfui_local_native:RemoteBindingBehavior.Content).ApplyFilterCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                                <dxmvvm:CommandItem Command="{Binding Path=(dxe:BaseEdit.OwnerEdit).ClosePopupCommand, RelativeSource={RelativeSource TemplatedParent}}">
                                    <dxmvvm:CommandItem.CommandParameter>
                                        <dxe:PopupCloseMode>Normal</dxe:PopupCloseMode>
                                    </dxmvvm:CommandItem.CommandParameter>
                                </dxmvvm:CommandItem>
                            </dxmvvm:CompositeCommandBehavior>
                        </dxmvvm:Interaction.Behaviors>
                    </Button>
                    <Button
                        x:Name="PART_CancelButton"
                        Margin="3,6,0,6"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        dx:FocusHelper2.Focusable="False"
                        Command="{Binding Path=(dxe:BaseEdit.OwnerEdit).ClosePopupCommand, RelativeSource={RelativeSource TemplatedParent}}"
                        Content="{Binding IsTabStop, RelativeSource={RelativeSource Self}, ConverterParameter=Cancel, Converter={StaticResource EditorStringIdConverter}}"
                        Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).PopupViewModel.CancelButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                        <Button.CommandParameter>
                            <dxe:PopupCloseMode>Cancel</dxe:PopupCloseMode>
                        </Button.CommandParameter>
                    </Button>
                </dx:UniformStackPanel>
            </Grid>
            <dxe:PopupSizeGrip
                x:Name="PART_SizeGrip"
                Margin="2,3,2,2"
                HorizontalAlignment="Right"
                VerticalAlignment="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).ResizeGripViewModel.VerticalAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                dx:FocusHelper2.Focusable="False"
                Style="{DynamicResource {dxt:LWKey PopupBaseEdit.ResizeGripStyle}}"
                Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).ResizeGripViewModel.Visibility, RelativeSource={RelativeSource TemplatedParent}}" />
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).PopupViewModel.IsLeft, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="PART_SizeGrip" Property="HorizontalAlignment" Value="Left" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\FilteringUI\ColumnFilteringUI.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\FilteringUI\FilteringPanelVisualElements.xaml-->
    <dx:LWCornerRadius x:Key="{dxgt:LWKey FilteringPanel.ElementCornerRadius}" Value="1, Win11=4"/>
    <dx:LWThickness x:Key="{dxgt:LWKey FilteringPanel.ElementPadding}" Value="(4,1,4,2), Win11=(6,3)"/>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\FilteringUI\FilteringPanelVisualElements.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\FilteringUI\FilteringPanelControl.xaml-->
    <dx:LWCornerRadius x:Key="{dxgt:LWKey FilteringPanel.ButtonCornerRadius}" Value="0, Win11=4"/>
    <dx:LWThickness x:Key="{dxgt:LWKey FilteringPanel.PanelPadding}" Value="(1,0,1,0), Win11=(1,2,1,2)"/>
    <Style x:Key="{dxgt:LWKey FilteringPanel.ToolbarButton}" TargetType="ButtonBase">
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Margin" Value="0,1" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey FilteringPanel.ControlBackground}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:LWKey FilteringPanel.ControlBackground}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxgt:LWKey FilteringPanel.ButtonSvgPalette}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <dx:DXBorder
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{DynamicResource {dxgt:LWKey FilteringPanel.ButtonCornerRadius}}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </dx:DXBorder>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {dxgt:LWKey FilteringPanel.ControlButtonsBorderBrushHover}}" />
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource {dxgt:LWKey FilteringPanel.ControlButtonsBackgroundHover}}" />
                            <Setter Property="dx:SvgImageHelper.State" Value="Hover" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource {dxgt:LWKey FilteringPanel.ControlButtonsBackgroundPressed}}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {dxgt:LWKey FilteringPanel.ControlButtonsBorderBrushPressed}}" />
                            <Setter Property="dx:SvgImageHelper.State" Value="Pressed" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource {dxgt:LWKey FilteringPanel.ControlButtonsBackgroundPressed}}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {dxgt:LWKey FilteringPanel.ControlButtonsBorderBrushPressed}}" />
                            <Setter Property="dx:SvgImageHelper.State" Value="Pressed" />
                        </Trigger>
                        <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                            <Setter Property="Margin" Value="0,8,0,1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(dxgr:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Background" Value="{Binding Path=(dxgr:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.Background), RelativeSource={RelativeSource Self}}" />
                <Setter Property="BorderBrush" Value="{Binding Path=(dxgr:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.Background), RelativeSource={RelativeSource Self}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxgt:LWKey FilteringPanel.ControlStyle}" TargetType="{x:Type dxfui_local:FilteringPanelControl}">
        <Setter Property="BorderThickness" Value="0,1,0,0" />
        <Setter Property="AllowDisableFilter" Value="True" />
        <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey FilteringPanel.ControlBackground}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:LWKey FilteringPanel.ControlBorderBrush}}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(dxgr:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Background" Value="{Binding Path=(dxgr:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.Background), RelativeSource={RelativeSource Self}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\FilteringUI\FilteringPanelControl.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic.xaml-->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\HeaderFooterItemsControlStyles.xaml-->

    <Style x:Key="{dxgt:LWKey TotalSummary.TotalSummaryTextControlStyle}" TargetType="{x:Type TextBlock}">
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
        <Setter Property="dxei:TextBlockService.AllowIsTextTrimmed" Value="True" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(dxei:TextBlockService.IsTextTrimmed), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="ToolTipService.ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Text}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxgt:LWKey GridControl.GroupPanelStyle}" TargetType="{x:Type dx:DXDockPanel}">
        <Setter Property="dx:DragManager.DropTargetFactory">
            <Setter.Value>
                <dxgr:GroupPanelColumnHeaderDropTargetFactory />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxgt:LWKey TableView.SearchPanelContentTemplate}" TargetType="{x:Type ContentControl}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="dx:FocusHelper2.Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid x:Name="grid" Background="{DynamicResource {dxgt:LWKey TableView.SearchPanelBackground}}">
                        <dxgr:GridSearchControl
                            x:Name="PART_SearchControl"
                            Margin="{DynamicResource {dxgt:LWKey TableView.SearchPanelWithoutGroupedPanelMargin}}"
                            HorizontalAlignment="{Binding Path=(dxgr:GridControl.CurrentView).ActualSearchPanelHorizontalAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                            IsEditorTabStop="False"
                            IsTabStop="False"
                            View="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                            Visibility="{Binding Path=View.ActualShowSearchPanel, RelativeSource={RelativeSource Self}, Converter={dx:BooleanToVisibilityConverter}}" />
                        <dx:DXBorder x:Name="PART_SearchPanelBorderBottom" BorderBrush="{DynamicResource {dxgt:LWKey TableView.SearchPanelBorderBottomBrush}}" BorderThickness="0,0,0,1">
                            <dx:DXBorder.Visibility>
                                <Binding ElementName="PART_SearchControl" Path="GroupPanelShown">
                                    <Binding.Converter>
                                        <dx:BoolToVisibilityInverseConverter />
                                    </Binding.Converter>
                                </Binding>
                            </dx:DXBorder.Visibility>
                        </dx:DXBorder>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_SearchControl" Property="GroupPanelShown" Value="False">
                            <Setter TargetName="PART_SearchControl" Property="Margin" Value="{DynamicResource {dxgt:LWKey TableView.SearchPanelLeftMargin}}" />
                        </Trigger>
                        <Trigger SourceName="PART_SearchControl" Property="ShowSearchPanelMode" Value="Always">
                            <Setter TargetName="PART_SearchControl" Property="Margin" Value="{DynamicResource {dxgt:LWKey TableView.SearchPanelWithoutGroupedPanelMargin}}" />
                        </Trigger>
                        <Trigger SourceName="PART_SearchControl" Property="GroupPanelShown" Value="True">
                            <Setter TargetName="PART_SearchControl" Property="Margin" Value="{DynamicResource {dxgt:LWKey TableView.SearchPanelWithGroupedPanelMargin}}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=(dxgr:GridControl.CurrentView).IsCompactMode, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                            <Setter TargetName="PART_SearchControl" Property="HorizontalAlignment" Value="Stretch" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=(dxgr:GridControl.CurrentView).ActualShowCompactPanel, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                            <Setter TargetName="PART_SearchPanelBorderBottom" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=(dxgr:GridControl.CurrentView).ActualSearchPanelPosition, RelativeSource={RelativeSource TemplatedParent}}" Value="Default">
                            <Setter TargetName="PART_SearchControl" Property="SearchTextBoxMinWidth" Value="{DynamicResource {dxgt:LWKey TableView.SearchPanelWidth}}" />
                            <Setter TargetName="PART_SearchControl" Property="Margin">
                                <Setter.Value>
                                    <Binding ElementName="PART_SearchControl" Path="ShowSearchPanelMode">
                                        <Binding.Converter>
                                            <dxmvvm:ObjectToObjectConverter DefaultSource="Default" DefaultTarget="0">
                                                <dxmvvm:MapItem Source="Always">
                                                    <dxmvvm:MapItem.Target>
                                                        <Thickness>0,0,7,0</Thickness>
                                                    </dxmvvm:MapItem.Target>
                                                </dxmvvm:MapItem>
                                                <dxmvvm:MapItem Source="HotKey">
                                                    <dxmvvm:MapItem.Target>
                                                        <Thickness>0</Thickness>
                                                    </dxmvvm:MapItem.Target>
                                                </dxmvvm:MapItem>
                                                <dxmvvm:MapItem Source="Never">
                                                    <dxmvvm:MapItem.Target>
                                                        <Thickness>0</Thickness>
                                                    </dxmvvm:MapItem.Target>
                                                </dxmvvm:MapItem>
                                            </dxmvvm:ObjectToObjectConverter>
                                        </Binding.Converter>
                                    </Binding>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_SearchControl" Property="AllowAnimation" Value="true" />
                        </DataTrigger>
                        <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                            <Setter TargetName="PART_SearchControl" Property="SearchTextBoxMinWidth" Value="{DynamicResource {dxgt:LWKey TableView.SearchPanelWidthTouch}}" />
                        </Trigger>
                        <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                            <Setter TargetName="PART_SearchControl" Property="SearchTextBoxMinWidth" Value="{DynamicResource {dxgt:LWKey TableView.SearchPanelWidthTouch}}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=(dxgr:GridControl.CurrentView).ActualSearchPanelPosition, RelativeSource={RelativeSource TemplatedParent}}" Value="OverGroupPanel">
                            <Setter TargetName="PART_SearchControl" Property="SearchTextBoxMinWidth" Value="{DynamicResource {dxgt:LWKey TableView.SearchPanelTextBoxMinWidth}}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=(dxgr:GridControl.CurrentView).DataControl.(dxi:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter TargetName="grid" Property="Background" Value="{Binding Path=(dxgr:GridControl.CurrentView).DataControl.(dxi:AppearanceOptions.Background), RelativeSource={RelativeSource TemplatedParent}}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="{dxgt:LWKey GroupRow.GroupItemsControlStyle}" TargetType="{x:Type dx:CachedItemsControl}">
        <Setter Property="ClipToBounds" Value="true" />
        <Setter Property="dxgr:GridColumn.HeaderPresenterType" Value="GroupPanel" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ControlTemplate>
                    <dx:DXDockPanel
                        Name="groupHeadersPanel"
                        dxgcore:BaseGridColumnHeader.CorrectDragIndicatorLocation="False"
                        dxgr:GridColumn.HeaderPresenterType="GroupPanel"
                        Background="Transparent"
                        LastChildFill="False"
                        Style="{DynamicResource {dxgt:LWKey GridControl.GroupPanelStyle}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxgr:GridColumnHeader
                        dxb:BarManager.DXContextMenu="{Binding Path=View.GridMenu}"
                        dxgr:GridColumn.ActualVisibleIndex="{Binding Path=(dxgr:GridColumn.GroupIndex)}"
                        dxgr:GridColumn.HeaderPresenterType="GroupPanel"
                        dxgr:GridColumn.VisibleIndex="{Binding Path=(dxgr:GridColumn.GroupIndex)}"
                        dxgr:GridColumnHeader.GridColumn="{Binding}"
                        dxgr:GridPopupMenu.GridMenuType="Column"
                        ColumnPosition="Standalone"
                        Command="{Binding Path=Commands.ChangeColumnSortOrder}"
                        DataContext="{Binding Content.Column, RelativeSource={RelativeSource TemplatedParent}}">
                        <dxgr:GridViewHitInfoBase.HitTestAcceptor>
                            <dxght:GroupPanelColumnHeaderTableViewHitTestAcceptor />
                        </dxgr:GridViewHitInfoBase.HitTestAcceptor>
                    </dxgr:GridColumnHeader>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxgt:LWKey CardView.TotalSummaryItemsControlStyle}" TargetType="{x:Type dxgr:TotalSummaryItemsControl}">
        <Setter Property="ClipToBounds" Value="true" />
        <Setter Property="ItemsSource" Value="{Binding Path=(dxgr:GridControl.ActiveView).HeadersData.CellData, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ControlTemplate>
                    <dx:StackVisibleIndexPanel ArrangeAccordingToVisibleIndex="True" Orientation="Horizontal" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxgr:GridTotalSummary x:Name="summary">
                        <dxgr:GridViewHitInfoBase.HitTestAcceptor>
                            <dxght:TotalSummaryTableViewHitTestAcceptor />
                        </dxgr:GridViewHitInfoBase.HitTestAcceptor>
                    </dxgr:GridTotalSummary>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=Column.HasTotalSummaries}" Value="false">
                            <Setter TargetName="summary" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxgt:LWKey CardView.CardHeaderPanelStyle}" TargetType="{x:Type dx:StackVisibleIndexPanel}">
        <Setter Property="dx:DragManager.DropTargetFactory">
            <Setter.Value>
                <dxgcore:ColumnHeaderDropTargetFactory />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxgt:LWKey CardView.HeaderItemsControlStyle}" TargetType="{x:Type ItemsControl}">
        <Setter Property="ClipToBounds" Value="true" />
        <Setter Property="dxgr:GridColumn.HeaderPresenterType" Value="Headers" />
        <Setter Property="ItemsSource" Value="{Binding Path=(dxgr:GridControl.ActiveView).VisibleColumns, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <dx:StackVisibleIndexPanel
                        MinHeight="3"
                        dxgr:GridColumn.HeaderPresenterType="Headers"
                        dxgr:GridColumnHeader.DropPlaceOrientation="Vertical"
                        Background="Transparent"
                        Orientation="Vertical"
                        Style="{DynamicResource {dxgt:LWKey CardView.CardHeaderPanelStyle}}" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxgr:GridColumnHeader
                        Margin="0,0,0,1"
                        HorizontalAlignment="Stretch"
                        dxb:BarManager.DXContextMenu="{Binding Path=(dxgr:GridControl.ActiveView).DataControlMenu, RelativeSource={RelativeSource TemplatedParent}}"
                        dxgr:GridColumn.ActualCollectionIndex="{Binding Path=(dxgr:GridColumn.ActualVisibleIndex)}"
                        dxgr:GridColumn.ActualVisibleIndex="{Binding Path=(dxgr:GridColumn.ActualVisibleIndex)}"
                        dxgr:GridColumn.HeaderPresenterType="Headers"
                        dxgr:GridColumn.VisibleIndex="{Binding Path=(dxgr:GridColumn.VisibleIndex)}"
                        dxgr:GridColumnHeader.DropPlaceOrientation="Vertical"
                        dxgr:GridColumnHeader.GridColumn="{Binding}"
                        dxgr:GridPopupMenu.GridMenuType="Column"
                        ColumnPosition="Standalone"
                        Command="{Binding Path=Commands.ChangeColumnSortOrder}">
                        <dxgr:GridViewHitInfoBase.HitTestAcceptor>
                            <dxght:ColumnHeaderTableViewHitTestAcceptor />
                        </dxgr:GridViewHitInfoBase.HitTestAcceptor>
                    </dxgr:GridColumnHeader>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Grid\DevExpress.Xpf.Grid\Themes\Generic\HeaderFooterItemsControlStyles.xaml-->


    <!--#region DEFAULT STYLES-->

    <Style x:Key="FormatPreviewControl.DefaultStyleBase" BasedOn="{StaticResource {x:Type ContentControl}}" TargetType="{x:Type dxgr:FormatPreviewControl}">
        <Setter Property="Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.TextUnfocusedBrush}}" />
        <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey GridRow.BorderNoneBrush}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:LWKey GridRow.GridDataRowDelimiterBrush}}" />
        <Setter Property="Format" Value="{Binding Path=Content, RelativeSource={RelativeSource Self}, Converter={StaticResource DebugConverter}}" />
        <Setter Property="EmptyFormatTemplate" Value="{StaticResource EmptyFormatTemplate}" />
        <Setter Property="SimpleFormatTemplate" Value="{StaticResource SimpleFormatContentTemplate}" />
        <Setter Property="IconSetFormatTemplate" Value="{StaticResource IconSetFormatTemplate}" />
        <Setter Property="ColorScaleFormatTemplate" Value="{StaticResource ColorScaleFormatTemplate}" />
        <Setter Property="DataBarFormatTemplate" Value="{StaticResource DataBarFormatTemplate}" />
        <Setter Property="PreviewString" Value="AaBbCcYyZz" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxgr:FormatPreviewControl}">
                    <dx:DXBorder Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">
                        <ContentPresenter />
                    </dx:DXBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="FormatType" Value="{x:Null}">
                <Setter Property="ContentTemplate" Value="{Binding EmptyFormatTemplate, RelativeSource={RelativeSource Self}}" />
            </Trigger>
            <Trigger Property="FormatType" Value="{x:Type dx:Format}">
                <Setter Property="ContentTemplate" Value="{StaticResource SimpleFormatTemplate}" />
            </Trigger>
            <Trigger Property="FormatType" Value="{x:Type conditionalFormattingManager:IconFormatStyle}">
                <Setter Property="ContentTemplate" Value="{Binding IconSetFormatTemplate, RelativeSource={RelativeSource Self}}" />
            </Trigger>
            <Trigger Property="FormatType" Value="{x:Type dx:ColorScaleFormat}">
                <Setter Property="ContentTemplate" Value="{Binding ColorScaleFormatTemplate, RelativeSource={RelativeSource Self}}" />
            </Trigger>
            <Trigger Property="FormatType" Value="{x:Type dx:IconSetFormat}">
                <Setter Property="ContentTemplate" Value="{Binding IconSetFormatTemplate, RelativeSource={RelativeSource Self}}" />
            </Trigger>
            <Trigger Property="FormatType" Value="{x:Type dx:DataBarFormat}">
                <Setter Property="ContentTemplate" Value="{Binding DataBarFormatTemplate, RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="GridThumb.DefaultStyleBase" TargetType="{x:Type dxgr:GridThumb}">
        <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.ResizeFrameVerticalBorderWidthKey}}" />
        <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.ResizeFrameHorizontalBorderHeightKey}}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxgr:GridThumb}">
                    <Grid dx:DragManager.IsStartDragPlace="False" Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="dxgr:GridViewHitInfoBase.HitTestAcceptor">
            <Setter.Value>
                <dxght:ColumnEdgeTableViewHitTestAcceptor />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DesignTimeSelectionControl.DefaultStyleBase" TargetType="{x:Type dxgr:DesignTimeSelectionControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <dx:DXBorder Background="Red" IsHitTestVisible="false" Opacity="0.3" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SortIndicatorControl.DefaultStyleBase" TargetType="dxgr:SortIndicatorControl">
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Width" Value="{DynamicResource {dxgt:LWKey GridColumnHeader.SortIndicatorWidth}}" />
        <Setter Property="Margin" Value="{DynamicResource {dxgt:LWKey GridColumnHeader.SortIndicatorUpMargin}}" />
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey GridColumnHeader.SortArrowUpTemplate}}" />
        <Style.Triggers>
            <Trigger Property="SortOrder" Value="Descending">
                <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey GridColumnHeader.SortArrowDownTemplate}}" />
                <Setter Property="Margin" Value="{DynamicResource {dxgt:LWKey GridColumnHeader.SortIndicatorDownMargin}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ColumnHeaderLayout.DefaultStyleBase" TargetType="{x:Type dxgr:ColumnHeaderLayout}">
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey GridColumnHeader.Layout}}" />
        <Setter Property="Focusable" Value="False" />
    </Style>
    <Style x:Key="HeaderImageControl.DefaultStyleBase" TargetType="{x:Type dxgr:HeaderImageControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxgr:HeaderImageControl}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Image Source="{TemplateBinding Image}" Style="{TemplateBinding ImageStyle}" />
                        <ContentPresenter
                            Grid.Column="1"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ImageStyle" Value="{DynamicResource {dxgt:LWKey GridColumnHeader.ImageStyle}}" />
    </Style>
    <Style x:Key="FixedDelimiter.DefaultStyleBase" TargetType="{x:Type dxg:FixedDelimiter}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <ContentPresenter ContentTemplate="{DynamicResource {dxgt:LWKey GridRow.FixedColumnsDelimiterTemplate}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RowsDelimiter.DefaultStyleBase" TargetType="{x:Type dxg:RowsDelimiter}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <dx:DXBorder Background="{DynamicResource {dxgt:LWKey GridRow.GridDataRowDelimiterBrush}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FitRowContentPresenter.DefaultStyleBase" TargetType="{x:Type dxg:FitRowContentPresenter}">
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey GridRow.FitColumnContentTemplate}}" />
    </Style>
    <Style x:Key="FitRowLeftContentPresenter.DefaultStyleBase" TargetType="{x:Type dxg:FitRowLeftContentPresenter}">
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey GridRow.FitColumnLeftContentTemplate}}" />
    </Style>
    <Style x:Key="FixRowControl.DefaultStyleBase" TargetType="{x:Type dxg:FixRowControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxg:FixRowControl">
                    <DockPanel x:Name="root">
                        <dx:DXBorder x:Name="offsetBorder" DockPanel.Dock="Bottom" />
                        <Grid HorizontalAlignment="Left" Background="Transparent">
                            <Path
                                x:Name="PinnedPath"
                                Width="9"
                                Height="7"
                                Margin="3,0,3,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Data="F1M1252,785L1252,786 1257,786 1257,791 1252,791 1252,792 1251,792 1251,789 1248,789 1248,788 1251,788 1251,785 1252,785z M1256,787L1252,787 1252,788 1256,788 1256,787z"
                                Fill="{TemplateBinding Foreground}"
                                Opacity="0"
                                Stretch="Fill" />
                            <Path
                                x:Name="UnpinnedPath"
                                Width="7"
                                Height="9"
                                Margin="4,1,3,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Data="F1M1265,788L1266,788 1266,783 1271,783 1271,788 1272,788 1272,789 1269,789 1269,792 1268,792 1268,789 1265,789 1265,788z M1267,784L1267,788 1268,788 1268,784 1267,784z"
                                Fill="{TemplateBinding Foreground}"
                                Stretch="Fill" />
                        </Grid>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="FixedRowPosition" Value="None">
                            <Setter TargetName="UnpinnedPath" Property="Opacity" Value="0" />
                            <Setter TargetName="PinnedPath" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="ShowButton" Value="False">
                            <Setter TargetName="PinnedPath" Property="Opacity" Value="0" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=IsLastFixedRow}" Value="True">
                            <Setter TargetName="offsetBorder" Property="Height" Value="{Binding Path=View.FixedLineHeight}" />
                        </DataTrigger>
                        <Trigger Property="FixedRowPosition" Value="Bottom">
                            <Setter TargetName="offsetBorder" Property="DockPanel.Dock" Value="Top" />
                        </Trigger>
                        <Trigger Property="IsButtonVisible" Value="False">
                            <Setter TargetName="root" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                            <Setter TargetName="PinnedPath" Property="Width" Value="18" />
                            <Setter TargetName="PinnedPath" Property="Height" Value="14" />
                            <Setter TargetName="UnpinnedPath" Property="Width" Value="14" />
                            <Setter TargetName="UnpinnedPath" Property="Height" Value="18" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LightweightCellEditor.DefaultStyleBase" BasedOn="{StaticResource {dxgt:LWKey GridRow.LightweightCellStyle}}" TargetType="dxg:LightweightCellEditor" />
    <Style x:Key="RowControl.DefaultStyleBase" BasedOn="{StaticResource RowControlStyle}" TargetType="{x:Type dxg:RowControl}">
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey GridRow.RowTemplate}}" />
    </Style>
    <Style x:Key="ExtendedColumnChooserRowControl.DefaultStyleBase" BasedOn="{StaticResource RowControlStyle}" TargetType="{x:Type dxg:ExtendedColumnChooserRowControl}">
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey ExtendedColumnChooser.RowTemplate}}" />
    </Style>
    <Style x:Key="RowNewItemControl.DefaultStyleBase" BasedOn="{StaticResource RowControlBaseStyle}" TargetType="dxg:RowNewItemControl">
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey GridRow.RowNewItemTemplate}}" />
        <Setter Property="Visibility" Value="Collapsed" />
        <Style.Triggers>
            <Trigger Property="SelectionState" Value="Focused">
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.TextFocusedBrush}}" />
                <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey GridRow.NewItemRowBorderFocusedBrush}}" />
                <Setter Property="RowFitBorderBrush" Value="{DynamicResource {dxgt:LWKey GridRow.CellBorderFocusedBorderBrush}}" />
            </Trigger>
            <Trigger Property="ShowVerticalLines" Value="false">
                <Setter Property="RowFitBorderBrush" Value="{x:Null}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RowFixedLineSeparatorControl.DefaultStyleBase" TargetType="dxg:RowFixedLineSeparatorControl">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey GridRow.FixedLineSeparatorTemplate}}" />
    </Style>
    <Style x:Key="GroupRowFixedLineSeparatorControl.DefaultStyleBase" TargetType="dxg:GroupRowFixedLineSeparatorControl">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupRowFixedLineSeparatorTemplate}}" />
    </Style>
    <Style x:Key="RowIndicator.DefaultStyleBase" BasedOn="{StaticResource RowIndicatorStyleBase}" TargetType="dxg:RowIndicator">
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey RowIndicator.RowIndicatorTemplate}}" />
    </Style>
    <Style x:Key="GroupRowIndicator.DefaultStyleBase" BasedOn="{StaticResource RowIndicatorStyleBase}" TargetType="dxg:GroupRowIndicator">
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey RowIndicator.GroupRowIndicatorTemplate}}" />
    </Style>
    <Style x:Key="RowDetailsControl.DefaultStyleBase" TargetType="dxg:RowDetailsControl">
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey GridRow.RowDetailsTemplate}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:LWKey GridRow.GridDataRowDelimiterBrush}}" />
    </Style>
    <Style x:Key="UpdateRowButtonsControl.DefaultStyleBase" TargetType="dxg:UpdateRowButtonsControl">
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey GridRow.UpdateRowButtonsControlTemplate}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:LWKey GridRow.GridDataRowDelimiterBrush}}" />
        <!--<Setter Property="FocusManager.IsFocusScope" Value="{Binding View.IsEditing}" />-->
    </Style>
    <Style x:Key="GroupRowControl.DefaultStyleBase" TargetType="dxg:GroupRowControl">
        <Setter Property="FocusOffset" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupRowFocusOffset}}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:LWKey GridRow.BorderBrush}}" />
        <Setter Property="BottomLineMargin" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupRowBottomLineThickness}}" />
        <Setter Property="RowFitBorderBrush" Value="{DynamicResource {dxgt:LWKey GridRow.GridDataRowDelimiterBrush}}" />
        <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupRowBackground}}" />
        <Setter Property="FontWeight" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupRowFontWeight}}" />
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupRowLightweightTemplate}}" />
        <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupRowForeground}}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxcn:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Background" Value="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxcn:AppearanceOptions.Background), RelativeSource={RelativeSource Self}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxcn:GridAppearanceOptions.HasDataAreaBackground), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Background" Value="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxcn:GridAppearanceOptions.DataAreaBackground), RelativeSource={RelativeSource Self}}" />
            </DataTrigger>
            <Trigger Property="SelectionState" Value="Selected">
                <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupRowBackgroundSelected}}" />
            </Trigger>
            <Trigger Property="SelectionState" Value="Focused">
                <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupRowBackgroundFocused}}" />
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupRowFocusForeground}}" />
                <Setter Property="RowFitBorderBrush" Value="{DynamicResource {dxgt:LWKey GridRow.CellBorderFocusedBorderBrush}}" />
            </Trigger>
            <Trigger Property="SelectionState" Value="Highlighted">
                <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupRowHoverBackground}}" />
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupRowHoverForeground}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="GroupCardRowControl.DefaultStyleBase" TargetType="dxg:GroupCardRowControl">
        <Setter Property="FocusOffset" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupRowFocusOffset}}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:LWKey GridRow.BorderBrush}}" />
        <Setter Property="BottomLineMargin" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupRowBottomLineThickness}}" />
        <Setter Property="RowFitBorderBrush" Value="{DynamicResource {dxgt:LWKey GridRow.GridDataRowDelimiterBrush}}" />
        <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupRowBackground}}" />
        <Setter Property="FontWeight" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupRowFontWeight}}" />
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey CardView.GroupRowLightweightTemplate}}" />
        <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupRowForeground}}" />
        <Style.Triggers>
            <Trigger Property="SelectionState" Value="Selected">
                <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupRowBackgroundSelected}}" />
            </Trigger>
            <Trigger Property="SelectionState" Value="Focused">
                <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupRowBackgroundFocused}}" />
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupRowFocusForeground}}" />
                <Setter Property="RowFitBorderBrush" Value="{DynamicResource {dxgt:LWKey GridRow.CellBorderFocusedBorderBrush}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="GroupRowCheckBoxSelector.DefaultStyleBase" TargetType="dxg:GroupRowCheckBoxSelector">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <dxe:CheckEdit
                        x:Name="PART_CheckBoxRowSelector"
                        Margin="{DynamicResource {dxgt:LWKey GroupRow.CheckBoxSelectorMargin}}"
                        Padding="0"
                        VerticalAlignment="Center"
                        Focusable="False"
                        IsChecked="{Binding AllItemsSelected, Mode=TwoWay}"
                        IsEnabled="{Binding EnabledSelected}"
                        IsReadOnly="{Binding View.HasValidationError}">
                        <dxgr:GridViewHitInfoBase.HitTestAcceptor>
                            <dxght:GroupRowCheckBoxTableViewHitTestAcceptor />
                        </dxgr:GridViewHitInfoBase.HitTestAcceptor>
                    </dxe:CheckEdit>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding View.ActualShowCheckBoxInGroupRow}" Value="True">
                            <Setter TargetName="PART_CheckBoxRowSelector" Property="IsEnabled" Value="True" />
                            <Setter TargetName="PART_CheckBoxRowSelector" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_CheckBoxRowSelector" Property="IsReadOnly" Value="False" />
                            <Setter TargetName="PART_CheckBoxRowSelector" Property="IsChecked" Value="{Binding IsChecked, Mode=TwoWay}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GroupRowExpandButton.DefaultStyleBase" TargetType="dxg:GroupRowExpandButton">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupRowExpandButtonMargin}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxg:GroupRowExpandButton">
                    <dxgr:GridToggleStateButton
                        x:Name="PART_ToggleButton"
                        ClickMode="Press"
                        Command="{TemplateBinding Command}"
                        CommandParameter="{TemplateBinding CommandParameter}"
                        Foreground="{TemplateBinding Foreground}"
                        IsChecked="{TemplateBinding IsChecked}"
                        Style="{DynamicResource {dxgt:LWKey GroupRow.ExpandButtonStyle}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GroupValuePresenter.DefaultStyleBase" TargetType="dxg:GroupValuePresenter">
        <Setter Property="Margin" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupValuePresenterMargin}}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxg:GroupValuePresenter">
                    <StackPanel x:Name="PART_GroupValuesPanel" Margin="{DynamicResource {dxgt:LWKey GroupRow.GroupRowContentMargin}}" Orientation="Horizontal" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GroupRowDefaultSummaryControl.DefaultStyleBase" TargetType="dxg:GroupRowDefaultSummaryControl">
        <Setter Property="Margin" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupRowDefaultSummaryPadding}}" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GroupRowDefaultSummaryItemControl.DefaultStyleBase" TargetType="dxg:GroupRowDefaultSummaryItemControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxg:GroupRowDefaultSummaryItemControl">
                    <TextBlock Text="{TemplateBinding Text}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupRowDefaultSummaryMargin}}" />
    </Style>
    <Style x:Key="GroupRowColumnSummaryControl.DefaultStyleBase" TargetType="dxg:GroupRowColumnSummaryControl">
        <Setter Property="BorderBrushes" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupRowColumnSummaryBrushes}}" />
        <Setter Property="Padding" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupColumnSummaryPadding}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxg:GroupRowColumnSummaryControl">
                    <dx:DXBorder
                        Name="PART_Border"
                        Margin="{DynamicResource {dxgt:LWKey GroupRow.GroupRowBottomLineThickness}}"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding" Value="12" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RowNewItemTextControl.DefaultStyleBase" TargetType="dxg:RowNewItemTextControl">
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey GridRow.RowNewItemTextControlTemplate}}" />
        <Setter Property="Panel.ZIndex" Value="1" />
    </Style>
    <Style x:Key="DetailDescriptorContentBorder.DefaultStyleBase" TargetType="{x:Type dxg:DetailDescriptorContentBorder}">
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" Value="44" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxg:DetailDescriptorContentBorder}">
                    <dx:DXBorder x:Name="PART_Border" BorderBrush="{DynamicResource {dxgt:LWKey GridRow.GridDataRowDelimiterBrush}}">
                        <ContentPresenter />
                    </dx:DXBorder>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ShowBottomLine" Value="True">
                            <Setter TargetName="PART_Border" Property="BorderThickness" Value="0,0,0,1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="OuterBorderElement.DefaultStyleBase" TargetType="{x:Type dxgr:OuterBorderElement}">
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey TableView.OuterBorderElementTemplate}}" />
    </Style>
    <Style x:Key="ColumnHeaderPanel.DefaultStyleBase" TargetType="{x:Type dxgr:ColumnHeaderPanel}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <dxgr:ExpandButtonColumnHeader
                            Width="{Binding Path=(dxgr:GridControl.CurrentView).ActualExpandDetailHeaderWidth, RelativeSource={RelativeSource TemplatedParent}}"
                            ColumnPosition="{Binding View.ExpandColumnPosition}"
                            HasTopElement="{Binding Path=(dxgr:GridControl.CurrentView).DataControl.BandsLayout.ShowBandsPanel, RelativeSource={RelativeSource TemplatedParent}}"
                            Visibility="{Binding Path=(dxgr:GridControl.CurrentView).ActualShowDetailHeader, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        <dxgr:BandedViewContentSelector Grid.Column="1" HorizontalContentAlignment="Stretch" BandsLayout="{Binding Path=View.DataControl.BandsLayout}">
                            <dxgr:BandedViewContentSelector.TableViewContent>
                                <ControlTemplate>
                                    <dxgr:GridScrollablePart
                                        dxgr:GridControl.CurrentView="{Binding Path=View}"
                                        FixedColumnsDelimiterTemplate="{DynamicResource {dxgt:LWKey GridColumnHeader.FixedColumnsDelimiterTemplate}}"
                                        FixedLeftVisibleColumns="{Binding Path=View.FixedLeftVisibleColumns}"
                                        FixedLineWidth="{Binding Path=View.FixedLineWidth}"
                                        FixedNoneContentWidth="{Binding Path=FixedNoneContentWidth}"
                                        FixedRightVisibleColumns="{Binding Path=View.FixedRightVisibleColumns}"
                                        FocusVisualStyle="{x:Null}"
                                        ScrollingMargin="{Binding Path=View.ScrollingHeaderVirtualizationMargin}">
                                        <dxgr:GridScrollablePart.FitContent>
                                            <dxgr:FitColumnHeader ColumnPosition="Right" />
                                        </dxgr:GridScrollablePart.FitContent>
                                        <dxgr:GridScrollablePart.FixedLeftContent>
                                            <dxgr:HeaderItemsControl
                                                dxgr:GridColumn.HeaderPresenterType="Headers"
                                                ClipToBounds="True"
                                                KeyboardNavigation.TabNavigation="Contained"
                                                ItemsPanel="{DynamicResource {dxgt:LWKey TableView.FixedLeftHeadersPanelTemplate}}"
                                                ItemsSource="{Binding Path=FixedLeftCellData}" />
                                        </dxgr:GridScrollablePart.FixedLeftContent>
                                        <dxgr:GridScrollablePart.FixedRightContent>
                                            <dxgr:HeaderItemsControl
                                                dxgr:GridColumn.HeaderPresenterType="Headers"
                                                ClipToBounds="True"
                                                ItemsPanel="{DynamicResource {dxgt:LWKey TableView.FixedRightHeadersPanelTemplate}}"
                                                KeyboardNavigation.TabNavigation="Contained"
                                                ItemsSource="{Binding Path=FixedRightCellData}" />
                                        </dxgr:GridScrollablePart.FixedRightContent>
                                        <dxgr:GridScrollablePart.FixedNoneContent>
                                            <dxgr:HeaderItemsControl
                                                x:Name="headerItemsControl"
                                                dxgr:GridColumn.HeaderPresenterType="Headers"
                                                ClipToBounds="True"
                                                ItemsPanel="{DynamicResource {dxgt:LWKey TableView.FixedNoneHeadersPanelTemplate}}"
                                                KeyboardNavigation.TabNavigation="Contained"
                                                ItemsSource="{Binding Path=FixedNoneCellData}" />
                                        </dxgr:GridScrollablePart.FixedNoneContent>
                                    </dxgr:GridScrollablePart>
                                </ControlTemplate>
                            </dxgr:BandedViewContentSelector.TableViewContent>
                            <dxgr:BandedViewContentSelector.BandedViewContent>
                                <ControlTemplate>
                                    <dxgr:GridScrollablePart
                                        dxgr:GridControl.CurrentView="{Binding Path=View}"
                                        FixedColumnsDelimiterTemplate="{DynamicResource {dxgt:LWKey GridColumnHeader.FixedColumnsDelimiterTemplate}}"
                                        FixedLeftVisibleColumns="{Binding Path=View.DataControl.BandsLayout.FixedLeftVisibleBands}"
                                        FixedLineWidth="{Binding Path=View.FixedLineWidth}"
                                        FixedNoneContentWidth="{Binding Path=FixedNoneContentWidth}"
                                        FixedRightVisibleColumns="{Binding Path=View.DataControl.BandsLayout.FixedRightVisibleBands}"
                                        FocusVisualStyle="{x:Null}"
                                        ScrollingMargin="{Binding Path=View.ScrollingHeaderVirtualizationMargin}">
                                        <dxgr:GridScrollablePart.Template>
                                            <ControlTemplate TargetType="{x:Type dxgr:GridScrollablePart}">
                                                <dx:DXDockPanel x:Name="PART_ScrollablePartPanel" LastChildFill="True">
                                                    <ContentPresenter x:Name="PART_FitLeftContent" dx:DXDockPanel.Dock="Left" dxgcore:TableViewProperties.FixedAreaStyle="Left" />
                                                    <ContentPresenter x:Name="PART_FixedLeftContent" dx:DXDockPanel.Dock="Left" dxgcore:TableViewProperties.FixedAreaStyle="Left" />
                                                    <ContentPresenter
                                                        x:Name="PART_FixedLeftLinePlaceHolder"
                                                        dx:DXDockPanel.Dock="Left"
                                                        dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                                                        Visibility="Collapsed">
                                                        <dxgr:GridViewHitInfoBase.HitTestAcceptor>
                                                            <dxght:FixedLeftDivTableViewHitTestAcceptor />
                                                        </dxgr:GridViewHitInfoBase.HitTestAcceptor>
                                                    </ContentPresenter>
                                                    <dxgr:FixedNoneBandsColumnBorder x:Name="PART_FixedNoneCellsBorder" dx:DXDockPanel.Dock="Left"
                                                                                     dxgcore:FocusRectPresenter.IsHorizontalScrollHost="True">
                                                        <ContentPresenter x:Name="PART_FixedNoneContent" />
                                                    </dxgr:FixedNoneBandsColumnBorder>
                                                    <ContentPresenter
                                                        x:Name="PART_FixedRightLinePlaceHolder"
                                                        dx:DXDockPanel.Dock="Left"
                                                        dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                                                        Visibility="Collapsed">
                                                        <dxgr:GridViewHitInfoBase.HitTestAcceptor>
                                                            <dxght:FixedRightDivTableViewHitTestAcceptor />
                                                        </dxgr:GridViewHitInfoBase.HitTestAcceptor>
                                                    </ContentPresenter>
                                                    <ContentPresenter x:Name="PART_FixedRightContent" dx:DXDockPanel.Dock="Left" dxgcore:TableViewProperties.FixedAreaStyle="Left" />
                                                    <dxgr:FitContentContainer>
                                                        <ContentPresenter x:Name="PART_FitContent" />
                                                    </dxgr:FitContentContainer>
                                                </dx:DXDockPanel>
                                            </ControlTemplate>
                                        </dxgr:GridScrollablePart.Template>
                                        <dxgr:GridScrollablePart.FitContent>
                                            <dxgr:FitColumnHeader ColumnPosition="Right" HasTopElement="{Binding Path=BandsLayout.ShowBandsPanel, RelativeSource={RelativeSource TemplatedParent}}" />
                                        </dxgr:GridScrollablePart.FitContent>
                                        <dxgr:GridScrollablePart.FixedLeftContent>
                                            <dxgr:BandedViewHeaderItemsControl
                                                dxgr:GridColumn.HeaderPresenterType="Headers"
                                                dxgr:GridControl.CurrentView="{Binding Path=View}"
                                                Focusable="False"
                                                ItemsSource="{Binding Path=FixedLeftCellData}">
                                                <dxgr:BandedViewHeaderItemsControl.ItemsPanel>
                                                    <ControlTemplate>
                                                        <dxgr:BandsColumnHeadersPanel
                                                            x:Name="fixedLeftBandsColumnHeadersPanel"
                                                            KeyboardNavigation.TabNavigation="Contained"
                                                            dxgr:GridColumn.HeaderPresenterType="Headers"
                                                            Background="Transparent"
                                                            Bands="{Binding Path=View.DataControl.BandsLayout.FixedLeftVisibleBands}">
                                                            <dx:DragManager.DropTargetFactory>
                                                                <dxgcore:BandedViewColumnHeaderDropTargetFactory FixedStyle="Left" />
                                                            </dx:DragManager.DropTargetFactory>
                                                        </dxgr:BandsColumnHeadersPanel>
                                                    </ControlTemplate>
                                                </dxgr:BandedViewHeaderItemsControl.ItemsPanel>
                                            </dxgr:BandedViewHeaderItemsControl>
                                        </dxgr:GridScrollablePart.FixedLeftContent>
                                        <dxgr:GridScrollablePart.FixedRightContent>
                                            <dxgr:BandedViewHeaderItemsControl
                                                dxgr:GridColumn.HeaderPresenterType="Headers"
                                                dxgr:GridControl.CurrentView="{Binding Path=View}"
                                                Focusable="False"
                                                ItemsSource="{Binding Path=FixedRightCellData}">
                                                <dxgr:BandedViewHeaderItemsControl.ItemsPanel>
                                                    <ControlTemplate>
                                                        <dxgr:BandsColumnHeadersPanel
                                                            x:Name="fixedRightBandsColumnHeadersPanel"
                                                            KeyboardNavigation.TabNavigation="Contained"
                                                            dxgr:GridColumn.HeaderPresenterType="Headers"
                                                            Background="Transparent"
                                                            Bands="{Binding Path=View.DataControl.BandsLayout.FixedRightVisibleBands}">
                                                            <dx:DragManager.DropTargetFactory>
                                                                <dxgcore:BandedViewColumnHeaderDropTargetFactory FixedStyle="Right" />
                                                            </dx:DragManager.DropTargetFactory>
                                                        </dxgr:BandsColumnHeadersPanel>
                                                    </ControlTemplate>
                                                </dxgr:BandedViewHeaderItemsControl.ItemsPanel>
                                            </dxgr:BandedViewHeaderItemsControl>
                                        </dxgr:GridScrollablePart.FixedRightContent>
                                        <dxgr:GridScrollablePart.FixedNoneContent>
                                            <dxgr:BandedViewHeaderItemsControl
                                                dxgr:GridColumn.HeaderPresenterType="Headers"
                                                dxgr:GridControl.CurrentView="{Binding Path=View}"
                                                Focusable="False"
                                                ItemsSource="{Binding Path=FixedNoneCellData}">
                                                <dxgr:BandedViewHeaderItemsControl.ItemsPanel>
                                                    <ControlTemplate>
                                                        <dxgr:BandsColumnHeadersPanel
                                                            x:Name="bandsColumnHeadersPanel"
                                                            KeyboardNavigation.TabNavigation="Contained"
                                                            dxgr:GridColumn.HeaderPresenterType="Headers"
                                                            Background="Transparent"
                                                            Bands="{Binding Path=View.DataControl.BandsLayout.FixedNoneVisibleBands}">
                                                            <dx:DragManager.DropTargetFactory>
                                                                <dxgcore:BandedViewColumnHeaderDropTargetFactory FixedStyle="None" />
                                                            </dx:DragManager.DropTargetFactory>
                                                        </dxgr:BandsColumnHeadersPanel>
                                                    </ControlTemplate>
                                                </dxgr:BandedViewHeaderItemsControl.ItemsPanel>
                                            </dxgr:BandedViewHeaderItemsControl>
                                        </dxgr:GridScrollablePart.FixedNoneContent>
                                    </dxgr:GridScrollablePart>
                                </ControlTemplate>
                            </dxgr:BandedViewContentSelector.BandedViewContent>
                        </dxgr:BandedViewContentSelector>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BandsContainerControl.DefaultStyleBase" TargetType="{x:Type dxgr:BandsContainerControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxgr:BandsContainerControl}">
                    <Grid x:Name="PART_Root">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <dxgr:IndicatorColumnHeader
                            x:Name="PART_Indicator"
                            Width="{Binding Path=IndicatorHeaderWidth}"
                            dxgr:GridControl.CurrentView="{Binding}"
                            ColumnPosition="Left"
                            HasBottomElement="True"
                            HasTopElement="False"
                            Visibility="{Binding Path=DataControl.BandsLayout.ShowIndicator, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <dxgr:GridViewHitInfoBase.HitTestAcceptor>
                                <dxght:BandButtonTableViewHitTestAcceptor />
                            </dxgr:GridViewHitInfoBase.HitTestAcceptor>
                        </dxgr:IndicatorColumnHeader>
                        <dxgr:ExpandButtonColumnHeader
                            Grid.Column="1"
                            Width="{Binding ActualExpandDetailHeaderWidth}"
                            ColumnPosition="{Binding ExpandColumnPosition}"
                            HasBottomElement="True"
                            Visibility="{Binding ActualShowDetailHeader, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        <dxgr:GridScrollablePart
                            Grid.Column="2"
                            dxgr:GridControl.CurrentView="{Binding}"
                            FixedColumnsDelimiterTemplate="{DynamicResource {dxgt:LWKey GridColumnHeader.FixedColumnsDelimiterTemplate}}"
                            FixedLeftVisibleColumns="{Binding Path=DataControl.BandsLayout.FixedLeftVisibleBands}"
                            FixedLineWidth="{Binding Path=FixedLineWidth}"
                            FixedNoneContentWidth="{Binding Path=FixedNoneContentWidth}"
                            FixedRightVisibleColumns="{Binding Path=DataControl.BandsLayout.FixedRightVisibleBands}"
                            ScrollingMargin="{Binding Path=ScrollingHeaderVirtualizationMargin}">
                            <dxgr:GridScrollablePart.FitContent>
                                <dxgr:FitColumnHeader ColumnPosition="Right" HasBottomElement="True" HasTopElement="False" />
                            </dxgr:GridScrollablePart.FitContent>
                            <dxgr:GridScrollablePart.FixedLeftContent>
                                <dxgr:BandsPanel x:Name="fixedLeftBandsPanel" dxgr:GridControl.CurrentView="{Binding}" Bands="{Binding Path=DataControl.BandsLayout.FixedLeftVisibleBands}">
                                    <dx:DragManager.DropTargetFactory>
                                        <dxgcore:BandedViewBandHeaderDropTargetFactory FixedStyle="Left" />
                                    </dx:DragManager.DropTargetFactory>
                                </dxgr:BandsPanel>
                            </dxgr:GridScrollablePart.FixedLeftContent>
                            <dxgr:GridScrollablePart.FixedRightContent>
                                <dxgr:BandsPanel x:Name="fixedRightBandsPanel" dxgr:GridControl.CurrentView="{Binding}" Bands="{Binding Path=DataControl.BandsLayout.FixedRightVisibleBands}">
                                    <dx:DragManager.DropTargetFactory>
                                        <dxgcore:BandedViewBandHeaderDropTargetFactory FixedStyle="Right" />
                                    </dx:DragManager.DropTargetFactory>
                                </dxgr:BandsPanel>
                            </dxgr:GridScrollablePart.FixedRightContent>
                            <dxgr:GridScrollablePart.FixedNoneContent>
                                <dxgr:BandsPanel
                                    x:Name="bandsPanel"
                                    dxgr:GridControl.CurrentView="{Binding}"
                                    AllowVirtualization="True"
                                    Bands="{Binding Path=DataControl.BandsLayout.FixedNoneVisibleBands}">
                                    <dx:DragManager.DropTargetFactory>
                                        <dxgcore:BandedViewBandHeaderDropTargetFactory FixedStyle="None" />
                                    </dx:DragManager.DropTargetFactory>
                                </dxgr:BandsPanel>
                            </dxgr:GridScrollablePart.FixedNoneContent>
                        </dxgr:GridScrollablePart>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GroupValueContentPresenter.DefaultStyleBase" TargetType="dxgr:GroupValueContentPresenter">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupValuePresenterMargin}}" />
    </Style>
    <Style x:Key="NoRecordsControl.DefaultStyleBase" TargetType="{x:Type dxgr:NoRecordsControl}">
        <Setter Property="DataControl" Value="{Binding Path=(dxgr:GridControl.CurrentView).DataControl, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Opacity" Value="0.62" />
        <Setter Property="Foreground" Value="{DynamicResource {dxgt:LWKey TableView.NoRecordsForeground}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxgr:NoRecordsControl}">
                    <TextBlock x:Name="noRecordsTxt" Text="{TemplateBinding NoRecordsFoundText}" />
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding NoRecords, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter TargetName="noRecordsTxt" Property="Text" Value="{Binding NoRecordsText, RelativeSource={RelativeSource TemplatedParent}}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExtendedColumnChooserRowMarginControl.DefaultStyleBase" TargetType="{x:Type dxgr:ExtendedColumnChooserRowMarginControl}">
        <Setter Property="Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.TextUnfocusedBrush}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid x:Name="PART_RootGrid" Background="{DynamicResource {dxgt:LWKey TreeListView.RowMarginBackgroundBrush}}">
                        <Path x:Name="PART_OffsetPath" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" />
                        <Path x:Name="PART_TreeLinePath" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" />
                        <dxgr:IndentsPanel HorizontalAlignment="Right" RowIndent="{Binding View.RowIndent}">
                            <dxgr:TreeListNodeExpandButton
                                x:Name="PART_ExpandButton"
                                HorizontalAlignment="Left"
                                Command="{Binding View.Commands.ChangeNodeExpanded}"
                                CommandParameter="{Binding RowHandle.Value}"
                                IsEnabled="{Binding IsButtonVisible}">
                                <dxgr:TreeListNodeExpandButton.IsExpandButtonVisible>
                                    <MultiBinding>
                                        <Binding Path="IsButtonVisible" />
                                        <Binding Path="Row" />
                                        <MultiBinding.Converter>
                                            <dxgr:ExtendedColumnChooserExpandButtonVisibleConverter />
                                        </MultiBinding.Converter>
                                    </MultiBinding>
                                </dxgr:TreeListNodeExpandButton.IsExpandButtonVisible>
                                <dxgr:TreeListNodeExpandButton.IsChecked>
                                    <MultiBinding>
                                        <Binding Path="IsButtonVisible" />
                                        <Binding Path="IsExpanded" />
                                        <MultiBinding.Converter>
                                            <dxgr:ExtendedColumnChooserExpandButtonCheckedConverter />
                                        </MultiBinding.Converter>
                                    </MultiBinding>
                                </dxgr:TreeListNodeExpandButton.IsChecked>
                            </dxgr:TreeListNodeExpandButton>
                            <dxe:CheckEdit
                                x:Name="PART_NodeCheckBox"
                                Focusable="False"
                                IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                IsEnabled="{Binding IsCheckBoxEnabled}"
                                IsThreeState="{Binding View.AllowIndeterminateCheckState}"
                                Visibility="{Binding IsCheckBoxVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <dxgr:GridViewHitInfoBase.HitTestAcceptor>
                                    <dxgtl:TreeListNodeCheckboxHitTestAcceptor />
                                </dxgr:GridViewHitInfoBase.HitTestAcceptor>
                            </dxe:CheckEdit>
                            <dx:MeasurePixelSnapper Visibility="{Binding IsImageVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <dx:DXImage
                                    x:Name="PART_NodeImage"
                                    Width="{Binding Path=View.NodeImageSize.Width}"
                                    Height="{Binding Path=View.NodeImageSize.Height}"
                                    Focusable="False"
                                    Source="{Binding Image, UpdateSourceTrigger=PropertyChanged}">
                                    <dxgr:GridViewHitInfoBase.HitTestAcceptor>
                                        <dxgtl:TreeListNodeImageHitTestAcceptor />
                                    </dxgr:GridViewHitInfoBase.HitTestAcceptor>
                                    <RenderOptions.BitmapScalingMode>NearestNeighbor</RenderOptions.BitmapScalingMode>
                                </dx:DXImage>
                            </dx:MeasurePixelSnapper>
                        </dxgr:IndentsPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=(dxgr:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter TargetName="PART_RootGrid" Property="Background" Value="{Binding Path=(dxgr:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.Background), RelativeSource={RelativeSource Self}}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExtendedColumnChooserControl.DefaultStyleBase" TargetType="{x:Type dxgr:ExtendedColumnChooserControl}">
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey ExtendedColumnChooser.Template}}" />
    </Style>
    <Style x:Key="ExcelColumnFilterContentPresenter.DefaultStyleBase" TargetType="{x:Type dxgr:ExcelColumnFilterContentPresenter}">
        <Setter Property="ContentTemplate" Value="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.Template}}" />
    </Style>
    <Style x:Key="ExcelCustomFilterOperandLineControl.DefaultStyleBase" TargetType="{x:Type dxgr:ExcelCustomFilterOperandLineControl}">
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Margin" Value="0,0,0,4" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="dx:FocusHelper2.Focusable" Value="False" />
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey ExcelColumnFilterPopup.CustomFilterOperandLineTemplate}}" />
    </Style>
    <Style x:Key="BandHeaderControl.DefaultStyleBase" BasedOn="{StaticResource GridColumnHeaderBaseStyle}" TargetType="{x:Type dxgr:BandHeaderControl}" />
    <Style x:Key="FitColumnHeader.DefaultStyleBase" BasedOn="{StaticResource GridColumnHeaderBaseStyle}" TargetType="{x:Type dxgr:FitColumnHeader}">
        <Setter Property="dx:DragManager.DropTargetFactory">
            <Setter.Value>
                <dxgcore:FitColumnHeaderDropTargetFactory />
            </Setter.Value>
        </Setter>
        <Setter Property="dxgr:GridColumn.HeaderPresenterType" Value="Headers" />
    </Style>
    <Style x:Key="IndicatorColumnHeader.DefaultStyleBase" BasedOn="{StaticResource GridColumnHeaderBaseStyle}" TargetType="{x:Type dxgr:IndicatorColumnHeader}">
        <Setter Property="dx:DragManager.DropTargetFactory">
            <Setter.Value>
                <dxgcore:IndicatorColumnHeaderDropTargetFactory />
            </Setter.Value>
        </Setter>
        <Setter Property="dxgr:GridColumn.HeaderPresenterType" Value="Headers" />
    </Style>
    <Style x:Key="ExpandButtonColumnHeader.DefaultStyleBase" BasedOn="{StaticResource GridColumnHeaderBaseStyle}" TargetType="{x:Type dxgr:ExpandButtonColumnHeader}">
        <Setter Property="dx:DragManager.DropTargetFactory">
            <Setter.Value>
                <dxgcore:IndicatorColumnHeaderDropTargetFactory />
            </Setter.Value>
        </Setter>
        <Setter Property="dxgr:GridColumn.HeaderPresenterType" Value="Headers" />
    </Style>
    <Style x:Key="GridColumnHeader.DefaultStyleBase" BasedOn="{StaticResource GridColumnHeaderStyle}" TargetType="{x:Type dxgr:GridColumnHeader}" />
    <Style x:Key="DragGridColumnHeader.DefaultStyleBase" BasedOn="{StaticResource GridColumnHeaderBaseStyle}" TargetType="{x:Type dxgr:DragGridColumnHeader}">
        <Setter Property="Opacity" Value="0.5" />
        <Setter Property="dxgr:GridColumn.HeaderPresenterType" Value="{Binding Path=(dxgr:GridColumn.HeaderPresenterType), RelativeSource={RelativeSource TemplatedParent}}" />
    </Style>
    <Style x:Key="CardCellContentPresenter.DefaultStyleBase" TargetType="{x:Type dxgr:CardCellContentPresenter}">
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey CardTemplates.CellContentPresenterTemplate}}" />
        <Setter Property="RowData" Value="{Binding RowData}" />
        <Setter Property="Margin" Value="{DynamicResource {dxgt:LWKey CardTemplates.CellContentPresenterMargin}}" />
        <Setter Property="dxgr:GridViewHitInfoBase.HitTestAcceptor">
            <Setter.Value>
                <dxght:RowCellTableViewHitTestAcceptor />
            </Setter.Value>
        </Setter>
        <Setter Property="Border.CornerRadius" Value="{DynamicResource {dxgt:LWKey CardTemplates.CellCornerRadius}}" />
        <Setter Property="dxgcore:CellContentPresenter.BorderThickness" Value="{DynamicResource {dxgt:LWKey CardTemplates.CellBorderThickness}}" />
        <Style.Triggers>
            <Trigger Property="dxgr:GridViewBase.IsFocusedCell" Value="true">
                <Setter Property="dxgcore:CellContentPresenter.Background" Value="{DynamicResource {dxgt:LWKey CardTemplates.CellFocusedBackground}}" />
                <Setter Property="dxgcore:CellContentPresenter.BorderThickness" Value="{DynamicResource {dxgt:LWKey CardTemplates.CellFocusedBorderThickness}}" />
                <Setter Property="dxgcore:CellContentPresenter.BorderBrush" Value="{DynamicResource {dxgt:LWKey CardTemplates.CellFocusedBrush}}" />
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:LWKey CardTemplates.CellFocusedForeground}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="GroupCardRow.DefaultStyleBase" TargetType="{x:Type dxgr:GroupCardRow}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey CardView.GroupRowControlTemplate}}" />
        <Setter Property="dxgr:GridViewHitInfoBase.HitTestAcceptor">
            <Setter.Value>
                <dxght:GroupRowTableViewHitTestAcceptor />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GridRowContent.DefaultStyleBase" TargetType="{x:Type dxgr:GridRowContent}">
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey GridRow.RowControlContainerTemplate}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:LWKey GridRow.GridDataRowDelimiterBrush}}" />
    </Style>
    <Style x:Key="GroupGridRowContent.DefaultStyleBase" TargetType="{x:Type dxgr:GroupGridRowContent}">
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupRowContentTemplate}}" />
    </Style>
    <Style x:Key="GridCardContentPresenter.DefaultStyleBase" TargetType="{x:Type dxgr:GridCardContentPresenter}">
        <Setter Property="Content" Value="{Binding}" />
        <Setter Property="ContentTemplateSelector" Value="{Binding Path=(dxgr:GridControl.ActiveView).ActualCardTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
    </Style>
    <Style x:Key="GridCardHeaderContentPresenter.DefaultStyleBase" TargetType="{x:Type dxgr:GridCardHeaderContentPresenter}">
        <Setter Property="Content" Value="{Binding Path=CardHeaderData}" />
        <Setter Property="ContentTemplateSelector" Value="{Binding Path=(dxgr:GridControl.ActiveView).ActualCardHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
    </Style>
    <Style x:Key="GridCard.DefaultStyleBase" TargetType="{x:Type dxgr:GridCard}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Grid.IsSharedSizeScope" Value="True" />
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey GridCard.ControlTemplate}}" />
        <Setter Property="dxgr:GridViewHitInfoBase.HitTestAcceptor">
            <Setter.Value>
                <dxght:RowTableViewHitTestAcceptor />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GridCardExpandButton.DefaultStyleBase" TargetType="{x:Type dxgr:GridCardExpandButton}">
        <Setter Property="ToolTip">
            <Setter.Value>
                <Binding
                    Converter="{StaticResource LocalizationStringValueConverter}"
                    ConverterParameter="GridCardCollapseButtonTooltip"
                    Path="(dxgr:GridControl.ActiveView).LocalizationDescriptor"
                    RelativeSource="{RelativeSource Self}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <dxgr:GridToggleStateButton
                        dx:DataObjectBase.DataObject="{Binding}"
                        dx:DataObjectBase.NeedsResetEvent="True"
                        ClickMode="Press"
                        Command="{x:Static dxgr:GridCommands.ChangeCardExpanded}"
                        CommandParameter="{Binding RowHandle.Value}"
                        IsChecked="{Binding Path=IsExpanded, Mode=OneWay}"
                        Template="{DynamicResource {dxgt:LWKey GridCard.ExpandButtonTemplate}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="dxgr:GridViewHitInfoBase.HitTestAcceptor">
            <Setter.Value>
                <dxght:CardHeaderButtonCardViewHitTestAcceptor />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsExpanded}" Value="false">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <Binding
                            Converter="{StaticResource LocalizationStringValueConverter}"
                            ConverterParameter="GridCardExpandButtonTooltip"
                            Path="(dxgr:GridControl.ActiveView).LocalizationDescriptor"
                            RelativeSource="{RelativeSource Self}" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="CardsResizer.DefaultStyleBase" TargetType="{x:Type dxgr:CardsResizer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <ContentPresenter ContentTemplate="{Binding Path=SeparatorTemplate, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxgr:CardView}}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="dxgr:GridViewHitInfoBase.HitTestAcceptor">
            <Setter.Value>
                <dxght:SeparatorCardViewHitTestAcceptor />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Orientation}" Value="Horizontal">
                <Setter Property="Width" Value="{Binding Path=(dxgr:GridControl.ActiveView).SeparatorThickness, RelativeSource={RelativeSource TemplatedParent}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Orientation}" Value="Vertical">
                <Setter Property="Height" Value="{Binding Path=(dxgr:GridControl.ActiveView).SeparatorThickness, RelativeSource={RelativeSource TemplatedParent}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Orientation}" Value="Vertical">
                <Setter Property="Width" Value="{Binding Length}" />
                <Setter Property="Cursor" Value="SizeNS" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Orientation}" Value="Horizontal">
                <Setter Property="Height" Value="{Binding Length}" />
                <Setter Property="Cursor" Value="SizeWE" />
            </DataTrigger>
            <Trigger Property="dxgr:CardView.IsResizingEnabled" Value="false">
                <Setter Property="IsHitTestVisible" Value="false" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="GridCardHeaderControl.DefaultStyleBase" TargetType="{x:Type dxgr:GridCardHeaderControl}">
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey GridCard.HeaderPanelTemplate}}" />
        <Setter Property="dxgr:GridViewHitInfoBase.HitTestAcceptor">
            <Setter.Value>
                <dxght:CardHeaderCardViewHitTestAcceptor />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ColumnChooserControl.DefaultStyleBase" TargetType="{x:Type dxgr:ColumnChooserControl}">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxgr:GridColumnHeader
                        Margin="1,1,1,0"
                        dxb:BarManager.DXContextMenu="{Binding Path=View.DataControlMenu}"
                        dxgr:GridColumn.HeaderPresenterType="ColumnChooser"
                        dxgr:GridColumnHeader.GridColumn="{Binding}"
                        dxgr:GridPopupMenu.GridMenuType="Column"
                        ColumnPosition="Standalone"
                        DataContext="{Binding Path=Content.Column, RelativeSource={RelativeSource TemplatedParent}}"
                        SnapsToDevicePixels="True" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxgr:ColumnChooserControl}">
                    <ScrollViewer dx:ScrollBarExtensions.ScrollViewerOrientation="Vertical" Background="{DynamicResource {dxgt:LWKey TableView.ColumnChooserBackgroundBrush}}" VerticalScrollBarVisibility="Auto">
                        <Grid>
                            <dxgr:ColumnItemsControl ItemTemplate="{TemplateBinding ItemTemplate}" ItemsSource="{TemplateBinding Columns}" Visibility="{Binding Columns, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ObjectToVisibilityConverter}}">
                                <dxgr:ColumnItemsControl.ItemsPanel>
                                    <ControlTemplate>
                                        <StackPanel Margin="1,1,1,2" dxgr:GridColumn.HeaderPresenterType="ColumnChooser" Orientation="Vertical" />
                                    </ControlTemplate>
                                </dxgr:ColumnItemsControl.ItemsPanel>
                            </dxgr:ColumnItemsControl>
                            <TextBlock Style="{DynamicResource {dxgt:LWKey TableView.ColumnChooserDragTextStyle}}" Text="{TemplateBinding DragText}" Visibility="{Binding Columns, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ObjectToVisibilityConverterInverted}}" />
                        </Grid>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="dx:DragManager.DropTargetFactory">
            <Setter.Value>
                <dxgcore:ColumnChooserDropTargetFactory />
            </Setter.Value>
        </Setter>
        <Setter Property="dxgr:GridColumn.HeaderPresenterType" Value="ColumnChooser" />
    </Style>
    <Style x:Key="BestFitControl.DefaultStyleBase" TargetType="{x:Type dxgr:BestFitControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxgr:BestFitControl}">
                    <dxgr:GridRowContent Style="{Binding Path=RowData.View.RowStyle, RelativeSource={RelativeSource TemplatedParent}}">
                        <dxgr:GridRowContent.Template>
                            <ControlTemplate TargetType="{x:Type dxgr:GridRowContent}">
                                <ContentPresenter />
                            </ControlTemplate>
                        </dxgr:GridRowContent.Template>
                        <dxgr:BestFitGridCellContentPresenter
                            x:Name="PART_CellContentPresenter"
                            Column="{TemplateBinding Column}"
                            HasRightSibling="True"
                            IsFocusedCell="{TemplateBinding IsFocusedCell}"
                            RowData="{Binding RowData, RelativeSource={RelativeSource TemplatedParent}}" />
                    </dxgr:GridRowContent>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BestFitGroupControl.DefaultStyleBase" TargetType="{x:Type dxgr:BestFitGroupControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxgr:BestFitGroupControl}">
                    <dxgr:GroupGridRowContent Style="{Binding Path=RowData.View.GroupRowStyle, RelativeSource={RelativeSource TemplatedParent}}">
                        <dxgr:GroupGridRowContent.Template>
                            <ControlTemplate TargetType="{x:Type dxgr:GroupGridRowContent}">
                                <ContentPresenter />
                            </ControlTemplate>
                        </dxgr:GroupGridRowContent.Template>
                        <dx:DXDockPanel>
                            <dx:DXDockPanel Visibility="{Binding IsFirstColumn, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                                <dxgr:GridGroupExpandButton
                                    x:Name="Toggle"
                                    Margin="{DynamicResource {dxgt:LWKey GroupRow.ExpandButtonMargin}}"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center" />
                                <dxe:CheckEdit
                                    x:Name="PART_CheckBoxRowSelector"
                                    Margin="{DynamicResource {dxgt:LWKey GroupRow.CheckBoxSelectorMargin}}"
                                    Padding="0"
                                    VerticalAlignment="Center"
                                    Visibility="{Binding Path=RowData.View.ActualShowCheckBoxSelectorInGroupRow, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                                <dxgr:GroupValueContentPresenter x:Name="groupValueContentPresenter" Content="{Binding Path=RowData.GroupValue, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplateSelector="{Binding Path=Column.ActualGroupValueTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
                            </dx:DXDockPanel>
                            <dxgr:GroupColumnSummaryControl x:Name="PART_SummaryControlPresenter" />
                            <dxgr:GroupBandSummaryControl x:Name="PART_BandSummaryControlPresenter" />
                        </dx:DXDockPanel>
                    </dxgr:GroupGridRowContent>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BestFitGroupFooterSummaryControl.DefaultStyleBase" TargetType="{x:Type dxgr:BestFitGroupFooterSummaryControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxgr:BestFitGroupFooterSummaryControl}">
                    <dx:DataContentPresenter Content="{Binding}" Style="{Binding Path=View.GroupFooterRowStyle}">
                        <dx:DataContentPresenter.ContentTemplate>
                            <DataTemplate>
                                <dxgr:GroupFooterSummaryControl DataContext="{Binding SummaryData}" />
                            </DataTemplate>
                        </dx:DataContentPresenter.ContentTemplate>
                    </dx:DataContentPresenter>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GridTotalSummary.DefaultStyleBase" TargetType="{x:Type dxgr:GridTotalSummary}">
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey TotalSummary.TotalSummaryControlTemplate}}" />
    </Style>
    <Style x:Key="TableView.DefaultStyleBase" BasedOn="{StaticResource GridViewBaseStyle}" TargetType="{x:Type dxgr:TableView}">
        <Setter Property="Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.TextUnfocusedBrush}}" />
        <Setter Property="BandHeaderTemplate" Value="{DynamicResource {dxgt:LWKey GridColumnHeader.ContentTemplate}}" />
        <Setter Property="PrintRowTemplate" Value="{DynamicResource {dxgt:LWKey TableView.PrintRowTemplate}}" />
        <Setter Property="PrintHeaderTemplate" Value="{DynamicResource {dxgt:LWKey TableView.PrintHeaderTemplate}}" />
        <Setter Property="PrintFooterTemplate" Value="{DynamicResource {dxgt:LWKey TableView.PrintFooterTemplate}}" />
        <Setter Property="PrintFixedFooterTemplate" Value="{DynamicResource {dxgt:LWKey TableView.PrintFixedFooterTemplate}}" />
        <Setter Property="PrintGroupRowTemplate" Value="{DynamicResource {dxgt:LWKey TableView.PrintGroupRowTemplate}}" />
        <Setter Property="PrintGroupFooterTemplate" Value="{DynamicResource {dxgt:LWKey TableView.PrintGroupFooterTemplate}}" />
        <Setter Property="PrintColumnHeaderStyle" Value="{DynamicResource {dxgt:LWKey TableView.DefaultPrintHeaderStyle}}" />
        <Setter Property="PrintBandHeaderStyle" Value="{DynamicResource {dxgt:LWKey TableView.DefaultPrintHeaderStyle}}" />
        <Setter Property="PrintTotalSummaryStyle" Value="{DynamicResource {dxgt:LWKey TableView.DefaultPrintTotalSummaryStyle}}" />
        <Setter Property="PrintFixedTotalSummaryStyle" Value="{DynamicResource {dxgt:LWKey TableView.DefaultPrintFixedTotalSummaryStyle}}" />
        <Setter Property="PrintGroupRowStyle" Value="{DynamicResource {dxgt:LWKey TableView.DefaultPrintGroupRowStyle}}" />
        <Setter Property="PrintGroupFooterStyle" Value="{DynamicResource {dxgt:LWKey TableView.DefaultPrintGroupFooterStyle}}" />
        <Setter Property="PrintCellStyle" Value="{DynamicResource {dxgt:LWKey TableView.DefaultPrintCellStyle}}" />
        <Setter Property="PrintRowIndentStyle" Value="{DynamicResource {dxgt:LWKey TableView.DefaultPrintRowIndentStyle}}" />
        <Setter Property="AutoFilterRowCellStyle" Value="{DynamicResource {dxgt:LWKey GridRow.CellStyle}}" />
        <Setter Property="NewItemRowCellStyle" Value="{DynamicResource {dxgt:LWKey GridRow.CellStyle}}" />
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey TableView.ControlTemplate}}" />
        <Setter Property="RowDecorationTemplate" Value="{DynamicResource {dxgt:LWKey GridRow.RowDecorationTemplate}}" />
        <Setter Property="RowIndicatorContentTemplate" Value="{DynamicResource {dxgt:LWKey RowIndicator.IconPresenterTemplate}}" />
        <Setter Property="DefaultDataRowTemplate" Value="{DynamicResource {dxgt:LWKey GridRow.DataRowTemplate}}" />
        <Setter Property="UseGroupShadowIndent" Value="{DynamicResource {dxgt:LWKey TableView.UseGroupShadowIndent}}" />
        <Setter Property="DataRowTemplate" Value="{DynamicResource {dxgt:LWKey GridRow.DataRowTemplate}}" />
        <Setter Property="LeftDataAreaIndent" Value="{DynamicResource {dxgt:LWKey TableView.LeftDataAreaIndent}}" />
        <Setter Property="RightDataAreaIndent" Value="{DynamicResource {dxgt:LWKey TableView.RightDataAreaIndent}}" />
        <Setter Property="LeftGroupAreaIndent" Value="{DynamicResource {dxgt:LWKey TableView.LeftGroupAreaIndent}}" />
        <Setter Property="RightGroupAreaIndent" Value="{DynamicResource {dxgt:LWKey TableView.RightGroupAreaIndent}}" />
        <Setter Property="FixedLineWidth" Value="{DynamicResource {dxgt:LWKey TableView.FixedLineWidth}}" />
        <Setter Property="IndicatorWidth" Value="{DynamicResource {dxgt:LWKey TableView.IndicatorWidth}}" />
        <Setter Property="ExpandDetailButtonWidth" Value="{DynamicResource {dxgt:LWKey TableView.ExpandDetailButtonWidth}}" />
        <!--<Setter Property="DetailMargin" Value="{DynamicResource {dxgt:LWKey TableView.DetailMargin}}" /> Uncomment if Q448622 was implemented-->
        <Setter Property="ExpandStoryboard" Value="{DynamicResource {dxgt:LWKey GroupRow.ExpandingStoryboard}}" />
        <Setter Property="CollapseStoryboard" Value="{DynamicResource {dxgt:LWKey GroupRow.CollapsingStoryboard}}" />
        <Setter Property="FocusedRowBorderTemplate" Value="{DynamicResource {dxgt:LWKey GridControl.FocusedRowBorderTemplate}}" />
        <Setter Property="GroupColumnSummaryItemTemplate" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupColumnSummaryItemTemplate}}" />
        <Setter Property="ColumnBandChooserTemplate" Value="{DynamicResource {dxgt:LWKey TableView.ColumnBandChooserTemplate}}" />
        <Setter Property="RowMinHeight" Value="{DynamicResource {dxgt:LWKey GridRow.RowMinHeight}}" />
        <Setter Property="RowStyle" Value="{DynamicResource {dxgt:LWKey GridRow.RowStyle}}" />
        <Setter Property="PredefinedFormats" Value="{DynamicResource {dxt:LWKey ConditionalFormatting.PredefinedFormats}}" />
        <Setter Property="PredefinedColorScaleFormats" Value="{DynamicResource {dxt:LWKey ConditionalFormatting.PredefinedColorScaleFormats}}" />
        <Setter Property="PredefinedDataBarFormats" Value="{DynamicResource {dxt:LWKey ConditionalFormatting.PredefinedDataBarFormats}}" />
        <Setter Property="PredefinedIconSetFormats" Value="{DynamicResource {dxt:LWKey ConditionalFormatting.PredefinedIconSetFormats}}" />
        <Setter Property="FormatConditionDialogServiceTemplate" Value="{DynamicResource {dxt:LWKey ConditionalFormatting.ApplyFormatConditionDialogTemplate}}" />
        <Setter Property="ConditionalFormattingManagerServiceTemplate" Value="{DynamicResource {dxt:LWKey ConditionalFormatting.ConditionalFormattingManagerTemplate}}" />
        <Setter Property="EditFormDialogServiceTemplate" Value="{DynamicResource {dxgt:LWKey TableView.EditFormDialogServiceTemplate}}" />
        <Setter Property="EditFormTemplate" Value="{DynamicResource {dxgt:LWKey TableView.EditFormContentTemplate}}" />
        <Setter Property="GroupFooterRowStyle" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupFooterRowStyle}}" />
        <Setter Property="GroupFooterRowTemplate" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupFooterRowTemplate}}" />
        <Setter Property="GroupFooterSummaryContentStyle" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupFooterSummaryContentStyle}}" />
        <Setter Property="GroupFooterSummaryItemTemplate" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupFooterSummaryItemTemplate}}" />
        <Setter Property="GroupBandSummaryContentStyle" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupBandSummaryContentStyle}}" />
        <Setter Property="CheckBoxSelectorColumnHeaderTemplate" Value="{DynamicResource {dxgt:LWKey GridColumnHeader.CheckBoxSelectorColumnHeaderTemplate}}" />
        <Setter Property="EvenRowBackground" Value="{DynamicResource {dxgt:LWKey GridRow.EvenRowBackgroundBrush}}" />
        <Setter Property="UpdateRowButtonsTemplate" Value="{DynamicResource {dxgt:LWKey GridRow.DefaultUpdateRowButtonsControlTemplate}}" />
        <Setter Property="UpdateRowRectangleStyle" Value="{DynamicResource {dxgt:LWKey GridControl.UpdateRowRectangleStyle}}" />
        <Setter Property="ScrollBarAnnotationsAppearance">
            <Setter.Value>
                <dxgcore:ScrollBarAnnotationsAppearance />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="ExpandDetailButtonWidth" Value="{DynamicResource {dxgt:LWKey TableView.ExpandDetailButtonWidthTouch}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TreeListView.DefaultStyleBase" BasedOn="{StaticResource DataViewBaseStyle}" TargetType="{x:Type dxgr:TreeListView}">
        <Setter Property="Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.TextUnfocusedBrush}}" />
        <Setter Property="BandHeaderTemplate" Value="{DynamicResource {dxgt:LWKey GridColumnHeader.ContentTemplate}}" />
        <Setter Property="PrintRowTemplate" Value="{DynamicResource {dxgt:LWKey TableView.PrintRowTemplate}}" />
        <Setter Property="PrintHeaderTemplate" Value="{DynamicResource {dxgt:LWKey TableView.PrintHeaderTemplate}}" />
        <Setter Property="PrintFooterTemplate" Value="{DynamicResource {dxgt:LWKey TableView.PrintFooterTemplate}}" />
        <Setter Property="PrintNodeFooterTemplate" Value="{DynamicResource {dxgt:LWKey TableView.PrintGroupFooterTemplate}}" />
        <Setter Property="PrintNodeFooterStyle" Value="{DynamicResource {dxgt:LWKey TableView.DefaultPrintGroupFooterStyle}}" />
        <Setter Property="PrintFixedFooterTemplate" Value="{DynamicResource {dxgt:LWKey TableView.PrintFixedFooterTemplate}}" />
        <Setter Property="PrintColumnHeaderStyle" Value="{DynamicResource {dxgt:LWKey TableView.DefaultPrintHeaderStyle}}" />
        <Setter Property="PrintBandHeaderStyle" Value="{DynamicResource {dxgt:LWKey TableView.DefaultPrintHeaderStyle}}" />
        <Setter Property="PrintTotalSummaryStyle" Value="{DynamicResource {dxgt:LWKey TableView.DefaultPrintTotalSummaryStyle}}" />
        <Setter Property="PrintFixedTotalSummaryStyle" Value="{DynamicResource {dxgt:LWKey TableView.DefaultPrintFixedTotalSummaryStyle}}" />
        <Setter Property="PrintCellStyle" Value="{DynamicResource {dxgt:LWKey TableView.DefaultPrintCellStyle}}" />
        <Setter Property="PrintRowIndentStyle" Value="{DynamicResource {dxgt:LWKey TreeListView.DefaultPrintRowIndentStyle}}" />
        <Setter Property="AutoFilterRowCellStyle" Value="{DynamicResource {dxgt:LWKey GridRow.CellStyle}}" />
        <Setter Property="RowIndent" Value="{DynamicResource {dxgt:LWKey TreeListView.RowIndent}}" />
        <Setter Property="RowPresenterMargin" Value="{DynamicResource {dxgt:LWKey TableView.RowPresenterGridMargin}}" />
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey TableView.ControlTemplate}}" />
        <Setter Property="RowDecorationTemplate" Value="{DynamicResource {dxgt:LWKey GridRow.RowDecorationTemplate}}" />
        <Setter Property="RowIndicatorContentTemplate" Value="{DynamicResource {dxgt:LWKey RowIndicator.IconPresenterTemplate}}" />
        <Setter Property="DefaultDataRowTemplate" Value="{DynamicResource {dxgt:LWKey GridRow.DataRowTemplate}}" />
        <Setter Property="DataRowTemplate" Value="{DynamicResource {dxgt:LWKey GridRow.DataRowTemplate}}" />
        <Setter Property="LeftDataAreaIndent" Value="{DynamicResource {dxgt:LWKey TableView.LeftDataAreaIndent}}" />
        <Setter Property="RightDataAreaIndent" Value="{DynamicResource {dxgt:LWKey TableView.RightDataAreaIndent}}" />
        <Setter Property="FixedLineWidth" Value="{DynamicResource {dxgt:LWKey TableView.FixedLineWidth}}" />
        <Setter Property="IndicatorWidth" Value="{DynamicResource {dxgt:LWKey TableView.IndicatorWidth}}" />
        <Setter Property="FocusedRowBorderTemplate" Value="{DynamicResource {dxgt:LWKey GridControl.FocusedRowBorderTemplate}}" />
        <Setter Property="TreeLineStyle" Value="{DynamicResource {dxgt:LWKey TreeListView.DefaultTreeLineStyle}}" />
        <Setter Property="ColumnBandChooserTemplate" Value="{DynamicResource {dxgt:LWKey TableView.ColumnBandChooserTemplate}}" />
        <Setter Property="RowMinHeight" Value="{DynamicResource {dxgt:LWKey GridRow.RowMinHeight}}" />
        <Setter Property="RowStyle" Value="{DynamicResource {dxgt:LWKey GridRow.RowStyle}}" />
        <Setter Property="PredefinedFormats" Value="{DynamicResource {dxt:LWKey ConditionalFormatting.PredefinedFormats}}" />
        <Setter Property="PredefinedColorScaleFormats" Value="{DynamicResource {dxt:LWKey ConditionalFormatting.PredefinedColorScaleFormats}}" />
        <Setter Property="PredefinedDataBarFormats" Value="{DynamicResource {dxt:LWKey ConditionalFormatting.PredefinedDataBarFormats}}" />
        <Setter Property="PredefinedIconSetFormats" Value="{DynamicResource {dxt:LWKey ConditionalFormatting.PredefinedIconSetFormats}}" />
        <Setter Property="FormatConditionDialogServiceTemplate" Value="{DynamicResource {dxt:LWKey ConditionalFormatting.ApplyFormatConditionDialogTemplate}}" />
        <Setter Property="ConditionalFormattingManagerServiceTemplate" Value="{DynamicResource {dxt:LWKey ConditionalFormatting.ConditionalFormattingManagerTemplate}}" />
        <Setter Property="EvenRowBackground" Value="{DynamicResource {dxgt:LWKey GridRow.EvenRowBackgroundBrush}}" />
        <Setter Property="EditFormDialogServiceTemplate" Value="{DynamicResource {dxgt:LWKey TableView.EditFormDialogServiceTemplate}}" />
        <Setter Property="EditFormTemplate" Value="{DynamicResource {dxgt:LWKey TableView.EditFormContentTemplate}}" />
        <Setter Property="NodeFooterRowStyle" Value="{DynamicResource {dxgt:LWKey TreeListView.NodeFooterRowStyle}}" />
        <Setter Property="NodeFooterRowTemplate" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupFooterRowTemplate}}" />
        <Setter Property="NodeFooterSummaryContentStyle" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupFooterSummaryContentStyle}}" />
        <Setter Property="NodeFooterSummaryItemTemplate" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupFooterSummaryItemTemplate}}" />
        <Setter Property="UpdateRowButtonsTemplate" Value="{DynamicResource {dxgt:LWKey GridRow.DefaultUpdateRowButtonsControlTemplate}}" />
        <Setter Property="UpdateRowRectangleStyle" Value="{DynamicResource {dxgt:LWKey GridControl.UpdateRowRectangleStyle}}" />
        <Setter Property="FilteringPanelStyle" Value="{DynamicResource {dxgt:LWKey FilteringPanel.ControlStyle}}" />
        <Setter Property="ScrollBarAnnotationsAppearance">
            <Setter.Value>
                <dxgcore:ScrollBarAnnotationsAppearance />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="RowIndent" Value="{DynamicResource {dxgt:LWKey TreeListView.RowIndentTouch}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RowMarginControl.DefaultStyleBase" TargetType="{x:Type dxgr:RowMarginControl}">
        <Setter Property="Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.TextUnfocusedBrush}}" />
        <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey TreeListView.RowMarginBackgroundBrush}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid x:Name="background" Background="{TemplateBinding Background}">
                        <Path x:Name="PART_OffsetPath" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" />
                        <Path x:Name="PART_TreeLinePath" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" />
                        <dxgr:IndentsPanel x:Name="PART_IndentsPanel" HorizontalAlignment="Right" RowIndent="{Binding View.RowIndent}">
                            <dxi:AsyncButtonContentControl
                                x:Name="PART_AsyncIndicator"
                                Background="{DynamicResource {dxgt:LWKey TreeListView.RowMarginBackgroundBrush}}"
                                CancelCommand="{Binding View.TreeListCommands.CancelChildNodesFetching}"
                                CancelCommandParameter="{Binding RowHandle.Value}"
                                RetryCommand="{Binding View.TreeListCommands.ChangeNodeExpanded}"
                                RetryCommandParameter="{Binding RowHandle.Value}"
                                ShouldShowCancelButton="True"
                                Visibility="Collapsed">
                                <dxi:AsyncButtonContentControl.Width>
                                    <MultiBinding Converter="{StaticResource buttonAsyncIndicationSizeConverter}">
                                        <Binding ElementName="PART_IndentsPanel" Path="ActualWidth" />
                                        <Binding ElementName="PART_IndentsPanel" Path="ActualHeight" />
                                        <Binding ElementName="PART_ImageSnapper" Path="ActualWidth" />
                                    </MultiBinding>
                                </dxi:AsyncButtonContentControl.Width>
                                <dxi:AsyncButtonContentControl.Height>
                                    <MultiBinding Converter="{StaticResource buttonAsyncIndicationSizeConverter}">
                                        <Binding ElementName="PART_IndentsPanel" Path="ActualWidth" />
                                        <Binding ElementName="PART_IndentsPanel" Path="ActualHeight" />
                                        <Binding ElementName="PART_ImageSnapper" Path="ActualWidth" />
                                    </MultiBinding>
                                </dxi:AsyncButtonContentControl.Height>
                            </dxi:AsyncButtonContentControl>
                            <dxgr:TreeListNodeExpandButton
                                x:Name="PART_ExpandButton"
                                HorizontalAlignment="Left"
                                Command="{Binding View.Commands.ChangeNodeExpanded}"
                                CommandParameter="{Binding RowHandle.Value}"
                                IsChecked="{Binding IsExpanded}"
                                IsExpandButtonVisible="{Binding Path=IsButtonVisible}" />
                            <dxe:CheckEdit
                                x:Name="PART_NodeCheckBox"
                                Padding="0"
                                Focusable="False"
                                IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                IsEnabled="{Binding IsCheckBoxEnabled}"
                                IsThreeState="{Binding View.AllowIndeterminateCheckState}"
                                Visibility="{Binding IsCheckBoxVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <dxgr:GridViewHitInfoBase.HitTestAcceptor>
                                    <dxgtl:TreeListNodeCheckboxHitTestAcceptor />
                                </dxgr:GridViewHitInfoBase.HitTestAcceptor>
                            </dxe:CheckEdit>
                            <dx:MeasurePixelSnapper x:Name="PART_ImageSnapper" Visibility="{Binding IsImageVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <dx:DXImage
                                    x:Name="PART_NodeImage"
                                    Width="{Binding Path=View.NodeImageSize.Width}"
                                    Height="{Binding Path=View.NodeImageSize.Height}"
                                    Focusable="False"
                                    Source="{Binding Image, UpdateSourceTrigger=PropertyChanged}">
                                    <dxgr:GridViewHitInfoBase.HitTestAcceptor>
                                        <dxgtl:TreeListNodeImageHitTestAcceptor />
                                    </dxgr:GridViewHitInfoBase.HitTestAcceptor>
                                    <RenderOptions.BitmapScalingMode>NearestNeighbor</RenderOptions.BitmapScalingMode>
                                </dx:DXImage>
                            </dx:MeasurePixelSnapper>
                        </dxgr:IndentsPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ShowTreeIndentAsCellPart}" Value="true">
                <Setter Property="Background" Value="Transparent" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IndentSelectionState}" Value="Focused">
                <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey GridRow.CellBorderFocusedBrush}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IndentSelectionState}" Value="Selected">
                <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey GridRow.BorderSelectedBrush}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IndentSelectionState}" Value="FocusedAndSelected">
                <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey GridRow.BorderFocusedBrush}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxgr:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Background" Value="{Binding Path=(dxgr:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.Background), RelativeSource={RelativeSource Self}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxgr:GridControl.ActiveView).DataControl.(dxi:GridAppearanceOptions.HasDataAreaBackground), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Background" Value="{Binding Path=(dxgr:GridControl.ActiveView).DataControl.(dxi:GridAppearanceOptions.DataAreaBackground), RelativeSource={RelativeSource Self}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="FooterMarginControl.DefaultStyleBase" TargetType="{x:Type dxgr:FooterMarginControl}">
        <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:LWKey GridRow.GridDataRowDelimiterBrush}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid x:Name="PART_RootGrid" Background="{DynamicResource {dxgt:LWKey TreeListView.RowMarginBackgroundBrush}}">
                        <Path x:Name="PART_OffsetPath" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" />
                        <Path x:Name="PART_TreeLinePath" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=(dxgr:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter TargetName="PART_RootGrid" Property="Background" Value="{Binding Path=(dxgr:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.Background), RelativeSource={RelativeSource Self}}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=(dxgr:GridControl.ActiveView).DataControl.(dxi:GridAppearanceOptions.HasDataAreaBackground), RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter TargetName="PART_RootGrid" Property="Background" Value="{Binding Path=(dxgr:GridControl.ActiveView).DataControl.(dxi:GridAppearanceOptions.DataAreaBackground), RelativeSource={RelativeSource Self}}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TreeViewRowMarginControl.DefaultStyleBase" TargetType="{x:Type dxgr:TreeViewRowMarginControl}">
        <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey TreeListView.RowMarginBackgroundBrush}}" />
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey TreeViewControl.RowMarginControlTemplate}}" />
    </Style>
    <Style x:Key="IndentScroller.DefaultStyleBase" TargetType="{x:Type dxgr:IndentScroller}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxgr:IndentScroller}">
                    <Grid x:Name="PART_ScrollableContent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RowOffsetPresenter.DefaultStyleBase" TargetType="{x:Type dxgr:RowOffsetPresenter}">
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey RowIndicator.RowOffsetTemplate}}" />
    </Style>
    <Style x:Key="GroupRowOffsetPresenter.DefaultStyleBase" TargetType="{x:Type dxgr:GroupRowOffsetPresenter}">
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey RowIndicator.GroupRowOffsetTemplate}}" />
    </Style>
    <Style x:Key="CardView.DefaultStyleBase" BasedOn="{StaticResource GridViewBaseStyle}" TargetType="{x:Type dxgr:CardView}">
        <Setter Property="Foreground" Value="{DynamicResource {dxgt:LWKey GridControl.Foreground}}" />
        <Setter Property="ExpandStoryboard" Value="{DynamicResource {dxgt:LWKey GroupRow.CardGroupExpandingStoryboard}}" />
        <Setter Property="CollapseStoryboard" Value="{DynamicResource {dxgt:LWKey GroupRow.CardGroupCollapsingStoryboard}}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SeparatorThickness" Value="{DynamicResource {dxgt:LWKey CardView.SeparatorThickness}}" />

        <Setter Property="CellStyle" Value="{DynamicResource {dxgt:LWKey CardTemplates.CellStyle}}" />
        <Setter Property="CardStyle" Value="{DynamicResource {dxgt:LWKey CardTemplates.CardStyle}}" />
        <Setter Property="FocusedCardBorderTemplate" Value="{DynamicResource {dxgt:LWKey GridControl.FocusedCardBorderTemplate}}" />
        <Setter Property="FocusedCellBorderCardViewTemplate" Value="{DynamicResource {dxgt:LWKey GridControl.FocusedCellBorderCardViewTemplate}}" />
        <Setter Property="VerticalFocusedGroupRowBorderTemplate" Value="{DynamicResource {dxgt:LWKey GridControl.VerticalFocusedGroupRowBorderTemplate}}" />

        <Setter Property="SeparatorTemplate" Value="{DynamicResource {dxgt:LWKey CardTemplates.SeparatorTemplate}}" />
        <Setter Property="CardTemplate" Value="{DynamicResource {dxgt:LWKey CardTemplates.CardTemplate}}" />
        <Setter Property="CardRowTemplate" Value="{DynamicResource {dxgt:LWKey CardTemplates.CardRowTemplate}}" />
        <Setter Property="CardHeaderTemplate" Value="{DynamicResource {dxgt:LWKey CardTemplates.CardHeaderTemplate}}" />

        <Setter Property="PrintTotalSummaryStyle" Value="{DynamicResource {dxgt:LWKey CardView.DefaultPrintTotalSummaryStyle}}" />
        <Setter Property="PrintTotalSummarySeparatorStyle" Value="{DynamicResource {dxgt:LWKey CardView.DefaultPrintTotalSummarySeparatorStyle}}" />
        <Setter Property="PrintFixedTotalSummaryStyle" Value="{DynamicResource {dxgt:LWKey CardView.DefaultPrintFixedTotalSummaryStyle}}" />
        <Setter Property="PrintCardRowTemplate" Value="{DynamicResource {dxgt:LWKey CardView.DefaultPrintCardRowTemplate}}" />
        <Setter Property="PrintCardHeaderTemplate" Value="{DynamicResource {dxgt:LWKey CardView.DefaultPrintCardHeaderTemplate}}" />
        <Setter Property="PrintCardViewItemTemplate" Value="{DynamicResource {dxgt:LWKey CardView.DefaultPrintCardViewItemTemplate}}" />
        <Setter Property="PrintCardTemplate" Value="{DynamicResource {dxgt:LWKey CardView.DefaultPrintCardTemplate}}" />
        <Setter Property="PrintCardContentTemplate" Value="{DynamicResource {dxgt:LWKey CardView.DefaultPrintCardContentTemplate}}" />
        <Setter Property="PrintHeaderTemplate" Value="{DynamicResource {dxgt:LWKey CardView.DefaultPrintHeaderTemplate}}" />
        <Setter Property="PrintGroupRowTemplate" Value="{DynamicResource {dxgt:LWKey CardView.DefaultPrintGroupRowTemplate}}" />
        <Setter Property="PrintCellStyle" Value="{DynamicResource {dxgt:LWKey CardView.DefaultPrintCellStyle}}" />
        <Setter Property="PrintGroupRowStyle" Value="{DynamicResource {dxgt:LWKey CardView.DefaultPrintGroupRowStyle}}" />
        <Setter Property="PrintRowIndentStyle" Value="{DynamicResource {dxgt:LWKey CardView.DefaultPrintRowIndentStyle}}" />
        <Setter Property="PrintCardRowIndentTemplate" Value="{DynamicResource {dxgt:LWKey CardView.DefaultPrintCardRowIndentTemplate}}" />
        <Setter Property="PrintFooterTemplate" Value="{DynamicResource {dxgt:LWKey CardView.DefaultPrintFooterTemplate}}" />
        <Setter Property="PrintFixedFooterTemplate" Value="{DynamicResource {dxgt:LWKey CardView.DefaultPrintFixedFooterTemplate}}" />
        <Setter Property="LeftGroupAreaIndent" Value="{DynamicResource {dxgt:LWKey CardView.LeftGroupAreaIndent}}" />
        <Setter Property="ShowSelectionRectangle" Value="True" />

        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey CardView.ControlTemplate}}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Self}}" Value="Horizontal">
                <Setter Property="CardMargin" Value="{DynamicResource {dxgt:LWKey CardView.HorizontalCardMargin}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Self}}" Value="Vertical">
                <Setter Property="CardMargin" Value="{DynamicResource {dxgt:LWKey CardView.VerticalCardMargin}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="GridControl.DefaultStyleBase" BasedOn="{StaticResource DataControlBaseStyle}" TargetType="{x:Type dxgr:GridControl}">
        <Setter Property="Foreground" Value="{DynamicResource {dxgt:LWKey GridControl.Foreground}}" />
        <Setter Property="dx:DXSerializer.SerializationIDDefault" Value="GridControl" />
    </Style>
    <Style x:Key="TreeListControl.DefaultStyleBase" BasedOn="{StaticResource DataControlBaseStyle}" TargetType="{x:Type dxgr:TreeListControl}" />
    <Style x:Key="TreeViewControl.DefaultStyleBase" BasedOn="{StaticResource DataControlBaseStyle}" TargetType="{x:Type dxgr:TreeViewControl}">
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey TreeViewControl.Template}}" />
        <Setter Property="NodeTemplate" Value="{DynamicResource {dxgt:LWKey GridRow.DataRowTemplate}}" />
        <Setter Property="TreeLineStyle" Value="{DynamicResource {dxgt:LWKey TreeListView.DefaultTreeLineStyle}}" />
        <Setter Property="NodeStyle" Value="{DynamicResource {dxgt:LWKey GridRow.RowStyle}}" />
        <Setter Property="EvenRowBackground" Value="{DynamicResource {dxgt:LWKey GridRow.EvenRowBackgroundBrush}}" />
        <Setter Property="DropMarkerTemplate" Value="{DynamicResource {dxt:LWKey DragDrop.DropMarker}}" />
        <Setter Property="DragDropHintTemplate" Value="{DynamicResource {dxt:LWKey DragDrop.DragDropHint}}" />
        <Setter Property="NodeContentStyle" Value="{DynamicResource {dxgt:LWKey GridRow.CellStyle}}" />
        <Setter Property="NodeIndent" Value="{DynamicResource {dxgt:LWKey TreeListView.RowIndent}}" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="NodeIndent" Value="{DynamicResource {dxgt:LWKey TreeListView.RowIndentTouch}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TreeViewControlView.DefaultStyleBase" TargetType="{x:Type dxgr:TreeViewControlView}">
        <Setter Property="ShowColumnHeaders" Value="False" />
        <Setter Property="ShowHorizontalLines" Value="False" />
        <Setter Property="ShowVerticalLines" Value="False" />
        <Setter Property="ShowIndicator" Value="False" />
        <Setter Property="ImmediateUpdateCheckBoxState" Value="True" />
        <Setter Property="ExpandCollapseNodesOnNavigation" Value="True" />
        <Setter Property="AllowTreeIndentScrolling" Value="True" />
        <Setter Property="AllowLeaveFocusOnTab" Value="True" />
        <Setter Property="AllowDefaultContentForHierarchicalDataTemplate" Value="False" />
        <Setter Property="VerticalScrollbarVisibility" Value="Auto" />
        <Setter Property="Margin" Value="{DynamicResource {dxgt:LWKey TableView.Margin}}" />
        <Setter Property="FocusedCellBorderTemplate" Value="{DynamicResource {dxgt:LWKey GridControl.FocusedCellBorderTemplate}}" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.TextUnfocusedBrush}}" />
        <Setter Property="RowPresenterMargin" Value="{DynamicResource {dxgt:LWKey TableView.RowPresenterGridMargin}}" />
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey TreeViewControl.ViewTemplate}}" />
        <Setter Property="DefaultDataRowTemplate" Value="{DynamicResource {dxgt:LWKey GridRow.DataRowTemplate}}" />
        <Setter Property="LeftDataAreaIndent" Value="{DynamicResource {dxgt:LWKey TableView.LeftDataAreaIndent}}" />
        <Setter Property="RightDataAreaIndent" Value="{DynamicResource {dxgt:LWKey TableView.RightDataAreaIndent}}" />
        <Setter Property="FocusedRowBorderTemplate" Value="{DynamicResource {dxgt:LWKey GridControl.FocusedRowBorderTemplate}}" />
        <Setter Property="RowMinHeight" Value="{DynamicResource {dxgt:LWKey GridRow.RowMinHeight}}" />
        <Setter Property="ShowCriteriaInAutoFilterRow" Value="True" />
    </Style>
    <Style x:Key="AdditionalRowContainerControl.DefaultStyleBase" BasedOn="{StaticResource AdditionalRowContainerStyle}" TargetType="{x:Type dxgr:AdditionalRowContainerControl}" />
    <Style x:Key="GridRow.DefaultStyleBase" TargetType="{x:Type dxgr:GridRow}">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey GridRow.RowControlTemplate}}" />
        <Setter Property="dxgr:GridViewHitInfoBase.HitTestAcceptor">
            <Setter.Value>
                <dxght:RowTableViewHitTestAcceptor />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GroupGridRow.DefaultStyleBase" TargetType="{x:Type dxgr:GroupGridRow}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupRowControlTemplate}}" />
        <Setter Property="dxgr:GridViewHitInfoBase.HitTestAcceptor">
            <Setter.Value>
                <dxght:GroupRowTableViewHitTestAcceptor />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CardsContainer.DefaultStyleBase" TargetType="{x:Type dxgr:CardsContainer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxgr:CardsContainer}">
                    <Grid x:Name="PART_GridBackground" Background="{DynamicResource {dxgt:LWKey CardView.Background}}">
                        <Grid x:Name="gridCards" HorizontalAlignment="Left">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <dxgr:CardSeparatorItemsControl x:Name="separatorsItemsControl" Grid.ColumnSpan="2" ItemsSource="{Binding Path=SeparatorInfo, ElementName=cardsPanel}">
                                <dxgr:CardSeparatorItemsControl.ItemsPanel>
                                    <ControlTemplate>
                                        <Canvas />
                                    </ControlTemplate>
                                </dxgr:CardSeparatorItemsControl.ItemsPanel>
                                <dxgr:CardSeparatorItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <dxgr:CardsResizer Visibility="{Binding Path=IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                    </DataTemplate>
                                </dxgr:CardSeparatorItemsControl.ItemTemplate>
                            </dxgr:CardSeparatorItemsControl>

                            <dxgr:RowOffset
                                x:Name="rowOffset"
                                Grid.Row="1"
                                Grid.ColumnSpan="2"
                                AllowHorizontalLines="False"
                                AllowVerticalLines="True"
                                RowLevel="{Binding Path=DataControl.ActualGroupCount}"
                                Template="{DynamicResource {dxgt:LWKey RowIndicator.RowOffsetControlTemplate}}"
                                Offset="{DynamicResource {dxgt:LWKey CardView.ContainerIndent}}">
                                <dxgr:RowOffset.LayoutTransform>
                                    <RotateTransform Angle="-90" />
                                </dxgr:RowOffset.LayoutTransform>
                            </dxgr:RowOffset>

                            <dxgh:CardsHierarchyPanel
                                x:Name="cardsPanel"
                                Grid.RowSpan="2"
                                Grid.ColumnSpan="2"
                                CardAlignment="{Binding Path=CardAlignment}"
                                CardMargin="{Binding Path=CardMargin}"
                                ContainerIndent="{DynamicResource {dxgt:LWKey CardView.ContainerIndent}}"
                                DataPresenter="{TemplateBinding DataPresenter}"
                                FixedSize="{Binding Path=FixedSize}"
                                ItemsContainer="{Binding Path=MasterRootRowsContainer}"
                                MaxCardCountInRow="{Binding Path=MaxCardCountInRow}"
                                Orientation="{Binding Path=Orientation}"
                                SeparatorThickness="{Binding Path=SeparatorThickness}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=Orientation}" Value="Vertical">
                            <Setter TargetName="gridCards" Property="VerticalAlignment" Value="Top" />
                            <Setter TargetName="gridCards" Property="HorizontalAlignment" Value="Stretch" />
                            <Setter TargetName="rowOffset" Property="Grid.RowSpan" Value="2" />
                            <Setter TargetName="separatorsItemsControl" Property="Grid.RowSpan" Value="2" />
                            <Setter TargetName="rowOffset" Property="Grid.ColumnSpan" Value="1" />
                            <Setter TargetName="separatorsItemsControl" Property="Grid.ColumnSpan" Value="1" />
                            <Setter TargetName="rowOffset" Property="Grid.Row" Value="0" />
                            <Setter TargetName="separatorsItemsControl" Property="Grid.Column" Value="1" />
                            <Setter TargetName="rowOffset" Property="LayoutTransform" Value="{x:Null}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=(dxgr:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter TargetName="PART_GridBackground" Property="Background" Value="{Binding Path=(dxgr:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.Background), RelativeSource={RelativeSource Self}}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=(dxgr:GridControl.ActiveView).DataControl.(dxi:GridAppearanceOptions.HasDataAreaBackground), RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter TargetName="PART_GridBackground" Property="Background" Value="{Binding Path=(dxgr:GridControl.ActiveView).DataControl.(dxi:GridAppearanceOptions.DataAreaBackground), RelativeSource={RelativeSource Self}}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GridScrollablePart.DefaultStyleBase" TargetType="{x:Type dxgr:GridScrollablePart}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxgr:GridScrollablePart}">
                    <dx:DXDockPanel x:Name="PART_ScrollablePartPanel" LastChildFill="True">
                        <ContentPresenter x:Name="PART_FitLeftContent" dx:DXDockPanel.Dock="Left" dxgcore:TableViewProperties.FixedAreaStyle="Left" />
                        <ContentPresenter x:Name="PART_FixedLeftContent" dx:DXDockPanel.Dock="Left" dxgcore:TableViewProperties.FixedAreaStyle="Left" />
                        <ContentPresenter
                            x:Name="PART_FixedLeftLinePlaceHolder"
                            dx:DXDockPanel.Dock="Left"
                            dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                            Visibility="Collapsed">
                            <dxgr:GridViewHitInfoBase.HitTestAcceptor>
                                <dxght:FixedLeftDivTableViewHitTestAcceptor />
                            </dxgr:GridViewHitInfoBase.HitTestAcceptor>
                        </ContentPresenter>
                        <dx:DXBorder x:Name="PART_FixedNoneCellsBorder" dx:DXDockPanel.Dock="Left">
                            <dxgcore:FocusRectPresenter.IsHorizontalScrollHost>
                                True
                            </dxgcore:FocusRectPresenter.IsHorizontalScrollHost>
                            <ContentPresenter x:Name="PART_FixedNoneContent" />
                        </dx:DXBorder>
                        <ContentPresenter
                            x:Name="PART_FixedRightLinePlaceHolder"
                            dx:DXDockPanel.Dock="Left"
                            dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                            Visibility="Collapsed">
                            <dxgr:GridViewHitInfoBase.HitTestAcceptor>
                                <dxght:FixedRightDivTableViewHitTestAcceptor />
                            </dxgr:GridViewHitInfoBase.HitTestAcceptor>
                        </ContentPresenter>
                        <ContentPresenter x:Name="PART_FixedRightContent" dx:DXDockPanel.Dock="Left" dxgcore:TableViewProperties.FixedAreaStyle="Left" />
                        <dxgr:FitContentContainer>
                            <ContentPresenter x:Name="PART_FitContent" />
                        </dxgr:FitContentContainer>
                    </dx:DXDockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TotalSummaryLeftIndentControl.DefaultStyleBase" TargetType="{x:Type dxgr:TotalSummaryLeftIndentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxgr:TotalSummaryLeftIndentControl}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <ContentControl x:Name="PART_Indicator" Width="{Binding Path=View.ActualIndicatorWidth}" Visibility="{Binding Path=View.ShowTotalSummaryIndicatorIndent, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        <ContentControl
                            x:Name="PART_ExpandDetailColumn"
                            Grid.Column="1"
                            Width="{Binding Path=View.ActualExpandDetailHeaderWidth}"
                            Visibility="{Binding Path=View.ActualShowDetailHeader, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GridTotalSummaryScrollablePart.DefaultStyleBase" TargetType="{x:Type dxgr:GridTotalSummaryScrollablePart}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxgr:GridTotalSummaryScrollablePart}">
                    <dx:DXDockPanel x:Name="PART_ScrollablePartPanel" LastChildFill="True">
                        <ContentPresenter x:Name="PART_FitLeftContent" dx:DXDockPanel.Dock="Left" dxgcore:TableViewProperties.FixedAreaStyle="Left" />
                        <ContentPresenter x:Name="PART_FixedLeftContent" dx:DXDockPanel.Dock="Left" dxgcore:TableViewProperties.FixedAreaStyle="Left" />
                        <ContentPresenter
                            x:Name="PART_FixedLeftLinePlaceHolder"
                            dx:DXDockPanel.Dock="Left"
                            dxgr:GridBorderHelper.ShowBorder="{Binding Path=(dxgr:GridControl.CurrentView).IsHorizontalScrollBarVisible, RelativeSource={RelativeSource TemplatedParent}}"
                            dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{DynamicResource {dxgt:LWKey ScrollBar.FixedLeftLinePlaceHolderTotalSummaryStyle}}"
                            Visibility="Collapsed">
                            <dxgr:GridViewHitInfoBase.HitTestAcceptor>
                                <dxght:FixedLeftDivTableViewHitTestAcceptor />
                            </dxgr:GridViewHitInfoBase.HitTestAcceptor>
                        </ContentPresenter>
                        <dx:DXBorder x:Name="PART_FixedNoneCellsBorder" dx:DXDockPanel.Dock="Left" ClipToBounds="True">
                            <dxgcore:FocusRectPresenter.IsHorizontalScrollHost>
                                True
                            </dxgcore:FocusRectPresenter.IsHorizontalScrollHost>
                            <ContentPresenter x:Name="PART_FixedNoneContent" />
                        </dx:DXBorder>
                        <ContentPresenter
                            x:Name="PART_FixedRightLinePlaceHolder"
                            dx:DXDockPanel.Dock="Left"
                            dxgr:GridBorderHelper.ShowBorder="{Binding Path=(dxgr:GridControl.CurrentView).IsHorizontalScrollBarVisible, RelativeSource={RelativeSource TemplatedParent}}"
                            dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{DynamicResource {dxgt:LWKey ScrollBar.FixedLeftLinePlaceHolderTotalSummaryStyle}}"
                            Visibility="Collapsed">
                            <dxgr:GridViewHitInfoBase.HitTestAcceptor>
                                <dxght:FixedRightDivTableViewHitTestAcceptor />
                            </dxgr:GridViewHitInfoBase.HitTestAcceptor>
                        </ContentPresenter>
                        <ContentPresenter x:Name="PART_FixedRightContent" dx:DXDockPanel.Dock="Left" dxgcore:TableViewProperties.FixedAreaStyle="Left" />
                        <dxgr:FitContentContainer>
                            <ContentPresenter x:Name="PART_FitContent" />
                        </dxgr:FitContentContainer>
                    </dx:DXDockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="{Binding Path=(dxgr:GridControl.CurrentView).TotalSummaryPosition, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TotalSummaryPositionToMarginConverter}}" />
    </Style>
    <Style x:Key="FilterCellContentPresenter.DefaultStyleBase" BasedOn="{StaticResource {dxgt:LWKey GridRow.CellStyle}}" TargetType="{x:Type dxgr:FilterCellContentPresenter}">
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey GridRow.FilterCellContentPresenterTemplate}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:LWKey GridRow.GridDataRowDelimiterBrush}}" />
        <Setter Property="dxgr:GridViewHitInfoBase.HitTestAcceptor">
            <Setter.Value>
                <dxght:RowCellTableViewHitTestAcceptor />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsFocusedCell}" Value="True" />
                    <Condition Binding="{Binding View.DataControl.SelectionMode}" Value="None" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="dx:SvgImageHelper.State" Value="Hover" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="NewItemRowCellContentPresenter.DefaultStyleBase" BasedOn="{StaticResource {dxgt:LWKey GridRow.CellStyle}}" TargetType="{x:Type dxgr:NewItemRowCellContentPresenter}">
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey GridRow.CellContentPresenterTemplate}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:LWKey GridRow.GridDataRowDelimiterBrush}}" />
        <Setter Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxt:LWKey InplaceBaseEdit.ValidationErrorSvgPalette}}" />
        <Setter Property="dxgr:GridViewHitInfoBase.HitTestAcceptor">
            <Setter.Value>
                <dxght:RowCellTableViewHitTestAcceptor />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GridCellContentPresenter.DefaultStyleBase" BasedOn="{StaticResource {dxgt:LWKey GridRow.CellStyle}}" TargetType="{x:Type dxgr:GridCellContentPresenter}">
        <Setter Property="dxgcore:CellContentPresenter.Background" Value="{DynamicResource {dxgt:LWKey GridRow.CellBorderNoneBrush}}" />
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey GridRow.CellContentPresenterTemplate}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:LWKey GridRow.GridDataRowDelimiterBrush}}" />
        <Setter Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxt:LWKey InplaceBaseEdit.ValidationErrorSvgPalette}}" />
        <Setter Property="dxgr:GridViewHitInfoBase.HitTestAcceptor">
            <Setter.Value>
                <dxght:RowCellTableViewHitTestAcceptor />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GroupPanelControl.DefaultStyleBase" TargetType="{x:Type dxgr:GroupPanelControl}">
        <Setter Property="ClipToBounds" Value="True" />
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey TableView.GroupPanelContentTemplate}}" />
        <Setter Property="dx:DragManager.DropTargetFactory">
            <Setter.Value>
                <dxgr:GroupPanelColumnHeaderDropTargetFactory />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CompactPanel.DefaultStyleBase" TargetType="{x:Type dxgr:CompactPanel}">
        <Setter Property="ClipToBounds" Value="True" />
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey TableView.CompactPanelTemplate}}" />
        <Setter Property="CompactFilterElementShowMode" Value="{Binding View.CompactFilterElementShowMode, RelativeSource={RelativeSource Self}}" />
        <Setter Property="CompactSortElementShowMode" Value="{Binding View.CompactSortElementShowMode, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Foreground" Value="{DynamicResource {dxgt:LWKey TableView.CompactPanelForeground}}" />
    </Style>
    <Style x:Key="GroupGridRowPresenter.DefaultStyleBase" TargetType="{x:Type dxgr:GroupGridRowPresenter}">
        <Setter Property="Focusable" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    </Style>
    <Style x:Key="GroupSummaryDefaultLayoutControl.DefaultStyleBase" TargetType="{x:Type dxgr:GroupSummaryDefaultLayoutControl}">
        <Setter Property="Margin" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupDefaultSummaryPadding}}" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxgr:GroupSummaryContentPresenter VerticalAlignment="Center" Content="{Binding}" ContentTemplateSelector="{Binding Path=View.ActualGroupSummaryItemTemplateSelector}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <ItemsPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GroupColumnSummaryControl.DefaultStyleBase" TargetType="{x:Type dxgr:GroupColumnSummaryControl}">
        <Setter Property="Padding" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupColumnSummaryPadding}}" />
        <Setter Property="NormalBorderBrush" Value="{DynamicResource {dxgt:LWKey GridRow.GridDataRowDelimiterBrush}}" />
        <Setter Property="FocusedBorderBrush" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupColumnSummaryFocusedBorderBrush}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxgr:GroupColumnSummaryControl}">
                    <dx:DXBorder
                        Width="{Binding ActualWidth}"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{Binding HasRightSibling, Converter={StaticResource GroupColumnSummaryBoolToThicknessConverter}}">
                        <ContentPresenter
                            x:Name="PART_Content"
                            Content="{Binding}"
                            ContentTemplate="{Binding View.GroupColumnSummaryItemTemplate}"
                            Visibility="{Binding HasSummary, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    </dx:DXBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding" Value="12" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="GroupBandSummaryControl.DefaultStyleBase" TargetType="{x:Type dxgr:GroupBandSummaryControl}">
        <Setter Property="Padding" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupBandSummaryPadding}}" />
        <Setter Property="NormalBorderBrush" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupBandSummaryNormalBorderBrush}}" />
        <Setter Property="FocusedBorderBrush" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupBandSummaryFocusedBorderBrush}}" />
        <Setter Property="NormalForeground" Value="{DynamicResource {dxgt:LWKey GridRow.TextUnfocusedBrush}}" />
        <Setter Property="FocusedForeground" Value="{DynamicResource {dxgt:LWKey GridRow.TextFocusedBrush}}" />
        <Setter Property="NormalBackground" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupBandSummaryNormalBackground}}" />
        <Setter Property="FocusedBackground" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupBandSummaryFocusedBackground}}" />
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupBandSummaryTemplate}}" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding" Value="44" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="GroupSummaryItemsControl.DefaultStyleBase" TargetType="{x:Type dxgr:GroupSummaryItemsControl}">
        <Setter Property="ItemTemplate" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupColumnSummaryControlTemplate}}" />
        <Setter Property="ItemsPanel" Value="{DynamicResource {dxgt:LWKey TableView.FixedNoneDropPanelTemplate}}" />
    </Style>
    <Style x:Key="GroupSummaryAlignByColumnsLayoutControl.DefaultStyleBase" TargetType="{x:Type dxgr:GroupSummaryAlignByColumnsLayoutControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxgr:GroupSummaryAlignByColumnsLayoutControl}">
                    <dx:DXBorder ClipToBounds="True">
                        <Grid Margin="{DynamicResource {dxgt:LWKey GridRow.BandSummaryMargin}}">
                            <dxgr:BandedViewContentSelector
                                x:Name="PART_BandedViewContentSelector"
                                Margin="0,0,0,-1"
                                HorizontalAlignment="Stretch"
                                BandsLayout="{Binding Path=View.DataControl.BandsLayout}">
                                <dxgr:BandedViewContentSelector.TableViewContent>
                                    <ControlTemplate>
                                        <dxgr:GridScrollablePart
                                            x:Name="PART_ScrollablePart"
                                            dxgr:GridControl.CurrentView="{Binding Path=View}"
                                            FixedColumnsDelimiterTemplate="{DynamicResource {dxgt:LWKey GridRow.FixedColumnsDelimiterTemplate}}"
                                            FixedLeftVisibleColumns="{Binding Path=View.FixedLeftVisibleColumns}"
                                            FixedLineWidth="{Binding Path=View.FixedLineWidth}"
                                            FixedNoneContentWidth="{Binding Path=FixedNoneContentWidth}"
                                            FixedRightVisibleColumns="{Binding Path=View.FixedRightVisibleColumns}"
                                            ScrollingMargin="{Binding Path=View.ScrollingHeaderVirtualizationMargin}">
                                            <dxgr:GridScrollablePart.FixedLeftContent>
                                                <dxgr:GroupSummaryItemsControl x:Name="PART_FixedLeftColumnsItemsControl" ItemsSource="{Binding Path=FixedLeftGroupSummaryData}" />
                                            </dxgr:GridScrollablePart.FixedLeftContent>
                                            <dxgr:GridScrollablePart.FixedRightContent>
                                                <dxgr:GroupSummaryItemsControl x:Name="PART_FixedRightColumnsItemsControl" ItemsSource="{Binding Path=FixedRightGroupSummaryData}" />
                                            </dxgr:GridScrollablePart.FixedRightContent>
                                            <dxgr:GridScrollablePart.FixedNoneContent>
                                                <dxgr:GroupSummaryItemsControl x:Name="PART_FixedNoneColumnsItemsControl" ItemsSource="{Binding Path=FixedNoneGroupSummaryData}" />
                                            </dxgr:GridScrollablePart.FixedNoneContent>
                                            <dxgr:GridScrollablePart.FitContent>
                                                <dxgr:FitRowContentPresenter VerticalContentAlignment="Stretch" Content="{Binding}" />
                                            </dxgr:GridScrollablePart.FitContent>
                                        </dxgr:GridScrollablePart>
                                    </ControlTemplate>
                                </dxgr:BandedViewContentSelector.TableViewContent>
                                <dxgr:BandedViewContentSelector.BandedViewContent>
                                    <ControlTemplate>
                                        <dxgr:GridScrollablePart
                                            x:Name="PART_ScrollablePart"
                                            dxgr:GridControl.CurrentView="{Binding Path=View}"
                                            FixedColumnsDelimiterTemplate="{DynamicResource {dxgt:LWKey GridRow.FixedColumnsDelimiterTemplate}}"
                                            FixedLeftVisibleColumns="{Binding Path=View.DataControl.BandsLayout.FixedLeftVisibleBands}"
                                            FixedLineWidth="{Binding Path=View.FixedLineWidth}"
                                            FixedNoneContentWidth="{Binding Path=FixedNoneContentWidth}"
                                            FixedRightVisibleColumns="{Binding Path=View.DataControl.BandsLayout.FixedRightVisibleBands}"
                                            ScrollingMargin="{Binding Path=View.ScrollingHeaderVirtualizationMargin}">
                                            <dxgr:GridScrollablePart.FixedLeftContent>
                                                <dxgr:BandedViewGroupSummaryItemsControl dxgr:GridControl.CurrentView="{Binding View}" ItemTemplate="{DynamicResource {dxgt:LWKey GroupRow.GroupBandSummaryControlTemplate}}" ItemsSource="{Binding Path=FixedLeftGroupSummaryData}">
                                                    <dxgr:BandedViewGroupSummaryItemsControl.ItemsPanel>
                                                        <ControlTemplate>
                                                            <dxgr:BandsGroupSummaryAlignByColumnsPanel Bands="{Binding Path=View.DataControl.BandsLayout.FixedLeftVisibleBands}" Fixed="Left" LeftMargin="{Binding Path=Margin.Left, ElementName=PART_BandedViewContentSelector}" />
                                                        </ControlTemplate>
                                                    </dxgr:BandedViewGroupSummaryItemsControl.ItemsPanel>
                                                </dxgr:BandedViewGroupSummaryItemsControl>
                                            </dxgr:GridScrollablePart.FixedLeftContent>
                                            <dxgr:GridScrollablePart.FixedRightContent>
                                                <dxgr:BandedViewGroupSummaryItemsControl dxgr:GridControl.CurrentView="{Binding View}" ItemTemplate="{DynamicResource {dxgt:LWKey GroupRow.GroupBandSummaryControlTemplate}}" ItemsSource="{Binding Path=FixedRightGroupSummaryData}">
                                                    <dxgr:BandedViewGroupSummaryItemsControl.ItemsPanel>
                                                        <ControlTemplate>
                                                            <dxgr:BandsGroupSummaryAlignByColumnsPanel Bands="{Binding Path=View.DataControl.BandsLayout.FixedRightVisibleBands}" Fixed="Right" LeftMargin="{Binding Path=Margin.Left, ElementName=PART_BandedViewContentSelector}" />
                                                        </ControlTemplate>
                                                    </dxgr:BandedViewGroupSummaryItemsControl.ItemsPanel>
                                                </dxgr:BandedViewGroupSummaryItemsControl>
                                            </dxgr:GridScrollablePart.FixedRightContent>
                                            <dxgr:GridScrollablePart.FixedNoneContent>
                                                <dxgr:BandedViewGroupSummaryItemsControl
                                                    MinHeight="{DynamicResource {dxgt:LWKey GroupRow.BandedViewGroupSummaryMinHeight}}"
                                                    dxgr:GridControl.CurrentView="{Binding View}"
                                                    ItemTemplate="{DynamicResource {dxgt:LWKey GroupRow.GroupBandSummaryControlTemplate}}"
                                                    ItemsSource="{Binding Path=FixedNoneGroupSummaryData}">
                                                    <dxgr:BandedViewGroupSummaryItemsControl.ItemsPanel>
                                                        <ControlTemplate>
                                                            <dxgr:BandsGroupSummaryAlignByColumnsPanel Bands="{Binding Path=View.DataControl.BandsLayout.FixedNoneVisibleBands}" Fixed="None" LeftMargin="{Binding Path=Margin.Left, ElementName=PART_BandedViewContentSelector}" />
                                                        </ControlTemplate>
                                                    </dxgr:BandedViewGroupSummaryItemsControl.ItemsPanel>
                                                </dxgr:BandedViewGroupSummaryItemsControl>
                                            </dxgr:GridScrollablePart.FixedNoneContent>
                                            <dxgr:GridScrollablePart.FitContent>
                                                <dxgr:FitRowContentPresenter VerticalContentAlignment="Stretch" Content="{Binding}" />
                                            </dxgr:GridScrollablePart.FitContent>
                                        </dxgr:GridScrollablePart>
                                    </ControlTemplate>
                                </dxgr:BandedViewContentSelector.BandedViewContent>
                            </dxgr:BandedViewContentSelector>
                        </Grid>
                    </dx:DXBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GridGroupExpandButton.DefaultStyleBase" TargetType="{x:Type dxgr:GridGroupExpandButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxgr:GridGroupExpandButton}">
                    <dxgr:GridToggleStateButton
                        x:Name="toggleButton"
                        dx:DataObjectBase.DataObject="{Binding}"
                        dx:DataObjectBase.NeedsResetEvent="True"
                        ClickMode="Press"
                        Command="{TemplateBinding Command}"
                        CommandParameter="{TemplateBinding CommandParameter}"
                        Foreground="{TemplateBinding Foreground}"
                        IsChecked="{Binding Path=IsChecked, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                        Style="{DynamicResource {dxgt:LWKey GroupRow.ExpandButtonStyle}}">
                        <dx:DoubleClicker.IsDoubleClickArea>False</dx:DoubleClicker.IsDoubleClickArea>
                    </dxgr:GridToggleStateButton>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="dxgr:GridViewHitInfoBase.HitTestAcceptor">
            <Setter.Value>
                <dxght:GroupRowButtonTableViewHitTestAcceptor />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GridDetailExpandButton.DefaultStyleBase" TargetType="{x:Type dxgr:GridDetailExpandButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxgr:GridDetailExpandButton}">
                    <dxgr:GridToggleStateButton
                        x:Name="toggleButton"
                        dx:DataObjectBase.DataObject="{Binding}"
                        dx:DataObjectBase.NeedsResetEvent="True"
                        dxgr:GridDetailExpandButtonContainer.IsDetailButtonVisible="{Binding Path=(dxgr:GridDetailExpandButtonContainer.IsDetailButtonVisible), RelativeSource={RelativeSource TemplatedParent}}"
                        ClickMode="Press"
                        Command="{TemplateBinding Command}"
                        CommandParameter="{TemplateBinding CommandParameter}"
                        Foreground="{TemplateBinding Foreground}"
                        IsChecked="{Binding Path=IsChecked, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
                        <dxgr:GridToggleStateButton.ShowRowBreak>
                            <MultiBinding Converter="{StaticResource ShowRowBreakConverter}">
                                <MultiBinding.Bindings>
                                    <Binding Path="ShowRowBreak" />
                                    <Binding Path="IsEditFormVisible" />
                                </MultiBinding.Bindings>
                            </MultiBinding>
                        </dxgr:GridToggleStateButton.ShowRowBreak>
                    </dxgr:GridToggleStateButton>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="dxgr:GridViewHitInfoBase.HitTestAcceptor">
            <Setter.Value>
                <dxght:MasterRowButtonTableViewHitTestAcceptor />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TreeListNodeExpandButton.DefaultStyleBase" TargetType="{x:Type dxgr:TreeListNodeExpandButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxgr:TreeListNodeExpandButton">
                    <dx:DXExpander HorizontalAlignment="Left" AnimationProgress="{Binding IsExpandButtonVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToDoubleConverter}}">
                        <dxgr:GridToggleStateButton
                            x:Name="toggleButton"
                            dx:DataObjectBase.DataObject="{Binding}"
                            dx:DataObjectBase.NeedsResetEvent="True"
                            ClickMode="Press"
                            Command="{TemplateBinding Command}"
                            CommandParameter="{TemplateBinding CommandParameter}"
                            Foreground="{TemplateBinding Foreground}"
                            IsChecked="{Binding Path=IsChecked, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{DynamicResource {dxgt:LWKey GroupRow.ExpandButtonStyle}}" />
                    </dx:DXExpander>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TreeViewNodeExpandButton.DefaultStyleBase" TargetType="{x:Type dxgr:TreeViewNodeExpandButton}">
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey TreeViewControl.ExpandButtonTemplate}}" />
    </Style>
    <Style x:Key="DetailRowsContentControl.DefaultStyleBase" TargetType="{x:Type dxgr:DetailRowsContentControl}">
        <Setter Property="dxgr:DetailSummaryControlBase.SummaryDetailLevel" Value="{Binding Path=(dxgr:DetailSummaryControlBase.SummaryDetailLevel), RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxgr:DetailRowsContentControl}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <dxgr:DetailRowIndicatorControl Width="{Binding Path=View.ActualIndicatorWidth, RelativeSource={RelativeSource TemplatedParent}}" Template="{DynamicResource {dxgt:LWKey RowIndicator.ItemTemplate}}" Visibility="{Binding Path=View.ActualShowIndicator, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                        <dx:DXBorder
                            Grid.Column="1"
                            Grid.ColumnSpan="2"
                            Style="{DynamicResource {dxgt:LWKey GridRow.DetailTotalSummaryIndentBorderStyle}}"
                            Visibility="{Binding Path=NeedBottomLine, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        <dxgr:DetailRowsIndentControl Grid.Column="1" ItemsSource="{Binding Path=DetailViewIndents, RelativeSource={RelativeSource TemplatedParent}}" ShowLastDetailMargin="{TemplateBinding ShowLastDetailMargin}" />
                        <ContentPresenter Grid.Column="2" />
                        <dxgr:DetailRowsIndentControl
                            Grid.Column="3"
                            IsLeft="False"
                            ItemsSource="{Binding Path=DetailViewIndents, RelativeSource={RelativeSource TemplatedParent}}"
                            ShowLastDetailMargin="{TemplateBinding ShowLastDetailMargin}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DetailContentControl.DefaultStyleBase" TargetType="{x:Type dxgr:DetailContentControl}">
        <Setter Property="Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.TextUnfocusedBrush}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxgr:DetailContentControl">
                    <dxgr:DetailRowsContentControl DetailDescriptor="{TemplateBinding DetailDescriptor}" ShowLastDetailMargin="{TemplateBinding ShowLastDetailMargin}" View="{Binding Path=MasterRowData.View, RelativeSource={RelativeSource TemplatedParent}}">
                        <dxgr:DetailDescriptorContentBorder ShowBottomLine="{TemplateBinding ShowBottomLine}">
                            <dxgcore:DetailRowContentPresenter Content="{Binding MasterRowData.Row, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{Binding DetailDescriptor.ContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" MasterRowData="{TemplateBinding MasterRowData}" />
                        </dxgr:DetailDescriptorContentBorder>
                    </dxgr:DetailRowsContentControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DetailMarginControl.DefaultStyleBase" TargetType="{x:Type dxgr:DetailMarginControl}">
        <Setter Property="Height" Value="{Binding Path=DetailDescriptor.Margin.Top, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxgr:DetailMarginControl">
                    <DockPanel>
                        <dxgr:DetailRowIndicatorControl Width="{Binding Path=View.ActualIndicatorWidth}" Template="{DynamicResource {dxgt:LWKey RowIndicator.ItemTemplate}}" Visibility="{Binding Path=View.ActualShowIndicator, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        <dxgr:DetailRowsIndentControl x:Name="leftIndents" ItemsSource="{Binding Path=DetailDescriptor.DetailViewIndents, RelativeSource={RelativeSource TemplatedParent}}" ShowLastDetailMargin="{TemplateBinding ShowLastDetailMargin}" />
                        <dxgr:DetailRowsIndentControl
                            x:Name="rightIndents"
                            DockPanel.Dock="Right"
                            IsLeft="False"
                            ItemsSource="{Binding Path=DetailDescriptor.DetailViewIndents, RelativeSource={RelativeSource TemplatedParent}}"
                            ShowLastDetailMargin="{TemplateBinding ShowLastDetailMargin}" />

                        <dx:DXBorder x:Name="bottomBorder" BorderBrush="{DynamicResource {dxgt:LWKey GridRow.GridDataRowDelimiterBrush}}" DockPanel.Dock="Bottom" />

                        <dx:DXBorder
                            x:Name="topBorder"
                            Margin="-1,-1,-1,0"
                            BorderBrush="{DynamicResource {dxgt:LWKey GridColumnHeader.BorderBrush}}"
                            BorderThickness="0,1,0,0"
                            Visibility="Collapsed" />

                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ShowBottomLine" Value="True">
                            <Setter TargetName="leftIndents" Property="ShowBottomLine" Value="True" />
                            <Setter TargetName="rightIndents" Property="ShowBottomLine" Value="True" />
                            <Setter TargetName="topBorder" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsTop" Value="False">
                            <Setter TargetName="bottomBorder" Property="BorderThickness" Value="0,0,0,1" />
                        </Trigger>
                        <Trigger Property="IsTop" Value="True">
                            <Setter TargetName="leftIndents" Property="ShowBottomLine" Value="False" />
                            <Setter TargetName="rightIndents" Property="ShowBottomLine" Value="False" />
                            <Setter TargetName="bottomBorder" Property="Margin" Value="-1,0,-1,0" />
                            <Setter TargetName="topBorder" Property="BorderThickness" Value="0,0,0,1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsTop" Value="False">
                <Setter Property="Height" Value="{Binding Path=DetailDescriptor.Margin.Bottom, RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DetailTabHeadersControl.DefaultStyleBase" TargetType="{x:Type dxgr:DetailTabHeadersControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxgr:DetailTabHeadersControl">
                    <dxgr:DetailRowsContentControl DetailDescriptor="{Binding Path=View.DataControl.DetailDescriptor}" ShowLastDetailMargin="{TemplateBinding ShowLastDetailMargin}" View="{Binding Path=View}">
                        <dx:DXBorder MinHeight="20">
                            <dxgr:DetailTabControl Padding="0" RowData="{Binding}">
                                <dxgr:DetailTabControl.ItemsSource>
                                    <Binding Path="DetailDescriptor.DetailDescriptors" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.Converter>
                                            <dxgcore:DetailDescriptorCollectionConverter />
                                        </Binding.Converter>
                                    </Binding>
                                </dxgr:DetailTabControl.ItemsSource>
                                <dxgr:DetailTabControl.ItemHeaderTemplate>
                                    <DataTemplate>
                                        <dxgr:DetailTabHeaderContentControl Content="{Binding Content.HeaderContent}" />
                                    </DataTemplate>
                                </dxgr:DetailTabControl.ItemHeaderTemplate>
                                <dxgr:DetailTabControl.ItemTemplate>
                                    <DataTemplate />
                                </dxgr:DetailTabControl.ItemTemplate>
                            </dxgr:DetailTabControl>
                            <!--<dxgcore:DetailRowContentPresenter MasterRowData="{TemplateBinding MasterRowData}" Content="{Binding MasterRowData.Row, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{Binding DetailDescriptor.ContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"/>-->
                        </dx:DXBorder>
                    </dxgr:DetailRowsContentControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DetailTabHeaderContentControl.DefaultStyleBase" TargetType="{x:Type dxgr:DetailTabHeaderContentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxgr:DetailTabHeaderContentControl">
                    <ContentPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DetailColumnHeadersControl.DefaultStyleBase" TargetType="{x:Type dxgr:DetailColumnHeadersControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxgr:DetailColumnHeadersControl">
                    <dx:MeasurePixelSnapper>
                        <dxgcore:DetailRowContentPresenter
                            MinHeight="20"
                            dxgr:GridControl.CurrentView="{Binding View}"
                            Content="{Binding}"
                            MasterRowData="{TemplateBinding MasterRowData}">
                            <dxgcore:DetailRowContentPresenter.ContentTemplate>
                                <DataTemplate>
                                    <dxgr:DetailRowsContentControl DetailDescriptor="{Binding Path=View.DataControl.OwnerDetailDescriptor}" NeedBottomLine="True" View="{Binding Path=View}">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <dxgr:BandsContainerControl
                                                x:Name="PART_BandsContainer"
                                                dxgr:GridControl.CurrentView="{Binding Path=(dxgr:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                                                BandsLayout="{Binding Path=DataControl.BandsLayout}"
                                                DataContext="{Binding Path=View}"
                                                Visibility="Collapsed" />
                                            <dxgr:ColumnHeaderPanel Grid.Row="1" dxgr:GridControl.CurrentView="{Binding Path=View}" Visibility="{Binding View.ShowColumnHeaders, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                        </Grid>
                                    </dxgr:DetailRowsContentControl>
                                </DataTemplate>
                            </dxgcore:DetailRowContentPresenter.ContentTemplate>
                            <dxgr:GridControl.CurrentViewChangedListener>
                                <dxgr:HeadersPanelInitializer />
                            </dxgr:GridControl.CurrentViewChangedListener>
                        </dxgcore:DetailRowContentPresenter>
                    </dx:MeasurePixelSnapper>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DetailNewItemRowControl.DefaultStyleBase" TargetType="{x:Type dxgr:DetailNewItemRowControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxgr:DetailNewItemRowControl">
                    <dxgr:NewItemRowControl
                        x:Name="PART_NewItemRow"
                        dxgr:GridControl.CurrentView="{Binding View}"
                        DataContext="{Binding Path=View.NewItemRowData}"
                        IndicatorWidth="{Binding Path=View.ActualIndicatorWidth}"
                        ItemTemplate="{DynamicResource {dxgt:LWKey GridRow.NewItemRowItemTemplate}}"
                        RowTemplate="{DynamicResource {dxgt:LWKey GridRow.NewItemRowTemplate}}"
                        Visibility="Collapsed">
                        <dxgr:GridControl.CurrentViewChangedListener>
                            <dxgr:NewItemRowInitializer />
                        </dxgr:GridControl.CurrentViewChangedListener>
                    </dxgr:NewItemRowControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DetailTotalSummaryControl.DefaultStyleBase" TargetType="{x:Type dxgr:DetailTotalSummaryControl}">
        <Setter Property="dxgr:DetailSummaryControlBase.SummaryDetailLevel" Value="{Binding DetailLevel}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxgr:DetailTotalSummaryControl">
                    <dxgr:DetailRowsContentControl DetailDescriptor="{Binding Path=View.DataControl.OwnerDetailDescriptor}" NeedBottomLine="True" View="{Binding Path=View}">
                        <dx:DXBorder MinHeight="20">
                            <dxgcore:DetailRowContentPresenter
                                dxgr:GridControl.CurrentView="{Binding View}"
                                Content="{Binding}"
                                ContentTemplate="{Binding View.FooterTemplate}"
                                MasterRowData="{TemplateBinding MasterRowData}" />
                        </dx:DXBorder>
                    </dxgr:DetailRowsContentControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DetailFixedTotalSummaryControl.DefaultStyleBase" TargetType="{x:Type dxgr:DetailFixedTotalSummaryControl}">
        <Setter Property="dxgr:DetailSummaryControlBase.SummaryDetailLevel" Value="{Binding DetailLevel}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxgr:DetailFixedTotalSummaryControl">
                    <dxgr:DetailRowsContentControl DetailDescriptor="{Binding Path=View.DataControl.OwnerDetailDescriptor}" NeedBottomLine="True" View="{Binding Path=View}">
                        <dx:DXBorder MinHeight="20">
                            <dxgr:FixedTotalSummaryContainerControl dxb:BarManager.DXContextMenu="{Binding Path=View.DataControlMenu}" dxgr:GridControl.CurrentView="{Binding Path=View}" dxgr:GridPopupMenu.GridMenuType="FixedTotalSummary" />
                            <!--<dxgcore:DetailRowContentPresenter MasterRowData="{TemplateBinding MasterRowData}"  Content="{Binding}" dxgr:GridControl.CurrentView="{Binding View}"/>-->
                        </dx:DXBorder>
                    </dxgr:DetailRowsContentControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GroupPanelContainer.DefaultStyleBase" TargetType="{x:Type dxgr:GroupPanelContainer}">
        <Setter Property="DetailPartTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="dxgr:GroupPanelContainer">
                    <dx:DXDockPanel>
                        <ItemsControl x:Name="PART_NextLevelItemsControl" dx:DXDockPanel.Dock="Bottom">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <dxgr:GroupPanelContainer dxb:BarManager.DXContextMenu="{Binding Path=View.DataControlMenu, RelativeSource={RelativeSource Self}}" DetailDescriptor="{Binding Content}" />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        <Grid x:Name="groupPanel">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <dx:DXBorder
                                x:Name="PART_BorderSeparator"
                                Height="1"
                                Margin="0,11,0,11"
                                Background="{DynamicResource {dxgt:LWKey TableView.GroupPanelSeparatorBrush}}"
                                UseLayoutRounding="False" />
                            <dx:DXDockPanel Grid.Row="1">
                                <dxgr:GroupPanelCaptionControl
                                    x:Name="groupCaption"
                                    VerticalAlignment="Center"
                                    Content="{Binding View.DetailHeaderContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource GroupDetailNameConverter}}"
                                    Visibility="{Binding Content, RelativeSource={RelativeSource Self}, Converter={StaticResource ObjectToVisibilityConverter}}" />
                                <dxgr:GroupPanelColumnItemsControl x:Name="groupPanelItemsControl" ItemsSource="{Binding Path=View.GroupedColumns, RelativeSource={RelativeSource TemplatedParent}}" />
                            </dx:DXDockPanel>
                        </Grid>
                    </dx:DXDockPanel>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=View.ActualShowGroupPanel, RelativeSource={RelativeSource Self}}" Value="False">
                            <Setter TargetName="groupPanel" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(dxgr:GridControl.ActiveView).DataControl.IsAnyDetailGrouped, RelativeSource={RelativeSource Self}}" Value="False" />
                                <Condition Binding="{Binding Path=(dxgr:GridControl.ActiveView).ShowGroupPanelsForUngroupedDetails, RelativeSource={RelativeSource Self}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="groupCaption" Property="Visibility" Value="Collapsed" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FilterPanelContainer.DefaultStyleBase" TargetType="{x:Type dxgr:FilterPanelContainer}">
        <Setter Property="DetailPartTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="dxgr:FilterPanelContainer">
                    <dx:DXDockPanel>
                        <ItemsControl x:Name="PART_NextLevelItemsControl" dx:DXDockPanel.Dock="Bottom">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <dxgr:FilterPanelContainer DetailDescriptor="{Binding Content}" />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        <dx:DXDockPanel Visibility="{Binding Path=View.ActualShowFilterPanel, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                            <dxfui_local_native:FilterPanelControlAdapter
                                x:Name="PART_FilterPanel"
                                Context="{Binding Path=View.DataControl.FilteringContext, RelativeSource={RelativeSource TemplatedParent}}"
                                DataContext="{TemplateBinding View}"
                                FilteringPanelStyle="{Binding Path=View.FilteringPanelStyle, RelativeSource={RelativeSource TemplatedParent}}"
                                UseLegacyFilterPanel="{Binding Path=View.UseLegacyFilterPanel, RelativeSource={RelativeSource TemplatedParent}}">
                                <dxfui_local_native:FilterPanelControlAdapter.LegacyFilterPanelTemplate>
                                    <DataTemplate>
                                        <dxgr:FilterPanelControl FilterPanelContent="{Binding DetailHeaderContent, Converter={StaticResource FilterPanelCaptionConverter}}" />
                                    </DataTemplate>
                                </dxfui_local_native:FilterPanelControlAdapter.LegacyFilterPanelTemplate>
                            </dxfui_local_native:FilterPanelControlAdapter>
                        </dx:DXDockPanel>
                    </dx:DXDockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ErrorPanel.DefaultStyleBase" TargetType="{x:Type dxgr:ErrorPanel}">
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey GridControl.ErrorPanelTemplate}}" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="HorizontalAlignment" Value="Right" />
    </Style>
    <Style x:Key="HeaderContentControl.DefaultStyleBase" TargetType="{x:Type dxgr:HeaderContentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxgr:HeaderContentControl">
                    <ContentPresenter dxgr:GridColumnHeader.GridColumn="{Binding Path=(dxgr:GridColumnHeader.GridColumn), RelativeSource={RelativeSource TemplatedParent}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="IsTabStop" Value="False" />
    </Style>
    <Style x:Key="GroupFooterRowControl.DefaultStyleBase" TargetType="{x:Type dxgr:GroupFooterRowControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupFooterRowControlTemplate}}" />
        <Setter Property="dxgr:GridViewHitInfoBase.HitTestAcceptor">
            <Setter.Value>
                <dxght:GroupFooterRowTableViewHitTestAcceptor />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GroupFooterSummaryControl.DefaultStyleBase" TargetType="{x:Type dxgr:GroupFooterSummaryControl}">
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey GroupRow.GroupFooterSummaryControlTemplate}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:LWKey GridRow.GridDataRowDelimiterBrush}}" />
        <Setter Property="Padding" Value="{DynamicResource {dxgt:LWKey TableView.SummaryControlMargin}}" />
    </Style>
    <Style x:Key="CalendarFilterControl.DefaultStyleBase" TargetType="{x:Type dxgr:CalendarFilterControl}">
        <Setter Property="DateFilterStyle" Value="{DynamicResource {dxgt:LWKey GridColumnHeader.DateFilterStyle}}" />
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey GridColumnHeader.CalendarFilterControlTemplate}}" />
    </Style>
    <Style x:Key="GridNavigatorButton.DefaultStyleBase" TargetType="{x:Type dxgr:GridNavigatorButton}">
        <Setter Property="Padding" Value="0" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxgr:GridNavigatorButton}">
                    <Grid Width="Auto">
                        <dx:DXBorder x:Name="normal" />
                        <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="normal" Property="Border.Background" Value="{DynamicResource {dxgt:LWKey TableView.DataNavigatorBackground}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="normal" Property="Background" Value="{DynamicResource {dxgt:LWKey TableView.DataNavigatorFocusedBackground}}" />
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource {dxgt:LWKey TableView.DataNavigatorHoverTextBrush}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="normal" Property="Background" Value="{DynamicResource {dxgt:LWKey TableView.DataNavigatorDisableBackground}}" />
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="0.4" />
                        </Trigger>

                        <Trigger Property="ButtonType" Value="MoveFirstRow">
                            <Setter Property="ContentTemplate" Value="{DynamicResource {dxt:LWKey Buttons.FirstGlyph}}" />
                        </Trigger>
                        <Trigger Property="ButtonType" Value="MovePrevPage">
                            <Setter Property="ContentTemplate" Value="{DynamicResource {dxt:LWKey Buttons.PrevPageGlyph}}" />
                        </Trigger>
                        <Trigger Property="ButtonType" Value="MovePrevRow">
                            <Setter Property="ContentTemplate" Value="{DynamicResource {dxt:LWKey Buttons.LeftGlyph}}" />
                        </Trigger>
                        <Trigger Property="ButtonType" Value="MoveNextRow">
                            <Setter Property="ContentTemplate" Value="{DynamicResource {dxt:LWKey Buttons.RightGlyph}}" />
                        </Trigger>
                        <Trigger Property="ButtonType" Value="MoveNextPage">
                            <Setter Property="ContentTemplate" Value="{DynamicResource {dxt:LWKey Buttons.NextPageGlyph}}" />
                        </Trigger>
                        <Trigger Property="ButtonType" Value="MoveLastRow">
                            <Setter Property="ContentTemplate" Value="{DynamicResource {dxt:LWKey Buttons.LastGlyph}}" />
                        </Trigger>
                        <Trigger Property="ButtonType" Value="AddNewRow">
                            <Setter Property="ContentTemplate" Value="{DynamicResource {dxt:LWKey Buttons.PlusGlyph}}" />
                        </Trigger>
                        <Trigger Property="ButtonType" Value="DeleteFocusedRow">
                            <Setter Property="ContentTemplate" Value="{DynamicResource {dxt:LWKey Buttons.MinusGlyph}}" />
                        </Trigger>
                        <Trigger Property="ButtonType" Value="EditFocusedRow">
                            <Setter Property="ContentTemplate" Value="{DynamicResource {dxt:LWKey Buttons.UpGlyph}}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=(dxgr:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter TargetName="normal" Property="Background" Value="{Binding Path=(dxgr:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.Background), RelativeSource={RelativeSource TemplatedParent}}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DataNavigator.DefaultStyleBase" TargetType="{x:Type dxgr:DataNavigator}">
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey GridControl.DataNavigatorTemplate}}" />
        <Setter Property="UseLayoutRounding" Value="False" />
    </Style>
    <Style x:Key="EditFormControl.DefaultStyleBase" TargetType="{x:Type dxgr:EditFormControl}">
        <Setter Property="ItemsPanel" Value="{DynamicResource {dxgt:LWKey TableView.EditFormItemsPanelTemplate}}" />
        <Setter Property="ItemTemplate" Value="{DynamicResource {dxgt:LWKey TableView.EditFormItemTemplate}}" />
    </Style>
    <Style x:Key="EditFormContainer.DefaultStyleBase" TargetType="dxgr:EditFormContainer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxgr:EditFormContainer">
                    <dx:DXBorder Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter />
                    </dx:DXBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:LWKey GridRow.GridDataRowDelimiterBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource {dxgt:LWKey TableView.EditFormForeground}}" />
        <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey TableView.EditFormBackground}}" />
        <Style.Triggers>
            <Trigger Property="ShowMode" Value="Inline">
                <Setter Property="BorderThickness" Value="0,1,0,1" />
            </Trigger>
            <Trigger Property="ShowMode" Value="InlineHideRow">
                <Setter Property="BorderThickness" Value="0,0,0,1" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=(dxgr:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Background" Value="{Binding Path=(dxgr:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.Background), RelativeSource={RelativeSource Self}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxgr:GridControl.ActiveView).DataControl.(dxi:GridAppearanceOptions.HasDataAreaBackground), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Background" Value="{Binding Path=(dxgr:GridControl.ActiveView).DataControl.(dxi:GridAppearanceOptions.DataAreaBackground), RelativeSource={RelativeSource Self}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="FilterCriteriaControl.DefaultStyleBase" TargetType="dxgr:FilterCriteriaControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxgr:FilterCriteriaControl">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="1" />
                        </Grid.ColumnDefinitions>
                        <dxe:ComboBoxEdit
                            x:Name="PART_cbFilterItems"
                            Margin="1"
                            AllowCollectionView="True"
                            IsTextEditable="False"
                            ItemsSource="{TemplateBinding ItemsSource}"
                            SelectedIndex="{Binding DefaultIndex, RelativeSource={RelativeSource TemplatedParent}}"
                            ShowBorder="False"
                            ShowEditorButtons="False"
                            UseLayoutRounding="True">
                            <dxe:ComboBoxEdit.GroupStyle>
                                <GroupStyle HidesIfEmpty="True">
                                    <GroupStyle.ContainerStyle>
                                        <Style TargetType="{x:Type GroupItem}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <StackPanel>
                                                            <Separator IsEnabled="False">
                                                                <Separator.Visibility>
                                                                    <Binding Path="ItemCount">
                                                                        <Binding.Converter>
                                                                            <dxmvvm:ObjectToObjectConverter DefaultTarget="Collapsed">
                                                                                <dxmvvm:MapItem Source="1" Target="Visible" />
                                                                            </dxmvvm:ObjectToObjectConverter>
                                                                        </Binding.Converter>
                                                                    </Binding>
                                                                </Separator.Visibility>
                                                            </Separator>
                                                            <ItemsPresenter />
                                                        </StackPanel>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </GroupStyle.ContainerStyle>
                                </GroupStyle>
                            </dxe:ComboBoxEdit.GroupStyle>
                            <dxe:ComboBoxEdit.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <dx:DXImage
                                            Width="{Binding IconSize, RelativeSource={RelativeSource AncestorType=dxgr:FilterCriteriaControl}}"
                                            Height="{Binding IconSize, RelativeSource={RelativeSource AncestorType=dxgr:FilterCriteriaControl}}"
                                            Margin="0,0,5,0"
                                            Source="{Binding Image}" />
                                        <TextBlock Text="{Binding Name}" />
                                    </StackPanel>
                                    <DataTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="dx:SvgImageHelper.State" Value="Hover" />
                                        </Trigger>
                                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                            <Setter Property="dx:SvgImageHelper.State" Value="Pressed" />
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </dxe:ComboBoxEdit.ItemTemplate>
                            <dxe:ComboBoxEdit.EditNonEditableTemplate>
                                <ControlTemplate>
                                    <dx:DXBorder HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent">
                                        <Grid>
                                            <dx:DXImage
                                                Width="{Binding IconSize, RelativeSource={RelativeSource AncestorType=dxgr:FilterCriteriaControl}}"
                                                Height="{Binding IconSize, RelativeSource={RelativeSource AncestorType=dxgr:FilterCriteriaControl}}"
                                                Margin="1"
                                                Source="{Binding EditValue.Image}" />
                                        </Grid>
                                        <dx:DXBorder.Style>
                                            <Style TargetType="Border">
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Opacity" Value="0.5" />
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="False">
                                                        <Setter Property="Opacity" Value="1" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </dx:DXBorder.Style>
                                    </dx:DXBorder>
                                </ControlTemplate>
                            </dxe:ComboBoxEdit.EditNonEditableTemplate>
                        </dxe:ComboBoxEdit>
                        <dx:DXBorder
                            x:Name="borderDelimiter"
                            Grid.Column="1"
                            BorderBrush="{DynamicResource {dxgt:LWKey GridRow.GridDataRowDelimiterBrush}}"
                            BorderThickness="0,0,1,0"
                            Visibility="{Binding IsFocusedCell, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NewItemRowControl.DefaultStyleBase" BasedOn="{StaticResource AdditionalRowContainerStyle}" TargetType="dxgr:NewItemRowControl">
        <Setter Property="Visibility" Value="Collapsed" />
        <Setter Property="DataContext" Value="{Binding Path=(dxgr:GridControl.CurrentView).NewItemRowData, RelativeSource={RelativeSource Self}}" />
        <Setter Property="RowTemplate" Value="{DynamicResource {dxgt:LWKey GridRow.NewItemRowTemplate}}" />
        <Setter Property="ItemTemplate" Value="{DynamicResource {dxgt:LWKey GridRow.NewItemRowItemTemplate}}" />
        <Setter Property="IndicatorWidth" Value="{Binding Path=(dxgr:GridControl.CurrentView).ActualIndicatorWidth, RelativeSource={RelativeSource Self}}" />
        <Setter Property="dxgr:GridControl.CurrentViewChangedListener">
            <Setter.Value>
                <dxgr:NewItemRowInitializer />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AutoFilterRowControl.DefaultStyleBase" BasedOn="{StaticResource AdditionalRowContainerStyle}" TargetType="dxgr:AutoFilterRowControl">
        <Setter Property="DataContext" Value="{Binding Path=(dxgr:GridControl.CurrentView).AutoFilterRowData, RelativeSource={RelativeSource Self}}" />
        <Setter Property="RowTemplate" Value="{DynamicResource {dxgt:LWKey GridRow.FilterRowTemplate}}" />
        <Setter Property="ItemTemplate" Value="{DynamicResource {dxgt:LWKey GridRow.AutoFilterRowItemTemplate}}" />
        <Setter Property="IndicatorWidth" Value="{Binding Path=(dxgr:GridControl.CurrentView).ActualIndicatorWidth, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Visibility" Value="{Binding Path=(dxgr:GridControl.CurrentView).ShowAutoFilterRow, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
        <Setter Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxt:LWKey Brushes.ContrastSvgPalette}}" />
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsFocused}" Value="True" />
                    <Condition Binding="{Binding View.DataControl.SelectionMode}" Value="None" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="dx:SvgImageHelper.State" Value="Pressed" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="LoadingRowControl.DefaultStyleBase" TargetType="{x:Type dxgr:LoadingRowControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey GridRow.LoadingRowTemplate}}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding HasError}" Value="True">
                <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey GridRow.LoadingRowErrorTemplate}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="LoadingCardControl.DefaultStyleBase" TargetType="{x:Type dxgr:LoadingCardControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="MinWidth" Value="150" />
        <Setter Property="MinWidth" Value="150" />
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey GridCard.LoadingCardTemplate}}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding HasError}" Value="True">
                <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey GridCard.LoadingCardErrorTemplate}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="LoadingRowButton.DefaultStyleBase" TargetType="{x:Type dxgr:LoadingRowButton}">
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey GridRow.LoadingRowButtonTemplate}}" />
    </Style>
    <Style x:Key="LookUpEdit.DefaultStyleBase" BasedOn="{dx:TargetStaticResource LookUpEditBase.DefaultStyleBase, TargetDictionary={dxi:ThemeResourceDictionary Path='Core/Editors/Editors.xaml'}}" TargetType="{x:Type dxgl:LookUpEdit}">
        <Setter Property="ValidateOnTextInput" Value="false" />
        <Setter Property="AutoComplete" Value="true" />
        <Setter Property="IncrementalFiltering" Value="true" />
        <Setter Property="AllowRecreatePopupContent" Value="false" />
        <Setter Property="PopupContentTemplate" Value="{DynamicResource {dxgt:LWKey LookUpEdit.PopupContentTemplate}}" />
    </Style>
    <Style x:Key="FilterModelValueItemContentPresenter.DefaultStyleBase" TargetType="{x:Type dxfui_local:FilterModelValueItemContentPresenter}">
        <Setter Property="dxfui_local_native:FilterElementHelper.ValueItem" Value="{Binding}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl Content="{Binding Path=SelectedOperandMenuItem}" ContentTemplateSelector="{DynamicResource {dxgt:LWKey FilterEditor.OperandEditorTemplateSelector}}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FilterEditorLeafControl.DefaultStyleBase" TargetType="{x:Type dxfui_local:FilterEditorLeafControl}">
        <Setter Property="ContentTemplate" Value="{DynamicResource {dxgt:LWKey FilterEditor.LeafTemplate}}" />
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey FilterEditor.RowControlTemplate}}" />
    </Style>
    <Style x:Key="FilterEditorGroupControl.DefaultStyleBase" TargetType="{x:Type dxfui_local:FilterEditorGroupControl}">
        <Setter Property="ContentTemplate" Value="{DynamicResource {dxgt:LWKey FilterEditor.GroupTemplate}}" />
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey FilterEditor.RowControlTemplate}}" />
    </Style>
    <Style x:Key="FilterEditorCustomExpressionControl.DefaultStyleBase" TargetType="{x:Type dxfui_local:FilterEditorCustomExpressionControl}">
        <Setter Property="ContentTemplate" Value="{DynamicResource {dxgt:LWKey FilterEditor.CustomExpressionTemplate}}" />
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey FilterEditor.RowControlTemplate}}" />
    </Style>
    <Style x:Key="FilterEditorControl.DefaultStyleBase" TargetType="{x:Type dxfui_local:FilterEditorControl}">
        <Setter Property="Template" Value="{DynamicResource {dxgt:LWKey FilterEditor.ControlTemplate}}" />
        <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey FilterEditor.Background}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:LWKey FilterEditor.BorderBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource {dxgt:LWKey FilterEditor.Foreground}}" />
    </Style>
    <Style x:Key="InplaceEditorCell.DefaultStyleBase" TargetType="{x:Type dxfui_local:InplaceEditorCell}">
        <Setter Property="TextElement.Foreground" Value="{DynamicResource {dxgt:LWKey FilterEditor.InplaceEditorInactiveForeground}}" />
        <Setter Property="EditorTemplate" Value="{DynamicResource {dxgt:LWKey FilterEditor.InplaceEditorTemplate}}" />
        <Setter Property="MinHeight" Value="{DynamicResource {dxgt:LWKey FilterEditor.RowMinHeight}}" />
        <Setter Property="MinWidth" Value="{DynamicResource {dxgt:LWKey FilterEditor.InplaceEditorCellMinWidth}}" />
        <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey FilterEditor.InplaceEditorInactiveBackground}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:LWKey FilterEditor.InplaceEditorInactiveBorderBrush}}" />
        <Setter Property="BorderThickness" Value="{DynamicResource {dxgt:LWKey FilterEditor.EditorBorderThickness}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxfui_local:InplaceEditorCell">
                    <dx:DXBorder
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{DynamicResource {dxgt:LWKey FilterEditor.ItemCornerRadius}}">
                        <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                    </dx:DXBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="dxfui_local:FilterEditorNavigation.IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:LWKey FilterEditor.InplaceEditorActiveBorderBrush}}" />
            </Trigger>
            <Trigger Property="IsActive" Value="True">
                <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey FilterEditor.InplaceEditorActiveBackground}}" />
                <Setter Property="TextElement.Foreground" Value="{DynamicResource {dxgt:LWKey FilterEditor.InplaceEditorActiveForeground}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:LWKey FilterEditor.InplaceEditorActiveBorderBrush}}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsActive" Value="False" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Opacity" Value="0.62" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" Value="44" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ValueCountContentControl.DefaultStyleBase" TargetType="{x:Type dxfui_local:ValueCountContentControl}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxfui_local:ValueCountContentControl}">
                    <Grid HorizontalAlignment="Left">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter />
                        <TextBlock
                            x:Name="PART_Count"
                            Grid.Column="1"
                            Style="{StaticResource CountTextBlockStyle}"
                            Text="{Binding Count, StringFormat=({0}), RelativeSource={RelativeSource TemplatedParent}}">
                            <TextBlock.Visibility>
                                <MultiBinding Converter="{dxfui_local_native:ValueCountControlVisibilityConverter}">
                                    <Binding Path="ShowCount" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="Count" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </TextBlock.Visibility>
                        </TextBlock>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FilterValueEditor.DefaultStyleBase" TargetType="{x:Type dxfui_local:FilterValueEditor}">
        <Setter Property="UniqueValueTemplate" Value="{StaticResource FilterValueContainerTemplate}" />
        <Setter Property="PopupTopAreaTemplate" Value="{StaticResource FilterValueContainerTopAreaTemplate}" />
        <Setter Property="DateCalendarButtonTemplate" Value="{StaticResource DateCalendarButtonTemplate}" />
    </Style>
    <Style x:Key="LoadingIndicatorControl.DefaultStyleBase" TargetType="{x:Type dxfui_local:LoadingIndicatorControl}">
        <Setter Property="IsHitTestVisible" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxfui_local:LoadingIndicatorControl">
                    <Grid>
                        <ContentPresenter ContentSource="Content" />
                        <dxfui_local:FilteringUIWaitIndicator
                            Width="32"
                            Height="32"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Visibility="{TemplateBinding IsLoading, Converter={dx:BooleanToVisibilityConverter}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CheckBoxFilterElement.DefaultStyleBase" BasedOn="{StaticResource filterElementStyle}" TargetType="dxfui_local:CheckBoxFilterElement">
        <Setter Property="FilterModelTemplate">
            <Setter.Value>
                <DataTemplate DataType="dxfui:CheckBoxFilterModel">
                    <CheckBox Content="{Binding FieldDisplayName}" IsChecked="{Binding Value}" IsThreeState="True" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadioListFilterElement.DefaultStyleBase" BasedOn="{StaticResource filterElementStyle}" TargetType="dxfui_local:RadioListFilterElement">
        <Setter Property="FilterModelTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxfui_local:LoadingIndicatorControl IsLoading="{Binding IsLoading}">
                        <dxe:ListBoxEdit
                            AllowLiveDataShaping="False"
                            EditValue="{Binding SelectedFilterValue}"
                            ItemTemplate="{StaticResource FilterValueContainerTemplate}"
                            ItemsSource="{Binding FilterValues}">
                            <dxe:ListBoxEdit.StyleSettings>
                                <dxe:RadioListBoxEditStyleSettings EmptyItemText="{DXBinding '$dxe:EditorLocalizer.GetString($dxe:EditorStringId.FilterElementRadioAllItem)'}" ShowEmptyItem="True" />
                            </dxe:ListBoxEdit.StyleSettings>
                        </dxe:ListBoxEdit>
                    </dxfui_local:LoadingIndicatorControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CheckedListFilterElement.DefaultStyleBase" BasedOn="{StaticResource filterElementStyle}" TargetType="dxfui_local:CheckedListFilterElement">
        <Setter Property="FilterModelTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxfui_local:LoadingIndicatorControl IsLoading="{Binding IsLoading}">
                        <dxe:ListBoxEdit
                            AllowLiveDataShaping="False"
                            EditValue="{Binding SelectedFilterValues}"
                            ItemTemplate="{StaticResource FilterValueContainerTemplate}"
                            ItemsSource="{Binding FilterValues}">
                            <dxe:ListBoxEdit.StyleSettings>
                                <dxe:CheckedListBoxEditStyleSettings />
                            </dxe:ListBoxEdit.StyleSettings>
                        </dxe:ListBoxEdit>
                    </dxfui_local:LoadingIndicatorControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MultiFilterElement.DefaultStyleBase" BasedOn="{StaticResource filterElementStyle}" TargetType="{x:Type dxfui_local:MultiFilterElement}">
        <Setter Property="FilterModelTemplate" Value="{DynamicResource {dxgt:LWKey FilteringUI.MultiFilterElementTemplate}}" />
    </Style>
    <Style x:Key="ExcelStyleFilterElement.DefaultStyleBase" BasedOn="{StaticResource filterElementStyle}" TargetType="{x:Type dxfui_local:ExcelStyleFilterElement}">
        <Setter Property="dxfui_local_native:FilterElementHelper.FilterElement" Value="{Binding RelativeSource={RelativeSource Self}}" />
        <Setter Property="FilterModelTemplate" Value="{DynamicResource {dxgt:LWKey ExcelStyleFilterElement.Template}}" />
        <Setter Property="FilterRulesTemplate" Value="{DynamicResource {dxgt:LWKey ExcelStyleFilterElement.FilterRulesTemplate}}" />
        <Setter Property="FilterValuesTemplate" Value="{DynamicResource {dxgt:LWKey ExcelStyleFilterElement.FilterValuesTemplate}}" />
    </Style>
    <Style x:Key="DatePeriodsFilterElement.DefaultStyleBase" BasedOn="{StaticResource filterElementStyle}" TargetType="{x:Type dxfui_local:DatePeriodsFilterElement}">
        <Setter Property="Height" Value="{DynamicResource {dxgt:LWKey FilteringUI.DatePeriodsFilterElementHeight}}" />
        <Setter Property="FilterModelTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxe:ListBoxEdit
                        AllowUpdateTwoWayBoundPropertiesOnSynchronization="False"
                        DisplayMember="DisplayText"
                        EditValue="{Binding SelectedPredefinedFilters, Mode=TwoWay}"
                        ItemsSource="{Binding PredefinedFilters}"
                        ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                        ScrollViewer.VerticalScrollBarVisibility="Disabled"
                        SelectionMode="Multiple"
                        ShowBorder="False">
                        <dxe:ListBoxEdit.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Vertical" />
                            </ItemsPanelTemplate>
                        </dxe:ListBoxEdit.ItemsPanel>
                        <dxe:ListBoxEdit.StyleSettings>
                            <dxe:CheckedListBoxEditStyleSettings />
                        </dxe:ListBoxEdit.StyleSettings>
                    </dxe:ListBoxEdit>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Height" Value="{DynamicResource {dxgt:LWKey FilteringUI.DatePeriodsFilterElementHeightTouch}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="CalendarFilterElement.DefaultStyleBase" BasedOn="{StaticResource filterElementStyle}" TargetType="{x:Type dxfui_local:CalendarFilterElement}">
        <Setter Property="FilterModelTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxe:DateNavigator
                        AllowMultipleRanges="{Binding AllowMultipleDateRanges}"
                        ColumnCount="1"
                        IsMultiSelect="True"
                        RowCount="1"
                        SelectedDates="{Binding SelectedDates, Mode=TwoWay}"
                        ShowTodayButton="False" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PredefinedFiltersElement.DefaultStyleBase" BasedOn="{StaticResource filterElementStyle}" TargetType="{x:Type dxfui_local:PredefinedFiltersElement}">
        <Setter Property="FilterModelTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxe:ListBoxEdit AllowLiveDataShaping="False" EditValue="{Binding SelectedFilters}" ItemsSource="{Binding Filters}">
                        <dxe:ListBoxEdit.StyleSettings>
                            <dxe:CheckedListBoxEditStyleSettings ShowSelectAllItem="False" />
                        </dxe:ListBoxEdit.StyleSettings>
                        <dxe:ListBoxEdit.ItemTemplate>
                            <DataTemplate>
                                <dxfui_local:ValueCountContentControl Count="{Binding Count}">
                                    <TextBlock Text="{Binding Value.Name}" />
                                </dxfui_local:ValueCountContentControl>
                            </DataTemplate>
                        </dxe:ListBoxEdit.ItemTemplate>
                    </dxe:ListBoxEdit>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FormatConditionFilterElement.DefaultStyleBase" BasedOn="{StaticResource filterElementStyle}" TargetType="{x:Type dxfui_local:FormatConditionFilterElement}">
        <Setter Property="FilterModelTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxe:ListBoxEdit EditValue="{Binding SelectedFilters}" ItemsSource="{Binding Filters}" ShowBorder="False">
                        <dxe:ListBoxEdit.StyleSettings>
                            <dxe:CheckedListBoxEditStyleSettings ShowSelectAllItem="False" />
                        </dxe:ListBoxEdit.StyleSettings>
                        <dxe:ListBoxEdit.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Margin="0,1" Orientation="Horizontal">
                                    <dxgr:FormatPreviewControl Content="{Binding Value.Format}" PreviewString="Aa" />
                                    <dxfui_local:ValueCountContentControl Margin="2,0,0,0" VerticalAlignment="Center" Count="{Binding Count}">
                                        <TextBlock Text="{Binding Value.DisplayExpression}" />
                                    </dxfui_local:ValueCountContentControl>
                                </StackPanel>
                            </DataTemplate>
                        </dxe:ListBoxEdit.ItemTemplate>
                    </dxe:ListBoxEdit>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RangeFilterElement.DefaultStyleBase" BasedOn="{StaticResource filterElementStyle}" TargetType="{x:Type dxfui_local:RangeFilterElement}">
        <Setter Property="FilterModelTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel>
                        <DockPanel Margin="0,0,0,8" LastChildFill="False">
                            <dxe:SpinEdit
                                x:Name="PART_SpinEditFrom"
                                Width="80"
                                DockPanel.Dock="Left"
                                EditValue="{Binding From, UpdateSourceTrigger=PropertyChanged}"
                                MaxValue="{Binding To}"
                                MinValue="{Binding Min}"
                                ValidateOnTextInput="False" />

                            <dxe:SpinEdit
                                x:Name="PART_SpinEditTo"
                                Width="80"
                                DockPanel.Dock="Right"
                                EditValue="{Binding To, UpdateSourceTrigger=PropertyChanged}"
                                MaxValue="{Binding Max}"
                                MinValue="{Binding From}"
                                ValidateOnTextInput="False" />
                        </DockPanel>
                        <dxe:TrackBarEdit
                            x:Name="PART_TrackBarEdit"
                            EditValuePostDelay="300"
                            EditValuePostMode="Delayed"
                            IsMoveToPointEnabled="True"
                            IsSnapToTickEnabled="True"
                            Maximum="{Binding Max}"
                            Minimum="{Binding Min}"
                            SelectionEnd="{Binding To, Mode=TwoWay}"
                            SelectionStart="{Binding From, Mode=TwoWay}"
                            TickPlacement="None">
                            <dxe:TrackBarEdit.StyleSettings>
                                <dxe:TrackBarRangeStyleSettings />
                            </dxe:TrackBarEdit.StyleSettings>
                        </dxe:TrackBarEdit>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DateRangeFilterElement.DefaultStyleBase" BasedOn="{StaticResource filterElementStyle}" TargetType="{x:Type dxfui_local:DateRangeFilterElement}">
        <Setter Property="FilterModelTemplate">
            <Setter.Value>
                <DataTemplate>
                    <DockPanel LastChildFill="False">
                        <StackPanel DockPanel.Dock="Left" Orientation="Horizontal">
                            <TextBlock Margin="0,0,8,0" VerticalAlignment="Center" Text="{dxe:EditorStringId FilterElementDateRangeFrom}" />
                            <dxe:DateEdit
                                x:Name="PART_DateEditFrom"
                                Width="100"
                                AllowNullInput="False"
                                EditValue="{Binding From, UpdateSourceTrigger=PropertyChanged}"
                                MaxValue="{Binding To}"
                                MinValue="{Binding Min}"
                                ValidateOnTextInput="False" />
                        </StackPanel>
                        <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
                            <TextBlock Margin="0,0,8,0" VerticalAlignment="Center" Text="{dxe:EditorStringId FilterElementDateRangeTo}" />
                            <dxe:DateEdit
                                x:Name="PART_DateEditTo"
                                Width="100"
                                AllowNullInput="False"
                                EditValue="{Binding To, UpdateSourceTrigger=PropertyChanged}"
                                MaxValue="{Binding Max}"
                                MinValue="{Binding From}"
                                ValidateOnTextInput="False" />
                        </StackPanel>
                    </DockPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CheckedTreeListFilterElement.DefaultStyleBase" BasedOn="{StaticResource filterElementStyle}" TargetType="{x:Type dxfui_local:CheckedTreeListFilterElement}">
        <Setter Property="FilterModelTemplate" Value="{DynamicResource {dxgt:LWKey CheckedTreeListFilterElement.Template}}" />
    </Style>
    <Style x:Key="ColumnFilteringUIContentControl.DefaultStyleBase" TargetType="dxgr:ColumnFilteringUIContentControl">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <dxi:DefaultSizeDecorator DefaultChildWidth="{Binding Path=(dxe:PopupBaseEdit.PopupOwnerEdit).PopupMinWidth, RelativeSource={RelativeSource Self}}">
                        <dxgr:ColumnFilteringUIContentPresenter dxfui_local:FilterElement.Context="{Binding Context}" Content="{Binding}" ContentTemplate="{Binding Template}">
                            <dxmvvm:Interaction.Behaviors>
                                <dxfui_local:FilterSetBehavior x:Name="PART_FilterSetBehavior" />
                                <dxfui_local_native:RemoteBindingBehavior Content="{Binding ElementName=PART_FilterSetBehavior}" Target="{Binding Path=(dxe:PopupBaseEdit.PopupOwnerEdit), RelativeSource={RelativeSource TemplatedParent}}" />
                            </dxmvvm:Interaction.Behaviors>
                        </dxgr:ColumnFilteringUIContentPresenter>
                    </dxi:DefaultSizeDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ApplyFilterImmediately" Value="true">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContentControl}">
                            <dxi:DefaultSizeDecorator DefaultChildWidth="{Binding Path=(dxe:PopupBaseEdit.PopupOwnerEdit).PopupMinWidth, RelativeSource={RelativeSource Self}}">
                                <dxgr:ColumnFilteringUIContentPresenter Content="{Binding}" ContentTemplate="{Binding Template}" />
                            </dxi:DefaultSizeDecorator>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="FilteringPanelDeleteButtonElement.DefaultStyleBase" TargetType="{x:Type dxfui_local_native:FilteringPanelDeleteButtonElement}">
        <Setter Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxgt:LWKey FilteringPanel.SvgPalette}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxfui_local_native:FilteringPanelDeleteButtonElement}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter />
                        <Button
                            Grid.Column="1"
                            Margin="0,0,-2,0"
                            Command="{TemplateBinding DeleteCommand}"
                            CommandParameter="{TemplateBinding DeleteCommandParameter}"
                            Visibility="{Binding AllowDelete, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanToVisibilityConverter HiddenInsteadOfCollapsed=True}}">
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <ContentPresenter />
                                </ControlTemplate>
                            </Button.Template>
                            <dx:DXImage VerticalAlignment="Top" Source="{dx:SvgImageSource Uri='pack://application:,,,/DevExpress.Xpf.Grid.v24.1;component/FilteringUI/FilteringPanel/Images/Remove.svg'}" Stretch="None" />
                        </Button>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FilteringPanelElementPadding.DefaultStyleBase" TargetType="{x:Type dxfui_local_native:FilteringPanelElementPadding}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="1,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxfui_local_native:FilteringPanelElementPadding}">
                    <dx:DXBorder Background="Transparent" BorderBrush="Transparent" BorderThickness="{TemplateBinding Padding}">
                        <ContentPresenter />
                    </dx:DXBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="AddExtraPadding" Value="True">
                <Setter Property="Padding" Value="9,0,1,0" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="FilteringPanelBracketElement.DefaultStyleBase" TargetType="{x:Type dxfui_local_native:FilteringPanelBracketElement}">
        <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:LWKey FilteringPanel.BracketBorderBrush}}" />
        <Setter Property="Foreground" Value="#FF484848" />
        <Setter Property="Padding" Value="3,3,0,3" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxfui_local_native:FilteringPanelBracketElement}">
                    <Grid Background="{TemplateBinding Background}">
                        <dx:DXBorder
                            x:Name="border"
                            Width="4"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1,1,0,1" />
                        <ContentPresenter Margin="{TemplateBinding ActualPadding}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HorizontalContentAlignment" Value="Right">
                            <Setter TargetName="border" Property="BorderThickness" Value="0,1,1,1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="HorizontalContentAlignment" Value="Right">
                <Setter Property="Padding" Value="0,3,3,3" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="FilteringPanelBracketPairElement.DefaultStyleBase" TargetType="{x:Type dxfui_local_native:FilteringPanelBracketPairElement}">
        <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:LWKey FilteringPanel.BracketBorderBrush}}" />
        <Setter Property="Foreground" Value="#FF484848" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxfui_local_native:FilteringPanelBracketPairElement}">
                    <Grid Background="{TemplateBinding Background}">
                        <dx:DXBorder
                            Width="4"
                            HorizontalAlignment="Left"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1,1,0,1" />
                        <ContentPresenter Margin="{TemplateBinding Padding}" />
                        <dx:DXBorder
                            Width="4"
                            HorizontalAlignment="Right"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0,1,1,1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FilteringPanelContentElement.DefaultStyleBase" TargetType="{x:Type dxfui_local_native:FilteringPanelContentElement}">
        <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey FilteringPanel.PropertyBackground}}" />
        <Setter Property="Padding" Value="{DynamicResource {dxgt:LWKey FilteringPanel.ElementPadding}}" />
        <Setter Property="Foreground" Value="{DynamicResource {dxgt:LWKey FilteringPanel.ElementForeground}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxfui_local_native:FilteringPanelContentElement}">
                    <dx:DXBorder
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{DynamicResource {dxgt:LWKey FilteringPanel.ElementCornerRadius}}">
                        <ContentPresenter MinHeight="14" />
                    </dx:DXBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ElementType" Value="Value">
                <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey FilteringPanel.ValueBackground}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="FilteringPanelOperatorElement.DefaultStyleBase" TargetType="{x:Type dxfui_local_native:FilteringPanelOperatorElement}">
        <Setter Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxgt:LWKey FilteringPanel.SvgPalette}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxfui_local_native:FilteringPanelOperatorElement}">
                    <dx:DXImage x:Name="image" Width="16" Source="{dx:SvgImageSource Uri='pack://application:,,,/DevExpress.Xpf.Grid.v24.1.Core;component/FilteringUI/FilterEditor/Images/Equals.svg'}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="OperatorType" Value="NotEqual">
                            <Setter TargetName="image" Property="Source" Value="{dx:SvgImageSource Uri='pack://application:,,,/DevExpress.Xpf.Grid.v24.1.Core;component/FilteringUI/FilterEditor/Images/DoesNotEqual.svg'}" />
                        </Trigger>
                        <Trigger Property="OperatorType" Value="Greater">
                            <Setter TargetName="image" Property="Source" Value="{dx:SvgImageSource Uri='pack://application:,,,/DevExpress.Xpf.Grid.v24.1.Core;component/FilteringUI/FilterEditor/Images/Greater.svg'}" />
                        </Trigger>
                        <Trigger Property="OperatorType" Value="Less">
                            <Setter TargetName="image" Property="Source" Value="{dx:SvgImageSource Uri='pack://application:,,,/DevExpress.Xpf.Grid.v24.1.Core;component/FilteringUI/FilterEditor/Images/Less.svg'}" />
                        </Trigger>
                        <Trigger Property="OperatorType" Value="LessOrEqual">
                            <Setter TargetName="image" Property="Source" Value="{dx:SvgImageSource Uri='pack://application:,,,/DevExpress.Xpf.Grid.v24.1.Core;component/FilteringUI/FilterEditor/Images/LessOrEqual.svg'}" />
                        </Trigger>
                        <Trigger Property="OperatorType" Value="GreaterOrEqual">
                            <Setter TargetName="image" Property="Source" Value="{dx:SvgImageSource Uri='pack://application:,,,/DevExpress.Xpf.Grid.v24.1.Core;component/FilteringUI/FilterEditor/Images/GreaterOrEqual.svg'}" />
                        </Trigger>
                        <Trigger Property="OperatorType" Value="Divide">
                            <Setter TargetName="image" Property="Source" Value="{dx:SvgImageSource Uri='pack://application:,,,/DevExpress.Xpf.Grid.v24.1;component/FilteringUI/FilteringPanel/Images/division.svg'}" />
                        </Trigger>
                        <Trigger Property="OperatorType" Value="Modulo">
                            <Setter TargetName="image" Property="Source" Value="{dx:SvgImageSource Uri='pack://application:,,,/DevExpress.Xpf.Grid.v24.1;component/FilteringUI/FilteringPanel/Images/percent.svg'}" />
                        </Trigger>
                        <Trigger Property="OperatorType" Value="Multiply">
                            <Setter TargetName="image" Property="Source" Value="{dx:SvgImageSource Uri='pack://application:,,,/DevExpress.Xpf.Grid.v24.1;component/FilteringUI/FilteringPanel/Images/multiplication.svg'}" />
                        </Trigger>
                        <Trigger Property="OperatorType" Value="Plus">
                            <Setter TargetName="image" Property="Source" Value="{dx:SvgImageSource Uri='pack://application:,,,/DevExpress.Xpf.Grid.v24.1;component/FilteringUI/FilteringPanel/Images/plus.svg'}" />
                        </Trigger>
                        <Trigger Property="OperatorType" Value="Minus">
                            <Setter TargetName="image" Property="Source" Value="{dx:SvgImageSource Uri='pack://application:,,,/DevExpress.Xpf.Grid.v24.1;component/FilteringUI/FilteringPanel/Images/minus.svg'}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FilteringPanelTextElement.DefaultStyleBase" TargetType="{x:Type dxfui_local_native:FilteringPanelTextElement}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="{DynamicResource {dxgt:LWKey FilteringPanel.ElementPadding}}" />
        <Setter Property="Foreground" Value="{DynamicResource {dxgt:LWKey FilteringPanel.Foreground}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxfui_local_native:FilteringPanelTextElement}">
                    <dx:DXBorder
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{DynamicResource {dxgt:LWKey FilteringPanel.ElementCornerRadius}}">
                        <TextBlock x:Name="text" Text="{TemplateBinding Text}" />
                    </dx:DXBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ElementType" Value="Highlighted">
                <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey FilteringPanel.HighlightedBackground}}" />
                <Setter Property="Foreground" Value="{DynamicResource {dxgt:LWKey FilteringPanel.ElementForeground}}" />
            </Trigger>
            <Trigger Property="AddExtraPadding" Value="False">
                <Setter Property="Padding" Value="0,1,0,2" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="FilteringPanelFilterPresenter.DefaultStyleBase" TargetType="{x:Type dxfui_local_native:FilteringPanelFilterPresenter}">
        <Setter Property="Margin" Value="2,1" />
        <Setter Property="TextBlock.FontSize" Value="11" />
        <Setter Property="ExtraPadding" Value="0,3" />
        <Setter Property="AddExtraPaddingIfHeightLesserThan" Value="26" />
    </Style>
    <Style x:Key="FilteringPanelControl.DefaultStyleBase" TargetType="{x:Type dxfui_local:FilteringPanelControl}">
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Padding" Value="{DynamicResource {dxgt:LWKey FilteringPanel.PanelPadding}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxfui_local:FilteringPanelControl}">
                    <dx:DXBorder
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <dx:DXBorder Width="{TemplateBinding Indent}" />
                            <dxe:CheckEdit
                                x:Name="cbFilterEnable"
                                Grid.Column="1"
                                Margin="8,5"
                                VerticalAlignment="Top"
                                AutomationProperties.Name="FilterEnable"
                                Content="{TemplateBinding Caption}"
                                EditValue="{Binding IsFilterEnabled, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}" />
                            <dxfui_local_native:FilteringPanelFilterPresenter
                                x:Name="filteringPanelFilterPresenter"
                                Grid.Column="2"
                                AllowDeleteColumnFilters="{TemplateBinding AllowDeleteColumnFilters}"
                                Filter="{TemplateBinding Filter}"
                                MaxLineCount="{TemplateBinding ActualMaxLineCount}" />
                            <dx:DXBorder
                                x:Name="borderFade"
                                Grid.Column="2"
                                Width="40"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Stretch"
                                Background="{DynamicResource {dxgt:LWKey FilteringPanel.ControlBackground}}"
                                Focusable="False"
                                IsHitTestVisible="False">
                                <dx:DXBorder.OpacityMask>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                        <GradientStop Offset="0" Color="Transparent" />
                                        <GradientStop Offset="1" Color="White" />
                                    </LinearGradientBrush>
                                </dx:DXBorder.OpacityMask>
                            </dx:DXBorder>
                            <dx:DXBorder
                                x:Name="borderFadeVertical"
                                Grid.ColumnSpan="7"
                                Height="40"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Bottom"
                                Background="{DynamicResource {dxgt:LWKey FilteringPanel.ControlBackground}}"
                                Focusable="False"
                                IsHitTestVisible="False">
                                <dx:DXBorder.OpacityMask>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Offset="0" Color="Transparent" />
                                        <GradientStop Offset="1" Color="White" />
                                    </LinearGradientBrush>
                                </dx:DXBorder.OpacityMask>
                            </dx:DXBorder>
                            <dx:DXBorder
                                x:Name="borderButtonExpand"
                                Grid.Column="3"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Background="{DynamicResource {dxgt:LWKey FilteringPanel.ControlBackground}}">
                                <Button
                                    x:Name="buttonExpand"
                                    AutomationProperties.Name="ExpandFilterPanel"
                                    Command="{TemplateBinding ExpandCommand}"
                                    Style="{DynamicResource {dxgt:LWKey FilteringPanel.ToolbarButton}}"
                                    ToolTip="{Binding IsTabStop, RelativeSource={RelativeSource Self}, ConverterParameter=FilterPanelExpand, Converter={StaticResource EditorStringIdConverter}}">
                                    <dx:DXImage Source="pack://application:,,,/DevExpress.Xpf.Grid.v24.1;component/FilteringUI/FilteringPanel/Images/Expand.svg" Stretch="None" />
                                </Button>
                            </dx:DXBorder>

                            <Button
                                x:Name="buttonCollapse"
                                Grid.Column="3"
                                AutomationProperties.Name="CollapseFilterPanel"
                                Command="{TemplateBinding CollapseCommand}"
                                Style="{DynamicResource {dxgt:LWKey FilteringPanel.ToolbarButton}}"
                                ToolTip="{Binding IsTabStop, RelativeSource={RelativeSource Self}, ConverterParameter=FilterPanelCollapse, Converter={StaticResource EditorStringIdConverter}}">
                                <dx:DXImage Source="pack://application:,,,/DevExpress.Xpf.Grid.v24.1;component/FilteringUI/FilteringPanel/Images/Collapse.svg" Stretch="None" />
                            </Button>

                            <Grid x:Name="mru" Grid.Column="4">
                                <dxe:ComboBoxEdit
                                    x:Name="PART_MRUList"
                                    Width="30"
                                    Height="30"
                                    IsHitTestVisible="False"
                                    IsTextEditable="False"
                                    ItemsSource="{TemplateBinding MRUFilters}"
                                    Opacity="0"
                                    ShowBorder="False">
                                    <dxe:ComboBoxEdit.ItemTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <dxfui_local_native:FilteringPanelFilterPresenter x:Name="filterPresenter" MaxWidth="1000" Filter="{Binding}" />
                                                <dx:DXBorder
                                                    x:Name="borderFade"
                                                    Width="40"
                                                    HorizontalAlignment="Right"
                                                    VerticalAlignment="Stretch"
                                                    Background="{DynamicResource {dxgt:LWKey FilteringPanel.ControlBackground}}"
                                                    Focusable="False"
                                                    IsHitTestVisible="False"
                                                    Visibility="{Binding Path=IsTrimmed, ElementName=filterPresenter, Converter={dx:BooleanToVisibilityConverter}}">
                                                    <dx:DXBorder.OpacityMask>
                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                            <GradientStop Offset="0" Color="Transparent" />
                                                            <GradientStop Offset="1" Color="White" />
                                                        </LinearGradientBrush>
                                                    </dx:DXBorder.OpacityMask>
                                                </dx:DXBorder>
                                            </Grid>
                                        </DataTemplate>
                                    </dxe:ComboBoxEdit.ItemTemplate>
                                    <dxe:ComboBoxEdit.Resources>
                                        <ControlTemplate x:Key="{dxt:LWKey EditorListBox.Template}" TargetType="{x:Type dxep:EditorListBox}">
                                            <dx:DXBorder x:Name="Bd" Background="{DynamicResource {dxgt:LWKey FilteringPanel.ControlBackground}}">
                                                <Grid>
                                                    <ScrollViewer
                                                        x:Name="ScrollViewer"
                                                        Padding="{TemplateBinding Padding}"
                                                        dx:FocusHelper2.Focusable="False"
                                                        BorderThickness="0">
                                                        <ItemsPresenter />
                                                        <dx:ScrollBarExtensions.AllowMouseScrolling>
                                                            <sys:Boolean>true</sys:Boolean>
                                                        </dx:ScrollBarExtensions.AllowMouseScrolling>
                                                    </ScrollViewer>
                                                </Grid>
                                            </dx:DXBorder>
                                        </ControlTemplate>

                                        <ControlTemplate x:Key="{dxt:LWKey EditorListBox.ItemTemplate}" TargetType="{x:Type dxe:ListBoxEditItem}">
                                            <Grid x:Name="Root" Background="{TemplateBinding Background}">
                                                <dx:DXBorder x:Name="SelectedState" Background="{DynamicResource {dxgt:LWKey FilteringPanel.PopupElementPressedBackground}}" Opacity="0" />
                                                <dx:DXBorder
                                                    x:Name="HoverState"
                                                    Background="{DynamicResource {dxgt:LWKey FilteringPanel.PopupElementHoverBackground}}"
                                                    Opacity="0"
                                                    Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).AllowItemHighlighting, Converter={dx:BooleanToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                                                <DockPanel HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" LastChildFill="True">
                                                    <dxei:ImagePresenter Padding="{dx:TargetStaticResource {dxt:LWKey ComboBoxEdit.SelectedItemImagePadding}, TargetDictionary={dxi:ThemeResourceDictionary Path='Core/Editors/Editors.xaml'}}" DockPanel.Dock="Left" />
                                                    <dx:ContentContainer x:Name="content" Margin="{dx:TargetStaticResource {dxt:LWKey ComboBoxEdit.SelectedItemContentPadding}, TargetDictionary={dxi:ThemeResourceDictionary Path='Core/Editors/Editors.xaml'}}">
                                                        <ContentPresenter
                                                            x:Name="contentPresenter"
                                                            Width="Auto"
                                                            Height="Auto"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                    </dx:ContentContainer>
                                                </DockPanel>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter TargetName="SelectedState" Property="Opacity" Value="1" />
                                                    <Setter TargetName="HoverState" Property="Opacity" Value="0" />
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsSelected" Value="True" />
                                                        <Condition Property="IsFocused" Value="False" />
                                                    </MultiTrigger.Conditions>
                                                    <Setter TargetName="SelectedState" Property="Opacity" Value="0" />
                                                    <Setter TargetName="HoverState" Property="Opacity" Value="1" />
                                                </MultiTrigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter TargetName="content" Property="Opacity" Value="0.35" />
                                                </Trigger>
                                                <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                                                    <Setter TargetName="content" Property="Margin" Value="12" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>

                                    </dxe:ComboBoxEdit.Resources>
                                </dxe:ComboBoxEdit>
                                <ToggleButton
                                    x:Name="buttonMRU"
                                    AutomationProperties.Name="MRUFilterList"
                                    IsChecked="{Binding IsPopupOpen, ElementName=PART_MRUList}"
                                    Style="{DynamicResource {dxgt:LWKey FilteringPanel.ToolbarButton}}"
                                    ToolTip="{Binding IsTabStop, RelativeSource={RelativeSource Self}, ConverterParameter=FilterPanelMRU, Converter={StaticResource EditorStringIdConverter}}">
                                    <dx:DXImage Source="pack://application:,,,/DevExpress.Xpf.Grid.v24.1;component/FilteringUI/FilteringPanel/Images/MRU.svg" Stretch="None" />
                                </ToggleButton>
                            </Grid>
                            <Button
                                x:Name="buttonEditFilter"
                                Grid.Column="5"
                                AutomationProperties.Name="EditFilter"
                                Command="{TemplateBinding ShowFilterEditorCommand}"
                                Style="{DynamicResource {dxgt:LWKey FilteringPanel.ToolbarButton}}"
                                ToolTip="{Binding IsTabStop, RelativeSource={RelativeSource Self}, ConverterParameter=FilterPanelEditFilter, Converter={StaticResource EditorStringIdConverter}}">
                                <dx:DXImage Source="pack://application:,,,/DevExpress.Xpf.Grid.v24.1;component/FilteringUI/FilteringPanel/Images/Edit.svg" Stretch="None" />
                            </Button>
                            <Button
                                x:Name="buttonClearFilter"
                                Grid.Column="6"
                                AutomationProperties.Name="ClearFilter"
                                Command="{TemplateBinding ClearFilterCommand}"
                                Style="{DynamicResource {dxgt:LWKey FilteringPanel.ToolbarButton}}"
                                ToolTip="{Binding IsTabStop, RelativeSource={RelativeSource Self}, ConverterParameter=FilterPanelClearFilter, Converter={StaticResource EditorStringIdConverter}}">
                                <dx:DXImage Source="pack://application:,,,/DevExpress.Xpf.Grid.v24.1;component/FilteringUI/FilteringPanel/Images/Close.svg" Stretch="None" />
                            </Button>
                        </Grid>
                    </dx:DXBorder>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsTrimmed, ElementName=filteringPanelFilterPresenter}" Value="True">
                            <Setter TargetName="borderButtonExpand" Property="Visibility" Value="Visible" />
                            <Setter TargetName="borderFade" Property="Visibility" Value="Visible" />
                            <Setter TargetName="filteringPanelFilterPresenter" Property="Grid.ColumnSpan" Value="2" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsTrimmed, ElementName=filteringPanelFilterPresenter}" Value="False">
                            <Setter TargetName="borderButtonExpand" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="borderFade" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsTrimmedVertical, ElementName=filteringPanelFilterPresenter}" Value="True">
                            <Setter TargetName="borderFadeVertical" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsTrimmedVertical, ElementName=filteringPanelFilterPresenter}" Value="False">
                            <Setter TargetName="borderFadeVertical" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ActualLineCount, ElementName=filteringPanelFilterPresenter}" Value="0">
                            <Setter TargetName="buttonCollapse" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ActualLineCount, ElementName=filteringPanelFilterPresenter}" Value="1">
                            <Setter TargetName="buttonCollapse" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsChecked, ElementName=cbFilterEnable}" Value="True">
                            <Setter TargetName="cbFilterEnable" Property="ToolTip" Value="{Binding IsTabStop, RelativeSource={RelativeSource Self}, ConverterParameter=FilterPanelDisableFilter, Converter={StaticResource EditorStringIdConverter}}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsChecked, ElementName=cbFilterEnable}" Value="False">
                            <Setter TargetName="cbFilterEnable" Property="ToolTip" Value="{Binding IsTabStop, RelativeSource={RelativeSource Self}, ConverterParameter=FilterPanelEnableFilter, Converter={StaticResource EditorStringIdConverter}}" />
                        </DataTrigger>
                        <Trigger Property="Filter" Value="{x:Null}">
                            <Setter TargetName="cbFilterEnable" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsMRUListEmpty" Value="true">
                            <Setter TargetName="mru" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="AllowChangeExpandState" Value="False">
                            <Setter TargetName="borderButtonExpand" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="buttonCollapse" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="AllowMRU" Value="False">
                            <Setter TargetName="mru" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="AllowEditFilter" Value="False">
                            <Setter TargetName="buttonEditFilter" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="AllowDisableFilter" Value="False">
                            <Setter TargetName="cbFilterEnable" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="AllowClearFilter" Value="False">
                            <Setter TargetName="buttonClearFilter" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FixedTotalSummaryControl.DefaultStyleBase" TargetType="{x:Type dxgr:FixedTotalSummaryControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxgr:FixedTotalSummaryControl}">
                    <ContentPresenter x:Name="PART_Presenter" />

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FixedTotalSummaryItemsTextBlock.DefaultStyleBase" TargetType="{x:Type dxgr:FixedTotalSummaryItemsTextBlock}">
        <Setter Property="dxgr:GridViewHitInfoBase.HitTestAcceptor">
            <Setter.Value>
                <dxght:FixedTotalSummaryTableViewHitTestAcceptor />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxgr:FixedTotalSummaryItemsTextBlock}">
                    <TextBlock dxgcore:InlineTextService.InlineInfo="{TemplateBinding SummaryTextInfo}" Style="{DynamicResource {dxgt:LWKey TableView.FixedSummaryTextBlockStyle}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FixedTotalSummaryContainerControl.DefaultStyleBase" TargetType="{x:Type dxgr:FixedTotalSummaryContainerControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxgr:FixedTotalSummaryContainerControl}">
                    <Grid>
                        <dx:DXBorder x:Name="border" Background="{DynamicResource {dxgt:LWKey GridRow.FixedSummaryFillBrush}}" BorderBrush="{DynamicResource {dxgt:LWKey GridRow.TotalSummaryBorderBrush}}">
                            <dx:DXBorder.BorderThickness>
                                <Binding Path="View.IsRootView">
                                    <Binding.Converter>
                                        <dx:BoolToObjectConverter FalseValue="0,0,0,1" TrueValue="0,1,0,0" />
                                    </Binding.Converter>
                                </Binding>
                            </dx:DXBorder.BorderThickness>
                        </dx:DXBorder>
                        <dxgr:FixedTotalSummaryControl
                            x:Name="PART_FixedTotalSummary"
                            MinHeight="29"
                            Margin="{DynamicResource {dxgt:LWKey TableView.TotalSummaryPanelMargin}}"
                            Foreground="{DynamicResource {dxgt:LWKey GridRow.TotalSummaryBrush}}">
                            <dx:DXDockPanel Background="Transparent" LastChildFill="True">
                                <dxgr:FixedTotalSummaryItemsTextBlock
                                    x:Name="PART_FixedTotalSummaryLeftPart"
                                    Margin="6"
                                    HorizontalAlignment="Left"
                                    dx:DXDockPanel.Dock="Left"
                                    FixedTotalSummaryElementStyle="{Binding Path=(dxgr:GridControl.CurrentView).FixedTotalSummaryElementStyle, RelativeSource={RelativeSource TemplatedParent}}"
                                    TotalSummariesSource="{Binding Path=(dxgr:GridControl.CurrentView).FixedSummariesLeft, RelativeSource={RelativeSource TemplatedParent}}" />
                                <dxgr:FixedTotalSummaryItemsTextBlock
                                    x:Name="PART_FixedTotalSummaryRightPart"
                                    Margin="6"
                                    HorizontalAlignment="Right"
                                    dx:DXDockPanel.Dock="Right"
                                    FixedTotalSummaryElementStyle="{Binding Path=(dxgr:GridControl.CurrentView).FixedTotalSummaryElementStyle, RelativeSource={RelativeSource TemplatedParent}}"
                                    TotalSummariesSource="{Binding Path=(dxgr:GridControl.CurrentView).FixedSummariesRight, RelativeSource={RelativeSource TemplatedParent}}" />
                            </dx:DXDockPanel>
                        </dxgr:FixedTotalSummaryControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=(dxgr:GridControl.CurrentView).DataControl.(dxi:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{Binding Path=(dxgr:GridControl.CurrentView).DataControl.(dxi:AppearanceOptions.Background), RelativeSource={RelativeSource TemplatedParent}}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GroupPanelColumnItemsControl.DefaultStyleBase" BasedOn="{StaticResource {dxgt:LWKey GroupRow.GroupItemsControlStyle}}" TargetType="{x:Type dxgr:GroupPanelColumnItemsControl}">
        <Setter Property="MinHeight" Value="21" />
    </Style>
    <Style x:Key="HeaderFilterDisplayControl.DefaultStyle" TargetType="{x:Type dxg:HeaderFilterDisplayControl}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxg:HeaderFilterDisplayControl}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                        <ToggleButton x:Name="PART_SearchToggle">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <dx:DXBorder VerticalAlignment="Center" Background="#00FF0000">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <dx:DXBorder x:Name="PART_SearchIconBorder" VerticalAlignment="Center" Background="#00000000">
                                                <Path
                                                    x:Name="PART_SearchIcon"
                                                    Visibility="Collapsed"
                                                    Style="{DynamicResource {dxgt:LWKey GridColumnHeader.HeaderFilterSearchIconStyle}}"
                                                    Margin="2,0,2,0"
                                                    Fill="{DynamicResource {dxgt:LWKey GridColumnHeader.HeaderFilterDisplayForeground}}" />
                                            </dx:DXBorder>
                                            <TextBlock Name="PART_Textblock" Grid.Column="1" Text="{TemplateBinding Content}">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                                                        <Setter Property="dxei:TextBlockService.AllowIsTextTrimmed" Value="True" />
                                                        <Setter Property="Foreground" Value="{DynamicResource {dxgt:LWKey GridColumnHeader.HeaderFilterDisplayForeground}}" />
                                                        <Style.Triggers>
                                                            <Trigger Property="dxei:TextBlockService.IsTextTrimmed" Value="True">
                                                                <Setter Property="ToolTipService.ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Text}" />
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Grid>
                                    </dx:DXBorder>
                                    <ControlTemplate.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type dxg:GridColumnHeader}}}" Value="True" />
                                                <Condition Binding="{Binding AutoFilterValue, Converter={dxgi:StringToBoolConverter}}" Value="False" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="PART_SearchIcon" Property="Visibility" Value="Visible" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type dxg:GridColumnHeader}}}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="PART_Textblock" Property="Foreground" Value="{DynamicResource {dxgt:LWKey GridColumnHeader.HeaderFilterDisplayForegroundHeaderHover}}" />
                                            <Setter TargetName="PART_SearchIcon" Property="Fill" Value="{DynamicResource {dxgt:LWKey GridColumnHeader.HeaderFilterDisplayForegroundHeaderHover}}" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource AncestorType={x:Type dxg:GridColumnHeader}}}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="PART_Textblock" Property="Foreground" Value="{DynamicResource {dxgt:LWKey GridColumnHeader.HeaderFilterDisplayForegroundHeaderPressed}}" />
                                            <Setter TargetName="PART_SearchIcon" Property="Fill" Value="{DynamicResource {dxgt:LWKey GridColumnHeader.HeaderFilterDisplayForegroundHeaderPressed}}" />
                                        </MultiDataTrigger>
                                        <Trigger SourceName="PART_SearchIconBorder" Property="IsMouseOver" Value="True">
                                            <Setter TargetName="PART_SearchIcon" Property="Fill" Value="{DynamicResource {dxgt:LWKey GridColumnHeader.HeaderFilterDisplayForegroundHover}}" />
                                        </Trigger>
                                        <Trigger SourceName="PART_Textblock" Property="IsMouseOver" Value="True">
                                            <Setter TargetName="PART_Textblock" Property="Foreground" Value="{DynamicResource {dxgt:LWKey GridColumnHeader.HeaderFilterDisplayForegroundHover}}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <Button
                            Name="PART_ClearButton"
                            Grid.Column="1"
                            dx:FocusHelper2.Focusable="False"
                            Visibility="Collapsed"
                            Command="{Binding Path=ClearCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxg:HeaderFilterDisplayControl}}"
                            Template="{DynamicResource {dxgt:LWKey GridColumnHeader.HeaderFilterDisplayClearButtonTemplate}}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding AutoFilterValue, Converter={dxgi:StringToBoolConverter}}" Value="True" />
                                <Condition Binding="{Binding View.AutoFilterRowClearButtonMode}" Value="Always" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_ClearButton" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding AutoFilterValue, Converter={dxgi:StringToBoolConverter}}" Value="True" />
                                <Condition Binding="{Binding View.AutoFilterRowClearButtonMode}" Value="Display" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_ClearButton" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Thickness x:Key="{dxgt:LWKey GridColumnHeader.HeaderFilterContainerMarginTouch}">-14,-14,-13,-13</Thickness>
    <Style x:Key="HeaderFilterEditControl.DefaultStyle" TargetType="{x:Type dxg:HeaderFilterEditControl}">
        <Setter Property="Background" Value="{DynamicResource {dxgt:LWKey GridColumnHeader.HeaderFilterContainerBackground}}" />
        <Setter Property="Margin" Value="{DynamicResource {dxgt:LWKey GridColumnHeader.HeaderFilterContainerMargin}}" />
        <Setter Property="Visibility" Value="Collapsed" />
        <Setter Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxt:LWKey Brushes.ContrastSvgPalette}}" />
        <Setter Property="Foreground" Value="{DynamicResource {dxgt:LWKey GridColumnHeader.HeaderFilterForeground}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxg:HeaderFilterEditControl}">
                    <dx:DXBorder Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            <dxgr:FilterCriteriaControl Grid.Column="0" DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxg:HeaderFilterEditControl}}">
                                <dxgr:FilterCriteriaControl.Style>
                                    <Style TargetType="dxg:FilterCriteriaControl">
                                        <Setter Property="Column" Value="{Binding Column, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxg:HeaderFilterEditControl}}" />
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Column.ActualShowCriteriaInAutoFilterRow, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxg:HeaderFilterEditControl}}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </dxgr:FilterCriteriaControl.Style>
                            </dxgr:FilterCriteriaControl>
                            <ContentPresenter Grid.Column="1" Content="{TemplateBinding Editor}" />
                            <Button
                                Name="PART_ClearButton"
                                Grid.Column="2"
                                Visibility="Collapsed"
                                Background="#00000000"
                                dx:FocusHelper2.Focusable="False"
                                Margin="0,0,2,0"
                                Command="{Binding Path=ClearCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxg:HeaderFilterEditControl}}"
                                Template="{DynamicResource {dxgt:LWKey GridColumnHeader.HeaderFilterEditClearButtonTemplate}}" />
                        </Grid>
                    </dx:DXBorder>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ActualAllowAutoFilterClearButton}" Value="True" />
                                <Condition Binding="{Binding AutoFilterValue, Converter={dxgi:StringToBoolConverter}}" Value="True" />
                                <Condition Binding="{Binding View.AutoFilterRowClearButtonMode}" Value="Always" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_ClearButton" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ActualAllowAutoFilterClearButton}" Value="True" />
                                <Condition Binding="{Binding AutoFilterValue, Converter={dxgi:StringToBoolConverter}}" Value="True" />
                                <Condition Binding="{Binding View.AutoFilterRowClearButtonMode}" Value="Edit" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_ClearButton" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Margin" Value="{DynamicResource {dxgt:LWKey GridColumnHeader.HeaderFilterContainerMarginTouch}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="FixedGroupsAdorner.DefaultStyleBase" TargetType="{x:Type dxgr:FixedGroupsAdorner}">
        <Setter Property="AdornerBrush">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Offset="0" Color="#20000000" />
                    <GradientStop Offset="1" Color="Transparent" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="AdornerHeight" Value="12" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxgr:FixedGroupsAdorner}">
                    <ContentPresenter Content="{TemplateBinding Content}" IsHitTestVisible="false" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion DEFAULT STYLES-->
</ResourceDictionary>