<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:cs="colorscheme_ignorable_uri"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxdot="http://schemas.devexpress.com/winfx/2008/xaml/docking/themekeys"
    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
    xmlns:dxdove="http://schemas.devexpress.com/winfx/2008/xaml/docking/visualelements"
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
    xmlns:dxdop="http://schemas.devexpress.com/winfx/2008/xaml/docking/platform"
    xmlns:dxdo="http://schemas.devexpress.com/winfx/2008/xaml/docking"
    mc:Ignorable="cs">

    <ResourceDictionary.MergedDictionaries>
        <dxi:ThemeResourceDictionary Path="Docking/_{ThemeCategory}.xaml" />
        <dxi:ThemeResourceDictionary Path="Docking/Generic.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <dx:BoolToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <dx:BoolToVisibilityInverseConverter x:Key="BoolToVisibilityInverseConverter" />
    <dx:BoolToThicknessConverter x:Key="BoolToThicknessConverter" ThicknessTrue="-2" />
    <dxdove:DockInverseConverter x:Key="DockInverseConverter" />
    <dxdove:DockToVerticalAlignmentConverter x:Key="DockToVerticalAlignmentConverter" />
    <dxdove:DockToHorizontalAlignmentConverter x:Key="DockToHorizontalAlignmentConverter" />
    <dxdove:DockTypeToThicknessConverter x:Key="DockTypeToThicknessConverter" All="6" Inverted="True" />
    <dxdove:DockTypeToThicknessConverter x:Key="dockTypeToThicknessLightConverter" All="1" Inverted="True" />
    <dxdove:GroupCaptionLocationToDockConverter x:Key="GroupCaptionLocationToDockConverter" />
    <dxdove:TabHeaderCaptionLocationToDockConverter x:Key="TabHeaderCaptionLocationToDockConverter" />

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\UICustom.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\UICustom.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\UIPreset.xaml-->
    <Thickness x:Key="{dxdot:LWKey DocumentPaneElements.TabHeadersClipMargin}">-1,-2</Thickness>
    <sys:Double x:Key="{dxdot:LWKey DocumentPaneElements.TabHeadersTransparencySize}">7</sys:Double>
    <sys:Double x:Key="{dxdot:LWKey FloatPaneElements.TouchMinWidth}">84</sys:Double>
    <sys:Double x:Key="{dxdot:LWKey FloatPaneElements.TouchMinHeight}">84</sys:Double>
    <Thickness x:Key="{dxdot:LWKey DockPaneElements.BorderThickness}">1</Thickness>
    <Thickness x:Key="{dxdot:LWKey DockPaneElements.BorderMargin}">0</Thickness>
    <Thickness x:Key="{dxdot:LWKey DockPaneElements.BorderPadding}">0,0,0,1</Thickness>
    <Thickness x:Key="{dxdot:LWKey DockPaneElements.BarContainerMargin}">0</Thickness>
    <Thickness x:Key="{dxdot:LWKey DockPaneElements.ContentMargin}">0</Thickness>
    <Thickness x:Key="{dxdot:LWKey DockPaneElements.LightViewHeaderMargin}" />
    <Thickness x:Key="{dxdot:LWKey DocumentPaneElements.SelectedTabDragOffset}">2</Thickness>
    <Thickness x:Key="{dxdot:LWKey DocumentPaneElements.TabPanelMargin}">0,2,0,0</Thickness>
    <Thickness x:Key="{dxdot:LWKey DocumentPaneElements.TabbedBorderMargin}">0,1,0,0</Thickness>
    <sys:Double x:Key="{dxdot:LWKey FloatPaneElements.ResizingSideLength}">6</sys:Double>
    <sys:Double x:Key="{dxdot:LWKey FloatPaneElements.ResizingCornerLength}">10</sys:Double>
    <sys:Double x:Key="{dxdot:LWKey FloatPaneElements.MinHeight}">84</sys:Double>
    <sys:Double x:Key="{dxdot:LWKey FloatPaneElements.MinWidth}">84</sys:Double>
    <Thickness x:Key="{dxdot:LWKey FloatPaneElements.BorderMargin}">0</Thickness>
    <Thickness x:Key="{dxdot:LWKey FloatPaneElements.SingleBorderMargin}">0</Thickness>
    <Thickness x:Key="{dxdot:LWKey FloatPaneElements.MaximizedBorderMargin}">0</Thickness>
    <Thickness x:Key="{dxdot:LWKey FloatPaneElements.FormBorderMargin}">0</Thickness>
    <Thickness x:Key="{dxdot:LWKey FloatPaneElements.ShadowMargin}">0</Thickness>
    <Point x:Key="{dxdot:LWKey FloatPaneElements.WindowDraggingOffset}" X="2" Y="2" />
    <sys:Double x:Key="{dxdot:LWKey AutoHidePaneElements.SizerThickness}">6</sys:Double>
    <sys:Double x:Key="{dxdot:LWKey AutoHidePaneElements.TouchSizerThickness}">44</sys:Double>
    <Thickness x:Key="{dxdot:LWKey AutoHidePaneElements.ContentMargin}">2</Thickness>
    <Thickness x:Key="{dxdot:LWKey AutoHideTrayHeadersGroupElements.TopMargin}">3,0,3,0</Thickness>
    <Thickness x:Key="{dxdot:LWKey AutoHideTrayHeadersGroupElements.BottomMargin}">3,0,3,0</Thickness>
    <Thickness x:Key="{dxdot:LWKey AutoHideTrayHeadersGroupElements.LeftMargin}">0,3,0,3</Thickness>
    <Thickness x:Key="{dxdot:LWKey AutoHideTrayHeadersGroupElements.RightMargin}">0,3,0,3</Thickness>
    <Thickness x:Key="{dxdot:LWKey AutoHideTrayElements.CaptionBorderThickness}">1,0,1,1</Thickness>
    <Thickness x:Key="{dxdot:LWKey AutoHideTrayElements.BorderThickness}">0,0,0,1</Thickness>
    <Thickness x:Key="{dxdot:LWKey TabbedPaneElements.TabHeadersBorderMargin}">0</Thickness>
    <Thickness x:Key="{dxdot:LWKey TabbedPaneElements.TabHeadersBorderThickness}">1,0,1,1</Thickness>
    <SolidColorBrush x:Key="{dxdot:LWKey DocumentSelectorElements.CutBrushVertical}" Color="Transparent"/>
    <SolidColorBrush x:Key="{dxdot:LWKey DocumentSelectorElements.CutBrushHorizontal}" Color="Transparent"/>
    <!-- Converter -->

    <!-- CornerRadius -->

    <!-- FloatPane -->

    <!-- AUdoHideTrayHeadersGroup -->

    <!-- TabbedPane -->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\UIPreset.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\UICore.xaml-->


    <!-- Panel -->

    <!-- TabbedPaneElements -->

    <!-- DocumentElements -->

    <!-- DockPane -->

    <!-- Customization -->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\UICore.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\ControlBoxElements\DocumentPageButtons.xaml-->
    <!-- General -->

    <!-- Buttons -->


    <!-- Data Template -->

    <DataTemplate x:Key="{dxdot:LWKey DocumentElements.ClosePageButton}">
        <dxdove:ControlBoxButton x:Name="PART_Button" dxdove:DockPane.HitTestType="CloseButton">
            <dxdove:ControlBoxGlyphPresenter x:Name="PART_GlyphPresenter" Style="{StaticResource DocumentClosePageButton}" />
        </dxdove:ControlBoxButton>
    </DataTemplate>

    <DataTemplate x:Key="{dxdot:LWKey DocumentElements.PinPageButton}">
        <dxdove:DockPaneControlBoxButton x:Name="PART_Button" dxdove:DockPane.HitTestType="PinButton">
            <dxdove:ControlBoxGlyphPresenter x:Name="PART_GlyphPresenter" Style="{StaticResource DocumentPinPageButton}" />
        </dxdove:DockPaneControlBoxButton>
    </DataTemplate>

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\ControlBoxElements\DocumentGroupButtons.xaml-->
    <!-- General -->

    <!-- Styles -->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\ControlBoxElements\DocumentPageButtons.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\ControlBoxElements\DocumentGroupButtons.xaml-->
    <!-- General -->

    <Style x:Key="{dxdot:LWKey DocumentPaneElements.DocumentGroupButtonStyle}" TargetType="dxdove:ControlBoxButton">
        <Setter Property="BorderStyle">
            <Setter.Value>
                <Style TargetType="{x:Type dxdove:ControlBoxButtonBorder}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type dxdove:ControlBoxButtonBorder}">
                                <Grid x:Name="Root" Opacity="{StaticResource DocumentGroupButton.Opacity}">
                                    <dx:DXBorder
                                        x:Name="IsDefault"
                                        Background="Transparent"
                                        BorderBrush="Transparent"
                                        BorderThickness="1"
                                        CornerRadius="{dx:LWCornerRadius '0, Win11=4'}"/>
                                    <ContentPresenter />
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal" />
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DocumentGroupButton.HoverBackground}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="BorderBrush">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DocumentGroupButton.HoverBorder}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" />
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DocumentGroupButton.PressedBackground}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="BorderBrush">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource DocumentGroupButton.PressedBorder}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" />
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.38" />
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="ActiveStates">
                                            <VisualState x:Name="EmptyActiveState" />
                                            <VisualState x:Name="Inactive" />
                                            <VisualState x:Name="Active" />
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Secondary, VS2019Blue=Brush.Backstage.Foreground'}" />
        <Setter Property="MinHeight" Value="16" />
        <Setter Property="MinWidth" Value="16" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{dx:LWBrush 'Brush.HoverForeground, VS2019Dark=Brush.Foreground, VS2019Light=Brush.Focused, Win11=Brush.Foreground.Primary'}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{dx:LWBrush 'Brush.SelectionForeground, VS2019Dark=Brush.Foreground, VS2019Light=Brush.Backstage.Foreground, Win11=Brush.Foreground.Muted'}" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" Value="44" />
                <Setter Property="MinWidth" Value="44" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Buttons -->
    <!-- Data Template -->

    <DataTemplate x:Key="{dxdot:LWKey DocumentPaneElements.CloseButton}">
        <dxdove:ControlBoxButton x:Name="PART_Button" dxdove:DockPane.HitTestType="CloseButton">
            <dxdove:ControlBoxGlyphPresenter x:Name="PART_GlyphPresenter" Style="{StaticResource DocumentPaneCloseButton}" />
        </dxdove:ControlBoxButton>
    </DataTemplate>

    <DataTemplate x:Key="{dxdot:LWKey DocumentPaneElements.ScrollPrevButton}">
        <dxdove:ControlBoxButton x:Name="PART_Button" dxdove:DockPane.HitTestType="ScrollPrevButton">
            <dxdove:ControlBoxGlyphPresenter x:Name="PART_GlyphPresenter" Style="{StaticResource DocumentPaneScrollPrevButton}" />
        </dxdove:ControlBoxButton>
    </DataTemplate>

    <DataTemplate x:Key="{dxdot:LWKey DocumentPaneElements.ScrollNextButton}">
        <dxdove:ControlBoxButton x:Name="PART_Button" dxdove:DockPane.HitTestType="ScrollNextButton">
            <dxdove:ControlBoxGlyphPresenter x:Name="PART_GlyphPresenter" Style="{StaticResource DocumentPaneScrollNextButton}" />
        </dxdove:ControlBoxButton>
    </DataTemplate>

    <DataTemplate x:Key="{dxdot:LWKey DocumentPaneElements.DropDownButton}">
        <dxdove:ControlBoxButton x:Name="PART_Button" dxdove:DockPane.HitTestType="DropDownButton">
            <dxdove:ControlBoxGlyphPresenter x:Name="PART_GlyphPresenter" Style="{StaticResource DocumentPaneDropDownButton}" />
        </dxdove:ControlBoxButton>
    </DataTemplate>

    <DataTemplate x:Key="{dxdot:LWKey DocumentPaneElements.RestoreButton}">
        <dxdove:ControlBoxButton x:Name="PART_Button" dxdove:DockPane.HitTestType="RestoreButton">
            <dxdove:ControlBoxGlyphPresenter x:Name="PART_GlyphPresenter" Style="{StaticResource DocumentPaneRestoreButton}" />
        </dxdove:ControlBoxButton>
    </DataTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\ControlBoxElements\DocumentGroupButtons.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\ControlBoxElements\DocumentButtons.xaml-->
    <!-- Data Template -->

    <DataTemplate x:Key="{dxdot:LWKey DocumentElements.MinimizeButton}">
        <dxdove:ControlBoxButton x:Name="PART_Button" dxdove:DockPane.HitTestType="MinimizeButton">
            <dxdove:ControlBoxGlyphPresenter x:Name="PART_GlyphPresenter" Style="{StaticResource DocumentMinimizeButton}" />
        </dxdove:ControlBoxButton>
    </DataTemplate>

    <DataTemplate x:Key="{dxdot:LWKey DocumentElements.MaximizeButton}">
        <dxdove:ControlBoxButton x:Name="PART_Button" dxdove:DockPane.HitTestType="MaximizeButton">
            <dxdove:ControlBoxGlyphPresenter x:Name="PART_GlyphPresenter" Style="{StaticResource DocumentMaximizeButton}" />
        </dxdove:ControlBoxButton>
    </DataTemplate>

    <DataTemplate x:Key="{dxdot:LWKey DocumentElements.RestoreButton}">
        <dxdove:ControlBoxButton x:Name="PART_Button" dxdove:DockPane.HitTestType="RestoreButton">
            <dxdove:ControlBoxGlyphPresenter x:Name="PART_GlyphPresenter" Style="{StaticResource DocumentRestoreButton}" />
        </dxdove:ControlBoxButton>
    </DataTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\ControlBoxElements\DocumentButtons.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\ControlBoxElements\FloatGroupButtons.xaml-->
    <!-- Data Template -->

    <DataTemplate x:Key="{dxdot:LWKey FloatPaneElements.MinimizeButton}">
        <dxdove:ControlBoxButton x:Name="PART_Button" dxdove:DockPane.HitTestType="MinimizeButton">
            <dxdove:ControlBoxGlyphPresenter x:Name="PART_GlyphPresenter" Style="{StaticResource FloatPaneMinimizeButton}" />
        </dxdove:ControlBoxButton>
    </DataTemplate>

    <DataTemplate x:Key="{dxdot:LWKey FloatPaneElements.MaximizeButton}">
        <dxdove:ControlBoxButton x:Name="PART_Button" dxdove:DockPane.HitTestType="MaximizeButton">
            <dxdove:ControlBoxGlyphPresenter x:Name="PART_GlyphPresenter" Style="{StaticResource FloatPaneMaximizeButton}" />
        </dxdove:ControlBoxButton>
    </DataTemplate>

    <DataTemplate x:Key="{dxdot:LWKey FloatPaneElements.RestoreButton}">
        <dxdove:ControlBoxButton x:Name="PART_Button" dxdove:DockPane.HitTestType="RestoreButton">
            <dxdove:ControlBoxGlyphPresenter x:Name="PART_GlyphPresenter" Style="{StaticResource FloatPaneRestoreButton}" />
        </dxdove:ControlBoxButton>
    </DataTemplate>

    <DataTemplate x:Key="{dxdot:LWKey FloatPaneElements.CloseButton}">
        <dxdove:ControlBoxButton x:Name="PART_Button" dxdove:DockPane.HitTestType="CloseButton">
            <dxdove:ControlBoxGlyphPresenter x:Name="PART_GlyphPresenter" Style="{StaticResource FloatPaneCloseButton}" />
        </dxdove:ControlBoxButton>
    </DataTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\ControlBoxElements\FloatGroupButtons.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\ControlBoxElements\LayoutPanelButtons.xaml-->
    <!-- Buttons -->
    <!-- Data Templates -->

    <DataTemplate x:Key="{dxdot:LWKey DockPaneElements.PinButton}">
        <dxdove:DockPaneControlBoxButton x:Name="PART_Button" dxdove:DockPane.HitTestType="PinButton">
            <dxdove:ControlBoxGlyphPresenter x:Name="PART_GlyphPresenter" Style="{StaticResource DockPanePinButton}" />
        </dxdove:DockPaneControlBoxButton>
    </DataTemplate>

    <DataTemplate x:Key="{dxdot:LWKey DockPaneElements.CloseButton}">
        <dxdove:ControlBoxButton x:Name="PART_Button" dxdove:DockPane.HitTestType="CloseButton">
            <dxdove:ControlBoxGlyphPresenter x:Name="PART_GlyphPresenter" Style="{StaticResource DockPaneCloseButton}" />
        </dxdove:ControlBoxButton>
    </DataTemplate>

    <DataTemplate x:Key="{dxdot:LWKey DockPaneElements.MaximizeButton}">
        <dxdove:ControlBoxButton x:Name="PART_Button" dxdove:DockPane.HitTestType="MaximizeButton">
            <dxdove:ControlBoxGlyphPresenter x:Name="PART_GlyphPresenter" Style="{StaticResource DockPaneMaximizeButton}" />
        </dxdove:ControlBoxButton>
    </DataTemplate>

    <DataTemplate x:Key="{dxdot:LWKey DockPaneElements.MinimizeButton}">
        <dxdove:ControlBoxButton x:Name="PART_Button" dxdove:DockPane.HitTestType="MinimizeButton">
            <dxdove:ControlBoxGlyphPresenter x:Name="PART_GlyphPresenter" Style="{StaticResource DockPaneMinimizeButton}" />
        </dxdove:ControlBoxButton>
    </DataTemplate>

    <DataTemplate x:Key="{dxdot:LWKey DockPaneElements.RestoreButton}">
        <dxdove:ControlBoxButton x:Name="PART_Button" dxdove:DockPane.HitTestType="RestoreButton">
            <dxdove:ControlBoxGlyphPresenter x:Name="PART_GlyphPresenter" Style="{StaticResource DockPaneRestoreButton}" />
        </dxdove:ControlBoxButton>
    </DataTemplate>

    <DataTemplate x:Key="{dxdot:LWKey DockPaneElements.HideButton}">
        <dxdove:DockPaneControlBoxButton x:Name="PART_Button" dxdove:DockPane.HitTestType="HideButton">
            <dxdove:ControlBoxGlyphPresenter x:Name="PART_GlyphPresenter" Style="{StaticResource DockPaneHideButton}" />
        </dxdove:DockPaneControlBoxButton>
    </DataTemplate>

    <DataTemplate x:Key="{dxdot:LWKey DockPaneElements.ExpandButton}">
        <dxdove:DockPaneControlBoxButton x:Name="PART_Button" dxdove:DockPane.HitTestType="ExpandButton">
            <dxdove:ControlBoxGlyphPresenter x:Name="PART_GlyphPresenter" Style="{StaticResource DockPaneExpandButton}" />
        </dxdove:DockPaneControlBoxButton>
    </DataTemplate>

    <DataTemplate x:Key="{dxdot:LWKey DockPaneElements.CollapseButton}">
        <dxdove:DockPaneControlBoxButton x:Name="PART_Button" dxdove:DockPane.HitTestType="CollapseButton">
            <dxdove:ControlBoxGlyphPresenter x:Name="PART_GlyphPresenter" Style="{StaticResource DockPaneCollapseButton}" />
        </dxdove:DockPaneControlBoxButton>
    </DataTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\ControlBoxElements\LayoutPanelButtons.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\ControlBoxElements\GroupBoxButtons.xaml-->
    <!-- Button -->

    <!-- Data Template -->

    <DataTemplate x:Key="{dxdot:LWKey GroupPaneElements.ExpandButton}">
        <dxdove:GroupBoxControlBoxButton x:Name="PART_Button" dxdove:DockPane.HitTestType="ExpandButton">
            <dxdove:ControlBoxGlyphPresenter x:Name="PART_GlyphPresenter" Style="{StaticResource GroupPaneExpandButton}" />
        </dxdove:GroupBoxControlBoxButton>
    </DataTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\ControlBoxElements\GroupBoxButtons.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\ControlBoxElements\MDIButtons.xaml-->
    <!-- Button -->

    <ControlTemplate x:Key="{dxdot:LWKey MDIButtonElements.ButtonBorder}" TargetType="{x:Type dxb:ItemBorderControl}">
        <Grid x:Name="Root">
            <dx:DXBorder x:Name="IsDefault" Background="Transparent" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="State">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Hover">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="{dx:LWColor 'Color.HoverBackground, Win11=Color.Button.HoverBackground'}" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="{dx:LWColor 'Color.HoverBackground, VS2019Blue=Color.HoverBorder, Win11=Color.Button.PressedBackground'}" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Checked" />
                    <VisualState x:Name="HoverChecked" />
                    <VisualState x:Name="Focused" />
                    <VisualState x:Name="Customization" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <!-- Border -->

    <Style x:Key="{dxdot:LWKey MDIButtonElements.ButtonBorderStyle}" TargetType="{x:Type dxb:ItemBorderControl}">
        <Setter Property="Template" Value="{DynamicResource {dxdot:LWKey MDIButtonElements.ButtonBorder}}" />
    </Style>

    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\ControlBoxElements\MDIButtons.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\DocumentPane\Tabbed.xaml-->
    <!-- General -->

    <ControlTemplate x:Key="{dxdot:LWKey DocumentElements.Template}" TargetType="dxdove:Document">
        <dx:DXBorder x:Name="DocumentContentBorder" Background="{Binding Background}" CornerRadius="{dx:LWCornerRadius '0, Win11=7'}" dxdove:DockPane.HitTestType="Bounds" Margin="{Binding IsFloatingRootItem, Converter={StaticResource BoolToThicknessConverter}}">
            <dxdove:DocumentContentPresenter x:Name="PART_ContentPresenter" Content="{TemplateBinding Content}" Margin="{Binding LayoutItem.ActualPadding, RelativeSource={RelativeSource TemplatedParent}}" />
        </dx:DXBorder>
    </ControlTemplate>

    <!-- Container -->

    <!-- Float Document -->

    <ControlTemplate x:Key="{dxdot:LWKey DocumentElements.FloatDocument}" TargetType="dxdove:FloatDocument">
        <dxdove:DocumentFormBorderContentControl IsActive="{Binding IsActive}">
            <dx:DXBorder Background="{Binding Background}" CornerRadius="{dx:LWCornerRadius '0, Win11=7'}">
                <dxdove:DocumentContentPresenter x:Name="PART_ContentPresenter" Content="{Binding LayoutItemData}" dxdove:DockPane.HitTestType="Content" />
            </dx:DXBorder>
        </dxdove:DocumentFormBorderContentControl>
    </ControlTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\DocumentPane\Tabbed.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\DocumentPane\MDI.xaml-->
    <!-- General -->

    <ControlTemplate x:Key="{dxdot:LWKey DocumentPaneElements.MDIDocument}" TargetType="dxdove:MDIDocument">
        <Grid x:Name="Root">
            <dx:DXBorder
                x:Name="Window"
                Background="{StaticResource MDIDocument.Background}"
                BorderBrush="{StaticResource MDIDocument.Border}"
                BorderThickness="1"
                CornerRadius="{dx:LWCornerRadius '0, Win11=7'}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <dx:DXBorder x:Name="PART_Header" Background="Transparent" dxdove:DockPane.HitTestType="Header">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="5" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <dxdove:TemplatedCaptionControl
                                x:Name="PART_CaptionControlPresenter"
                                FontWeight="{StaticResource MDIDocument.CaptionFontWeight}"
                                FontSize="{StaticResource MDIDocument.CaptionFontSize}"
                                Foreground="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}"
                                HorizontalAlignment="Center"
                                LayoutItem="{Binding}"
                                Margin="{StaticResource MDIDocument.CaptionMargin}"
                                VerticalAlignment="Center" />
                            <dxdove:WindowControlBoxControl
                                x:Name="PART_ControlBox"
                                Grid.Column="2"
                                ButtonHeight="{StaticResource MDIDocument.ControlBoxButtonHeight}"
                                ButtonStyle="{DynamicResource {dxdot:LWKey DocumentElements.MDIDocumentButtonStyle}}"
                                ButtonWidth="{StaticResource MDIDocument.ControlBoxButtonWidth}"
                                CloseButtonTemplate="{DynamicResource {dxdot:LWKey DocumentElements.CloseButton}}"
                                LayoutItem="{Binding}"
                                MaximizeButtonTemplate="{DynamicResource {dxdot:LWKey DocumentElements.MaximizeButton}}"
                                MinimizeButtonTemplate="{DynamicResource {dxdot:LWKey DocumentElements.MinimizeButton}}"
                                RestoreButtonTemplate="{DynamicResource {dxdot:LWKey DocumentElements.RestoreButton}}"
                                VerticalAlignment="Top" />
                        </Grid>
                    </dx:DXBorder>
                    <dx:DXBorder
                        x:Name="PART_Content"
                        Grid.Row="1"
                        Background="{dx:LWBrush 'Brush.Window.Background, Win11=Brush.WindowBackground, VS2019Dark=Brush.Control.Background'}"
                        dxdove:DockPane.HitTestType="Content"
                        Margin="5,0,5,5"
                        Visibility="{Binding IsMinimized, Converter={StaticResource BoolToVisibilityInverseConverter}}">
                        <dxdove:DocumentContentPresenter x:Name="PART_ContentPresenter" Content="{Binding LayoutItemData}" />
                    </dx:DXBorder>
                </Grid>
            </dx:DXBorder>
            <dxdove:ResizeBoundsControl
                x:Name="PART_ResizeBounds"
                Canvas.ZIndex="2"
                dxdove:DockPane.HitTestType="Border"
                FlowDirection="LeftToRight" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="ActiveStates">
                    <VisualState x:Name="Active" />
                    <VisualState x:Name="Inactive">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Window" Storyboard.TargetProperty="BorderBrush">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="{dx:LWColor 'Color.Border, Win11=Color.PanelBorder'}" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="PART_CaptionControlPresenter" Storyboard.TargetProperty="Opacity" To="0.62" />
                            <DoubleAnimation Duration="0" Storyboard.TargetName="PART_ControlBox" Storyboard.TargetProperty="Opacity" To="0.62" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="MDIStates">
                    <VisualState x:Name="EmptyMDIState" />
                    <VisualState x:Name="Maximized">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Visibility="Collapsed" Storyboard.TargetName="PART_Header" Storyboard.TargetProperty="Visibility" />
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Visibility="Collapsed" Storyboard.TargetName="PART_ResizeBounds" Storyboard.TargetProperty="Visibility" />
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="0" Storyboard.TargetName="Window" Storyboard.TargetProperty="BorderThickness" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Minimized">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Visibility="Collapsed" Storyboard.TargetName="PART_ResizeBounds" Storyboard.TargetProperty="Visibility" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Margin" TargetName="PART_CaptionControlPresenter" Value="{StaticResource MDIDocument.CaptionMarginTouch}" />
                <Setter Property="Margin" TargetName="PART_Content" Value="14,0,14,14" />
                <Setter Property="ButtonHeight" TargetName="PART_ControlBox" Value="44" />
                <Setter Property="ButtonWidth" TargetName="PART_ControlBox" Value="44" />
                <Setter Property="Margin" TargetName="PART_ControlBox" Value="0" />
                <Setter Property="Height" TargetName="PART_Header" Value="44" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Container -->

    <ControlTemplate x:Key="{dxdot:LWKey DocumentPaneElements.MDIContainerTemplate}" TargetType="dxdove:DocumentMDIContainer">
        <Grid DataContext="{Binding LayoutItem}" dxdove:DockPane.HitTestType="Bounds">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <dx:DXBorder
                x:Name="Panel"
                Background="{StaticResource MDIContainer.PanelBackground}"
                BorderBrush="{StaticResource MDIContainer.PanelBorder}"
                BorderThickness="0,0,0,1"
                Visibility="Collapsed">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ContentPresenter
                        x:Name="ContentPresenter"
                        Content="{Binding SelectedItem.Caption}"
                        ContentTemplate="{Binding LayoutItem.SelectedItem.CaptionTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                        ContentTemplateSelector="{Binding LayoutItem.SelectedItem.CaptionTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                        Margin="{StaticResource MDIContainer.ContentMargin}"
                        TextElement.FontSize="{StaticResource MDIContainer.ContentFontSize}"
                        TextElement.FontWeight="{StaticResource MDIContainer.ContentFontWeight}"
                        TextElement.Foreground="{StaticResource MDIContainer.ContentForeground}" />
                    <dxdove:TabHeaderControlBoxControl
                        x:Name="PART_ControlBox"
                        Grid.Column="1"
                        ButtonHeight="{StaticResource MDIContainer.HeaderButtonHeight}"
                        ButtonStyle="{DynamicResource {dxdot:LWKey DocumentPaneElements.MDIContainerButtonStyle}}"
                        ButtonWidth="{StaticResource MDIContainer.HeaderButtonWidth}"
                        CloseButtonTemplate="{DynamicResource {dxdot:LWKey DocumentPaneElements.CloseButton}}"
                        DropDownButtonTemplate="{DynamicResource {dxdot:LWKey DocumentPaneElements.DropDownButton}}"
                        HorizontalAlignment="Right"
                        LayoutItem="{Binding}"
                        RestoreButtonTemplate="{DynamicResource {dxdot:LWKey DocumentPaneElements.RestoreButton}}"
                        ScrollNextButtonTemplate="{DynamicResource {dxdot:LWKey DocumentPaneElements.ScrollNextButton}}"
                        ScrollPrevButtonTemplate="{DynamicResource {dxdot:LWKey DocumentPaneElements.ScrollPrevButton}}" />
                </Grid>
            </dx:DXBorder>
            <ScrollViewer
                x:Name="Content"
                Grid.Row="1"
                Background="{TemplateBinding ActualBackground}"
                BorderThickness="0"
                HorizontalScrollBarVisibility="Auto"
                VerticalScrollBarVisibility="Auto">
                <ItemsPresenter x:Name="PART_MDIPanelPresenter" HorizontalAlignment="Left" VerticalAlignment="Top" />
            </ScrollViewer>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="HeaderStates">
                    <VisualState x:Name="HeaderVisible">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Visibility="Visible" Storyboard.TargetName="Panel" Storyboard.TargetProperty="Visibility" />
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.HorizontalAlignment="Stretch" Storyboard.TargetName="PART_MDIPanelPresenter" Storyboard.TargetProperty="HorizontalAlignment" />
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.VerticalAlignment="Stretch" Storyboard.TargetName="PART_MDIPanelPresenter" Storyboard.TargetProperty="VerticalAlignment" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="HeaderHidden" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="MaximizedStates">
                    <VisualState x:Name="EmptyMaximizedState" />
                    <VisualState x:Name="Maximized">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="(ScrollViewer.HorizontalScrollBarVisibility)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <ScrollBarVisibility>Disabled</ScrollBarVisibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="(ScrollViewer.VerticalScrollBarVisibility)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <ScrollBarVisibility>Disabled</ScrollBarVisibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="ButtonHeight" TargetName="PART_ControlBox" Value="44" />
                <Setter Property="ButtonWidth" TargetName="PART_ControlBox" Value="44" />
                <Setter Property="Margin" TargetName="PART_ControlBox" Value="0" />
                <Setter Property="Height" TargetName="Panel" Value="44" />
                <Setter Property="Margin" TargetName="ContentPresenter" Value="{StaticResource MDIContainer.ContentMarginTouch}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\DocumentPane\MDI.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\DocumentPane.xaml-->
    <!-- General -->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\DocumentPane.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\VisualizerElements\DockHint\DockHintButton.xaml-->
    <Style x:Key="button-center" TargetType="dxdove:DockHintButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxdove:DockHintButton">
                    <Grid x:Name="Root">
                        <dx:DXBorder Background="{dx:LWBrush 'Brush.Editor.Background, Office2019Black=Brush.Control.Background, Win11=Brush.WindowBackground'}" Padding="1">
                            <Grid>
                                <dx:DXBorder x:Name="Shape1" Background="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ControlLight.Foreground, Office2019Colorful=Brush.Focused, Office2019HighContrast=Brush.Border, VS2019Blue=Brush.Focused, VS2019Dark=Brush.Focused, VS2019Light=Brush.Focused, Win10Dark=Brush.Focused, Win10Light=Brush.Focused, Win11Dark=Brush.Foreground.Secondary, Win11Light=Brush.Accent'}" Opacity="0.62" />
                                <dx:DXBorder
                                    x:Name="Shape2"
                                    Background="{dx:LWBrush 'Brush.Editor.Background, Office2019Black=Brush.Control.Background, Win11Dark=Brush.Foreground.Primary, Win11Light=Brush.Foreground.Alt'}"
                                    Height="4"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Bottom"
                                    Width="16" />
                            </Grid>
                        </dx:DXBorder>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Shape1" Storyboard.TargetProperty="Opacity" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Visibility="Collapsed" Storyboard.TargetName="Root" Storyboard.TargetProperty="(Border.Visibility)" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AvailableStates">
                                <VisualState x:Name="Available" />
                                <VisualState x:Name="Unavailable">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.38" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonBottom" TargetType="dxdove:DockHintButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxdove:DockHintButton">
                    <Grid x:Name="Root">
                        <dx:DXBorder x:Name="Background" Background="{dx:LWBrush 'Brush.Editor.Background, Office2019Black=Brush.Control.Background, Win11=Brush.WindowBackground'}" Padding="1">
                            <dx:DXBorder
                                x:Name="Shape"
                                Background="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ControlLight.Foreground, Office2019Colorful=Brush.Focused, Office2019HighContrast=Brush.Border, VS2019Blue=Brush.Focused, VS2019Dark=Brush.Focused, VS2019Light=Brush.Focused, Win10Dark=Brush.Focused, Win10Light=Brush.Focused, Win11Dark=Brush.Foreground.Primary, Win11Light=Brush.Accent'}"
                                Height="9"
                                Opacity="0.62"
                                VerticalAlignment="Bottom" />
                        </dx:DXBorder>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Shape" Storyboard.TargetProperty="Opacity" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Visibility="Collapsed" Storyboard.TargetName="Root" Storyboard.TargetProperty="(Border.Visibility)" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AvailableStates">
                                <VisualState x:Name="Available" />
                                <VisualState x:Name="Unavailable">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.38" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonTop" TargetType="dxdove:DockHintButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxdove:DockHintButton">
                    <Grid x:Name="Root">
                        <dx:DXBorder x:Name="Background" Background="{dx:LWBrush 'Brush.Editor.Background, Office2019Black=Brush.Control.Background, Win11=Brush.WindowBackground'}" Padding="1">
                            <dx:DXBorder
                                x:Name="Shape"
                                Background="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ControlLight.Foreground, Office2019Colorful=Brush.Focused, Office2019HighContrast=Brush.Border, VS2019Blue=Brush.Focused, VS2019Dark=Brush.Focused, VS2019Light=Brush.Focused, Win10Dark=Brush.Focused, Win10Light=Brush.Focused, Win11Dark=Brush.Foreground.Primary, Win11Light=Brush.Accent'}"
                                Height="9"
                                Opacity="0.62"
                                VerticalAlignment="Top" />
                        </dx:DXBorder>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Shape" Storyboard.TargetProperty="Opacity" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Visibility="Collapsed" Storyboard.TargetName="Root" Storyboard.TargetProperty="(Border.Visibility)" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AvailableStates">
                                <VisualState x:Name="Available" />
                                <VisualState x:Name="Unavailable">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.38" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonRight" TargetType="dxdove:DockHintButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxdove:DockHintButton">
                    <Grid x:Name="Root">
                        <dx:DXBorder x:Name="Background" Background="{dx:LWBrush 'Brush.Editor.Background, Office2019Black=Brush.Control.Background, Win11=Brush.WindowBackground'}" Padding="1">
                            <dx:DXBorder
                                x:Name="Shape"
                                Background="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ControlLight.Foreground, Office2019Colorful=Brush.Focused, Office2019HighContrast=Brush.Border, VS2019Blue=Brush.Focused, VS2019Dark=Brush.Focused, VS2019Light=Brush.Focused, Win10Dark=Brush.Focused, Win10Light=Brush.Focused, Win11Dark=Brush.Foreground.Primary, Win11Light=Brush.Accent'}"
                                HorizontalAlignment="Right"
                                Opacity="0.62"
                                Width="9" />
                        </dx:DXBorder>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Shape" Storyboard.TargetProperty="Opacity" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Visibility="Collapsed" Storyboard.TargetName="Root" Storyboard.TargetProperty="(Border.Visibility)" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AvailableStates">
                                <VisualState x:Name="Available" />
                                <VisualState x:Name="Unavailable">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.38" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonLeft" TargetType="dxdove:DockHintButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxdove:DockHintButton">
                    <Grid x:Name="Root">
                        <dx:DXBorder x:Name="Background" Background="{dx:LWBrush 'Brush.Editor.Background, Office2019Black=Brush.Control.Background, Win11=Brush.WindowBackground'}" Padding="1">
                            <dx:DXBorder
                                x:Name="Shape"
                                Background="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ControlLight.Foreground, Office2019Colorful=Brush.Focused, Office2019HighContrast=Brush.Border, VS2019Blue=Brush.Focused, VS2019Dark=Brush.Focused, VS2019Light=Brush.Focused, Win10Dark=Brush.Focused, Win10Light=Brush.Focused, Win11Dark=Brush.Foreground.Primary, Win11Light=Brush.Accent'}"
                                HorizontalAlignment="Left"
                                Opacity="0.62"
                                Width="9" />
                        </dx:DXBorder>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Shape" Storyboard.TargetProperty="Opacity" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Visibility="Collapsed" Storyboard.TargetName="Root" Storyboard.TargetProperty="(Border.Visibility)" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AvailableStates">
                                <VisualState x:Name="Available" />
                                <VisualState x:Name="Unavailable">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.38" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- General -->

    <!-- Positions -->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\VisualizerElements\DockHint\DockHintButton.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\VisualizerElements\DockHint\DockHintButtonHide.xaml-->
    <Style x:Key="ButtonBottomHide" TargetType="dxdove:DockHintButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxdove:DockHintButton">
                    <Grid x:Name="Root">
                        <dx:DXBorder x:Name="Background" Background="{dx:LWBrush 'Brush.Editor.Background, Office2019Black=Brush.Control.Background, Win11=Brush.WindowBackground'}" Padding="1,0,1,1">
                            <dx:DXBorder
                                x:Name="Shape"
                                Background="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ControlLight.Foreground, Office2019Colorful=Brush.Focused, Office2019HighContrast=Brush.Border, VS2019Blue=Brush.Focused, VS2019Dark=Brush.Focused, VS2019Light=Brush.Focused, Win10Dark=Brush.Focused, Win10Light=Brush.Focused, Win11Dark=Brush.Foreground.Primary, Win11Light=Brush.Accent'}"
                                Height="3"
                                Opacity="0.62"
                                VerticalAlignment="Bottom" />
                        </dx:DXBorder>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Shape" Storyboard.TargetProperty="Opacity" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Visibility="Collapsed" Storyboard.TargetName="Root" Storyboard.TargetProperty="(Border.Visibility)" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AvailableStates">
                                <VisualState x:Name="Available" />
                                <VisualState x:Name="Unavailable">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.38" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonTopHide" TargetType="dxdove:DockHintButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxdove:DockHintButton">
                    <Grid x:Name="Root">
                        <dx:DXBorder x:Name="Background" Background="{dx:LWBrush 'Brush.Editor.Background, Office2019Black=Brush.Control.Background, Win11=Brush.WindowBackground'}" Padding="1,1,1,0">
                            <dx:DXBorder
                                x:Name="Shape"
                                Background="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ControlLight.Foreground, Office2019Colorful=Brush.Focused, Office2019HighContrast=Brush.Border, VS2019Blue=Brush.Focused, VS2019Dark=Brush.Focused, VS2019Light=Brush.Focused, Win11Dark=Brush.Foreground.Primary, Win11Light=Brush.Accent'}"
                                Height="3"
                                Opacity="0.62"
                                VerticalAlignment="Top" />
                        </dx:DXBorder>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Shape" Storyboard.TargetProperty="Opacity" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Visibility="Collapsed" Storyboard.TargetName="Root" Storyboard.TargetProperty="(Border.Visibility)" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AvailableStates">
                                <VisualState x:Name="Available" />
                                <VisualState x:Name="Unavailable">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.38" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonRightHide" TargetType="dxdove:DockHintButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxdove:DockHintButton">
                    <Grid x:Name="Root">
                        <dx:DXBorder x:Name="Background" Background="{dx:LWBrush 'Brush.Editor.Background, Office2019Black=Brush.Control.Background, Win11=Brush.WindowBackground'}" Padding="0,1,1,1">
                            <dx:DXBorder
                                x:Name="Shape"
                                Background="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ControlLight.Foreground, Office2019Colorful=Brush.Focused, Office2019HighContrast=Brush.Border, VS2019Blue=Brush.Focused, VS2019Dark=Brush.Focused, VS2019Light=Brush.Focused, Win11Dark=Brush.Foreground.Primary, Win11Light=Brush.Accent'}"
                                HorizontalAlignment="Right"
                                Opacity="0.62"
                                Width="3" />
                        </dx:DXBorder>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Shape" Storyboard.TargetProperty="Opacity" To="1" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AvailableStates">
                                <VisualState x:Name="Available" />
                                <VisualState x:Name="Unavailable">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.38" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonLeftHide" TargetType="dxdove:DockHintButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxdove:DockHintButton">
                    <Grid x:Name="Root">
                        <dx:DXBorder x:Name="Background" Background="{dx:LWBrush 'Brush.Editor.Background, Office2019Black=Brush.Control.Background, Win11=Brush.WindowBackground'}" Padding="1,1,0,1">
                            <dx:DXBorder
                                x:Name="Shape"
                                Background="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ControlLight.Foreground, Office2019Colorful=Brush.Focused, Office2019HighContrast=Brush.Border, VS2019Blue=Brush.Focused, VS2019Dark=Brush.Focused, VS2019Light=Brush.Focused, Win10Dark=Brush.Focused, Win10Light=Brush.Focused, Win11Dark=Brush.Foreground.Primary, Win11Light=Brush.Accent'}"
                                HorizontalAlignment="Left"
                                Opacity="0.62"
                                Width="3" />
                        </dx:DXBorder>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Shape" Storyboard.TargetProperty="Opacity" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Visibility="Collapsed" Storyboard.TargetName="Root" Storyboard.TargetProperty="(Border.Visibility)" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AvailableStates">
                                <VisualState x:Name="Available" />
                                <VisualState x:Name="Unavailable">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.38" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- General -->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\VisualizerElements\DockHint\DockHintButtonHide.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\VisualizerElements\DockHint\DockHintButtonSecond.xaml-->
    <Style x:Key="ButtonLeftSecond" TargetType="dxdove:DockHintButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxdove:DockHintButton">
                    <Grid x:Name="Root">
                        <dx:DXBorder x:Name="Background" Background="{dx:LWBrush 'Brush.Editor.Background, Office2019Black=Brush.Control.Background, Win11=Brush.WindowBackground'}">
                            <dx:DXBorder
                                x:Name="Shape"
                                Background="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ControlLight.Foreground, Office2019Colorful=Brush.Focused, Office2019HighContrast=Brush.Border, VS2019Blue=Brush.Focused, VS2019Dark=Brush.Focused, VS2019Light=Brush.Focused, Win10Dark=Brush.Focused, Win10Light=Brush.Focused, Win11Dark=Brush.Foreground.Primary, Win11Light=Brush.Accent'}"
                                HorizontalAlignment="Left"
                                Margin="1"
                                Opacity="0.62"
                                Width="9" />
                        </dx:DXBorder>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Shape" Storyboard.TargetProperty="Opacity" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Visibility="Collapsed" Storyboard.TargetName="Root" Storyboard.TargetProperty="(Border.Visibility)" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AvailableStates">
                                <VisualState x:Name="Available" />
                                <VisualState x:Name="Unavailable">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.38" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonRightSecond" TargetType="dxdove:DockHintButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxdove:DockHintButton">
                    <Grid x:Name="Root">
                        <dx:DXBorder x:Name="Background" Background="{dx:LWBrush 'Brush.Editor.Background, Office2019Black=Brush.Control.Background, Win11=Brush.WindowBackground'}">
                            <dx:DXBorder
                                x:Name="Shape"
                                Background="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ControlLight.Foreground, Office2019Colorful=Brush.Focused, Office2019HighContrast=Brush.Border, VS2019Blue=Brush.Focused, VS2019Dark=Brush.Focused, VS2019Light=Brush.Focused, Win10Dark=Brush.Focused, Win10Light=Brush.Focused, Win11Dark=Brush.Foreground.Primary, Win11Light=Brush.Accent'}"
                                HorizontalAlignment="Right"
                                Margin="1"
                                Opacity="0.62"
                                Width="9" />
                        </dx:DXBorder>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Shape" Storyboard.TargetProperty="Opacity" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Visibility="Collapsed" Storyboard.TargetName="Root" Storyboard.TargetProperty="(Border.Visibility)" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AvailableStates">
                                <VisualState x:Name="Available" />
                                <VisualState x:Name="Unavailable">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.38" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonBottomSecond" TargetType="dxdove:DockHintButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxdove:DockHintButton">
                    <Grid x:Name="Root">
                        <dx:DXBorder x:Name="Background" Background="{dx:LWBrush 'Brush.Editor.Background, Office2019Black=Brush.Control.Background, Win11=Brush.WindowBackground'}">
                            <dx:DXBorder
                                x:Name="Shape"
                                Background="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ControlLight.Foreground, Office2019Colorful=Brush.Focused, Office2019HighContrast=Brush.Border, VS2019Blue=Brush.Focused, VS2019Dark=Brush.Focused, VS2019Light=Brush.Focused, Win10Dark=Brush.Focused, Win10Light=Brush.Focused, Win11Dark=Brush.Foreground.Primary, Win11Light=Brush.Accent'}"
                                Height="9"
                                Margin="1"
                                Opacity="0.62"
                                VerticalAlignment="Bottom" />
                        </dx:DXBorder>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Shape" Storyboard.TargetProperty="Opacity" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Visibility="Collapsed" Storyboard.TargetName="Root" Storyboard.TargetProperty="(Border.Visibility)" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AvailableStates">
                                <VisualState x:Name="Available" />
                                <VisualState x:Name="Unavailable">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.38" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonTopSecond" TargetType="dxdove:DockHintButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxdove:DockHintButton">
                    <Grid x:Name="Root">
                        <dx:DXBorder x:Name="Background" Background="{dx:LWBrush 'Brush.Editor.Background, Office2019Black=Brush.Control.Background, Win11=Brush.WindowBackground'}" Padding="1">
                            <dx:DXBorder
                                x:Name="Shape"
                                Background="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ControlLight.Foreground, Office2019Colorful=Brush.Focused, Office2019HighContrast=Brush.Border, VS2019Blue=Brush.Focused, VS2019Dark=Brush.Focused, VS2019Light=Brush.Focused, Win10Dark=Brush.Focused, Win10Light=Brush.Focused, Win11Dark=Brush.Foreground.Primary, Win11Light=Brush.Accent'}"
                                Height="9"
                                Opacity="0.62"
                                VerticalAlignment="Top" />
                        </dx:DXBorder>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Shape" Storyboard.TargetProperty="Opacity" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Visibility="Collapsed" Storyboard.TargetName="Root" Storyboard.TargetProperty="(Border.Visibility)" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AvailableStates">
                                <VisualState x:Name="Available" />
                                <VisualState x:Name="Unavailable">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.38" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- General -->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\VisualizerElements\DockHint\DockHintButtonSecond.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\VisualizerElements\DockHint\DockHintButtonThird.xaml-->
    <Style x:Key="ButtonLeftThird" TargetType="dxdove:DockHintButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxdove:DockHintButton">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Shape" Storyboard.TargetProperty="Opacity" To="1" />
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Separator" Storyboard.TargetProperty="Opacity" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Visibility="Collapsed" Storyboard.TargetName="Root" Storyboard.TargetProperty="(Border.Visibility)" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AvailableStates">
                                <VisualState x:Name="Available" />
                                <VisualState x:Name="Unavailable">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.38" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <dx:DXBorder x:Name="Background" Background="{dx:LWBrush 'Brush.Editor.Background, Office2019Black=Brush.Control.Background, Win11=Brush.WindowBackground'}" Padding="1">
                            <Grid>
                                <dx:DXBorder
                                    x:Name="Shape"
                                    Background="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ControlLight.Foreground, Office2019Colorful=Brush.Focused, Office2019HighContrast=Brush.Border, VS2019Blue=Brush.Focused, VS2019Dark=Brush.Focused, VS2019Light=Brush.Focused, Win10Dark=Brush.Focused, Win10Light=Brush.Focused, Win11Dark=Brush.Foreground.Primary, Win11Light=Brush.Accent'}"
                                    HorizontalAlignment="Left"
                                    Opacity="0.62"
                                    Width="13" />
                                <dx:DXBorder
                                    x:Name="Separator"
                                    BorderBrush="{dx:LWBrush 'Brush.Editor.Background, Office2019Black=Brush.Control.Background, Win11=Brush.WindowBackground'}"
                                    BorderThickness="0,0,1,0"
                                    HorizontalAlignment="Left"
                                    Width="4" />
                            </Grid>
                        </dx:DXBorder>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonRightThird" TargetType="dxdove:DockHintButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxdove:DockHintButton">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Shape" Storyboard.TargetProperty="Opacity" To="1" />
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Separator" Storyboard.TargetProperty="Opacity" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Visibility="Collapsed" Storyboard.TargetName="Root" Storyboard.TargetProperty="(Border.Visibility)" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AvailableStates">
                                <VisualState x:Name="Available" />
                                <VisualState x:Name="Unavailable">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.38" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <dx:DXBorder x:Name="Background" Background="{dx:LWBrush 'Brush.Editor.Background, Office2019Black=Brush.Control.Background, Win11=Brush.WindowBackground'}" Padding="1">
                            <Grid>
                                <dx:DXBorder
                                    x:Name="Shape"
                                    Background="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ControlLight.Foreground, Office2019Colorful=Brush.Focused, Office2019HighContrast=Brush.Border, VS2019Blue=Brush.Focused, VS2019Dark=Brush.Focused, VS2019Light=Brush.Focused, Win10Dark=Brush.Focused, Win10Light=Brush.Focused, Win11Dark=Brush.Foreground.Primary, Win11Light=Brush.Accent'}"
                                    HorizontalAlignment="Right"
                                    Opacity="0.62"
                                    Width="13" />
                                <dx:DXBorder
                                    x:Name="Separator"
                                    BorderBrush="{dx:LWBrush 'Brush.Editor.Background, Office2019Black=Brush.Control.Background, Win11=Brush.WindowBackground'}"
                                    BorderThickness="1,0,0,0"
                                    HorizontalAlignment="Right"
                                    Width="4" />
                            </Grid>
                        </dx:DXBorder>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonBottomThird" TargetType="dxdove:DockHintButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxdove:DockHintButton">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Shape" Storyboard.TargetProperty="Opacity" To="1" />
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Separator" Storyboard.TargetProperty="Opacity" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Visibility="Collapsed" Storyboard.TargetName="Root" Storyboard.TargetProperty="(Border.Visibility)" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AvailableStates">
                                <VisualState x:Name="Available" />
                                <VisualState x:Name="Unavailable">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.38" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <dx:DXBorder x:Name="Background" Background="{dx:LWBrush 'Brush.Editor.Background, Office2019Black=Brush.Control.Background, Win11=Brush.WindowBackground'}" Padding="1">
                            <Grid>
                                <dx:DXBorder
                                    x:Name="Shape"
                                    Background="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ControlLight.Foreground, Office2019Colorful=Brush.Focused, Office2019HighContrast=Brush.Border, VS2019Blue=Brush.Focused, VS2019Dark=Brush.Focused, VS2019Light=Brush.Focused, Win10Dark=Brush.Focused, Win10Light=Brush.Focused, Win11Dark=Brush.Foreground.Primary, Win11Light=Brush.Accent'}"
                                    Height="13"
                                    Opacity="0.62"
                                    VerticalAlignment="Bottom" />
                                <dx:DXBorder
                                    x:Name="Separator"
                                    BorderBrush="{dx:LWBrush 'Brush.Editor.Background, Office2019Black=Brush.Control.Background, Win11=Brush.WindowBackground'}"
                                    BorderThickness="0,1,0,0"
                                    Height="4"
                                    VerticalAlignment="Bottom" />
                            </Grid>
                        </dx:DXBorder>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonTopThird" TargetType="dxdove:DockHintButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxdove:DockHintButton">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Shape" Storyboard.TargetProperty="Opacity" To="1" />
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Separator" Storyboard.TargetProperty="Opacity" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Visibility="Collapsed" Storyboard.TargetName="Root" Storyboard.TargetProperty="(Border.Visibility)" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AvailableStates">
                                <VisualState x:Name="Available" />
                                <VisualState x:Name="Unavailable">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.38" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <dx:DXBorder x:Name="Background" Background="{dx:LWBrush 'Brush.Editor.Background, Office2019Black=Brush.Control.Background, Win11=Brush.WindowBackground'}" Padding="1">
                            <Grid>
                                <dx:DXBorder
                                    x:Name="Shape"
                                    Background="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ControlLight.Foreground, Office2019Colorful=Brush.Focused, Office2019HighContrast=Brush.Border, VS2019Blue=Brush.Focused, VS2019Dark=Brush.Focused, VS2019Light=Brush.Focused, Win10Dark=Brush.Focused, Win10Light=Brush.Focused, Win11Dark=Brush.Foreground.Primary, Win11Light=Brush.Accent'}"
                                    Height="13"
                                    Opacity="0.62"
                                    VerticalAlignment="Top" />
                                <dx:DXBorder
                                    x:Name="Separator"
                                    BorderBrush="{dx:LWBrush 'Brush.Editor.Background, Office2019Black=Brush.Control.Background, Win11=Brush.WindowBackground'}"
                                    BorderThickness="0,0,0,1"
                                    Height="4"
                                    VerticalAlignment="Top" />
                            </Grid>
                        </dx:DXBorder>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- General -->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\VisualizerElements\DockHint\DockHintButtonThird.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\VisualizerElements\DockHint\DockHintCross.xaml-->
    <!-- General -->

    <ControlTemplate x:Key="{dxdot:LWKey DockVisualizer.Left}">
        <Grid
            Background="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.Border, Office2019Colorful=Brush.Backstage.Window.Background, Office2019HighContrast=Brush.Border, VS2019Blue=Brush.Backstage.Window.Background, VS2019Dark=Brush.Border, VS2019Light=Brush.Border, Win10Dark=Brush.Focused, Win10Light=Brush.Focused, Win11=Brush.PanelBorder'}"
            dxdop:DockHintElement.DockType="Left"
            Height="34"
            HorizontalAlignment="Left"
            VerticalAlignment="Center"
            Width="34">
            <Grid Margin="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <dxdove:DockHintButton x:Name="PART_Hide" Grid.Column="0" Style="{StaticResource ButtonLeftHide}" />
                <dxdove:DockHintButton x:Name="PART_Dock" Grid.Column="1" Style="{StaticResource ButtonLeft}" />
            </Grid>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxdot:LWKey DockVisualizer.Right}">
        <Grid
            Background="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.Border, Office2019Colorful=Brush.Backstage.Window.Background, Office2019HighContrast=Brush.Border, VS2019Blue=Brush.Backstage.Window.Background, VS2019Dark=Brush.Border, VS2019Light=Brush.Border, Win10Dark=Brush.Focused, Win10Light=Brush.Focused, Win11=Brush.PanelBorder'}"
            dxdop:DockHintElement.DockType="Right"
            Height="34"
            HorizontalAlignment="Right"
            VerticalAlignment="Center"
            Width="34">
            <Grid Margin="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <dxdove:DockHintButton x:Name="PART_Dock" Grid.Column="0" Style="{StaticResource ButtonRight}" />
                <dxdove:DockHintButton x:Name="PART_Hide" Grid.Column="1" Style="{StaticResource ButtonRightHide}" />
            </Grid>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxdot:LWKey DockVisualizer.Top}">
        <Grid
            Background="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.Border, Office2019Colorful=Brush.Backstage.Window.Background, Office2019HighContrast=Brush.Border, VS2019Blue=Brush.Backstage.Window.Background, VS2019Dark=Brush.Border, VS2019Light=Brush.Border, Win10Dark=Brush.Focused, Win10Light=Brush.Focused, Win11=Brush.PanelBorder'}"
            dxdop:DockHintElement.DockType="Top"
            Height="34"
            HorizontalAlignment="Center"
            VerticalAlignment="Top"
            Width="34">
            <Grid Margin="3">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <dxdove:DockHintButton x:Name="PART_Hide" Grid.Row="0" Style="{StaticResource ButtonTopHide}" />
                <dxdove:DockHintButton x:Name="PART_Dock" Grid.Row="1" Style="{StaticResource ButtonTop}" />
            </Grid>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxdot:LWKey DockVisualizer.Bottom}">
        <Grid
            Background="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.Border, Office2019Colorful=Brush.Backstage.Window.Background, Office2019HighContrast=Brush.Border, VS2019Blue=Brush.Backstage.Window.Background, VS2019Dark=Brush.Border, VS2019Light=Brush.Border, Win10Dark=Brush.Focused, Win10Light=Brush.Focused, Win11=Brush.PanelBorder'}"
            dxdop:DockHintElement.DockType="Bottom"
            Height="34"
            HorizontalAlignment="Center"
            VerticalAlignment="Bottom"
            Width="34">
            <Grid Margin="3">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <dxdove:DockHintButton x:Name="PART_Dock" Grid.Row="0" Style="{StaticResource ButtonBottom}" />
                <dxdove:DockHintButton x:Name="PART_Hide" Grid.Row="1" Style="{StaticResource ButtonBottomHide}" />
            </Grid>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxdot:LWKey DockVisualizer.Center}">
        <Grid x:Name="Root">
            <dx:DXBorder
                Background="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.Border, Office2019Colorful=Brush.Backstage.Window.Background, Office2019HighContrast=Brush.Border, VS2019Blue=Brush.Backstage.Window.Background, VS2019Dark=Brush.Border, VS2019Light=Brush.Border, Win10Dark=Brush.Focused, Win10Light=Brush.Focused, Win11=Brush.PanelBorder'}"
                CornerRadius="100"
                Height="74"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Width="74" />
            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="34" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="34" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <dx:DXBorder
                        x:Name="Top"
                        Grid.Row="0"
                        Grid.Column="1"
                        Background="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.Border, Office2019Colorful=Brush.Backstage.Window.Background, Office2019HighContrast=Brush.Border, VS2019Blue=Brush.Backstage.Window.Background, VS2019Dark=Brush.Border, VS2019Light=Brush.Border, Win10Dark=Brush.Focused, Win10Light=Brush.Focused, Win11=Brush.PanelBorder'}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Bottom">
                        <Grid Margin="3,3,3,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <dxdove:DockHintButton
                                x:Name="PART_Top"
                                Grid.Row="0"
                                dxdop:DockHintElement.DockType="Top"
                                Height="28"
                                Margin="0,0,0,3"
                                Style="{StaticResource ButtonTopThird}"
                                Width="28" />
                            <dxdove:DockHintButton
                                x:Name="PART_TabTop"
                                Grid.Row="1"
                                dxdop:DockHintElement.DockType="Top"
                                Height="28"
                                Style="{StaticResource ButtonTopSecond}"
                                Width="28" />
                        </Grid>
                    </dx:DXBorder>
                    <dx:DXBorder
                        x:Name="Left"
                        Grid.Row="1"
                        Grid.Column="0"
                        Background="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.Border, Office2019Colorful=Brush.Backstage.Window.Background, Office2019HighContrast=Brush.Border, VS2019Blue=Brush.Backstage.Window.Background, VS2019Dark=Brush.Border, VS2019Light=Brush.Border, Win10Dark=Brush.Focused, Win10Light=Brush.Focused, Win11=Brush.PanelBorder'}"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center">
                        <Grid Margin="3,3,0,3">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <dxdove:DockHintButton
                                x:Name="PART_Left"
                                Grid.Column="0"
                                dxdop:DockHintElement.DockType="Left"
                                Height="28"
                                Margin="0,0,3,0"
                                Style="{StaticResource ButtonLeftThird}"
                                Width="28" />
                            <dxdove:DockHintButton
                                x:Name="PART_TabLeft"
                                Grid.Column="1"
                                dxdop:DockHintElement.DockType="Left"
                                Height="28"
                                Style="{StaticResource ButtonLeftSecond}"
                                Width="28" />
                        </Grid>
                    </dx:DXBorder>
                    <dxdove:DockHintButton
                        x:Name="PART_Fill"
                        Grid.Row="1"
                        Grid.Column="1"
                        dxdop:DockHintElement.DockType="Fill"
                        Height="28"
                        HorizontalAlignment="Center"
                        Style="{StaticResource button-center}"
                        VerticalAlignment="Center"
                        Width="28" />
                    <dx:DXBorder
                        x:Name="Right"
                        Grid.Row="1"
                        Grid.Column="2"
                        Background="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.Border, Office2019Colorful=Brush.Backstage.Window.Background, Office2019HighContrast=Brush.Border, VS2019Blue=Brush.Backstage.Window.Background, VS2019Dark=Brush.Border, VS2019Light=Brush.Border, Win10Dark=Brush.Focused, Win10Light=Brush.Focused, Win11=Brush.PanelBorder'}"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center">
                        <Grid Margin="0,3,3,3">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <dxdove:DockHintButton
                                x:Name="PART_TabRight"
                                Grid.Column="0"
                                dxdop:DockHintElement.DockType="Right"
                                Height="28"
                                Style="{StaticResource ButtonRightSecond}"
                                Width="28" />
                            <dxdove:DockHintButton
                                x:Name="PART_Right"
                                Grid.Column="1"
                                dxdop:DockHintElement.DockType="Right"
                                Height="28"
                                Margin="3,0,0,0"
                                Style="{StaticResource ButtonRightThird}"
                                Width="28" />
                        </Grid>
                    </dx:DXBorder>
                    <dx:DXBorder
                        x:Name="Bottom"
                        Grid.Row="2"
                        Grid.Column="1"
                        Background="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.Border, Office2019Colorful=Brush.Backstage.Window.Background, Office2019HighContrast=Brush.Border, VS2019Blue=Brush.Backstage.Window.Background, VS2019Dark=Brush.Border, VS2019Light=Brush.Border, Win10Dark=Brush.Focused, Win10Light=Brush.Focused, Win11=Brush.PanelBorder'}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Bottom">
                        <Grid Margin="3,0,3,3">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <dxdove:DockHintButton
                                x:Name="PART_TabBottom"
                                Grid.Row="0"
                                dxdop:DockHintElement.DockType="Bottom"
                                Height="28"
                                Style="{StaticResource ButtonBottomSecond}"
                                Width="28" />
                            <dxdove:DockHintButton
                                x:Name="PART_Bottom"
                                Grid.Row="1"
                                dxdop:DockHintElement.DockType="Bottom"
                                Height="28"
                                Margin="0,3,0,0"
                                Style="{StaticResource ButtonBottomThird}"
                                Width="28" />
                        </Grid>
                    </dx:DXBorder>
                </Grid>
            </Grid>
        </Grid>
    </ControlTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\VisualizerElements\DockHint\DockHintCross.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\VisualizerElements\DockHint\ResizePointer.xaml-->
    <!-- General -->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\VisualizerElements\DockHint\ResizePointer.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\VisualizerElements\DockHint\DockZone.xaml-->
    <Thickness x:Key="{dxdot:LWKey DockVisualizer.RenameHintMargin}">-7 -3</Thickness>


    <!-- General -->

    <ControlTemplate x:Key="{dxdot:LWKey DockVisualizer.DockZone}">
        <dx:DXBorder
            Background="{dx:LWBrush 'Brush.HoverBackground, Win11=Brush.ListItem.HoverBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.SelectionBackground, Win11=Brush.ListItem.SelectionBackground'}"
            BorderThickness="1"
            Margin="1"
            Opacity="0.62" />
    </ControlTemplate>

    <ControlTemplate x:Key="{dxdot:LWKey DockVisualizer.Selection}" TargetType="dxdop:SelectionHint">
        <Rectangle
            x:Name="PART_Selection"
            Fill="{dx:LWBrush 'Brush.SelectionBackground, Win11=Brush.ListItem.SelectionBackground'}"
            IsHitTestVisible="False"
            Opacity="0.62"
            Stretch="Fill" />
    </ControlTemplate>

    <!-- RenameHint -->

    <ControlTemplate x:Key="{dxdot:LWKey DockVisualizer.RenameHint}" TargetType="dxdop:RenameHint">
        <dx:DXBorder
            Background="{dx:LWBrush 'Brush.Editor.Background, Office2019Black=Brush.Control.Background'}"
            BorderBrush="{StaticResource Brush.Border}"
            BorderThickness="1"
            Margin="1"
            Padding="0">
            <TextBox
                x:Name="PART_Text"
                BorderThickness="0"
                Margin="0,1,0,0"
                Padding="0" />
        </dx:DXBorder>
    </ControlTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\VisualizerElements\DockHint\DockZone.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\VisualizerElements\DockHint\TabHint.xaml-->
    <!-- General -->

    <ControlTemplate x:Key="{dxdot:LWKey TabHint.Tab}" TargetType="dxdop:TabHint">
        <dx:DXBorder
            Background="{dx:LWBrush 'Brush.HoverBackground, Win11=Brush.ListItem.HoverBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.SelectionBackground, Win11=Brush.ListItem.SelectionBackground'}"
            BorderThickness="1"
            Opacity="0.62" />
    </ControlTemplate>

    <ControlTemplate x:Key="{dxdot:LWKey TabHint.TabHeader}" TargetType="dxdop:TabHeaderHint">
        <Grid>
            <dx:DXBorder
                x:Name="IsDefault"
                Background="{dx:LWBrush 'Brush.HoverBackground, Win11=Brush.ListItem.HoverBackground'}"
                BorderBrush="{dx:LWBrush 'Brush.SelectionBackground, Win11=Brush.ListItem.SelectionBackground'}"
                BorderThickness="1"
                Opacity="0.62" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="TabHeaderStates">
                    <VisualState x:Name="Left">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="1,1,0,1" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="BorderThickness" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Top">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="1,1,1,0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="BorderThickness" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Right">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="0,1,1,1" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="BorderThickness" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Bottom">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="1,0,1,1" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="BorderThickness" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\VisualizerElements\DockHint\TabHint.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\VisualizerElements\DockHint.xaml-->
    <!-- General -->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\VisualizerElements\DockHint.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\VisualizerElements\DocumentSelector.xaml-->
    <!-- General -->

    <!-- List -->

    <ControlTemplate x:Key="{dxdot:LWKey DocumentSelectorElements.ListBoxItem}" TargetType="{x:Type ListBoxItem}">
        <Grid>
            <dx:DXBorder
                x:Name="IsDefault"
                Background="Transparent"
                BorderBrush="Transparent"
                BorderThickness="1" />
            <dx:DXBorder Padding="{TemplateBinding Padding}">
                <dxdove:TemplatedCaptionControl LayoutItem="{Binding}" Margin="3,2" />
            </dx:DXBorder>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.HoverBackground, Win11=Brush.ListItem.HoverBackground'}" />
                <Setter Property="BorderBrush" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.HoverBorder, VS2019Blue=Brush.HoverBackground, Win11=Brush.ListItem.HoverBorder'}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.SelectionBackground, Win11=Brush.ListItem.SelectionBackground'}" />
                <Setter Property="BorderBrush" TargetName="IsDefault" Value="{dx:LWBrush 'Brush.SelectionBorder, VS2019Blue=Brush.SelectionBackground, Win11=Brush.ListItem.SelectionBorder'}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Content -->

    <DataTemplate x:Key="{dxdot:LWKey DockPaneElements.ContentPreview}">
        <dx:DXBorder
            Background="{StaticResource Brush.Editor.Background}"
            BorderBrush="{StaticResource Brush.Border}"
            BorderThickness="1"
            Padding="12">
            <ContentPresenter Content="{TemplateBinding Content}" />
        </dx:DXBorder>
    </DataTemplate>

    <DataTemplate x:Key="{dxdot:LWKey DocumentElements.ContentPreview}">
        <dx:DXBorder
            Background="{StaticResource Brush.Editor.Background}"
            BorderBrush="{StaticResource Brush.Border}"
            BorderThickness="1"
            Padding="1">
            <ContentPresenter Content="{TemplateBinding Content}" />
        </dx:DXBorder>
    </DataTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\VisualizerElements\DocumentSelector.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\ControlBoxElements.xaml-->
    <!-- General -->

    <Style x:Key="{dxdot:LWKey DocumentPaneElements.MDIContainerButtonStyle}" BasedOn="{StaticResource {dxdot:LWKey DocumentPaneElements.DocumentGroupButtonStyle}}" TargetType="dxdove:ControlBoxButton">
        <Setter Property="MinHeight" Value="16" />
        <Setter Property="MinWidth" Value="16" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" Value="44" />
                <Setter Property="MinHeight" Value="44" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxdot:LWKey TabbedPaneElements.TabbedPaneButtonStyle}" BasedOn="{StaticResource {dxdot:LWKey DocumentPaneElements.DocumentGroupButtonStyle}}" TargetType="dxdove:ControlBoxButton">
        <Setter Property="MinHeight" Value="16" />
        <Setter Property="MinWidth" Value="16" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" Value="44" />
                <Setter Property="MinHeight" Value="44" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxdot:LWKey TabbedLayoutGroupPaneElements.TabbedLayoutGroupPaneButtonStyle}" BasedOn="{StaticResource {dxdot:LWKey DocumentPaneElements.DocumentGroupButtonStyle}}" TargetType="dxdove:ControlBoxButton">
        <Setter Property="MinHeight" Value="16" />
        <Setter Property="MinWidth" Value="16" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" Value="44" />
                <Setter Property="MinHeight" Value="44" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\ControlBoxElements.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\CustomizationWindow.xaml-->
    <ControlTemplate x:Key="DragCursorTemplate" TargetType="ContentControl">
        <dx:DXBorder
            Background="{dx:LWBrush 'Brush.HoverBackground, Win11=Brush.ListItem.HoverBackground'}"
            BorderBrush="{dx:LWBrush 'Brush.SelectionBackground, Win11=Brush.ListItem.SelectionBackground'}"
            BorderThickness="1"
            Opacity="0.62" />
    </ControlTemplate>


    <!-- General -->

    <ControlTemplate x:Key="{dxdot:LWKey OtherResources.HiddenItemTemplate}" TargetType="dxdove:HiddenItem">
        <Grid Height="Auto">
            <dx:DXBorder
                x:Name="Item"
                Background="{DynamicResource {dxdot:LWKey BrushElements.HiddenItem}}"
                BorderBrush="{DynamicResource {dxdot:LWKey BrushElements.HiddenItemBorder}}"
                BorderThickness="1" />
            <StackPanel Margin="4" Orientation="Horizontal" VerticalAlignment="Center">
                <Image x:Name="PART_Image" Margin="0,0,4,0" />
                <ContentPresenter />
            </StackPanel>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Margin" TargetName="PART_Image" Value="14" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Cursor -->

    <ControlTemplate x:Key="ItemTemplate" TargetType="ContentControl">
        <Grid VerticalAlignment="Top">
            <dx:DXBorder
                x:Name="Item"
                Background="{DynamicResource {dxdot:LWKey BrushElements.HiddenItem}}"
                BorderBrush="{DynamicResource {dxdot:LWKey BrushElements.HiddenItemBorder}}"
                BorderThickness="1" />
            <dx:DXBorder x:Name="CaptionContainer" HorizontalAlignment="Center" MinHeight="28">
                <ContentPresenter x:Name="Content" Margin="12,3,12,3" />
            </dx:DXBorder>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Margin" TargetName="Content" Value="14" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="PanelTemplate" TargetType="ContentControl">
        <Grid>
            <dx:DXBorder x:Name="Panel" Background="{DynamicResource {dxdot:LWKey BrushElements.HiddenItemBorder}}" Margin="0,8,2,2">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition x:Name="RowDefinition1" Height="16" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <dx:DXBorder Grid.Row="0" Background="{DynamicResource {dxdot:LWKey BrushElements.HiddenItemCaption}}" Margin="1" />
                    <dx:DXBorder Grid.Row="1" Background="{DynamicResource {dxdot:LWKey BrushElements.HiddenItem}}" Margin="1,0,1,1" />
                </Grid>
            </dx:DXBorder>
            <dx:DXBorder
                x:Name="CaptionContainer"
                HorizontalAlignment="Center"
                Margin="2"
                VerticalAlignment="Center">
                <ContentPresenter x:Name="Content" Margin="12,3,12,3" />
            </dx:DXBorder>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Margin" TargetName="Content" Value="14" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxdot:LWKey DockElements.DragCursor}" TargetType="dxdove:DragCursorControl">
        <ContentControl x:Name="Content" Template="{StaticResource PanelTemplate}">
            <dxdove:TemplatedCaptionControl x:Name="PART_CaptionControl" Foreground="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}" LayoutItem="{Binding}" />
        </ContentControl>
        <ControlTemplate.Triggers>
            <Trigger Property="CursorType" Value="Item">
                <Setter Property="Template" TargetName="Content" Value="{StaticResource ItemTemplate}" />
            </Trigger>
            <Trigger Property="CursorType" Value="Window">
                <Setter Property="Template" TargetName="Content" Value="{StaticResource DragCursorTemplate}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\CustomizationWindow.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\VisualizerElements.xaml-->
    <!-- General -->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\VisualizerElements.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\ControlItem.xaml-->
    <!-- General -->

    <ControlTemplate x:Key="{dxdot:LWKey ControlItemElements.Template}" TargetType="dxdove:ControlItem">
        <dx:DXBorder
            x:Name="PART_Border"
            Background="{TemplateBinding Background}"
            dxdove:DockPane.HitTestType="Bounds"
            Margin="{Binding Path=LayoutItem.ActualMargin, RelativeSource={RelativeSource TemplatedParent}}">
            <dxdove:DropBoundsControl>
                <dxdove:DockingSplitLayoutPanel Background="Transparent">
                    <dxdove:DockingSplitLayoutPanel.Content1Location>
                        <Binding Path="LayoutItem.CaptionLocation" RelativeSource="{RelativeSource TemplatedParent}">
                            <Binding.Converter>
                                <dxdove:CaptionLocationToDockConverter />
                            </Binding.Converter>
                        </Binding>
                    </dxdove:DockingSplitLayoutPanel.Content1Location>
                    <dxdove:DockingSplitLayoutPanel.Content1>
                        <dxdove:ControlItemCaptionPresenter x:Name="PART_Caption" Content="{TemplateBinding Header}" Visibility="{Binding LayoutItem.ShowCaption, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    </dxdove:DockingSplitLayoutPanel.Content1>
                    <dxdove:DockingSplitLayoutPanel.Content2>
                        <dxdove:ControlItemControlPresenter
                            x:Name="PART_Control"
                            Content="{TemplateBinding Content}"
                            Margin="{Binding Path=LayoutItem.ActualPadding, RelativeSource={RelativeSource TemplatedParent}}"
                            Visibility="{Binding LayoutItem.ShowControl, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    </dxdove:DockingSplitLayoutPanel.Content2>
                </dxdove:DockingSplitLayoutPanel>
            </dxdove:DropBoundsControl>
        </dx:DXBorder>
    </ControlTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\ControlItem.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\DockPane.xaml-->
    <!-- General -->

    <ControlTemplate x:Key="{dxdot:LWKey DockElements.SplitterTemplate}" TargetType="dxdove:Splitter">
        <Grid Background="Transparent">
            <dx:DXBorder
                x:Name="PART_SplitThumb"
                Background="{TemplateBinding Background}"
                EnableDPICorrection="False"
                Margin="{TemplateBinding Padding}" />
            <dx:DXBorder Background="{DynamicResource {dxdot:LWKey BrushElements.MoveTargetBackground}}" Opacity="0.15" Visibility="{Binding Path=IsDragDropOver, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
        </Grid>
    </ControlTemplate>

    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\DockPane.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\LayoutItemsControl.xaml-->
    <!-- General -->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\LayoutItemsControl.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\FloatPane.WinFormsHost.xaml-->
    <ControlTemplate x:Key="{dxdot:LWKey FloatPaneElements.SingleBorderTemplate}" TargetType="dxdove:FormBorderControl">
        <Grid>
            <dx:DXBorder x:Name="PART_Content" CornerRadius="{dx:LWCornerRadius '0, Win11=7'}" Background="{DynamicResource {dxdot:LWKey BrushElements.PanelBackground}}" Margin="{TemplateBinding ActualContentMargin}">
                <dxdove:LayoutItemsControl dxdove:DockPane.HitTestType="Content" ItemsSource="{Binding Path=ItemsInternal}" Orientation="{Binding Path=Orientation}" />
            </dx:DXBorder>
            <dxdove:ResizeBoundsControl x:Name="PART_ResizeBorders" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="SizeStates">
                    <VisualState x:Name="EmptySizeState" />
                    <VisualState x:Name="Maximized">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Visibility="Collapsed" Storyboard.TargetName="PART_ResizeBorders" Storyboard.TargetProperty="Visibility" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxdot:LWKey FloatPaneElements.EmptyBorderTemplate}" TargetType="dxdove:FormBorderControl">
        <Grid>
            <dx:DXBorder x:Name="PART_Content"
                CornerRadius="{dx:LWCornerRadius '0, Win11=7'}"
                Margin="{Binding ActualContentMargin, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                <dxdove:LayoutItemsControl
                    dxdove:DockPane.HitTestType="Content"
                    ItemsSource="{Binding Path=ItemsInternal}"
                    Margin="{Binding Path=ActualMargin}"
                    Orientation="{Binding Path=Orientation}" />
            </dx:DXBorder>
            <dxdove:ResizeBoundsControl x:Name="PART_ResizeBorders" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="SizeStates">
                    <VisualState x:Name="EmptySizeState" />
                    <VisualState x:Name="Maximized">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Visibility="Collapsed" Storyboard.TargetName="PART_ResizeBorders" Storyboard.TargetProperty="Visibility" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxdot:LWKey FloatPaneElements.FormBorderTemplate}" TargetType="dxdove:FormBorderControl">
        <Grid>
            <dxdove:FormBorderContentControl Padding="{TemplateBinding ActualBorderMargin}">
                <dxdove:LayoutItemsControl
                    dxdove:DockPane.HitTestType="Content"
                    ItemsSource="{Binding Path=ItemsInternal}"
                    Margin="{Binding Path=ActualMargin}"
                    Orientation="{Binding Path=Orientation}" />
            </dxdove:FormBorderContentControl>
            <dxdove:ResizeBoundsControl x:Name="PART_ResizeBorders" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="SizeStates">
                    <VisualState x:Name="EmptySizeState" />
                    <VisualState x:Name="Maximized">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Visibility="Collapsed" Storyboard.TargetName="PART_ResizeBorders" Storyboard.TargetProperty="Visibility" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\FloatPane.WinFormsHost.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\AutoHidePanel.xaml-->
    <!-- General -->

    <ControlTemplate x:Key="{dxdot:LWKey AutoHidePaneElements.Template}" TargetType="dxdove:AutoHidePane">
        <dxdove:AutoHidePanePresenter x:Name="PART_Presenter">
            <DockPanel Background="Transparent">
                <Grid
                    Background="Transparent"
                    Cursor="{Binding ElementName=PART_Sizer, Path=Cursor}"
                    DockPanel.Dock="{Binding DockType, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource DockInverseConverter}}"
                    dxdove:DockPane.HitTestType="Border"
                    HorizontalAlignment="{Binding DockType, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource DockToHorizontalAlignmentConverter}}"
                    VerticalAlignment="{Binding DockType, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource DockToVerticalAlignmentConverter}}"
                    Visibility="{Binding IsSizerVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <dxdove:ElementSizer x:Name="PART_Sizer" Orientation="{Binding Path=(dxdove:AutoHideTray.Orientation), RelativeSource={RelativeSource TemplatedParent}}" Thickness="{DynamicResource {dxdot:LWKey AutoHidePaneElements.SizerThickness}}" />
                </Grid>
                <Grid x:Name="PART_PaneContent" Background="Transparent">
                    <Grid dxdove:DockPane.HitTestType="Border">
                        <ContentPresenter x:Name="Content" Content="{TemplateBinding Content}" Margin="{DynamicResource {dxdot:LWKey AutoHidePaneElements.ContentMargin}}" />
                    </Grid>
                    <dx:DXBorder
                        x:Name="PART_PaneBorder"
                        BorderBrush="Transparent"
                        BorderThickness="{Binding DockType, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource DockTypeToThicknessConverter}}"
                        dxdove:DockPane.HitTestType="Border"
                        Visibility="{Binding IsSizerVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityInverseConverter}}" />
                </Grid>
            </DockPanel>
        </dxdove:AutoHidePanePresenter>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxdo:DockLayoutManager.DockLayoutManager).EnableWin32Compatibility, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Margin" TargetName="Content" Value="0" />
            </DataTrigger>
            <Trigger Property="ViewStyle" Value="Light">
                <Setter Property="BorderThickness" TargetName="PART_PaneBorder" Value="{Binding DockType, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource dockTypeToThicknessLightConverter}}" />
                <Setter Property="BorderBrush" TargetName="PART_PaneBorder" Value="{DynamicResource {dxdot:LWKey DockPaneElements.BorderBrush}}" />
                <Setter Property="Thickness" TargetName="PART_Sizer" Value="1" />
                <Setter Property="Background" TargetName="PART_Sizer" Value="{DynamicResource {dxdot:LWKey DockPaneElements.BorderBrush}}" />
                <Setter Property="Margin" TargetName="Content" Value="0" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Thickness" TargetName="PART_Sizer" Value="{DynamicResource {dxdot:LWKey AutoHidePaneElements.TouchSizerThickness}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxdot:LWKey DockElements.ElementSizer}" TargetType="dxdove:ElementSizer">
        <Grid Background="{TemplateBinding Background}">
            <Grid x:Name="HorizontalRootElement" Cursor="SizeNS" Height="{TemplateBinding Thickness}" />
            <Grid x:Name="VerticalRootElement" Cursor="SizeWE" Width="{TemplateBinding Thickness}" />
        </Grid>
    </ControlTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\AutoHidePanel.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\FixedItem.xaml-->
    <!-- General -->

    <ControlTemplate x:Key="{dxdot:LWKey SplitterControlElements.Template}">
        <dx:DXBorder
            x:Name="PART_Border"
            Background="Transparent"
            dxdove:DockPane.HitTestType="Bounds"
            Margin="{Binding Path=(dxdo:DockLayoutManager.LayoutItem).ActualMargin, RelativeSource={RelativeSource TemplatedParent}}"
            Padding="{Binding Path=(dxdo:DockLayoutManager.LayoutItem).ActualPadding, RelativeSource={RelativeSource TemplatedParent}}"
            Visibility="{Binding Path=(dxdo:DockLayoutManager.LayoutItem).Visibility, RelativeSource={RelativeSource TemplatedParent}}"
            CornerRadius="{dx:LWCornerRadius '0, Win11=4'}">
            <dxdove:DropBoundsControl x:Name="Drop" Margin="1">
                <dx:Container Background="{TemplateBinding Background}">
                    <dx:Container x:Name="PART_HorizontalRootElement">
                        <Path x:Name="PathHorizontal" Fill="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ForegroundDark, Win11=Brush.Foreground.Secondary'}" Style="{StaticResource UIShape.SizeGrip.Horizontal}" />
                    </dx:Container>
                    <dx:Container x:Name="PART_VerticalRootElement">
                        <Path x:Name="PathVertical" Fill="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ForegroundDark, Win11=Brush.Foreground.Secondary'}" Style="{StaticResource UIShape.SizeGrip.Vertical}" />
                    </dx:Container>
                </dx:Container>
            </dxdove:DropBoundsControl>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="{dx:LWColor 'Color.HoverBackground, Office2019Black=#00000000, Office2019Colorful=#00000000, Office2019HighContrast=#00000000, Win11=Color.Button.HoverBackground'}" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PathHorizontal" Storyboard.TargetProperty="Fill">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="{dx:LWColor 'Color.HoverForeground, VS2019Dark=Color.Focused, VS2019Light=Color.Focused, Win11=Color.Foreground.Primary'}" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PathVertical" Storyboard.TargetProperty="Fill">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="{dx:LWColor 'Color.HoverForeground, Office2019HighContrast=Color.HoverBackground, VS2019Dark=Color.Focused, VS2019Light=Color.Focused, Win11=Color.Foreground.Primary'}" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="{dx:LWColor 'Color.SelectionBackground, Office2019Black=#00000000, Office2019Colorful=#00000000, Office2019HighContrast=#00000000, Win11=Color.Button.PressedBorder'}" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PathHorizontal" Storyboard.TargetProperty="Fill">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="{dx:LWColor 'Color.SelectionForeground, VS2019Dark=Color.Backstage.Focused, Win11=Color.Foreground.Muted'}" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PathVertical" Storyboard.TargetProperty="Fill">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="{dx:LWColor 'Color.SelectionForeground, Office2019HighContrast=Color.SelectionBackground, VS2019Dark=Color.Backstage.Focused, Win11=Color.Foreground.Muted'}" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </dx:DXBorder>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxdot:LWKey EmptySpaceControlElements.Template}">
        <dx:DXBorder
            x:Name="PART_Border"
            Background="Transparent"
            dxdove:DockPane.HitTestType="Bounds"
            Margin="{Binding Path=(dxdo:DockLayoutManager.LayoutItem).ActualMargin, RelativeSource={RelativeSource TemplatedParent}}"
            Padding="{Binding Path=(dxdo:DockLayoutManager.LayoutItem).ActualPadding, RelativeSource={RelativeSource TemplatedParent}}"
            Visibility="{Binding Path=(dxdo:DockLayoutManager.LayoutItem).Visibility, RelativeSource={RelativeSource TemplatedParent}}">
            <dxdove:DropBoundsControl>
                <Grid />
            </dxdove:DropBoundsControl>
        </dx:DXBorder>
    </ControlTemplate>

    <DataTemplate x:Key="{dxdot:LWKey LabelControlElements.Caption}">
        <dx:DXBorder Background="Transparent" DataContext="{Binding LayoutItem}" dxdove:DockPane.HitTestType="Header">
            <dxdove:TemplatedCaptionControl LayoutItem="{Binding}" />
        </dx:DXBorder>
    </DataTemplate>

    <DataTemplate x:Key="{dxdot:LWKey LabelControlElements.Content}">
        <dx:DXBorder DataContext="{Binding LayoutItem}" dxdove:DockPane.HitTestType="Content">
            <ContentPresenter Content="{Binding Path=Content}" ContentTemplate="{Binding DataContext.LayoutItem.ContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplateSelector="{Binding DataContext.LayoutItem.ContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
        </dx:DXBorder>
    </DataTemplate>

    <ControlTemplate x:Key="{dxdot:LWKey LabelControlElements.Template}" TargetType="dxdove:psvHeaderedContentControl">
        <dx:DXBorder
            x:Name="PART_Border"
            Background="Transparent"
            dxdove:DockPane.HitTestType="Bounds"
            Margin="{Binding LayoutItem.ActualMargin, RelativeSource={RelativeSource TemplatedParent}}"
            Padding="{Binding LayoutItem.ActualPadding, RelativeSource={RelativeSource TemplatedParent}}"
            Visibility="{Binding LayoutItem.Visibility, RelativeSource={RelativeSource TemplatedParent}}">
            <dxdove:DropBoundsControl>
                <Grid>
                    <dxdove:LabelControlCaptionPresenter
                        x:Name="PART_Caption"
                        Content="{TemplateBinding Header}"
                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                        HorizontalAlignment="{Binding LayoutItem.CaptionHorizontalAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                        VerticalAlignment="{Binding LayoutItem.CaptionVerticalAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                        Visibility="{Binding LayoutItem.HasContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityInverseConverter}}" />
                    <dxdove:LabelControlContentPresenter
                        x:Name="PART_Content"
                        Content="{TemplateBinding Content}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        HorizontalAlignment="{Binding LayoutItem.ContentHorizontalAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                        Margin="{Binding Path=(dxdo:DockLayoutManager.LayoutItem).ActualPadding, RelativeSource={RelativeSource TemplatedParent}}"
                        VerticalAlignment="{Binding LayoutItem.ContentVerticalAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                        Visibility="{Binding LayoutItem.HasContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                </Grid>
            </dxdove:DropBoundsControl>
        </dx:DXBorder>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxdot:LWKey SeparatorControlElements.Template}">
        <dx:DXBorder
            x:Name="PART_Border"
            Background="Transparent"
            dxdove:DockPane.HitTestType="Bounds"
            Margin="{Binding Path=(dxdo:DockLayoutManager.LayoutItem).ActualMargin, RelativeSource={RelativeSource TemplatedParent}}"
            Padding="{Binding Path=(dxdo:DockLayoutManager.LayoutItem).ActualPadding, RelativeSource={RelativeSource TemplatedParent}}"
            Visibility="{Binding Path=(dxdo:DockLayoutManager.LayoutItem).Visibility, RelativeSource={RelativeSource TemplatedParent}}">
            <dxdove:DropBoundsControl>
                <Grid>
                    <dx:DXBorder
                        x:Name="PART_VerticalRootElement"
                        Background="{dx:LWBrush 'Brush.Delimiter, Win10Dark=Brush.AltBorder'}"
                        Margin="4"
                        Width="1" />
                    <dx:DXBorder
                        x:Name="PART_HorizontalRootElement"
                        Background="{StaticResource Brush.Delimiter}"
                        Height="1"
                        Margin="4" />
                </Grid>
            </dxdove:DropBoundsControl>
        </dx:DXBorder>
    </ControlTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\FixedItem.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\TabbedLayoutGroupPane.xaml-->
    <!-- General -->

    <!-- Template -->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base\TabbedLayoutGroupPane.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base.xaml-->
    <!-- General -->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Docking\Base.xaml-->


    <!--#region DEFAULT STYLES-->

    <Style x:Key="ShadowResizeBackground.DefaultStyle" TargetType="dxdop:ShadowResizeBackground">
        <Setter Property="Background" Value="{dx:LWBrush 'Brush.HoverBackground, Win11=Brush.ListItem.HoverBackground'}" />
        <Setter Property="Opacity" Value="0.62" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxdop:ShadowResizeBackground">
                    <dx:DXBorder Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ShadowResizePointer.DefaultStyle" TargetType="dxdop:ShadowResizePointer">
        <Setter Property="Background" Value="{dx:LWBrush 'Brush.SelectionBackground, Win11=Brush.ListItem.SelectionBackground'}" />
        <Setter Property="Opacity" Value="0.62" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxdop:ShadowResizePointer">
                    <dx:DXBorder Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FloatingResizePointer.DefaultStyle" TargetType="dxdop:FloatingResizePointer">
        <Setter Property="Background" Value="{dx:LWBrush 'Brush.HoverBackground, Win11=Brush.ListItem.HoverBackground'}" />
        <Setter Property="BorderBrush" Value="{dx:LWBrush 'Brush.SelectionBackground, Win11=Brush.ListItem.SelectionBackground'}" />
        <Setter Property="Opacity" Value="0.62" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxdop:FloatingResizePointer">
                    <dx:DXBorder Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AutoHideResizePointer.DefaultStyle" TargetType="dxdop:AutoHideResizePointer">
        <Setter Property="Background" Value="{dx:LWBrush 'Brush.HoverBackground, Win11=Brush.ListItem.HoverBackground'}" />
        <Setter Property="BorderBrush" Value="{dx:LWBrush 'Brush.SelectionBackground, Win11=Brush.ListItem.SelectionBackground'}" />
        <Setter Property="Opacity" Value="0.62" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxdop:AutoHideResizePointer">
                    <dx:DXBorder Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
                        <dx:DXBorder.BorderThickness>
                            <Binding Path="Dock" RelativeSource="{RelativeSource Mode=TemplatedParent}">
                                <Binding.Converter>
                                    <dxdove:DockTypeToThicknessConverter All="1" Inverted="True" />
                                </Binding.Converter>
                            </Binding>
                        </dx:DXBorder.BorderThickness>
                    </dx:DXBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GroupContentControl.DefaultStyle" TargetType="{x:Type dxdove:GroupContentControl}">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="dxdove:GroupContentControl">
                        <Grid x:Name="Root">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" MinHeight="{StaticResource GroupContentControl.RootRowHeight}" />
                                <RowDefinition Height="*" MinHeight="{StaticResource GroupContentControl.RootRowHeight}" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="9" Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <dx:DXBorder
                                x:Name="Border1"
                                BorderBrush="{dx:LWBrush 'Brush.Delimiter, Office2019Black=Brush.Border, Win10Dark=Brush.AltBorder, Win11Dark=Brush.PanelBorder'}"
                                BorderThickness="1,1,0,0"
                                CornerRadius="{dx:LWCornerRadius '0, Win11=(7,0,0,0)'}"
                                Margin="0,10,0,0" />
                            <dxdove:TemplatedCaptionControl
                                x:Name="Caption"
                                Grid.Column="1"
                                Foreground="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}"
                                HorizontalAlignment="Center"
                                LayoutItem="{Binding}"
                                Margin="3"
                                VerticalAlignment="Center" />
                            <dx:DXBorder
                                x:Name="Border2"
                                Grid.Column="2"
                                Grid.ColumnSpan="4"
                                BorderBrush="{dx:LWBrush 'Brush.Delimiter, Office2019Black=Brush.Border, Win10Dark=Brush.AltBorder, Win11Dark=Brush.PanelBorder'}"
                                BorderThickness="0,1,1,0"
                                CornerRadius="{dx:LWCornerRadius '0, Win11=(0,7,0,0)'}"
                                Margin="0,10,0,0" />
                            <dx:DXBorder
                                x:Name="Border3"
                                Grid.Row="1"
                                Grid.ColumnSpan="3"
                                CornerRadius="{dx:LWCornerRadius '0, Win11=(0,0,7,7)'}"
                                BorderBrush="{dx:LWBrush 'Brush.Delimiter, Office2019Black=Brush.Border, Win10Dark=Brush.AltBorder, Win11Dark=Brush.PanelBorder'}"
                                BorderThickness="1,0,1,1" />
                            <dxdove:LayoutItemsControl
                                x:Name="Content"
                                Grid.Row="1"
                                Grid.ColumnSpan="3"
                                DataContext="{Binding DataContext}"
                                ItemsSource="{Binding LayoutItem.ItemsInternal, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                LastChildFill="{Binding LayoutItem.LastChildFill, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                Margin="12,0,12,12"
                                Orientation="{Binding LayoutItem.Orientation, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CaptionStates">
                                    <VisualState x:Name="CaptionVisible" />
                                    <VisualState x:Name="CaptionHidden">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Visibility="Collapsed" Storyboard.TargetName="Caption" Storyboard.TargetProperty="Visibility" />
                                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="12" Storyboard.TargetName="Content" Storyboard.TargetProperty="Margin" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                                <Setter Property="Margin" TargetName="Caption" Value="3,14,3,14" />
                                <Setter Property="Margin" TargetName="Content" Value="14,0,14,14" />
                                <Setter Property="Margin" TargetName="Border1" Value="0,22,0,0" />
                                <Setter Property="Margin" TargetName="Border2" Value="0,22,0,0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>
    <Style x:Key="GroupBoxContentControl.DefaultStyle" TargetType="{x:Type dxdove:GroupBoxContentControl}">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="dxdove:GroupBoxContentControl">
                        <Grid x:Name="Root">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" MinHeight="6" />
                                <RowDefinition Height="*" MinHeight="6" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MaxWidth="9" Width="9" />
                                <ColumnDefinition x:Name="cd1" />
                                <ColumnDefinition x:Name="cd2" Width="Auto" />
                                <ColumnDefinition x:Name="cd3" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition MaxWidth="9" Width="9" />
                            </Grid.ColumnDefinitions>
                            <dx:DXBorder
                                x:Name="Border1"
                                BorderBrush="{dx:LWBrush 'Brush.Delimiter, Office2019Black=Brush.Border, Win10Dark=Brush.AltBorder, Win11=Brush.PanelBorder'}"
                                BorderThickness="1,1,0,0"
                                CornerRadius="{dx:LWCornerRadius '0, Win11=(7,0,0,0)'}"
                                Margin="0,10,0,0" />
                            <dxdove:TemplatedCaptionControl
                                x:Name="Caption"
                                Grid.Column="2"
                                Foreground="{dx:LWBrush 'Brush.Foreground, Win11=Brush.Foreground.Primary'}"
                                HorizontalAlignment="Center"
                                LayoutItem="{Binding}"
                                Margin="3"
                                VerticalAlignment="Center" />
                            <dx:DXBorder
                                x:Name="Border2"
                                Grid.Column="1"
                                BorderBrush="{dx:LWBrush 'Brush.Delimiter, Office2019Black=Brush.Border, Win10Dark=Brush.AltBorder, Win11=Brush.PanelBorder'}"
                                BorderThickness="0,1,0,0"
                                Margin="0,10,0,0" />
                            <dx:DXBorder
                                x:Name="Border4"
                                Grid.Column="3"
                                BorderBrush="{dx:LWBrush 'Brush.Delimiter, Office2019Black=Brush.Border, Win10Dark=Brush.AltBorder, Win11=Brush.PanelBorder'}"
                                BorderThickness="0,1,0,0"
                                Margin="0,10,0,0" />
                            <dxdove:GroupBoxControlBoxControl
                                x:Name="PART_ControlBox"
                                Grid.Column="4"
                                ButtonHeight="16"
                                ButtonStyle="{DynamicResource {dxdot:LWKey GroupPaneElements.GroupPaneButtonStyle}}"
                                ButtonWidth="16"
                                ExpandButtonTemplate="{DynamicResource {dxdot:LWKey GroupPaneElements.ExpandButton}}"
                                HorizontalAlignment="Right"
                                LayoutItem="{Binding}"
                                Margin="3"
                                VerticalAlignment="Center" />
                            <dx:DXBorder
                                x:Name="Border3"
                                CornerRadius="{dx:LWCornerRadius '0, Win11=(0,7,0,0)'}"
                                Grid.Column="5"
                                BorderBrush="{dx:LWBrush 'Brush.Delimiter, Office2019Black=Brush.Border, Win10Dark=Brush.AltBorder, Win11=Brush.PanelBorder'}"
                                BorderThickness="0,1,1,0"
                                Margin="0,10,0,0" />
                            <dx:DXBorder
                                CornerRadius="{dx:LWCornerRadius '0, Win11=(0,0,7,7)'}"
                                Grid.Row="1"
                                Grid.ColumnSpan="6"
                                BorderBrush="{dx:LWBrush 'Brush.Delimiter, Office2019Black=Brush.Border, Win10Dark=Brush.AltBorder, Win11=Brush.PanelBorder'}"
                                BorderThickness="1,0,1,1" />
                            <dxdove:LayoutItemsControl
                                x:Name="Content"
                                Grid.Row="1"
                                Grid.ColumnSpan="6"
                                DataContext="{Binding DataContext}"
                                ItemsSource="{Binding LayoutItem.ItemsInternal, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                LastChildFill="{Binding LayoutItem.LastChildFill, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                Margin="12,0,12,12"
                                Orientation="{Binding LayoutItem.Orientation, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CaptionStates">
                                    <VisualState x:Name="CaptionVisible" />
                                    <VisualState x:Name="CaptionHidden">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Visibility="Collapsed" Storyboard.TargetName="Caption" Storyboard.TargetProperty="Visibility" />
                                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="12" Storyboard.TargetName="Content" Storyboard.TargetProperty="Margin" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ExpandedStates">
                                    <VisualState x:Name="Expanded" />
                                    <VisualState x:Name="Collapsed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Visibility="Collapsed" Storyboard.TargetName="Content" Storyboard.TargetProperty="Visibility" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                                <Setter Property="Margin" TargetName="Caption" Value="3,14,3,14" />
                                <Setter Property="Margin" TargetName="Content" Value="14,0,14,14" />
                                <Setter Property="Margin" TargetName="Border1" Value="0,22,0,0" />
                                <Setter Property="Margin" TargetName="Border2" Value="0,22,0,0" />
                                <Setter Property="Margin" TargetName="Border3" Value="0,22,0,0" />
                                <Setter Property="Margin" TargetName="Border4" Value="0,22,0,0" />
                                <Setter Property="ButtonHeight" TargetName="PART_ControlBox" Value="44" />
                                <Setter Property="ButtonWidth" TargetName="PART_ControlBox" Value="44" />
                                <Setter Property="Margin" TargetName="PART_ControlBox" Value="0" />
                            </Trigger>
                            <DataTrigger Binding="{Binding Path=CaptionHorizontalAlignment}" Value="Left">
                                <Setter Property="Width" TargetName="cd1" Value="0" />
                                <Setter Property="MaxWidth" TargetName="cd1" Value="0" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=CaptionHorizontalAlignment}" Value="Right">
                                <Setter Property="Width" TargetName="cd3" Value="0" />
                                <Setter Property="MaxWidth" TargetName="cd3" Value="0" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=CaptionHorizontalAlignment}" Value="Stretch">
                                <Setter Property="Width" TargetName="cd1" Value="0" />
                                <Setter Property="MaxWidth" TargetName="cd1" Value="0" />
                                <Setter Property="Width" TargetName="cd2" Value="*" />
                                <Setter Property="Width" TargetName="cd3" Value="0" />
                                <Setter Property="MaxWidth" TargetName="cd3" Value="0" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>
    <!--#endregion DEFAULT STYLES-->

    <Style x:Key="FloatingPaneWindow.DefaultStyleBase" TargetType="{x:Type dxdop:FloatingPaneWindow}">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdop:FloatingPaneWindow}">
                    <dx:DXBorder Name="PART_Root" CornerRadius="{dx:LWCornerRadius '0, Win11=7'}">
                        <AdornerDecorator>
                            <ContentPresenter />
                        </AdornerDecorator>
                    </dx:DXBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="dxi:WindowChrome.WindowChrome">
            <Setter.Value>
                <dxi:WindowChrome />
            </Setter.Value>
        </Setter>
        <Setter Property="dxi:WindowChrome.RegionMargin" Value="7" />
        <!-- try to fix T1143010 & T1201479 -->
                <!-- Fix without test. You can reproduce the issue by resizing window by outer resize-border. The inner resize-border work fine.-->
                <!-- the problem is a conflict between FloatingPaneWindow and WindowChrome  WinAPI calls, but I can't find the direct method -->
                <!-- commenting the following line solves the problem somehow -->
                <Setter Property="dxi:WindowChrome.ResizeBorderThickness" Value="0,0,1,1"/>
        <Setter Property="dxi:WindowChrome.UseNullRegion" Value="{StaticResource FloatingPaneWindow.UseNullRegion}" />
    </Style>
</ResourceDictionary>