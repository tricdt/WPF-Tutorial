<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
    xmlns:dxdo="clr-namespace:DevExpress.Xpf.Docking;assembly=DevExpress.Xpf.Docking.v24.1"
    xmlns:dxdop="clr-namespace:DevExpress.Xpf.Docking.Platform;assembly=DevExpress.Xpf.Docking.v24.1"
    xmlns:dxdot="clr-namespace:DevExpress.Xpf.Docking.ThemeKeys;assembly=DevExpress.Xpf.Docking.v24.1"
    xmlns:dxdove="clr-namespace:DevExpress.Xpf.Docking.VisualElements;assembly=DevExpress.Xpf.Docking.v24.1"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">

    <dxdove:ImageLocationToDockConverter x:Key="imageLocationToDockConverter" />
    <dx:BoolToVisibilityConverter x:Key="boolToVisibilityConverter" />
    <dxdove:DoubleToThicknessConverter x:Key="doubleToThicknessConverterRight" Direction="Right" />
    <dxdove:FloatingModeToVisibilityConverter x:Key="floatingModeToVisibilityConverter" />


    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Layout\DevExpress.Xpf.Docking\Themes\IndependentParts\DropBoundsControl.xaml-->
    <ControlTemplate x:Key="{dxdot:LWKey DropBoundsControlElements.Template}" TargetType="dxdove:DropBoundsControl">
        <Grid x:Name="PART_Bounds">
            <Grid.RowDefinitions>
                <RowDefinition x:Name="PART_Row0" Height="0*" />
                <RowDefinition x:Name="PART_Row1" />
                <RowDefinition x:Name="PART_Row2" Height="0*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="PART_Col0" Width="0*" />
                <ColumnDefinition x:Name="PART_Col1" />
                <ColumnDefinition x:Name="PART_Col2" Width="0*" />
            </Grid.ColumnDefinitions>
            <dxdove:psvContentPresenter Grid.Row="1" Grid.Column="1" Content="{TemplateBinding Content}" />
            <Rectangle
                x:Name="PART_Center"
                Grid.Row="1"
                Grid.Column="1"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Fill="{TemplateBinding Background}"
                IsHitTestVisible="False"
                Opacity="0.15"
                RadiusX="2"
                RadiusY="2"
                Visibility="Collapsed" />
            <Rectangle
                Grid.Row="1"
                Grid.Column="0"
                Fill="{TemplateBinding Background}"
                Opacity="0.15" />
            <Rectangle
                Grid.Row="1"
                Grid.Column="2"
                Fill="{TemplateBinding Background}"
                Opacity="0.15" />
            <Rectangle
                Grid.Row="0"
                Grid.Column="1"
                Fill="{TemplateBinding Background}"
                Opacity="0.15" />
            <Rectangle
                Grid.Row="2"
                Grid.Column="1"
                Fill="{TemplateBinding Background}"
                Opacity="0.15" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="DraggingStates">
                    <VisualState x:Name="EmptyDraggingState" />
                    <VisualState x:Name="DropCenterState">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Visibility="Visible" Storyboard.TargetName="PART_Center" Storyboard.TargetProperty="(Shape.Visibility)" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="DragSourceState">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Bounds" Storyboard.TargetProperty="(Grid.Opacity)" To="0.35" Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxdot:LWKey DropBoundsControlElements.OptimizedTemplate}" TargetType="dxdove:DropBoundsControl">
        <Grid x:Name="PART_Bounds">
            <dxdove:psvContentPresenter Grid.Row="1" Grid.Column="1" Content="{TemplateBinding Content}" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="DraggingStates">
                    <VisualState x:Name="EmptyDraggingState" />
                    <VisualState x:Name="DropCenterState" />
                    <VisualState x:Name="DragSourceState">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Bounds" Storyboard.TargetProperty="(Grid.Opacity)" To="0.35" Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Layout\DevExpress.Xpf.Docking\Themes\IndependentParts\DropBoundsControl.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Layout\DevExpress.Xpf.Docking\Themes\IndependentParts\CaptionControl.xaml-->
    <Style x:Key="TemplatedCaptionControlBaseStyle" TargetType="{x:Type dxdove:TemplatedCaptionControl}">
        <Setter Property="ContentPresenterTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="dxdove:TemplatedCaptionControl">
                    <dxb:SplitLayoutPanel
                        Width="{TemplateBinding ActualCaptionWidth}"
                        Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Content1Location="{Binding LayoutItem.CaptionImageLocation, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource imageLocationToDockConverter}}"
                        LeftContent1Margin="{Binding LayoutItem.ImageToTextDistance, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource doubleToThicknessConverterRight}}"
                        ToolTip="{Binding LayoutItem.ToolTip, RelativeSource={RelativeSource TemplatedParent}}">
                        <dxb:SplitLayoutPanel.Content1>
                            <dxdove:CaptionImage
                                x:Name="PART_Image"
                                Source="{TemplateBinding CaptionImage}"
                                Style="{Binding CaptionImageStyle}"
                                Visibility="{Binding IsCaptionImageVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}" />
                        </dxb:SplitLayoutPanel.Content1>
                        <dxb:SplitLayoutPanel.Content2>
                            <ContentPresenter
                                x:Name="PART_CaptionPresenter"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding ActualContent}"
                                ContentTemplate="{TemplateBinding ActualContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ActualContentTemplateSelector}"
                                Cursor="{TemplateBinding Cursor}" />
                        </dxb:SplitLayoutPanel.Content2>
                    </dxb:SplitLayoutPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Layout\DevExpress.Xpf.Docking\Themes\IndependentParts\CaptionControl.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Layout\DevExpress.Xpf.Docking\Themes\IndependentParts\ControlBoxControl.xaml-->
    <Style x:Key="ControlBoxButtonStyle" TargetType="dxdove:ControlBoxButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxdove:ControlBoxButton">
                    <dxdove:ControlBoxButtonBorder Style="{TemplateBinding BorderStyle}">
                        <ContentPresenter
                            x:Name="presenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            TextElement.Foreground="{TemplateBinding Foreground}" />
                    </dxdove:ControlBoxButtonBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderStyle">
            <Setter.Value>
                <Style TargetType="dxdove:ControlBoxButtonBorder">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="dxdove:ControlBoxButtonBorder">
                                <Grid x:Name="Button" Background="Transparent">
                                    <ContentPresenter />
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>



    <ControlTemplate x:Key="{dxdot:LWKey DockPaneElements.ControlBoxTemplate}" TargetType="{x:Type dxdove:PanelControlBoxControl}">
        <StackPanel Orientation="Horizontal">
            <dxdove:ControlBoxCustomContentPresenter x:Name="PART_CustomContent" HorizontalAlignment="Center" VerticalAlignment="Center" />
            <dxdove:ControlBoxButtonPresenter
                x:Name="PART_MinimizeButton"
                Width="{TemplateBinding ButtonWidth}"
                Height="{TemplateBinding ButtonHeight}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Command="{TemplateBinding ContextCommand}"
                CommandParameter="Minimize"
                ContentTemplate="{TemplateBinding MinimizeButtonTemplate}"
                Visibility="Collapsed" />
            <dxdove:ControlBoxButtonPresenter
                x:Name="PART_MaximizeButton"
                Width="{TemplateBinding ButtonWidth}"
                Height="{TemplateBinding ButtonHeight}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Command="{TemplateBinding ContextCommand}"
                CommandParameter="Maximize"
                ContentTemplate="{TemplateBinding MaximizeButtonTemplate}"
                Visibility="Collapsed" />
            <dxdove:ControlBoxButtonPresenter
                x:Name="PART_RestoreButton"
                Width="{TemplateBinding ButtonWidth}"
                Height="{TemplateBinding ButtonHeight}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Command="{TemplateBinding ContextCommand}"
                CommandParameter="Restore"
                ContentTemplate="{TemplateBinding RestoreButtonTemplate}"
                Visibility="Collapsed" />
            <dxdove:ControlBoxButtonPresenter
                x:Name="PART_HideButton"
                Width="{TemplateBinding ButtonWidth}"
                Height="{TemplateBinding ButtonHeight}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Command="{TemplateBinding ContextCommand}"
                CommandParameter="Hide"
                ContentTemplate="{TemplateBinding HideButtonTemplate}"
                Visibility="Collapsed" />
            <dxdove:ControlBoxButtonPresenter
                x:Name="PART_CollapseButton"
                Width="{TemplateBinding ButtonWidth}"
                Height="{TemplateBinding ButtonHeight}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Command="{TemplateBinding ContextCommand}"
                CommandParameter="ExpandToggle"
                ContentTemplate="{TemplateBinding CollapseButtonTemplate}"
                Visibility="Collapsed" />
            <dxdove:ControlBoxButtonPresenter
                x:Name="PART_ExpandButton"
                Width="{TemplateBinding ButtonWidth}"
                Height="{TemplateBinding ButtonHeight}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Command="{TemplateBinding ContextCommand}"
                CommandParameter="ExpandToggle"
                ContentTemplate="{TemplateBinding ExpandButtonTemplate}"
                Visibility="Collapsed" />
            <dxdove:ControlBoxButtonPresenter
                x:Name="PART_PinButton"
                Width="{TemplateBinding ButtonWidth}"
                Height="{TemplateBinding ButtonHeight}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Command="{TemplateBinding ContextCommand}"
                CommandParameter="Pin"
                ContentTemplate="{TemplateBinding PinButtonTemplate}"
                Visibility="Collapsed" />
            <dxdove:ControlBoxButtonPresenter
                x:Name="PART_CloseButton"
                Width="{TemplateBinding ButtonWidth}"
                Height="{TemplateBinding ButtonHeight}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Command="{TemplateBinding ContextCommand}"
                CommandParameter="Close"
                ContentTemplate="{TemplateBinding CloseButtonTemplate}"
                Visibility="Collapsed" />
        </StackPanel>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxdot:LWKey DockPaneElements.DockedControlBoxTemplate}" TargetType="{x:Type dxdove:PanelControlBoxControl}">
        <StackPanel Orientation="Horizontal">
            <dxdove:ControlBoxCustomContentPresenter x:Name="PART_CustomContent" HorizontalAlignment="Center" VerticalAlignment="Center" />
            <dxdove:ControlBoxButtonPresenter
                x:Name="PART_PinButton"
                Width="{TemplateBinding ButtonWidth}"
                Height="{TemplateBinding ButtonHeight}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Command="{TemplateBinding ContextCommand}"
                CommandParameter="Pin"
                ContentTemplate="{TemplateBinding PinButtonTemplate}"
                Visibility="Collapsed" />
            <dxdove:ControlBoxButtonPresenter
                x:Name="PART_CloseButton"
                Width="{TemplateBinding ButtonWidth}"
                Height="{TemplateBinding ButtonHeight}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Command="{TemplateBinding ContextCommand}"
                CommandParameter="Close"
                ContentTemplate="{TemplateBinding CloseButtonTemplate}"
                Visibility="Collapsed" />
        </StackPanel>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxdot:LWKey DockPaneElements.FloatingControlBoxTemplate}" TargetType="{x:Type dxdove:PanelControlBoxControl}">
        <StackPanel Orientation="Horizontal">
            <dxdove:ControlBoxCustomContentPresenter x:Name="PART_CustomContent" HorizontalAlignment="Center" VerticalAlignment="Center" />
            <dxdove:ControlBoxButtonPresenter
                x:Name="PART_MinimizeButton"
                Width="{TemplateBinding ButtonWidth}"
                Height="{TemplateBinding ButtonHeight}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Command="{TemplateBinding ContextCommand}"
                CommandParameter="Minimize"
                ContentTemplate="{TemplateBinding MinimizeButtonTemplate}"
                Visibility="Collapsed" />
            <dxdove:ControlBoxButtonPresenter
                x:Name="PART_MaximizeButton"
                Width="{TemplateBinding ButtonWidth}"
                Height="{TemplateBinding ButtonHeight}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Command="{TemplateBinding ContextCommand}"
                CommandParameter="Maximize"
                ContentTemplate="{TemplateBinding MaximizeButtonTemplate}"
                Visibility="Collapsed" />
            <dxdove:ControlBoxButtonPresenter
                x:Name="PART_RestoreButton"
                Width="{TemplateBinding ButtonWidth}"
                Height="{TemplateBinding ButtonHeight}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Command="{TemplateBinding ContextCommand}"
                CommandParameter="Restore"
                ContentTemplate="{TemplateBinding RestoreButtonTemplate}"
                Visibility="Collapsed" />
            <dxdove:ControlBoxButtonPresenter
                x:Name="PART_CloseButton"
                Width="{TemplateBinding ButtonWidth}"
                Height="{TemplateBinding ButtonHeight}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Command="{TemplateBinding ContextCommand}"
                CommandParameter="Close"
                ContentTemplate="{TemplateBinding CloseButtonTemplate}"
                Visibility="Collapsed" />
        </StackPanel>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxdot:LWKey DockPaneElements.AutoHiddenControlBoxTemplate}" TargetType="{x:Type dxdove:PanelControlBoxControl}">
        <StackPanel Orientation="Horizontal">
            <dxdove:ControlBoxCustomContentPresenter x:Name="PART_CustomContent" HorizontalAlignment="Center" VerticalAlignment="Center" />
            <dxdove:ControlBoxButtonPresenter
                x:Name="PART_HideButton"
                Width="{TemplateBinding ButtonWidth}"
                Height="{TemplateBinding ButtonHeight}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Command="{TemplateBinding ContextCommand}"
                CommandParameter="Hide"
                ContentTemplate="{TemplateBinding HideButtonTemplate}"
                Visibility="Collapsed" />
            <dxdove:ControlBoxButtonPresenter
                x:Name="PART_CollapseButton"
                Width="{TemplateBinding ButtonWidth}"
                Height="{TemplateBinding ButtonHeight}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Command="{TemplateBinding ContextCommand}"
                CommandParameter="ExpandToggle"
                ContentTemplate="{TemplateBinding CollapseButtonTemplate}"
                Visibility="Collapsed" />
            <dxdove:ControlBoxButtonPresenter
                x:Name="PART_ExpandButton"
                Width="{TemplateBinding ButtonWidth}"
                Height="{TemplateBinding ButtonHeight}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Command="{TemplateBinding ContextCommand}"
                CommandParameter="ExpandToggle"
                ContentTemplate="{TemplateBinding ExpandButtonTemplate}"
                Visibility="Collapsed" />
            <dxdove:ControlBoxButtonPresenter
                x:Name="PART_PinButton"
                Width="{TemplateBinding ButtonWidth}"
                Height="{TemplateBinding ButtonHeight}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Command="{TemplateBinding ContextCommand}"
                CommandParameter="Pin"
                ContentTemplate="{TemplateBinding PinButtonTemplate}"
                Visibility="Collapsed" />
            <dxdove:ControlBoxButtonPresenter
                x:Name="PART_CloseButton"
                Width="{TemplateBinding ButtonWidth}"
                Height="{TemplateBinding ButtonHeight}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Command="{TemplateBinding ContextCommand}"
                CommandParameter="Close"
                ContentTemplate="{TemplateBinding CloseButtonTemplate}"
                Visibility="Collapsed" />
        </StackPanel>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Layout\DevExpress.Xpf.Docking\Themes\IndependentParts\ControlBoxControl.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Layout\DevExpress.Xpf.Docking\Themes\IndependentParts\MultiTemplateControl.xaml-->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Layout\DevExpress.Xpf.Docking\Themes\IndependentParts\MultiTemplateControl.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Layout\DevExpress.Xpf.Docking\Themes\IndependentParts\DockLayoutManager.xaml-->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Layout\DevExpress.Xpf.Docking\Themes\IndependentParts\DockLayoutManager.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Layout\DevExpress.Xpf.Docking\Themes\IndependentParts\DockLayoutManagerElements.xaml-->
    <Style x:Key="baseLayoutItemStyle" TargetType="{x:Type dxdo:BaseLayoutItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxdo:BaseLayoutItem">
                    <dxdove:MultiTemplateControl />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
    </Style>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Layout\DevExpress.Xpf.Docking\Themes\IndependentParts\DockLayoutManagerElements.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Layout\DevExpress.Xpf.Docking\Themes\IndependentParts\DockLayoutManagerContainers.xaml-->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Layout\DevExpress.Xpf.Docking\Themes\IndependentParts\DockLayoutManagerContainers.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Layout\DevExpress.Xpf.Docking\Themes\IndependentParts\DockVisualizerElements.xaml-->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Layout\DevExpress.Xpf.Docking\Themes\IndependentParts\DockVisualizerElements.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Layout\DevExpress.Xpf.Docking\Themes\IndependentParts\GenericTemplates.xaml-->
    <!-- dxdove:BaseDocument Theme Elements -->
    <DataTemplate x:Key="{dxdot:LWKey DocumentElements.ControlHostTemplate}">
        <Grid dxdove:DockPane.HitTestType="Content">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <dxdove:DockBarContainerControl x:Name="PART_BarContainerControl" LayoutItem="{Binding LayoutItem}" />
            <dx:DXBorder Grid.Row="1" DataContext="{Binding LayoutItem.DataContext}">
                <dxdove:UIElementPresenter UIElement="{Binding Path=Content.LayoutItem.ContentPresenter, RelativeSource={RelativeSource TemplatedParent}}" />
            </dx:DXBorder>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="{dxdot:LWKey DocumentElements.DataHostTemplate}">
        <Grid dxdove:DockPane.HitTestType="Content" DataContext="{Binding LayoutItem}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <dxdove:DockBarContainerControl x:Name="PART_BarContainerControl" LayoutItem="{Binding}" />
            <dxdove:UIElementPresenter Grid.Row="1" UIElement="{Binding Path=Content.LayoutItem.ContentPresenter, RelativeSource={RelativeSource TemplatedParent}}" />
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="{dxdot:LWKey DocumentElements.LayoutHostTemplate}">
        <Grid dxdove:DockPane.HitTestType="Content" DataContext="{Binding LayoutItem.DataContext}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <dxdove:DockBarContainerControl x:Name="PART_BarContainerControl" LayoutItem="{Binding Content.LayoutItem, RelativeSource={RelativeSource TemplatedParent}}" />
            <ScrollViewer
                Grid.Row="1"
                dxi:ContentControlHelper.ContentIsNotLogical="False"
                BorderBrush="Transparent"
                Focusable="False"
                HorizontalScrollBarVisibility="{Binding Content.LayoutItem.HorizontalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}}"
                VerticalScrollBarVisibility="{Binding Content.LayoutItem.VerticalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                <dxdove:UIElementPresenter UIElement="{Binding Path=Content.LayoutItem.ContentPresenter, RelativeSource={RelativeSource TemplatedParent}}" />
            </ScrollViewer>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="{dxdot:LWKey DocumentPaneElements.TabbedTemplate}">
        <dxdove:DocumentTabContainer x:Name="PART_ItemsControl" Background="{Binding LayoutItem.Background}" LayoutItem="{Binding LayoutItem}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxdot:LWKey DocumentPaneElements.MDITemplate}">
        <dxdove:DocumentMDIContainer x:Name="PART_ItemsControl" Background="{Binding LayoutItem.Background}" LayoutItem="{Binding LayoutItem}" />
    </DataTemplate>
    <!-- BEGIN DocumentPane Main Template -->
    <ControlTemplate x:Key="{dxdot:LWKey DocumentPaneElements.Template}" TargetType="dxdove:DocumentPane">
        <dx:DXBorder
            Margin="{Binding Path=LayoutItem.ActualMargin, RelativeSource={RelativeSource TemplatedParent}}"
            Padding="{Binding Path=LayoutItem.ActualPadding, RelativeSource={RelativeSource TemplatedParent}}"
            dxdove:DockPane.HitTestType="Bounds"
            Background="Transparent">
            <dxdove:DocumentPaneContentPresenter x:Name="PART_Content" MDIStyle="{Binding Path=LayoutItem.MDIStyle, RelativeSource={RelativeSource TemplatedParent}}" />
        </dx:DXBorder>
    </ControlTemplate>
    <!-- END DocumentPane Main Template -->

    <!-- GroupPane Theme Elements -->
    <DataTemplate x:Key="{dxdot:LWKey GroupPaneElements.NoBorderTemplate}">
        <dxdove:BaseGroupContentControl Content="{Binding}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxdot:LWKey GroupPaneElements.GroupTemplate}">
        <dxdove:GroupContentControl Content="{Binding}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxdot:LWKey GroupPaneElements.GroupBoxTemplate}">
        <dxdove:GroupBoxContentControl Content="{Binding}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxdot:LWKey GroupPaneElements.TabbedTemplate}">
        <dxdove:TabbedLayoutGroupPane LayoutItem="{Binding}" />
    </DataTemplate>
    <!-- BEGIN GroupPane Main Template -->
    <ControlTemplate x:Key="{dxdot:LWKey GroupPaneElements.Template}" TargetType="dxdove:GroupPane">
        <dx:DXBorder
            dxdove:DockPane.HitTestType="Bounds"
            Background="Transparent"
            BorderBrush="{Binding LayoutItem.BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
            BorderThickness="{Binding LayoutItem.BorderThickness, RelativeSource={RelativeSource TemplatedParent}}">
            <dxdove:DropBoundsControl Margin="{Binding Path=LayoutItem.ActualMargin, RelativeSource={RelativeSource TemplatedParent}}" Padding="{Binding Path=LayoutItem.ActualPadding, RelativeSource={RelativeSource TemplatedParent}}" LayoutItem="{Binding Path=LayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
                <dxdove:GroupPaneContentPresenter x:Name="PART_Content" Content="{Binding LayoutItem, RelativeSource={RelativeSource TemplatedParent}}" GroupBorderStyle="{Binding Path=LayoutItem.GroupBorderStyle, RelativeSource={RelativeSource TemplatedParent}}" />
            </dxdove:DropBoundsControl>
        </dx:DXBorder>
    </ControlTemplate>
    <!-- END GroupPane Main Template -->

    <!-- TabbedPane Theme Elements -->
    <DataTemplate x:Key="{dxdot:LWKey TabbedPaneElements.TabbedTemplate}">
        <dxdove:PanelTabContainer x:Name="PART_ItemsControl" DataContext="{Binding LayoutItem}" LayoutItem="{Binding}" />
    </DataTemplate>
    <!-- BEGIN TabbedPane Main Template -->
    <ControlTemplate x:Key="{dxdot:LWKey TabbedPaneElements.Template}" TargetType="dxdove:TabbedPane">
        <dx:DXBorder
            Margin="{Binding Path=LayoutItem.ActualMargin, RelativeSource={RelativeSource TemplatedParent}}"
            Padding="{Binding Path=LayoutItem.ActualPadding, RelativeSource={RelativeSource TemplatedParent}}"
            dxdove:DockPane.HitTestType="Bounds"
            Background="Transparent">
            <dxdove:TabbedPaneContentPresenter x:Name="PART_Content" />
        </dx:DXBorder>
    </ControlTemplate>
    <!-- END TabbedPane Main Template -->

    <!-- dxdove:DockPane Theme Elements -->
    <DataTemplate x:Key="{dxdot:LWKey DockPaneElements.DataHostTemplate}">
        <Grid dxdove:DockPane.HitTestType="Content" DataContext="{Binding LayoutItem}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <dxdove:DockBarContainerControl x:Name="PART_BarContainerControl" LayoutItem="{Binding}" />
            <dxdove:UIElementPresenter Grid.Row="1" UIElement="{Binding Path=Content.LayoutItem.ContentPresenter, RelativeSource={RelativeSource TemplatedParent}}" />
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="{dxdot:LWKey DockPaneElements.ControlHostTemplate}">
        <Grid dxdove:DockPane.HitTestType="Content">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <dxdove:DockBarContainerControl x:Name="PART_BarContainerControl" LayoutItem="{Binding LayoutItem}" />
            <dx:DXBorder Grid.Row="1" DataContext="{Binding LayoutItem.DataContext}">
                <dxdove:UIElementPresenter UIElement="{Binding Path=Content.LayoutItem.ContentPresenter, RelativeSource={RelativeSource TemplatedParent}}" />
            </dx:DXBorder>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="{dxdot:LWKey DockPaneElements.LayoutHostTemplate}">
        <Grid dxdove:DockPane.HitTestType="Content" DataContext="{Binding LayoutItem.DataContext}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <dxdove:DockBarContainerControl x:Name="PART_BarContainerControl" LayoutItem="{Binding Content.LayoutItem, RelativeSource={RelativeSource TemplatedParent}}" />
            <ScrollViewer
                Grid.Row="1"
                dxi:ContentControlHelper.ContentIsNotLogical="False"
                BorderBrush="Transparent"
                Focusable="False"
                HorizontalScrollBarVisibility="{Binding Content.LayoutItem.HorizontalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}}"
                VerticalScrollBarVisibility="{Binding Content.LayoutItem.VerticalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                <dxdove:UIElementPresenter UIElement="{Binding Path=Content.LayoutItem.ContentPresenter, RelativeSource={RelativeSource TemplatedParent}}" />
            </ScrollViewer>
        </Grid>
    </DataTemplate>
    <!-- BEGIN DockPane Main Template -->
    <!-- !!! This template is overriden in DeepBlue, LightGray, VS2010, Office2010, Office2007, Seven themes -->
    
    <!-- END DockPane Main Template -->

    <!-- AutoHide Theme Elements -->
    <ControlTemplate x:Key="{dxdot:LWKey AutoHideTrayElements.Template}" TargetType="dxdove:AutoHideTray">
        <dx:DXBorder
            x:Name="bounds"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding ActualBorderThickness}">
            <ItemsPresenter />
        </dx:DXBorder>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxdot:LWKey AutoHideTrayElements.HeadersGroup}" TargetType="dxdove:AutoHideTrayHeadersGroup">
        <ItemsPresenter />
    </ControlTemplate>
    <!-- ControlItem Theme Elements -->
    <DataTemplate x:Key="{dxdot:LWKey ControlItemElements.Caption}">
        <dx:DXBorder dxdove:DockPane.HitTestType="Header" Background="Transparent" DataContext="{Binding LayoutItem}">
            <dxdove:TemplatedCaptionControl Width="{Binding Path=ActualCaptionWidth}" Padding="{Binding Path=ActualCaptionMargin}" LayoutItem="{Binding}" />
        </dx:DXBorder>
    </DataTemplate>
    <DataTemplate x:Key="{dxdot:LWKey ControlItemElements.Control}">
        <dx:DXBorder x:Name="border" dxdove:DockPane.HitTestType="Content" DataContext="{Binding LayoutItem.DataContext}">
            <dxdove:UIElementPresenter HorizontalAlignment="{Binding Path=Content.LayoutItem.ControlHorizontalAlignment, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="{Binding Path=Content.LayoutItem.ControlVerticalAlignment, RelativeSource={RelativeSource TemplatedParent}}" UIElement="{Binding Path=Content.LayoutItem.ContentPresenter, RelativeSource={RelativeSource TemplatedParent}}" />
        </dx:DXBorder>
    </DataTemplate>
    <DataTemplate x:Key="{dxdot:LWKey FloatPaneElements.Template}">
        <Grid DataContext="{Binding LayoutItem}" Visibility="{Binding ActualVisibility}">
            <Grid.Resources>
                <dxmvvm:ObjectToObjectConverter x:Key="FloatStateToVisibilityConverter" DefaultTarget="Collapsed">
                    <dxmvvm:MapItem Source="Minimized" Target="Visible" />
                </dxmvvm:ObjectToObjectConverter>
                <dxmvvm:ObjectToObjectConverter x:Key="FloatStateToVisibilityConverterInverted" DefaultTarget="Visible">
                    <dxmvvm:MapItem Source="Minimized" Target="Collapsed" />
                </dxmvvm:ObjectToObjectConverter>
            </Grid.Resources>
            <dxdove:FormBorderControl
                x:Name="PART_FormBorderControl"
                FormBorderMargin="{DynamicResource {dxdot:LWKey FloatPaneElements.FormBorderMargin}}"
                MaximizedBorderMargin="{DynamicResource {dxdot:LWKey FloatPaneElements.MaximizedBorderMargin}}"
                SingleBorderMargin="{DynamicResource {dxdot:LWKey FloatPaneElements.SingleBorderMargin}}"
                Visibility="{Binding FloatState, Converter={StaticResource FloatStateToVisibilityConverterInverted}}" />
            <dxdove:MinimizedFloatGroupsItem
                MinHeight="28"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Content="{Binding LayoutItemData}"
                Visibility="{Binding FloatState, Converter={StaticResource FloatStateToVisibilityConverter}}" />
        </Grid>
    </DataTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Layout\DevExpress.Xpf.Docking\Themes\IndependentParts\GenericTemplates.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Layout\DevExpress.Xpf.Docking\Themes\IndependentParts\Customization.xaml-->
    <SolidColorBrush x:Key="{dxdot:LWKey BrushElements.TreeItemSelected}" Opacity="0.10" Color="#FF1D4ABD" />
    <SolidColorBrush x:Key="{dxdot:LWKey BrushElements.TreeItemHovered}" Opacity="0.50" Color="LightBlue" />
    <SolidColorBrush x:Key="{dxdot:LWKey BrushElements.TreeItemDragged}" Opacity="0.50" Color="LightGray" />


    <!-- Brushes -->
    <!-- Controls -->
    <Style x:Key="{dxdot:LWKey DockElements.HiddenItemsPanelItem}" TargetType="dxdove:psvListBox">
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type dxdove:psvListBoxItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type dxdove:psvListBoxItem}">
                                <dxdove:HiddenItem LayoutItem="{Binding}" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="AutomationProperties.AutomationId" Value="{Binding Path=(AutomationProperties.AutomationId)}" />
                    <Setter Property="AutomationProperties.Name" Value="{Binding Path=(AutomationProperties.Name)}" />
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Layout\DevExpress.Xpf.Docking\Themes\IndependentParts\Customization.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Layout\DevExpress.Xpf.Docking\Themes\IndependentParts.xaml-->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Layout\DevExpress.Xpf.Docking\Themes\IndependentParts.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Layout\DevExpress.Xpf.Docking\Themes\Generic.xaml-->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Layout\DevExpress.Xpf.Docking\Themes\Generic.xaml-->


    <!--#region DEFAULT STYLES-->

    <Style x:Key="DropBoundsControl.DefaultStyleBase" TargetType="{x:Type dxdove:DropBoundsControl}">
        <Setter Property="Template" Value="{DynamicResource {dxdot:LWKey DropBoundsControlElements.Template}}" />
        <Setter Property="Background" Value="{DynamicResource {dxdot:LWKey BrushElements.MoveTargetBackground}}" />
        <Setter Property="CenterElementTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Rectangle
                        x:Name="PART_Center"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Fill="{Binding Background, RelativeSource={RelativeSource AncestorType=dxdove:DropBoundsControl}}"
                        IsHitTestVisible="False"
                        Opacity="0.15"
                        RadiusX="2"
                        RadiusY="2"
                        Visibility="Collapsed" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SideElementTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Rectangle Fill="{Binding Background, RelativeSource={RelativeSource AncestorType=dxdove:DropBoundsControl}}" Opacity="0.15" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="UseOptimizedTemplate" Value="True">
                <Setter Property="Template" Value="{DynamicResource {dxdot:LWKey DropBoundsControlElements.OptimizedTemplate}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="CaptionControl.DefaultStyleBase" TargetType="{x:Type dxdove:CaptionControl}">
        <!--SPECIFICTHEME Office2010Black <Setter Property="AlternateForeground" Value="{DynamicResource {dxt:LWKey ThemeColors.BlackForegroundColor}}" /> SPECIFICTHEME-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdove:CaptionControl}">
                    <Grid>
                        <dxb:SplitLayoutPanel Content1Location="{Binding CaptionImageLocation, Converter={StaticResource imageLocationToDockConverter}}" LeftContent1Margin="{Binding ImageToTextDistance, Converter={StaticResource doubleToThicknessConverterRight}}">
                            <dxb:SplitLayoutPanel.Content1>
                                <dxdove:CaptionImage
                                    x:Name="PART_Image"
                                    Source="{TemplateBinding CaptionImage}"
                                    Style="{Binding CaptionImageStyle}"
                                    Visibility="{Binding ShowCaptionImage, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}" />
                            </dxb:SplitLayoutPanel.Content1>
                            <dxb:SplitLayoutPanel.Content2>
                                <dx:DXBorder x:Name="captionBorder" Background="{Binding ActualAppearance.Background, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding HasCaption, Converter={StaticResource boolToVisibilityConverter}}">
                                    <dxdove:psvCaption
                                        x:Name="PART_Text"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        dxdove:DockPane.HitTestType="Label"
                                        Background="{Binding ActualAppearance.Background, RelativeSource={RelativeSource TemplatedParent}}"
                                        FontFamily="{Binding ActualAppearance.FontFamily, RelativeSource={RelativeSource TemplatedParent}}"
                                        FontSize="{Binding ActualAppearance.FontSize, RelativeSource={RelativeSource TemplatedParent}}"
                                        FontStretch="{Binding ActualAppearance.FontStretch, RelativeSource={RelativeSource TemplatedParent}}"
                                        FontStyle="{Binding ActualAppearance.FontStyle, RelativeSource={RelativeSource TemplatedParent}}"
                                        FontWeight="{Binding ActualAppearance.FontWeight, RelativeSource={RelativeSource TemplatedParent}}"
                                        Foreground="{Binding ActualAppearance.Foreground, RelativeSource={RelativeSource TemplatedParent}}"
                                        Text="{Binding ActualCaption}"
                                        TextTrimming="{Binding TextTrimming}"
                                        TextWrapping="{TemplateBinding TextWrapping}" />
                                </dx:DXBorder>
                            </dxb:SplitLayoutPanel.Content2>
                        </dxb:SplitLayoutPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TabCaptionControl.DefaultStyleBase" TargetType="{x:Type dxdove:TabCaptionControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdove:TabCaptionControl}">
                    <dxb:SplitLayoutPanel
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Content1Location="{Binding CaptionImageLocation, Converter={StaticResource imageLocationToDockConverter}}"
                        LeftContent1Margin="{Binding ImageToTextDistance, Converter={StaticResource doubleToThicknessConverterRight}}">
                        <dxb:SplitLayoutPanel.Content1>
                            <dxdove:CaptionImage
                                x:Name="PART_Image"
                                Source="{TemplateBinding CaptionImage}"
                                Style="{Binding CaptionImageStyle}"
                                Visibility="{Binding ShowCaptionImage, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}" />
                        </dxb:SplitLayoutPanel.Content1>
                        <dxb:SplitLayoutPanel.Content2>
                            <dx:PixelSnapper HorizontalAlignment="Left" VerticalAlignment="Center" Visibility="{Binding HasTabCaption, Converter={StaticResource boolToVisibilityConverter}}">
                                <dxdove:psvTabCaption
                                    x:Name="PART_Text"
                                    dxdove:DockPane.HitTestType="Label"
                                    Background="{Binding ActualAppearance.Background, RelativeSource={RelativeSource TemplatedParent}}"
                                    FontFamily="{Binding ActualAppearance.FontFamily, RelativeSource={RelativeSource TemplatedParent}}"
                                    FontSize="{Binding ActualAppearance.FontSize, RelativeSource={RelativeSource TemplatedParent}}"
                                    FontStretch="{Binding ActualAppearance.FontStretch, RelativeSource={RelativeSource TemplatedParent}}"
                                    FontStyle="{Binding ActualAppearance.FontStyle, RelativeSource={RelativeSource TemplatedParent}}"
                                    FontWeight="{Binding ActualAppearance.FontWeight, RelativeSource={RelativeSource TemplatedParent}}"
                                    Foreground="{Binding ActualAppearance.Foreground, RelativeSource={RelativeSource TemplatedParent}}"
                                    Text="{Binding ActualTabCaption}"
                                    TextTrimming="{Binding TextTrimming}"
                                    TextWrapping="NoWrap"
                                    UseLayoutRounding="True" />
                            </dx:PixelSnapper>
                        </dxb:SplitLayoutPanel.Content2>
                    </dxb:SplitLayoutPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TemplatedCaptionControl.DefaultStyleBase" BasedOn="{StaticResource TemplatedCaptionControlBaseStyle}" TargetType="{x:Type dxdove:TemplatedCaptionControl}">
        <Setter Property="CaptionControlTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="dxdove:TemplatedCaptionControl">
                    <dxdove:CaptionControl
                        x:Name="PART_Caption"
                        Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        CaptionImage="{TemplateBinding CaptionImage}"
                        FontWeight="{TemplateBinding FontWeight}"
                        Foreground="{TemplateBinding Foreground}"
                        ShowCaptionImage="{TemplateBinding IsCaptionImageVisible}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TemplatedTabCaptionControl.DefaultStyleBase" BasedOn="{StaticResource TemplatedCaptionControlBaseStyle}" TargetType="{x:Type dxdove:TemplatedTabCaptionControl}">
        <Setter Property="Foreground" Value="#FF000000" />
        <Setter Property="CaptionControlTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="dxdove:TemplatedTabCaptionControl">
                    <dxdove:TabCaptionControl
                        x:Name="PART_Caption"
                        Width="{Binding TabCaptionWidth}"
                        Margin="{TemplateBinding Padding}"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        CaptionImage="{TemplateBinding CaptionImage}"
                        Foreground="{TemplateBinding Foreground}"
                        ShowCaptionImage="{TemplateBinding IsCaptionImageVisible}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BaseControlBoxControl.DefaultStyleBase" TargetType="{x:Type dxdove:BaseControlBoxControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdove:BaseControlBoxControl}">
                    <StackPanel Orientation="Horizontal">
                        <dxdove:ControlBoxCustomContentPresenter x:Name="PART_CustomContent" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        <dxdove:ControlBoxButtonPresenter
                            x:Name="PART_CloseButton"
                            Width="{TemplateBinding ButtonWidth}"
                            Height="{TemplateBinding ButtonHeight}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Command="{TemplateBinding ContextCommand}"
                            CommandParameter="Close"
                            ContentTemplate="{TemplateBinding CloseButtonTemplate}"
                            Visibility="Collapsed" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="CloseButtonTemplate" Value="{x:Null}">
                            <Setter TargetName="PART_CloseButton" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="Black" />
    </Style>
    <Style x:Key="DocumentTabHeaderControlBoxControl.DefaultStyleBase" TargetType="{x:Type dxdove:DocumentTabHeaderControlBoxControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdove:DocumentTabHeaderControlBoxControl}">
                    <StackPanel Orientation="Horizontal">
                        <dxdove:ControlBoxCustomContentPresenter x:Name="PART_CustomContent" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        <dxdove:ControlBoxButtonPresenter
                            x:Name="PART_PinButton"
                            Width="{TemplateBinding ButtonWidth}"
                            Height="{TemplateBinding ButtonHeight}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Command="{TemplateBinding ContextCommand}"
                            CommandParameter="Pin"
                            ContentTemplate="{TemplateBinding PinButtonTemplate}"
                            Visibility="Collapsed" />
                        <dxdove:ControlBoxButtonPresenter
                            x:Name="PART_CloseButton"
                            Width="{TemplateBinding ButtonWidth}"
                            Height="{TemplateBinding ButtonHeight}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Command="{TemplateBinding ContextCommand}"
                            CommandParameter="Close"
                            ContentTemplate="{TemplateBinding CloseButtonTemplate}"
                            Visibility="Collapsed" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding LayoutItem.IsPinButtonVisible, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <Setter TargetName="PART_PinButton" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <Trigger Property="CloseButtonTemplate" Value="{x:Null}">
                            <Setter TargetName="PART_CloseButton" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PanelControlBoxControl.DefaultStyleBase" TargetType="{x:Type dxdove:PanelControlBoxControl}">
        <Setter Property="Template" Value="{DynamicResource {dxdot:LWKey DockPaneElements.ControlBoxTemplate}}" />
        <Style.Triggers>
            <Trigger Property="ActualDockItemState" Value="Docked">
                <Setter Property="Template" Value="{DynamicResource {dxdot:LWKey DockPaneElements.DockedControlBoxTemplate}}" />
            </Trigger>
            <Trigger Property="ActualDockItemState" Value="Floating">
                <Setter Property="Template" Value="{DynamicResource {dxdot:LWKey DockPaneElements.FloatingControlBoxTemplate}}" />
            </Trigger>
            <Trigger Property="ActualDockItemState" Value="AutoHidden">
                <Setter Property="Template" Value="{DynamicResource {dxdot:LWKey DockPaneElements.AutoHiddenControlBoxTemplate}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="WindowControlBoxControl.DefaultStyleBase" TargetType="{x:Type dxdove:WindowControlBoxControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdove:WindowControlBoxControl}">
                    <StackPanel Orientation="Horizontal">
                        <dxdove:ControlBoxCustomContentPresenter x:Name="PART_CustomContent" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        <dxdove:ControlBoxButtonPresenter
                            x:Name="PART_MinimizeButton"
                            Width="{TemplateBinding ButtonWidth}"
                            Height="{TemplateBinding ButtonHeight}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Command="{TemplateBinding ContextCommand}"
                            CommandParameter="Minimize"
                            ContentTemplate="{TemplateBinding MinimizeButtonTemplate}"
                            Visibility="Collapsed" />
                        <dxdove:ControlBoxButtonPresenter
                            x:Name="PART_RestoreButton"
                            Width="{TemplateBinding ButtonWidth}"
                            Height="{TemplateBinding ButtonHeight}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Command="{TemplateBinding ContextCommand}"
                            CommandParameter="Restore"
                            ContentTemplate="{TemplateBinding RestoreButtonTemplate}"
                            Visibility="Collapsed" />
                        <dxdove:ControlBoxButtonPresenter
                            x:Name="PART_MaximizeButton"
                            Width="{TemplateBinding ButtonWidth}"
                            Height="{TemplateBinding ButtonHeight}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Command="{TemplateBinding ContextCommand}"
                            CommandParameter="Maximize"
                            ContentTemplate="{TemplateBinding MaximizeButtonTemplate}"
                            Visibility="Collapsed" />
                        <dxdove:ControlBoxButtonPresenter
                            x:Name="PART_CloseButton"
                            Width="{TemplateBinding ButtonWidth}"
                            Height="{TemplateBinding ButtonHeight}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Command="{TemplateBinding ContextCommand}"
                            CommandParameter="Close"
                            ContentTemplate="{TemplateBinding CloseButtonTemplate}"
                            Visibility="Collapsed" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TabHeaderControlBoxControl.DefaultStyleBase" TargetType="{x:Type dxdove:TabHeaderControlBoxControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdove:TabHeaderControlBoxControl}">
                    <StackPanel x:Name="PART_StackPanel" Orientation="Horizontal">
                        <dxdove:ControlBoxButtonPresenter
                            x:Name="PART_ScrollPrevButton"
                            Width="{TemplateBinding ButtonWidth}"
                            Height="{TemplateBinding ButtonHeight}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Command="{TemplateBinding ContextCommand}"
                            CommandParameter="ScrollPrev"
                            ContentTemplate="{TemplateBinding ScrollPrevButtonTemplate}"
                            Visibility="Collapsed" />
                        <dxdove:ControlBoxButtonPresenter
                            x:Name="PART_ScrollNextButton"
                            Width="{TemplateBinding ButtonWidth}"
                            Height="{TemplateBinding ButtonHeight}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Command="{TemplateBinding ContextCommand}"
                            CommandParameter="ScrollNext"
                            ContentTemplate="{TemplateBinding ScrollNextButtonTemplate}"
                            Visibility="Collapsed" />

                        <dxdove:ControlBoxCustomContentPresenter x:Name="PART_CustomContent" HorizontalAlignment="Center" VerticalAlignment="Center" />

                        <dxdove:ControlBoxButtonPresenter
                            x:Name="PART_DropDownButton"
                            Width="{TemplateBinding ButtonWidth}"
                            Height="{TemplateBinding ButtonHeight}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Command="{TemplateBinding ContextCommand}"
                            CommandParameter="Menu"
                            ContentTemplate="{TemplateBinding DropDownButtonTemplate}"
                            Visibility="Collapsed" />
                        <dxdove:ControlBoxButtonPresenter
                            x:Name="PART_RestoreButton"
                            Width="{TemplateBinding ButtonWidth}"
                            Height="{TemplateBinding ButtonHeight}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Command="{TemplateBinding ContextCommand}"
                            CommandParameter="Restore"
                            ContentTemplate="{TemplateBinding RestoreButtonTemplate}"
                            Visibility="Collapsed" />
                        <dxdove:ControlBoxButtonPresenter
                            x:Name="PART_CloseButton"
                            Width="{TemplateBinding ButtonWidth}"
                            Height="{TemplateBinding ButtonHeight}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Command="{TemplateBinding ContextCommand}"
                            CommandParameter="Close"
                            ContentTemplate="{TemplateBinding CloseButtonTemplate}"
                            Visibility="Collapsed" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GroupBoxControlBoxControl.DefaultStyleBase" TargetType="{x:Type dxdove:GroupBoxControlBoxControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdove:GroupBoxControlBoxControl}">
                    <StackPanel x:Name="PART_StackPanel" Orientation="Horizontal">
                        <dxdove:ControlBoxCustomContentPresenter x:Name="PART_CustomContent" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        <dxdove:ControlBoxButtonPresenter
                            x:Name="PART_ExpandButton"
                            Width="{TemplateBinding ButtonWidth}"
                            Height="{TemplateBinding ButtonHeight}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Command="{TemplateBinding ContextCommand}"
                            CommandParameter="ExpandToggle"
                            ContentTemplate="{TemplateBinding ExpandButtonTemplate}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ControlBoxButtonElement.DefaultStyleBase" BasedOn="{StaticResource ControlBoxButtonStyle}" TargetType="dxdove:ControlBoxButton">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
    </Style>
    <Style x:Key="ControlBoxButton.DefaultStyleBase" BasedOn="{StaticResource ControlBoxButtonStyle}" TargetType="dxdo:ControlBoxButton">
        <Setter Property="Padding" Value="3,1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style x:Key="MultiTemplateControl.DefaultStyleBase" TargetType="{x:Type dxdove:MultiTemplateControl}">
        <Setter Property="EmptyTemplate" Value="{x:Null}" />
        <Setter Property="ControlItemTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="dxdove:MultiTemplateControl">
                    <dxdove:ControlItem
                        Background="{Binding LayoutItem.Background, RelativeSource={RelativeSource TemplatedParent}}"
                        Content="{Binding LayoutItem.LayoutItemData, RelativeSource={RelativeSource TemplatedParent}}"
                        DataContext="{TemplateBinding LayoutItem}"
                        Header="{Binding LayoutItem.LayoutItemData, RelativeSource={RelativeSource TemplatedParent}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="PanelTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="dxdove:MultiTemplateControl">
                    <dxdove:DockPane Background="{Binding LayoutItem.Background, RelativeSource={RelativeSource TemplatedParent}}" Content="{Binding LayoutItem.LayoutItemData, RelativeSource={RelativeSource TemplatedParent}}" Header="{Binding LayoutItem.LayoutItemData, RelativeSource={RelativeSource TemplatedParent}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="GroupTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="dxdove:MultiTemplateControl">
                    <dxdove:GroupPane Content="{Binding LayoutItem.LayoutItemData, RelativeSource={RelativeSource TemplatedParent}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FloatingWindowTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="dxdove:MultiTemplateControl">
                    <dxdove:FloatingWindowPresenter
                        BorderMargin="{DynamicResource {dxdot:LWKey FloatPaneElements.BorderMargin}}"
                        BorderStyle="{Binding Path=LayoutItem.BorderStyle, RelativeSource={RelativeSource TemplatedParent}}"
                        ContainerTemplate="{DynamicResource {dxdot:LWKey FloatPaneElements.Template}}"
                        Content="{Binding LayoutItem.LayoutItemData, RelativeSource={RelativeSource TemplatedParent}}"
                        DataContext="{TemplateBinding LayoutItem}"
                        FloatLocation="{Binding Path=LayoutItem.FloatLocation, RelativeSource={RelativeSource TemplatedParent}}"
                        FloatSize="{Binding Path=LayoutItem.FloatSize, RelativeSource={RelativeSource TemplatedParent}}"
                        FormBorderMargin="{DynamicResource {dxdot:LWKey FloatPaneElements.FormBorderMargin}}"
                        IsMaximized="{Binding Path=LayoutItem.IsMaximized, RelativeSource={RelativeSource TemplatedParent}}"
                        IsOpen="{Binding Path=LayoutItem.IsOpen, RelativeSource={RelativeSource TemplatedParent}}"
                        MaximizedBorderMargin="{DynamicResource {dxdot:LWKey FloatPaneElements.MaximizedBorderMargin}}"
                        ShadowMargin="{DynamicResource {dxdot:LWKey FloatPaneElements.ShadowMargin}}"
                        SingleBorderMargin="{DynamicResource {dxdot:LWKey FloatPaneElements.SingleBorderMargin}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FloatingAdornerTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="dxdove:MultiTemplateControl">
                    <dxdove:FloatingAdornerPresenter
                        BorderMargin="{DynamicResource {dxdot:LWKey FloatPaneElements.BorderMargin}}"
                        BorderStyle="{Binding Path=LayoutItem.BorderStyle, RelativeSource={RelativeSource TemplatedParent}}"
                        ContainerTemplate="{DynamicResource {dxdot:LWKey FloatPaneElements.Template}}"
                        Content="{Binding LayoutItem.LayoutItemData, RelativeSource={RelativeSource TemplatedParent}}"
                        DataContext="{TemplateBinding LayoutItem}"
                        FloatLocation="{Binding Path=LayoutItem.FloatLocation, RelativeSource={RelativeSource TemplatedParent}}"
                        FloatSize="{Binding Path=LayoutItem.FloatSize, RelativeSource={RelativeSource TemplatedParent}}"
                        FormBorderMargin="{DynamicResource {dxdot:LWKey FloatPaneElements.FormBorderMargin}}"
                        IsMaximized="{Binding Path=LayoutItem.IsMaximized, RelativeSource={RelativeSource TemplatedParent}}"
                        IsOpen="{Binding Path=LayoutItem.IsOpen, RelativeSource={RelativeSource TemplatedParent}}"
                        MaximizedBorderMargin="{DynamicResource {dxdot:LWKey FloatPaneElements.MaximizedBorderMargin}}"
                        ShadowMargin="{DynamicResource {dxdot:LWKey FloatPaneElements.ShadowMargin}}"
                        SingleBorderMargin="{DynamicResource {dxdot:LWKey FloatPaneElements.SingleBorderMargin}}"
                        SizeToContent="{Binding Path=LayoutItem.SizeToContent, RelativeSource={RelativeSource TemplatedParent}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="TabPanelTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="dxdove:MultiTemplateControl">
                    <dxdove:TabbedPane Content="{Binding LayoutItem.LayoutItemData, RelativeSource={RelativeSource TemplatedParent}}" DataContext="{TemplateBinding LayoutItem}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="DocumentPanelTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="dxdove:MultiTemplateControl">
                    <dxdove:DocumentPane Content="{Binding LayoutItem.LayoutItemData, RelativeSource={RelativeSource TemplatedParent}}" DataContext="{TemplateBinding LayoutItem}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="DocumentTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="dxdove:MultiTemplateControl">
                    <dxdove:Document Background="{Binding LayoutItem.Background, RelativeSource={RelativeSource TemplatedParent}}" Content="{Binding LayoutItem.LayoutItemData, RelativeSource={RelativeSource TemplatedParent}}" DataContext="{TemplateBinding LayoutItem}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FloatDocumentTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="dxdove:MultiTemplateControl">
                    <dxdove:FloatDocument Background="{Binding LayoutItem.Background, RelativeSource={RelativeSource TemplatedParent}}" Content="{Binding LayoutItem.LayoutItemData, RelativeSource={RelativeSource TemplatedParent}}" DataContext="{TemplateBinding LayoutItem}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MDIDocumentTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="dxdove:MultiTemplateControl">
                    <dxdove:MDIDocument Content="{Binding LayoutItem.LayoutItemData, RelativeSource={RelativeSource TemplatedParent}}" DataContext="{TemplateBinding LayoutItem}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SplitterControlTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="dxdove:MultiTemplateControl">
                    <dxdove:SplitterControl IsEnabled="{Binding Path=LayoutItem.IsEnabled, RelativeSource={RelativeSource TemplatedParent}}" LayoutItem="{TemplateBinding LayoutItem}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="EmptySpaceControlTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="dxdove:MultiTemplateControl">
                    <dxdove:EmptySpaceControl />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="LabelControlTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="dxdove:MultiTemplateControl">
                    <dxdove:LabelControl Content="{Binding LayoutItem.LayoutItemData, RelativeSource={RelativeSource TemplatedParent}}" DataContext="{TemplateBinding LayoutItem}" Header="{Binding LayoutItem.LayoutItemData, RelativeSource={RelativeSource TemplatedParent}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SeparatorControlTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="dxdove:MultiTemplateControl">
                    <dxdove:SeparatorControl Content="{Binding LayoutItem.LayoutItemData, RelativeSource={RelativeSource TemplatedParent}}" DataContext="{TemplateBinding LayoutItem}" Orientation="{Binding Path=LayoutItem.Orientation, RelativeSource={RelativeSource TemplatedParent}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="AutoHideGroupTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="dxdove:MultiTemplateControl">
                    <dxdove:AutoHideTrayHeadersGroup LayoutItem="{TemplateBinding LayoutItem}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DockLayoutManager.DefaultStyleBase" TargetType="{x:Type dxdo:DockLayoutManager}">
        <Setter Property="Background" Value="{DynamicResource {dxdot:LWKey BrushElements.PanelBackground}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxdo:DockLayoutManager">
                    <dx:DXBorder Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <dxdove:psvDockPanel>
                            <dxdo:ClosedItemsPanel x:Name="PART_ClosedItemsPanel" dxdove:psvDockPanel.Dock="Top" Dock="{TemplateBinding ClosedPanelsBarPosition}" />
                            <Grid>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <!-- AutoHideTray elements -->
                                    <dxdove:AutoHideTray
                                        x:Name="PART_LeftAutoHideTray"
                                        Grid.Row="1"
                                        Grid.Column="0"
                                        HorizontalAlignment="Center"
                                        dxdove:psvPanel.ZIndex="2"
                                        CheckInterval="{TemplateBinding AutoHideGroupsCheckInterval}"
                                        ItemsSource="{Binding Path=AutoHideGroups.LeftItems, RelativeSource={RelativeSource TemplatedParent}}"
                                        Orientation="Vertical" />
                                    <dxdove:AutoHideTray
                                        x:Name="PART_RightAutoHideTray"
                                        Grid.Row="1"
                                        Grid.Column="2"
                                        HorizontalAlignment="Center"
                                        dxdove:psvPanel.ZIndex="2"
                                        CheckInterval="{TemplateBinding AutoHideGroupsCheckInterval}"
                                        ItemsSource="{Binding Path=AutoHideGroups.RightItems, RelativeSource={RelativeSource TemplatedParent}}"
                                        Orientation="Vertical" />
                                    <dxdove:AutoHideTray
                                        x:Name="PART_TopAutoHideTray"
                                        Grid.Row="0"
                                        Grid.Column="1"
                                        VerticalAlignment="Center"
                                        dxdove:psvPanel.ZIndex="2"
                                        CheckInterval="{TemplateBinding AutoHideGroupsCheckInterval}"
                                        ItemsSource="{Binding Path=AutoHideGroups.TopItems, RelativeSource={RelativeSource TemplatedParent}}"
                                        Orientation="Horizontal" />
                                    <dxdove:AutoHideTray
                                        x:Name="PART_BottomAutoHideTray"
                                        Grid.Row="2"
                                        Grid.Column="1"
                                        VerticalAlignment="Center"
                                        dxdove:psvPanel.ZIndex="2"
                                        CheckInterval="{TemplateBinding AutoHideGroupsCheckInterval}"
                                        ItemsSource="{Binding Path=AutoHideGroups.BottomItems, RelativeSource={RelativeSource TemplatedParent}}"
                                        Orientation="Horizontal" />
                                    <!-- AutoHideTray elements -->
                                    <dxdove:OverlappingDockPanel
                                        x:Name="AutoHideLayer"
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        DisplayMode="{TemplateBinding AutoHideMode}">
                                        <dxdove:AutoHidePane
                                            x:Name="PART_LeftAutoHideTrayPanel"
                                            HorizontalAlignment="Left"
                                            dxdove:AutoHideTray.Orientation="Vertical"
                                            dxdove:psvPanel.ZIndex="1"
                                            AutoHideTray="{Binding ElementName=PART_LeftAutoHideTray}"
                                            DisplayMode="{TemplateBinding AutoHideMode}"
                                            DockPanel.Dock="Left" />
                                        <dxdove:AutoHidePane
                                            x:Name="PART_RightAutoHideTrayPanel"
                                            HorizontalAlignment="Right"
                                            dxdove:AutoHideTray.Orientation="Vertical"
                                            dxdove:psvPanel.ZIndex="1"
                                            AutoHideTray="{Binding ElementName=PART_RightAutoHideTray}"
                                            DisplayMode="{TemplateBinding AutoHideMode}"
                                            DockPanel.Dock="Right" />
                                        <dxdove:AutoHidePane
                                            x:Name="PART_TopAutoHideTrayPanel"
                                            VerticalAlignment="Top"
                                            dxdove:AutoHideTray.Orientation="Horizontal"
                                            dxdove:psvPanel.ZIndex="1"
                                            AutoHideTray="{Binding ElementName=PART_TopAutoHideTray}"
                                            DisplayMode="{TemplateBinding AutoHideMode}"
                                            DockPanel.Dock="Top" />
                                        <dxdove:AutoHidePane
                                            x:Name="PART_BottomAutoHideTrayPanel"
                                            VerticalAlignment="Bottom"
                                            dxdove:AutoHideTray.Orientation="Horizontal"
                                            dxdove:psvPanel.ZIndex="1"
                                            AutoHideTray="{Binding ElementName=PART_BottomAutoHideTray}"
                                            DisplayMode="{TemplateBinding AutoHideMode}"
                                            DockPanel.Dock="Bottom" />
                                        <ContentPresenter x:Name="LayoutLayer" Content="{TemplateBinding LayoutRoot}" />
                                    </dxdove:OverlappingDockPanel>
                                    <dxdove:FloatingLayoutItemsControl
                                        x:Name="FloatingLayer"
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        dxdove:psvPanel.ZIndex="2"
                                        ItemsSource="{Binding Path=FloatGroups, RelativeSource={RelativeSource TemplatedParent}}"
                                        Opacity="0" />
                                    <dxdove:ControlBox
                                        x:Name="ControlBox"
                                        MDIButtonBorderStyle="{DynamicResource {dxdot:LWKey MDIButtonElements.ButtonBorderStyle}}"
                                        MDIButtonCloseTemplate="{DynamicResource {dxdot:LWKey GlyphElements.MDIButtonClose}}"
                                        MDIButtonMinimizeTemplate="{DynamicResource {dxdot:LWKey GlyphElements.MDIButtonMinimize}}"
                                        MDIButtonRestoreTemplate="{DynamicResource {dxdot:LWKey GlyphElements.MDIButtonRestore}}" />
                                </Grid>
                                <dxdove:MinimizedFloatGroupsItemsControl VerticalAlignment="Bottom" ItemsSource="{Binding MinimizedItems, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{TemplateBinding FloatingMode, Converter={StaticResource floatingModeToVisibilityConverter}}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <dxdove:MinimizedFloatGroupsItemPanel />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </dxdove:MinimizedFloatGroupsItemsControl>
                            </Grid>
                        </dxdove:psvDockPanel>
                    </dx:DXBorder>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ViewStyle" Value="Light">
                            <Setter TargetName="PART_RightAutoHideTray" Property="Grid.Row" Value="0" />
                            <Setter TargetName="PART_RightAutoHideTray" Property="Grid.RowSpan" Value="3" />
                            <Setter TargetName="PART_LeftAutoHideTray" Property="Grid.Row" Value="0" />
                            <Setter TargetName="PART_LeftAutoHideTray" Property="Grid.RowSpan" Value="3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource {dxdot:LWKey DockPaneElements.BorderBrush}}" />
        <Style.Triggers>
            <Trigger Property="IsDarkTheme" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource {dxdot:LWKey BrushElements.PanelForeground}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="AutoHideTray.DefaultStyleBase" TargetType="{x:Type dxdove:AutoHideTray}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template" Value="{DynamicResource {dxdot:LWKey AutoHideTrayElements.Template}}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <dxdove:psvStackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxdot:LWKey DockPaneElements.BorderBrush}}" />
        <Setter Property="BorderThickness" Value="{DynamicResource {dxdot:LWKey AutoHideTrayElements.BorderThickness}}" />
    </Style>
    <Style x:Key="AutoHideTrayHeadersGroup.DefaultStyleBase" TargetType="{x:Type dxdove:AutoHideTrayHeadersGroup}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template" Value="{DynamicResource {dxdot:LWKey AutoHideTrayElements.HeadersGroup}}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <dxdove:AutoHideTrayHeadersPanel
                        Background="Transparent"
                        BottomMargin="{DynamicResource {dxdot:LWKey AutoHideTrayHeadersGroupElements.BottomMargin}}"
                        ClipToBounds="False"
                        LeftMargin="{DynamicResource {dxdot:LWKey AutoHideTrayHeadersGroupElements.LeftMargin}}"
                        RightMargin="{DynamicResource {dxdot:LWKey AutoHideTrayHeadersGroupElements.RightMargin}}"
                        TopMargin="{DynamicResource {dxdot:LWKey AutoHideTrayHeadersGroupElements.TopMargin}}" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(dxdo:DockLayoutManager.LayoutItem).HasVisibleItems, RelativeSource={RelativeSource Mode=Self}}" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="AutoHidePaneHeaderItem.DefaultStyleBase" TargetType="{x:Type dxdove:AutoHidePaneHeaderItem}">
        <Setter Property="Template" Value="{DynamicResource {dxdot:LWKey AutoHideTrayElements.Caption}}" />
        <Setter Property="BorderThickness" Value="{DynamicResource {dxdot:LWKey AutoHideTrayElements.CaptionBorderThickness}}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="IsTabStop" Value="False" />
    </Style>
    <Style x:Key="AutoHidePane.DefaultStyleBase" TargetType="{x:Type dxdove:AutoHidePane}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template" Value="{DynamicResource {dxdot:LWKey AutoHidePaneElements.Template}}" />
    </Style>
    <Style x:Key="Splitter.DefaultStyleBase" TargetType="{x:Type dxdove:Splitter}">
        <Setter Property="Template" Value="{DynamicResource {dxdot:LWKey DockElements.SplitterTemplate}}" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="ClipToBounds" Value="True" />
        <Style.Triggers>
            <Trigger Property="ViewStyle" Value="Light">
                <Setter Property="Background" Value="{DynamicResource {dxdot:LWKey DockPaneElements.BorderBrush}}" />
                <Setter Property="Margin" Value="-2" />
                <Setter Property="Padding" Value="2" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DockPane.DefaultStyleBase" TargetType="{x:Type dxdove:DockPane}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="HeaderTemplate" Value="{DynamicResource {dxdot:LWKey DockPaneElements.Header}}" />
        <Setter Property="ControlHostTemplate" Value="{DynamicResource {dxdot:LWKey DockPaneElements.ControlHostTemplate}}" />
        <Setter Property="LayoutHostTemplate" Value="{DynamicResource {dxdot:LWKey DockPaneElements.LayoutHostTemplate}}" />
        <Setter Property="DataHostTemplate" Value="{DynamicResource {dxdot:LWKey DockPaneElements.DataHostTemplate}}" />
        <Setter Property="Template" Value="{DynamicResource {dxdot:LWKey DockPaneElements.Template}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxdot:LWKey DockPaneElements.BorderBrush}}" />
        <Setter Property="FloatingActiveBorderBrush" Value="{DynamicResource {dxdot:LWKey DockPaneElements.FloatingActiveBorderBrush}}" />
        <Setter Property="Background" Value="{DynamicResource {dxdot:LWKey DockPaneElements.Background}}" />
        <Setter Property="BorderThickness" Value="{DynamicResource {dxdot:LWKey DockPaneElements.BorderThickness}}" />
        <Setter Property="BorderMargin" Value="{DynamicResource {dxdot:LWKey DockPaneElements.BorderMargin}}" />
        <Setter Property="BorderPadding" Value="{DynamicResource {dxdot:LWKey DockPaneElements.BorderPadding}}" />
        <Setter Property="CaptionCornerRadius" Value="{DynamicResource {dxdot:LWKey DockPaneElements.CaptionCornerRadius}}" />
        <Setter Property="FloatingCaptionCornerRadius" Value="{DynamicResource {dxdot:LWKey DockPaneElements.FloatingCaptionCornerRadius}}" />
        <Setter Property="CaptionActiveBackground" Value="{DynamicResource {dxdot:LWKey DockPaneElements.CaptionActiveBackground}}" />
        <Setter Property="CaptionNormalBackground" Value="{DynamicResource {dxdot:LWKey DockPaneElements.CaptionNormalBackground}}" />
        <Setter Property="CaptionActiveForeground" Value="{DynamicResource {dxdot:LWKey DockPaneElements.CaptionActiveForeground}}" />
        <Setter Property="CaptionNormalForeground" Value="{DynamicResource {dxdot:LWKey DockPaneElements.CaptionNormalForeground}}" />
        <Setter Property="BarContainerMargin" Value="{DynamicResource {dxdot:LWKey DockPaneElements.BarContainerMargin}}" />
        <Setter Property="ContentMargin" Value="{DynamicResource {dxdot:LWKey DockPaneElements.ContentMargin}}" />
    </Style>
    <Style x:Key="GroupPane.DefaultStyleBase" TargetType="{x:Type dxdove:GroupPane}">
        <Setter Property="NoBorderTemplate" Value="{DynamicResource {dxdot:LWKey GroupPaneElements.NoBorderTemplate}}" />
        <Setter Property="GroupTemplate" Value="{DynamicResource {dxdot:LWKey GroupPaneElements.GroupTemplate}}" />
        <Setter Property="GroupBoxTemplate" Value="{DynamicResource {dxdot:LWKey GroupPaneElements.GroupBoxTemplate}}" />
        <Setter Property="TabbedTemplate" Value="{DynamicResource {dxdot:LWKey GroupPaneElements.TabbedTemplate}}" />
        <Setter Property="Template" Value="{DynamicResource {dxdot:LWKey GroupPaneElements.Template}}" />
    </Style>
    <Style x:Key="ControlItem.DefaultStyleBase" TargetType="{x:Type dxdove:ControlItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="HeaderTemplate" Value="{DynamicResource {dxdot:LWKey ControlItemElements.Caption}}" />
        <Setter Property="ContentTemplate" Value="{DynamicResource {dxdot:LWKey ControlItemElements.Control}}" />
        <Setter Property="Template" Value="{DynamicResource {dxdot:LWKey ControlItemElements.Template}}" />
    </Style>
    <Style x:Key="TabbedPane.DefaultStyleBase" TargetType="{x:Type dxdove:TabbedPane}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="TabbedTemplate" Value="{DynamicResource {dxdot:LWKey TabbedPaneElements.TabbedTemplate}}" />
        <Setter Property="Template" Value="{DynamicResource {dxdot:LWKey TabbedPaneElements.Template}}" />
    </Style>
    <Style x:Key="TabbedPaneItem.DefaultStyleBase" TargetType="{x:Type dxdove:TabbedPaneItem}">
        <Setter Property="Template" Value="{DynamicResource {dxdot:LWKey TabbedPaneElements.PageHeader}}" />
        <Setter Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxdot:LWKey TabbedPaneElements.SvgPalette}}" />
        <Setter Property="BorderThickness" Value="1,1,1,0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="IsTabStop" Value="False" />
    </Style>
    <Style x:Key="TabbedLayoutGroupPane.DefaultStyleBase" TargetType="{x:Type dxdove:TabbedLayoutGroupPane}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template" Value="{DynamicResource {dxdot:LWKey TabbedLayoutGroupPaneElements.Template}}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <dxdove:TabHeadersPanel Background="Transparent" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ClipMargin" Value="{DynamicResource {dxdot:LWKey DocumentPaneElements.TabHeadersClipMargin}}" />
        <Setter Property="TabPanelMargin" Value="{DynamicResource {dxdot:LWKey DocumentPaneElements.TabPanelMargin}}" />
    </Style>
    <Style x:Key="TabbedLayoutGroupItem.DefaultStyleBase" TargetType="{x:Type dxdove:TabbedLayoutGroupItem}">
        <Setter Property="Template" Value="{DynamicResource {dxdot:LWKey TabbedLayoutGroupPaneElements.PageHeader}}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="IsTabStop" Value="False" />
    </Style>
    <Style x:Key="DocumentPane.DefaultStyleBase" TargetType="{x:Type dxdove:DocumentPane}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="TabbedTemplate" Value="{DynamicResource {dxdot:LWKey DocumentPaneElements.TabbedTemplate}}" />
        <Setter Property="MDITemplate" Value="{DynamicResource {dxdot:LWKey DocumentPaneElements.MDITemplate}}" />
        <Setter Property="Template" Value="{DynamicResource {dxdot:LWKey DocumentPaneElements.Template}}" />
    </Style>
    <Style x:Key="DocumentPaneItem.DefaultStyleBase" TargetType="{x:Type dxdove:DocumentPaneItem}">
        <Setter Property="Template" Value="{DynamicResource {dxdot:LWKey DocumentPaneElements.PageHeader}}" />
        <Setter Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxdot:LWKey TabbedPaneElements.SvgPalette}}" />
        <Setter Property="DragOffset" Value="{DynamicResource {dxdot:LWKey DocumentPaneElements.SelectedTabDragOffset}}" />
        <Setter Property="BorderThickness" Value="1,1,1,0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="IsTabStop" Value="False" />
    </Style>
    <Style x:Key="Document.DefaultStyleBase" TargetType="{x:Type dxdove:Document}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="ControlHostTemplate" Value="{DynamicResource {dxdot:LWKey DocumentElements.ControlHostTemplate}}" />
        <Setter Property="LayoutHostTemplate" Value="{DynamicResource {dxdot:LWKey DocumentElements.LayoutHostTemplate}}" />
        <Setter Property="DataHostTemplate" Value="{DynamicResource {dxdot:LWKey DocumentElements.DataHostTemplate}}" />
        <Setter Property="Template" Value="{DynamicResource {dxdot:LWKey DocumentElements.Template}}" />
    </Style>
    <Style x:Key="MDIDocument.DefaultStyleBase" TargetType="{x:Type dxdove:MDIDocument}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="ControlHostTemplate" Value="{DynamicResource {dxdot:LWKey DocumentElements.ControlHostTemplate}}" />
        <Setter Property="LayoutHostTemplate" Value="{DynamicResource {dxdot:LWKey DocumentElements.LayoutHostTemplate}}" />
        <Setter Property="DataHostTemplate" Value="{DynamicResource {dxdot:LWKey DocumentElements.DataHostTemplate}}" />
        <Setter Property="Template" Value="{DynamicResource {dxdot:LWKey DocumentPaneElements.MDIDocument}}" />
    </Style>
    <Style x:Key="FloatDocument.DefaultStyleBase" TargetType="{x:Type dxdove:FloatDocument}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="ControlHostTemplate" Value="{DynamicResource {dxdot:LWKey DocumentElements.ControlHostTemplate}}" />
        <Setter Property="LayoutHostTemplate" Value="{DynamicResource {dxdot:LWKey DocumentElements.LayoutHostTemplate}}" />
        <Setter Property="DataHostTemplate" Value="{DynamicResource {dxdot:LWKey DocumentElements.DataHostTemplate}}" />
        <Setter Property="Template" Value="{DynamicResource {dxdot:LWKey DocumentElements.FloatDocument}}" />
    </Style>
    <Style x:Key="SplitterControl.DefaultStyleBase" TargetType="{x:Type dxdove:SplitterControl}">
        <Setter Property="Template" Value="{DynamicResource {dxdot:LWKey SplitterControlElements.Template}}" />
    </Style>
    <Style x:Key="EmptySpaceControl.DefaultStyleBase" TargetType="{x:Type dxdove:EmptySpaceControl}">
        <Setter Property="Template" Value="{DynamicResource {dxdot:LWKey EmptySpaceControlElements.Template}}" />
    </Style>
    <Style x:Key="LabelControl.DefaultStyleBase" TargetType="{x:Type dxdove:LabelControl}">
        <Setter Property="HeaderTemplate" Value="{DynamicResource {dxdot:LWKey LabelControlElements.Caption}}" />
        <Setter Property="ContentTemplate" Value="{DynamicResource {dxdot:LWKey LabelControlElements.Content}}" />
        <Setter Property="Template" Value="{DynamicResource {dxdot:LWKey LabelControlElements.Template}}" />
    </Style>
    <Style x:Key="SeparatorControl.DefaultStyleBase" TargetType="{x:Type dxdove:SeparatorControl}">
        <Setter Property="Template" Value="{DynamicResource {dxdot:LWKey SeparatorControlElements.Template}}" />
    </Style>
    <Style x:Key="BaseLayoutItem.DefaultStyleBase" BasedOn="{StaticResource baseLayoutItemStyle}" TargetType="{x:Type dxdo:BaseLayoutItem}" />
    <Style x:Key="LayoutPanel.DefaultStyleBase" BasedOn="{StaticResource baseLayoutItemStyle}" TargetType="{x:Type dxdo:LayoutPanel}">
        <Setter Property="Background" Value="{DynamicResource {dxdot:LWKey DockPaneElements.Background}}" />
        <Setter Property="AllowSelection" Value="False" />
        <Setter Property="dxb:MergingProperties.ElementMergingBehavior" Value="InternalWithInternal" />
    </Style>
    <Style x:Key="DocumentPanel.DefaultStyleBase" BasedOn="{StaticResource baseLayoutItemStyle}" TargetType="{x:Type dxdo:DocumentPanel}">
        <Setter Property="Background" Value="{DynamicResource {dxdot:LWKey DocumentElements.Background}}" />
        <Setter Property="AllowSelection" Value="False" />
        <Setter Property="dxb:MergingProperties.ElementMergingBehavior" Value="InternalWithInternal" />
    </Style>
    <Style x:Key="LayoutGroup.DefaultStyleBase" BasedOn="{StaticResource baseLayoutItemStyle}" TargetType="{x:Type dxdo:LayoutGroup}">
        <Setter Property="AllowFloat" Value="False" />
    </Style>
    <Style x:Key="TabbedGroup.DefaultStyleBase" BasedOn="{StaticResource baseLayoutItemStyle}" TargetType="{x:Type dxdo:TabbedGroup}">
        <Setter Property="AllowFloat" Value="True" />
    </Style>
    <Style x:Key="DocumentGroup.DefaultStyleBase" BasedOn="{StaticResource baseLayoutItemStyle}" TargetType="{x:Type dxdo:DocumentGroup}">
        <Setter Property="AllowFloat" Value="False" />
        <Setter Property="ShowTabForSinglePage" Value="True" />
        <Setter Property="ShowWhenEmpty" Value="True" />
        <Setter Property="dx:ScrollBarExtensions.AllowMouseScrolling" Value="False" />
    </Style>
    <Style x:Key="FloatGroup.DefaultStyleBase" BasedOn="{StaticResource baseLayoutItemStyle}" TargetType="{x:Type dxdo:FloatGroup}">
        <Setter Property="AllowFloat" Value="True" />
        <Setter Property="FocusManager.IsFocusScope" Value="True" />
        <Setter Property="MinHeight" Value="{DynamicResource {dxdot:LWKey FloatPaneElements.MinHeight}}" />
        <Setter Property="MinWidth" Value="{DynamicResource {dxdot:LWKey FloatPaneElements.MinWidth}}" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight" Value="{DynamicResource {dxdot:LWKey FloatPaneElements.TouchMinHeight}}" />
                <Setter Property="MinWidth" Value="{DynamicResource {dxdot:LWKey FloatPaneElements.TouchMinWidth}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DockLayoutManagerThemeDependentValuesProvider.DefaultStyleBase" TargetType="dxdo:DockLayoutManagerThemeDependentValuesProvider">
        <Setter Property="IsDarkTheme" Value="{DynamicResource {dxdot:LWKey DockPaneElements.IsDarkTheme}}" />
    </Style>
    <Style x:Key="LayoutItemsControl.DefaultStyleBase" TargetType="{x:Type dxdove:LayoutItemsControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <ItemsPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <dxdove:GroupPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FloatingLayoutItemsControl.DefaultStyleBase" BasedOn="{StaticResource LayoutItemsControl.DefaultStyleBase}" TargetType="{x:Type dxdove:FloatingLayoutItemsControl}">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <dxdove:FloatingItemsPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PanelTabContainer.DefaultStyleBase" TargetType="{x:Type dxdove:PanelTabContainer}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template" Value="{DynamicResource {dxdot:LWKey TabbedPaneElements.TabContainerTemplate}}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <dxdove:TabHeadersPanel Background="{DynamicResource {dxdot:LWKey TabbedPaneElements.TabHeadersBackground}}" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ClipMargin" Value="{DynamicResource {dxdot:LWKey TabbedPaneElements.TabHeadersClipMargin}}" />
        <Setter Property="TabHeaderBorderThickness" Value="{DynamicResource {dxdot:LWKey TabbedPaneElements.TabHeadersBorderThickness}}" />
    </Style>
    <Style x:Key="DocumentTabContainer.DefaultStyleBase" TargetType="{x:Type dxdove:DocumentTabContainer}">
        <Setter Property="Template" Value="{DynamicResource {dxdot:LWKey DocumentPaneElements.TabContainerTemplate}}" />
        <Setter Property="ThemeDependentBackground" Value="{DynamicResource {dxdot:LWKey DocumentPaneElements.TabbedBackground}}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <dxdove:TabHeadersPanel Background="{DynamicResource {dxdot:LWKey DocumentPaneElements.TabHeadersBackground}}" TransparencySize="{DynamicResource {dxdot:LWKey DocumentPaneElements.TabHeadersTransparencySize}}" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ClipMargin" Value="{DynamicResource {dxdot:LWKey DocumentPaneElements.TabHeadersClipMargin}}" />
        <Setter Property="TabPanelMargin" Value="{DynamicResource {dxdot:LWKey DocumentPaneElements.TabPanelMargin}}" />
        <Setter Property="ContentBorderThickness" Value="{DynamicResource {dxdot:LWKey DocumentPaneElements.ContentBorderThickness}}" />
        <Setter Property="BorderMargin" Value="{DynamicResource {dxdot:LWKey DocumentPaneElements.TabbedBorderMargin}}" />
    </Style>
    <Style x:Key="DocumentMDIContainer.DefaultStyleBase" TargetType="{x:Type dxdove:DocumentMDIContainer}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template" Value="{DynamicResource {dxdot:LWKey DocumentPaneElements.MDIContainerTemplate}}" />
        <Setter Property="ThemeDependentBackground" Value="{DynamicResource {dxdot:LWKey DocumentPaneElements.MDIBackground}}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <dxdove:MDIPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CenterDockHintElement.DefaultStyleBase" TargetType="{x:Type dxdop:CenterDockHintElement}">
        <Setter Property="Template" Value="{DynamicResource {dxdot:LWKey DockVisualizer.Center}}" />
    </Style>
    <Style x:Key="SideDockHintElement.DefaultStyleBase" TargetType="{x:Type dxdop:SideDockHintElement}">
        <Setter Property="LeftTemplate" Value="{DynamicResource {dxdot:LWKey DockVisualizer.Left}}" />
        <Setter Property="RightTemplate" Value="{DynamicResource {dxdot:LWKey DockVisualizer.Right}}" />
        <Setter Property="TopTemplate" Value="{DynamicResource {dxdot:LWKey DockVisualizer.Top}}" />
        <Setter Property="BottomTemplate" Value="{DynamicResource {dxdot:LWKey DockVisualizer.Bottom}}" />
    </Style>
    <Style x:Key="RectangleDockHint.DefaultStyleBase" TargetType="{x:Type dxdop:RectangleDockHint}">
        <Setter Property="Template" Value="{DynamicResource {dxdot:LWKey DockVisualizer.DockZone}}" />
    </Style>
    <Style x:Key="SelectionHint.DefaultStyleBase" TargetType="{x:Type dxdop:SelectionHint}">
        <Setter Property="Template" Value="{DynamicResource {dxdot:LWKey DockVisualizer.Selection}}" />
        <Setter Property="Focusable" Value="True" />
    </Style>
    <Style x:Key="RenameHint.DefaultStyleBase" TargetType="{x:Type dxdop:RenameHint}">
        <Setter Property="Template" Value="{DynamicResource {dxdot:LWKey DockVisualizer.RenameHint}}" />
        <Setter Property="Margin" Value="{DynamicResource {dxdot:LWKey DockVisualizer.RenameHintMargin}}" />
    </Style>
    <Style x:Key="TabHint.DefaultStyleBase" TargetType="{x:Type dxdop:TabHint}">
        <Setter Property="Template" Value="{DynamicResource {dxdot:LWKey TabHint.Tab}}" />
    </Style>
    <Style x:Key="TabHeaderHint.DefaultStyleBase" TargetType="{x:Type dxdop:TabHeaderHint}">
        <Setter Property="Template" Value="{DynamicResource {dxdot:LWKey TabHint.TabHeader}}" />
    </Style>
    <Style x:Key="BaseGroupContentControl.DefaultStyleBase" TargetType="{x:Type dxdove:BaseGroupContentControl}">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="dxdove:BaseGroupContentControl">
                        <dxdove:LayoutItemsControl
                            DataContext="{Binding DataContext}"
                            ItemsSource="{Binding LayoutItem.ItemsInternal, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            LastChildFill="{Binding LayoutItem.LastChildFill, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            Orientation="{Binding LayoutItem.Orientation, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>
    <Style x:Key="FormBorderControl.DefaultStyleBase" TargetType="dxdove:FormBorderControl">
        <Setter Property="EmptyBorderTemplate" Value="{DynamicResource {dxdot:LWKey FloatPaneElements.EmptyBorderTemplate}}" />
        <Setter Property="SingleBorderTemplate" Value="{DynamicResource {dxdot:LWKey FloatPaneElements.SingleBorderTemplate}}" />
        <Setter Property="FormBorderTemplate" Value="{DynamicResource {dxdot:LWKey FloatPaneElements.FormBorderTemplate}}" />
    </Style>
    <Style x:Key="FormBorderContentControl.DefaultStyleBase" TargetType="dxdove:FormBorderContentControl">
        <Setter Property="Template" Value="{DynamicResource {dxdot:LWKey FloatPaneElements.FormBorderContentTemplate}}" />
        <Setter Property="Focusable" Value="False" />
    </Style>
    <Style x:Key="ResizeBoundsControl.DefaultStyleBase" TargetType="{x:Type dxdove:ResizeBoundsControl}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxdove:ResizeBoundsControl">
                    <Grid x:Name="PART_ResizeBorders" dxdove:DockPane.HitTestType="Border" FlowDirection="LeftToRight">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="10" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="10" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="10" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="10" />
                        </Grid.RowDefinitions>
                        <Path
                            x:Name="TopLeft"
                            Width="{DynamicResource {dxdot:LWKey FloatPaneElements.ResizingCornerLength}}"
                            Height="{DynamicResource {dxdot:LWKey FloatPaneElements.ResizingCornerLength}}"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            dxdove:DockPane.HitTestType="SizeNW"
                            Data="F1M414,287L410,287 410,281 410,277 414,277 420,277 420,281 414,281 414,287z"
                            Fill="Transparent"
                            Stretch="Fill">
                            <Path.Cursor>
                                <Binding Path="AllowSizing">
                                    <Binding.Converter>
                                        <dxdove:ConditionalCursorConverter Cursor="SizeNWSE" />
                                    </Binding.Converter>
                                </Binding>
                            </Path.Cursor>
                        </Path>
                        <Path
                            x:Name="TopRight"
                            Grid.Column="2"
                            Width="{DynamicResource {dxdot:LWKey FloatPaneElements.ResizingCornerLength}}"
                            Height="{DynamicResource {dxdot:LWKey FloatPaneElements.ResizingCornerLength}}"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top"
                            dxdove:DockPane.HitTestType="SizeNE"
                            Data="F1M430,294L430,290 436,290 440,290 440,294 440,300 436,300 436,294 430,294z"
                            Fill="Transparent"
                            Stretch="Fill">
                            <Path.Cursor>
                                <Binding Path="AllowSizing">
                                    <Binding.Converter>
                                        <dxdove:ConditionalCursorConverter Cursor="SizeNESW" />
                                    </Binding.Converter>
                                </Binding>
                            </Path.Cursor>
                        </Path>
                        <Path
                            x:Name="BottomRight"
                            Grid.Row="2"
                            Grid.Column="2"
                            Width="{DynamicResource {dxdot:LWKey FloatPaneElements.ResizingCornerLength}}"
                            Height="{DynamicResource {dxdot:LWKey FloatPaneElements.ResizingCornerLength}}"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Bottom"
                            dxdove:DockPane.HitTestType="SizeSE"
                            Data="F1M393,279L397,279 397,285 397,289 393,289 387,289 387,285 393,285 393,279z"
                            Fill="Transparent"
                            Stretch="Fill">
                            <Path.Cursor>
                                <Binding Path="AllowSizing">
                                    <Binding.Converter>
                                        <dxdove:ConditionalCursorConverter Cursor="SizeNWSE" />
                                    </Binding.Converter>
                                </Binding>
                            </Path.Cursor>
                        </Path>
                        <Path
                            x:Name="BottomLeft"
                            Grid.Row="2"
                            Grid.Column="0"
                            Width="{DynamicResource {dxdot:LWKey FloatPaneElements.ResizingCornerLength}}"
                            Height="{DynamicResource {dxdot:LWKey FloatPaneElements.ResizingCornerLength}}"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Bottom"
                            dxdove:DockPane.HitTestType="SizeSW"
                            Data="F1M416,312L416,316 410,316 406,316 406,312 406,306 410,306 410,312 416,312z"
                            Fill="Transparent"
                            Stretch="Fill">
                            <Path.Cursor>
                                <Binding Path="AllowSizing">
                                    <Binding.Converter>
                                        <dxdove:ConditionalCursorConverter Cursor="SizeNESW" />
                                    </Binding.Converter>
                                </Binding>
                            </Path.Cursor>
                        </Path>
                        <Rectangle
                            x:Name="Bottom"
                            Grid.Row="2"
                            Grid.Column="1"
                            Height="{DynamicResource {dxdot:LWKey FloatPaneElements.ResizingSideLength}}"
                            VerticalAlignment="Bottom"
                            dxdove:DockPane.HitTestType="SizeS"
                            Fill="Transparent"
                            Stretch="Fill">
                            <Rectangle.Cursor>
                                <Binding Path="AllowSizing">
                                    <Binding.Converter>
                                        <dxdove:ConditionalCursorConverter Cursor="SizeNS" />
                                    </Binding.Converter>
                                </Binding>
                            </Rectangle.Cursor>
                        </Rectangle>
                        <Rectangle
                            x:Name="Top"
                            Grid.Row="0"
                            Grid.Column="1"
                            Height="{DynamicResource {dxdot:LWKey FloatPaneElements.ResizingSideLength}}"
                            VerticalAlignment="Top"
                            dxdove:DockPane.HitTestType="SizeN"
                            Fill="Transparent"
                            Stretch="Fill">
                            <Rectangle.Cursor>
                                <Binding Path="AllowSizing">
                                    <Binding.Converter>
                                        <dxdove:ConditionalCursorConverter Cursor="SizeNS" />
                                    </Binding.Converter>
                                </Binding>
                            </Rectangle.Cursor>
                        </Rectangle>
                        <Rectangle
                            x:Name="Left"
                            Grid.Row="1"
                            Grid.Column="0"
                            Width="{DynamicResource {dxdot:LWKey FloatPaneElements.ResizingSideLength}}"
                            HorizontalAlignment="Left"
                            dxdove:DockPane.HitTestType="SizeW"
                            Fill="Transparent"
                            Stretch="Fill">
                            <Rectangle.Cursor>
                                <Binding Path="AllowSizing">
                                    <Binding.Converter>
                                        <dxdove:ConditionalCursorConverter Cursor="SizeWE" />
                                    </Binding.Converter>
                                </Binding>
                            </Rectangle.Cursor>
                        </Rectangle>
                        <Rectangle
                            x:Name="Right"
                            Grid.Row="1"
                            Grid.Column="2"
                            Width="{DynamicResource {dxdot:LWKey FloatPaneElements.ResizingSideLength}}"
                            HorizontalAlignment="Right"
                            dxdove:DockPane.HitTestType="SizeE"
                            Fill="Transparent"
                            Stretch="Fill">
                            <Rectangle.Cursor>
                                <Binding Path="AllowSizing">
                                    <Binding.Converter>
                                        <dxdove:ConditionalCursorConverter Cursor="SizeWE" />
                                    </Binding.Converter>
                                </Binding>
                            </Rectangle.Cursor>
                        </Rectangle>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AutoHidePanePresenter.DefaultStyleBase" TargetType="dxdove:AutoHidePanePresenter">
        <Setter Property="Win32CompatibleTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="dxdove:AutoHidePanePresenter">
                    <dx:DXBorder Background="Transparent">
                        <dxdop:AutoHideWindowHost x:Name="Host" Margin="{DynamicResource {dxdot:LWKey AutoHidePaneElements.ContentMargin}}" Background="{DynamicResource {dxdot:LWKey BrushElements.PanelBackground}}">
                            <AdornerDecorator>
                                <ContentPresenter />
                            </AdornerDecorator>
                        </dxdop:AutoHideWindowHost>
                    </dx:DXBorder>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=(dxdo:DockLayoutManager.DockLayoutManager).ViewStyle, RelativeSource={RelativeSource Self}}" Value="Light">
                            <Setter TargetName="Host" Property="Margin" Value="0" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ElementSizer.DefaultStyleBase" TargetType="dxdove:ElementSizer">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template" Value="{DynamicResource {dxdot:LWKey DockElements.ElementSizer}}" />
    </Style>
    <Style x:Key="MinimizedFloatGroupsItem.DefaultStyleBase" TargetType="{x:Type dxdove:MinimizedFloatGroupsItem}">
        <Setter Property="Template" Value="{DynamicResource {dxdot:LWKey MinimizedFloatGroupsItemElements.Template}}" />
    </Style>
    <Style x:Key="MinimizedFloatGroupsItemsControl.DefaultStyleBase" BasedOn="{StaticResource {x:Type ItemsControl}}" TargetType="{x:Type dxdove:MinimizedFloatGroupsItemsControl}">
        <Setter Property="Focusable" Value="False" />
    </Style>
    <Style x:Key="CustomizationControl.DefaultStyleBase" TargetType="{x:Type dxdove:CustomizationControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Margin="12">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <dxdove:ButtonsPanel
                            x:Name="PART_ButtonsPanel"
                            Grid.Row="0"
                            Margin="0,0,0,12"
                            HorizontalAlignment="Left" />
                        <dx:DXTabControl Grid.Row="1" DestroyContentOnTabSwitching="False">
                            <dx:DXTabControl.Items>
                                <dx:DXTabItem x:Name="PART_TabItemLayoutTree">
                                    <dxdove:LayoutTreeView x:Name="PART_LayoutTreeView" />
                                </dx:DXTabItem>
                                <dx:DXTabItem x:Name="PART_TabItemHiddenItems">
                                    <dxdove:HiddenItemsPanel x:Name="PART_HiddenItemsPanel" />
                                </dx:DXTabItem>
                            </dx:DXTabControl.Items>
                        </dx:DXTabControl>
                        <dxdove:OptionsPanel x:Name="PART_OptionsPanel" Grid.Row="2" Margin="0,12,0,0" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--SPECIFICTHEME MetropolisDark <Setter Property="Foreground" Value="{DynamicResource {dxt:LWKey ThemeColors.WhiteForegroundColor}}" /> SPECIFICTHEME-->
        <!--SPECIFICTHEME TouchlineDark <Setter Property="Foreground" Value="{DynamicResource {dxt:LWKey ThemeColors.BlackForegroundColor}}" /> SPECIFICTHEME-->
    </Style>
    <Style x:Key="ButtonsPanel.DefaultStyleBase" TargetType="{x:Type dxdove:ButtonsPanel}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Button
                            x:Name="PART_ButtonSave"
                            Grid.Column="0"
                            MinWidth="65"
                            MinHeight="22"
                            Margin="0,0,6,0" />
                        <Button
                            x:Name="PART_ButtonRestore"
                            Grid.Column="1"
                            MinWidth="65"
                            MinHeight="22" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="OptionsPanel.DefaultStyleBase" TargetType="{x:Type dxdove:OptionsPanel}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Width="Auto" Height="Auto">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <dxe:CheckEdit x:Name="PART_CheckShowAll" Grid.Column="0" IsThreeState="True" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TreeItem.DefaultStyleBase" TargetType="{x:Type dxdove:TreeItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxdove:TreeItem">
                    <dx:DXBorder x:Name="PART_Border" BorderThickness="1">
                        <StackPanel Orientation="Horizontal">
                            <Image x:Name="PART_Image" />
                            <ContentPresenter Margin="2,0,0,0" />
                        </StackPanel>
                    </dx:DXBorder>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TreeItemState" Value="Selected">
                            <Setter TargetName="PART_Border" Property="Background" Value="{DynamicResource {dxdot:LWKey BrushElements.TreeItemSelected}}" />
                        </Trigger>
                        <Trigger Property="TreeItemState" Value="Dragged">
                            <Setter TargetName="PART_Border" Property="Opacity" Value="0.35" />
                        </Trigger>
                        <Trigger Property="TreeItemState" Value="Hovered">
                            <Setter TargetName="PART_Border" Property="Background" Value="{DynamicResource {dxdot:LWKey BrushElements.TreeItemHovered}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LayoutTreeView.DefaultStyleBase" TargetType="{x:Type dxdove:LayoutTreeView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Grid.Resources>
                            <HierarchicalDataTemplate x:Key="groupTemplate" DataType="{x:Type dxdo:LayoutGroup}" ItemsSource="{Binding Path=Items}">
                                <dxdove:TreeItem LayoutItem="{Binding}" />
                            </HierarchicalDataTemplate>
                            <HierarchicalDataTemplate x:Key="itemTemplate" DataType="{x:Type dxdo:BaseLayoutItem}">
                                <dxdove:TreeItem LayoutItem="{Binding}" />
                            </HierarchicalDataTemplate>
                        </Grid.Resources>
                        <dxdove:psvTreeView
                            x:Name="PART_TreeView"
                            LayoutGroupTemplate="{StaticResource groupTemplate}"
                            LayoutItemTemplate="{StaticResource itemTemplate}"
                            VirtualizingStackPanel.IsVirtualizing="False">
                            <dxdove:psvTreeView.ItemContainerStyle>
                                <Style TargetType="{x:Type TreeViewItem}">
                                    <Setter Property="IsExpanded" Value="True" />
                                    <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=OneWay}" />
                                    <Setter Property="Visibility" Value="{Binding Path=Visibility}" />
                                </Style>
                            </dxdove:psvTreeView.ItemContainerStyle>
                        </dxdove:psvTreeView>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DragCursorControl.DefaultStyleBase" TargetType="{x:Type dxdove:DragCursorControl}">
        <Setter Property="Template" Value="{DynamicResource {dxdot:LWKey DockElements.DragCursor}}" />
    </Style>
    <Style x:Key="HiddenItem.DefaultStyleBase" TargetType="{x:Type dxdove:HiddenItem}">
        <Setter Property="Margin" Value="0,0,0,1" />
        <Setter Property="Template" Value="{DynamicResource {dxdot:LWKey OtherResources.HiddenItemTemplate}}" />
    </Style>
    <Style x:Key="HiddenItemsPanel.DefaultStyleBase" TargetType="{x:Type dxdove:HiddenItemsPanel}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <dxdove:psvListBox x:Name="PART_ListBox" Style="{DynamicResource {dxdot:LWKey DockElements.HiddenItemsPanelItem}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="{dxdot:LWKey DocumentSelectorElements.Template}">
        <dxdove:DocumentSelectorContainer />
    </DataTemplate>
    <Style x:Key="DocumentSelectorPreview.DefaultStyleBase" TargetType="{x:Type dxdove:DocumentSelectorPreview}">
        <Setter Property="PanelBorderTemplate" Value="{DynamicResource {dxdot:LWKey DockPaneElements.ContentPreview}}" />
        <Setter Property="DocumentBorderTemplate" Value="{DynamicResource {dxdot:LWKey DocumentElements.ContentPreview}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdove:DocumentSelectorPreview}">
                    <Grid x:Name="PART_View">
                        <ContentControl
                            ContentTemplate="{TemplateBinding BorderTemplate}"
                            Focusable="False"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top">
                            <Grid>
                                <dx:DXBorder
                                    x:Name="PART_Preview"
                                    Width="{TemplateBinding PreviewWidth}"
                                    Height="{TemplateBinding PreviewHeight}"
                                    Background="{TemplateBinding PreviewBrush}" />
                                <Grid
                                    x:Name="cut_vert"
                                    Width="30"
                                    HorizontalAlignment="Right"
                                    Visibility="Hidden">
                                    <Rectangle Fill="{DynamicResource {dxdot:LWKey DocumentSelectorElements.CutBrushVertical}}" />
                                </Grid>
                                <Grid
                                    x:Name="cut_horz"
                                    Height="30"
                                    VerticalAlignment="Bottom"
                                    Visibility="Hidden">
                                    <Rectangle Fill="{DynamicResource {dxdot:LWKey DocumentSelectorElements.CutBrushHorizontal}}" />
                                </Grid>
                            </Grid>
                        </ContentControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="CutHorizontal" Value="true">
                            <Setter TargetName="cut_vert" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="CutVertical" Value="true">
                            <Setter TargetName="cut_horz" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DocumentSelectorListBoxStyle" TargetType="{x:Type dxdove:DocumentSelectorListBox}">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Vertical" Height="{Binding Path=ActualHeight, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ScrollContentPresenter}}}" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DocumentSelectorListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template" Value="{DynamicResource {dxdot:LWKey DocumentSelectorElements.ListBoxItem}}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="AutomationProperties.Name" Value="{Binding ActualCaption}" />
    </Style>
    <Style x:Key="DocumentSelector.DefaultStyleBase" TargetType="{x:Type dxdove:DocumentSelector}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdove:DocumentSelector}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <TextBlock
                            x:Name="PART_PanelsListBoxCaption"
                            Grid.Row="0"
                            Grid.Column="0"
                            Margin="0,0,12,4"
                            Text="{TemplateBinding PanelsCaption}" />
                        <TextBlock
                            x:Name="PART_DocumentsListBoxCaption"
                            Grid.Row="0"
                            Grid.Column="1"
                            Margin="0,0,12,4"
                            Text="{TemplateBinding DocumentsCaption}" />
                        <dxdove:DocumentSelectorListBox
                            x:Name="PART_PanelsListBox"
                            Grid.Row="1"
                            Grid.Column="0"
                            Margin="8,0,12,0"
                            HorizontalAlignment="Left"
                            Style="{StaticResource DocumentSelectorListBoxStyle}"
                            ItemContainerStyle="{StaticResource DocumentSelectorListBoxItemStyle}"
                            ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Panels}"
                            SelectedIndex="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BindablePanelIndex, Mode=TwoWay}"
                            AutomationProperties.Name="{TemplateBinding PanelsCaption}" />
                        <dxdove:DocumentSelectorListBox
                            x:Name="PART_DocumentsListBox"
                            Grid.Row="1"
                            Grid.Column="1"
                            Margin="8,0,12,0"
                            HorizontalAlignment="Left"
                            Style="{StaticResource DocumentSelectorListBoxStyle}"
                            ItemContainerStyle="{StaticResource DocumentSelectorListBoxItemStyle}"
                            ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Documents}"
                            SelectedIndex="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BindableDocumentIndex, Mode=TwoWay}"
                            AutomationProperties.Name="{TemplateBinding DocumentsCaption}" />
                        <dxdove:DocumentSelectorPreview
                            x:Name="PART_DocumentSelectorPreview"
                            Grid.Row="0"
                            Grid.RowSpan="2"
                            Grid.Column="2"
                            HorizontalAlignment="Right" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>