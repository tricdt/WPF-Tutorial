<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
    xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/charts"
    xmlns:dxct="http://schemas.devexpress.com/winfx/2008/xaml/charts/themekeys"
    xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon"
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dxcn="clr-namespace:DevExpress.Xpf.Charts.Native;assembly=DevExpress.Xpf.Charts.v24.1">

    <ResourceDictionary.MergedDictionaries>
        <dxi:ThemeResourceDictionary Path="Charts/_{ThemeCategory}.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <dxc:BrushOverlayConverter x:Key="brushConverter" />
    <dxc:AnnotationLocationToTransformConverter x:Key="AnnotationLocationConverter" />

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Charts\Base\UIPreset.xaml-->
    <sys:Double x:Key="{dxct:LWKey ChartControl.TitleFontSize}">18</sys:Double>
    <Thickness x:Key="{dxct:LWKey ChartControl.AxisTitlePadding}">5</Thickness>
    <Thickness x:Key="{dxct:LWKey ChartControl.TitleMarginValue}">0,0,0,10</Thickness>
    <sys:Double x:Key="{dxct:LWKey ChartControl.PaneTitleFontSize}">12</sys:Double>
    <Thickness x:Key="{dxct:LWKey ChartControl.PaneTitleMarginValue}">0,10,0,10</Thickness>
    <FontWeight x:Key="{dxct:LWKey ChartControl.PaneTitleFontWeight}">Bold</FontWeight>
    <Thickness x:Key="{dxct:LWKey SankeyDiagram.PaddingValue}">16</Thickness>
    <Thickness x:Key="{dxct:LWKey SankeyDiagram.BorderThickness}">1</Thickness>
    <Thickness x:Key="{dxct:LWKey SankeyDiagram.ToolTipContentMargin}">7</Thickness>
    <Thickness x:Key="{dxct:LWKey SankeyDiagram.TitleMargin}">0,0,0,10</Thickness>
    <sys:Double x:Key="{dxct:LWKey SankeyDiagram.TitleFontSize}">18</sys:Double>
    <sys:Double x:Key="{dxct:LWKey SankeyDiagram.TextElementFontSize}">16</sys:Double>
    <FontWeight x:Key="{dxct:LWKey SankeyDiagram.NodeLabelFontWeight}">Bold</FontWeight>
    <Thickness x:Key="{dxct:LWKey Heatmap.PaddingValue}">16</Thickness>
    <Thickness x:Key="{dxct:LWKey Heatmap.BorderThickness}">1</Thickness>


    <!-- Converters -->

    <!-- ChartControl -->

    <!-- Titile -->

    <!-- Sankey diagram control -->

    <!-- Heatmap control -->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Charts\Base\UIPreset.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Charts\Base\UICore.xaml-->


    <!-- Axis -->

    <!-- ChartControl -->

    <!-- Crosshair -->

    <!-- Diagram2D -->

    <!-- Diagram3D -->

    <!-- Legend -->

    <!-- Titles -->

    <!-- Tooltip -->

    <!-- Sankey diagram control -->

    <!-- Heatmap control -->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Charts\Base\UICore.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Charts\Base\HeatmapControl.xaml-->
    <!-- General -->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Charts\Base\HeatmapControl.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Charts\Base\SankeyDiagramControl.xaml-->
    <!-- General -->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Charts\Base\SankeyDiagramControl.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Charts\Base\Annotation.xaml-->
    <!-- General -->

    <ControlTemplate x:Key="{dxct:LWKey ChartControl.AnnotationResizeThumbTemplate}" TargetType="dxc:AnnotationResizeThumb">
        <dx:DXBorder
            x:Name="Root"
            Background="{StaticResource Brush.Editor.Background}"
            BorderBrush="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ControlLight.Foreground, Win11=Brush.Foreground.Primary'}"
            BorderThickness="1"
            Height="6"
            Width="6" />
    </ControlTemplate>

    <ControlTemplate x:Key="{dxct:LWKey ChartControl.AnnotationRotateThumbTemplate}" TargetType="dxc:AnnotationRotateThumb">
        <Grid x:Name="Root">
            <Ellipse Fill="{StaticResource Brush.Editor.Background}" Opacity="0.9" />
            <Path Style="{StaticResource UIShape.Annotation.Rotate}" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxct:LWKey ChartControl.AnnotationAnchorThumbTemplate}" TargetType="dxc:AnnotationAnchorThumb">
        <Grid x:Name="Root">
            <Ellipse Fill="{StaticResource Brush.Editor.Background}" Opacity="0.9" />
            <Path Style="{StaticResource UIShape.Annotation.Anchor}" />
        </Grid>
    </ControlTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Charts\Base\Annotation.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Charts\Base\Crosshair.xaml-->


    <!-- Resources -->

    <!-- General -->

    <DataTemplate x:Key="{dxct:LWKey ChartControl.CrosshairPopupTemplate}">
        <dxc:AnnotationPanel AnnotationItem="{Binding}" Background="Transparent">
            <Grid dxc:AnnotationPanel.ElementType="Content">
                <dx:DXBorder Background="{dx:LWBrush 'Brush.Control.Background, Office2019Black=Brush.ControlLight.Background, Win11=Brush.Control.Background'}"
                             BorderBrush="{StaticResource Brush.Border}"
                             BorderThickness="1"
                             CornerRadius="{dx:LWCornerRadius '0, Win11=7'}">
                    <ItemsControl ItemsSource="{Binding PresentationData}" Margin="5,3,5,3">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Vertical" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <ContentPresenter
                                    Content="{Binding}"
                                    ContentTemplate="{Binding Path=CrosshairSeriesLabelTemplate}"
                                    Focusable="False"
                                    HorizontalAlignment="{Binding Path=ElementAlignment}"
                                    Margin="{dx:LWThickness '0, Win11=2'}"
                                    VerticalAlignment="Stretch" />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </dx:DXBorder>
            </Grid>
            <Grid
                x:Name="PART_Beak"
                dxc:AnnotationPanel.ElementType="Beak"
                RenderTransform="{Binding Path=Location, Converter={StaticResource AnnotationLocationConverter}}"
                RenderTransformOrigin="0.5,0.5"
                Visibility="{Binding Path=BeakVisibility}">
                <Path
                    Data="F1 M 8,0L 16,0L 0,32L 8,0 Z "
                    Fill="{StaticResource Brush.Border}"
                    Stretch="Fill"
                    UseLayoutRounding="False" />
                <Path
                    Data="F1 M 8,0L 16,0L 0,32L 8,0 Z "
                    Fill="{dx:LWBrush 'Brush.Control.Background, Office2019Black=Brush.ControlLight.Background, Win11=Brush.Control.Background'}"
                    Margin="2,-2,0,5"
                    Stretch="Fill"
                    UseLayoutRounding="False" />
            </Grid>
        </dxc:AnnotationPanel>
    </DataTemplate>

    <DataTemplate x:Key="{dxct:LWKey ChartControl.CrosshairAxisLabelTemplate}">
        <ContentPresenter Content="{Binding Path=Content.PresentationData, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{Binding RelativeSource={RelativeSource Self}, Path=Content.CrosshairAxisLabelTemplate}" />
    </DataTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Charts\Base\Crosshair.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Charts\Base\DropTarget.xaml-->
    <!-- General -->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Charts\Base\DropTarget.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Charts\Base\AxisScrollBar.xaml-->
    <ControlTemplate x:Key="RepeatButtonTemplate" TargetType="RepeatButton">
        <Grid Background="Transparent" />
    </ControlTemplate>
    <ControlTemplate x:Key="HorizontalThumbResizerTemplate" TargetType="dxc:AxisScrollBarThumbResizer">
        <Grid Background="Transparent">
            <dx:DXBorder Background="{dx:LWBrush 'Brush.Editor.Background, Office2019Black=Brush.ControlLight.Background, VS2019Dark=Brush.ControlLight.HoverBackground, Win10Dark=Brush.Foreground, Win11=Brush.Foreground.Alt'}"
                         CornerRadius="{dx:LWCornerRadius '0, Win11=2'}"
                         Width="1"
                         Height="{dx:LWDouble 'NaN, Win11=4'}"
                         Margin="{dx:LWThickness '4, Win11=0'}" />
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="VerticalThumbResizerTemplate" TargetType="dxc:AxisScrollBarThumbResizer">
        <Grid Background="Transparent">
            <dx:DXBorder Background="{dx:LWBrush 'Brush.Editor.Background, Office2019Black=Brush.ControlLight.Background, VS2019Dark=Brush.ControlLight.HoverBackground, Win10Dark=Brush.Foreground, Win11=Brush.Foreground.Alt'}"
                         CornerRadius="{dx:LWCornerRadius '0, Win11=2'}"
                         Height="1"
                         Width="{dx:LWDouble 'NaN, Win11=4'}"
                         Margin="{dx:LWThickness '4, Win11=0'}" />
        </Grid>
    </ControlTemplate>

    <!-- General -->

    

    

    

    <!-- Thumb -->

    <!-- Scroll -->

    <ControlTemplate x:Key="{dxct:LWKey ChartControl.AxisScrollBarTemplate}" TargetType="dxc:AxisScrollBar">
        <Grid x:Name="Root">
            <Grid x:Name="PART_HorizontalRoot">
                <dxc:ScrollBarBorder
                    x:Name="PART_HorizontalBorder"
                    Annotations="{TemplateBinding Annotations}"
                    Background="{dx:LWBrush 'Brush.Editor.Background, Office2019Black=Brush.ControlLight.Background, VS2019Blue=Brush.Button.Background, Win11=Brush.Editor.Background'}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" />
                <dx:DXBorder Background="{dx:LWBrush '#00FFFFFF, Win10Dark=#1A000000'}"
                        Opacity="{dx:LWDouble '0, Win10Dark=1'}"/>
                <Grid x:Name="PART_HorizontalContainer">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <dxc:ScrollBarRepeatButton
                        x:Name="PART_HorizontalSmallDecrease"
                        Grid.Column="0"
                        AutomationProperties.Name="HorizontalScrollbarSmallDecrement"
                        Interval="50"
                        IsTabStop="False"
                        Margin="{dx:LWThickness '(1,1,-1,1), Win11=0'}"
                        Padding="{dx:LWThickness '0, Win11=(4,0,4,0)'}"
                        Template="{StaticResource HorizontalDecrementTemplate}"
                        Width="{dx:LWDouble '22, Win11=16'}" />
                    <dxc:ScrollBarRepeatButton
                        x:Name="PART_HorizontalLargeDecrease"
                        Grid.Column="1"
                        AutomationProperties.Name="HorizontalScrollbarLargeDecrement"
                        Interval="50"
                        IsTabStop="False"
                        Padding="{dx:LWThickness '0, Win11=(4,0,4,0)'}"
                        Template="{StaticResource RepeatButtonTemplate}" />
                    <dxc:AxisScrollBarThumb
                        x:Name="PART_HorizontalThumb"
                        Grid.Column="2"
                        Height="{dx:LWDouble 'NaN, Win11=6'}"
                        Margin="0,1,0,1"
                        MinWidth="22"
                        Template="{StaticResource HorizontalThumbTemplate}" />
                    <dxc:AxisScrollBarThumbResizer
                        x:Name="PART_HorizontalThumbDecrease"
                        Grid.Column="2"
                        Cursor="SizeWE"
                        HorizontalAlignment="Left"
                        MinWidth="4"
                        Template="{StaticResource HorizontalThumbResizerTemplate}" />
                    <dxc:AxisScrollBarThumbResizer
                        x:Name="PART_HorizontalThumbIncrease"
                        Grid.Column="2"
                        Cursor="SizeWE"
                        HorizontalAlignment="Right"
                        MinWidth="4"
                        Template="{StaticResource HorizontalThumbResizerTemplate}" />
                    <dxc:ScrollBarRepeatButton
                        x:Name="PART_HorizontalLargeIncrease"
                        Grid.Column="3"
                        AutomationProperties.Name="HorizontalScrollbarLargeIncrement"
                        Interval="50"
                        IsTabStop="False"
                        Padding="{dx:LWThickness '0, Win11=(4,0,4,0)'}"
                        Template="{StaticResource RepeatButtonTemplate}" />
                    <dxc:ScrollBarRepeatButton
                        x:Name="PART_HorizontalSmallIncrease"
                        Grid.Column="4"
                        AutomationProperties.Name="HorizontalScrollbarSmallIncrement"
                        Interval="50"
                        IsTabStop="False"
                        Margin="{dx:LWThickness '(-1,1,1,1), Win11=0'}"                        
                        Padding="{dx:LWThickness '0, Win11=(4,0,4,0)'}"
                        Template="{StaticResource HorizontalIncrementTemplate}"
                        Width="{dx:LWDouble '22, Win11=16'}" />
                </Grid>
            </Grid>
            <Grid x:Name="PART_VerticalRoot" Visibility="Collapsed">
                <dxc:ScrollBarBorder
                    x:Name="PART_VerticalBorder"
                    Annotations="{TemplateBinding Annotations}"
                    Background="{dx:LWBrush 'Brush.Editor.Background, Office2019Black=Brush.ControlLight.Background, VS2019Blue=Brush.Button.Background, Win11=Brush.Editor.Background'}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" />
                <dx:DXBorder Background="{dx:LWBrush '#00FFFFFF, Win10Dark=#1A000000'}"
                        Opacity="{dx:LWDouble '0, Win10Dark=1'}"/>
                <Grid x:Name="PART_VerticalContainer">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <dxc:ScrollBarRepeatButton
                        x:Name="PART_VerticalSmallIncrease"
                        Grid.Row="0"
                        AutomationProperties.Name="VerticalScrollbarSmallIncrement"
                        Height="{dx:LWDouble '22, Win11=16'}"
                        Interval="50"
                        IsTabStop="False"                        
                        Margin="{dx:LWThickness '(1,1,1,-1), Win11=0'}"
                        Padding="{dx:LWThickness '0, Win11=(0,4,0,4)'}"
                        Template="{StaticResource VerticalIncrementTemplate}" />
                    <dxc:ScrollBarRepeatButton
                        x:Name="PART_VerticalLargeIncrease"
                        Grid.Row="1"
                        AutomationProperties.Name="VerticalScrollbarLargeIncrement"
                        Interval="50"
                        IsTabStop="False"
                        Margin="0,0,1,0"
                        Padding="{dx:LWThickness '0, Win11=(0,4,0,4)'}"
                        Template="{StaticResource RepeatButtonTemplate}"
                        Width="NaN"/>
                    <dxc:AxisScrollBarThumb
                        x:Name="PART_VerticalThumb"
                        Grid.Row="2"
                        Margin="1,0,1,0"
                        MinHeight="22"
                        Template="{StaticResource VerticalThumbTemplate}"
                        Width="{dx:LWDouble 'NaN, Win11=6'}" />
                    <dxc:AxisScrollBarThumbResizer
                        x:Name="PART_VerticalThumbIncrease"
                        Grid.Row="2"
                        Cursor="SizeNS"
                        MinHeight="4"
                        Template="{StaticResource VerticalThumbResizerTemplate}"
                        VerticalAlignment="Top" />
                    <dxc:AxisScrollBarThumbResizer
                        x:Name="PART_VerticalThumbDecrease"
                        Grid.Row="2"
                        Cursor="SizeNS"
                        MinHeight="4"
                        Template="{StaticResource VerticalThumbResizerTemplate}"
                        VerticalAlignment="Bottom" />
                    <dxc:ScrollBarRepeatButton
                        x:Name="PART_VerticalLargeDecrease"
                        Grid.Row="3"
                        AutomationProperties.Name="VerticalScrollbarLargeDecrement"
                        Interval="50"
                        IsTabStop="False"
                        Margin="0,0,1,0"
                        Padding="{dx:LWThickness '0, Win11=(0,4,0,4)'}"
                        Template="{StaticResource RepeatButtonTemplate}" />
                    <dxc:ScrollBarRepeatButton
                        x:Name="PART_VerticalSmallDecrease"
                        Grid.Row="4"
                        AutomationProperties.Name="VerticalScrollbarSmallDecrement"
                        Height="{dx:LWDouble '22, Win11=16'}"
                        Interval="50"
                        IsTabStop="False"                        
                        Margin="{dx:LWThickness '(1,-1,1,1), Win11=0'}"
                        Padding="{dx:LWThickness '0, Win11=(0,4,0,4)'}"
                        Template="{StaticResource VerticalDecrementTemplate}" />
                </Grid>
            </Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.5" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Charts\Base\AxisScrollBar.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Charts\Base\Diagram2D.xaml-->



    <!-- General -->

    <ControlTemplate x:Key="{dxct:LWKey ChartControl.XYDiagram2DWrapperTemplate}" TargetType="ContentControl">
        <dx:DXBorder
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Padding="{TemplateBinding Padding}"
            Visibility="{TemplateBinding Visibility}">
            <dxc:ChartContentPresenter Content="{TemplateBinding Content}" />
        </dx:DXBorder>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxct:LWKey ChartControl.SimpleDiagram2DWrapperTemplate}" TargetType="ContentControl">
        <dx:DXBorder
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Padding="{TemplateBinding Padding}"
            Visibility="{TemplateBinding Visibility}">
            <dxc:ChartContentPresenter Content="{TemplateBinding Content}" />
        </dx:DXBorder>
    </ControlTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Charts\Base\Diagram2D.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Charts\Base\Diagram3D.xaml-->
    <!-- General -->

    <ControlTemplate x:Key="{dxct:LWKey ChartControl.XYDiagram3DWrapperTemplate}" TargetType="ContentControl">
        <dx:DXBorder
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Padding="{TemplateBinding Padding}"
            Visibility="{TemplateBinding Visibility}">
            <ContentPresenter />
        </dx:DXBorder>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxct:LWKey ChartControl.SimpleDiagram3DWrapperTemplate}" TargetType="ContentControl">
        <dx:DXBorder
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Padding="{TemplateBinding Padding}"
            Visibility="{TemplateBinding Visibility}">
            <ContentPresenter />
        </dx:DXBorder>
    </ControlTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Charts\Base\Diagram3D.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Charts\Base\ToolTip.xaml-->


    <!-- General -->

    <ControlTemplate x:Key="{dxct:LWKey ChartControl.ToolTipPresentationTemplate}" TargetType="{x:Type dxc:ToolTipControl}">
        <dxc:ToolTipPanel
            x:Name="PART_ToolTipPanel"
            DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
            Focusable="False"
            IsHitTestVisible="False">
            <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Absolute">
                <dxc:AnnotationPanel
                    x:Name="PART_ToolTipContent"
                    AnnotationItem="{Binding}"
                    Background="Transparent"
                    Cursor="{Binding RelativeSource={RelativeSource AncestorType=dxc:ChartControl}, Path=Cursor}"
                    DataContext="{TemplateBinding ToolTipItem}"
                    Effect="{Binding Path=Shadow}"
                    MinWidth="40"
                    Opacity="0">
                    <Grid x:Name="PART_MainContent" dxc:AnnotationPanel.ElementType="Content">
                        <dx:DXBorder Background="{StaticResource Brush.Border}" Margin="-1" />
                        <dx:DXBorder Background="{dx:LWBrush 'Brush.Window.Background, VS2019Dark=Brush.HoverBackground, Win11=Brush.WindowBackground'}">
                            <ContentPresenter
                                Content="{Binding Path=ToolTipItem.PresentationData, RelativeSource={RelativeSource TemplatedParent}}"
                                ContentTemplate="{Binding Path=ToolTipItem.ContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                Focusable="False"
                                HorizontalAlignment="Center"
                                Margin="{Binding Path=ToolTipItem.ContentMargin, RelativeSource={RelativeSource TemplatedParent}}"
                                VerticalAlignment="Stretch" />
                        </dx:DXBorder>
                    </Grid>
                    <Grid
                        x:Name="PART_Beak"
                        dxc:AnnotationPanel.ElementType="Beak"
                        Height="32"
                        RenderTransform="{Binding Path=Location, Converter={StaticResource AnnotationLocationConverter}}"
                        RenderTransformOrigin="0.5,0.5"
                        Visibility="{Binding Path=ToolTipItem.BeakVisibility, RelativeSource={RelativeSource TemplatedParent}}"
                        Width="16">
                        <Path
                            Data="F1 M 8,0L 16,0L 0,32L 8,0 Z "
                            Fill="{StaticResource Brush.Border}"
                            Stretch="Fill"
                            UseLayoutRounding="False" />
                        <Path
                            Data="F1 M 8,0L 16,0L 0,32L 8,0 Z "
                            Fill="{dx:LWBrush 'Brush.Window.Background, VS2019Dark=Brush.HoverBackground, Win11=Brush.WindowBackground'}"
                            Margin="2,0,1,5"
                            Stretch="Fill"
                            UseLayoutRounding="False" />
                    </Grid>
                </dxc:AnnotationPanel>
            </Popup>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="VisibleStates">
                    <VisualState x:Name="Visible">
                        <Storyboard>
                            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="PART_Popup" Storyboard.TargetProperty="(Popup.IsOpen)">
                                <DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="True" />
                            </BooleanAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_ToolTipContent" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <EasingDoubleKeyFrame KeyTime="00:00:00.15" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Invisible">
                        <Storyboard>
                            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="PART_Popup" Storyboard.TargetProperty="(Popup.IsOpen)">
                                <DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="False" />
                            </BooleanAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_ToolTipContent" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </dxc:ToolTipPanel>
    </ControlTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Charts\Base\ToolTip.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Charts\Base\Axis.xaml-->
    <!-- General -->

    <DataTemplate x:Key="{dxct:LWKey ChartControl.AxisLabelTemplate}">
        <ContentPresenter Content="{Binding Path=Content}" />
    </DataTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Charts\Base\Axis.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Charts\Base\Legend.xaml-->
    <!-- General -->

    <ControlTemplate x:Key="{dxct:LWKey ChartControl.LegendWrapperTemplate}" TargetType="ContentControl">
        <Grid x:Name="Root">
            <dx:DXBorder x:Name="Border" Background="{TemplateBinding BorderBrush}" Padding="{TemplateBinding BorderThickness}">
                <dx:DXBorder x:Name="Background" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                    <dxc:ChartContentPresenter Content="{TemplateBinding Content}" />
                </dx:DXBorder>
            </dx:DXBorder>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Border.BorderThickness" Value="0">
                <Setter Property="Padding" TargetName="Border" Value="0" />
            </Trigger>
            <Trigger Property="Panel.Background" Value="{x:Null}">
                <Setter Property="Background" TargetName="Background" Value="{x:Null}" />
                <Setter Property="Background" TargetName="Border" Value="{x:Null}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Charts\Base\Legend.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Charts\Base\SeriesLabel.xaml-->
    <!-- General -->

    <DataTemplate x:Key="{dxct:LWKey ChartControl.SeriesLabelTemplate}">
        <dx:DXBorder Background="{Binding Path=Color, Converter={StaticResource brushConverter}}" CornerRadius="2" Padding="3">
            <TextBlock Text="{Binding Text}" TextTrimming="CharacterEllipsis" TextWrapping="Wrap" />
        </dx:DXBorder>
    </DataTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Charts\Base\SeriesLabel.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Charts\Base\ChartControl.xaml-->


    <!-- General -->

    <DataTemplate x:Key="{dxct:LWKey ChartBrushes.RangeControlClientLabelTemplate}">
        <TextBlock Foreground="{dx:LWBrush 'Brush.Foreground, Office2019Black=Brush.ControlLight.Foreground, Win11=Brush.Foreground.Primary'}" Text="{Binding Text}" />
    </DataTemplate>

    <ControlTemplate x:Key="{dxct:LWKey ChartControl.ChartWrapperTemplate}" TargetType="ContentControl">
        <dx:DXBorder x:Name="Border" Background="{TemplateBinding BorderBrush}" Padding="{TemplateBinding BorderThickness}">
            <dx:DXBorder x:Name="Background" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                <dxc:ChartContentPresenter Content="{TemplateBinding Content}" />
            </dx:DXBorder>
        </dx:DXBorder>
        <ControlTemplate.Triggers>
            <Trigger Property="Panel.Background" Value="{x:Null}">
                <Setter Property="Background" TargetName="Background" Value="{x:Null}" />
                <Setter Property="Background" TargetName="Border" Value="{x:Null}" />
                <Setter Property="Padding" TargetName="Border" Value="0" />
            </Trigger>
            <Trigger Property="BorderThickness" Value="0">
                <Setter Property="Padding" TargetName="Border" Value="0" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Geometry x:Key="{dxct:LWKey ChartControl.BreadcrumbArrowGeometry}">F1 M 0,0 4,4 0,8 0,0 Z</Geometry>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Charts\Base\ChartControl.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Charts\Base\Titles.xaml-->
    <!-- General -->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Charts\Base\Titles.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Charts\Base.xaml-->
    <!-- General -->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.Themes\Base\Charts\Base.xaml-->


    <!--#region Themes\Independent\Toolbar.xaml-->
    <Style x:Key="{dxct:LWKey ChartToolbar.RibbonControl}" TargetType="{x:Type dxr:RibbonControl}">
        <Setter Property="ShowApplicationButton" Value="False" />
        <Setter Property="ToolbarShowCustomizationButton" Value="False" />
        <Setter Property="AllowDrop" Value="False" />
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.RibbonChartToolsCategory}" TargetType="{x:Type dxr:RibbonDefaultPageCategory}">
        <Setter Property="Caption" Value="{dxc:ChartLocalizer StringId=ToolbarChartToolsCategoryCaption}" />
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.RibbonCommonPage}" TargetType="{x:Type dxr:RibbonPage}">
        <Setter Property="Caption" Value="{dxc:ChartLocalizer StringId=ToolbarCommonPageCaption}" />
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.RibbonFinancialOptionsPage}" TargetType="{x:Type dxr:RibbonPage}">
        <Setter Property="Caption" Value="{dxc:ChartLocalizer StringId=ToolbarFinancialOptionsPageCaption}" />
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.RibbonAppearanceGroup}" TargetType="{x:Type dxr:RibbonPageGroup}">
        <Setter Property="Caption" Value="{dxc:ChartLocalizer StringId=ToolbarAppearanceGroupCaption}" />
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.RibbonTemplatesGroup}" TargetType="{x:Type dxr:RibbonPageGroup}">
        <Setter Property="Caption" Value="{dxc:ChartLocalizer StringId=ToolbarTemplatesGroupCaption}" />
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.RibbonRunDesignerGroup}" TargetType="{x:Type dxr:RibbonPageGroup}">
        <Setter Property="Caption" Value="{dxc:ChartLocalizer StringId=ToolbarRunDesignerGroupCaption}" />
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.RibbonPrintAndExportGroup}" TargetType="{x:Type dxr:RibbonPageGroup}">
        <Setter Property="Caption" Value="{dxc:ChartLocalizer StringId=ToolbarPrintAndExportGroupCaption}" />
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.RibbonFinancialSeriesAndAxisGroup}" TargetType="{x:Type dxr:RibbonPageGroup}">
        <Setter Property="Caption" Value="{dxc:ChartLocalizer StringId=ToolbarFinancialSeriesAndAxisGroupCaption}" />
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.RibbonFinancialIndicatorsGroup}" TargetType="{x:Type dxr:RibbonPageGroup}">
        <Setter Property="Caption" Value="{dxc:ChartLocalizer StringId=ToolbarFinancialIndicatorsGroupCaption}" />
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.RibbonAnnotationsGroup}" TargetType="{x:Type dxr:RibbonPageGroup}">
        <Setter Property="Caption" Value="{dxc:ChartLocalizer StringId=ToolbarAnnotationsGroupCaption}" />
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.RibbonConstantLinesGroup}" TargetType="{x:Type dxr:RibbonPageGroup}">
        <Setter Property="Caption" Value="{dxc:ChartLocalizer StringId=ToolbarConstantLinesGroupCaption}" />
    </Style>

    <Style x:Key="{dxct:LWKey ChartToolbar.BarManager}" TargetType="{x:Type dxb:BarManager}">
        <Setter Property="ToolbarGlyphSize" Value="Small" />
        <Setter Property="AllowQuickCustomization" Value="False" />
        <Setter Property="AllowCustomization" Value="False" />
    </Style>
    <Style x:Key="Bar.BaseStyle" TargetType="{x:Type dxb:Bar}">
        <Setter Property="AllowCustomizationMenu" Value="False" />
        <Setter Property="ShowDragWidget" Value="False" />
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.BarAppearanceGroup}" TargetType="{x:Type dxb:Bar}" BasedOn="{StaticResource Bar.BaseStyle}" />
    <Style x:Key="{dxct:LWKey ChartToolbar.BarTemplatesGroup}" TargetType="{x:Type dxb:Bar}" BasedOn="{StaticResource Bar.BaseStyle}" />
    <Style x:Key="{dxct:LWKey ChartToolbar.BarRunDesignerGroup}" TargetType="{x:Type dxb:Bar}" BasedOn="{StaticResource Bar.BaseStyle}" />
    <Style x:Key="{dxct:LWKey ChartToolbar.BarPrintAndExportGroup}" TargetType="{x:Type dxb:Bar}" BasedOn="{StaticResource Bar.BaseStyle}" />
    <Style x:Key="{dxct:LWKey ChartToolbar.BarFinancialSeriesGroup}" TargetType="{x:Type dxb:Bar}" BasedOn="{StaticResource Bar.BaseStyle}" />
    <Style x:Key="{dxct:LWKey ChartToolbar.BarFinancialIndicatorsGroup}" TargetType="{x:Type dxb:Bar}" BasedOn="{StaticResource Bar.BaseStyle}" />
    <Style x:Key="{dxct:LWKey ChartToolbar.BarFinancialAxisGroup}" TargetType="{x:Type dxb:Bar}" BasedOn="{StaticResource Bar.BaseStyle}" />
    <!--#endregion Themes\Independent\Toolbar.xaml-->

    <!--#region Themes\Independent\ToolbarItems.xaml-->
    <Style x:Key="BarItem.BaseStyle" TargetType="dxb:BarItem">
        <Setter Property="Tag" Value="{Binding Path=(dxc:ChartControlBase.Chart), RelativeSource={RelativeSource Self}}" />
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.RunDesignerItem}" TargetType="dxb:BarItem" BasedOn="{StaticResource BarItem.BaseStyle}">
        <Setter Property="Content" Value="{dxc:ChartLocalizer StringId=ToolbarRunDesignerItemCaption}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.RunDesignerCommand'}" />
        <Setter Property="Glyph" Value="{dx:SvgImageSource Uri={dxcn:UtilsResource Images/Commands/RunDesigner.svg}}" />
        <Setter Property="Hint" Value="{dxc:ChartLocalizer StringId=ToolbarRunDesignerItemDescription}" />
        <Setter Property="RibbonStyle" Value="Large" />
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.PaletteItem}" TargetType="dxb:BarSubItem" BasedOn="{StaticResource BarItem.BaseStyle}">
        <Setter Property="Content" Value="{dxc:ChartLocalizer StringId=ToolbarPaletteItemCaption}" />
        <Setter Property="Glyph" Value="{dx:SvgImageSource Uri={dxcn:UtilsResource Images/Commands/Palette.svg}}" />
        <Setter Property="Hint" Value="{dxc:ChartLocalizer StringId=ToolbarPaletteItemDescription}" />
        <Setter Property="ItemLinksSource" Value="{DXBinding Expr='$dxc:Palette.GetPredefinedKinds()'}" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxb:BarCheckItem Content="{Binding Name}" IsChecked="{DXBinding '@c.Name eq (@e(PaletteItem).Tag.Palette ?? @e(PaletteItem).Tag.ActualPalette).PaletteName', Mode=OneWay}">
                            <dxmvvm:Interaction.Behaviors>
                                <dxmvvm:EventToCommand EventName="ItemClick" Command="{DXBinding '@e(PaletteItem).Tag.Commands.ChangePaletteCommand'}" CommandParameter="{DXBinding '@c.Type'}" />
                            </dxmvvm:Interaction.Behaviors>
                        </dxb:BarCheckItem>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="RibbonStyle" Value="Large" />
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.SaveAsTemplateItem}" TargetType="dxb:BarItem" BasedOn="{StaticResource BarItem.BaseStyle}">
        <Setter Property="Content" Value="{dxc:ChartLocalizer StringId=ToolbarSaveAsTemplateItemCaption}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.SaveToFileCommand'}" />
        <Setter Property="Glyph" Value="{dx:SvgImageSource Uri={dxcn:UtilsResource Images/Commands/SaveAsTemplate.svg}}" />
        <Setter Property="Hint" Value="{dxc:ChartLocalizer StringId=ToolbarSaveAsTemplateItemDescription}" />
        <Setter Property="RibbonStyle" Value="Large" />
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.LoadTemplateItem}" TargetType="dxb:BarItem" BasedOn="{StaticResource BarItem.BaseStyle}">
        <Setter Property="Content" Value="{dxc:ChartLocalizer StringId=ToolbarLoadTemplateItemCaption}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.LoadFromFileCommand'}" />
        <Setter Property="Glyph" Value="{dx:SvgImageSource Uri={dxcn:UtilsResource Images/Commands/LoadTemplate.svg}}" />
        <Setter Property="Hint" Value="{dxc:ChartLocalizer StringId=ToolbarLoadTemplateItemDescription}" />
        <Setter Property="RibbonStyle" Value="Large" />
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.PrintItem}" TargetType="dxb:BarItem" BasedOn="{StaticResource BarItem.BaseStyle}">
        <Setter Property="Content" Value="{dxc:ChartLocalizer StringId=ToolbarPrintItemCaption}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.PrintCommand'}" />
        <Setter Property="Glyph" Value="{dx:SvgImageSource Uri={dxcn:UtilsResource Images/Commands/Print.svg}}" />
        <Setter Property="Hint" Value="{dxc:ChartLocalizer StringId=ToolbarPrintItemDescription}" />
        <Setter Property="RibbonStyle" Value="Large" />
    </Style>
    <Style x:Key="PrintPreviewItemBase" TargetType="dxb:BarItem" BasedOn="{StaticResource BarItem.BaseStyle}">
        <Setter Property="Content" Value="{dxc:ChartLocalizer StringId=ToolbarPrintPreviewItemCaption}" />
        <Setter Property="Glyph" Value="{dx:SvgImageSource Uri={dxcn:UtilsResource Images/Commands/PrintPreview.svg}}" />
        <Setter Property="Hint" Value="{dxc:ChartLocalizer StringId=ToolbarPrintPreviewItemDescription}" />
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.PrintPreviewItem}" TargetType="dxb:BarItem" BasedOn="{StaticResource PrintPreviewItemBase}">
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.PrintPreviewCommand'}" />
        <Setter Property="RibbonStyle" Value="Large" />
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.RibbonPrintPreviewItem}" TargetType="dxb:BarItem" BasedOn="{StaticResource PrintPreviewItemBase}">
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.RibbonPrintPreviewCommand'}" />
        <Setter Property="RibbonStyle" Value="Large" />
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.ExportItem}" TargetType="dxb:BarSubItem" BasedOn="{StaticResource BarItem.BaseStyle}">
        <Setter Property="Content" Value="{dxc:ChartLocalizer StringId=ToolbarExportItemCaption}" />
        <Setter Property="Glyph" Value="{dx:SvgImageSource Uri={dxcn:UtilsResource Images/Commands/Export.svg}}" />
        <Setter Property="Hint" Value="{dxc:ChartLocalizer StringId=ToolbarExportItemDescription}" />
        <Setter Property="RibbonStyle" Value="Large" />
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.ExportToPdfItem}" TargetType="dxb:BarItem" BasedOn="{StaticResource BarItem.BaseStyle}">
        <Setter Property="Content" Value="{dxc:ChartLocalizer StringId=ToolbarExportToPdfItemCaption}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.ExportToPdfCommand'}" />
        <Setter Property="Glyph" Value="{dx:SvgImageSource Uri={dxcn:UtilsResource Images/Commands/ExportToPDF.svg}}" />
        <Setter Property="Hint" Value="{dxc:ChartLocalizer StringId=ToolbarExportToPdfItemDescription}" />
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.ExportToHtmlItem}" TargetType="dxb:BarItem" BasedOn="{StaticResource BarItem.BaseStyle}">
        <Setter Property="Content" Value="{dxc:ChartLocalizer StringId=ToolbarExportToHtmlItemCaption}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.ExportToHtmlCommand'}" />
        <Setter Property="Glyph" Value="{dx:SvgImageSource Uri={dxcn:UtilsResource Images/Commands/ExportToHTML.svg}}" />
        <Setter Property="Hint" Value="{dxc:ChartLocalizer StringId=ToolbarExportToHtmlItemDescription}" />
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.ExportToMhtItem}" TargetType="dxb:BarItem" BasedOn="{StaticResource BarItem.BaseStyle}">
        <Setter Property="Content" Value="{dxc:ChartLocalizer StringId=ToolbarExportToMhtItemCaption}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.ExportToMhtCommand'}" />
        <Setter Property="Glyph" Value="{dx:SvgImageSource Uri={dxcn:UtilsResource Images/Commands/ExportToMHT.svg}}" />
        <Setter Property="Hint" Value="{dxc:ChartLocalizer StringId=ToolbarExportToMhtItemDescription}" />
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.ExportToXlsItem}" TargetType="dxb:BarItem" BasedOn="{StaticResource BarItem.BaseStyle}">
        <Setter Property="Content" Value="{dxc:ChartLocalizer StringId=ToolbarExportToXlsItemCaption}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.ExportToXlsCommand'}" />
        <Setter Property="Glyph" Value="{dx:SvgImageSource Uri={dxcn:UtilsResource Images/Commands/ExportToXLS.svg}}" />
        <Setter Property="Hint" Value="{dxc:ChartLocalizer StringId=ToolbarExportToXlsItemDescription}" />
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.ExportToXlsxItem}" TargetType="dxb:BarItem" BasedOn="{StaticResource BarItem.BaseStyle}">
        <Setter Property="Content" Value="{dxc:ChartLocalizer StringId=ToolbarExportToXlsxItemCaption}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.ExportToXlsxCommand'}" />
        <Setter Property="Glyph" Value="{dx:SvgImageSource Uri={dxcn:UtilsResource Images/Commands/ExportToXLSX.svg}}" />
        <Setter Property="Hint" Value="{dxc:ChartLocalizer StringId=ToolbarExportToXlsxItemDescription}" />
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.ExportToRtfItem}" TargetType="dxb:BarItem" BasedOn="{StaticResource BarItem.BaseStyle}">
        <Setter Property="Content" Value="{dxc:ChartLocalizer StringId=ToolbarExportToRtfItemCaption}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.ExportToRtfCommand'}" />
        <Setter Property="Glyph" Value="{dx:SvgImageSource Uri={dxcn:UtilsResource Images/Commands/ExportToRTF.svg}}" />
        <Setter Property="Hint" Value="{dxc:ChartLocalizer StringId=ToolbarExportToRtfItemDescription}" />
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.ExportToDocxItem}" TargetType="dxb:BarItem" BasedOn="{StaticResource BarItem.BaseStyle}">
        <Setter Property="Content" Value="{dxc:ChartLocalizer StringId=ToolbarExportToDocxItemCaption}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.ExportToDocxCommand'}" />
        <Setter Property="Glyph" Value="{dx:SvgImageSource Uri={dxcn:UtilsResource Images/Commands/ExportToDOCX.svg}}" />
        <Setter Property="Hint" Value="{dxc:ChartLocalizer StringId=ToolbarExportToDocxItemDescription}" />
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.ExportToImageItem}" TargetType="dxb:BarSubItem" BasedOn="{StaticResource BarItem.BaseStyle}">
        <Setter Property="Content" Value="{dxc:ChartLocalizer StringId=ToolbarExportToImageItemCaption}" />
        <Setter Property="Glyph" Value="{dx:SvgImageSource Uri={dxcn:UtilsResource Images/Commands/ExportToImage.svg}}" />
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.ExportToBmpItem}" TargetType="dxb:BarItem" BasedOn="{StaticResource BarItem.BaseStyle}">
        <Setter Property="Content" Value="{dxc:ChartLocalizer StringId=ToolbarExportToBmpItemCaption}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.ExportToBmpCommand'}" />
        <Setter Property="Hint" Value="{dxc:ChartLocalizer StringId=ToolbarExportToBmpItemDescription}" />
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.ExportToGifItem}" TargetType="dxb:BarItem" BasedOn="{StaticResource BarItem.BaseStyle}">
        <Setter Property="Content" Value="{dxc:ChartLocalizer StringId=ToolbarExportToGifItemCaption}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.ExportToGifCommand'}" />
        <Setter Property="Hint" Value="{dxc:ChartLocalizer StringId=ToolbarExportToGifItemDescription}" />
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.ExportToJpegItem}" TargetType="dxb:BarItem" BasedOn="{StaticResource BarItem.BaseStyle}">
        <Setter Property="Content" Value="{dxc:ChartLocalizer StringId=ToolbarExportToJpegItemCaption}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.ExportToJpegCommand'}" />
        <Setter Property="Hint" Value="{dxc:ChartLocalizer StringId=ToolbarExportToJpegItemDescription}" />
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.ExportToPngItem}" TargetType="dxb:BarItem" BasedOn="{StaticResource BarItem.BaseStyle}">
        <Setter Property="Content" Value="{dxc:ChartLocalizer StringId=ToolbarExportToPngItemCaption}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.ExportToPngCommand'}" />
        <Setter Property="Hint" Value="{dxc:ChartLocalizer StringId=ToolbarExportToPngItemDescription}" />
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.ExportToTiffItem}" TargetType="dxb:BarItem" BasedOn="{StaticResource BarItem.BaseStyle}">
        <Setter Property="Content" Value="{dxc:ChartLocalizer StringId=ToolbarExportToTiffItemCaption}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.ExportToTiffCommand'}" />
        <Setter Property="Hint" Value="{dxc:ChartLocalizer StringId=ToolbarExportToTiffItemDescription}" />
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.SeriesSelectorItem}" TargetType="dxb:BarEditItem" BasedOn="{StaticResource BarItem.BaseStyle}">
        <Setter Property="Content" Value="{dxc:ChartLocalizer StringId=ToolbarSeriesSelectorItemCaption}" />
        <Setter Property="Hint" Value="{dxc:ChartLocalizer StringId=ToolbarSeriesSelectorItemDescription}" />
        <Setter Property="EditValue" Value="{DXBinding Expr='@s.Tag.Commands.ActiveSeries', BackExpr='@s.Tag.Commands.ActiveSeries=@v', Mode=TwoWay}" />
        <Setter Property="IsEnabled" Value="{DXBinding Expr='@s.Tag.Commands.ActiveSeries != null'}" />
        <Setter Property="EditWidth" Value="100" />
        <Setter Property="EditSettings">
            <Setter.Value>
                <dxe:ComboBoxEditSettings
                    ItemsSource="{DXBinding '@e(SeriesSelectorItem).Tag.Diagram.Series'}"
                    DisplayMember="DisplayName"
                    IsTextEditable="False"
                    ValidateOnTextInput="False" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.DrawTrendLineIndicatorItem}" TargetType="dxb:BarCheckItem" BasedOn="{StaticResource BarItem.BaseStyle}">
        <Setter Property="Content" Value="{dxc:ChartLocalizer StringId=ToolbarDrawTrendLineIndicatorItemCaption}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.DrawTrendLineIndicatorCommand'}" />
        <Setter Property="Glyph" Value="{dx:SvgImageSource Uri={dxcn:UtilsResource Images/Commands/TrendLine.svg}}" />
        <Setter Property="Hint" Value="{dxc:ChartLocalizer StringId=ToolbarDrawTrendLineIndicatorItemDescription}" />
        <Setter Property="RibbonStyle" Value="Large" />
        <Setter Property="IsChecked" Value="{DXBinding '@s.Tag.Commands.ActualToolbarMode eq $dxcn:ChartCommandMode.TrendLineDrawing', Mode=OneWay}" />
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.DrawFibonacciArcsIndicatorItem}" TargetType="dxb:BarCheckItem" BasedOn="{StaticResource BarItem.BaseStyle}">
        <Setter Property="Content" Value="{dxc:ChartLocalizer StringId=ToolbarDrawFibonacciArcsIndicatorItemCaption}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.DrawFibonacciArcsIndicatorCommand'}" />
        <Setter Property="Glyph" Value="{dx:SvgImageSource Uri={dxcn:UtilsResource Images/Commands/FibonacciArcs.svg}}" />
        <Setter Property="Hint" Value="{dxc:ChartLocalizer StringId=ToolbarDrawFibonacciArcsIndicatorItemDescription}" />
        <Setter Property="RibbonStyle" Value="Large" />
        <Setter Property="IsChecked" Value="{DXBinding '@s.Tag.Commands.ActualToolbarMode eq $dxcn:ChartCommandMode.FibonacciArcsDrawing', Mode=OneWay}" />
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.DrawFibonacciFansIndicatorItem}" TargetType="dxb:BarCheckItem" BasedOn="{StaticResource BarItem.BaseStyle}">
        <Setter Property="Content" Value="{dxc:ChartLocalizer StringId=ToolbarDrawFibonacciFansIndicatorItemCaption}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.DrawFibonacciFansIndicatorCommand'}" />
        <Setter Property="Glyph" Value="{dx:SvgImageSource Uri={dxcn:UtilsResource Images/Commands/FibonacciFans.svg}}" />
        <Setter Property="Hint" Value="{dxc:ChartLocalizer StringId=ToolbarDrawFibonacciFansIndicatorItemDescription}" />
        <Setter Property="RibbonStyle" Value="Large" />
        <Setter Property="IsChecked" Value="{DXBinding '@s.Tag.Commands.ActualToolbarMode eq $dxcn:ChartCommandMode.FibonacciFansDrawing', Mode=OneWay}" />
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.DrawFibonacciRetracementIndicatorItem}" TargetType="dxb:BarCheckItem" BasedOn="{StaticResource BarItem.BaseStyle}">
        <Setter Property="Content" Value="{dxc:ChartLocalizer StringId=ToolbarDrawFibonacciRetracementIndicatorItemCaption}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.DrawFibonacciRetracementIndicatorCommand'}" />
        <Setter Property="Glyph" Value="{dx:SvgImageSource Uri={dxcn:UtilsResource Images/Commands/FibonacciRetracement.svg}}" />
        <Setter Property="Hint" Value="{dxc:ChartLocalizer StringId=ToolbarDrawFibonacciRetracementIndicatorItemDescription}" />
        <Setter Property="RibbonStyle" Value="Large" />
        <Setter Property="IsChecked" Value="{DXBinding '@s.Tag.Commands.ActualToolbarMode eq $dxcn:ChartCommandMode.FibonacciRetracementDrawing', Mode=OneWay}" />
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.RemoveIndicatorItem}" TargetType="dxb:BarCheckItem" BasedOn="{StaticResource BarItem.BaseStyle}">
        <Setter Property="Content" Value="{dxc:ChartLocalizer StringId=ToolbarRemoveIndicatorItemCaption}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.RemoveIndicatorCommand'}" />
        <Setter Property="Glyph" Value="{dx:SvgImageSource Uri={dxcn:UtilsResource Images/Commands/Remove.svg}}" />
        <Setter Property="Hint" Value="{dxc:ChartLocalizer StringId=ToolbarRemoveIndicatorItemDescription}" />
        <Setter Property="RibbonStyle" Value="Large" />
        <Setter Property="IsChecked" Value="{DXBinding '@s.Tag.Commands.ActualToolbarMode eq $dxcn:ChartCommandMode.Removing', Mode=OneWay}" />
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.AddIndicatorItem}" TargetType="dxb:BarSubItem" BasedOn="{StaticResource BarItem.BaseStyle}">
        <Setter Property="Content" Value="{dxc:ChartLocalizer StringId=ToolbarAddIndicatorItemCaption}" />
        <Setter Property="Glyph" Value="{dx:SvgImageSource Uri={dxcn:UtilsResource Images/Commands/AddIndicator.svg}}" />
        <Setter Property="Hint" Value="{dxc:ChartLocalizer StringId=ToolbarAddIndicatorItemDescription}" />
        <Setter Property="ItemLinksSource" Value="{DXBinding Expr='@s.Tag.Commands.AvailableSeriesIndicators'}" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxb:BarButtonItem Content="{Binding Name}" Command="{DXBinding '@e(AddIndicatorItem).Tag.Commands.AddIndicatorCommand'}" CommandParameter="{Binding Type}" />
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="RibbonStyle" Value="Large" />
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.FinancialAxisUnitItem}" TargetType="dxb:BarEditItem" BasedOn="{StaticResource BarItem.BaseStyle}">
        <Setter Property="Content" Value="{dxc:ChartLocalizer StringId=ToolbarFinancialAxisUnitItemCaption}" />
        <Setter Property="Hint" Value="{dxc:ChartLocalizer StringId=ToolbarFinancialAxisUnitItemDescription}" />
        <Setter Property="EditWidth" Value="100" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxmvvm:EventToCommand EventName="EditValueChanged" Command="{DXBinding '@e(FinancialAxisUnitItem).Tag.Commands.SetDateTimeAxisUnitCommand'}" PassEventArgsToCommand="True">
                            <dxmvvm:EventToCommand.EventArgsConverter>
                                <dxc:ToolbarItemEditValueEventArgsConverter />
                            </dxmvvm:EventToCommand.EventArgsConverter>
                        </dxmvvm:EventToCommand>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.FinancialAxisPeriodItem}" TargetType="dxb:BarEditItem" BasedOn="{StaticResource BarItem.BaseStyle}">
        <Setter Property="Content" Value="{dxc:ChartLocalizer StringId=ToolbarFinancialAxisPeriodItemCaption}" />
        <Setter Property="Hint" Value="{dxc:ChartLocalizer StringId=ToolbarFinancialAxisPeriodItemDescription}" />
        <Setter Property="EditWidth" Value="100" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxmvvm:EventToCommand EventName="EditValueChanged" Command="{DXBinding '@e(FinancialAxisPeriodItem).Tag.Commands.SetDateTimeAxisPeriodCommand'}" PassEventArgsToCommand="True">
                            <dxmvvm:EventToCommand.EventArgsConverter>
                                <dxc:ToolbarItemEditValueEventArgsConverter />
                            </dxmvvm:EventToCommand.EventArgsConverter>
                        </dxmvvm:EventToCommand>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.AddTextAnnotationItem}" TargetType="dxb:BarCheckItem" BasedOn="{StaticResource BarItem.BaseStyle}">
        <Setter Property="Content" Value="{dxc:ChartLocalizer StringId=ToolbarAddTextAnnotationItemCaption}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.AddTextAnnotationCommand'}" />
        <Setter Property="Glyph" Value="{dx:SvgImageSource Uri={dxcn:UtilsResource Images/Commands/TextAnnotation.svg}}" />
        <Setter Property="Hint" Value="{dxc:ChartLocalizer StringId=ToolbarAddTextAnnotationItemDescription}" />
        <Setter Property="RibbonStyle" Value="Large" />
        <Setter Property="IsChecked" Value="{DXBinding '@s.Tag.Commands.ActualToolbarMode eq $dxcn:ChartCommandMode.AddTextAnnotation', Mode=OneWay}" />
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.AddImageAnnotationItem}" TargetType="dxb:BarCheckItem" BasedOn="{StaticResource BarItem.BaseStyle}">
        <Setter Property="Content" Value="{dxc:ChartLocalizer StringId=ToolbarAddImageAnnotationItemCaption}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.AddImageAnnotationCommand'}" />
        <Setter Property="Glyph" Value="{dx:SvgImageSource Uri={dxcn:UtilsResource Images/Commands/ImageAnnotation.svg}}" />
        <Setter Property="Hint" Value="{dxc:ChartLocalizer StringId=ToolbarAddImageAnnotationItemDescription}" />
        <Setter Property="RibbonStyle" Value="Large" />
        <Setter Property="IsChecked" Value="{DXBinding '@s.Tag.Commands.ActualToolbarMode eq $dxcn:ChartCommandMode.AddImageAnnotation', Mode=OneWay}" />
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.AddHorizontalConstantLineItem}" TargetType="dxb:BarCheckItem" BasedOn="{StaticResource BarItem.BaseStyle}">
        <Setter Property="Content" Value="{dxc:ChartLocalizer StringId=ToolbarHorizontalConstantLineItemCaption}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.AddHorizontalConstantLineCommand'}" />
        <Setter Property="Glyph" Value="{dx:SvgImageSource Uri={dxcn:UtilsResource Images/Commands/HorizontalConstantLine.svg}}" />
        <Setter Property="Hint" Value="{dxc:ChartLocalizer StringId=ToolbarHorizontalConstantLineItemDescription}" />
        <Setter Property="RibbonStyle" Value="Large" />
        <Setter Property="IsChecked" Value="{DXBinding '@s.Tag.Commands.ActualToolbarMode eq $dxcn:ChartCommandMode.AddHorizontalConstantLine', Mode=OneWay}" />
    </Style>
    <Style x:Key="{dxct:LWKey ChartToolbar.AddVerticalConstantLineItem}" TargetType="dxb:BarCheckItem" BasedOn="{StaticResource BarItem.BaseStyle}">
        <Setter Property="Content" Value="{dxc:ChartLocalizer StringId=ToolbarVerticalConstantLineItemCaption}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.AddVerticalConstantLineCommand'}" />
        <Setter Property="Glyph" Value="{dx:SvgImageSource Uri={dxcn:UtilsResource Images/Commands/VerticalConstantLine.svg}}" />
        <Setter Property="Hint" Value="{dxc:ChartLocalizer StringId=ToolbarVerticalConstantLineItemDescription}" />
        <Setter Property="RibbonStyle" Value="Large" />
        <Setter Property="IsChecked" Value="{DXBinding '@s.Tag.Commands.ActualToolbarMode eq $dxcn:ChartCommandMode.AddVerticalConstantLine', Mode=OneWay}" />
    </Style>
    <!--#endregion Themes\Independent\ToolbarItems.xaml-->
</ResourceDictionary>