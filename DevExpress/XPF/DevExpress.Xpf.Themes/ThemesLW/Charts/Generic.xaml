<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
    xmlns:dxc="clr-namespace:DevExpress.Xpf.Charts;assembly=DevExpress.Xpf.Charts.v24.1"
    xmlns:dxcl="clr-namespace:DevExpress.Xpf.Charts.Localization;assembly=DevExpress.Xpf.Charts.v24.1"
    xmlns:dxcn="clr-namespace:DevExpress.Xpf.Charts.Native;assembly=DevExpress.Xpf.Charts.v24.1"
    xmlns:dxcr="clr-namespace:DevExpress.Xpf.Charts.RangeControlClient;assembly=DevExpress.Xpf.Charts.v24.1"
    xmlns:dxct="clr-namespace:DevExpress.Xpf.Charts.Themes;assembly=DevExpress.Xpf.Charts.v24.1"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dxh="clr-namespace:DevExpress.Xpf.Charts.Heatmap;assembly=DevExpress.Xpf.Charts.v24.1"
    xmlns:dxht="clr-namespace:DevExpress.Xpf.Charts.Heatmap.Themes;assembly=DevExpress.Xpf.Charts.v24.1"
    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
    xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon"
    xmlns:dxsa="clr-namespace:DevExpress.Xpf.Charts.Sankey;assembly=DevExpress.Xpf.Charts.v24.1"
    xmlns:dxsat="clr-namespace:DevExpress.Xpf.Charts.Sankey.Themes;assembly=DevExpress.Xpf.Charts.v24.1"
    xmlns:media3D="clr-namespace:System.Windows.Media.Media3D;assembly=PresentationCore">


    
    <dxmvvm:BooleanToVisibilityConverter x:Key="boolToVisibilityConverter" />
    <dxmvvm:BooleanToVisibilityConverter x:Key="boolToVisibilityConverter.HiddenInsteadOfCollapsed" HiddenInsteadOfCollapsed="True" />
    <dx:BoolToVisibilityInverseConverter x:Key="boolToVisibilityInverseConverter" />
    <dxc:TransformXToDoubleConverter x:Key="transformXToDoubleConverter" />
    <dxc:TransformYToDoubleConverter x:Key="transformYToDoubleConverter" />
    <dxc:ChartDoubleCollectionConverter x:Key="strokeDashArrayConverter" />
    <dxc:BrushOverlayConverter x:Key="brushOverlayConverter" />
    <dxc:RectsListToGeometryConverter x:Key="rectsListToGeometryConverter" />
    <dxc:SelectionListRectToGeometryConverter x:Key="selectionListRectToGeometryConverter" />
    <dxc:IndicatorLabelVisibilityConverter x:Key="indicatorLabelVisibilityConverter" />
    <media3D:MaterialGroup x:Key="DefaultXYDiagramMaterial">
        <media3D:DiffuseMaterial />
    </media3D:MaterialGroup>
    <dxc:CollapsedToPaneContentVisibilityConverter x:Key="collapsedToPaneContentVisibilityConverter" />
    <dxc:IsEnabledToOpacityConverter x:Key="isEnabledToOpacityConverter" />
    <dxc:HeightToVisibilityConverter x:Key="heightToVisibilityConverter" />
    <dxc:PointCollectionToGeometryConverter x:Key="pointsToGeometryConverter" />
    <dxc:BrushOverlayMultiConverter x:Key="specialBrushOverlayConverter" />

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\HeatmapControl.xaml-->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\HeatmapControl.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\SankeyItemsControl.xaml-->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\SankeyItemsControl.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\SankeyDiagramControl.xaml-->

    <DataTemplate x:Key="defaultTooltipContentTemplate">
        <TextBlock HorizontalAlignment="Center" Foreground="{DynamicResource {dxct:LWKey SankeyBrushes.ToolTipForeground}}" Text="{Binding ToolTipText}" />
    </DataTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\SankeyDiagramControl.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\SankeyElementPresentation.xaml-->

    <Style x:Key="textElementStyle" TargetType="{x:Type dxsa:SankeyTextElement}">
        <Setter Property="Foreground" Value="{DynamicResource {dxct:LWKey SankeyBrushes.TextElementForeground}}" />
        <Setter Property="FontSize" Value="{DynamicResource {dxct:LWKey SankeyDiagram.TextElementFontSize}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxsa:SankeyTextElement}">
                    <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\SankeyElementPresentation.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\Chart3DControl.xaml-->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\Chart3DControl.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\Annotation.xaml-->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\Annotation.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\LegendMarker.xaml-->
    <DataTemplate x:Key="BarSeriesLegendMarkerTemplate">
        <dxc:BarMarkerRenderControl x:Name="PART_MarkerPath" />
    </DataTemplate>
    <DataTemplate x:Key="WaterfallSeriesLegendMarkerTemplate">
        <dxc:WaterfallMarkerRenderControl x:Name="PART_MarkerPath" />
    </DataTemplate>
    <DataTemplate x:Key="MarkerSeriesLegendMarkerTemplate">
        <dxc:PointMarkerRenderControl x:Name="PART_MarkerPath" />
    </DataTemplate>
    <DataTemplate x:Key="LineSeriesLegendMarkerTemplate">
        <dxc:LineMarkerRenderControl x:Name="PART_MarkerPath" />
    </DataTemplate>
    <DataTemplate x:Key="SplineSeriesLegendMarkerTemplate">
        <Path
            x:Name="PART_MarkerPath"
            Fill="{Binding Path=MarkerBrush}"
            SnapsToDevicePixels="True"
            Stretch="Fill"
            Stroke="{Binding Path=MarkerLineBrush}"
            StrokeDashArray="{Binding Path=MarkerLineStyle.DashStyle.Dashes}"
            StrokeDashCap="{Binding Path=MarkerLineStyle.DashCap}"
            StrokeDashOffset="{Binding Path=MarkerLineStyle.DashStyle.Offset}"
            StrokeEndLineCap="Square"
            StrokeLineJoin="{Binding Path=MarkerLineStyle.LineJoin}"
            StrokeMiterLimit="{Binding Path=MarkerLineStyle.MiterLimit}"
            StrokeStartLineCap="Square"
            StrokeThickness="{Binding Path=ActualLineThickness}">
            <Path.Data>
                <PathGeometry>
                    <PathGeometry.Figures>
                        <PathFigureCollection>
                            <PathFigure StartPoint="1,10">
                                <PathFigure.Segments>
                                    <PathSegmentCollection>
                                        <PolyBezierSegment Points="4,10 5,4 8,4" />
                                    </PathSegmentCollection>
                                </PathFigure.Segments>
                            </PathFigure>
                        </PathFigureCollection>
                    </PathGeometry.Figures>
                </PathGeometry>
            </Path.Data>
        </Path>
    </DataTemplate>
    <DataTemplate x:Key="AreaSeriesLegendMarkerTemplate">
        <dxc:AreaMarkerRenderControl x:Name="PART_MarkerPath" />
    </DataTemplate>
    <DataTemplate x:Key="AreaSplineSeriesLegendMarkerTemplate">
        <Path
            x:Name="PART_MarkerPath"
            Margin="{Binding Path=ActualMarkerMargin}"
            Fill="{Binding Path=ActualMarkerBrush}"
            OpacityMask="{Binding Path=OpacityMask}"
            SnapsToDevicePixels="True"
            Stretch="Uniform"
            Stroke="{Binding Path=ActualMarkerLineBrush}"
            StrokeDashArray="{Binding Path=MarkerLineStyle.DashStyle.Dashes}"
            StrokeDashCap="{Binding Path=MarkerLineStyle.DashCap}"
            StrokeDashOffset="{Binding Path=MarkerLineStyle.DashStyle.Offset}"
            StrokeEndLineCap="Square"
            StrokeLineJoin="{Binding Path=MarkerLineStyle.LineJoin}"
            StrokeMiterLimit="{Binding Path=MarkerLineStyle.MiterLimit}"
            StrokeStartLineCap="Square"
            StrokeThickness="{Binding Path=MarkerLineStyle.Thickness}">
            <Path.Data>
                <PathGeometry>
                    <PathGeometry.Figures>
                        <PathFigure StartPoint="0,12">
                            <PathFigure.Segments>
                                <PolyBezierSegment>
                                    <PolyBezierSegment.Points>
                                        <Point X="3" Y="12" />
                                        <Point X="3" Y="4" />
                                        <Point X="6" Y="4" />
                                        <Point X="9" Y="4" />
                                        <Point X="9" Y="12" />
                                        <Point X="12" Y="12" />
                                    </PolyBezierSegment.Points>
                                </PolyBezierSegment>
                            </PathFigure.Segments>
                        </PathFigure>
                    </PathGeometry.Figures>
                </PathGeometry>
            </Path.Data>
        </Path>
    </DataTemplate>
    <DataTemplate x:Key="RangeAreaSeriesLegendMarkerTemplate">
        <Path
            x:Name="PART_MarkerPath"
            Margin="{Binding Path=ActualMarkerMargin}"
            Fill="{Binding Path=MarkerBrush}"
            SnapsToDevicePixels="True"
            Stretch="Uniform"
            Stroke="{Binding Path=MarkerLineBrush}"
            StrokeDashArray="{Binding Path=MarkerLineStyle.DashStyle.Dashes}"
            StrokeDashCap="{Binding Path=MarkerLineStyle.DashCap}"
            StrokeDashOffset="{Binding Path=MarkerLineStyle.DashStyle.Offset}"
            StrokeEndLineCap="Square"
            StrokeLineJoin="{Binding Path=MarkerLineStyle.LineJoin}"
            StrokeMiterLimit="{Binding Path=MarkerLineStyle.MiterLimit}"
            StrokeStartLineCap="Square"
            StrokeThickness="{Binding Path=MarkerLineStyle.Thickness}">
            <Path.Data>
                <PathGeometry>
                    <PathGeometry.Figures>
                        <PathFigure StartPoint="0,12">
                            <PathFigure.Segments>
                                <PolyLineSegment>
                                    <PolyLineSegment.Points>
                                        <Point X="0" Y="12" />
                                        <Point X="6" Y="4" />
                                        <Point X="12" Y="12" />
                                        <Point X="10" Y="12" />
                                        <Point X="6" Y="8" />
                                        <Point X="2" Y="12" />
                                    </PolyLineSegment.Points>
                                </PolyLineSegment>
                            </PathFigure.Segments>
                        </PathFigure>
                    </PathGeometry.Figures>
                </PathGeometry>
            </Path.Data>
        </Path>
    </DataTemplate>
    <DataTemplate x:Key="PieSeriesLegendMarkerTemplate">
        <Path
            x:Name="PART_MarkerPath"
            Fill="{Binding Path=ActualMarkerBrush}"
            OpacityMask="{Binding Path=OpacityMask}"
            SnapsToDevicePixels="True"
            Stretch="Uniform"
            Stroke="{Binding Path=ActualMarkerLineBrush}"
            StrokeDashArray="{Binding Path=MarkerLineStyle.DashStyle.Dashes}"
            StrokeDashCap="{Binding Path=MarkerLineStyle.DashCap}"
            StrokeDashOffset="{Binding Path=MarkerLineStyle.DashStyle.Offset}"
            StrokeEndLineCap="Square"
            StrokeLineJoin="{Binding Path=MarkerLineStyle.LineJoin}"
            StrokeMiterLimit="{Binding Path=MarkerLineStyle.MiterLimit}"
            StrokeStartLineCap="Square"
            StrokeThickness="{Binding Path=MarkerLineStyle.Thickness}">
            <Path.Data>
                <PathGeometry>
                    <PathGeometry.Figures>
                        <PathFigure StartPoint="0,0">
                            <PathFigure.Segments>
                                <LineSegment Point="0,10" />
                                <LineSegment Point="10,10" />
                                <ArcSegment
                                    IsLargeArc="False"
                                    Point="0,0"
                                    RotationAngle="45"
                                    Size="10,10"
                                    SweepDirection="Counterclockwise" />
                            </PathFigure.Segments>
                        </PathFigure>
                    </PathGeometry.Figures>
                </PathGeometry>
            </Path.Data>
        </Path>
    </DataTemplate>
    <DataTemplate x:Key="NestedDonutLegendMarkerTemplate">
        <Path
            x:Name="PART_MarkerPath"
            Fill="{Binding Path=ActualMarkerBrush}"
            OpacityMask="{Binding Path=OpacityMask}"
            SnapsToDevicePixels="True"
            Stretch="Uniform"
            Stroke="{Binding Path=ActualMarkerLineBrush}"
            StrokeDashArray="{Binding Path=MarkerLineStyle.DashStyle.Dashes}"
            StrokeDashCap="{Binding Path=MarkerLineStyle.DashCap}"
            StrokeDashOffset="{Binding Path=MarkerLineStyle.DashStyle.Offset}"
            StrokeEndLineCap="Square"
            StrokeLineJoin="{Binding Path=MarkerLineStyle.LineJoin}"
            StrokeMiterLimit="{Binding Path=MarkerLineStyle.MiterLimit}"
            StrokeStartLineCap="Square"
            StrokeThickness="{Binding Path=MarkerLineStyle.Thickness}">
            <Path.Data>
                <PathGeometry>
                    <PathGeometry.Figures>
                        <PathFigure StartPoint="0,0">
                            <PathFigure.Segments>
                                <LineSegment Point="0,10" />
                                <LineSegment Point="10,10" />
                                <ArcSegment
                                    IsLargeArc="False"
                                    Point="0,0"
                                    RotationAngle="45"
                                    Size="10,10"
                                    SweepDirection="Counterclockwise" />
                            </PathFigure.Segments>
                        </PathFigure>
                    </PathGeometry.Figures>
                </PathGeometry>
            </Path.Data>
        </Path>
    </DataTemplate>
    <DataTemplate x:Key="FunnelSeriesLegendMarkerTemplate">
        <Path
            x:Name="PART_MarkerPath"
            Fill="{Binding Path=ActualMarkerBrush}"
            OpacityMask="{Binding Path=OpacityMask}"
            SnapsToDevicePixels="True"
            Stretch="Uniform"
            Stroke="{Binding Path=ActualMarkerLineBrush}"
            StrokeDashArray="{Binding Path=MarkerLineStyle.DashStyle.Dashes}"
            StrokeDashCap="{Binding Path=MarkerLineStyle.DashCap}"
            StrokeDashOffset="{Binding Path=MarkerLineStyle.DashStyle.Offset}"
            StrokeEndLineCap="Square"
            StrokeLineJoin="{Binding Path=MarkerLineStyle.LineJoin}"
            StrokeMiterLimit="{Binding Path=MarkerLineStyle.MiterLimit}"
            StrokeStartLineCap="Square"
            StrokeThickness="{Binding Path=MarkerLineStyle.Thickness}">
            <Path.Data>
                <PathGeometry>
                    <PathGeometry.Figures>
                        <PathFigure StartPoint="0,0">
                            <PolyLineSegment>
                                <PolyLineSegment.Points>
                                    <Point X="0" Y="0" />
                                    <Point X="12" Y="0" />
                                    <Point X="8" Y="6" />
                                    <Point X="8" Y="12" />
                                    <Point X="4" Y="12" />
                                    <Point X="4" Y="6" />
                                    <Point X="0" Y="0" />
                                </PolyLineSegment.Points>
                            </PolyLineSegment>
                        </PathFigure>
                    </PathGeometry.Figures>
                </PathGeometry>
            </Path.Data>
        </Path>
    </DataTemplate>
    <DataTemplate x:Key="CandleStickSeriesLegendMarkerTemplate">
        <Path
            x:Name="PART_MarkerPath"
            Fill="{Binding Path=ActualMarkerBrush}"
            SnapsToDevicePixels="True"
            Stretch="Uniform"
            Stroke="{Binding Path=ActualMarkerLineBrush}"
            StrokeDashArray="{Binding Path=MarkerLineStyle.DashStyle.Dashes}"
            StrokeDashCap="{Binding Path=MarkerLineStyle.DashCap}"
            StrokeDashOffset="{Binding Path=MarkerLineStyle.DashStyle.Offset}"
            StrokeEndLineCap="Square"
            StrokeLineJoin="{Binding Path=MarkerLineStyle.LineJoin}"
            StrokeMiterLimit="{Binding Path=MarkerLineStyle.MiterLimit}"
            StrokeStartLineCap="Square"
            StrokeThickness="{Binding Path=MarkerLineStyle.Thickness}">
            <Path.Data>
                <GeometryGroup>
                    <GeometryGroup>
                        <RectangleGeometry Rect="2,0,1,2" />
                        <RectangleGeometry Rect="2,8,1,2" />
                        <RectangleGeometry Rect="0,2,5,1" />
                        <RectangleGeometry Rect="0,7,5,1" />
                        <RectangleGeometry Rect="0,3,1,4" />
                        <RectangleGeometry Rect="4,3,1,4" />
                    </GeometryGroup>
                    <GeometryGroup>
                        <RectangleGeometry Rect="9,2,1,2" />
                        <RectangleGeometry Rect="9,10,1,2" />
                        <RectangleGeometry Rect="7,4,5,6" />
                    </GeometryGroup>
                </GeometryGroup>
            </Path.Data>
        </Path>
    </DataTemplate>
    <DataTemplate x:Key="ConstantLineLegendMarkerTemplate">
        <Path
            x:Name="PART_MarkerPath"
            Fill="{Binding Path=MarkerBrush}"
            SnapsToDevicePixels="True"
            Stretch="Fill"
            Stroke="{Binding Path=MarkerLineBrush}"
            StrokeDashArray="{Binding Path=MarkerLineStyle.DashStyle.Dashes}"
            StrokeDashCap="{Binding Path=MarkerLineStyle.DashCap}"
            StrokeDashOffset="{Binding Path=MarkerLineStyle.DashStyle.Offset}"
            StrokeEndLineCap="Square"
            StrokeLineJoin="{Binding Path=MarkerLineStyle.LineJoin}"
            StrokeMiterLimit="{Binding Path=MarkerLineStyle.MiterLimit}"
            StrokeStartLineCap="Square"
            StrokeThickness="{Binding Path=MarkerLineStyle.Thickness}">
            <Path.Data>
                <LineGeometry StartPoint="0,0" EndPoint="10,0" />
            </Path.Data>
        </Path>
    </DataTemplate>
    <DataTemplate x:Key="StripLegendMarkerTemplate">
        <Path
            x:Name="PART_MarkerPath"
            Fill="{Binding Path=MarkerBrush}"
            SnapsToDevicePixels="True"
            Stretch="Uniform"
            Stroke="{Binding Path=MarkerLineBrush}"
            StrokeDashArray="{Binding Path=MarkerLineStyle.DashStyle.Dashes}"
            StrokeDashCap="{Binding Path=MarkerLineStyle.DashCap}"
            StrokeDashOffset="{Binding Path=MarkerLineStyle.DashStyle.Offset}"
            StrokeEndLineCap="Square"
            StrokeLineJoin="{Binding Path=MarkerLineStyle.LineJoin}"
            StrokeMiterLimit="{Binding Path=MarkerLineStyle.MiterLimit}"
            StrokeStartLineCap="Square"
            StrokeThickness="{Binding Path=MarkerLineStyle.Thickness}">
            <Path.Data>
                <RectangleGeometry Rect="0,0,10,10" />
            </Path.Data>
        </Path>
    </DataTemplate>
    <DataTemplate x:Key="IndicatorLegendMarkerDefaultTemplate">
        <Path
            x:Name="PART_MarkerPath"
            Fill="{Binding Path=MarkerBrush}"
            SnapsToDevicePixels="True"
            Stretch="Fill"
            Stroke="{Binding Path=MarkerLineBrush}"
            StrokeDashArray="{Binding Path=MarkerLineStyle.DashStyle.Dashes}"
            StrokeDashCap="{Binding Path=MarkerLineStyle.DashCap}"
            StrokeDashOffset="{Binding Path=MarkerLineStyle.DashStyle.Offset}"
            StrokeEndLineCap="Square"
            StrokeLineJoin="{Binding Path=MarkerLineStyle.LineJoin}"
            StrokeMiterLimit="{Binding Path=MarkerLineStyle.MiterLimit}"
            StrokeStartLineCap="Square"
            StrokeThickness="{Binding Path=MarkerLineStyle.Thickness}">
            <Path.Data>
                <LineGeometry StartPoint="0,0" EndPoint="10,0" />
            </Path.Data>
        </Path>
    </DataTemplate>
    <DataTemplate x:Key="BoxPlotLegendMarkerTemplate">
        <dxc:BarMarkerRenderControl x:Name="PART_MarkerPath" />
    </DataTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\LegendMarker.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\Axis.xaml-->
    <sys:Double x:Key="{dxct:LWKey ChartControl.AxisLabelFontSize}">12</sys:Double>
    <sys:Double x:Key="{dxct:LWKey ChartControl.AxisTitleFontSize}">16</sys:Double>
    <Thickness x:Key="{dxct:LWKey ChartControl.AxisLabelPadding}">5,1</Thickness>
    <SolidColorBrush x:Key="{dxct:LWKey ChartBrushes.ConstantLineTitleForeground}" Color="#FFC10000" />
    <SolidColorBrush x:Key="{dxct:LWKey ChartBrushes.StripBrush}" Opacity="0.10" Color="#FFC10000" />
    <SolidColorBrush x:Key="{dxct:LWKey ChartBrushes.ConstantLineBrush}" Color="#FFC10000" />
    <Color x:Key="{dxct:LWKey ChartBrushes.StripBorderColor}">#26C10000</Color>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\Axis.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\ToolTip.xaml-->
    <DataTemplate x:Key="CrosshairAxisLabelPresentationTemplate">
        <dx:DXBorder Padding="5,1,5,1" Background="{Binding Background}">
            <TextBlock
                FontFamily="{Binding FontFamily}"
                FontSize="{Binding FontSize}"
                FontStretch="{Binding FontStretch}"
                FontStyle="{Binding FontStyle}"
                FontWeight="{Binding FontWeight}"
                Foreground="{Binding Foreground}"
                Text="{Binding Text}" />
        </dx:DXBorder>
    </DataTemplate>






    <DataTemplate x:Key="{dxct:LWKey ChartControl.ToolTipTemplate}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TextBlock
                Grid.Column="1"
                VerticalAlignment="Center"
                Foreground="{DynamicResource {dxct:LWKey ChartBrushes.ToolTipForeground}}"
                Text="{Binding ToolTipText}" />
            <dxc:ChartContentPresenter Grid.Column="0" Content="{Binding Hint}" Focusable="False" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="{dxct:LWKey ChartControl.CrosshairSeriesLabelContentTemplate}">
        <StackPanel Orientation="Vertical">
            <TextBlock
                Margin="0,2"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                FontFamily="{Binding FontFamily}"
                FontSize="{Binding FontSize}"
                FontStretch="{Binding FontStretch}"
                FontStyle="{Binding FontStyle}"
                FontWeight="{Binding FontWeight}"
                Foreground="{Binding Foreground}"
                Text="{Binding HeaderText}"
                Visibility="{Binding HeaderTextVisibility}" />
            <StackPanel Margin="0,2" Orientation="Horizontal">
                <Grid
                    Width="{DynamicResource {dxct:LWKey ChartControl.LegendMarkerWidth}}"
                    Height="{DynamicResource {dxct:LWKey ChartControl.LegendMarkerHeight}}"
                    Margin="0,3,0,0"
                    VerticalAlignment="Top"
                    Visibility="{Binding MarkerVisibility}">
                    <Rectangle Fill="Transparent" Stretch="Uniform" />
                    <ContentPresenter Content="{Binding MarkerItem}" ContentTemplate="{Binding RelativeSource={RelativeSource Self}, Path=Content.MarkerTemplate}" />
                </Grid>
                <TextBlock
                    Grid.Column="1"
                    Margin="{DynamicResource {dxct:LWKey ChartControl.LegendItemTextMargin}}"
                    VerticalAlignment="Center"
                    FontFamily="{Binding FontFamily}"
                    FontSize="{Binding FontSize}"
                    FontStretch="{Binding FontStretch}"
                    FontStyle="{Binding FontStyle}"
                    FontWeight="{Binding FontWeight}"
                    Foreground="{Binding Foreground}"
                    Text="{Binding Text}"
                    Visibility="{Binding TextVisibility}" />
            </StackPanel>
            <TextBlock
                Margin="0,2"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                FontFamily="{Binding FontFamily}"
                FontSize="{Binding FontSize}"
                FontStretch="{Binding FontStretch}"
                FontStyle="{Binding FontStyle}"
                FontWeight="{Binding FontWeight}"
                Foreground="{Binding Foreground}"
                Text="{Binding FooterText}"
                Visibility="{Binding FooterTextVisibility}" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="{dxct:LWKey ChartControl.CrosshairSeriesLabelTemplate}">
        <Popup
            x:Name="PART_Popup"
            AllowsTransparency="True"
            HorizontalOffset="{Binding Bounds.X}"
            IsOpen="True"
            Placement="Absolute"
            VerticalOffset="{Binding Bounds.Y}">
            <ContentPresenter Content="{Binding}" ContentTemplate="{Binding Path=LabelTemplate}" Focusable="False" />
        </Popup>
    </DataTemplate>

    <DataTemplate x:Key="{dxct:LWKey ChartControl.CrosshairSeriesLabelPrintingTemplate}">
        <Canvas x:Name="PART_Popup" UseLayoutRounding="True">
            <ContentPresenter
                Canvas.Left="{Binding Bounds.X}"
                Canvas.Top="{Binding Bounds.Y}"
                Content="{Binding}"
                ContentTemplate="{Binding Path=LabelTemplate}"
                Focusable="False" />
        </Canvas>
    </DataTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\ToolTip.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\Axis2D.xaml-->
    <Style x:Key="Axis2DStyle" TargetType="{x:Type dxc:Axis2D}">
        <Setter Property="Brush" Value="{DynamicResource {dxct:LWKey ChartBrushes.AxisBrush}}" />
        <Setter Property="InterlacedBrush" Value="{DynamicResource {dxct:LWKey ChartBrushes.Axis2DInterlacedBrush}}" />
        <Setter Property="GridLinesBrush" Value="{DynamicResource {dxct:LWKey ChartBrushes.GridLineBrush}}" />
        <Setter Property="GridLinesMinorBrush" Value="{DynamicResource {dxct:LWKey ChartBrushes.MinorGridLineBrush}}" />
        <Setter Property="MinorCount" Value="4" />
        <Setter Property="CrosshairLabelTemplate" Value="{StaticResource CrosshairAxisLabelPresentationTemplate}" />
        <Setter Property="ScaleBreakBrush" Value="{DynamicResource {dxct:LWKey ChartBrushes.DomainBorderBrush}}" />
    </Style>

    <Style x:Key="CircularAxisY2DStyle" TargetType="dxc:CircularAxisY2D">
        <Setter Property="Brush" Value="{DynamicResource {dxct:LWKey ChartBrushes.AxisBrush}}" />
        <Setter Property="InterlacedBrush" Value="{DynamicResource {dxct:LWKey ChartBrushes.Axis2DInterlacedBrush}}" />
        <Setter Property="GridLinesBrush" Value="{DynamicResource {dxct:LWKey ChartBrushes.GridLineBrush}}" />
        <Setter Property="GridLinesMinorBrush" Value="{DynamicResource {dxct:LWKey ChartBrushes.MinorGridLineBrush}}" />
        <Setter Property="GridLinesVisible" Value="True" />
        <Setter Property="MinorCount" Value="4" />
    </Style>

    <Style x:Key="CircularAxisX2DStyle" TargetType="dxc:CircularAxisX2D">
        <Setter Property="InterlacedBrush" Value="{DynamicResource {dxct:LWKey ChartBrushes.Axis2DInterlacedBrush}}" />
        <Setter Property="GridLinesBrush" Value="{DynamicResource {dxct:LWKey ChartBrushes.GridLineBrush}}" />
        <Setter Property="GridLinesMinorBrush" Value="{DynamicResource {dxct:LWKey ChartBrushes.MinorGridLineBrush}}" />
        <Setter Property="GridLinesVisible" Value="True" />
        <Setter Property="MinorCount" Value="4" />
    </Style>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\Axis2D.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\Axis3D.xaml-->







    <Style x:Key="Axis3DStyle" TargetType="{x:Type dxc:Axis3D}">
        <Setter Property="MinorCount" Value="4" />
        <Setter Property="InterlacedBrush" Value="{DynamicResource {dxct:LWKey ChartBrushes.Axis3DInterlacedBrush}}" />
        <Setter Property="GridLinesBrush" Value="{DynamicResource {dxct:LWKey ChartBrushes.GridLineBrush}}" />
        <Setter Property="GridLinesMinorBrush" Value="{DynamicResource {dxct:LWKey ChartBrushes.MinorGridLineBrush}}" />
    </Style>

    <DataTemplate x:Key="{dxct:LWKey ChartControl.Crosshair3DAxisLabelTemplate}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Polygon
                Grid.Column="0"
                Fill="{Binding Path=PresentationData.Background}"
                Points="12,0 0,5, 12,10"
                Stretch="Fill"
                Visibility="{Binding IsInvert, Converter={StaticResource boolToVisibilityConverter}}" />
            <ContentPresenter Grid.Column="1" Content="{Binding Path=Content.PresentationData, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{Binding RelativeSource={RelativeSource Self}, Path=Content.CrosshairAxisLabelTemplate}" />
            <Polygon
                Grid.Column="2"
                Fill="{Binding Path=PresentationData.Background}"
                Points="0,0 12,5, 0,10"
                Stretch="Fill"
                Visibility="{Binding IsInvert, Converter={StaticResource boolToVisibilityInverseConverter}}" />
        </Grid>
    </DataTemplate>


    <Style x:Key="Axis3DBaseStyle" BasedOn="{StaticResource Axis3DStyle}" TargetType="{x:Type dxc:Axis3DBase}">
        <Setter Property="CrosshairLabelTemplate" Value="{StaticResource CrosshairAxisLabelPresentationTemplate}" />
    </Style>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\Axis3D.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\AxisScrollBar.xaml-->
    <Style x:Key="axisScrollBarThumbBaseStyle" TargetType="dxc:AxisScrollBarThumb">
        <Setter Property="Background" Value="#FF1F3B53" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Offset="0" Color="#FFA3AEB9" />
                    <GradientStop Offset="0.375" Color="#FF8399A9" />
                    <GradientStop Offset="0.375" Color="#FF718597" />
                    <GradientStop Offset="1" Color="#FF617584" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxc:AxisScrollBarThumb">
                    <Grid>
                        <dx:DXBorder
                            x:Name="Background"
                            Background="White"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2">
                            <Grid Margin="1" Background="{TemplateBinding Background}">
                                <dx:DXBorder x:Name="BackgroundAnimation" Background="#FF448DCA" Opacity="0" />
                                <Rectangle x:Name="BackgroundGradient">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint=".7,0" EndPoint=".7,1">
                                            <GradientStop Offset="0" Color="#FFFFFFFF" />
                                            <GradientStop Offset="0.375" Color="#F9FFFFFF" />
                                            <GradientStop Offset="0.625" Color="#E5FFFFFF" />
                                            <GradientStop Offset="1" Color="#C6FFFFFF" />
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Grid>
                        </dx:DXBorder>
                        <Rectangle
                            x:Name="DisabledVisualElement"
                            Fill="#FFFFFFFF"
                            IsHitTestVisible="false"
                            Opacity="0"
                            RadiusX="2"
                            RadiusY="2" />
                        <Rectangle
                            x:Name="FocusVisualElement"
                            Margin="1"
                            IsHitTestVisible="false"
                            Opacity="0"
                            RadiusX="1"
                            RadiusY="1"
                            Stroke="#FF6DBDD1"
                            StrokeThickness="1" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#FF6DBDD1" />
                                        </ColorAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#D8FFFFFF" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#C6FFFFFF" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#8CFFFFFF" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#3FFFFFFF" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value=".55" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\AxisScrollBar.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\Bar2DModels.xaml-->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\Bar2DModels.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\CandleStick2DModels.xaml-->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\CandleStick2DModels.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\ChartControl.xaml-->
    <Thickness x:Key="{dxct:LWKey ChartControl.ChartPaddingValue}">16</Thickness>
    <Thickness x:Key="{dxct:LWKey ChartControl.ChartBorderThickness}">1</Thickness>

    <DataTemplate x:Key="BreadcrumbItemDefaultTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Path
                x:Name="PART_HomeImage"
                Width="16"
                Height="16"
                VerticalAlignment="Center"
                Data="M8,1 L1,8 L3,8 L3,14 L7,14 L7,10 L9,10 L9,14 L13,14 L13,8 L15,8 L8,1z"
                Fill="Transparent"
                StrokeThickness="1.5"
                Visibility="{Binding IsHome, Converter={dxmvvm:BooleanToVisibilityConverter}}">
                <Path.Style>
                    <Style TargetType="{x:Type Path}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Stroke" Value="{DynamicResource {dxct:LWKey ChartBrushes.BreadcrumbHoverForeground}}" />
                            </Trigger>
                            <DataTrigger Binding="{Binding IsNotLast}" Value="false">
                                <Setter Property="Stroke" Value="{DynamicResource {dxct:LWKey ChartBrushes.BreadcrumbForeground}}" />
                            </DataTrigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter Property="Stroke" Value="{DynamicResource {dxct:LWKey ChartBrushes.BreadcrumbForeground}}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Path.Style>
            </Path>
            <TextBlock
                x:Name="PART_Text"
                Grid.Column="1"
                VerticalAlignment="Center"
                Text="{Binding Text}"
                Visibility="{Binding IsHome, Converter={dxmvvm:BooleanToVisibilityConverter Inverse=True}}">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource {dxct:LWKey ChartBrushes.BreadcrumbHoverForeground}}" />
                            </Trigger>
                            <DataTrigger Binding="{Binding IsNotLast}" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {dxct:LWKey ChartBrushes.BreadcrumbForeground}}" />
                            </DataTrigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource {dxct:LWKey ChartBrushes.BreadcrumbForeground}}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <Path
                x:Name="PART_Arrow"
                Grid.Column="2"
                Margin="10,0,10,0"
                VerticalAlignment="Center"
                Data="{DynamicResource {dxct:LWKey ChartControl.BreadcrumbArrowGeometry}}"
                Fill="{DynamicResource {dxct:LWKey ChartBrushes.BreadcrumbForeground}}"
                Visibility="{Binding IsNotLast, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
        </Grid>
    </DataTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\ChartControl.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\CircularDiagram2D.xaml-->
    <Style x:Key="CircularDiagramStyle" TargetType="dxc:CircularDiagram2D">
        <Setter Property="DomainBrush" Value="{DynamicResource {dxct:LWKey ChartBrushes.Domain2DBrush}}" />
        <Setter Property="DomainBorderBrush" Value="{DynamicResource {dxct:LWKey ChartBrushes.DomainBorderBrush}}" />
        <Setter Property="Annotations" Value="{Binding Path=(dxc:ChartControlBase.Chart).DiagramAnnotations, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxc:CircularDiagram2D">
                    <dx:DXBorder Padding="{TemplateBinding Padding}">
                        <Grid>
                            <dxc:SeriesTemplateHolderControl x:Name="PART_SeriesTemplateHolder" Content="{TemplateBinding SeriesTemplate}" />
                            <dxc:ChartItemsControl x:Name="PART_LogicalTreeHolder" ItemsSource="{TemplateBinding Elements}" />
                            <dxc:ChartItemsControl x:Name="PART_SeriesHolder" ItemsSource="{TemplateBinding Series}" />
                            <dxc:CircularDiagram2DItemsControl
                                x:Name="PART_VisualContent"
                                AxisItems="{TemplateBinding AxisItems}"
                                Diagram="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                SeriesLabelItems="{TemplateBinding SeriesLabelItems}">
                                <dxc:CircularDiagram2DItemsControl.DiagramContent>
                                    <dxc:CircularDomainPanel
                                        x:Name="PART_Domain"
                                        dxc:XYDiagram2D.ElementType="DiagramContent"
                                        Clip="{TemplateBinding DomainClipGeometry}"
                                        Diagram="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                        <Path
                                            x:Name="PART_DomainBackground"
                                            Data="{TemplateBinding DomainBorderGeometry}"
                                            Fill="{TemplateBinding DomainBrush}"
                                            StrokeThickness="0" />
                                        <dxc:InterlaceRenderControl x:Name="PART_Interlace" AxesSource="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
                                        <dxc:MajorGridLinesRenderControl x:Name="PART_MajorGridLines" AxesSource="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
                                        <dxc:MinorGridLinesRenderControl x:Name="PART_MinorGridLines" AxesSource="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
                                        <dxc:DiagramSeriesItemsControl x:Name="PART_Series" ItemsSource="{TemplateBinding SeriesItems}" Owner="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                            <dxc:DiagramSeriesItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <dxc:CircularDiagram2DSeriesPanel />
                                                </ItemsPanelTemplate>
                                            </dxc:DiagramSeriesItemsControl.ItemsPanel>
                                        </dxc:DiagramSeriesItemsControl>
                                        <Path
                                            x:Name="PART_DomainBorder"
                                            Data="{TemplateBinding DomainBorderGeometry}"
                                            Stroke="{TemplateBinding DomainBorderBrush}"
                                            StrokeThickness="1" />
                                    </dxc:CircularDomainPanel>
                                </dxc:CircularDiagram2DItemsControl.DiagramContent>
                                <dxc:CircularDiagram2DItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <dxc:CircularDiagram2DPanel />
                                    </ItemsPanelTemplate>
                                </dxc:CircularDiagram2DItemsControl.ItemsPanel>
                            </dxc:CircularDiagram2DItemsControl>
                            <dxc:ChartItemsControl ItemsSource="{TemplateBinding Annotations}">
                                <dxc:ChartItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <dxc:AnnotationLayoutPanel />
                                    </ItemsPanelTemplate>
                                </dxc:ChartItemsControl.ItemsPanel>
                            </dxc:ChartItemsControl>
                            <dxc:SelectionControl IsHighlighted="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectionInfo.IsHighlighted}" IsSelected="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectionInfo.IsSelected}" />
                        </Grid>
                    </dx:DXBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\CircularDiagram2D.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\XYZSeriesView.xaml-->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\XYZSeriesView.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\SimpleDiagram2D.xaml-->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\SimpleDiagram2D.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\Indicators.xaml-->







    <Style x:Key="IndicatorDefaultStyle" TargetType="dxc:Indicator">
        <Setter Property="LegendMarkerTemplate" Value="{StaticResource IndicatorLegendMarkerDefaultTemplate}" />
    </Style>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\Indicators.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\ChartRangeControlClient.xaml-->
    <Style x:Key="ChartRangeControlClientBaseStyle" TargetType="dxcr:ChartRangeControlClientBase">
        <Setter Property="ArgumentLabelTemplate" Value="{DynamicResource {dxct:LWKey ChartBrushes.RangeControlClientLabelTemplate}}" />
        <Setter Property="GridLinesBrush" Value="{DynamicResource {dxct:LWKey ChartBrushes.RangeControlClientGridLineBrush}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxcr:ChartRangeControlClientBase">
                    <dxcr:RangeClientItemsControl x:Name="PART_ItemsContainer" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                        <dxcr:RangeClientItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <dxcr:RangeClientItemsPanel />
                            </ItemsPanelTemplate>
                        </dxcr:RangeClientItemsControl.ItemsPanel>
                        <dxcr:RangeClientItemsControl.ItemTemplateSelector>
                            <dxcr:RangeClientItemTemplateSelector>
                                <dxcr:RangeClientItemTemplateSelector.LabelTemplate>
                                    <DataTemplate>
                                        <ContentPresenter Content="{Binding}" ContentTemplate="{Binding Template}" />
                                    </DataTemplate>
                                </dxcr:RangeClientItemTemplateSelector.LabelTemplate>
                                <dxcr:RangeClientItemTemplateSelector.GridLinesTemplate>
                                    <DataTemplate>
                                        <Path Data="{Binding Geometry}" Stroke="{Binding Brush}" StrokeThickness="1" />
                                    </DataTemplate>
                                </dxcr:RangeClientItemTemplateSelector.GridLinesTemplate>
                            </dxcr:RangeClientItemTemplateSelector>
                        </dxcr:RangeClientItemsControl.ItemTemplateSelector>
                    </dxcr:RangeClientItemsControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RangeControlClientStyle" BasedOn="{StaticResource ChartRangeControlClientBaseStyle}" TargetType="{x:Type dxcr:ChartRangeControlClient}" />

    <Style x:Key="RangeControlClientViewKey" TargetType="{x:Type dxcr:RangeControlClientView}">
        <Setter Property="Brush" Value="{DynamicResource {dxct:LWKey ChartBrushes.RangeControlClientViewBrush}}" />
    </Style>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\ChartRangeControlClient.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\Diagram3D.xaml-->







    <Style x:Key="Diagram3DStyle" TargetType="dxc:Diagram3D">
        <Setter Property="dxc:XYDiagram3D.Material" Value="{StaticResource DefaultXYDiagramMaterial}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\Diagram3D.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\Marker2DModels.xaml-->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\Marker2DModels.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\Pie2DModels.xaml-->
    <Style x:Key="pie2DModelControlSyleBase" TargetType="{x:Type dxc:PredefinedModelControl}">
        <Setter Property="Flipped" Value="False" />
    </Style>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\Pie2DModels.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\RangeBar2DModels.xaml-->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\RangeBar2DModels.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\Series.xaml-->

    <Style x:Key="series2DStyleBase" TargetType="{x:Type dxc:Series}">
        <Setter Property="ToolTipSeriesPattern" Value="{}{S}" />
        <Setter Property="ToolTipSeriesTemplate" Value="{DynamicResource {dxct:LWKey ChartControl.ToolTipTemplate}}" />
        <Setter Property="ToolTipPointTemplate" Value="{DynamicResource {dxct:LWKey ChartControl.ToolTipTemplate}}" />
    </Style>

    <Style x:Key="xySeries2DStyleBase" BasedOn="{StaticResource series2DStyleBase}" TargetType="{x:Type dxc:XYSeries2D}">
        <Setter Property="CrosshairLabelTemplate" Value="{DynamicResource {dxct:LWKey ChartControl.CrosshairSeriesLabelContentTemplate}}" />
    </Style>

    <Style x:Key="BarSeries2DStyle" BasedOn="{StaticResource xySeries2DStyleBase}" TargetType="dxc:BarSeries2D">
        <Setter Property="Model">
            <Setter.Value>
                <dxc:SimpleBar2DModel />
            </Setter.Value>
        </Setter>
        <Setter Property="LegendMarkerTemplate" Value="{StaticResource BarSeriesLegendMarkerTemplate}" />
    </Style>
    <Style x:Key="RangeBar2DStyle" BasedOn="{StaticResource xySeries2DStyleBase}" TargetType="dxc:RangeBarSeries2D">
        <Setter Property="Model">
            <Setter.Value>
                <dxc:SimpleRangeBar2DModel />
            </Setter.Value>
        </Setter>
        <Setter Property="LegendMarkerTemplate" Value="{StaticResource BarSeriesLegendMarkerTemplate}" />
        <Setter Property="MinMarkerModel">
            <Setter.Value>
                <dxc:SimpleMarker2DModel />
            </Setter.Value>
        </Setter>
        <Setter Property="MaxMarkerModel">
            <Setter.Value>
                <dxc:SimpleMarker2DModel />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LineSeries2DBaseStyle" BasedOn="{StaticResource xySeries2DStyleBase}" TargetType="dxc:LineSeries2D">
        <Setter Property="MarkerModel">
            <Setter.Value>
                <dxc:SimpleMarker2DModel />
            </Setter.Value>
        </Setter>
        <Setter Property="LegendMarkerTemplate" Value="{StaticResource LineSeriesLegendMarkerTemplate}" />
    </Style>

    <Style x:Key="circularSeries2DStyleBase" BasedOn="{StaticResource series2DStyleBase}" TargetType="{x:Type dxc:CircularSeries2D}">
        <Setter Property="MarkerModel">
            <Setter.Value>
                <dxc:SimpleMarker2DModel />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BarSeries3DStyle" BasedOn="{StaticResource series2DStyleBase}" TargetType="{x:Type dxc:BarSeries3D}">
        <Setter Property="LegendMarkerTemplate" Value="{StaticResource BarSeriesLegendMarkerTemplate}" />
    </Style>

    <Style x:Key="AreaSeries3DStyle" BasedOn="{StaticResource series2DStyleBase}" TargetType="{x:Type dxc:AreaSeries3D}">
        <Setter Property="LegendMarkerTemplate" Value="{StaticResource AreaSeriesLegendMarkerTemplate}" />
    </Style>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\Series.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\Diagram2D.xaml-->
    <DataTemplate x:Key="emptyTemplate" />
    <DataTemplate x:Key="directXSurfaceTemplate">
        <dxc:SeriesSurfaceControl />
    </DataTemplate>
    <Style x:Key="Diagram2DStyle" TargetType="dxc:Diagram2D">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>







    <dxc:DirectXSurfaceDataTemplateSelector x:Key="directXSurfaceTemplateSelector" DirectXSurfaceTemplate="{StaticResource directXSurfaceTemplate}" EmptyTemplate="{StaticResource emptyTemplate}" />
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\Diagram2D.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\Legend.xaml-->
    <Thickness x:Key="{dxct:LWKey ChartControl.IndentFromDiagramValue}">16</Thickness>
    <Thickness x:Key="{dxct:LWKey ChartControl.LegendPaddingValue}">8</Thickness>
    <Thickness x:Key="{dxct:LWKey ChartControl.LegendBorderThickness}">1</Thickness>
    <Thickness x:Key="{dxct:LWKey ChartControl.LegendItemMargin}">6,2</Thickness>
    <Thickness x:Key="{dxct:LWKey ChartControl.LegendItemTextMargin}">4,0,0,0</Thickness>
    <Thickness x:Key="{dxct:LWKey ChartControl.LegendItemCrosshairTextMargin}">4,0,0,0</Thickness>
    <sys:Double x:Key="{dxct:LWKey ChartControl.LegendMarkerWidth}">12</sys:Double>
    <sys:Double x:Key="{dxct:LWKey ChartControl.LegendMarkerHeight}">12</sys:Double>

    <ControlTemplate x:Key="{dxct:LWKey ChartControl.LegendCheckBoxTemplate}" TargetType="{x:Type CheckBox}">
        <Grid
            x:Name="CheckBox"
            Width="14"
            Height="14"
            Background="Transparent">
            <dx:DXBorder BorderBrush="{Binding CheckBoxBrush}" BorderThickness="1" />
            <Path
                x:Name="CheckBoxMarker"
                Margin="2"
                Data="F1 M 135,156L 135,159L 139,163L 145,156L 145,153L 139,160L 135,156 Z"
                Fill="{Binding CheckBoxBrush}"
                FlowDirection="LeftToRight"
                Stretch="Fill"
                UseLayoutRounding="False"
                Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked, Converter={StaticResource boolToVisibilityConverter}}" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CheckBox" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.35" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver" />
                    <VisualState x:Name="Pressed" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>
    <Style x:Key="LegendBaseStyle" TargetType="{x:Type dxc:LegendBase}">
        <Setter Property="Background" Value="{DynamicResource {dxct:LWKey ChartBrushes.LegendBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource {dxct:LWKey ChartBrushes.LegendForeground}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxct:LWKey ChartBrushes.LegendBorderBrush}}" />
        <Setter Property="BorderThickness" Value="{DynamicResource {dxct:LWKey ChartControl.LegendBorderThickness}}" />
        <Setter Property="Padding" Value="{DynamicResource {dxct:LWKey ChartControl.LegendPaddingValue}}" />
        <Setter Property="IndentFromDiagram" Value="{DynamicResource {dxct:LWKey ChartControl.IndentFromDiagramValue}}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="{Binding Path=Orientation}" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\Legend.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\SeriesLabel.xaml-->
    <SolidColorBrush x:Key="{dxct:LWKey ChartBrushes.SeriesLabelForeground}" Color="#FFFFFFFF" />
    <Style x:Key="baseSeriesLabelStyle" TargetType="{x:Type dxc:SeriesLabelPresentationBase}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:SeriesLabelPresentationBase}">
                    <Grid
                        MinWidth="{Binding Path=Label.MinWidth, RelativeSource={RelativeSource TemplatedParent}}"
                        MinHeight="{Binding Path=Label.MinHeight, RelativeSource={RelativeSource TemplatedParent}}"
                        MaxWidth="{Binding Path=Label.MaxWidth, RelativeSource={RelativeSource TemplatedParent}}"
                        MaxHeight="{Binding Path=Label.MaxHeight, RelativeSource={RelativeSource TemplatedParent}}"
                        LayoutTransform="{Binding Path=Label.LayoutTransform, RelativeSource={RelativeSource TemplatedParent}}">
                        <dx:DXBorder
                            Padding="{Binding Path=Label.Padding, RelativeSource={RelativeSource TemplatedParent}}"
                            Background="{Binding Path=Label.Background, RelativeSource={RelativeSource TemplatedParent}}"
                            BorderBrush="{Binding Path=Label.BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                            BorderThickness="{Binding Path=Label.BorderThickness, RelativeSource={RelativeSource TemplatedParent}}"
                            Opacity="{Binding Path=LabelItem.Opacity, RelativeSource={RelativeSource TemplatedParent}}">
                            <dxc:ChartContentPresenter
                                Content="{Binding Path=LabelItem, RelativeSource={RelativeSource TemplatedParent}}"
                                ContentTemplate="{Binding Path=Label.ElementTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                TextElement.FontFamily="{Binding Path=Label.FontFamily, RelativeSource={RelativeSource TemplatedParent}}"
                                TextElement.FontSize="{Binding Path=Label.FontSize, RelativeSource={RelativeSource TemplatedParent}}"
                                TextElement.FontStretch="{Binding Path=Label.FontStretch, RelativeSource={RelativeSource TemplatedParent}}"
                                TextElement.FontStyle="{Binding Path=Label.FontStyle, RelativeSource={RelativeSource TemplatedParent}}"
                                TextElement.FontWeight="{Binding Path=Label.FontWeight, RelativeSource={RelativeSource TemplatedParent}}"
                                TextElement.Foreground="{Binding Path=Label.Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
                        </dx:DXBorder>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>







    <Style x:Key="seriesLabelConnectorPathStyle" TargetType="{x:Type Path}">
        <Setter Property="Data" Value="{Binding Path=ConnectorItem.Points, Converter={StaticResource pointsToGeometryConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Opacity" Value="{Binding Path=LabelItem.Opacity, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="StrokeThickness" Value="{Binding Path=Label.ConnectorThickness, RelativeSource={RelativeSource TemplatedParent}}" />
    </Style>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\SeriesLabel.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\Stock2DModels.xaml-->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\Stock2DModels.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\Titles.xaml-->
    <Style x:Key="baseTitleStyle" TargetType="{x:Type dxc:TitleBase}" />
    <Style x:Key="axisElementTitlePresentationStyle" TargetType="{x:Type dxc:AxisElementTitlePresentation}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:AxisElementTitlePresentation}">
                    <dxc:AxisElementTitlePanel x:Name="PART_TitlePanel" Title="{Binding Path=Title, RelativeSource={RelativeSource TemplatedParent}}">
                        <dx:DXBorder
                            Padding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Title.Padding}"
                            Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Title.Background}"
                            BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Title.BorderBrush}"
                            BorderThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Title.BorderThickness}">
                            <dxc:ChartContentPresenter
                                x:Name="PART_TitlePresenter"
                                Content="{Binding Path=Title.Content, RelativeSource={RelativeSource TemplatedParent}}"
                                ContentTemplate="{Binding Path=Title.ContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                TextElement.FontFamily="{Binding Path=Title.FontFamily, RelativeSource={RelativeSource TemplatedParent}}"
                                TextElement.FontSize="{Binding Path=Title.FontSize, RelativeSource={RelativeSource TemplatedParent}}"
                                TextElement.FontStretch="{Binding Path=Title.FontStretch, RelativeSource={RelativeSource TemplatedParent}}"
                                TextElement.FontStyle="{Binding Path=Title.FontStyle, RelativeSource={RelativeSource TemplatedParent}}"
                                TextElement.FontWeight="{Binding Path=Title.FontWeight, RelativeSource={RelativeSource TemplatedParent}}"
                                TextElement.Foreground="{Binding Path=Title.Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
                        </dx:DXBorder>
                    </dxc:AxisElementTitlePanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\Titles.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\TitlesLayoutControl.xaml-->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic\TitlesLayoutControl.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic.xaml-->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Charts\DevExpress.Xpf.Charts\Themes\Generic.xaml-->
    
    <ControlTemplate x:Key="{dxct:LWKey Heatmap.WrapperTemplate}" TargetType="ContentControl">
        <dx:DXBorder x:Name="OutsideBorder" 
                CornerRadius="4"
                Background="{TemplateBinding BorderBrush}" 
                Padding="{TemplateBinding BorderThickness}">
            <dx:DXBorder x:Name="InsideBorder" 
                    CornerRadius="3"
                    Background="{TemplateBinding Background}"
                    Padding="{TemplateBinding Padding}">
                <ContentPresenter Content="{TemplateBinding Content}" />
            </dx:DXBorder>
        </dx:DXBorder>
        <ControlTemplate.Triggers>
            <Trigger Property="Background" Value="{x:Null}">
                <Setter Property="Background" TargetName="OutsideBorder" Value="{x:Null}" />
                <Setter Property="Background" TargetName="InsideBorder" Value="{x:Null}" />
                <Setter Property="CornerRadius" TargetName="OutsideBorder" Value="0,0,0,0" />
                <Setter Property="Padding" TargetName="OutsideBorder" Value="0,0,0,0" />
                <Setter Property="CornerRadius" TargetName="InsideBorder" Value="0,0,0,0" />
            </Trigger>
            <Trigger Property="BorderThickness" Value="0,0,0,0">
                <Setter Property="CornerRadius" TargetName="OutsideBorder" Value="0,0,0,0" />
                <Setter Property="Padding" TargetName="OutsideBorder" Value="0,0,0,0" />
                <Setter Property="CornerRadius" TargetName="InsideBorder" Value="0,0,0,0" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--#region DEFAULT STYLES-->

    <Style x:Key="HeatmapControl.DefaultStyleBase" TargetType="{x:Type dxh:HeatmapControl}">
        <Setter Property="ClipToBounds" Value="True" />
        <Setter Property="Background" Value="{DynamicResource {dxct:LWKey HeatmapBrushes.BackgroundBrush}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxct:LWKey HeatmapBrushes.BorderBrush}}" />
        <Setter Property="BorderThickness" Value="{DynamicResource {dxct:LWKey Heatmap.BorderThickness}}" />
        <Setter Property="Padding" Value="{DynamicResource {dxct:LWKey Heatmap.PaddingValue}}" />
        <Setter Property="FocusManager.IsFocusScope" Value="True" />
        <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Cycle" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once" />
        <Setter Property="AutomationProperties.Name" Value="HeatmapControl" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxh:HeatmapControl}">
                    <Grid>
                        <ContentControl
                            x:Name="Wrapper"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Template="{DynamicResource {dxct:LWKey Heatmap.WrapperTemplate}}">
                            <DockPanel LastChildFill="True">
                                <dxc:TitlesLayoutControl Titles="{TemplateBinding Titles}">
                                    <dxc:TitlesLayoutControl.MasterElement>
                                        <dxh:HeatmapElementItemsControl x:Name="HeatmapElements">
                                            <dxh:HeatmapElementItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <dxh:HeatmapElementPanel />
                                                </ItemsPanelTemplate>
                                            </dxh:HeatmapElementItemsControl.ItemsPanel>
                                        </dxh:HeatmapElementItemsControl>
                                    </dxc:TitlesLayoutControl.MasterElement>
                                </dxc:TitlesLayoutControl>
                            </DockPanel>
                        </ContentControl>
                        <dxc:NavigationLayer x:Name="PART_NavigationLayer" SupportNavigationControl="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
                        <dxh:HeatmapToolTipPanel
                            x:Name="PART_ToolTipPanel"
                            Background="Transparent"
                            Focusable="False"
                            IsHitTestVisible="False"
                            Visibility="{Binding Path=ToolTipEnabled, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}">
                            <Popup
                                x:Name="PART_Popup"
                                AllowsTransparency="True"
                                HorizontalOffset="{Binding Path=ToolTipItem.Position.X, RelativeSource={RelativeSource TemplatedParent}}"
                                IsOpen="{Binding Path=ToolTipItem.Visible, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                Placement="Absolute"
                                PopupAnimation="Fade"
                                VerticalOffset="{Binding Path=ToolTipItem.Position.Y, RelativeSource={RelativeSource TemplatedParent}}">
                                <Grid MinWidth="40" Background="Transparent" UseLayoutRounding="True">
                                    <Grid.Effect>
                                        <DropShadowEffect
                                            BlurRadius="16"
                                            Direction="-90"
                                            Opacity="0.25"
                                            ShadowDepth="4" />
                                    </Grid.Effect>
                                    <dx:DXBorder
                                        Margin="-1"
                                        Background="{DynamicResource {dxct:LWKey HeatmapBrushes.ToolTipBorder}}"
                                        CornerRadius="4"
                                        Opacity="0.35" />
                                    <dx:DXBorder
                                        Margin="1"
                                        dx:BorderExtensions.ClipChild="True"
                                        Background="{DynamicResource {dxct:LWKey HeatmapBrushes.ToolTipBackground}}"
                                        CornerRadius="3">
                                        <ContentPresenter
                                            x:Name="PART_ToolTip"
                                            Margin="{Binding Path=ToolTipItem.ContentMargin, RelativeSource={RelativeSource TemplatedParent}}"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Stretch"
                                            Content="{TemplateBinding ToolTipItem}"
                                            ContentTemplate="{TemplateBinding ToolTipTemplate}"
                                            Focusable="False" />
                                    </dx:DXBorder>
                                </Grid>
                            </Popup>
                        </dxh:HeatmapToolTipPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ToolTipTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock HorizontalAlignment="Center" Foreground="{DynamicResource {dxct:LWKey HeatmapBrushes.ToolTipForeground}}" Text="{Binding ToolTipText}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HeatmapPresentation.DefaultStyleBase" TargetType="{x:Type dxh:HeatmapPresentation}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxh:HeatmapPresentation}">
                    <Grid>
                        <dxh:HeatmapGeometryPresentation x:Name="PART_Elements" Geometry="{TemplateBinding Geometry}" SeriesItem="{Binding}" />
                        <dxh:HeatmapHighlightGeometryPresentation
                            x:Name="PART_HighlightElement"
                            Geometry="{TemplateBinding Geometry}"
                            HighlightElement="{Binding Series.HighlightElement}"
                            HighlightMode="{Binding HighlightMode, RelativeSource={RelativeSource AncestorType=dxh:HeatmapControl}}"
                            SelectedCells="{Binding Path=Series.SelectedCells}" />
                        <dxh:HeatmapLabelItemsControl ItemsSource="{Binding Path=Labels, RelativeSource={RelativeSource TemplatedParent}}">
                            <dxh:HeatmapLabelItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <dxh:HeatmapLabelItemsPanel Geometry="{Binding Path=Geometry, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxh:HeatmapPresentation}}}" />
                                </ItemsPanelTemplate>
                            </dxh:HeatmapLabelItemsControl.ItemsPanel>
                        </dxh:HeatmapLabelItemsControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HeatmapLabel.DefaultStyleBase" TargetType="{x:Type dxh:HeatmapLabel}">
        <Setter Property="Foreground" Value="{DynamicResource {dxct:LWKey HeatmapBrushes.LabelForeground}}" />
        <Setter Property="Padding" Value="2,0,2,0" />
        <Setter Property="ElementTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding Text}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HeatmapLabelPresentation.DefaultStyleBase" TargetType="{x:Type dxh:HeatmapLabelPresentation}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxh:HeatmapLabelPresentation}">
                    <dx:DXBorder
                        Padding="{Binding Path=Label.Padding, RelativeSource={RelativeSource TemplatedParent}}"
                        Background="{Binding Path=Label.Background, RelativeSource={RelativeSource TemplatedParent}}"
                        BorderBrush="{Binding Path=Label.BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                        BorderThickness="{Binding Path=Label.BorderThickness, RelativeSource={RelativeSource TemplatedParent}}"
                        LayoutTransform="{Binding Path=Label.LayoutTransform, RelativeSource={RelativeSource TemplatedParent}}">
                        <ContentPresenter
                            Content="{Binding Path=LabelItem, RelativeSource={RelativeSource TemplatedParent}}"
                            ContentTemplate="{Binding Path=Label.ElementTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                            TextElement.FontFamily="{Binding Path=Label.FontFamily, RelativeSource={RelativeSource TemplatedParent}}"
                            TextElement.FontSize="{Binding Path=Label.FontSize, RelativeSource={RelativeSource TemplatedParent}}"
                            TextElement.FontStretch="{Binding Path=Label.FontStretch, RelativeSource={RelativeSource TemplatedParent}}"
                            TextElement.FontStyle="{Binding Path=Label.FontStyle, RelativeSource={RelativeSource TemplatedParent}}"
                            TextElement.FontWeight="{Binding Path=Label.FontWeight, RelativeSource={RelativeSource TemplatedParent}}"
                            TextElement.Foreground="{Binding Path=Label.Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
                    </dx:DXBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HeatmapHighlightGeometryPresentation.DefaultStyleBase" TargetType="{x:Type dxh:HeatmapHighlightGeometryPresentation}">
        <Setter Property="HighlightBrush" Value="{DynamicResource {dxct:LWKey HeatmapBrushes.HighlightBrush}}" />
    </Style>
    <Style x:Key="SankeyDiagramControl.DefaultStyleBase" TargetType="{x:Type dxsa:SankeyDiagramControl}">
        <Setter Property="ClipToBounds" Value="True" />
        <Setter Property="Background" Value="{DynamicResource {dxct:LWKey SankeyBrushes.BackgroundBrush}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxct:LWKey SankeyBrushes.BorderBrush}}" />
        <Setter Property="BorderThickness" Value="{DynamicResource {dxct:LWKey SankeyDiagram.BorderThickness}}" />
        <Setter Property="Padding" Value="{DynamicResource {dxct:LWKey SankeyDiagram.PaddingValue}}" />
        <Setter Property="FocusManager.IsFocusScope" Value="True" />
        <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Cycle" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once" />
        <Setter Property="AutomationProperties.Name" Value="SankeyDiagramControl" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxsa:SankeyDiagramControl}">
                    <Grid>
                        <dx:DXBorder
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <dxsa:SankeyTitleItemsControl x:Name="PART_TitleItemsContainer" Titles="{TemplateBinding Titles}">
                                    <dxsa:SankeyTitleItemsControl.LastChild>
                                        <dxsa:SankeyElementsPanel x:Name="PART_ElementsContainer">
                                            <dxsa:SankeyLinkItemsControl x:Name="PART_LinkItemsContainer" />
                                            <dxsa:SankeyNodeItemsControl x:Name="PART_NodeItemsContainer" />
                                            <dxsa:SankeyNodeLabelItemsControl x:Name="PART_NodeLabelItemsContainer" />
                                        </dxsa:SankeyElementsPanel>
                                    </dxsa:SankeyTitleItemsControl.LastChild>
                                </dxsa:SankeyTitleItemsControl>
                                <ContentPresenter
                                    x:Name="PART_TopContent"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Visibility="Hidden" />
                            </Grid>
                        </dx:DXBorder>
                        <dxsa:SankeyToolTipPanel
                            x:Name="PART_ToolTipPanel"
                            Focusable="False"
                            IsHitTestVisible="False"
                            Visibility="{Binding Path=ActualToolTipEnabled, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}">
                            <Popup
                                x:Name="PART_Popup"
                                AllowsTransparency="True"
                                HorizontalOffset="{Binding Path=ToolTipItem.Position.X, RelativeSource={RelativeSource TemplatedParent}}"
                                IsOpen="{Binding Path=ToolTipItem.Visible, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                Placement="Absolute"
                                VerticalOffset="{Binding Path=ToolTipItem.Position.Y, RelativeSource={RelativeSource TemplatedParent}}">
                                <ContentPresenter
                                    x:Name="PART_ToolTip"
                                    Content="{TemplateBinding ToolTipItem}"
                                    ContentTemplate="{TemplateBinding ToolTipTemplate}"
                                    Focusable="False" />
                            </Popup>
                        </dxsa:SankeyToolTipPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="NodeTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Rectangle Fill="{Binding Brush}" OpacityMask="{Binding OpacityMask}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ToolTipTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid Background="Transparent" UseLayoutRounding="True">
                        <dx:DXBorder Background="{DynamicResource {dxct:LWKey SankeyBrushes.ToolTipBorder}}" CornerRadius="4" />
                        <dx:DXBorder
                            Margin="1"
                            dx:BorderExtensions.ClipChild="True"
                            Background="{DynamicResource {dxct:LWKey SankeyBrushes.ToolTipBackground}}"
                            CornerRadius="3">
                            <ContentPresenter
                                x:Name="PART_ToolTipContent"
                                Margin="{DynamicResource {dxct:LWKey SankeyDiagram.ToolTipContentMargin}}"
                                Content="{Binding Info}"
                                ContentTemplate="{Binding Path=DataContext.ContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
                        </dx:DXBorder>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="NodeToolTipContentTemplate" Value="{StaticResource defaultTooltipContentTemplate}" />
        <Setter Property="LinkToolTipContentTemplate" Value="{StaticResource defaultTooltipContentTemplate}" />
    </Style>
    <Style x:Key="SankeyNodePresentation.DefaultStyleBase" TargetType="{x:Type dxsa:SankeyNodePresentation}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxsa:SankeyNodePresentation}">
                    <ContentPresenter Content="{Binding}" ContentTemplate="{Binding NodeTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SankeyNodeLabel.DefaultStyleBase" TargetType="{x:Type dxsa:SankeyNodeLabel}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding Node.Tag}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SankeyNodeLabelPresentation.DefaultStyleBase" TargetType="{x:Type dxsa:SankeyNodeLabelPresentation}">
        <Setter Property="Foreground" Value="{DynamicResource {dxct:LWKey SankeyBrushes.NodeLabelForeground}}" />
        <Setter Property="FontWeight" Value="{DynamicResource {dxct:LWKey SankeyDiagram.NodeLabelFontWeight}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxsa:SankeyNodeLabelPresentation}">
                    <dx:DXBorder
                        Padding="{Binding Path=Label.Padding, RelativeSource={RelativeSource TemplatedParent}}"
                        Background="{Binding Path=Label.Background, RelativeSource={RelativeSource TemplatedParent}}"
                        BorderBrush="{Binding Path=Label.BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                        BorderThickness="{Binding Path=Label.BorderThickness, RelativeSource={RelativeSource TemplatedParent}}">
                        <ContentPresenter
                            Content="{Binding}"
                            ContentTemplate="{Binding Path=Label.ContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                            LayoutTransform="{Binding Path=Label.LayoutTransform, RelativeSource={RelativeSource TemplatedParent}}"
                            TextElement.FontFamily="{Binding Path=Label.FontFamily, RelativeSource={RelativeSource TemplatedParent}}"
                            TextElement.FontSize="{Binding Path=Label.FontSize, RelativeSource={RelativeSource TemplatedParent}}"
                            TextElement.FontStretch="{Binding Path=Label.FontStretch, RelativeSource={RelativeSource TemplatedParent}}"
                            TextElement.FontStyle="{Binding Path=Label.FontStyle, RelativeSource={RelativeSource TemplatedParent}}"
                            TextElement.FontWeight="{Binding ActualFontWeight, RelativeSource={RelativeSource TemplatedParent}}"
                            TextElement.Foreground="{Binding ActualForeground, RelativeSource={RelativeSource TemplatedParent}}" />
                    </dx:DXBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SankeyTitle.DefaultStyleBase" TargetType="{x:Type dxsa:SankeyTitle}">
        <Setter Property="Margin" Value="{DynamicResource {dxct:LWKey SankeyDiagram.TitleMargin}}" />
        <Setter Property="Foreground" Value="{DynamicResource {dxct:LWKey SankeyBrushes.TitleForeground}}" />
        <Setter Property="FontSize" Value="{DynamicResource {dxct:LWKey SankeyDiagram.TitleFontSize}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxsa:SankeyTitle}">
                    <Grid>
                        <dx:DXBorder
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                        </dx:DXBorder>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SmallSankeyText.DefaultStyleBase" BasedOn="{StaticResource textElementStyle}" TargetType="{x:Type dxsa:SmallSankeyText}" />
    <Style x:Key="EmptySankeyText.DefaultStyleBase" BasedOn="{StaticResource textElementStyle}" TargetType="{x:Type dxsa:EmptySankeyText}" />
    <Style x:Key="Chart3DControl.DefaultStyleBase" TargetType="{x:Type dxc:Chart3DControl}">
        <Setter Property="DomainBrush" Value="{DynamicResource {dxct:LWKey ChartBrushes.Domain3DBrush}}" />
        <Setter Property="CrosshairSeriesLabelForeground" Value="{DynamicResource {dxct:LWKey ChartBrushes.CrosshairSeriesLabelForeground}}" />
        <Setter Property="CrosshairSeriesLabelTemplate" Value="{DynamicResource {dxct:LWKey ChartControl.CrosshairPopupTemplate}}" />
        <Setter Property="CrosshairSeriesLabelItemTemplate" Value="{DynamicResource {dxct:LWKey ChartControl.CrosshairSeriesLabelTemplate}}" />
        <Setter Property="CrosshairSeriesLabelPrintingTemplate" Value="{DynamicResource {dxct:LWKey ChartControl.CrosshairSeriesLabelPrintingTemplate}}" />
        <Setter Property="CrosshairPopupBackground" Value="{DynamicResource {dxct:LWKey ChartBrushes.CrosshairPopupBackground}}" />
        <Setter Property="CrosshairBorderBrush" Value="{DynamicResource {dxct:LWKey ChartBrushes.CrosshairBorderBrush}}" />
        <Setter Property="Background" Value="{DynamicResource {dxct:LWKey ChartBrushes.ChartBackgroundBrush}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxct:LWKey ChartBrushes.ChartBorderBrush}}" />
        <Setter Property="BorderThickness" Value="{DynamicResource {dxct:LWKey ChartControl.ChartBorderThickness}}" />
        <Setter Property="Padding" Value="{DynamicResource {dxct:LWKey ChartControl.ChartPaddingValue}}" />
        <Setter Property="FocusManager.IsFocusScope" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:Chart3DControl}">
                    <Grid Background="Transparent">
                        <dxc:ChartContentControl
                            x:Name="ChartWrapper"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Template="{DynamicResource {dxct:LWKey ChartControl.ChartWrapperTemplate}}">
                            <dxc:TitlesLayoutControl Titles="{TemplateBinding Titles}">
                                <dxc:TitlesLayoutControl.MasterElement>
                                    <dxc:ChartElementItemsControl x:Name="ChartElements" Diagram="{Binding Diagram, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                        <dxc:ChartElementItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <dxc:Chart3DElementsPanel />
                                            </ItemsPanelTemplate>
                                        </dxc:ChartElementItemsControl.ItemsPanel>
                                    </dxc:ChartElementItemsControl>
                                </dxc:TitlesLayoutControl.MasterElement>
                            </dxc:TitlesLayoutControl>
                        </dxc:ChartContentControl>
                        <Grid x:Name="PART_CrosshairLabelsContainer" DataContext="{Binding Path=., RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False">
                            <dxc:ChartItemsControl ItemsSource="{Binding CrosshairAxisLabelItems}">
                                <dxc:ChartItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <dxc:CrosshairAxisLabelsPanel />
                                    </ItemsPanelTemplate>
                                </dxc:ChartItemsControl.ItemsPanel>
                                <dxc:ChartItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <ContentPresenter Content="{Binding}" ContentTemplate="{DynamicResource {dxct:LWKey ChartControl.Crosshair3DAxisLabelTemplate}}" />
                                    </DataTemplate>
                                </dxc:ChartItemsControl.ItemTemplate>
                            </dxc:ChartItemsControl>
                            <dxc:ChartItemsControl ItemTemplate="{TemplateBinding CrosshairSeriesLabelItemTemplate}" ItemsSource="{Binding CrosshairSeriesLabelItems}">
                                <dxc:ChartItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <dxc:CrosshairLabelsPanel />
                                    </ItemsPanelTemplate>
                                </dxc:ChartItemsControl.ItemsPanel>
                            </dxc:ChartItemsControl>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Chart3DContainer.DefaultStyleBase" TargetType="{x:Type dxc:Chart3DContainer}">
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:Chart3DContainer}">
                    <Viewport3D x:Name="PART_Viewport" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Annotation.DefaultStyleBase" TargetType="{x:Type dxc:Annotation}">
        <Setter Property="Foreground" Value="{DynamicResource {dxct:LWKey ChartBrushes.AnnotationForeground}}" />
        <Setter Property="Background" Value="{DynamicResource {dxct:LWKey ChartBrushes.AnnotationBackground}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxct:LWKey ChartBrushes.AnnotationBorderBrush}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:Annotation}">
                    <Grid ClipToBounds="False" Visibility="{TemplateBinding Visible, Converter={StaticResource boolToVisibilityConverter}}">
                        <Canvas UseLayoutRounding="True">
                            <Path
                                x:Name="PART_Path"
                                Fill="{TemplateBinding Background}"
                                SnapsToDevicePixels="True"
                                Stroke="{TemplateBinding BorderBrush}"
                                StrokeDashArray="{Binding BorderStyle.DashStyle.Dashes, RelativeSource={RelativeSource TemplatedParent}}"
                                StrokeDashCap="{Binding BorderStyle.DashCap, RelativeSource={RelativeSource TemplatedParent}}"
                                StrokeDashOffset="{Binding BorderStyle.DashStyle.Offset, RelativeSource={RelativeSource TemplatedParent}}"
                                StrokeLineJoin="{Binding BorderStyle.LineJoin, RelativeSource={RelativeSource TemplatedParent}}"
                                StrokeMiterLimit="{Binding BorderStyle.MiterLimit, RelativeSource={RelativeSource TemplatedParent}}"
                                StrokeThickness="{Binding BorderStyle.Thickness, RelativeSource={RelativeSource TemplatedParent}}">
                                <Path.Data>
                                    <CombinedGeometry GeometryCombineMode="Union">
                                        <CombinedGeometry.Geometry1>
                                            <RectangleGeometry
                                                x:Name="PART_ShapeGeometry"
                                                RadiusX="{Binding ShapeTransform, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource transformXToDoubleConverter}, ConverterParameter=3}"
                                                RadiusY="{Binding ShapeTransform, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource transformYToDoubleConverter}, ConverterParameter=3}"
                                                Transform="{Binding ShapeTransform, RelativeSource={RelativeSource AncestorType={x:Type dxc:Annotation}}}">
                                                <RectangleGeometry.Rect>
                                                    <Rect
                                                        Width="100"
                                                        Height="40"
                                                        X="0"
                                                        Y="0" />
                                                </RectangleGeometry.Rect>
                                            </RectangleGeometry>
                                        </CombinedGeometry.Geometry1>
                                        <CombinedGeometry.Geometry2>
                                            <PathGeometry x:Name="PART_TailGeometry" Transform="{Binding TailTransform, RelativeSource={RelativeSource AncestorType={x:Type dxc:Annotation}}}">
                                                <PathFigure>
                                                    <PolyLineSegment IsSmoothJoin="True">
                                                        <PolyLineSegment.Points>
                                                            <Point X="0" Y="0" />
                                                            <Point X="100" Y="5" />
                                                            <Point X="100" Y="-5" />
                                                            <Point X="0" Y="0" />
                                                        </PolyLineSegment.Points>
                                                    </PolyLineSegment>
                                                </PathFigure>
                                            </PathGeometry>
                                        </CombinedGeometry.Geometry2>
                                    </CombinedGeometry>
                                </Path.Data>
                            </Path>
                        </Canvas>
                        <dxc:ChartContentPresenter
                            x:Name="PART_Content"
                            Margin="5"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            RenderTransformOrigin="0.5, 0.5">
                            <dxc:ChartContentPresenter.RenderTransform>
                                <RotateTransform x:Name="contentTransform" Angle="{Binding Angle, RelativeSource={RelativeSource TemplatedParent}}" />
                            </dxc:ChartContentPresenter.RenderTransform>
                        </dxc:ChartContentPresenter>
                        <Grid RenderTransformOrigin="0.5, 0.5">
                            <Grid.RenderTransform>
                                <RotateTransform x:Name="interactivityTransform" Angle="{Binding Angle, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Grid.RenderTransform>
                            <Grid Margin="-5,-5,0,0" Visibility="{Binding ResizeThumbVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                                <Canvas Margin="-1,-1,0,0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                    <dxc:AnnotationResizeThumb
                                        Annotation="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                        AnnotationAngle="{TemplateBinding Angle}"
                                        Direction="LeftTop"
                                        Template="{DynamicResource {dxct:LWKey ChartControl.AnnotationResizeThumbTemplate}}" />
                                </Canvas>
                                <Canvas Margin="0,-1,-1,0" HorizontalAlignment="Right" VerticalAlignment="Top">
                                    <dxc:AnnotationResizeThumb
                                        Annotation="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                        AnnotationAngle="{TemplateBinding Angle}"
                                        Direction="RightTop"
                                        Template="{DynamicResource {dxct:LWKey ChartControl.AnnotationResizeThumbTemplate}}" />
                                </Canvas>
                                <Canvas Margin="0,0,-1,-1" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                                    <dxc:AnnotationResizeThumb
                                        Annotation="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                        AnnotationAngle="{TemplateBinding Angle}"
                                        Direction="RightBottom"
                                        Template="{DynamicResource {dxct:LWKey ChartControl.AnnotationResizeThumbTemplate}}" />
                                </Canvas>
                                <Canvas Margin="-1,0,0,-1" HorizontalAlignment="Left" VerticalAlignment="Bottom">
                                    <dxc:AnnotationResizeThumb
                                        Annotation="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                        AnnotationAngle="{TemplateBinding Angle}"
                                        Direction="LeftBottom"
                                        Template="{DynamicResource {dxct:LWKey ChartControl.AnnotationResizeThumbTemplate}}" />
                                </Canvas>

                                <Canvas Margin="0,-2,0,0" HorizontalAlignment="Center" VerticalAlignment="Top">
                                    <dxc:AnnotationResizeThumb
                                        Annotation="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                        AnnotationAngle="{TemplateBinding Angle}"
                                        Direction="CenterTop"
                                        Template="{DynamicResource {dxct:LWKey ChartControl.AnnotationResizeThumbTemplate}}" />
                                </Canvas>
                                <Canvas Margin="0,0,0,-1" HorizontalAlignment="Center" VerticalAlignment="Bottom">
                                    <dxc:AnnotationResizeThumb
                                        Annotation="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                        AnnotationAngle="{TemplateBinding Angle}"
                                        Direction="CenterBottom"
                                        Template="{DynamicResource {dxct:LWKey ChartControl.AnnotationResizeThumbTemplate}}" />
                                </Canvas>
                                <Canvas Margin="-2,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center">
                                    <dxc:AnnotationResizeThumb
                                        Annotation="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                        AnnotationAngle="{TemplateBinding Angle}"
                                        Direction="LeftCenter"
                                        Template="{DynamicResource {dxct:LWKey ChartControl.AnnotationResizeThumbTemplate}}" />
                                </Canvas>
                                <Canvas Margin="0,0,-1,0" HorizontalAlignment="Right" VerticalAlignment="Center">
                                    <dxc:AnnotationResizeThumb
                                        Annotation="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                        AnnotationAngle="{TemplateBinding Angle}"
                                        Direction="RightCenter"
                                        Template="{DynamicResource {dxct:LWKey ChartControl.AnnotationResizeThumbTemplate}}" />
                                </Canvas>
                            </Grid>
                            <Grid Margin="-10,-10,0,0">
                                <Canvas Margin="0,-32,0,0" HorizontalAlignment="Center" VerticalAlignment="Top">
                                    <dxc:AnnotationRotateThumb
                                        Width="24"
                                        Height="24"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        Annotation="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                        Background="Green"
                                        Template="{DynamicResource {dxct:LWKey ChartControl.AnnotationRotateThumbTemplate}}"
                                        Visibility="{Binding RotateThumbVisibility, RelativeSource={RelativeSource TemplatedParent}}" />
                                </Canvas>
                            </Grid>
                            <dxc:SelectionControl IsHighlighted="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectionInfo.IsHighlighted}" IsSelected="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectionInfo.IsSelected}" />
                        </Grid>
                        <Canvas>
                            <dxc:AnnotationAnchorThumb
                                Canvas.Left="{Binding AnchorThumbX, RelativeSource={RelativeSource TemplatedParent}}"
                                Canvas.Top="{Binding AnchorThumbY, RelativeSource={RelativeSource TemplatedParent}}"
                                Width="24"
                                Height="24"
                                Margin="-5,-5,0,0"
                                Annotation="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                Background="Red"
                                Template="{DynamicResource {dxct:LWKey ChartControl.AnnotationAnchorThumbTemplate}}"
                                Visibility="{Binding AnchorThumbVisibility, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Canvas>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="EditableTextContent.DefaultStyleBase" TargetType="{x:Type dxc:EditableTextContent}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <TextBlock
                            x:Name="PART_TextBlock"
                            VerticalAlignment="Center"
                            Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Text}"
                            TextAlignment="Center"
                            Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=EditModeEnabled, Converter={dx:BooleanToVisibilityConverter Invert=True}}" />
                        <TextBox
                            x:Name="PART_TextBox"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            HorizontalContentAlignment="Center"
                            VerticalContentAlignment="Center"
                            AcceptsReturn="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Multiline}"
                            Background="Transparent"
                            BorderThickness="0"
                            Foreground="{Binding ElementName=PART_TextBlock, Path=Foreground}"
                            Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Text, Mode=TwoWay}"
                            TextAlignment="Center"
                            TextWrapping="Wrap"
                            Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=EditModeEnabled, Mode=TwoWay, Converter={dx:BooleanToVisibilityConverter}}">
                            <TextBox.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsVisible}" Value="true">
                                            <Setter Property="FocusManager.FocusedElement" Value="{Binding RelativeSource={RelativeSource Mode=Self}}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                    <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <ContentControl>
                                                    <dxc:TextBoxFocusSelectionBehavior />
                                                </ContentControl>
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="EditableImageContent.DefaultStyleBase" TargetType="{x:Type dxc:EditableImageContent}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Image x:Name="PART_Image" Source="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ImageSource}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AxisLabelPresentation.DefaultStyleBase" TargetType="{x:Type dxc:AxisLabelPresentation}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:AxisLabelPresentation}">
                    <dx:DXBorder
                        Padding="{Binding Path=Label.Padding, RelativeSource={RelativeSource TemplatedParent}}"
                        Background="{Binding Path=LabelItem.Background, RelativeSource={RelativeSource TemplatedParent}}"
                        BorderBrush="{Binding Path=Label.BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                        BorderThickness="{Binding Path=Label.BorderThickness, RelativeSource={RelativeSource TemplatedParent}}"
                        RenderTransformOrigin="0.5,0.5">
                        <dx:DXBorder.RenderTransform>
                            <RotateTransform x:Name="axisLabelRotation" Angle="{Binding Path=LabelItem.Angle, RelativeSource={RelativeSource TemplatedParent}}" />
                        </dx:DXBorder.RenderTransform>
                        <dxc:ChartContentPresenter
                            Content="{Binding Path=LabelItem, RelativeSource={RelativeSource TemplatedParent}}"
                            ContentTemplate="{Binding Path=Label.ElementTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                            TextElement.FontFamily="{Binding Path=Label.FontFamily, RelativeSource={RelativeSource TemplatedParent}}"
                            TextElement.FontSize="{Binding Path=Label.FontSize, RelativeSource={RelativeSource TemplatedParent}}"
                            TextElement.FontStretch="{Binding Path=Label.FontStretch, RelativeSource={RelativeSource TemplatedParent}}"
                            TextElement.FontStyle="{Binding Path=Label.FontStyle, RelativeSource={RelativeSource TemplatedParent}}"
                            TextElement.FontWeight="{Binding Path=Label.FontWeight, RelativeSource={RelativeSource TemplatedParent}}"
                            TextElement.Foreground="{Binding Path=Label.Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
                    </dx:DXBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AxisLabel.DefaultStyleBase" TargetType="{x:Type dxc:AxisLabel}">
        <Setter Property="Padding" Value="{DynamicResource {dxct:LWKey ChartControl.AxisLabelPadding}}" />
        <Setter Property="FontSize" Value="{DynamicResource {dxct:LWKey ChartControl.AxisLabelFontSize}}" />
        <Setter Property="Foreground" Value="{DynamicResource {dxct:LWKey ChartBrushes.AxisLabelForeground}}" />
        <Setter Property="ElementTemplate" Value="{DynamicResource {dxct:LWKey ChartControl.AxisLabelTemplate}}" />
    </Style>
    <Style x:Key="ChartDataTable.DefaultStyleBase" TargetType="{x:Type dxc:ChartDataTable}">
        <Setter Property="FontSize" Value="{DynamicResource {dxct:LWKey ChartControl.AxisLabelFontSize}}" />
        <Setter Property="Foreground" Value="{DynamicResource {dxct:LWKey ChartBrushes.AxisLabelForeground}}" />
        <Setter Property="LineBrush" Value="{DynamicResource {dxct:LWKey ChartBrushes.AxisBrush}}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
    </Style>
    <Style x:Key="ToolTipControl.DefaultStyleBase" TargetType="{x:Type dxc:ToolTipControl}">
        <Setter Property="Template" Value="{DynamicResource {dxct:LWKey ChartControl.ToolTipPresentationTemplate}}" />
    </Style>
    <Style x:Key="Axis2DPresentation.DefaultStyleBase" TargetType="{x:Type dxc:Axis2DPresentation}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:Axis2DPresentation}">
                    <dxc:AxisRenderControl
                        AxisGeometry="{Binding Path=AxisItem.AxisGeometry, RelativeSource={RelativeSource TemplatedParent}}"
                        Brush="{Binding Path=Axis.Brush, RelativeSource={RelativeSource TemplatedParent}}"
                        MajorTickmarksGeometry="{Binding Path=AxisItem.MajorTickmarksGeometry, RelativeSource={RelativeSource TemplatedParent}}"
                        MinorTickmarksGeometry="{Binding Path=AxisItem.MinorTickmarksGeometry, RelativeSource={RelativeSource TemplatedParent}}"
                        RenderTransform="{Binding Path=AxisItem.GeometryTransform, RelativeSource={RelativeSource TemplatedParent}}"
                        RenderTransformOrigin="0.5,0.5"
                        Visibility="{Binding AxisItem.Visibility, RelativeSource={RelativeSource TemplatedParent}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AxisX2D.DefaultStyleBase" BasedOn="{StaticResource Axis2DStyle}" TargetType="{x:Type dxc:AxisX2D}">
        <Setter Property="Interlaced" Value="false" />
    </Style>
    <Style x:Key="AxisY2D.DefaultStyleBase" BasedOn="{StaticResource Axis2DStyle}" TargetType="{x:Type dxc:AxisY2D}">
        <Setter Property="Interlaced" Value="true" />
        <Setter Property="GridLinesVisible" Value="True" />
    </Style>
    <Style x:Key="SecondaryAxisX2D.DefaultStyleBase" BasedOn="{StaticResource Axis2DStyle}" TargetType="{x:Type dxc:SecondaryAxisX2D}">
        <Setter Property="Alignment" Value="Far" />
        <Setter Property="Interlaced" Value="false" />
    </Style>
    <Style x:Key="SecondaryAxisY2D.DefaultStyleBase" BasedOn="{StaticResource Axis2DStyle}" TargetType="{x:Type dxc:SecondaryAxisY2D}">
        <Setter Property="Alignment" Value="Far" />
        <Setter Property="Interlaced" Value="false" />
    </Style>
    <Style x:Key="RadarAxisY2D.DefaultStyleBase" BasedOn="{StaticResource CircularAxisY2DStyle}" TargetType="dxc:RadarAxisY2D" />
    <Style x:Key="PolarAxisY2D.DefaultStyleBase" BasedOn="{StaticResource CircularAxisY2DStyle}" TargetType="dxc:PolarAxisY2D" />
    <Style x:Key="RadarAxisX2D.DefaultStyleBase" BasedOn="{StaticResource CircularAxisX2DStyle}" TargetType="dxc:RadarAxisX2D" />
    <Style x:Key="PolarAxisX2D.DefaultStyleBase" BasedOn="{StaticResource CircularAxisX2DStyle}" TargetType="dxc:PolarAxisX2D" />
    <Style x:Key="ConstantLine.DefaultStyleBase" TargetType="{x:Type dxc:ConstantLine}">
        <Setter Property="Brush" Value="{DynamicResource {dxct:LWKey ChartBrushes.ConstantLineBrush}}" />
        <Setter Property="LegendMarkerTemplate" Value="{StaticResource ConstantLineLegendMarkerTemplate}" />
        <Setter Property="ElementTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Line
                        x:Name="PART_Line"
                        Stroke="{Binding Path=ConstantLine.Brush}"
                        StrokeDashArray="{Binding DashArray, Converter={StaticResource strokeDashArrayConverter}}"
                        StrokeDashCap="{Binding Path=ConstantLine.ActualLineStyle.DashCap}"
                        StrokeDashOffset="{Binding DashOffset}"
                        StrokeLineJoin="{Binding Path=ConstantLine.ActualLineStyle.LineJoin}"
                        StrokeMiterLimit="{Binding Path=ConstantLine.ActualLineStyle.MiterLimit}"
                        StrokeThickness="{Binding Path=ConstantLine.ActualLineStyle.Thickness}"
                        Visibility="{Binding Visibility, RelativeSource={RelativeSource TemplatedParent}}"
                        X1="{Binding Offset}"
                        X2="{Binding Offset}"
                        Y2="{Binding Length}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ConstantLinePresentation.DefaultStyleBase" TargetType="{x:Type dxc:ConstantLinePresentation}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:ConstantLinePresentation}">
                    <Grid>
                        <ContentPresenter Content="{Binding Path=ConstantLineItem, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{Binding Path=ConstantLineItem.ConstantLine.ElementTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
                        <dxc:SelectionGeometryControl Geometry="{Binding Path=ConstantLineItem.SelectionGeometry, RelativeSource={RelativeSource TemplatedParent}}" IsHighlighted="{Binding Path=ConstantLine.SelectionInfo.IsHighlighted, RelativeSource={RelativeSource TemplatedParent}}" IsSelected="{Binding Path=ConstantLine.SelectionInfo.IsSelected, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="StripPresentation.DefaultStyleBase" TargetType="{x:Type dxc:StripPresentation}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:StripPresentation}">
                    <Canvas>
                        <Rectangle
                            x:Name="PART_Rect"
                            Canvas.Left="{Binding Path=StripItem.Offset, RelativeSource={RelativeSource TemplatedParent}}"
                            Width="{Binding Path=StripItem.Thickness, RelativeSource={RelativeSource TemplatedParent}}"
                            Height="{Binding Path=StripItem.Length, RelativeSource={RelativeSource TemplatedParent}}"
                            Fill="{Binding Path=Strip.Brush, RelativeSource={RelativeSource TemplatedParent}}"
                            Stroke="{Binding Path=Strip.BorderColor, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                            StrokeThickness="1" />
                        <dxc:SelectionGeometryControl Geometry="{Binding Path=StripItem.SelectionGeometry, RelativeSource={RelativeSource TemplatedParent}}" IsHighlighted="{Binding Path=Strip.SelectionInfo.IsHighlighted, RelativeSource={RelativeSource TemplatedParent}}" IsSelected="{Binding Path=Strip.SelectionInfo.IsSelected, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Strip.DefaultStyleBase" TargetType="{x:Type dxc:Strip}">
        <Setter Property="Brush" Value="{DynamicResource {dxct:LWKey ChartBrushes.StripBrush}}" />
        <Setter Property="BorderColor" Value="{DynamicResource {dxct:LWKey ChartBrushes.StripBorderColor}}" />
        <Setter Property="LegendMarkerTemplate" Value="{StaticResource StripLegendMarkerTemplate}" />
    </Style>
    <Style x:Key="AxisX3D.DefaultStyleBase" BasedOn="{StaticResource Axis3DStyle}" TargetType="{x:Type dxc:AxisX3D}">
        <Setter Property="Interlaced" Value="false" />
    </Style>
    <Style x:Key="AxisY3D.DefaultStyleBase" BasedOn="{StaticResource Axis3DStyle}" TargetType="{x:Type dxc:AxisY3D}">
        <Setter Property="Interlaced" Value="true" />
        <Setter Property="GridLinesVisible" Value="True" />
        <Setter Property="GridLinesLineStyle">
            <Setter.Value>
                <dxc:LineStyle Thickness="3" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ZAxis3D.DefaultStyleBase" BasedOn="{StaticResource Axis3DBaseStyle}" TargetType="{x:Type dxc:ZAxis3D}">
        <Setter Property="Interlaced" Value="true" />
        <Setter Property="GridLinesVisible" Value="True" />
        <Setter Property="GridLinesLineStyle">
            <Setter.Value>
                <dxc:LineStyle Thickness="2" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ArgumentAxis3D.DefaultStyleBase" BasedOn="{StaticResource Axis3DBaseStyle}" TargetType="{x:Type dxc:ArgumentAxis3D}">
        <Setter Property="Interlaced" Value="false" />
        <Setter Property="GridLinesVisible" Value="True" />
    </Style>
    <Style x:Key="AxisScrollBarThumb.DefaultStyleBase" BasedOn="{StaticResource axisScrollBarThumbBaseStyle}" TargetType="dxc:AxisScrollBarThumb" />
    <Style x:Key="AxisScrollBarThumbResizer.DefaultStyleBase" BasedOn="{StaticResource axisScrollBarThumbBaseStyle}" TargetType="dxc:AxisScrollBarThumbResizer" />
    <Style x:Key="AxisScrollBar.DefaultStyleBase" TargetType="dxc:AxisScrollBar">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxct:LWKey ChartBrushes.AxisBrush}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template" Value="{DynamicResource {dxct:LWKey ChartControl.AxisScrollBarTemplate}}" />
    </Style>
    <Style x:Key="ScrollBarBorder.DefaultStyleBase" TargetType="dxc:ScrollBarBorder">
        <Setter Property="Brush" Value="{DynamicResource {dxct:LWKey ChartBrushes.AxisBrush}}" />
    </Style>
    <Style x:Key="BorderlessGradientBar2DModelControl.DefaultStyleBase" TargetType="{x:Type dxc:BorderlessGradientBar2DModelControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:BorderlessGradientBar2DModelControl}">
                    <dx:DXBorder BorderThickness="0" OpacityMask="{Binding OpacityMask}" UseLayoutRounding="True">
                        <dx:DXBorder.Background>
                            <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                <Binding.ConverterParameter>
                                    <LinearGradientBrush StartPoint="0.5,0.015625" EndPoint="0.5,1">
                                        <GradientStop Offset="0" Color="#FF808080" />
                                        <GradientStop Offset="1" Color="#FF4D4D4D" />
                                    </LinearGradientBrush>
                                </Binding.ConverterParameter>
                            </Binding>
                        </dx:DXBorder.Background>
                    </dx:DXBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BorderlessSimpleBar2DModelControl.DefaultStyleBase" TargetType="{x:Type dxc:BorderlessSimpleBar2DModelControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:BorderlessSimpleBar2DModelControl}">
                    <dx:DXBorder
                        Background="{Binding Path=PointColor, ConverterParameter=#FF808080, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                        BorderThickness="0"
                        OpacityMask="{Binding OpacityMask}"
                        UseLayoutRounding="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GradientBar2DModelControl.DefaultStyleBase" TargetType="{x:Type dxc:GradientBar2DModelControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:GradientBar2DModelControl}">
                    <dx:DXBorder
                        BorderBrush="{Binding Path=PointColor, ConverterParameter=#FF262626, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource brushOverlayConverter}}"
                        BorderThickness="1,1,1,1"
                        OpacityMask="{Binding OpacityMask}"
                        UseLayoutRounding="True">
                        <dx:DXBorder.Background>
                            <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                <Binding.ConverterParameter>
                                    <LinearGradientBrush StartPoint="0.5,0.015625" EndPoint="0.5,1">
                                        <GradientStop Offset="0" Color="#FF808080" />
                                        <GradientStop Offset="1" Color="#FF4D4D4D" />
                                    </LinearGradientBrush>
                                </Binding.ConverterParameter>
                            </Binding>
                        </dx:DXBorder.Background>
                    </dx:DXBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SimpleBar2DModelControl.DefaultStyleBase" TargetType="{x:Type dxc:SimpleBar2DModelControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:SimpleBar2DModelControl}">
                    <dx:DXBorder
                        Background="{Binding Path=PointColor, ConverterParameter=#FF808080, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                        BorderBrush="{Binding Path=PointColor, ConverterParameter=#FF404040, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                        BorderThickness="1,1,1,1"
                        OpacityMask="{Binding OpacityMask}"
                        UseLayoutRounding="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TransparentBar2DModelControl.DefaultStyleBase" TargetType="{x:Type dxc:TransparentBar2DModelControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:TransparentBar2DModelControl}">
                    <dx:DXBorder
                        BorderBrush="{Binding Path=PointColor, ConverterParameter=#FF606060, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                        BorderThickness="1,1,1,1"
                        OpacityMask="{Binding OpacityMask}"
                        UseLayoutRounding="True">
                        <dx:DXBorder.Background>
                            <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                <Binding.ConverterParameter>
                                    <LinearGradientBrush StartPoint="0.5,0.015625" EndPoint="0.5,1">
                                        <GradientStop Offset="0" Color="#C0C1C1C1" />
                                        <GradientStop Offset="1" Color="#C0919191" />
                                    </LinearGradientBrush>
                                </Binding.ConverterParameter>
                            </Binding>
                        </dx:DXBorder.Background>
                    </dx:DXBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FlatBar2DModelControl.DefaultStyleBase" TargetType="{x:Type dxc:FlatBar2DModelControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:FlatBar2DModelControl}">
                    <Grid OpacityMask="{Binding OpacityMask}">
                        <dx:DXBorder Background="{Binding Path=PointColor, ConverterParameter=#FF505050, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}" CornerRadius="3,3,0,0" UseLayoutRounding="True" />
                        <dx:DXBorder
                            Margin="1,1,1,0"
                            Background="{Binding Path=PointColor, ConverterParameter=#FFA0A0A0, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                            CornerRadius="2,2,0,0"
                            UseLayoutRounding="True" />
                        <dx:DXBorder Margin="1,2,1,0" CornerRadius="2,2,0,0" UseLayoutRounding="True">
                            <dx:DXBorder.Background>
                                <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.ConverterParameter>
                                        <LinearGradientBrush StartPoint="-1.01725e-006,0.500001" EndPoint="0.999999, 0.500001">
                                            <GradientStop Offset="0" Color="#FF929292" />
                                            <GradientStop Offset="1" Color="#FF6E6E6E" />
                                        </LinearGradientBrush>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </dx:DXBorder.Background>
                        </dx:DXBorder>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FlatGlassBar2DModelControl.DefaultStyleBase" TargetType="{x:Type dxc:FlatGlassBar2DModelControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:FlatGlassBar2DModelControl}">
                    <Grid OpacityMask="{Binding OpacityMask}">
                        <dx:DXBorder Background="{Binding Path=PointColor, ConverterParameter=#FF505050, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}" CornerRadius="3,3,0,0" UseLayoutRounding="True" />
                        <dx:DXBorder Margin="1,1,1,0" CornerRadius="1,1,0,0" UseLayoutRounding="True">
                            <dx:DXBorder.Background>
                                <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.ConverterParameter>
                                        <LinearGradientBrush StartPoint="-1.01725e-006,0.500001" EndPoint="0.999999, 0.500001">
                                            <GradientStop Offset="0" Color="#FF808080" />
                                            <GradientStop Offset="0.5" Color="#FF666666" />
                                            <GradientStop Offset="0.5" Color="#FF555555" />
                                            <GradientStop Offset="1" Color="#FF6B6B6B" />
                                        </LinearGradientBrush>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </dx:DXBorder.Background>
                        </dx:DXBorder>
                        <dx:DXBorder
                            Margin="1,1,1,0"
                            BorderBrush="{Binding Path=PointColor, ConverterParameter=#32FFFFFF, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                            BorderThickness="1,1,1,0"
                            CornerRadius="2,2,0,0"
                            UseLayoutRounding="True" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="OutsetBar2DModelControl.DefaultStyleBase" TargetType="{x:Type dxc:OutsetBar2DModelControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:OutsetBar2DModelControl}">
                    <Grid OpacityMask="{Binding OpacityMask}">
                        <Grid.RowDefinitions>
                            <RowDefinition MinHeight="5" MaxHeight="5" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MaxWidth="5" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition MaxWidth="5" />
                        </Grid.ColumnDefinitions>
                        <Rectangle
                            Grid.RowSpan="2"
                            Grid.ColumnSpan="3"
                            Stretch="Fill"
                            UseLayoutRounding="True">
                            <Rectangle.Fill>
                                <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.ConverterParameter>
                                        <LinearGradientBrush StartPoint="0.5,0.015625" EndPoint="0.5,1">
                                            <GradientStop Offset="0" Color="#FF808080" />
                                            <GradientStop Offset="1" Color="#FF4D4D4D" />
                                        </LinearGradientBrush>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle
                            Grid.Row="0"
                            Grid.ColumnSpan="3"
                            Height="1"
                            VerticalAlignment="Top"
                            Fill="{Binding Path=PointColor, ConverterParameter=#72000000, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                            Stretch="Fill"
                            UseLayoutRounding="True" />
                        <Rectangle
                            Grid.RowSpan="2"
                            Grid.Column="2"
                            Width="1"
                            Margin="0,1,0,0"
                            HorizontalAlignment="Right"
                            Fill="{Binding Path=PointColor, ConverterParameter=#80000000, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                            Stretch="Fill"
                            UseLayoutRounding="True" />
                        <Rectangle
                            Grid.RowSpan="2"
                            Grid.Column="0"
                            Width="1"
                            Margin="0,1,0,0"
                            HorizontalAlignment="Left"
                            Fill="{Binding Path=PointColor, ConverterParameter=#5A000000, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                            Stretch="Fill"
                            UseLayoutRounding="True" />
                        <Path
                            Grid.Row="0"
                            Grid.Column="0"
                            Margin="1,1,0,0"
                            Data="F1 M 5.00049,5L 1.00049,1L 5.00049,1Z "
                            Stretch="Fill"
                            UseLayoutRounding="True">
                            <Path.Fill>
                                <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.ConverterParameter>
                                        <LinearGradientBrush StartPoint="0.470832,1.52588e-005" EndPoint="0.470832,1.00002">
                                            <GradientStop Offset="0" Color="#7FFFFFFF" />
                                            <GradientStop Offset="1" Color="#1AFFFFFF" />
                                        </LinearGradientBrush>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </Path.Fill>
                        </Path>
                        <Rectangle
                            Grid.Row="0"
                            Grid.Column="1"
                            Margin="0,1,0,0"
                            Stretch="Fill"
                            UseLayoutRounding="True">
                            <Rectangle.Fill>
                                <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.ConverterParameter>
                                        <LinearGradientBrush StartPoint="0.470832,1.52588e-005" EndPoint="0.470832,1.00002">
                                            <GradientStop Offset="0" Color="#7FFFFFFF" />
                                            <GradientStop Offset="1" Color="#1AFFFFFF" />
                                        </LinearGradientBrush>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Path
                            Grid.Row="0"
                            Grid.Column="2"
                            Margin="0,1,1,0"
                            Data="F1 M 31.0005,1L 27.0005,5L 27.0005,1 Z "
                            Stretch="Fill"
                            UseLayoutRounding="True">
                            <Path.Fill>
                                <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.ConverterParameter>
                                        <LinearGradientBrush StartPoint="0.470832,1.52588e-005" EndPoint="0.470832,1.00002">
                                            <GradientStop Offset="0" Color="#7FFFFFFF" />
                                            <GradientStop Offset="1" Color="#1AFFFFFF" />
                                        </LinearGradientBrush>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </Path.Fill>
                        </Path>
                        <Path
                            Grid.Row="0"
                            Grid.Column="0"
                            Margin="1,1,0,0"
                            Data="F1 M 1,1L 5,5L 1,5 Z "
                            Stretch="Fill"
                            UseLayoutRounding="True">
                            <Path.Fill>
                                <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.ConverterParameter>
                                        <LinearGradientBrush StartPoint="-7.62846e-006,0.500001" EndPoint="0.999992,0.500001">
                                            <GradientStop Offset="0" Color="#1A000000" />
                                            <GradientStop Offset="1" Color="#00000000" />
                                        </LinearGradientBrush>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </Path.Fill>
                        </Path>
                        <Rectangle
                            Grid.Row="1"
                            Grid.Column="0"
                            Margin="1,0,0,0"
                            Stretch="Fill"
                            UseLayoutRounding="True">
                            <Rectangle.Fill>
                                <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.ConverterParameter>
                                        <LinearGradientBrush StartPoint="-7.62846e-006,0.500001" EndPoint="0.999992,0.500001">
                                            <GradientStop Offset="0" Color="#1A000000" />
                                            <GradientStop Offset="1" Color="#00000000" />
                                        </LinearGradientBrush>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Path
                            Grid.Row="0"
                            Grid.Column="2"
                            Margin="0,1,1,0"
                            Data="F1 M 31.0005,1L 27.0005,5L 31.0005,5 Z "
                            Stretch="Fill"
                            UseLayoutRounding="True">
                            <Path.Fill>
                                <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.ConverterParameter>
                                        <LinearGradientBrush StartPoint="-7.62846e-006,0.500001" EndPoint="0.999992,0.500001">
                                            <GradientStop Offset="0" Color="#00000000" />
                                            <GradientStop Offset="1" Color="#43000000" />
                                        </LinearGradientBrush>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </Path.Fill>
                        </Path>
                        <Rectangle
                            Grid.Row="1"
                            Grid.Column="2"
                            Margin="0,0,1,0"
                            Stretch="Fill"
                            UseLayoutRounding="True">
                            <Rectangle.Fill>
                                <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.ConverterParameter>
                                        <LinearGradientBrush StartPoint="-7.62846e-006,0.500001" EndPoint="0.999992,0.500001">
                                            <GradientStop Offset="0" Color="#00000000" />
                                            <GradientStop Offset="1" Color="#43000000" />
                                        </LinearGradientBrush>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SteelColumnBar2DModelControl.DefaultStyleBase" TargetType="{x:Type dxc:SteelColumnBar2DModelControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:SteelColumnBar2DModelControl}">
                    <Grid OpacityMask="{Binding OpacityMask}">
                        <Grid.RowDefinitions>
                            <RowDefinition MinHeight="22" MaxHeight="22" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Path
                            Grid.Row="0"
                            Data="F1 M 32,22L 32,16C 32,7.20001 24.8,0 16,0C 7.2,0 0,7.20001 0,16L 0,22 Z"
                            Fill="{Binding Path=PointColor, ConverterParameter=#FF2E2E2E, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                            Stretch="Fill"
                            UseLayoutRounding="True" />
                        <Rectangle
                            Grid.Row="1"
                            Fill="{Binding Path=PointColor, ConverterParameter=#FF2E2E2E, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                            Stretch="Fill"
                            UseLayoutRounding="True" />
                        <Path
                            Grid.Row="0"
                            Margin="1,1,1,0"
                            Data="F1 M 31,22L 31,16C 31,7.75 24.25,1 16,1C 7.75,1 1,7.75 1,16L 1,22 Z"
                            Fill="{TemplateBinding InnerTopBrush}"
                            Stretch="Fill"
                            UseLayoutRounding="True" />
                        <Rectangle
                            Grid.Row="1"
                            Margin="1,0,1,0"
                            Fill="{TemplateBinding InnerBottomBrush}"
                            Stretch="Fill"
                            UseLayoutRounding="True" />
                        <Path
                            Grid.Row="0"
                            Margin="1,1,1,0"
                            Data="F1 M 31,22L 31,16C 31,7.75 24.25,1 16,1C 7.75,1 1,7.75 1,16L 1,22 Z"
                            Stretch="Fill"
                            UseLayoutRounding="True">
                            <Path.Fill>
                                <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.ConverterParameter>
                                        <LinearGradientBrush StartPoint="-5.08626e-007,0.500001" EndPoint="0.999999,0.500001">
                                            <GradientStop Offset="0" Color="#602E2E2E" />
                                            <GradientStop Offset="0.505493" Color="#003A3A3A" />
                                            <GradientStop Offset="1" Color="#603A3A3A" />
                                        </LinearGradientBrush>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </Path.Fill>
                        </Path>
                        <Rectangle
                            Grid.Row="1"
                            Margin="1,0,1,0"
                            Stretch="Fill"
                            UseLayoutRounding="True">
                            <Rectangle.Fill>
                                <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.ConverterParameter>
                                        <LinearGradientBrush StartPoint="-5.08626e-007,0.500001" EndPoint="0.999999,0.500001">
                                            <GradientStop Offset="0" Color="#602E2E2E" />
                                            <GradientStop Offset="0.505493" Color="#003A3A3A" />
                                            <GradientStop Offset="1" Color="#603A3A3A" />
                                        </LinearGradientBrush>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Path
                            Grid.Row="0"
                            Margin="5,2,5,0"
                            Data="F1 M 27,11C 27,15.97 22.075,20 16,20C 9.925,20 5,15.97 5,11C 5,6.02997 9.925,2 16,2C 22.075,2 27,6.02997 27,11 Z"
                            Stretch="Fill"
                            UseLayoutRounding="True">
                            <Path.Fill>
                                <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.ConverterParameter>
                                        <LinearGradientBrush StartPoint="0.498729,0.0271912" EndPoint="0.498729,0.818858">
                                            <GradientStop Offset="0" Color="#5AFFFFFF" />
                                            <GradientStop Offset="1" Color="#00FFFFFF" />
                                        </LinearGradientBrush>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </Path.Fill>
                        </Path>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Quasi3DBar2DModelControl.DefaultStyleBase" TargetType="{x:Type dxc:Quasi3DBar2DModelControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:Quasi3DBar2DModelControl}">
                    <dxc:Pseudo3DBarModelPanel OpacityMask="{Binding OpacityMask}">
                        <Rectangle dxc:Pseudo3DBarModelPanel.Sides="Front">
                            <Rectangle.RenderTransform>
                                <TranslateTransform X="-8" Y="8" />
                            </Rectangle.RenderTransform>
                            <Rectangle.Fill>
                                <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.ConverterParameter>
                                        <LinearGradientBrush StartPoint="0.930344,0.985885" EndPoint="2.24187,0.985885">
                                            <GradientStop Offset="0" Color="#FF7F7F7F" />
                                            <GradientStop Offset="1" Color="#FF5C5C5C" />
                                            <LinearGradientBrush.RelativeTransform>
                                                <RotateTransform Angle="228.47" CenterX="0.930344" CenterY="0.985885" />
                                            </LinearGradientBrush.RelativeTransform>
                                        </LinearGradientBrush>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle Width="8" dxc:Pseudo3DBarModelPanel.Sides="Right">
                            <Rectangle.RenderTransform>
                                <SkewTransform AngleY="-45" CenterX="8" />
                            </Rectangle.RenderTransform>
                            <Rectangle.Fill>
                                <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.ConverterParameter>
                                        <LinearGradientBrush StartPoint="0.187984,0.93578" EndPoint="1.26166,0.93578">
                                            <GradientStop Offset="0" Color="#FF646464" />
                                            <GradientStop Offset="1" Color="#FF484848" />
                                            <LinearGradientBrush.RelativeTransform>
                                                <RotateTransform Angle="-54.4008" CenterX="0.187984" CenterY="0.93578" />
                                            </LinearGradientBrush.RelativeTransform>
                                        </LinearGradientBrush>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle Height="8" dxc:Pseudo3DBarModelPanel.Sides="Top">
                            <Rectangle.RenderTransform>
                                <SkewTransform AngleX="-45" CenterX="23" />
                            </Rectangle.RenderTransform>
                            <Rectangle.Fill>
                                <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.ConverterParameter>
                                        <LinearGradientBrush StartPoint="0.0322886,1.00013" EndPoint="1.40164,1.00013">
                                            <GradientStop Offset="0" Color="#FF909090" />
                                            <GradientStop Offset="1" Color="#FF707070" />
                                            <LinearGradientBrush.RelativeTransform>
                                                <RotateTransform Angle="-46.9092" CenterX="0.0322886" CenterY="1.00013" />
                                            </LinearGradientBrush.RelativeTransform>
                                        </LinearGradientBrush>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </Rectangle.Fill>
                        </Rectangle>
                    </dxc:Pseudo3DBarModelPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GlassCylinderBar2DModelControl.DefaultStyleBase" TargetType="{x:Type dxc:GlassCylinderBar2DModelControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:GlassCylinderBar2DModelControl}">
                    <dxc:Pseudo3DBarModelPanel OpacityMask="{Binding OpacityMask}">
                        <Grid dxc:Pseudo3DBarModelPanel.Sides="Front">
                            <Rectangle Stretch="Fill">
                                <Rectangle.Fill>
                                    <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.ConverterParameter>
                                            <LinearGradientBrush StartPoint="0.499999,0.991151" EndPoint="0.499999,0.00884956">
                                                <GradientStop Offset="0" Color="#FFC1C1C1" />
                                                <GradientStop Offset="0.58" Color="#FF808080" />
                                                <GradientStop Offset="1" Color="#FF525252" />
                                            </LinearGradientBrush>
                                        </Binding.ConverterParameter>
                                    </Binding>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle Stretch="Fill">
                                <Rectangle.Fill>
                                    <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.ConverterParameter>
                                            <LinearGradientBrush StartPoint="-0.00333069,0.500001" EndPoint="1.00666,0.500001">
                                                <GradientStop Offset="0" Color="#5A211E1F" />
                                                <GradientStop Offset="0.5" Color="#00000000" />
                                                <GradientStop Offset="1" Color="#5A221E1F" />
                                            </LinearGradientBrush>
                                        </Binding.ConverterParameter>
                                    </Binding>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle Stretch="Fill">
                                <Rectangle.Fill>
                                    <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.ConverterParameter>
                                            <LinearGradientBrush StartPoint="-0.00333069,0.500001" EndPoint="1.00666,0.500001">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Offset="0" Color="#00FFFFFF" />
                                                    <GradientStop Offset="0.5" Color="#34FFFFFF" />
                                                    <GradientStop Offset="1" Color="#00FFFFFF" />
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Binding.ConverterParameter>
                                    </Binding>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Grid dxc:Pseudo3DBarModelPanel.Sides="Front">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0.1*" />
                                    <ColumnDefinition Width="0.04*" />
                                    <ColumnDefinition Width="0.86*" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Column="1" Stretch="Fill">
                                    <Rectangle.Fill>
                                        <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                            <Binding.ConverterParameter>
                                                <LinearGradientBrush StartPoint="0.499985,1.30536" EndPoint="0.499985,-0.0810542">
                                                    <LinearGradientBrush.GradientStops>
                                                        <GradientStop Offset="0" Color="#00000000" />
                                                        <GradientStop Offset="0.615387" Color="#27221E1F" />
                                                        <GradientStop Offset="0.791214" Color="#27221E1F" />
                                                        <GradientStop Offset="1" Color="#00000000" />
                                                    </LinearGradientBrush.GradientStops>
                                                </LinearGradientBrush>
                                            </Binding.ConverterParameter>
                                        </Binding>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Grid>
                        </Grid>
                        <Grid dxc:Pseudo3DBarModelPanel.Sides="Bottom">
                            <Grid.RenderTransform>
                                <TranslateTransform Y="9" />
                            </Grid.RenderTransform>
                            <Path
                                Height="18"
                                Data="F1 M 50,104C 50,108.971 38.807,113 25,113C 11.193,113 0,108.971 0,104C 0,99.029 11.193,95 25,95C 38.807,95 50,99.029 50,104 Z"
                                Fill="{Binding Path=PointColor, ConverterParameter=#FFC1C1C1, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                                Stretch="Fill" />
                            <Path Data="F1 M 50,104C 50,108.971 38.807,113 25,113C 11.193,113 0,108.971 0,104C 0,99.029 11.193,95 25,95C 38.807,95 50,99.029 50,104 Z" Stretch="Fill">
                                <Path.Fill>
                                    <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.ConverterParameter>
                                            <LinearGradientBrush StartPoint="-0.00333069,0.500001" EndPoint="1.00666,0.500001">
                                                <GradientStop Offset="0" Color="#5A211E1F" />
                                                <GradientStop Offset="0.5" Color="#00000000" />
                                                <GradientStop Offset="1" Color="#5A221E1F" />
                                            </LinearGradientBrush>
                                        </Binding.ConverterParameter>
                                    </Binding>
                                </Path.Fill>
                            </Path>
                            <Path Data="F1 M 50,104C 50,108.971 38.807,113 25,113C 11.193,113 0,108.971 0,104C 0,99.029 11.193,95 25,95C 38.807,95 50,99.029 50,104 Z" Stretch="Fill">
                                <Path.Fill>
                                    <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.ConverterParameter>
                                            <LinearGradientBrush StartPoint="-0.00333069,0.500001" EndPoint="1.00666,0.500001">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Offset="0" Color="#00FFFFFF" />
                                                    <GradientStop Offset="0.5" Color="#34FFFFFF" />
                                                    <GradientStop Offset="1" Color="#00FFFFFF" />
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Binding.ConverterParameter>
                                    </Binding>
                                </Path.Fill>
                            </Path>
                            <Path Height="18" Data="F1 M 50,104C 50,108.971 38.807,113 25,113C 11.193,113 0,108.971 0,104C 0,99.029 11.193,95 25,95C 38.807,95 50,99.029 50,104 Z" Stretch="Fill">
                                <Path.Fill>
                                    <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.ConverterParameter>
                                            <LinearGradientBrush StartPoint="0.499999,-1.35183" EndPoint="0.499999,1.06484">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Offset="0" Color="#5AFFFFFF" />
                                                    <GradientStop Offset="1" Color="#00FFFFFF" />
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Binding.ConverterParameter>
                                    </Binding>
                                </Path.Fill>
                            </Path>
                            <Path
                                Height="9"
                                VerticalAlignment="Top"
                                Data="F1 M 25,0C 11.193,0 0,4.029 0,19L 1,19C 1,15.216 10.856,1 25,1C 39.144,1 49,15.216 49,19L 50,19C 50,4.029 38.807,0 25,0 Z"
                                Stretch="Fill">
                                <Path.Fill>
                                    <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.ConverterParameter>
                                            <RadialGradientBrush Center="0.516659,0.0555623" GradientOrigin="0.516659,0.0555623" RadiusX="0.462956" RadiusY="2.57198">
                                                <RadialGradientBrush.GradientStops>
                                                    <GradientStop Offset="0" Color="#5AFFFFFF" />
                                                    <GradientStop Offset="1" Color="#00FFFFFF" />
                                                </RadialGradientBrush.GradientStops>
                                            </RadialGradientBrush>
                                        </Binding.ConverterParameter>
                                    </Binding>
                                </Path.Fill>
                            </Path>
                            <Grid Height="9" VerticalAlignment="Bottom">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0.1*" />
                                    <ColumnDefinition Width="0.04*" />
                                    <ColumnDefinition Width="0.24*" />
                                    <ColumnDefinition Width="0.08*" />
                                    <ColumnDefinition Width="0.2*" />
                                    <ColumnDefinition Width="0.06*" />
                                    <ColumnDefinition Width="0.04*" />
                                    <ColumnDefinition Width="0.1*" />
                                    <ColumnDefinition Width="0.14*" />
                                </Grid.ColumnDefinitions>
                                <Path
                                    Grid.Column="3"
                                    Data="F1 M 19,8.737C 20.297,8.853 21.633,8.93 23,8.969L 23,0 19,0 19,8.737 Z "
                                    Fill="{TemplateBinding LeftEdgeBaseBrush}"
                                    Stretch="Fill" />
                                <Path
                                    Grid.Column="5"
                                    Data="F1 M 33,8.526C 34.031,8.401 35.034,8.254 36,8.083L 36,0 33,0 33,8.526 Z "
                                    Fill="{TemplateBinding MiddleEdgeBaseBrush}"
                                    Stretch="Fill" />
                                <Path
                                    Grid.Column="7"
                                    Data="F1 M 38,7.688C 39.838,7.285 41.515,6.797 43,6.242L 43,0 38,0 38,7.688 Z "
                                    Fill="{TemplateBinding RightEdgeBaseBrush}"
                                    Stretch="Fill" />
                            </Grid>
                        </Grid>
                        <Grid dxc:Pseudo3DBarModelPanel.Sides="Front">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0.1*" />
                                    <ColumnDefinition Width="0.04*" />
                                    <ColumnDefinition Width="0.24*" />
                                    <ColumnDefinition Width="0.08*" />
                                    <ColumnDefinition Width="0.2*" />
                                    <ColumnDefinition Width="0.06*" />
                                    <ColumnDefinition Width="0.04*" />
                                    <ColumnDefinition Width="0.1*" />
                                    <ColumnDefinition Width="0.14*" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Column="3" Fill="{TemplateBinding LeftEdgeSideSurfaceBrush}" Stretch="Fill" />
                                <Rectangle Grid.Column="5" Fill="{TemplateBinding MiddleEdgeSideSurfaceBrush}" Stretch="Fill" />
                                <Rectangle Grid.Column="7" Fill="{TemplateBinding RightEdgeSideSurfaceBrush}" Stretch="Fill" />
                            </Grid>
                            <Rectangle Stretch="Fill">
                                <Rectangle.Fill>
                                    <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.ConverterParameter>
                                            <RadialGradientBrush Center="0.413339,-0.021403" GradientOrigin="0.413339,-0.021403" RadiusX="0.393259" RadiusY="0.182063">
                                                <RadialGradientBrush.GradientStops>
                                                    <GradientStop Offset="0" Color="#FFDBDBDB" />
                                                    <GradientStop Offset="1" Color="#00FFFFFF" />
                                                </RadialGradientBrush.GradientStops>
                                            </RadialGradientBrush>
                                        </Binding.ConverterParameter>
                                    </Binding>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Grid>
                        <Grid dxc:Pseudo3DBarModelPanel.Sides="Top">
                            <Grid.RenderTransform>
                                <TranslateTransform Y="-9" />
                            </Grid.RenderTransform>
                            <Path
                                Height="18"
                                Data="F1 M 50,4C 50,6.20898 38.807,8 25,8C 11.193,8 0,6.20898 0,4C 0,1.79102 11.193,0 25,0C 38.807,0 50,1.79102 50,4 Z"
                                Fill="{Binding Path=PointColor, ConverterParameter=#FF525252, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                                Stretch="Fill" />
                            <Path Data="F1 M 50,4C 50,6.20898 38.807,8 25,8C 11.193,8 0,6.20898 0,4C 0,1.79102 11.193,0 25,0C 38.807,0 50,1.79102 50,4 Z" Stretch="Fill">
                                <Path.Fill>
                                    <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.ConverterParameter>
                                            <LinearGradientBrush StartPoint="-0.00333069,0.500001" EndPoint="1.00666,0.500001">
                                                <GradientStop Offset="0" Color="#5A211E1F" />
                                                <GradientStop Offset="0.5" Color="#00000000" />
                                                <GradientStop Offset="1" Color="#5A221E1F" />
                                            </LinearGradientBrush>
                                        </Binding.ConverterParameter>
                                    </Binding>
                                </Path.Fill>
                            </Path>
                            <Path Data="F1 M 50,4C 50,6.20898 38.807,8 25,8C 11.193,8 0,6.20898 0,4C 0,1.79102 11.193,0 25,0C 38.807,0 50,1.79102 50,4 Z" Stretch="Fill">
                                <Path.Fill>
                                    <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.ConverterParameter>
                                            <LinearGradientBrush StartPoint="-0.00333069,0.500001" EndPoint="1.00666,0.500001">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Offset="0" Color="#00FFFFFF" />
                                                    <GradientStop Offset="0.5" Color="#34FFFFFF" />
                                                    <GradientStop Offset="1" Color="#00FFFFFF" />
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Binding.ConverterParameter>
                                    </Binding>
                                </Path.Fill>
                            </Path>
                            <Path Height="18" Data="F1 M 50,4C 50,6.20898 38.807,8 25,8C 11.193,8 0,6.20898 0,4C 0,1.79102 11.193,0 25,0C 38.807,0 50,1.79102 50,4 Z" Stretch="Fill">
                                <Path.Fill>
                                    <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.ConverterParameter>
                                            <LinearGradientBrush StartPoint="0.499999,2.52088" EndPoint="0.499999,-0.520813">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Offset="0" Color="#FFDBDBDB" />
                                                    <GradientStop Offset="1" Color="#00FFFFFF" />
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Binding.ConverterParameter>
                                    </Binding>
                                </Path.Fill>
                            </Path>
                            <Path
                                Height="9"
                                VerticalAlignment="Bottom"
                                Data="F1 M 25,8C 11.193,8 0,6.20898 0,4L 0,5.67401C 1.04099,6.41602 3.11301,7.16797                                    7.16501,7.81598C 11.937,8.58002 18.271,9 25,9C 31.729,9 38.063,8.58002 42.836,7.81598C 46.887,7.16797                                    48.959,6.41602 50,5.67401L 50,4C 50,6.20898 38.807,8 25,8 Z "
                                Stretch="Fill">
                                <Path.Fill>
                                    <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.ConverterParameter>
                                            <RadialGradientBrush Center="0.41666,0.9" GradientOrigin="0.41666,0.9" RadiusX="0.540871" RadiusY="5.40869">
                                                <RadialGradientBrush.GradientStops>
                                                    <GradientStop Offset="0" Color="#FFDBDBDB" />
                                                    <GradientStop Offset="1" Color="#00FFFFFF" />
                                                </RadialGradientBrush.GradientStops>
                                            </RadialGradientBrush>
                                        </Binding.ConverterParameter>
                                    </Binding>
                                </Path.Fill>
                            </Path>
                        </Grid>
                    </dxc:Pseudo3DBarModelPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CustomModelControl.DefaultStyleBase" TargetType="{x:Type dxc:CustomModelControl}" />
    <Style x:Key="SimpleCandleStick2DModelControl.DefaultStyleBase" TargetType="{x:Type dxc:SimpleCandleStick2DModelControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:SimpleCandleStick2DModelControl}">
                    <dxc:CandleStick2DModelPanel>
                        <dx:DXBorder
                            dxc:CandleStick2DModelPanel.Elements="Candle"
                            BorderBrush="{Binding Path=PointColor, ConverterParameter=#FF808080, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                            BorderThickness="1"
                            CornerRadius="1">
                            <dx:DXBorder.Background>
                                <SolidColorBrush Color="Transparent" />
                            </dx:DXBorder.Background>
                        </dx:DXBorder>
                        <dx:DXBorder dxc:CandleStick2DModelPanel.Elements="InvertedCandle" CornerRadius="2">
                            <dx:DXBorder.Background>
                                <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.ConverterParameter>
                                        <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStop Offset="0" Color="#FF919191" />
                                                <GradientStop Offset="1" Color="#FF6E6E6E" />
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </dx:DXBorder.Background>
                        </dx:DXBorder>
                        <dx:DXBorder Width="1" dxc:CandleStick2DModelPanel.Elements="TopStick" Background="{Binding Path=PointColor, ConverterParameter=#FF808080, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                        <dx:DXBorder Width="1" dxc:CandleStick2DModelPanel.Elements="BottomStick" Background="{Binding Path=PointColor, ConverterParameter=#FF808080, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                    </dxc:CandleStick2DModelPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BorderCandleStick2DModelControl.DefaultStyleBase" TargetType="{x:Type dxc:BorderCandleStick2DModelControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:BorderCandleStick2DModelControl}">
                    <dxc:CandleStick2DModelPanel>
                        <dx:DXBorder
                            dxc:CandleStick2DModelPanel.Elements="Candle"
                            Background="Transparent"
                            BorderBrush="{Binding Path=PointColor, ConverterParameter=#FF808080, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                            BorderThickness="1"
                            CornerRadius="1" />
                        <dx:DXBorder
                            Padding="1"
                            dxc:CandleStick2DModelPanel.Elements="InvertedCandle"
                            Background="{Binding Path=PointColor, ConverterParameter=#FF808080, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                            CornerRadius="2">
                            <dx:DXBorder CornerRadius="1">
                                <dx:DXBorder.Background>
                                    <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.ConverterParameter>
                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Offset="1" Color="#FFD0D0D0" />
                                                    <GradientStop Offset="0" Color="#FFC4C4C4" />
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Binding.ConverterParameter>
                                    </Binding>
                                </dx:DXBorder.Background>
                            </dx:DXBorder>
                        </dx:DXBorder>
                        <dx:DXBorder Width="1" dxc:CandleStick2DModelPanel.Elements="TopStick" Background="{Binding Path=PointColor, ConverterParameter=#FF808080, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                        <dx:DXBorder Width="1" dxc:CandleStick2DModelPanel.Elements="BottomStick" Background="{Binding Path=PointColor, ConverterParameter=#FF808080, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                    </dxc:CandleStick2DModelPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ThinCandleStick2DModelControl.DefaultStyleBase" TargetType="{x:Type dxc:ThinCandleStick2DModelControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:ThinCandleStick2DModelControl}">
                    <dxc:CandleStick2DModelPanel>
                        <dx:DXBorder
                            dxc:CandleStick2DModelPanel.Elements="Candle"
                            Background="Transparent"
                            BorderBrush="{Binding Path=PointColor, ConverterParameter=#FF808080, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                            BorderThickness="1" />
                        <dx:DXBorder dxc:CandleStick2DModelPanel.Elements="InvertedCandle" Background="{Binding Path=PointColor, ConverterParameter=#FF808080, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                        <dx:DXBorder Width="1" dxc:CandleStick2DModelPanel.Elements="TopStick" Background="{Binding Path=PointColor, ConverterParameter=#FF808080, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                        <dx:DXBorder Width="1" dxc:CandleStick2DModelPanel.Elements="BottomStick" Background="{Binding Path=PointColor, ConverterParameter=#FF808080, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                    </dxc:CandleStick2DModelPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FlatCandleStick2DModelControl.DefaultStyleBase" TargetType="{x:Type dxc:FlatCandleStick2DModelControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:FlatCandleStick2DModelControl}">
                    <dxc:CandleStick2DModelPanel>
                        <dx:DXBorder
                            dxc:CandleStick2DModelPanel.Elements="Candle"
                            Background="Transparent"
                            BorderBrush="{Binding Path=PointColor, ConverterParameter=#FF808080, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                            BorderThickness="3" />
                        <dx:DXBorder dxc:CandleStick2DModelPanel.Elements="InvertedCandle" Background="{Binding Path=PointColor, ConverterParameter=#FF808080, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                        <dx:DXBorder Width="3" dxc:CandleStick2DModelPanel.Elements="TopStick" Background="{Binding Path=PointColor, ConverterParameter=#FF808080, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                        <dx:DXBorder Width="3" dxc:CandleStick2DModelPanel.Elements="BottomStick" Background="{Binding Path=PointColor, ConverterParameter=#FF808080, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                    </dxc:CandleStick2DModelPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GlassCandleStick2DModelControl.DefaultStyleBase" TargetType="{x:Type dxc:GlassCandleStick2DModelControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:GlassCandleStick2DModelControl}">
                    <dxc:CandleStick2DModelPanel>
                        <dx:DXBorder
                            dxc:CandleStick2DModelPanel.Elements="Candle"
                            BorderBrush="{Binding Path=PointColor, ConverterParameter=#FF808080, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                            BorderThickness="1"
                            CornerRadius="1">
                            <dx:DXBorder.Background>
                                <SolidColorBrush Color="Transparent" />
                            </dx:DXBorder.Background>
                        </dx:DXBorder>
                        <dx:DXBorder dxc:CandleStick2DModelPanel.Elements="InvertedCandle" CornerRadius="2">
                            <dx:DXBorder.Background>
                                <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.ConverterParameter>
                                        <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStop Offset="0" Color="#FFA1A1A1" />
                                                <GradientStop Offset="0.5" Color="#FF848484" />
                                                <GradientStop Offset="0.5" Color="#FF707070" />
                                                <GradientStop Offset="1" Color="#FF707070" />
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </dx:DXBorder.Background>
                        </dx:DXBorder>
                        <dx:DXBorder Width="1" dxc:CandleStick2DModelPanel.Elements="TopStick" Background="{Binding Path=PointColor, ConverterParameter=#FF808080, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                        <dx:DXBorder Width="1" dxc:CandleStick2DModelPanel.Elements="BottomStick" Background="{Binding Path=PointColor, ConverterParameter=#FF808080, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                    </dxc:CandleStick2DModelPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SelectionControl.DefaultStyleBase" TargetType="{x:Type dxc:SelectionControl}">
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxc:SelectionControl">
                    <Grid x:Name="root" Visibility="Collapsed">
                        <Rectangle
                            x:Name="shape"
                            Margin="-4"
                            Fill="#204ACBFC"
                            RadiusX="4"
                            RadiusY="4"
                            Stroke="#FF4ACBFC"
                            StrokeThickness="3" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Highlighted">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="root" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ColorAnimation Storyboard.TargetName="shape" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" To="#20FF0000" Duration="0:0:0" />
                                        <ColorAnimation Storyboard.TargetName="shape" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" To="#FFFF0000" Duration="0:0:0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="root" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SelectionPresentation.DefaultStyleBase" TargetType="{x:Type dxc:SelectionPresentation}">
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:SelectionPresentation}">
                    <Canvas x:Name="root" Visibility="Collapsed">
                        <Path
                            x:Name="shape"
                            Data="{Binding Path=SelectionGeometryItem.Geometry, Converter={StaticResource selectionListRectToGeometryConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                            Fill="#204ACBFC"
                            Stroke="#FF4ACBFC"
                            StrokeThickness="3" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Highlighted">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="root" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ColorAnimation Storyboard.TargetName="shape" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" To="#20FF0000" Duration="0:0:0" />
                                        <ColorAnimation Storyboard.TargetName="shape" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" To="#FFFF0000" Duration="0:0:0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="root" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SelectionGeometryControl.DefaultStyleBase" TargetType="{x:Type dxc:SelectionGeometryControl}">
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:SelectionGeometryControl}">
                    <Canvas x:Name="root" Visibility="Collapsed">
                        <Path
                            x:Name="shape"
                            Data="{Binding Path=Geometry, Converter={StaticResource selectionListRectToGeometryConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                            Fill="#204ACBFC"
                            Stroke="#FF4ACBFC"
                            StrokeThickness="3" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Highlighted">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="root" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ColorAnimation Storyboard.TargetName="shape" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" To="#20FF0000" Duration="0:0:0" />
                                        <ColorAnimation Storyboard.TargetName="shape" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" To="#FFFF0000" Duration="0:0:0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="root" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NavigationLayer.DefaultStyleBase" TargetType="{x:Type dxc:NavigationLayer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:NavigationLayer}">
                    <Grid IsHitTestVisible="False">
                        <ContentPresenter x:Name="PART_Selection" ContentTemplate="{Binding SelectionTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
                        <Canvas>
                            <Image
                                x:Name="PART_Cursor"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                Cursor="None"
                                IsHitTestVisible="False"
                                Stretch="None" />
                        </Canvas>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ChartControl.DefaultStyleBase" TargetType="{x:Type dxc:ChartControl}">
        <Setter Property="ClipToBounds" Value="True" />
        <Setter Property="Background" Value="{DynamicResource {dxct:LWKey ChartBrushes.ChartBackgroundBrush}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxct:LWKey ChartBrushes.ChartBorderBrush}}" />
        <Setter Property="BorderThickness" Value="{DynamicResource {dxct:LWKey ChartControl.ChartBorderThickness}}" />
        <Setter Property="Padding" Value="{DynamicResource {dxct:LWKey ChartControl.ChartPaddingValue}}" />
        <Setter Property="CrosshairSeriesLabelItemTemplate" Value="{DynamicResource {dxct:LWKey ChartControl.CrosshairSeriesLabelTemplate}}" />
        <Setter Property="CrosshairSeriesLabelPrintingTemplate" Value="{DynamicResource {dxct:LWKey ChartControl.CrosshairSeriesLabelPrintingTemplate}}" />
        <Setter Property="FocusManager.IsFocusScope" Value="True" />
        <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Cycle" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once" />
        <Setter Property="AutomationProperties.Name" Value="ChartControl" />
        <Setter Property="BreadcrumbItemTemplate" Value="{StaticResource BreadcrumbItemDefaultTemplate}" />
        <Setter Property="Palette">
            <Setter.Value>
                <dxc:OfficePalette />
            </Setter.Value>
        </Setter>
        <Setter Property="IndicatorsPalette">
            <Setter.Value>
                <dxc:DefaultIndicatorsPalette />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:ChartControl}">
                    <dxc:ChartBaseLayoutElement>
                        <dxc:ChartContentControl
                            x:Name="ChartWrapper"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Template="{DynamicResource {dxct:LWKey ChartControl.ChartWrapperTemplate}}">
                            <DockPanel LastChildFill="True">
                                <dxc:ChartBreadcrumbControl
                                    HorizontalAlignment="Left"
                                    DockPanel.Dock="Top"
                                    ItemsSource="{Binding Path=Diagram.BreadcrumbItems, RelativeSource={RelativeSource TemplatedParent}}"
                                    Visibility="{Binding Path=Diagram.IsDrillDownEnabled, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
                                <dxc:TitlesLayoutControl Titles="{TemplateBinding Titles}">
                                    <dxc:TitlesLayoutControl.MasterElement>
                                        <dxc:ChartElementItemsControl x:Name="ChartElements" Diagram="{TemplateBinding Diagram}">
                                            <dxc:ChartElementItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <dxc:ChartElementPanel />
                                                </ItemsPanelTemplate>
                                            </dxc:ChartElementItemsControl.ItemsPanel>
                                        </dxc:ChartElementItemsControl>
                                    </dxc:TitlesLayoutControl.MasterElement>
                                </dxc:TitlesLayoutControl>
                            </DockPanel>
                        </dxc:ChartContentControl>
                        <dxc:ChartItemsControl x:Name="PART_Annotations" ItemsSource="{Binding ChartAnnotations, RelativeSource={RelativeSource TemplatedParent}}">
                            <dxc:ChartItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <dxc:AnnotationLayoutPanel />
                                </ItemsPanelTemplate>
                            </dxc:ChartItemsControl.ItemsPanel>
                        </dxc:ChartItemsControl>
                        <dxc:NavigationLayer x:Name="PART_NavigationLayer" SupportNavigationControl="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
                        <Grid x:Name="PART_CrosshairLabelsContainer" DataContext="{TemplateBinding Diagram}" IsHitTestVisible="False">
                            <dxc:ChartItemsControl ItemsSource="{Binding CrosshairAxisLabelItems}">
                                <dxc:ChartItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <dxc:CrosshairAxisLabelsPanel />
                                    </ItemsPanelTemplate>
                                </dxc:ChartItemsControl.ItemsPanel>
                                <dxc:ChartItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <ContentPresenter Content="{Binding}" ContentTemplate="{DynamicResource {dxct:LWKey ChartControl.CrosshairAxisLabelTemplate}}" />
                                    </DataTemplate>
                                </dxc:ChartItemsControl.ItemTemplate>
                            </dxc:ChartItemsControl>
                            <dxc:ChartItemsControl ItemTemplate="{TemplateBinding CrosshairSeriesLabelItemTemplate}" ItemsSource="{Binding CrosshairSeriesLabelItems}">
                                <dxc:ChartItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <dxc:CrosshairLabelsPanel AutomationProperties.AutomationId="Crosshair" />
                                    </ItemsPanelTemplate>
                                </dxc:ChartItemsControl.ItemsPanel>
                            </dxc:ChartItemsControl>
                        </Grid>
                        <dxc:ToolTipControl x:Name="PART_ToolTip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" ToolTipItem="{TemplateBinding ToolTipItem}" />
                    </dxc:ChartBaseLayoutElement>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BreadcrumbItemPresentation.DefaultStyleBase" TargetType="dxc:BreadcrumbItemPresentation">
        <Setter Property="ContentTemplate" Value="{Binding RelativeSource={RelativeSource AncestorType=dxc:ChartControl}, Path=BreadcrumbItemTemplate}" />
    </Style>
    <Style x:Key="ChartBreadcrumbControl.DefaultStyleBase" TargetType="{x:Type dxc:ChartBreadcrumbControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:ChartBreadcrumbControl}">
                    <dxc:ChartBreadcrumbItemsControl x:Name="PART_ChartBreadcrumbItemsControl" Background="Transparent" ItemsSource="{TemplateBinding ItemsSource}">
                        <dxc:ChartBreadcrumbItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel x:Name="chartBreadcrumbControlPanel" Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </dxc:ChartBreadcrumbItemsControl.ItemsPanel>
                    </dxc:ChartBreadcrumbItemsControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadarDiagram2D.DefaultStyleBase" BasedOn="{StaticResource CircularDiagramStyle}" TargetType="{x:Type dxc:RadarDiagram2D}" />
    <Style x:Key="PolarDiagram2D.DefaultStyleBase" BasedOn="{StaticResource CircularDiagramStyle}" TargetType="{x:Type dxc:PolarDiagram2D}" />
    <Style x:Key="SurfaceSeriesView.DefaultStyleBase" TargetType="{x:Type dxc:SurfaceSeriesView}">
        <Setter Property="LegendMarkerTemplate" Value="{StaticResource AreaSplineSeriesLegendMarkerTemplate}" />
    </Style>
    <Style x:Key="Bar3DSeriesView.DefaultStyleBase" TargetType="{x:Type dxc:Bar3DSeriesView}">
        <Setter Property="LegendMarkerTemplate" Value="{StaticResource BarSeriesLegendMarkerTemplate}" />
    </Style>
    <Style x:Key="Point3DSeriesView.DefaultStyleBase" TargetType="{x:Type dxc:Point3DSeriesView}">
        <Setter Property="LegendMarkerTemplate" Value="{StaticResource MarkerSeriesLegendMarkerTemplate}" />
    </Style>
    <Style x:Key="Bubble3DSeriesView.DefaultStyleBase" TargetType="{x:Type dxc:Bubble3DSeriesView}">
        <Setter Property="LegendMarkerTemplate" Value="{StaticResource MarkerSeriesLegendMarkerTemplate}" />
    </Style>
    <Style x:Key="SimpleDiagram2D.DefaultStyleBase" TargetType="{x:Type dxc:SimpleDiagram2D}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Annotations" Value="{Binding Path=(dxc:ChartControlBase.Chart).DiagramAnnotations, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:Diagram}">
                    <dxc:ChartContentControl
                        x:Name="SimpleDiagram2DWrapper"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Template="{DynamicResource {dxct:LWKey ChartControl.SimpleDiagram2DWrapperTemplate}}"
                        Visibility="{TemplateBinding Visibility}">
                        <Grid>
                            <dxc:SeriesTemplateHolderControl x:Name="PART_SeriesTemplateHolder" Content="{TemplateBinding SeriesTemplate}" />
                            <dxc:ChartItemsControl x:Name="PART_LogicalTreeHolder" />
                            <dxc:ChartItemsControl x:Name="PART_SeriesHolder" ItemsSource="{TemplateBinding Series}" />

                            <dxc:SimpleDiagram2DItemsControl Diagram="{Binding RelativeSource={RelativeSource TemplatedParent}}" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Items}">
                                <dxc:SimpleDiagram2DItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <dxc:SimpleDiagram2DPanel />
                                    </ItemsPanelTemplate>
                                </dxc:SimpleDiagram2DItemsControl.ItemsPanel>
                            </dxc:SimpleDiagram2DItemsControl>
                            <dxc:ChartItemsControl ItemsSource="{TemplateBinding Annotations}">
                                <dxc:ChartItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <dxc:AnnotationLayoutPanel />
                                    </ItemsPanelTemplate>
                                </dxc:ChartItemsControl.ItemsPanel>
                            </dxc:ChartItemsControl>
                            <dxc:SelectionControl IsHighlighted="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectionInfo.IsHighlighted}" IsSelected="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectionInfo.IsSelected}" />
                        </Grid>
                    </dxc:ChartContentControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RegressionLine.DefaultStyleBase" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="dxc:RegressionLine" />
    <Style x:Key="ExponentialRegression.DefaultStyleBase" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="dxc:ExponentialRegression" />
    <Style x:Key="LogarithmicRegression.DefaultStyleBase" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="dxc:LogarithmicRegression" />
    <Style x:Key="PowerRegression.DefaultStyleBase" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="dxc:PowerRegression" />
    <Style x:Key="PolynomialRegression.DefaultStyleBase" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="dxc:PolynomialRegression" />
    <Style x:Key="FibonacciRetracement.DefaultStyleBase" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="dxc:FibonacciRetracement" />
    <Style x:Key="FibonacciFans.DefaultStyleBase" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="dxc:FibonacciFans" />
    <Style x:Key="FibonacciArcs.DefaultStyleBase" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="dxc:FibonacciArcs" />
    <Style x:Key="TrendLine.DefaultStyleBase" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="dxc:TrendLine" />
    <Style x:Key="SimpleMovingAverage.DefaultStyleBase" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="dxc:SimpleMovingAverage" />
    <Style x:Key="WeightedMovingAverage.DefaultStyleBase" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="dxc:WeightedMovingAverage" />
    <Style x:Key="ExponentialMovingAverage.DefaultStyleBase" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="dxc:ExponentialMovingAverage" />
    <Style x:Key="TriangularMovingAverage.DefaultStyleBase" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="dxc:TriangularMovingAverage" />
    <Style x:Key="TripleExponentialMovingAverageTema.DefaultStyleBase" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="dxc:TripleExponentialMovingAverageTema" />
    <Style x:Key="AverageTrueRange.DefaultStyleBase" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="dxc:AverageTrueRange" />
    <Style x:Key="ChaikinsVolatility.DefaultStyleBase" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="dxc:ChaikinsVolatility" />
    <Style x:Key="CommodityChannelIndex.DefaultStyleBase" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="dxc:CommodityChannelIndex" />
    <Style x:Key="DetrendedPriceOscillator.DefaultStyleBase" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="dxc:DetrendedPriceOscillator" />
    <Style x:Key="MassIndex.DefaultStyleBase" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="dxc:MassIndex" />
    <Style x:Key="MovingAverageConvergenceDivergence.DefaultStyleBase" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="dxc:MovingAverageConvergenceDivergence" />
    <Style x:Key="RateOfChange.DefaultStyleBase" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="dxc:RateOfChange" />
    <Style x:Key="RelativeStrengthIndex.DefaultStyleBase" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="dxc:RelativeStrengthIndex" />
    <Style x:Key="StandardDeviation.DefaultStyleBase" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="dxc:StandardDeviation" />
    <Style x:Key="TripleExponentialMovingAverageTrix.DefaultStyleBase" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="dxc:TripleExponentialMovingAverageTrix" />
    <Style x:Key="WilliamsR.DefaultStyleBase" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="dxc:WilliamsR" />
    <Style x:Key="BollingerBands.DefaultStyleBase" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="dxc:BollingerBands" />
    <Style x:Key="TypicalPrice.DefaultStyleBase" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="dxc:TypicalPrice" />
    <Style x:Key="WeightedClose.DefaultStyleBase" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="dxc:WeightedClose" />
    <Style x:Key="MedianPrice.DefaultStyleBase" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="dxc:MedianPrice" />
    <Style x:Key="FixedValueErrorBars.DefaultStyleBase" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="dxc:FixedValueErrorBars" />
    <Style x:Key="PercentageErrorBars.DefaultStyleBase" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="dxc:PercentageErrorBars" />
    <Style x:Key="StandardErrorBars.DefaultStyleBase" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="dxc:StandardErrorBars" />
    <Style x:Key="StandardDeviationErrorBars.DefaultStyleBase" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="dxc:StandardDeviationErrorBars" />
    <Style x:Key="DataSourceBasedErrorBars.DefaultStyleBase" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="dxc:DataSourceBasedErrorBars" />
    <Style x:Key="IndicatorPresentation.DefaultStyleBase" TargetType="{x:Type dxc:IndicatorPresentation}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:IndicatorPresentation}">
                    <dxc:FastPath
                        x:Name="PART_IndicatorPath"
                        Clip="{Binding Path=AnimationClip}"
                        Data="{Binding Geometry}"
                        RenderTransform="{Binding Path=AnimationTransform}"
                        SnapsToDevicePixels="True"
                        Stroke="{Binding Brush}"
                        StrokeDashArray="{Binding LineStyle.DashStyle.Dashes}"
                        StrokeDashCap="{Binding LineStyle.DashCap}"
                        StrokeDashOffset="{Binding LineStyle.DashStyle.Offset}"
                        StrokeLineJoin="{Binding LineStyle.LineJoin}"
                        StrokeMiterLimit="{Binding LineStyle.MiterLimit}"
                        StrokeThickness="{Binding ActualLineThickness}"
                        Visibility="{Binding Visible, Converter={StaticResource boolToVisibilityConverter}, Mode=OneWay}" />
                    <!--<dxc:IndicatorRenderControl x:Name="PART_IndicatorPath"
                        Geometry ="{Binding Path=Geometry}"
                        Geometries="{Binding Path=Geometries}"
                        Clip ="{Binding Path=AnimationClip}"
                        AnimationTransform ="{Binding Path=AnimationTransform}"
                        Brush="{Binding Path=Brush}"
                        Thickness="{Binding Path=ActualLineThickness}"
                        LineStyle="{Binding Path=LineStyle}"
                        Visibility="{Binding Visible, Converter={StaticResource boolToVisibilityConverter}, Mode=OneWay}"/>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="IndicatorLabelPresentation.DefaultStyleBase" TargetType="{x:Type dxc:IndicatorLabelPresentation}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:IndicatorLabelPresentation}">
                    <dxc:ChartContentPresenter
                        Content="{Binding Path=LabelItem.Text, RelativeSource={RelativeSource TemplatedParent}}"
                        ContentTemplate="{Binding Path=Indicator.Item.Label.ElementTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                        TextElement.FontFamily="{Binding Path=Indicator.Item.Label.FontFamily, RelativeSource={RelativeSource TemplatedParent}}"
                        TextElement.FontSize="{Binding Path=Indicator.Item.Label.FontSize, RelativeSource={RelativeSource TemplatedParent}}"
                        TextElement.FontStretch="{Binding Path=Indicator.Item.Label.FontStretch, RelativeSource={RelativeSource TemplatedParent}}"
                        TextElement.FontStyle="{Binding Path=Indicator.Item.Label.FontStyle, RelativeSource={RelativeSource TemplatedParent}}"
                        TextElement.FontWeight="{Binding Path=Indicator.Item.Label.FontWeight, RelativeSource={RelativeSource TemplatedParent}}"
                        TextElement.Foreground="{Binding Path=Indicator.Item.Label.Foreground, RelativeSource={RelativeSource TemplatedParent}}">
                        <dxc:ChartContentPresenter.Visibility>
                            <MultiBinding Converter="{StaticResource indicatorLabelVisibilityConverter}">
                                <Binding Path="Indicator.Item.AnimationState" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="Indicator.Item.Visible" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding>
                        </dxc:ChartContentPresenter.Visibility>
                    </dxc:ChartContentPresenter>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DateTimeChartRangeControlClient.DefaultStyleBase" BasedOn="{StaticResource RangeControlClientStyle}" TargetType="{x:Type dxcr:DateTimeChartRangeControlClient}">
        <Setter Property="ArgumentLabelFormatString" Value="{}{0:d}" />
        <Setter Property="ThumbLabelFormatString" Value="{}{0:d}" />
    </Style>
    <Style x:Key="TimeSpanChartRangeControlClient.DefaultStyleBase" BasedOn="{StaticResource RangeControlClientStyle}" TargetType="{x:Type dxcr:TimeSpanChartRangeControlClient}">
        <Setter Property="ArgumentLabelFormatString" Value="{}{0:g}" />
        <Setter Property="ThumbLabelFormatString" Value="{}{0:g}" />
    </Style>
    <Style x:Key="NumericChartRangeControlClient.DefaultStyleBase" BasedOn="{StaticResource RangeControlClientStyle}" TargetType="{x:Type dxcr:NumericChartRangeControlClient}">
        <Setter Property="ArgumentLabelFormatString" Value="{}{0}" />
        <Setter Property="ThumbLabelFormatString" Value="{}{0}" />
    </Style>
    <Style x:Key="ChartBoundRangeControlClient.DefaultStyleBase" BasedOn="{StaticResource ChartRangeControlClientBaseStyle}" TargetType="{x:Type dxcr:ChartBoundRangeControlClient}">
        <Setter Property="ThumbLabelFormatString" Value="{}{0}" />
    </Style>
    <Style x:Key="RangeControlClientLineView.DefaultStyleBase" BasedOn="{StaticResource RangeControlClientViewKey}" TargetType="{x:Type dxcr:RangeControlClientLineView}">
        <Setter Property="ShowMarkers" Value="True" />
        <Setter Property="MarkerSize" Value="5" />
        <Setter Property="MarkerBrush" Value="{DynamicResource {dxct:LWKey ChartBrushes.RangeControlClientViewMarkerBrush}}" />
    </Style>
    <Style x:Key="RangeControlClientAreaView.DefaultStyleBase" BasedOn="{StaticResource RangeControlClientViewKey}" TargetType="{x:Type dxcr:RangeControlClientAreaView}">
        <Setter Property="ShowMarkers" Value="False" />
        <Setter Property="MarkerSize" Value="5" />
        <Setter Property="MarkerBrush" Value="{DynamicResource {dxct:LWKey ChartBrushes.RangeControlClientViewMarkerBrush}}" />
        <Setter Property="AreaOpacity" Value="0.5" />
    </Style>
    <Style x:Key="RangeControlClientBarView.DefaultStyleBase" BasedOn="{StaticResource RangeControlClientViewKey}" TargetType="{x:Type dxcr:RangeControlClientBarView}">
        <Setter Property="BarDistance" Value="2" />
    </Style>
    <Style x:Key="XYDiagram3D.DefaultStyleBase" BasedOn="{StaticResource Diagram3DStyle}" TargetType="{x:Type dxc:XYDiagram3D}">
        <Setter Property="DomainBrush" Value="{DynamicResource {dxct:LWKey ChartBrushes.Domain3DBrush}}" />
        <Setter Property="Annotations" Value="{Binding Path=(dxc:ChartControlBase.Chart).DiagramAnnotations, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxc:XYDiagram3D">
                    <dxc:ChartContentControl
                        x:Name="XYDiagram3DWrapper"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Template="{DynamicResource {dxct:LWKey ChartControl.XYDiagram3DWrapperTemplate}}"
                        Visibility="{TemplateBinding Visibility}">
                        <Grid>
                            <dxc:VisualContainer Diagram="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
                            <dxc:ChartItemsControl ItemsSource="{TemplateBinding Annotations}">
                                <dxc:ChartItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <dxc:AnnotationLayoutPanel />
                                    </ItemsPanelTemplate>
                                </dxc:ChartItemsControl.ItemsPanel>
                            </dxc:ChartItemsControl>
                            <dxc:SelectionControl IsHighlighted="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectionInfo.IsHighlighted}" IsSelected="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectionInfo.IsSelected}" />
                        </Grid>
                    </dxc:ChartContentControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SimpleDiagram3D.DefaultStyleBase" BasedOn="{StaticResource Diagram3DStyle}" TargetType="{x:Type dxc:SimpleDiagram3D}">
        <Setter Property="dxc:XYDiagram3D.Material" Value="{StaticResource DefaultXYDiagramMaterial}" />
        <Setter Property="Annotations" Value="{Binding Path=(dxc:ChartControlBase.Chart).DiagramAnnotations, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:SimpleDiagram3D}">
                    <dxc:ChartContentControl
                        x:Name="SimpleDiagram3DWrapper"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Template="{DynamicResource {dxct:LWKey ChartControl.SimpleDiagram3DWrapperTemplate}}"
                        Visibility="{TemplateBinding Visibility}">
                        <Grid>
                            <dxc:SimpleDiagramItemsControl DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" ItemsSource="{TemplateBinding Series}">
                                <dxc:SimpleDiagramItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <dxc:SimpleDiagramPanel SimpleDiagram="{Binding}" />
                                    </ItemsPanelTemplate>
                                </dxc:SimpleDiagramItemsControl.ItemsPanel>
                                <dxc:SimpleDiagramItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <dxc:TitlesLayoutControl Titles="{Binding Path=Content.Titles, RelativeSource={RelativeSource TemplatedParent}}">
                                            <dxc:TitlesLayoutControl.MasterElement>
                                                <dxc:VisualContainer Diagram="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxc:Diagram}}}" />
                                            </dxc:TitlesLayoutControl.MasterElement>
                                        </dxc:TitlesLayoutControl>
                                    </DataTemplate>
                                </dxc:SimpleDiagramItemsControl.ItemTemplate>
                            </dxc:SimpleDiagramItemsControl>
                            <dxc:ChartItemsControl ItemsSource="{TemplateBinding Annotations}">
                                <dxc:ChartItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <dxc:AnnotationLayoutPanel />
                                    </ItemsPanelTemplate>
                                </dxc:ChartItemsControl.ItemsPanel>
                            </dxc:ChartItemsControl>
                            <dxc:SelectionControl IsHighlighted="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectionInfo.IsHighlighted}" IsSelected="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectionInfo.IsSelected}" />
                        </Grid>
                    </dxc:ChartContentControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BorderlessSimpleMarker2DModelControl.DefaultStyleBase" TargetType="{x:Type dxc:BorderlessSimpleMarker2DModelControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:BorderlessSimpleMarker2DModelControl}">
                    <Ellipse
                        Fill="{Binding Path=PointColor, ConverterParameter=#FF808080, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                        Opacity="{Binding Path=Opacity}"
                        OpacityMask="{Binding OpacityMask}"
                        Stretch="Uniform"
                        StrokeThickness="0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SimpleMarker2DModelControl.DefaultStyleBase" TargetType="{x:Type dxc:SimpleMarker2DModelControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:SimpleMarker2DModelControl}">
                    <Ellipse
                        Fill="{Binding Path=PointColor, ConverterParameter=#FF808080, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                        Opacity="{Binding Path=Opacity}"
                        OpacityMask="{Binding OpacityMask}"
                        Stretch="Uniform"
                        Stroke="{Binding Path=PointColor, ConverterParameter=#FF6B6B6B, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PolygonMarker2DModelControl.DefaultStyleBase" TargetType="{x:Type dxc:PolygonMarker2DModelControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:PolygonMarker2DModelControl}">
                    <Grid OpacityMask="{Binding OpacityMask}">
                        <Path Data="F1 M 417,1102L 417,1108L 423,1112L 429,1108L 429,1102L 423,1098L 417,1102 Z" Opacity="{Binding Path=Opacity}" Stretch="Uniform">
                            <Path.Fill>
                                <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.ConverterParameter>
                                        <LinearGradientBrush StartPoint="0.126788,0.201497" EndPoint="1.0826,0.201497">
                                            <LinearGradientBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <SkewTransform AngleX="-12.6804" AngleY="0" CenterX="0.126788" CenterY="0.201497" />
                                                    <RotateTransform Angle="38.66" CenterX="0.126788" CenterY="0.201497" />
                                                </TransformGroup>
                                            </LinearGradientBrush.RelativeTransform>
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStop Offset="0" Color="#FF929292" />
                                                <GradientStop Offset="1" Color="#FF6E6E6E" />
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </Path.Fill>
                        </Path>
                        <Path
                            Data="F1 M 417,1102L 417,1108L 423,1112L 429,1108L 429,1102L 423,1098L 417,1102 Z"
                            Stretch="Uniform"
                            Stroke="{Binding Path=PointColor, ConverterParameter=#FF6B6B6B, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                            StrokeLineJoin="Round" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CustomPie2DModelControl.DefaultStyleBase" TargetType="{x:Type dxc:CustomPie2DModelControl}">
        <Setter Property="Flipped" Value="False" />
    </Style>
    <Style x:Key="BorderlessFlatPie2DModelControl.DefaultStyleBase" BasedOn="{StaticResource pie2DModelControlSyleBase}" TargetType="{x:Type dxc:BorderlessFlatPie2DModelControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:BorderlessFlatPie2DModelControl}">
                    <Ellipse Fill="{Binding Path=PointColor, ConverterParameter=#FF808080, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}" OpacityMask="{Binding OpacityMask}" Stretch="Fill" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GlarePie2DModelControl.DefaultStyleBase" BasedOn="{StaticResource pie2DModelControlSyleBase}" TargetType="{x:Type dxc:GlarePie2DModelControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:GlarePie2DModelControl}">
                    <Grid OpacityMask="{Binding OpacityMask}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.252037*" />
                            <ColumnDefinition Width="0.032*" />
                            <ColumnDefinition Width="0.022499*" />
                            <ColumnDefinition Width="0.0680174*" />
                            <ColumnDefinition Width="0.4291046*" />
                            <ColumnDefinition Width="0.036*" />
                            <ColumnDefinition Width="0.170*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.164617*" />
                            <RowDefinition Height="0.0286*" />
                            <RowDefinition Height="0.032*" />
                            <RowDefinition Height="0.0114*" />
                            <RowDefinition Height="0.14537*" />
                            <RowDefinition Height="0.036*" />
                            <RowDefinition Height="0.592*" />
                        </Grid.RowDefinitions>
                        <Ellipse Grid.RowSpan="8" Grid.ColumnSpan="8" Stretch="Fill">
                            <Ellipse.Fill>
                                <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.ConverterParameter>
                                        <RadialGradientBrush Center="0.359438,0.614458" GradientOrigin="0.359438,0.614458" RadiusX="0.684601" RadiusY="0.684601">
                                            <RadialGradientBrush.GradientStops>
                                                <GradientStop Offset="0" Color="#FFC4C4C4" />
                                                <GradientStop Offset="1" Color="#FF5E5E5E" />
                                            </RadialGradientBrush.GradientStops>
                                            <RadialGradientBrush.RelativeTransform>
                                                <TransformGroup />
                                            </RadialGradientBrush.RelativeTransform>
                                        </RadialGradientBrush>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </Ellipse.Fill>
                        </Ellipse>
                        <Path
                            Grid.Row="2"
                            Grid.RowSpan="1"
                            Grid.Column="1"
                            Grid.ColumnSpan="1"
                            Data="F1 M 140.853,100.899C 142.075,104.857 139.858,109.056 135.9,110.278C 131.942,111.501 127.743,109.283                                  126.521,105.326C 125.298,101.368 127.516,97.1689 131.474,95.9459C 135.431,94.7239 139.63,96.9409 140.853,100.899 Z "
                            Fill="{Binding Path=PointColor, ConverterParameter=#27FFFFFF, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                            Stretch="Fill" />
                        <Path
                            Grid.Row="1"
                            Grid.RowSpan="3"
                            Grid.Column="3"
                            Grid.ColumnSpan="1"
                            Data="F1 M 183.708,93.9419C 186.398,102.649 181.519,111.887 172.813,114.576C 164.105,117.266 154.867,112.387                                  152.178,103.681C 149.489,94.9739 154.367,85.735 163.073,83.0459C 171.781,80.3568 181.019,85.235 183.708,93.9419 Z "
                            Fill="{Binding Path=PointColor, ConverterParameter=#27FFFFFF, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                            Stretch="Fill" />
                        <Path
                            Grid.Row="5"
                            Grid.RowSpan="1"
                            Grid.Column="5"
                            Grid.ColumnSpan="1"
                            Data="F1 M 415,195.5C 415,200.194 411.194,204 406.5,204C 401.806,204 398,200.194 398,195.5C 398,190.806 401.806,187                                  406.5,187C 411.194,187 415,190.806 415,195.5 Z "
                            Fill="{Binding Path=PointColor, ConverterParameter=#27FFFFFF, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                            Stretch="Fill" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SimplePie2DModelControl.DefaultStyleBase" BasedOn="{StaticResource pie2DModelControlSyleBase}" TargetType="{x:Type dxc:SimplePie2DModelControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:SimplePie2DModelControl}">
                    <Ellipse OpacityMask="{Binding OpacityMask}" Stretch="Fill" StrokeThickness="1">
                        <Ellipse.Stroke>
                            <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                <Binding.ConverterParameter>
                                    <LinearGradientBrush StartPoint="0.140451,0.145544" EndPoint="0.846451,0.841544">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0" Color="#FFB0B0B0" />
                                            <GradientStop Offset="1" Color="#FF262626" />
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Binding.ConverterParameter>
                            </Binding>
                        </Ellipse.Stroke>
                        <Ellipse.Fill>
                            <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                <Binding.ConverterParameter>
                                    <LinearGradientBrush StartPoint="0.17684,0.118452" EndPoint="0.824018,0.882565">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0" Color="#FF909090" />
                                            <GradientStop Offset="1" Color="#FF505050" />
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Binding.ConverterParameter>
                            </Binding>
                        </Ellipse.Fill>
                    </Ellipse>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SimpleFunnel2DModelControl.DefaultStyleBase" BasedOn="{StaticResource pie2DModelControlSyleBase}" TargetType="{x:Type dxc:SimpleFunnel2DModelControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:SimpleFunnel2DModelControl}">
                    <Grid OpacityMask="{Binding OpacityMask}">
                        <Path
                            x:Name="PART_FunnelPointView"
                            Data="{TemplateBinding PointGeometry}"
                            Fill="{Binding Path=PointColor, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource brushOverlayConverter}}"
                            UseLayoutRounding="True" />
                        <Path
                            Data="{TemplateBinding BorderGeometry}"
                            Opacity="{Binding Path=ActualOpacity, RelativeSource={RelativeSource TemplatedParent}}"
                            Stroke="{Binding Path=ActualBorder.Brush, RelativeSource={RelativeSource TemplatedParent}}"
                            StrokeDashArray="{Binding Path=ActualBorder.LineStyle.DashStyle.Dashes, RelativeSource={RelativeSource TemplatedParent}}"
                            StrokeDashCap="{Binding Path=ActualBorder.LineStyle.DashCap, RelativeSource={RelativeSource TemplatedParent}}"
                            StrokeDashOffset="{Binding Path=ActualBorder.LineStyle.DashStyle.Offset, RelativeSource={RelativeSource TemplatedParent}}"
                            StrokeLineJoin="{Binding Path=ActualBorder.LineStyle.LineJoin, RelativeSource={RelativeSource TemplatedParent}}"
                            StrokeMiterLimit="{Binding Path=ActualBorder.LineStyle.MiterLimit, RelativeSource={RelativeSource TemplatedParent}}"
                            StrokeThickness="{Binding Path=ActualBorder.LineStyle.Thickness, RelativeSource={RelativeSource TemplatedParent}}"
                            UseLayoutRounding="True" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FlatPie2DModelControl.DefaultStyleBase" BasedOn="{StaticResource pie2DModelControlSyleBase}" TargetType="{x:Type dxc:FlatPie2DModelControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:FlatPie2DModelControl}">
                    <Ellipse
                        Fill="{Binding Path=PointColor, ConverterParameter=#FF808080, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                        OpacityMask="{Binding OpacityMask}"
                        Stretch="Fill"
                        Stroke="{Binding Path=PointColor, ConverterParameter=#FF262626, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GlossyPie2DModelControl.DefaultStyleBase" BasedOn="{StaticResource pie2DModelControlSyleBase}" TargetType="{x:Type dxc:GlossyPie2DModelControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:GlossyPie2DModelControl}">
                    <Ellipse OpacityMask="{Binding OpacityMask}" Stretch="Fill" StrokeThickness="2">
                        <Ellipse.Stroke>
                            <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                <Binding.ConverterParameter>
                                    <LinearGradientBrush StartPoint="0.500001,1" EndPoint="0.500001,-0.00399976">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0" Color="#FFC0C0C0" />
                                            <GradientStop Offset="0.0827149" Color="#FFA3A3A3" />
                                            <GradientStop Offset="0.5" Color="#FF484848" />
                                            <GradientStop Offset="0.917285" Color="#FFA2A2A2" />
                                            <GradientStop Offset="1" Color="#FFD0D0D0" />
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Binding.ConverterParameter>
                            </Binding>
                        </Ellipse.Stroke>
                        <Ellipse.Fill>
                            <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                <Binding.ConverterParameter>
                                    <LinearGradientBrush StartPoint="0.500001,1" EndPoint="0.500001,0.00409786">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0" Color="#FFC0C0C0" />
                                            <GradientStop Offset="0.118657" Color="#FFB0B0B0" />
                                            <GradientStop Offset="0.18132" Color="#FFA0A0A0" />
                                            <GradientStop Offset="0.215012" Color="#FF969697" />
                                            <GradientStop Offset="0.285721" Color="#FF848587" />
                                            <GradientStop Offset="0.375937" Color="#FF848688" />
                                            <GradientStop Offset="0.445053" Color="#FF858789" />
                                            <GradientStop Offset="0.849651" Color="#FFB3B4B5" />
                                            <GradientStop Offset="1" Color="#FFD2D2D2" />
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Binding.ConverterParameter>
                            </Binding>
                        </Ellipse.Fill>
                    </Ellipse>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GlassPie2DModelControl.DefaultStyleBase" BasedOn="{StaticResource pie2DModelControlSyleBase}" TargetType="{x:Type dxc:GlassPie2DModelControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:GlassPie2DModelControl}">
                    <Grid OpacityMask="{Binding OpacityMask}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.0559998*" />
                            <ColumnDefinition Width="0.740386*" />
                            <ColumnDefinition Width="0.2036142*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.00200088*" />
                            <RowDefinition Height="0.628516*" />
                            <RowDefinition Height="0.36948312*" />
                        </Grid.RowDefinitions>
                        <Ellipse
                            Grid.RowSpan="3"
                            Grid.ColumnSpan="3"
                            Stretch="Fill"
                            StrokeThickness="2">
                            <Ellipse.Stroke>
                                <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.ConverterParameter>
                                        <LinearGradientBrush StartPoint="0.246984,0.0662581" EndPoint="0.750938,0.930178">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStop Offset="0" Color="#FF787878" />
                                                <GradientStop Offset="0.16543" Color="#FF5B5B5B" />
                                                <GradientStop Offset="1" Color="#FF3F3F3F" />
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </Ellipse.Stroke>
                            <Ellipse.Fill>
                                <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.ConverterParameter>
                                        <LinearGradientBrush StartPoint="0.263533,0.0649417" EndPoint="0.736894,0.935844">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStop Offset="0" Color="#FF444444" />
                                                <GradientStop Offset="0.654404" Color="#FFA1A1A1" />
                                                <GradientStop Offset="1" Color="#FFBFBFBF" />
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </Ellipse.Fill>
                        </Ellipse>
                        <Path
                            Grid.Row="1"
                            Grid.Column="1"
                            Data="F1 M 389.104,86.1089C 420.654,163.215 367.432,257.967 270.225,297.744C 173.021,337.52 68.6415,307.256                                  37.0895,230.15C 5.53754,153.043 58.7615,58.2909 155.968,18.5149C 253.174,-21.2611 357.552,9.00183 389.104,86.1089 Z "
                            Stretch="Fill">
                            <Path.Fill>
                                <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.ConverterParameter>
                                        <LinearGradientBrush StartPoint="0.289376,0.0791538" EndPoint="1.13787,0.0791538">
                                            <LinearGradientBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <SkewTransform AngleX="7.84804" AngleY="0" CenterX="0.289376" CenterY="0.0791538" />
                                                    <RotateTransform Angle="65.3008" CenterX="0.289376" CenterY="0.0791538" />
                                                </TransformGroup>
                                            </LinearGradientBrush.RelativeTransform>
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStop Offset="0" Color="#59FFFFFF" />
                                                <GradientStop Offset="1" Color="#00FFFFFF" />
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </Path.Fill>
                        </Path>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CupidPie2DModelControl.DefaultStyleBase" BasedOn="{StaticResource pie2DModelControlSyleBase}" TargetType="{x:Type dxc:CupidPie2DModelControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:CupidPie2DModelControl}">
                    <Grid OpacityMask="{Binding OpacityMask}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.068*" />
                            <ColumnDefinition Width="0.0222268*" />
                            <ColumnDefinition Width="0.0222348*" />
                            <ColumnDefinition Width="0.022231*" />
                            <ColumnDefinition Width="0.620944*" />
                            <ColumnDefinition Width="0.011623*" />
                            <ColumnDefinition Width="0.0115854*" />
                            <ColumnDefinition Width="0.0115852*" />
                            <ColumnDefinition Width="0.20957*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.1316276*" />
                            <RowDefinition Height="0.0115304*" />
                            <RowDefinition Height="0.0115342*" />
                            <RowDefinition Height="0.0115274*" />
                            <RowDefinition Height="0.658466*" />
                            <RowDefinition Height="0.0123186*" />
                            <RowDefinition Height="0.0123158*" />
                            <RowDefinition Height="0.01232168*" />
                            <RowDefinition Height="0.1383584*" />
                        </Grid.RowDefinitions>
                        <Ellipse Grid.RowSpan="9" Grid.ColumnSpan="9" Stretch="Fill">
                            <Ellipse.Fill>
                                <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.ConverterParameter>
                                        <LinearGradientBrush StartPoint="0.292344,0.946266" EndPoint="0.711698,0.045056">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStop Offset="0" Color="#FFC0C0C0" />
                                                <GradientStop Offset="0.185792" Color="#FFB0B0B0" />
                                                <GradientStop Offset="0.335159" Color="#FFA1A1A1" />
                                                <GradientStop Offset="0.642853" Color="#FF6D6D6D" />
                                                <GradientStop Offset="0.652855" Color="#FF6A6A6A" />
                                                <GradientStop Offset="0.719788" Color="#FF676767" />
                                                <GradientStop Offset="0.911669" Color="#FF979797" />
                                                <GradientStop Offset="1" Color="#FFC0C0C0" />
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </Ellipse.Fill>
                        </Ellipse>
                        <Path
                            Grid.Row="1"
                            Grid.RowSpan="7"
                            Grid.Column="1"
                            Grid.ColumnSpan="7"
                            Data="F1 M 157.548,183.589C 156.572,185.825 155.582,187.96 154.647,189.971C 152.463,194.682 150.552,198.798                                149.364,202.495L 156.384,201.533C 156.258,200.889 156.155,200.248 156.072,199.607C 155.261,193.246 156.673,188.05                                157.991,184.051C 157.841,183.897 157.694,183.743 157.548,183.589 Z M 334.731,430.821L 332.148,430.323L 329.569,429.824L                                326.988,429.325C 312.314,426.492 309.632,410.685 308.19,402.194L 308.14,401.894L 308.054,401.402C 308.03,401.261                                308.008,401.123 307.985,400.994C 307.511,400.11 306.348,398.184 304.527,395.285L 304.471,395.199C 302.974,392.812                                301.11,389.842 299.108,386.394C 297.015,382.777 295.919,379.398 295.194,377.159L 295.191,377.145C 292.77,375.697                                288.177,374.63 284.059,373.675C 277.513,372.156 270.141,370.444 263.561,366.109L 262.739,365.566L 261.907,365.02L                                261.079,364.473L 260.483,363.682L 259.885,362.893L 259.287,362.103C 245.679,344.108 238.053,325.847 236.578,307.749C                                225.976,304.49 215.659,296.959 205.783,285.278C 197.538,304.309 185.45,332.467 184.854,333.856L 184.744,334.108L                                182.35,339.689L 179.947,345.289L 177.545,350.889L 172.088,348.18L 166.627,345.468L 161.172,342.761L 158.653,341.511L                                153.457,338.932L 148.26,336.355L 143.062,333.777L 145.674,328.594L 148.286,323.412L 150.898,318.235C 151.443,317.155                                151.609,316.687 151.655,316.488C 151.279,315.406 148.746,312.334 136.5,303.715C 123.516,294.583 105.911,282.195                                101.63,261.52C 98.4589,263.163 94.7939,264.272 90.6699,264.834C 89.4179,265.006 88.1569,265.093 86.9269,265.093C                                74.8819,265.093 68.2119,257.102 65.0069,253.261C 62.9379,250.779 62.3389,250.157 61.1939,249.721L 52.1289,246.275L                                43.0649,242.826L 33.9999,239.377L 41.3599,233.061L 48.7219,226.745L 56.0829,220.43C 56.9819,219.662 57.6729,218.241                                58.8209,215.798C 61.3479,210.413 66.6089,199.209 81.1379,197.234C 82.9309,196.99 84.6789,196.866 86.3299,196.866C                                92.1259,196.866 96.5949,198.325 99.9839,200.294C 103.084,190.454 108.89,181.526 114.554,172.817C 126.873,153.883                                126.079,151.418 123.616,148.695L 119.462,144.097L 115.305,139.498L 111.146,134.896L 116.038,131.083L 120.929,127.273L                                125.812,123.462L 127.397,122.223L 131.519,118.991L 135.663,115.743L 139.806,112.498L 143.413,116.325L 147.022,120.153L                                150.631,123.981C 154.838,128.43 159.11,132.912 164.013,138.043C 167.533,135.129 172.002,133.494 176.81,133.494C                                177.032,133.494 177.254,133.499 177.477,133.505C 178.112,132.934 178.769,132.401 179.449,131.898C 179.8,131.639                                180.159,131.391 180.527,131.156C 183.456,122.166 191.175,116.375 200.277,116.375C 205.995,116.375 211.477,118.698                                215.766,122.856C 216.707,122.725 217.629,122.66 218.541,122.66C 219.007,122.66 219.463,122.679 219.902,122.71C                                220.451,122.748 221.01,122.808 221.574,122.885C 225.16,111.587 233.463,101.161 245.053,93.6339C 263.479,81.6688                                285.277,79.5139 304.507,77.6139C 312.478,76.829 325.773,75.5149 328.72,73.3719C 334.955,68.8369 340.386,65.8138                                346.611,65.8138C 353.079,65.8138 358.908,69.0819 362.201,74.5569C 367.919,84.08 362.951,93.4249 359.985,99.0069L                                359.904,99.1579C 359.718,99.5069 359.406,100.081 359.26,100.382C 357.721,103.957 353.174,112.062 346.068,119.481C                                345.775,128.779 340.772,135.933 335.88,141.357C 334.549,148.445 329.527,155.306 324.856,160.385C 324.815,160.95                                324.752,161.521 324.668,162.094C 324.027,166.467 322.312,170.607 319.561,174.42C 319.466,175.181 319.327,175.949                                319.145,176.713C 318.313,180.189 316.654,183.555 314.207,186.749C 313.879,189.447 312.947,192.149 311.426,194.817C                                313.813,198.633 315.114,203.111 315.227,207.995C 315.275,210.171 314.962,212.33 314.295,214.457C 315.553,215.056                                316.779,215.725 317.967,216.465C 318.614,214.615 319.55,212.66 320.848,210.614C 325.862,202.743 356.091,184.1                                371.619,182.398C 373.184,182.192 374.564,182.092 375.836,182.092C 387.194,182.092 391.985,189.885 393.182,192.273C                                398.492,202.833 392.243,211.235 387.68,217.368C 384.297,221.915 379.194,228.78 375.67,237.597C 374.025,241.709                                373.503,251.151 373.081,258.736C 372.507,269.079 371.914,279.751 368.874,288.73C 365.504,298.704 360.991,309.785                                353.081,316.287C 346.018,322.082 337.708,325.212 327.762,325.81C 329.013,327.452 330.193,329.089 331.326,330.664C                                332.162,331.823 333.002,332.987 333.834,334.108C 339.737,334.85 344.907,337.36 348.918,341.45C 357.727,350.442                                357.478,362.928 357.277,372.962C 357.193,377.169 357.253,379.294 357.322,380.357C 360.634,385.384 361.987,391.194                                361.244,397.26C 360.034,407.056 353.478,416.38 341.193,425.766L 340.805,426.059L 338.861,427.582L 336.799,429.197L                                334.731,430.821 Z "
                            Fill="{Binding Path=PointColor, ConverterParameter=#12FFFFFF, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                            Stretch="Fill" />
                        <Path
                            Grid.Row="2"
                            Grid.RowSpan="5"
                            Grid.Column="2"
                            Grid.ColumnSpan="5"
                            Data="F1 M 155.464,173.15C 153.714,178.28 151.483,183.091 149.418,187.543C 145.583,195.812 142.391,202.687 142.316,209.284L                                163.928,206.317C 162.968,204.108 162.145,201.637 161.79,198.873C 161.038,192.981 162.664,188.194 163.97,184.35C 164.161,183.786                                164.373,183.164 164.556,182.578C 161.356,179.217 158.339,176.088 155.464,173.15 Z M 164.116,233.65C 165.69,233.801 167.181,233.92                                168.46,233.92C 169.016,233.92 169.39,233.896 169.617,233.874C 170.326,233.515 171.091,233.073 171.898,232.558M 168.713,281.12C                                169.98,282.385 171.226,283.693 172.428,285.053C 173.095,283.538 173.749,282.056 174.384,280.621C 172.458,280.835 170.566,281.001                                168.713,281.12 Z M 333.243,424.66L 330.662,424.162L 328.084,423.666C 317.329,421.586 315.25,409.333 313.873,401.229L 313.827,400.946C                                313.713,400.283 313.614,399.694 313.519,399.221C 313.04,398.011 310.778,394.4 309.409,392.22C 307.913,389.838 306.068,386.906                                304.094,383.5C 302.312,380.424 301.369,377.511 300.679,375.384C 300.526,374.912 300.276,374.134 300.087,373.64C 297.009,370.758                                291.329,369.442 285.333,368.052C 279.278,366.649 272.452,365.063 266.734,361.294L 265.907,360.751L 265.079,360.205L 264.483,359.415L                                263.884,358.624C 249.897,340.128 242.587,321.51 242.104,303.199C 226.681,300.204 213.689,286.995 204.36,274.086C 197.368,290.109                                182.683,324.297 179.555,331.582L 179.453,331.82L 177.052,337.416L 174.65,343.016L 169.191,340.305L 163.735,337.596L 161.216,336.346L                                156.02,333.769L 150.82,331.19L 153.433,326.009L 156.046,320.828C 158.922,315.12 158.944,312.462 139.817,299.001C 126.433,289.586                                109.89,277.945 106.897,258.254C 105.508,256.743 104.379,255.037 103.466,253.222C 100.696,255.867 96.4374,258.229 89.8914,259.12C                                88.8884,259.257 87.8924,259.326 86.9274,259.326C 77.5724,259.326 72.4734,253.212 69.4274,249.56C 67.3134,247.025 65.9164,245.351                                63.2464,244.335L 54.1804,240.884L 45.1134,237.436L 52.4754,231.121L 59.8394,224.806C 61.7094,223.202 62.7374,221.018 64.0404,218.249C                                66.4604,213.094 70.4984,204.498 81.9144,202.945C 83.4414,202.738 84.9274,202.631 86.3294,202.631C 97.0834,202.631 101.856,208.754                                103.565,211.811C 104.497,198.856 112.052,187.238 119.391,175.955C 131.086,157.98 133.781,151.343 127.894,144.829L 123.738,140.231L                                119.582,135.632L 124.471,131.82L 129.358,128.008L 130.947,126.767L 135.077,123.527L 139.218,120.28L 142.829,124.109L 146.438,127.936C                                151.547,133.347 156.86,138.907 162.774,145.092L 164.265,146.655C 164.321,146.55 164.381,146.446 164.441,146.343C 167.013,141.909                                171.637,139.26 176.809,139.26C 177.741,139.26 178.672,139.348 179.596,139.523C 180.637,138.373 181.721,137.386 182.869,136.539C                                183.682,135.939 184.548,135.431 185.461,135.019C 185.582,134.409 185.738,133.8 185.926,133.194C 188.011,126.482 193.645,122.14                                200.277,122.14C 205.469,122.14 210.303,124.75 213.706,129.195C 215.205,128.753 216.81,128.426 218.54,128.426C 218.871,128.426                                219.194,128.438 219.506,128.46C 221.486,128.598 223.639,129.097 225.811,129.888C 227.714,118.131 235.769,106.538 248.192,98.4688C                                265.434,87.2709 286.493,85.1888 305.072,83.3529C 315.779,82.2959 327.893,81.1019 332.109,78.0349C 337.589,74.0499 341.927,71.579                                346.612,71.579C 351.039,71.579 355.017,73.8029 357.261,77.5289C 361.297,84.2539 357.744,90.9379 354.889,96.3059C 354.661,96.7369                                354.129,97.7319 354.001,98.0159C 352.761,100.943 348.011,109.65 340.265,117.139C 340.853,125.903 336.108,132.739 330.418,138.775C                                329.862,145.922 323.484,153.588 319.131,158.044C 319.18,159.079 319.125,160.149 318.963,161.253C 318.389,165.175 316.704,168.874                                313.948,172.276C 313.924,173.289 313.787,174.326 313.538,175.376C 312.784,178.521 311.119,181.59 308.575,184.536C 308.579,187.085                                307.775,189.714 306.165,192.391C 305.61,193.317 304.989,194.187 304.323,195.014C 307.562,198.439 309.344,202.918 309.462,208.126C                                309.535,211.331 308.489,214.516 306.343,217.663C 311.57,219.044 317.925,222.15 323.609,229.137C 322.136,225.87 321.343,220.579                                325.712,213.708C 329.506,207.75 358.201,189.624 372.304,188.121C 373.631,187.944 374.784,187.857 375.834,187.857C 383.671,187.857                                386.972,192.754 388.028,194.858C 391.743,202.247 387.325,208.186 383.05,213.933C 379.482,218.732 374.118,225.945 370.314,235.456C                                368.32,240.446 367.792,249.994 367.324,258.42C 366.773,268.361 366.203,278.639 363.413,286.881C 360.303,296.089 356.207,306.255                                349.42,311.832C 342.604,317.427 334.348,320.149 324.174,320.149C 320.653,320.149 317.163,319.817 313.734,319.293C 318.991,323.408                                323.066,329.063 326.651,334.036C 328.012,335.927 329.407,337.861 330.813,339.654C 336.386,339.818 341.212,341.823 344.801,345.485C                               351.912,352.746 351.701,363.425 351.511,372.847C 351.469,375.032 351.36,380.583 351.792,382.51C 354.861,386.614 356.148,391.456                                355.523,396.561C 354.51,404.739 348.677,412.792 337.691,421.185L 337.317,421.47L 335.308,423.04L 333.243,424.66 Z "
                            Fill="{Binding Path=PointColor, ConverterParameter=#1FFFFFFF, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                            Stretch="Fill" />
                        <Path
                            Grid.Row="3"
                            Grid.RowSpan="3"
                            Grid.Column="3"
                            Grid.ColumnSpan="3"
                            Data="F1 M 152.387,161.87C 151.112,170.195 147.508,177.962 144.181,185.135C 139.132,196.017 134.692,205.587 137.339,215.787L                                172.733,210.929C 172.327,210.113 171.886,209.286 171.435,208.446C 169.832,205.462 168.016,202.078 167.511,198.138C 166.925,193.573                                168.256,189.66 169.429,186.205C 170.125,184.149 170.749,182.314 170.806,180.789C 164.052,173.656 158.008,167.444                                152.387,161.87 Z M 155.978,238.763C 157.585,238.763 159.531,238.968 161.59,239.186L 162.251,239.254C 164.34,239.472 166.54,239.685                                168.461,239.685C 170.779,239.685 171.505,239.363 171.535,239.349C 176.42,237.088 182.748,231.805 187.054,227.171C 186.968,227.173                                186.885,227.176 186.799,227.176C 186.629,227.176 186.462,227.171 186.299,227.161C 184.345,227.03 182.349,226.236 180.847,225.479L                                155.837,228.991C 151.522,229.715 147.474,230.386 143.459,230.999C 143.131,232.215 142.575,233.341 142.032,234.443C 141.701,235.114                                141.148,236.24 140.915,236.984C 141.972,237.547 145.333,238.769 154.66,238.769C 155.03,238.769 155.406,238.767 155.788,238.765M                                153.681,275.129C 154.649,276.005 155.638,276.888 156.637,277.779C 162.799,283.28 169.446,289.208 173.716,296.451C 177.504,287.807                                181.161,279.541 183.909,273.363C 177.825,274.504 169.999,275.572 162.05,275.572C 159.104,275.572 156.314,275.425                                153.681,275.129 Z M 331.757,418.502L 329.179,418.003C 322.349,416.684 320.801,407.578 319.557,400.264C 319.395,399.311 319.257,398.48                                319.127,397.859C 318.806,396.352 316.501,392.679 314.272,389.125C 312.717,386.646 310.955,383.836 309.082,380.606C 307.61,378.066                                306.808,375.594 306.163,373.605C 305.714,372.22 305.203,370.645 304.741,370.146C 300.578,365.667 293.804,364.098 286.633,362.435C                                280.801,361.083 274.769,359.687 269.907,356.481L 269.08,355.936L 268.482,355.146C 253.923,335.893 247.029,316.726 247.921,298.055C                                229.172,297.608 213.195,277.437 205.077,264.935C 203.486,265.787 201.786,266.76 200.974,267.445C 194.708,281.669 174.368,329.055                                174.158,329.541L 171.755,335.141L 166.299,332.433L 163.78,331.182L 158.582,328.604L 161.193,323.425C 166.754,312.391 160.311,306.374                                143.135,294.286C 129.511,284.7 114.17,273.904 112.367,255.526C 107.558,251.478 105.715,243.653 105.597,235.887L 102.164,236.357C                                102.995,238.624 103.277,241.059 102.711,243.497C 101.987,246.605 99.2587,252.027 89.1127,253.408C 88.3717,253.508 87.6367,253.559                                86.9277,253.559C 80.2707,253.559 76.7137,249.295 73.8547,245.869C 71.5517,243.106 69.3767,240.497 65.2947,238.944L 56.2307,235.496L                                63.5917,229.182C 66.4057,226.767 67.7937,223.81 69.2657,220.681C 71.5457,215.828 74.3847,209.787 82.6917,208.658C 83.9627,208.485                                85.1867,208.397 86.3287,208.397C 94.1337,208.397 97.4097,212.456 98.6687,214.876C 99.6497,216.763 100.051,218.833 100.021,220.908L                                107.988,219.814C 108.345,218.94 108.793,218.036 109.357,217.192C 108.157,203.797 116.319,191.251 124.233,179.086C 135.232,162.177                                141.502,151.288 132.173,140.963L 128.016,136.366L 132.904,132.553L 134.495,131.309L 138.635,128.064L 142.243,131.891C 147.474,137.428                                152.881,143.087 158.606,149.078C 162.59,153.245 166.652,157.492 170.7,161.754C 170.877,161.137 171.065,160.548 171.251,159.99C                                170.39,159.364 169.655,158.567 169.121,157.64C 167.675,155.13 167.786,152.066 169.427,149.238C 170.958,146.599 173.719,145.027                                176.81,145.027C 178.47,145.027 180.142,145.491 181.618,146.321C 182.873,144.435 184.396,142.577 186.291,141.179C 187.611,140.203                                189.179,139.641 190.958,139.5C 190.796,138.014 190.95,136.454 191.43,134.911C 192.772,130.592 196.163,127.906 200.278,127.906C                                204.822,127.906 208.957,131.132 211.156,136.167C 211.634,136.007 212.076,135.847 212.316,135.762L 212.753,135.601C 214.751,134.877                                216.637,134.191 218.541,134.191C 218.731,134.191 218.917,134.198 219.096,134.211C 222.826,134.473 227.703,136.58 231.522,139.626C                                229.086,125.766 238.573,111.591 251.333,103.304C 267.406,92.8661 287.726,90.8601 305.658,89.0891C 318.188,87.8522 330.025,86.6821                                335.498,82.6991C 340.866,78.796 343.877,77.3461 346.613,77.3461C 348.999,77.3461 351.132,78.525 352.321,80.5011C 354.677,84.4261                                352.307,88.8821 349.8,93.5991C 349.37,94.4041 348.885,95.3181 348.717,95.7121C 347.501,98.5771 342.266,107.955 334.061,114.996L                                334.263,115.336L 334.416,116.541C 335.427,124.567 330.141,130.906 324.615,136.483C 324.673,136.93 324.703,137.411 324.692,137.928C                                324.578,142.798 319.222,150.152 312.935,156.042C 313.39,157.32 313.498,158.783 313.259,160.415C 312.745,163.938 311.008,167.208                                307.993,170.302C 308.24,171.321 308.283,172.56 307.929,174.038C 307.148,177.303 304.936,180.221 302.489,182.584C 303.5,185.635                                301.823,188.426 301.226,189.42C 299.835,191.729 297.802,193.724 295.557,195.733C 299.543,197.615 303.541,201.249 303.7,208.256C                                303.807,213.014 299.348,218.061 292.965,222.484C 294.273,222.383 295.576,222.324 296.874,222.324C 302.819,222.324 311.605,223.422                                319.252,232.916C 322.101,236.456 323.522,240.199 324.481,243.77C 326.082,238.658 328.133,235.483 329.672,233.104C 330.201,232.279                                330.93,231.149 331.023,230.771L 331.021,230.773C 331.009,230.773 330.889,229.98 329.461,227.84C 328.084,225.778 327.157,222.185                                330.58,216.801C 333.183,212.71 360.613,195.102 372.988,193.847C 374.081,193.697 375.015,193.622 375.834,193.622C 380.288,193.622                                382.158,196.015 382.875,197.442C 384.995,201.661 382.378,205.177 378.417,210.501C 374.689,215.517 369.051,223.095 364.963,233.317C                                362.619,239.177 362.085,248.798 361.57,258.101C 361.037,267.657 360.49,277.539 357.954,285.034C 355.104,293.468 351.428,302.721                                345.759,307.376C 340.02,312.091 332.958,314.383 324.175,314.383C 316.465,314.383 308.705,312.603 301.73,310.892C 301.364,311.867                                300.978,312.819 300.594,313.762C 299.8,315.724 299.059,317.556 298.616,319.281C 309.264,319.769 316.007,329.129 321.976,337.411C                                323.966,340.173 326.012,343.007 328.147,345.496C 328.811,345.438 329.455,345.409 330.078,345.409C 334.44,345.409 338.008,346.793                                340.684,349.523C 346.102,355.051 345.921,364.04 345.75,372.735C 345.662,377.175 345.527,383.88 346.874,385.567C 349.25,388.547                                350.261,392.106 349.8,395.86C 348.991,402.412 343.886,409.198 334.192,416.603L 333.824,416.886L 331.757,418.502 Z "
                            Fill="{Binding Path=PointColor, ConverterParameter=#2EFFFFFF, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                            Stretch="Fill" />
                        <Path
                            Grid.Row="4"
                            Grid.Column="4"
                            Data="F1 M 173.951,244.582C 169.609,246.589 160.105,244.487 155.846,244.529C 124.507,244.843 137.834,232.795 137.996,228.907C                                138.123,225.856 136.13,227.239 136.365,226.197C 142.692,225.342 148.874,224.315 154.966,223.293L 181.976,219.5C 181.976,219.5                                184.773,221.28 186.68,221.407C 188.586,221.534 193.768,218.487 197.442,218.491C 199.995,225.312 182.378,240.687                                173.951,244.582 Z M 172.443,313.817C 173.714,290.937 142.915,280.035 136.888,263.209C 154.291,276.828 193.882,265.144                                193.882,265.144C 193.882,265.144 182.103,291.445 172.443,313.817 Z M 146.014,147.693C 156.188,157.25 166.269,167.581                                176.311,178.222C 177.82,184.638 172.363,190.661 173.229,197.403C 174.013,203.504 179.545,208.647 180.247,215.718L                                133.476,222.137C 121.615,195.351 153.292,173.916 146.014,147.693 Z M 373.639,199.576C 362.313,200.64 336.63,218.031                                335.442,219.895C 334.258,221.76 333.579,223.624 334.258,224.641C 342.831,237.496 326.724,231.602 327.754,266.383C 317.868,255.686                                321.753,245.213 314.763,236.533C 301.109,219.584 283.726,234.362 263.552,228.789C 280.87,225.489 298.054,213.651 297.935,208.384C                                297.818,203.117 294.515,201.352 291.676,200.37C 288.836,199.389 284.977,199.854 281.333,201.997C 285.889,195.246 293.566,190.963                                296.285,186.448C 299.004,181.931 293.534,185.253 292.353,183.066C 297.698,179.86 301.57,175.841 302.32,172.7C 303.071,169.56 299.47,172.331                                298.216,170.746C 303.591,167.301 306.956,163.665 307.555,159.578C 308.155,155.492 304.358,158.085 302.823,156.823C 311.561,150.894                                318.85,141.11 318.927,137.793C 319.004,134.477 315.563,137.65 313.67,139.32C 320.271,132.163 329.716,125.354 328.697,117.26C 326.89,114.254                               324.414,116.727 322.361,115.757C 333.832,110.737 341.852,97.1299 343.408,93.462C 344.965,89.793 354.034,76.345 338.891,87.361C                                323.748,98.377 281.32,90.701 254.474,108.138C 241.522,116.549 232.011,132.266 239.745,145.448C 246.369,156.74 255.706,160.894                                255.316,171.994C 255.045,179.784 250.82,185.304 238.062,194.505C 240.429,187.068 253.244,175.788 247.525,169.433C 241.804,163.077                                242.799,155.967 242.799,155.967C 242.799,155.967 243.922,150.747 240.066,148.713C 236.211,146.68 233.816,151.14 237.037,153.035C                                236.401,152.272 235.639,151.382 236.656,150.366C 237.673,149.349 239.049,149.73 240.066,150.747C 241.083,152.781 239.049,156.849                                235.999,155.832C 233.965,154.815 231.882,153.233 231.889,149.73C 231.896,146.227 224.018,140.337 218.685,139.962C 216.725,139.825                                211.767,142.675 208.969,142.391C 207.347,142.226 207.04,142.257 206.52,140.33C 204.687,133.538 198.586,131.313 196.933,136.624C                                195.281,141.934 201.509,144.264 202.484,140.832C 200.704,142.739 196.552,140.282 199.602,137.231C 201.637,136.214 203.5,137.217                                204.517,139.251C 205.534,141.285 204.432,144.193 203.458,144.645C 202.483,145.098 199.14,145.639 198.967,145.663C 195.159,146.206                               191.731,144.331 189.711,145.82C 185.621,148.834 183.247,156.326 181.722,157.025C 180.197,157.725 180.654,156.258 180.769,154.737C                                181.023,151.369 176.066,149.285 174.413,152.131C 172.761,154.977 175.367,156.072 176.256,155.627C 174.731,154.292 175.811,150.225                                178.29,154.102C 179.942,156.771 174.413,163.254 175.294,171.861C 175.24,173.994 176.766,175.387 176.171,175.944C 163.46,162.385                                150.016,148.523 138.052,135.848C 137.517,136.265 136.983,136.682 136.449,137.1C 159.223,162.3 109.75,191.245 115.481,219.284C                                114.263,219.511 113.172,221.781 112.419,225.027L 91.8732,227.847C 95.5722,222.573 96.4882,212.598 83.4692,214.37C 74.2542,215.623                               75.9562,226.169 67.3462,233.557C 79.0602,238.015 79.1212,248.948 88.3362,247.695C 101.825,245.859 97.4872,235.966 91.5822,231.992L                                111.699,229.23C 110.653,238.123 111.859,250.061 117.957,252.189C 118.294,288.649 182.358,294.242 166.342,326.02L 168.86,327.27C                                168.86,327.27 190.239,277.463 196.086,264.244C 197.872,261.84 203.731,259.196 207.155,257.356C 216.917,273.798 235.893,297.135                                254.406,291.418C 251.33,310.359 256.974,330.372 273.078,351.668C 282.612,357.949 299.728,356.28 308.964,366.224C 311.412,368.859                                311.516,373.311 314.071,377.717C 319.368,386.853 323.954,392.839 324.764,396.666C 325.576,400.492 326.736,411.659 330.273,412.343C                                332.41,410.672 349.631,398.272 342.367,389.164C 335.103,380.057 348.766,346.824 325.968,351.648C 314.8,340.255 308.263,320.784                                292.916,325.853C 290.744,318.102 296.387,311.309 297.777,303.993C 311.483,307.246 329.775,313.046 342.101,302.92C 347.031,298.869                                350.584,288.842 352.494,283.188C 357.214,269.23 354.393,244.226 359.611,231.177C 369.001,207.693 385.609,197.863 373.639,199.576 Z "
                            Fill="{Binding Path=PointColor, ConverterParameter=#5AFFFFFF, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                            Stretch="Fill" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BorderlessGradientRangeBar2DModelControl.DefaultStyleBase" TargetType="{x:Type dxc:BorderlessGradientRangeBar2DModelControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:BorderlessGradientRangeBar2DModelControl}">
                    <dx:DXBorder BorderThickness="0" OpacityMask="{Binding OpacityMask}" UseLayoutRounding="True">
                        <dx:DXBorder.Background>
                            <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                <Binding.ConverterParameter>
                                    <LinearGradientBrush StartPoint="0.5,0.015625" EndPoint="0.5,1">
                                        <GradientStop Offset="0" Color="#FF808080" />
                                        <GradientStop Offset="1" Color="#FF4D4D4D" />
                                    </LinearGradientBrush>
                                </Binding.ConverterParameter>
                            </Binding>
                        </dx:DXBorder.Background>
                    </dx:DXBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BorderlessSimpleRangeBar2DModelControl.DefaultStyleBase" TargetType="{x:Type dxc:BorderlessSimpleRangeBar2DModelControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:BorderlessSimpleRangeBar2DModelControl}">
                    <dx:DXBorder
                        Background="{Binding Path=PointColor, ConverterParameter=#FF808080, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                        BorderThickness="0"
                        OpacityMask="{Binding OpacityMask}"
                        UseLayoutRounding="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GradientRangeBar2DModelControl.DefaultStyleBase" TargetType="{x:Type dxc:GradientRangeBar2DModelControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:GradientRangeBar2DModelControl}">
                    <dx:DXBorder
                        BorderBrush="{Binding Path=PointColor, ConverterParameter=#FF262626, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource brushOverlayConverter}}"
                        BorderThickness="1,1,1,1"
                        OpacityMask="{Binding OpacityMask}"
                        UseLayoutRounding="True">
                        <dx:DXBorder.Background>
                            <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                <Binding.ConverterParameter>
                                    <LinearGradientBrush StartPoint="0.5,0.015625" EndPoint="0.5,1">
                                        <GradientStop Offset="0" Color="#FF808080" />
                                        <GradientStop Offset="1" Color="#FF4D4D4D" />
                                    </LinearGradientBrush>
                                </Binding.ConverterParameter>
                            </Binding>
                        </dx:DXBorder.Background>
                    </dx:DXBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SimpleRangeBar2DModelControl.DefaultStyleBase" TargetType="{x:Type dxc:SimpleRangeBar2DModelControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:SimpleRangeBar2DModelControl}">
                    <dx:DXBorder
                        Background="{Binding Path=PointColor, ConverterParameter=#FF808080, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                        BorderBrush="{Binding Path=PointColor, ConverterParameter=#FF404040, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                        BorderThickness="1,1,1,1"
                        OpacityMask="{Binding OpacityMask}"
                        UseLayoutRounding="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TransparentRangeBar2DModelControl.DefaultStyleBase" TargetType="{x:Type dxc:TransparentRangeBar2DModelControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:TransparentRangeBar2DModelControl}">
                    <dx:DXBorder
                        BorderBrush="{Binding Path=PointColor, ConverterParameter=#FF606060, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                        BorderThickness="1,1,1,1"
                        OpacityMask="{Binding OpacityMask}"
                        UseLayoutRounding="True">
                        <dx:DXBorder.Background>
                            <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                <Binding.ConverterParameter>
                                    <LinearGradientBrush StartPoint="0.5,0.015625" EndPoint="0.5,1">
                                        <GradientStop Offset="0" Color="#C0C1C1C1" />
                                        <GradientStop Offset="1" Color="#C0919191" />
                                    </LinearGradientBrush>
                                </Binding.ConverterParameter>
                            </Binding>
                        </dx:DXBorder.Background>
                    </dx:DXBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FlatRangeBar2DModelControl.DefaultStyleBase" TargetType="{x:Type dxc:FlatRangeBar2DModelControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:FlatRangeBar2DModelControl}">
                    <Grid OpacityMask="{Binding OpacityMask}">
                        <dx:DXBorder Background="{Binding Path=PointColor, ConverterParameter=#FF505050, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}" CornerRadius="3" UseLayoutRounding="True" />
                        <dx:DXBorder
                            Margin="1"
                            Background="{Binding Path=PointColor, ConverterParameter=#FFA0A0A0, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                            CornerRadius="2,2,5,5"
                            UseLayoutRounding="True" />
                        <dx:DXBorder Margin="1,2,1,1" CornerRadius="2" UseLayoutRounding="True">
                            <dx:DXBorder.Background>
                                <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.ConverterParameter>
                                        <LinearGradientBrush StartPoint="-1.01725e-006,0.500001" EndPoint="0.999999, 0.500001">
                                            <GradientStop Offset="0" Color="#FF929292" />
                                            <GradientStop Offset="1" Color="#FF6E6E6E" />
                                        </LinearGradientBrush>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </dx:DXBorder.Background>
                        </dx:DXBorder>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FlatGlassRangeBar2DModelControl.DefaultStyleBase" TargetType="{x:Type dxc:FlatGlassRangeBar2DModelControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:FlatGlassRangeBar2DModelControl}">
                    <Grid OpacityMask="{Binding OpacityMask}">
                        <dx:DXBorder Background="{Binding Path=PointColor, ConverterParameter=#FF505050, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}" CornerRadius="3" UseLayoutRounding="True" />
                        <dx:DXBorder Margin="1" CornerRadius="2" UseLayoutRounding="True">
                            <dx:DXBorder.Background>
                                <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.ConverterParameter>
                                        <LinearGradientBrush StartPoint="-1.01725e-006,0.500001" EndPoint="0.999999, 0.500001">
                                            <GradientStop Offset="0" Color="#FF808080" />
                                            <GradientStop Offset="0.5" Color="#FF666666" />
                                            <GradientStop Offset="0.5" Color="#FF555555" />
                                            <GradientStop Offset="1" Color="#FF6B6B6B" />
                                        </LinearGradientBrush>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </dx:DXBorder.Background>
                        </dx:DXBorder>
                        <dx:DXBorder
                            Margin="1"
                            BorderBrush="{Binding Path=PointColor, ConverterParameter=#32FFFFFF, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                            BorderThickness="1"
                            CornerRadius="2"
                            UseLayoutRounding="True" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="OutsetRangeBar2DModelControl.DefaultStyleBase" TargetType="{x:Type dxc:OutsetRangeBar2DModelControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:OutsetRangeBar2DModelControl}">
                    <Grid OpacityMask="{Binding OpacityMask}">
                        <Grid.RowDefinitions>
                            <RowDefinition MinHeight="5" MaxHeight="5" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="5" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MaxWidth="5" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition MaxWidth="5" />
                        </Grid.ColumnDefinitions>
                        <Rectangle
                            Grid.RowSpan="3"
                            Grid.ColumnSpan="3"
                            Stretch="Fill"
                            UseLayoutRounding="True">
                            <Rectangle.Fill>
                                <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.ConverterParameter>
                                        <LinearGradientBrush StartPoint="0.5,0.015625" EndPoint="0.5,1">
                                            <GradientStop Offset="0" Color="#FF808080" />
                                            <GradientStop Offset="1" Color="#FF4D4D4D" />
                                        </LinearGradientBrush>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle
                            Grid.Row="0"
                            Grid.ColumnSpan="3"
                            Height="1"
                            VerticalAlignment="Top"
                            Fill="{Binding Path=PointColor, ConverterParameter=#72000000, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                            Stretch="Fill"
                            UseLayoutRounding="True" />
                        <Rectangle
                            Grid.RowSpan="3"
                            Grid.Column="2"
                            Width="1"
                            Margin="0,1,0,1"
                            HorizontalAlignment="Right"
                            Fill="{Binding Path=PointColor, ConverterParameter=#80000000, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                            Stretch="Fill"
                            UseLayoutRounding="True" />
                        <Rectangle
                            Grid.RowSpan="3"
                            Grid.Column="0"
                            Width="1"
                            Margin="0,1,0,1"
                            HorizontalAlignment="Left"
                            Fill="{Binding Path=PointColor, ConverterParameter=#5A000000, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                            Stretch="Fill"
                            UseLayoutRounding="True" />
                        <Rectangle
                            Grid.Row="2"
                            Grid.ColumnSpan="3"
                            Height="1"
                            VerticalAlignment="Bottom"
                            Fill="{Binding Path=PointColor, ConverterParameter=#80000000, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                            Stretch="Fill"
                            UseLayoutRounding="True" />
                        <Path
                            Grid.Row="0"
                            Grid.Column="0"
                            Margin="1,1,0,0"
                            Data="F1 M 5.00049,5L 1.00049,1L 5.00049,1Z "
                            Stretch="Fill"
                            UseLayoutRounding="True">
                            <Path.Fill>
                                <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.ConverterParameter>
                                        <LinearGradientBrush StartPoint="0.470832,1.52588e-005" EndPoint="0.470832,1.00002">
                                            <GradientStop Offset="0" Color="#7FFFFFFF" />
                                            <GradientStop Offset="1" Color="#1AFFFFFF" />
                                        </LinearGradientBrush>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </Path.Fill>
                        </Path>
                        <Path
                            Grid.Row="2"
                            Grid.Column="2"
                            Margin="0,0,1,1"
                            Data="F1 M 5.00049,5L 1.00049,1L 5.00049,1Z "
                            Stretch="Fill"
                            UseLayoutRounding="True">
                            <Path.Fill>
                                <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.ConverterParameter>
                                        <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                            <GradientStop Offset="0" Color="#00000000" />
                                            <GradientStop Offset="1" Color="#43000000" />
                                        </LinearGradientBrush>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </Path.Fill>
                        </Path>
                        <Path
                            Grid.Row="2"
                            Grid.Column="2"
                            Margin="0,0,1,1"
                            Data="F1 M 1,1L 5,5L 1,5 Z "
                            Stretch="Fill"
                            UseLayoutRounding="True">
                            <Path.Fill>
                                <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.ConverterParameter>
                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                            <GradientStop Offset="0" Color="#00000000" />
                                            <GradientStop Offset="1" Color="#43000000" />
                                        </LinearGradientBrush>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </Path.Fill>
                        </Path>
                        <Path
                            Grid.Row="2"
                            Grid.Column="0"
                            Margin="1,0,0,1"
                            Data="F1 M 31.0005,1L 27.0005,5L 27.0005,1 Z "
                            Stretch="Fill"
                            UseLayoutRounding="True">
                            <Path.Fill>
                                <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.ConverterParameter>
                                        <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                            <GradientStop Offset="0" Color="#1A000000" />
                                            <GradientStop Offset="1" Color="#00000000" />
                                        </LinearGradientBrush>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </Path.Fill>
                        </Path>
                        <Path
                            Grid.Row="2"
                            Grid.Column="0"
                            Margin="1,0,0,1"
                            Data="F1 M 31.0005,1L 27.0005,5L 31.0005,5 Z "
                            Stretch="Fill"
                            UseLayoutRounding="True">
                            <Path.Fill>
                                <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.ConverterParameter>
                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                            <GradientStop Offset="0" Color="#00000000" />
                                            <GradientStop Offset="1" Color="#43000000" />
                                        </LinearGradientBrush>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </Path.Fill>
                        </Path>
                        <Rectangle
                            Grid.Row="2"
                            Grid.Column="1"
                            Margin="0,0,0,1"
                            Stretch="Fill"
                            UseLayoutRounding="True">
                            <Rectangle.Fill>
                                <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.ConverterParameter>
                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                            <GradientStop Offset="0" Color="#00000000" />
                                            <GradientStop Offset="1" Color="#43000000" />
                                        </LinearGradientBrush>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle
                            Grid.Row="0"
                            Grid.Column="1"
                            Margin="0,1,0,0"
                            Stretch="Fill"
                            UseLayoutRounding="True">
                            <Rectangle.Fill>
                                <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.ConverterParameter>
                                        <LinearGradientBrush StartPoint="0.470832,1.52588e-005" EndPoint="0.470832,1.00002">
                                            <GradientStop Offset="0" Color="#7FFFFFFF" />
                                            <GradientStop Offset="1" Color="#1AFFFFFF" />
                                        </LinearGradientBrush>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Path
                            Grid.Row="0"
                            Grid.Column="2"
                            Margin="0,1,1,0"
                            Data="F1 M 31.0005,1L 27.0005,5L 27.0005,1 Z "
                            Stretch="Fill"
                            UseLayoutRounding="True">
                            <Path.Fill>
                                <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.ConverterParameter>
                                        <LinearGradientBrush StartPoint="0.470832,1.52588e-005" EndPoint="0.470832,1.00002">
                                            <GradientStop Offset="0" Color="#7FFFFFFF" />
                                            <GradientStop Offset="1" Color="#1AFFFFFF" />
                                        </LinearGradientBrush>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </Path.Fill>
                        </Path>
                        <Path
                            Grid.Row="0"
                            Grid.Column="0"
                            Margin="1,1,0,0"
                            Data="F1 M 1,1L 5,5L 1,5 Z "
                            Stretch="Fill"
                            UseLayoutRounding="True">
                            <Path.Fill>
                                <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.ConverterParameter>
                                        <LinearGradientBrush StartPoint="-7.62846e-006,0.500001" EndPoint="0.999992,0.500001">
                                            <GradientStop Offset="0" Color="#1A000000" />
                                            <GradientStop Offset="1" Color="#00000000" />
                                        </LinearGradientBrush>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </Path.Fill>
                        </Path>
                        <Rectangle
                            Grid.Row="1"
                            Grid.Column="0"
                            Margin="1,0,0,0"
                            Stretch="Fill"
                            UseLayoutRounding="True">
                            <Rectangle.Fill>
                                <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.ConverterParameter>
                                        <LinearGradientBrush StartPoint="-7.62846e-006,0.500001" EndPoint="0.999992,0.500001">
                                            <GradientStop Offset="0" Color="#1A000000" />
                                            <GradientStop Offset="1" Color="#00000000" />
                                        </LinearGradientBrush>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Path
                            Grid.Row="0"
                            Grid.Column="2"
                            Margin="0,1,1,0"
                            Data="F1 M 31.0005,1L 27.0005,5L 31.0005,5 Z "
                            Stretch="Fill"
                            UseLayoutRounding="True">
                            <Path.Fill>
                                <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.ConverterParameter>
                                        <LinearGradientBrush StartPoint="-7.62846e-006,0.500001" EndPoint="0.999992,0.500001">
                                            <GradientStop Offset="0" Color="#00000000" />
                                            <GradientStop Offset="1" Color="#43000000" />
                                        </LinearGradientBrush>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </Path.Fill>
                        </Path>
                        <Rectangle
                            Grid.Row="1"
                            Grid.Column="2"
                            Margin="0,0,1,0"
                            Stretch="Fill"
                            UseLayoutRounding="True">
                            <Rectangle.Fill>
                                <Binding Converter="{StaticResource brushOverlayConverter}" Path="PointColor" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.ConverterParameter>
                                        <LinearGradientBrush StartPoint="-7.62846e-006,0.500001" EndPoint="0.999992,0.500001">
                                            <GradientStop Offset="0" Color="#00000000" />
                                            <GradientStop Offset="1" Color="#43000000" />
                                        </LinearGradientBrush>
                                    </Binding.ConverterParameter>
                                </Binding>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SeriesPresentation.DefaultStyleBase" TargetType="{x:Type dxc:SeriesPresentation}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:SeriesPresentation}">
                    <Grid>
                        <dxc:ChartContentPresenter x:Name="PART_AdditionalGeometryHolder" Content="{Binding Path=Series, RelativeSource={RelativeSource TemplatedParent}, Converter={dxc:XYSeries2DToAdditionalGeometryConverter}}" />

                        <dxc:PointsContainer x:Name="PART_PointsContainer" DataContext="{Binding Path=Series, RelativeSource={RelativeSource TemplatedParent}}" ItemsSource="{Binding Path=SeriesItem.DrawingPointItems, RelativeSource={RelativeSource TemplatedParent}}">
                            <dxc:ChartItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <dxc:SimplePanel x:Name="PART_PointsPanel" />
                                </ItemsPanelTemplate>
                            </dxc:ChartItemsControl.ItemsPanel>
                        </dxc:PointsContainer>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding SeriesItem.IsDirectXSurfaceRendering, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type dxc:SeriesPresentation}">
                            <dxc:ChartContentPresenter x:Name="PART_AdditionalGeometryHolder" Content="{Binding Path=Series, RelativeSource={RelativeSource TemplatedParent}, Converter={dxc:XYSeries2DToAdditionalGeometryConverter}}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>

    </Style>
    <Style x:Key="WaterfallSeries2D.DefaultStyleBase" BasedOn="{StaticResource xySeries2DStyleBase}" TargetType="{x:Type dxc:WaterfallSeries2D}">
        <Setter Property="Model">
            <Setter.Value>
                <dxc:SimpleWaterfall2DModel />
            </Setter.Value>
        </Setter>
        <Setter Property="LegendMarkerTemplate" Value="{StaticResource WaterfallSeriesLegendMarkerTemplate}" />
    </Style>
    <Style x:Key="BarSideBySideSeries2D.DefaultStyleBase" BasedOn="{StaticResource BarSeries2DStyle}" TargetType="{x:Type dxc:BarSideBySideSeries2D}" />
    <Style x:Key="BarStackedSeries2D.DefaultStyleBase" BasedOn="{StaticResource BarSeries2DStyle}" TargetType="{x:Type dxc:BarStackedSeries2D}" />
    <Style x:Key="BarFullStackedSeries2D.DefaultStyleBase" BasedOn="{StaticResource BarSeries2DStyle}" TargetType="{x:Type dxc:BarFullStackedSeries2D}" />
    <Style x:Key="BarSideBySideStackedSeries2D.DefaultStyleBase" BasedOn="{StaticResource BarSeries2DStyle}" TargetType="{x:Type dxc:BarSideBySideStackedSeries2D}" />
    <Style x:Key="BarSideBySideFullStackedSeries2D.DefaultStyleBase" BasedOn="{StaticResource BarSeries2DStyle}" TargetType="{x:Type dxc:BarSideBySideFullStackedSeries2D}" />
    <Style x:Key="RangeBarOverlappedSeries2D.DefaultStyleBase" BasedOn="{StaticResource RangeBar2DStyle}" TargetType="{x:Type dxc:RangeBarOverlappedSeries2D}" />
    <Style x:Key="RangeBarSideBySideSeries2D.DefaultStyleBase" BasedOn="{StaticResource RangeBar2DStyle}" TargetType="{x:Type dxc:RangeBarSideBySideSeries2D}" />
    <Style x:Key="PointSeries2D.DefaultStyleBase" BasedOn="{StaticResource xySeries2DStyleBase}" TargetType="{x:Type dxc:PointSeries2D}">
        <Setter Property="MarkerModel">
            <Setter.Value>
                <dxc:SimpleMarker2DModel />
            </Setter.Value>
        </Setter>
        <Setter Property="LegendMarkerTemplate" Value="{StaticResource MarkerSeriesLegendMarkerTemplate}" />
    </Style>
    <Style x:Key="BubbleSeries2D.DefaultStyleBase" BasedOn="{StaticResource xySeries2DStyleBase}" TargetType="{x:Type dxc:BubbleSeries2D}">
        <Setter Property="MarkerModel">
            <Setter.Value>
                <dxc:SimpleMarker2DModel />
            </Setter.Value>
        </Setter>
        <Setter Property="LegendMarkerTemplate" Value="{StaticResource MarkerSeriesLegendMarkerTemplate}" />
    </Style>
    <Style x:Key="LineSeries2D.DefaultStyleBase" BasedOn="{StaticResource LineSeries2DBaseStyle}" TargetType="{x:Type dxc:LineSeries2D}" />
    <Style x:Key="SplineSeries2D.DefaultStyleBase" BasedOn="{StaticResource LineSeries2DBaseStyle}" TargetType="{x:Type dxc:SplineSeries2D}">
        <Setter Property="LegendMarkerTemplate" Value="{StaticResource SplineSeriesLegendMarkerTemplate}" />
    </Style>
    <Style x:Key="LineStackedSeries2D.DefaultStyleBase" BasedOn="{StaticResource LineSeries2DBaseStyle}" TargetType="{x:Type dxc:LineStackedSeries2D}" />
    <Style x:Key="LineFullStackedSeries2D.DefaultStyleBase" BasedOn="{StaticResource LineSeries2DBaseStyle}" TargetType="{x:Type dxc:LineFullStackedSeries2D}" />
    <Style x:Key="LineScatterSeries2D.DefaultStyleBase" BasedOn="{StaticResource LineSeries2DBaseStyle}" TargetType="{x:Type dxc:LineScatterSeries2D}" />
    <Style x:Key="LineStepSeries2D.DefaultStyleBase" BasedOn="{StaticResource xySeries2DStyleBase}" TargetType="{x:Type dxc:LineStepSeries2D}">
        <Setter Property="MarkerModel">
            <Setter.Value>
                <dxc:SimpleMarker2DModel />
            </Setter.Value>
        </Setter>
        <Setter Property="LegendMarkerTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxc:LineStepLegendItemPresentation InvertedStep="{Binding Path=RepresentedElement, Converter={dxc:RepresentedElementToInvertedStepConverter}}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AreaSeries2D.DefaultStyleBase" BasedOn="{StaticResource xySeries2DStyleBase}" TargetType="{x:Type dxc:AreaSeries2D}">
        <Setter Property="MarkerModel">
            <Setter.Value>
                <dxc:SimpleMarker2DModel />
            </Setter.Value>
        </Setter>
        <Setter Property="LegendMarkerTemplate" Value="{StaticResource AreaSeriesLegendMarkerTemplate}" />
    </Style>
    <Style x:Key="AreaStepSeries2D.DefaultStyleBase" BasedOn="{StaticResource xySeries2DStyleBase}" TargetType="{x:Type dxc:AreaStepSeries2D}">
        <Setter Property="MarkerModel">
            <Setter.Value>
                <dxc:SimpleMarker2DModel />
            </Setter.Value>
        </Setter>
        <Setter Property="LegendMarkerTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxc:AreaStepLegendItemPresentation InvertedStep="{Binding Path=RepresentedElement, Converter={dxc:RepresentedElementToInvertedStepConverter}}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SplineAreaSeries2D.DefaultStyleBase" BasedOn="{StaticResource xySeries2DStyleBase}" TargetType="{x:Type dxc:SplineAreaSeries2D}">
        <Setter Property="MarkerModel">
            <Setter.Value>
                <dxc:SimpleMarker2DModel />
            </Setter.Value>
        </Setter>
        <Setter Property="LegendMarkerTemplate" Value="{StaticResource AreaSplineSeriesLegendMarkerTemplate}" />
    </Style>
    <Style x:Key="RangeAreaSeries2D.DefaultStyleBase" BasedOn="{StaticResource xySeries2DStyleBase}" TargetType="{x:Type dxc:RangeAreaSeries2D}">
        <Setter Property="Marker1Model">
            <Setter.Value>
                <dxc:SimpleMarker2DModel />
            </Setter.Value>
        </Setter>
        <Setter Property="Marker2Model">
            <Setter.Value>
                <dxc:SimpleMarker2DModel />
            </Setter.Value>
        </Setter>
        <Setter Property="LegendMarkerTemplate" Value="{StaticResource RangeAreaSeriesLegendMarkerTemplate}" />
    </Style>
    <Style x:Key="AreaStackedSeries2D.DefaultStyleBase" BasedOn="{StaticResource xySeries2DStyleBase}" TargetType="{x:Type dxc:AreaStackedSeries2D}">
        <Setter Property="LegendMarkerTemplate" Value="{StaticResource AreaSeriesLegendMarkerTemplate}" />
    </Style>
    <Style x:Key="SplineAreaStackedSeries2D.DefaultStyleBase" BasedOn="{StaticResource xySeries2DStyleBase}" TargetType="{x:Type dxc:SplineAreaStackedSeries2D}">
        <Setter Property="LegendMarkerTemplate" Value="{StaticResource AreaSplineSeriesLegendMarkerTemplate}" />
    </Style>
    <Style x:Key="SplineAreaFullStackedSeries2D.DefaultStyleBase" BasedOn="{StaticResource xySeries2DStyleBase}" TargetType="{x:Type dxc:SplineAreaFullStackedSeries2D}">
        <Setter Property="LegendMarkerTemplate" Value="{StaticResource AreaSplineSeriesLegendMarkerTemplate}" />
    </Style>
    <Style x:Key="AreaFullStackedSeries2D.DefaultStyleBase" BasedOn="{StaticResource xySeries2DStyleBase}" TargetType="{x:Type dxc:AreaFullStackedSeries2D}">
        <Setter Property="LegendMarkerTemplate" Value="{StaticResource AreaSeriesLegendMarkerTemplate}" />
    </Style>
    <Style x:Key="AreaStepStackedSeries2D.DefaultStyleBase" BasedOn="{StaticResource xySeries2DStyleBase}" TargetType="{x:Type dxc:AreaStepStackedSeries2D}">
        <Setter Property="LegendMarkerTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxc:AreaStepLegendItemPresentation InvertedStep="{Binding Path=InvertedStep}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AreaStepFullStackedSeries2D.DefaultStyleBase" BasedOn="{StaticResource xySeries2DStyleBase}" TargetType="{x:Type dxc:AreaStepFullStackedSeries2D}">
        <Setter Property="LegendMarkerTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxc:AreaStepLegendItemPresentation InvertedStep="{Binding Path=InvertedStep}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CandleStickSeries2D.DefaultStyleBase" BasedOn="{StaticResource xySeries2DStyleBase}" TargetType="{x:Type dxc:CandleStickSeries2D}">
        <Setter Property="Model">
            <Setter.Value>
                <dxc:ThinCandleStick2DModel />
            </Setter.Value>
        </Setter>
        <Setter Property="LegendMarkerTemplate" Value="{StaticResource CandleStickSeriesLegendMarkerTemplate}" />
    </Style>
    <Style x:Key="StockSeries2D.DefaultStyleBase" BasedOn="{StaticResource xySeries2DStyleBase}" TargetType="{x:Type dxc:StockSeries2D}">
        <Setter Property="Model">
            <Setter.Value>
                <dxc:ThinStock2DModel />
            </Setter.Value>
        </Setter>
        <Setter Property="LegendMarkerTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxc:StockLegendItemPresentation ShowOpenClose="{Binding Path=RepresentedElement, Converter={dxc:RepresentedElementToShowOpenCloseConverter}}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadarPointSeries2D.DefaultStyleBase" BasedOn="{StaticResource circularSeries2DStyleBase}" TargetType="{x:Type dxc:RadarPointSeries2D}">
        <Setter Property="LegendMarkerTemplate" Value="{StaticResource MarkerSeriesLegendMarkerTemplate}" />
    </Style>
    <Style x:Key="PolarPointSeries2D.DefaultStyleBase" BasedOn="{StaticResource circularSeries2DStyleBase}" TargetType="{x:Type dxc:PolarPointSeries2D}">
        <Setter Property="LegendMarkerTemplate" Value="{StaticResource MarkerSeriesLegendMarkerTemplate}" />
    </Style>
    <Style x:Key="RadarLineSeries2D.DefaultStyleBase" BasedOn="{StaticResource circularSeries2DStyleBase}" TargetType="{x:Type dxc:RadarLineSeries2D}">
        <Setter Property="LegendMarkerTemplate" Value="{StaticResource LineSeriesLegendMarkerTemplate}" />
    </Style>
    <Style x:Key="PolarLineSeries2D.DefaultStyleBase" BasedOn="{StaticResource circularSeries2DStyleBase}" TargetType="{x:Type dxc:PolarLineSeries2D}">
        <Setter Property="LegendMarkerTemplate" Value="{StaticResource LineSeriesLegendMarkerTemplate}" />
    </Style>
    <Style x:Key="RadarLineScatterSeries2D.DefaultStyleBase" BasedOn="{StaticResource circularSeries2DStyleBase}" TargetType="{x:Type dxc:RadarLineScatterSeries2D}">
        <Setter Property="LegendMarkerTemplate" Value="{StaticResource LineSeriesLegendMarkerTemplate}" />
    </Style>
    <Style x:Key="PolarLineScatterSeries2D.DefaultStyleBase" BasedOn="{StaticResource circularSeries2DStyleBase}" TargetType="{x:Type dxc:PolarLineScatterSeries2D}">
        <Setter Property="LegendMarkerTemplate" Value="{StaticResource LineSeriesLegendMarkerTemplate}" />
    </Style>
    <Style x:Key="RadarAreaSeries2D.DefaultStyleBase" BasedOn="{StaticResource circularSeries2DStyleBase}" TargetType="{x:Type dxc:RadarAreaSeries2D}">
        <Setter Property="LegendMarkerTemplate" Value="{StaticResource AreaSeriesLegendMarkerTemplate}" />
    </Style>
    <Style x:Key="PolarAreaSeries2D.DefaultStyleBase" BasedOn="{StaticResource circularSeries2DStyleBase}" TargetType="{x:Type dxc:PolarAreaSeries2D}">
        <Setter Property="LegendMarkerTemplate" Value="{StaticResource AreaSeriesLegendMarkerTemplate}" />
    </Style>
    <Style x:Key="RadarRangeAreaSeries2D.DefaultStyleBase" BasedOn="{StaticResource series2DStyleBase}" TargetType="{x:Type dxc:RadarRangeAreaSeries2D}">
        <Setter Property="Marker1Model">
            <Setter.Value>
                <dxc:SimpleMarker2DModel />
            </Setter.Value>
        </Setter>
        <Setter Property="Marker2Model">
            <Setter.Value>
                <dxc:SimpleMarker2DModel />
            </Setter.Value>
        </Setter>
        <Setter Property="LegendMarkerTemplate" Value="{StaticResource RangeAreaSeriesLegendMarkerTemplate}" />
    </Style>
    <Style x:Key="PolarRangeAreaSeries2D.DefaultStyleBase" BasedOn="{StaticResource series2DStyleBase}" TargetType="{x:Type dxc:PolarRangeAreaSeries2D}">
        <Setter Property="Marker1Model">
            <Setter.Value>
                <dxc:SimpleMarker2DModel />
            </Setter.Value>
        </Setter>
        <Setter Property="Marker2Model">
            <Setter.Value>
                <dxc:SimpleMarker2DModel />
            </Setter.Value>
        </Setter>
        <Setter Property="LegendMarkerTemplate" Value="{StaticResource RangeAreaSeriesLegendMarkerTemplate}" />
    </Style>
    <Style x:Key="PieSeries2D.DefaultStyleBase" BasedOn="{StaticResource series2DStyleBase}" TargetType="{x:Type dxc:PieSeries2D}">
        <Setter Property="Model">
            <Setter.Value>
                <dxc:BorderlessFlatPie2DModel />
            </Setter.Value>
        </Setter>
        <Setter Property="LegendMarkerTemplate" Value="{StaticResource PieSeriesLegendMarkerTemplate}" />
    </Style>
    <Style x:Key="FunnelSeriesPresentation.DefaultStyleBase" TargetType="{x:Type dxc:FunnelSeriesPresentation}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:FunnelSeriesPresentation}">
                    <dxc:TitlesLayoutControl x:Name="FunnelSeries2DTitlesControl" Titles="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Series.Titles}">
                        <dxc:TitlesLayoutControl.MasterElement>
                            <Grid>
                                <dxc:FunnelSeries2DItemsControl
                                    x:Name="funnelSeries2DItemsControl"
                                    Series="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Series}"
                                    SeriesLabel="{Binding Path=Series.ActualLabel, RelativeSource={RelativeSource TemplatedParent}}"
                                    SeriesLabelItems="{Binding Path=Series.ActualLabel.Items, RelativeSource={RelativeSource TemplatedParent}}">
                                    <dxc:FunnelSeries2DItemsControl.PointsContainer>
                                        <dxc:PointsContainer x:Name="PART_PointsContainer" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Series}" ItemsSource="{Binding Path=SeriesItem.VisiblePointItems, RelativeSource={RelativeSource TemplatedParent}}">
                                            <dxc:ChartItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <dxc:FunnelSeries2DPointsPanel x:Name="PART_PointsPanel" />
                                                </ItemsPanelTemplate>
                                            </dxc:ChartItemsControl.ItemsPanel>
                                        </dxc:PointsContainer>
                                    </dxc:FunnelSeries2DItemsControl.PointsContainer>
                                    <dxc:FunnelSeries2DItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <dxc:FunnelSeries2DPanel />
                                        </ItemsPanelTemplate>
                                    </dxc:FunnelSeries2DItemsControl.ItemsPanel>
                                </dxc:FunnelSeries2DItemsControl>
                                <Grid x:Name="exclamationMessage" Background="#26FFFFFF" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SeriesItem.ShowExclamation, Converter={dxmvvm:BooleanToVisibilityConverter}}">
                                    <Viewbox MaxWidth="500">
                                        <TextBlock
                                            Width="500"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            FontSize="24"
                                            FontWeight="Regular"
                                            Foreground="#FF333333"
                                            LineHeight="32"
                                            Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SeriesItem.ExclamationMessage}"
                                            TextAlignment="Center"
                                            TextWrapping="Wrap" />
                                    </Viewbox>
                                </Grid>
                            </Grid>
                        </dxc:TitlesLayoutControl.MasterElement>
                    </dxc:TitlesLayoutControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PieSeries2DPresentation.DefaultStyleBase" TargetType="{x:Type dxc:PieSeries2DPresentation}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:PieSeries2DPresentation}">
                    <dxc:TitlesLayoutControl x:Name="PART_TitlesControl" Titles="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Series.Titles}">
                        <dxc:TitlesLayoutControl.MasterElement>
                            <dxc:PieSeries2DItemsControl
                                x:Name="PART_ElementsContainer"
                                Series="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Series}"
                                SeriesLabel="{Binding Path=Series.ActualLabel, RelativeSource={RelativeSource TemplatedParent}}"
                                SeriesLabelItems="{Binding Path=Series.ActualLabel.Items, RelativeSource={RelativeSource TemplatedParent}}">
                                <dxc:PieSeries2DItemsControl.Template>
                                    <ControlTemplate>
                                        <dxc:ChartItemsPresenter />
                                    </ControlTemplate>
                                </dxc:PieSeries2DItemsControl.Template>
                                <dxc:PieSeries2DItemsControl.PointsContainer>
                                    <dxc:PointsContainer x:Name="PART_PointsContainer" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Series}" ItemsSource="{Binding Path=SeriesItem.VisiblePointItems, RelativeSource={RelativeSource TemplatedParent}}">
                                        <dxc:ChartItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <dxc:PieSeries2DPointsPanel x:Name="PART_PointsPanel" />
                                            </ItemsPanelTemplate>
                                        </dxc:ChartItemsControl.ItemsPanel>
                                    </dxc:PointsContainer>
                                </dxc:PieSeries2DItemsControl.PointsContainer>
                                <dxc:PieSeries2DItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <dxc:PieSeries2DPanel />
                                    </ItemsPanelTemplate>
                                </dxc:PieSeries2DItemsControl.ItemsPanel>
                            </dxc:PieSeries2DItemsControl>
                        </dxc:TitlesLayoutControl.MasterElement>
                    </dxc:TitlesLayoutControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NestedDonutSeries2D.DefaultStyleBase" BasedOn="{StaticResource series2DStyleBase}" TargetType="{x:Type dxc:NestedDonutSeries2D}">
        <Setter Property="Model">
            <Setter.Value>
                <dxc:BorderlessFlatPie2DModel />
            </Setter.Value>
        </Setter>
        <Setter Property="LegendMarkerTemplate" Value="{StaticResource NestedDonutLegendMarkerTemplate}" />
    </Style>
    <Style x:Key="FunnelSeries2D.DefaultStyleBase" BasedOn="{StaticResource series2DStyleBase}" TargetType="{x:Type dxc:FunnelSeries2D}">
        <Setter Property="Model">
            <Setter.Value>
                <dxc:Funnel2DModel />
            </Setter.Value>
        </Setter>
        <Setter Property="LegendMarkerTemplate" Value="{StaticResource FunnelSeriesLegendMarkerTemplate}" />
    </Style>
    <Style x:Key="NestedDonut2DGroupPresentation.DefaultStyleBase" TargetType="{x:Type dxc:NestedDonut2DGroupPresentation}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <dxc:TitlesLayoutControl Titles="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Titles}">
                        <dxc:TitlesLayoutControl.MasterElement>
                            <dxc:NestedDonut2DGroupItemsControl NestedDonutGroup="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=NestedDonutGroup}">
                                <dxc:NestedDonut2DGroupItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <dxc:NestedDonut2DGroupPanel />
                                    </ItemsPanelTemplate>
                                </dxc:NestedDonut2DGroupItemsControl.ItemsPanel>
                            </dxc:NestedDonut2DGroupItemsControl>
                        </dxc:TitlesLayoutControl.MasterElement>
                    </dxc:TitlesLayoutControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PointsContainerPresenter.DefaultStyleBase" TargetType="{x:Type dxc:PointsContainerPresenter}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxc:PointsContainerPresenter">
                    <dxc:PointsContainer x:Name="PART_PointsContainer" ItemsSource="{TemplateBinding ItemsSource}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <dxc:PieSeries2DPointsPanel x:Name="PART_PointsPanel" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </dxc:PointsContainer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BarSeries3D.DefaultStyleBase" BasedOn="{StaticResource BarSeries3DStyle}" TargetType="{x:Type dxc:BarSeries3D}" />
    <Style x:Key="BarSideBySideSeries3D.DefaultStyleBase" BasedOn="{StaticResource BarSeries3DStyle}" TargetType="{x:Type dxc:BarSideBySideSeries3D}" />
    <Style x:Key="PointSeries3D.DefaultStyleBase" BasedOn="{StaticResource series2DStyleBase}" TargetType="{x:Type dxc:PointSeries3D}">
        <Setter Property="LegendMarkerTemplate" Value="{StaticResource MarkerSeriesLegendMarkerTemplate}" />
    </Style>
    <Style x:Key="BubbleSeries3D.DefaultStyleBase" BasedOn="{StaticResource series2DStyleBase}" TargetType="{x:Type dxc:BubbleSeries3D}">
        <Setter Property="LegendMarkerTemplate" Value="{StaticResource MarkerSeriesLegendMarkerTemplate}" />
    </Style>
    <Style x:Key="AreaSeries3D.DefaultStyleBase" BasedOn="{StaticResource AreaSeries3DStyle}" TargetType="{x:Type dxc:AreaSeries3D}" />
    <Style x:Key="AreaStackedSeries3D.DefaultStyleBase" BasedOn="{StaticResource AreaSeries3DStyle}" TargetType="{x:Type dxc:AreaStackedSeries3D}" />
    <Style x:Key="AreaFullStackedSeries3D.DefaultStyleBase" BasedOn="{StaticResource AreaSeries3DStyle}" TargetType="{x:Type dxc:AreaFullStackedSeries3D}" />
    <Style x:Key="PieSeries3D.DefaultStyleBase" BasedOn="{StaticResource series2DStyleBase}" TargetType="{x:Type dxc:PieSeries3D}">
        <Setter Property="LegendMarkerTemplate" Value="{StaticResource PieSeriesLegendMarkerTemplate}" />
    </Style>
    <Style x:Key="Series3DBase.DefaultStyleBase" TargetType="{x:Type dxc:Series3DBase}">
        <Setter Property="CrosshairLabelTemplate" Value="{DynamicResource {dxct:LWKey ChartControl.CrosshairSeriesLabelContentTemplate}}" />
    </Style>
    <Style x:Key="BoxPlotSeries2D.DefaultStyleBase" BasedOn="{StaticResource xySeries2DStyleBase}" TargetType="{x:Type dxc:BoxPlotSeries2D}">
        <Setter Property="LegendMarkerTemplate" Value="{StaticResource BoxPlotLegendMarkerTemplate}" />
    </Style>
    <Style x:Key="ChartMirrorControl.DefaultStyleBase" TargetType="{x:Type dxc:ChartMirrorControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:ChartMirrorControl}">
                    <Rectangle Fill="{TemplateBinding MirrorBrush}" OpacityMask="{TemplateBinding MirrorOpacityBrush}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarPresentation.DefaultStyleBase" TargetType="{x:Type dxc:ScrollBarPresentation}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:ScrollBarPresentation}">
                    <Grid>
                        <dxc:AxisScrollBar
                            Annotations="{Binding Path=ScrollBarItem.Annotations, RelativeSource={RelativeSource TemplatedParent}}"
                            Command="{Binding Path=ScrollBarItem.Command, RelativeSource={RelativeSource TemplatedParent}}"
                            MaxValue="{Binding Path=ScrollBarItem.MaxPosition, RelativeSource={RelativeSource TemplatedParent}}"
                            MinValue="{Binding Path=ScrollBarItem.MinPosition, RelativeSource={RelativeSource TemplatedParent}}"
                            Orientation="{Binding Path=ScrollBarItem.Orientation, RelativeSource={RelativeSource TemplatedParent}}"
                            Visible="{Binding Path=ScrollBarItem.Visible, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Pane.DefaultStyleBase" TargetType="{x:Type dxc:Pane}">
        <Setter Property="DomainBrush" Value="{DynamicResource {dxct:LWKey ChartBrushes.Domain2DBrush}}" />
        <Setter Property="DomainBorderBrush" Value="{DynamicResource {dxct:LWKey ChartBrushes.DomainBorderBrush}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:Pane}">
                    <dx:DXBorder Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <dxc:PanePanel IsCollapsedPane="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Collapsed}">
                            <dxc:PaneTitlePanel Title="{TemplateBinding ActualTitle}" dxc:XYDiagram2D.ElementType="PaneTitlePanel" />
                            <dxc:PaneItemsControl
                                x:Name="PART_PaneItemsControl"
                                dxc:XYDiagram2D.ElementType="PaneItemsControl"
                                AxisXScrollBarItem="{TemplateBinding AxisXScrollBarItem}"
                                AxisYScrollBarItem="{TemplateBinding AxisYScrollBarItem}"
                                ChartDataTable="{TemplateBinding ChartDataTable}"
                                Pane="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                PaneItems="{TemplateBinding PaneItems}"
                                SeriesLabelItems="{TemplateBinding SeriesLabelItems}"
                                TotalLabelItems="{TemplateBinding TotalLabelItems}"
                                Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Collapsed, Converter={StaticResource collapsedToPaneContentVisibilityConverter}}">
                                <dxc:PaneItemsControl.PaneContent>
                                    <dxc:DomainPanel x:Name="PART_Domain" dxc:XYDiagram2D.ElementType="DiagramContent" Pane="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                        <dx:DXBorder x:Name="PART_DomainBackground" Background="{TemplateBinding DomainBrush}" BorderThickness="0" />
                                        <dxc:InterlaceRenderControl x:Name="PART_Interlace" AxesSource="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
                                        <dxc:MajorGridLinesRenderControl x:Name="PART_MajorGridLines" AxesSource="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
                                        <dxc:MinorGridLinesRenderControl x:Name="PART_MinorGridLines" AxesSource="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
                                        <dxc:StripsItemsControl x:Name="PART_Strips" ItemsSource="{TemplateBinding StripItems}">
                                            <dxc:StripsItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <dxc:Axis2DElementsPanel />
                                                </ItemsPanelTemplate>
                                            </dxc:StripsItemsControl.ItemsPanel>
                                        </dxc:StripsItemsControl>
                                        <dxc:ConstantLinesItemsControl x:Name="PART_ConstantLinesBehind" ItemsSource="{TemplateBinding ConstantLineBehindItems}">
                                            <dxc:ConstantLinesItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <dxc:Axis2DElementsPanel />
                                                </ItemsPanelTemplate>
                                            </dxc:ConstantLinesItemsControl.ItemsPanel>
                                        </dxc:ConstantLinesItemsControl>
                                        <Grid x:Name="PART_SeriesContainer">
                                            <dxc:SeriesContainerCanvas SeriesContainerItems="{TemplateBinding SeriesContainers}" />
                                            <ContentPresenter Content="{Binding Path=(dxc:ChartControlBase.Chart).IsDirectXSurfaceRendering, RelativeSource={RelativeSource Self}}" ContentTemplateSelector="{StaticResource directXSurfaceTemplateSelector}" />
                                        </Grid>
                                        <dxc:DiagramSeriesItemsControl x:Name="PART_Series" ItemsSource="{TemplateBinding SeriesItems}" Owner="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                            <dxc:DiagramSeriesItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <dxc:XYDiagram2DSeriesPanel />
                                                </ItemsPanelTemplate>
                                            </dxc:DiagramSeriesItemsControl.ItemsPanel>
                                        </dxc:DiagramSeriesItemsControl>
                                        <dxc:IndicatorItemsControl x:Name="PART_Indicators" ItemsSource="{TemplateBinding IndicatorItems}">
                                            <dxc:IndicatorItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <dxc:IndicatorElementsPanel x:Name="indicatorElementsPanel" />
                                                </ItemsPanelTemplate>
                                            </dxc:IndicatorItemsControl.ItemsPanel>
                                        </dxc:IndicatorItemsControl>
                                        <dxc:ConstantLinesItemsControl x:Name="PART_ConstantLinesInFront" ItemsSource="{TemplateBinding ConstantLineInFrontItems}">
                                            <dxc:ConstantLinesItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <dxc:Axis2DElementsPanel />
                                                </ItemsPanelTemplate>
                                            </dxc:ConstantLinesItemsControl.ItemsPanel>
                                        </dxc:ConstantLinesItemsControl>
                                        <dxc:FibonacciLabelItemsControl x:Name="PART_IndicatorLabels" ItemsSource="{TemplateBinding IndicatorLabelItems}">
                                            <dxc:FibonacciLabelItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <dxc:IndicatorLabelElementsPanel x:Name="indicatorLabelElementsPanel" />
                                                </ItemsPanelTemplate>
                                            </dxc:FibonacciLabelItemsControl.ItemsPanel>
                                        </dxc:FibonacciLabelItemsControl>
                                        <dxc:ConstantLineTitleItemsControl x:Name="PART_ConstantLineTitles" ItemsSource="{TemplateBinding ConstantLineTitleItems}">
                                            <dxc:ConstantLineTitleItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <dxc:ConstantLineTitlePanel />
                                                </ItemsPanelTemplate>
                                            </dxc:ConstantLineTitleItemsControl.ItemsPanel>
                                        </dxc:ConstantLineTitleItemsControl>
                                        <dx:DXBorder x:Name="PART_DomainBorder" BorderBrush="{TemplateBinding DomainBorderBrush}" BorderThickness="1" />
                                    </dxc:DomainPanel>
                                </dxc:PaneItemsControl.PaneContent>
                                <dxc:PaneItemsControl.ScaleBreaksContainerControl>
                                    <dxc:ScaleBreaksRenderControl x:Name="PART_ScaleBreaksContainer" dxc:XYDiagram2D.ElementType="ScaleBreaksContainer" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
                                </dxc:PaneItemsControl.ScaleBreaksContainerControl>
                                <dxc:PaneItemsControl.MirrorControl>
                                    <dxc:ChartMirrorControl x:Name="PART_Mirror" dxc:XYDiagram2D.ElementType="Mirror" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
                                </dxc:PaneItemsControl.MirrorControl>
                                <dxc:PaneItemsControl.Pseudo3DMirrorControl>
                                    <dxc:ChartMirrorControl
                                        x:Name="PART_Pseudo3DMirror"
                                        dxc:XYDiagram2D.ElementType="Pseudo3DMirror"
                                        DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                        IsPseudo3D="True" />
                                </dxc:PaneItemsControl.Pseudo3DMirrorControl>
                                <dxc:PaneItemsControl.Pseudo3DBarSeriesContainer>
                                    <dxc:PointsContainer
                                        x:Name="PART_Pseudo3DSeries"
                                        Panel.ZIndex="1"
                                        dxc:XYDiagram2D.ElementType="Pseudo3DBarSeriesContainer"
                                        DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                        ItemsSource="{TemplateBinding Pseudo3DPointItems}">
                                        <dxc:ChartItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <dxc:Pseudo3DSeriesPointsPanel />
                                            </ItemsPanelTemplate>
                                        </dxc:ChartItemsControl.ItemsPanel>
                                    </dxc:PointsContainer>
                                </dxc:PaneItemsControl.Pseudo3DBarSeriesContainer>
                                <dxc:PaneItemsControl.CrosshairContainer>
                                    <dxc:CrosshairLinesRenderControl
                                        x:Name="PART_CrosshairLinesContainer"
                                        dxc:XYDiagram2D.ElementType="CrosshairContainer"
                                        IsHitTestVisible="False"
                                        LineItems="{TemplateBinding CrosshairLinesGeometry}" />
                                </dxc:PaneItemsControl.CrosshairContainer>
                                <dxc:PaneItemsControl.AnnotationContainer>
                                    <dxc:ChartItemsControl dxc:XYDiagram2D.ElementType="AnnotationContainer" ItemsSource="{TemplateBinding Annotations}">
                                        <dxc:ChartItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <dxc:AnnotationLayoutPanel />
                                            </ItemsPanelTemplate>
                                        </dxc:ChartItemsControl.ItemsPanel>
                                    </dxc:ChartItemsControl>
                                </dxc:PaneItemsControl.AnnotationContainer>
                                <dxc:PaneItemsControl.LegendsContainer>
                                    <dxc:ChartItemsControl Panel.ZIndex="4" dxc:XYDiagram2D.ElementType="LegendsContainer" ItemsSource="{TemplateBinding Legends}">
                                        <dxc:ChartItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <dxc:LegendsPanel />
                                            </ItemsPanelTemplate>
                                        </dxc:ChartItemsControl.ItemsPanel>
                                    </dxc:ChartItemsControl>
                                </dxc:PaneItemsControl.LegendsContainer>
                                <dxc:PaneItemsControl.SelectionControl>
                                    <dxc:SelectionControl
                                        x:Name="PART_Selection"
                                        dxc:XYDiagram2D.ElementType="Selection"
                                        IsHighlighted="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectionInfo.IsHighlighted}"
                                        IsSelected="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectionInfo.IsSelected}" />
                                </dxc:PaneItemsControl.SelectionControl>
                                <dxc:PaneItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <dxc:XYDiagram2DPanel />
                                    </ItemsPanelTemplate>
                                </dxc:PaneItemsControl.ItemsPanel>
                            </dxc:PaneItemsControl>
                        </dxc:PanePanel>
                    </dx:DXBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="XYDiagram2D.DefaultStyleBase" BasedOn="{StaticResource Diagram2DStyle}" TargetType="{x:Type dxc:XYDiagram2D}">
        <Setter Property="CrosshairSeriesLabelForeground" Value="{DynamicResource {dxct:LWKey ChartBrushes.CrosshairSeriesLabelForeground}}" />
        <Setter Property="CrosshairSeriesLabelTemplate" Value="{DynamicResource {dxct:LWKey ChartControl.CrosshairPopupTemplate}}" />
        <Setter Property="CrosshairPopupBackground" Value="{DynamicResource {dxct:LWKey ChartBrushes.CrosshairPopupBackground}}" />
        <Setter Property="CrosshairBorderBrush" Value="{DynamicResource {dxct:LWKey ChartBrushes.CrosshairBorderBrush}}" />
        <Setter Property="CrosshairEmptySeriesLabelTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dx:DXBorder Width="1" Height="1" Background="{x:Null}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SelectionTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid SnapsToDevicePixels="True">
                        <dx:DXBorder
                            Margin="-4"
                            BorderBrush="Black"
                            BorderThickness="5"
                            CornerRadius="2"
                            Opacity="0.1" />
                        <dx:DXBorder
                            BorderBrush="Black"
                            BorderThickness="1"
                            CornerRadius="2"
                            Opacity="0.5" />
                        <dx:DXBorder
                            Margin="1"
                            BorderBrush="White"
                            BorderThickness="1"
                            CornerRadius="1"
                            Opacity="0.5">
                            <dx:DXBorder.Background>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                    <GradientStop Offset="1" Color="#19FFFFFF" />
                                    <GradientStop Color="#BFFFFFFF" />
                                </LinearGradientBrush>
                            </dx:DXBorder.Background>
                        </dx:DXBorder>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="PanesPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <dxc:XYDiagram2DPanesPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Annotations" Value="{Binding Path=(dxc:ChartControlBase.Chart).DiagramAnnotations, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:XYDiagram2D}">
                    <dxc:ChartContentControl
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Template="{DynamicResource {dxct:LWKey ChartControl.XYDiagram2DWrapperTemplate}}"
                        Visibility="{TemplateBinding Visibility}">
                        <Grid>
                            <dxc:SeriesTemplateHolderControl x:Name="PART_SeriesTemplateHolder" Content="{TemplateBinding SeriesTemplate}" />
                            <dxc:ChartItemsControl x:Name="PART_SeriesHolder" ItemsSource="{TemplateBinding Series}" />
                            <dxc:ChartItemsControl x:Name="PART_LogicalTreeHolder" ItemsSource="{TemplateBinding Elements}" />
                            <dxc:ChartItemsControl x:Name="PART_Panes" ItemsPanel="{TemplateBinding PanesPanel}" ItemsSource="{TemplateBinding AllPanes}" />
                            <dxc:SelectionControl IsHighlighted="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectionInfo.IsHighlighted}" IsSelected="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectionInfo.IsSelected}" />
                        </Grid>
                    </dxc:ChartContentControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Legend.DefaultStyleBase" BasedOn="{StaticResource LegendBaseStyle}" TargetType="dxc:Legend">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:Legend}">
                    <Grid>
                        <dxc:ChartContentControl
                            x:Name="LegendWrapper"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                            Template="{DynamicResource {dxct:LWKey ChartControl.LegendWrapperTemplate}}"
                            Visibility="{Binding ElementName=legendItemsControl, Path=ActualHeight, Converter={StaticResource heightToVisibilityConverter}}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <dxc:ChartContentPresenter Content="{TemplateBinding Title}" />
                                <dxc:LegendItemsControl
                                    x:Name="legendItemsControl"
                                    Grid.Row="1"
                                    DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                    ItemTemplate="{TemplateBinding ItemTemplate}"
                                    ItemsPanel="{TemplateBinding ItemsPanel}"
                                    LegendItems="{TemplateBinding Items}"
                                    ReverseItems="{TemplateBinding ReverseItems}" />
                                <TextBlock
                                    x:Name="tbEmptyLegendContent"
                                    Grid.Row="1"
                                    Text="Empty Legend"
                                    Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=EmptyContentVisibility}" />
                            </Grid>
                        </dxc:ChartContentControl>
                        <dxc:SelectionControl IsHighlighted="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectionInfo.IsHighlighted}" IsSelected="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectionInfo.IsSelected}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HeatmapLegend.DefaultStyleBase" BasedOn="{StaticResource LegendBaseStyle}" TargetType="{x:Type dxh:HeatmapLegend}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxh:HeatmapLegend}">
                    <Grid>
                        <dxc:ChartContentControl
                            x:Name="LegendWrapper"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                            Template="{DynamicResource {dxct:LWKey ChartControl.LegendWrapperTemplate}}"
                            Visibility="{Binding ElementName=legendItemsControl, Path=ActualHeight, Converter={StaticResource heightToVisibilityConverter}}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <dxc:ChartContentPresenter Content="{TemplateBinding Title}" />
                                <dxh:HeatmapLegendItemsControl
                                    x:Name="legendItemsControl"
                                    Grid.Row="1"
                                    DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                    ItemTemplate="{TemplateBinding ItemTemplate}"
                                    ItemsPanel="{TemplateBinding ItemsPanel}"
                                    ItemsSource="{TemplateBinding Items}" />
                                <TextBlock
                                    x:Name="tbEmptyLegendContent"
                                    Grid.Row="1"
                                    Text="Empty Legend"
                                    Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=EmptyContentVisibility}" />
                            </Grid>
                        </dxc:ChartContentControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LegendItemPresentation.DefaultStyleBase" TargetType="dxc:LegendItemPresentation">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxc:LegendItemPresentation">
                    <Path
                        x:Name="PART_MarkerPath"
                        Margin="{Binding Path=ActualMarkerMargin}"
                        Fill="{Binding Path=ActualMarkerBrush}"
                        OpacityMask="{Binding Path=OpacityMask}"
                        SnapsToDevicePixels="True"
                        Stretch="Uniform"
                        Stroke="{Binding Path=ActualMarkerLineBrush}"
                        StrokeDashArray="{Binding Path=MarkerLineStyle.DashStyle.Dashes}"
                        StrokeDashCap="{Binding Path=MarkerLineStyle.DashCap}"
                        StrokeDashOffset="{Binding Path=MarkerLineStyle.DashStyle.Offset}"
                        StrokeEndLineCap="Square"
                        StrokeLineJoin="{Binding Path=MarkerLineStyle.LineJoin}"
                        StrokeMiterLimit="{Binding Path=MarkerLineStyle.MiterLimit}"
                        StrokeStartLineCap="Square"
                        StrokeThickness="{Binding Path=ActualLineThickness}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CustomLegendItem.DefaultStyleBase" TargetType="dxc:CustomLegendItem">
        <Setter Property="MarkerBrush" Value="Red" />
        <Setter Property="MarkerTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Rectangle Fill="{Binding Path=ActualMarkerBrush}" SnapsToDevicePixels="True" Stretch="Uniform" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <!--<Setter
            Property="Foreground"
            Value="{DynamicResource {dxct:LWKey ChartBrushes.LegendForeground}}" />-->
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxc:LegendBase}}, Path=Foreground}" />
    </Style>
    <Style x:Key="SeriesLabelConnectorPresentation.DefaultStyleBase" TargetType="{x:Type dxc:SeriesLabelConnectorPresentation}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:SeriesLabelConnectorPresentation}">
                    <Path Stroke="{Binding Path=LabelItem.Color, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource seriesLabelConnectorPathStyle}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SeriesLabelPresentation.DefaultStyleBase" BasedOn="{StaticResource baseSeriesLabelStyle}" TargetType="{x:Type dxc:SeriesLabelPresentation}" />
    <Style x:Key="StackedBarTotalLabelConnectorPresentation.DefaultStyleBase" TargetType="{x:Type dxc:StackedBarTotalLabelConnectorPresentation}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:StackedBarTotalLabelConnectorPresentation}">
                    <Path Stroke="{Binding Path=Label.BorderBrush, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource seriesLabelConnectorPathStyle}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="StackedBarTotalLabelPresentation.DefaultStyleBase" BasedOn="{StaticResource baseSeriesLabelStyle}" TargetType="{x:Type dxc:StackedBarTotalLabelPresentation}" />
    <Style x:Key="SeriesLabel.DefaultStyleBase" TargetType="{x:Type dxc:SeriesLabel}">
        <Setter Property="ElementTemplate" Value="{DynamicResource {dxct:LWKey ChartControl.SeriesLabelTemplate}}" />
        <Setter Property="Foreground" Value="{DynamicResource {dxct:LWKey ChartBrushes.SeriesLabelForeground}}" />
    </Style>
    <Style x:Key="StackedBarTotalLabel.DefaultStyleBase" TargetType="{x:Type dxc:StackedBarTotalLabel}">
        <Setter Property="Background" Value="{DynamicResource {dxct:LWKey ChartBrushes.LegendBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource {dxct:LWKey ChartBrushes.LegendForeground}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxct:LWKey ChartBrushes.LegendBorderBrush}}" />
        <Setter Property="BorderThickness" Value="{DynamicResource {dxct:LWKey ChartControl.LegendBorderThickness}}" />
        <Setter Property="ElementTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Margin="{DynamicResource {dxct:LWKey ChartControl.LegendItemMargin}}" Text="{Binding Text}" TextAlignment="Center" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SeriesLabelForChartModel.DefaultStyleBase" TargetType="{x:Type dxc:SeriesLabelForChartModel}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <dx:DXBorder BorderThickness="1">
                        <dx:DXBorder.Background>
                            <MultiBinding Converter="{StaticResource specialBrushOverlayConverter}">
                                <Binding Path="Label.Background" />
                                <Binding Path="Color" />
                            </MultiBinding>
                        </dx:DXBorder.Background>
                        <TextBlock Text="{Binding Text}" />
                    </dx:DXBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ThinStock2DModelControl.DefaultStyleBase" TargetType="{x:Type dxc:ThinStock2DModelControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:ThinStock2DModelControl}">
                    <dxc:Stock2DModelPanel>
                        <dx:DXBorder Width="1" dxc:Stock2DModelPanel.Elements="CenterLine" Background="{Binding Path=PointColor, ConverterParameter=#FF808080, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                        <dx:DXBorder
                            Height="1"
                            Margin="0,0,-1,0"
                            dxc:Stock2DModelPanel.Elements="OpenLine"
                            Background="{Binding Path=PointColor, ConverterParameter=#FF808080, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                        <dx:DXBorder
                            Height="1"
                            Margin="-1,0,0,0"
                            dxc:Stock2DModelPanel.Elements="CloseLine"
                            Background="{Binding Path=PointColor, ConverterParameter=#FF808080, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                    </dxc:Stock2DModelPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FlatStock2DModelControl.DefaultStyleBase" TargetType="{x:Type dxc:FlatStock2DModelControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:FlatStock2DModelControl}">
                    <dxc:Stock2DModelPanel>
                        <dx:DXBorder Width="3" dxc:Stock2DModelPanel.Elements="CenterLine" Background="{Binding Path=PointColor, ConverterParameter=#FF808080, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                        <dx:DXBorder
                            Height="3"
                            Margin="0,0,-2,0"
                            dxc:Stock2DModelPanel.Elements="OpenLine"
                            Background="{Binding Path=PointColor, ConverterParameter=#FF808080, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                        <dx:DXBorder
                            Height="3"
                            Margin="-2,0,0,0"
                            dxc:Stock2DModelPanel.Elements="CloseLine"
                            Background="{Binding Path=PointColor, ConverterParameter=#FF808080, Converter={StaticResource brushOverlayConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                    </dxc:Stock2DModelPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Title.DefaultStyleBase" BasedOn="{StaticResource baseTitleStyle}" TargetType="{x:Type dxc:Title}">
        <Setter Property="Margin" Value="{DynamicResource {dxct:LWKey ChartControl.TitleMarginValue}}" />
        <Setter Property="Foreground" Value="{DynamicResource {dxct:LWKey ChartBrushes.TitleForeground}}" />
        <Setter Property="FontSize" Value="{DynamicResource {dxct:LWKey ChartControl.TitleFontSize}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:Title}">
                    <Grid>
                        <dx:DXBorder
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <dxc:ChartContentPresenter Content="{TemplateBinding ActualContent}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                        </dx:DXBorder>
                        <dxc:SelectionControl IsHighlighted="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectionInfo.IsHighlighted}" IsSelected="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectionInfo.IsSelected}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PieTotalLabel.DefaultStyleBase" TargetType="{x:Type dxc:PieTotalLabel}">
        <Setter Property="Foreground" Value="{DynamicResource {dxct:LWKey ChartBrushes.AxisTitleForeground}}" />
        <Setter Property="FontSize" Value="{DynamicResource {dxct:LWKey ChartControl.TitleFontSize}}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock
                        x:Name="defaultTotalLabelTextBlock"
                        Text="{Binding}"
                        TextAlignment="Center"
                        TextWrapping="Wrap" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:PieTotalLabel}">
                    <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                        <dx:DXBorder
                            x:Name="totalLabelBorder"
                            Margin="{TemplateBinding Margin}"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <dxc:ChartContentPresenter HorizontalAlignment="Center" Content="{TemplateBinding ActualContent}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                        </dx:DXBorder>
                        <dxc:SelectionControl IsHighlighted="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectionInfo.IsHighlighted}" IsSelected="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectionInfo.IsSelected}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LegendTitle.DefaultStyleBase" BasedOn="{StaticResource baseTitleStyle}" TargetType="{x:Type dxc:LegendTitle}">
        <Setter Property="Margin" Value="{DynamicResource {dxct:LWKey ChartControl.TitleMarginValue}}" />
        <Setter Property="FontSize" Value="{DynamicResource {dxct:LWKey ChartControl.TitleFontSize}}" />
        <Setter Property="DataContext" Value="{Binding DataContext}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:LegendTitle}">
                    <Grid>
                        <dx:DXBorder
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <dxc:ChartContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                        </dx:DXBorder>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AxisTitle.DefaultStyleBase" BasedOn="{StaticResource baseTitleStyle}" TargetType="{x:Type dxc:AxisTitle}">
        <Setter Property="Foreground" Value="{DynamicResource {dxct:LWKey ChartBrushes.AxisTitleForeground}}" />
        <Setter Property="FontSize" Value="{DynamicResource {dxct:LWKey ChartControl.AxisTitleFontSize}}" />
        <Setter Property="Padding" Value="{DynamicResource {dxct:LWKey ChartControl.AxisTitlePadding}}" />
    </Style>
    <Style x:Key="ConstantLineTitle.DefaultStyleBase" BasedOn="{StaticResource baseTitleStyle}" TargetType="{x:Type dxc:ConstantLineTitle}">
        <Setter Property="Foreground" Value="{DynamicResource {dxct:LWKey ChartBrushes.ConstantLineTitleForeground}}" />
    </Style>
    <Style x:Key="PaneTitle.DefaultStyleBase" BasedOn="{StaticResource baseTitleStyle}" TargetType="{x:Type dxc:PaneTitle}">
        <Setter Property="Margin" Value="{DynamicResource {dxct:LWKey ChartControl.PaneTitleMarginValue}}" />
        <Setter Property="FontSize" Value="{DynamicResource {dxct:LWKey ChartControl.PaneTitleFontSize}}" />
        <Setter Property="FontWeight" Value="{DynamicResource {dxct:LWKey ChartControl.PaneTitleFontWeight}}" />
        <Setter Property="Foreground" Value="{DynamicResource {dxct:LWKey ChartBrushes.PaneTitleForeground}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxc:PaneTitle}">
                    <Grid>
                        <dx:DXBorder
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <dxc:ChartContentPresenter x:Name="PART_PaneTitleContentPresenter_Normal" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                                <dxc:ChartContentPresenter
                                    x:Name="PART_PaneTitleContentPresenter_Hot"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    TextElement.Foreground="{DynamicResource {dxct:LWKey ChartBrushes.PaneTitleForegroundHot}}"
                                    Visibility="Collapsed" />
                                <Path
                                    x:Name="PART_PaneTitleArrowShape_Normal"
                                    Grid.Column="1"
                                    Width="8"
                                    Height="4"
                                    Margin="10,0,10,0"
                                    Data="F1M211,186L205,186 208,189 211,186z"
                                    Fill="{TemplateBinding Foreground}"
                                    Stretch="Fill"
                                    Visibility="Collapsed" />
                                <Path
                                    x:Name="PART_PaneTitleArrowShape_Normal_Colored"
                                    Grid.Column="1"
                                    Width="8"
                                    Height="4"
                                    Margin="10,0,10,0"
                                    Data="F1M211,186L205,186 208,189 211,186z"
                                    Stretch="Fill"
                                    Visibility="Collapsed" />
                                <Path
                                    x:Name="PART_PaneTitleArrowShape_Collapsed"
                                    Grid.Column="1"
                                    Width="4"
                                    Height="8"
                                    Margin="10,0,10,0"
                                    Data="F1M0,4L4,0 4,8 0,4z"
                                    Fill="{TemplateBinding Foreground}"
                                    Stretch="Fill"
                                    Visibility="Collapsed" />
                                <Path
                                    x:Name="PART_PaneTitleArrowShape_Collapsed_Colored"
                                    Grid.Column="1"
                                    Width="4"
                                    Height="8"
                                    Margin="10,0,10,0"
                                    Data="F1M0,4L4,0 4,8 0,4z"
                                    Stretch="Fill"
                                    Visibility="Collapsed" />
                            </Grid>
                        </dx:DXBorder>
                        <dxc:SelectionControl IsHighlighted="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectionInfo.IsHighlighted}" IsSelected="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectionInfo.IsSelected}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleContentPresenter_Normal" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleContentPresenter_Hot" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleArrowShape_Normal" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleArrowShape_Normal_Colored" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleArrowShape_Collapsed" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleArrowShape_Collapsed_Colored" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal_Collapsed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleContentPresenter_Normal" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleContentPresenter_Hot" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleArrowShape_Normal" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleArrowShape_Normal_Colored" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleArrowShape_Collapsed" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleArrowShape_Collapsed_Colored" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleContentPresenter_Normal" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleContentPresenter_Hot" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleArrowShape_Normal" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleArrowShape_Normal_Colored" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleArrowShape_Collapsed" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleArrowShape_Collapsed_Colored" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleArrowShape_Normal_Colored" Storyboard.TargetProperty="(Shape.Fill)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{DynamicResource {dxct:LWKey ChartBrushes.PaneTitleForegroundHot}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver_Collapsed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleContentPresenter_Normal" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleContentPresenter_Hot" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleArrowShape_Normal" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleArrowShape_Normal_Colored" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleArrowShape_Collapsed" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleArrowShape_Collapsed_Colored" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleArrowShape_Collapsed_Colored" Storyboard.TargetProperty="(Shape.Fill)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{DynamicResource {dxct:LWKey ChartBrushes.PaneTitleForegroundHot}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleContentPresenter_Normal" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleContentPresenter_Hot" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleArrowShape_Normal" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleArrowShape_Normal_Colored" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleArrowShape_Collapsed" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleArrowShape_Collapsed_Colored" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleArrowShape_Normal_Colored" Storyboard.TargetProperty="(Shape.Fill)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{DynamicResource {dxct:LWKey ChartBrushes.PaneTitleForegroundDisabled}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled_Collapsed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleContentPresenter_Normal" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleContentPresenter_Hot" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleArrowShape_Normal" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleArrowShape_Normal_Colored" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleArrowShape_Collapsed" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleArrowShape_Collapsed_Colored" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleArrowShape_Collapsed_Colored" Storyboard.TargetProperty="(Shape.Fill)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{DynamicResource {dxct:LWKey ChartBrushes.PaneTitleForegroundDisabled}}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal_NoArrow">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleContentPresenter_Normal" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleContentPresenter_Hot" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleArrowShape_Normal" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleArrowShape_Normal_Colored" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleArrowShape_Collapsed" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_PaneTitleArrowShape_Collapsed_Colored" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AxisTitlePresentation.DefaultStyleBase" BasedOn="{StaticResource axisElementTitlePresentationStyle}" TargetType="{x:Type dxc:AxisTitlePresentation}" />
    <Style x:Key="ConstantLineTitlePresentation.DefaultStyleBase" BasedOn="{StaticResource axisElementTitlePresentationStyle}" TargetType="{x:Type dxc:ConstantLineTitlePresentation}" />
    <!--#endregion DEFAULT STYLES-->
</ResourceDictionary>