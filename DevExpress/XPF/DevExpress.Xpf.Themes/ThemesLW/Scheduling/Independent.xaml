<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
    xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol"
    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
    xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon"
    xmlns:dxsch="clr-namespace:DevExpress.Xpf.Scheduling;assembly=DevExpress.Xpf.Scheduling.v24.1"
    xmlns:dxschc="clr-namespace:DevExpress.Xpf.Scheduling.Common;assembly=DevExpress.Xpf.Scheduling.v24.1"
    xmlns:dxschcore="http://schemas.devexpress.com/winfx/2008/xaml/scheduling/core"
    xmlns:dxsche="clr-namespace:DevExpress.Xpf.Scheduling.Editors;assembly=DevExpress.Xpf.Scheduling.v24.1"
    xmlns:dxschp="clr-namespace:DevExpress.Xpf.Scheduling.Panels;assembly=DevExpress.Xpf.Scheduling.v24.1"
    xmlns:dxscht="clr-namespace:DevExpress.Xpf.Scheduling.Themes;assembly=DevExpress.Xpf.Scheduling.v24.1"
    xmlns:dxschv="clr-namespace:DevExpress.Xpf.Scheduling.Visual;assembly=DevExpress.Xpf.Scheduling.v24.1"
    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
    xmlns:globalization="clr-namespace:System.Globalization;assembly=mscorlib">

    <Duration x:Key="Button.OpacityAnimation.Duration">0:0:0.15</Duration>
    <dxmvvm:ObjectToObjectConverter x:Key="SnapToCellsModeToStringConverter">
        <dxmvvm:MapItem Source="Auto" Target="{dxschc:SchedulerLocalizer StringId=SnapToCells_Auto}" />
        <dxmvvm:MapItem Source="Always" Target="{dxschc:SchedulerLocalizer StringId=SnapToCells_Always}" />
        <dxmvvm:MapItem Source="Never" Target="{dxschc:SchedulerLocalizer StringId=SnapToCells_Never}" />
    </dxmvvm:ObjectToObjectConverter>
    <ObjectDataProvider x:Key="SnapToCellsValues" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="dxsch:SnapToCellsMode" />
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <dxmvvm:ObjectToObjectConverter x:Key="GroupByNoneToTrue" DefaultTarget="False">
        <dxmvvm:MapItem Source="{x:Static dxschcore:SchedulerGroupType.None}" Target="True" />
    </dxmvvm:ObjectToObjectConverter>
    <dxmvvm:ObjectToObjectConverter x:Key="GroupByResourceToTrue" DefaultTarget="False">
        <dxmvvm:MapItem Source="{x:Static dxschcore:SchedulerGroupType.Resource}" Target="True" />
    </dxmvvm:ObjectToObjectConverter>
    <dxmvvm:ObjectToObjectConverter x:Key="GroupByDateToTrue" DefaultTarget="False">
        <dxmvvm:MapItem Source="{x:Static dxschcore:SchedulerGroupType.Date}" Target="True" />
    </dxmvvm:ObjectToObjectConverter>
    <dx:EnumToBoolConverter x:Key="EnumToBoolConverter" />
    <dxmvvm:ObjectToObjectConverter x:Key="Converter.Range.NoEndDate" DefaultTarget="False">
        <dxmvvm:MapItem Source="NoEndDate" Target="True" />
    </dxmvvm:ObjectToObjectConverter>
    <dxmvvm:ObjectToObjectConverter x:Key="Converter.Range.OccurrenceCount" DefaultTarget="False">
        <dxmvvm:MapItem Source="OccurrenceCount" Target="True" />
    </dxmvvm:ObjectToObjectConverter>
    <dxmvvm:ObjectToObjectConverter x:Key="Converter.Range.EndByDate" DefaultTarget="False">
        <dxmvvm:MapItem Source="EndByDate" Target="True" />
    </dxmvvm:ObjectToObjectConverter>
    <Duration x:Key="Scheduler.HScrollAnimation.Duration">0:0:0.075</Duration>
    <dxmvvm:ObjectToObjectConverter x:Key="AppointmentTypeToImageSourceConverter">
        <dxmvvm:MapItem Source="Normal" Target="{dx:ImageSelector SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/ListViewAppointment.svg'}}" />
        <dxmvvm:MapItem Source="Pattern" Target="{dx:ImageSelector SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/ListViewAppointmentPattern.svg'}}" />
        <dxmvvm:MapItem Source="ChangedOccurrence" Target="{dx:ImageSelector SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/ListViewAppointmentChangedOccurrence.svg'}}" />
        <dxmvvm:MapItem Source="DeletedOccurrence" Target="{dx:ImageSelector SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/ListViewAppointmentDeletedOccurrence.svg'}}" />
    </dxmvvm:ObjectToObjectConverter>
    <dxmvvm:BooleanToObjectConverter x:Key="HasReminderToImageSourceConverter" FalseValue="{x:Null}" TrueValue="{dx:ImageSelector SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/AppointmentReminder.svg'}}" />


    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Controls\SchedulerButton.xaml-->

    <ControlTemplate x:Key="{dxscht:LWKey SchedulerCommon.ButtonTemplate}" TargetType="dxschv:SchedulerButton">
        <Grid>
            <dx:DXBorder x:Name="PART_Normal" />
            <dx:DXBorder x:Name="PART_Hover" Opacity="0" />
            <dx:DXBorder x:Name="PART_Pressed" Opacity="0" />
            <dx:DXBorder x:Name="PART_Disabled" Opacity="0" />
            <ContentPresenter
                x:Name="PART_Content"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                ContentSource="Content"
                TextBlock.Foreground="{TemplateBinding Foreground}" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused" />
                    <VisualState x:Name="Unfocused" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Hover" Storyboard.TargetProperty="Opacity" To="0" Duration="{StaticResource Button.OpacityAnimation.Duration}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Hover" Storyboard.TargetProperty="Opacity" To="1" Duration="{StaticResource Button.OpacityAnimation.Duration}" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Pressed" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Opacity" To="0.35" Duration="0:0:0.0" />
                            <DoubleAnimation Storyboard.TargetName="PART_Normal" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.0" />
                            <DoubleAnimation Storyboard.TargetName="PART_Disabled" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Controls\SchedulerButton.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\ResourceTree\ContextMenu.xaml-->
    <Style x:Key="ResourceTree.BarItem.BaseStyle" TargetType="dxb:BarItem">
        <Setter Property="Tag" Value="{Binding Path=(dxsch:ResourceTreeControl.ResourceTree), RelativeSource={RelativeSource Self}}" />
    </Style>

    <Style x:Key="{dxscht:LWKey ResourceTreeCommandBar.ContextMenu_NewResource}" BasedOn="{StaticResource ResourceTree.BarItem.BaseStyle}" TargetType="dxb:BarButtonItem">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=ResourceTree_MenuCmd_NewResource}" />
        <Setter Property="Command" Value="{Binding Tag.Commands.CreateResourceCommand, RelativeSource={RelativeSource Self}}" />
        <Setter Property="IsVisible" Value="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Glyph" Value="{dx:ImageSelector Source={dx:DXImage Image=Calendar_16x16.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/Calendar.svg'}}" />
        <Setter Property="LargeGlyph" Value="{dx:ImageSelector Source={dx:DXImage Image=Calendar_32x32.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/Calendar.svg'}}" />
    </Style>

    <Style x:Key="{dxscht:LWKey ResourceTreeCommandBar.ContextMenu_NewGroup}" BasedOn="{StaticResource ResourceTree.BarItem.BaseStyle}" TargetType="dxb:BarButtonItem">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=ResourceTree_MenuCmd_NewGroup}" />
        <Setter Property="Command" Value="{Binding Tag.Commands.CreateGroupCommand, RelativeSource={RelativeSource Self}}" />
        <Setter Property="IsVisible" Value="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" />
    </Style>

    <Style x:Key="{dxscht:LWKey ResourceTreeCommandBar.ContextMenu_Delete}" BasedOn="{StaticResource ResourceTree.BarItem.BaseStyle}" TargetType="dxb:BarButtonItem">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=ResourceTree_MenuCmd_Delete}" />
        <Setter Property="Command" Value="{Binding Tag.Commands.DeleteCommand, RelativeSource={RelativeSource Self}}" />
        <Setter Property="IsVisible" Value="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Glyph" Value="{dx:ImageSelector Source={dx:DXImage Image=Delete_16x16.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/Delete.svg'}}" />
        <Setter Property="LargeGlyph" Value="{dx:ImageSelector Source={dx:DXImage Image=Delete_32x32.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/Delete.svg'}}" />
    </Style>

    <Style x:Key="{dxscht:LWKey ResourceTreeCommandBar.ContextMenu_Find}" BasedOn="{StaticResource ResourceTree.BarItem.BaseStyle}" TargetType="dxb:BarButtonItem">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=ResourceTree_MenuCmd_Find}" />
        <Setter Property="Command" Value="{Binding Tag.Commands.ShowSearchPanelCommand, RelativeSource={RelativeSource Self}}" />
        <Setter Property="IsVisible" Value="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Glyph" Value="{dx:ImageSelector Source={dx:DXImage Image=Find_16x16.png}, SvgSource={dxschc:SchedulerSvgImage Path='Find/Find.svg'}}" />
        <Setter Property="LargeGlyph" Value="{dx:ImageSelector Source={dx:DXImage Image=Find_32x32.png}, SvgSource={dxschc:SchedulerSvgImage Path='Find/Find.svg'}}" />
    </Style>

    <Style x:Key="{dxscht:LWKey ResourceTreeCommandBar.ContextMenu_Rename}" BasedOn="{StaticResource ResourceTree.BarItem.BaseStyle}" TargetType="dxb:BarButtonItem">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=ResourceTree_MenuCmd_Rename}" />
        <Setter Property="Command" Value="{Binding Tag.Commands.RenameCommand, RelativeSource={RelativeSource Self}}" />
        <Setter Property="IsVisible" Value="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" />
    </Style>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\ResourceTree\ContextMenu.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\ResourceTree\ResourceTree.xaml-->
    <ControlTemplate x:Key="{dxscht:LWKey ResourceTree.Template}" TargetType="dxsch:ResourceTreeControl">
        <dxb:BarManager x:Name="PART_Root" CreateStandardLayout="False">
            <dxg:TreeListControl x:Name="PART_TreeList" ShowBorder="{TemplateBinding ShowBorder}" Style="{TemplateBinding TreeListControlStyle}">
                <dxg:TreeListControl.View>
                    <dxg:TreeListView
                        AllowDragDrop="{TemplateBinding AllowDragDrop}"
                        AllowEditing="{TemplateBinding AllowEditing}"
                        AutoWidth="True"
                        NavigationStyle="Cell"
                        ShowCheckboxes="True"
                        ShowColumnHeaders="False"
                        ShowDragDropHint="False"
                        ShowHorizontalLines="False"
                        ShowIndicator="False"
                        ShowRootIndent="True"
                        ShowSearchPanelMode="{TemplateBinding ShowSearchPanelMode}"
                        ShowVerticalLines="False"
                        Style="{TemplateBinding TreeListViewStyle}"
                        TreeLineStyle="None"
                        VerticalScrollbarVisibility="Auto" />
                </dxg:TreeListControl.View>
                <dxg:TreeListColumn FieldName="PART_CaptionUnboundColumn" CellTemplateSelector="{TemplateBinding ActualCellTemplateSelector}" UnboundType="String" />
            </dxg:TreeListControl>
        </dxb:BarManager>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\ResourceTree\ResourceTree.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Scheduler\ContextMenu.xaml-->
    <DataTemplate x:Key="ContextMenu.Appointment">
        <dxb:PopupMenu>
            <dxb:BarButtonItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.ContextMenu_Items_Appointment_Actions_Open}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Items_Appointment_Actions_Open}}" />
            <dxb:BarItemLinkSeparator />
            <dxb:BarButtonItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.ContextMenu_Items_Appointment_Actions_EditSeries}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Items_Appointment_Actions_EditSeries}}" />
            <dxb:BarItemLinkSeparator />
            <dxb:BarButtonItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.ContextMenu_Items_Appointment_Actions_RestoreOccurrence}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Items_Appointment_Actions_RestoreOccurrence}}" />
            <dxb:BarItemLinkSeparator />
            <dxb:BarSubItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.ContextMenu_Items_Appointment_Options_ShowTimeAs}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Items_Appointment_Options_ShowTimeAs}}" />
            <dxb:BarSubItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.ContextMenu_Items_Appointment_Options_LabelAs}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Items_Appointment_Options_LabelAs}}" />
            <dxb:BarItemLinkSeparator />
            <dxb:BarButtonItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.ContextMenu_Items_Appointment_Actions_Cut}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Items_Appointment_Actions_Cut}}" />
            <dxb:BarButtonItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.ContextMenu_Items_Appointment_Actions_Copy}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Items_Appointment_Actions_Copy}}" />
            <dxb:BarButtonItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.ContextMenu_Items_Appointment_Actions_Paste}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Items_Appointment_Actions_Paste}}" />
            <dxb:BarButtonItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.ContextMenu_Items_Appointment_Actions_Delete}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Items_Appointment_Actions_Delete}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="ContextMenu.Cell">
        <dxb:PopupMenu>
            <dxb:BarButtonItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.ContextMenu_Items_Cell_Actions_NewAppointment}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Items_Home_Appointment_NewAppointment}}" />
            <dxb:BarButtonItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.ContextMenu_Items_Cell_Actions_NewAllDayEvent}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Items_Home_Appointment_NewAllDayEvent}}" />
            <dxb:BarItemLinkSeparator />
            <dxb:BarButtonItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.ContextMenu_Items_Cell_Actions_NewRecurringAppointment}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Items_Home_Appointment_NewRecurringAppointment}}" />
            <dxb:BarButtonItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.ContextMenu_Items_Cell_Actions_NewRecurringEvent}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Items_Home_Appointment_NewRecurringEvent}}" />
            <dxb:BarItemLinkSeparator />
            <dxb:BarButtonItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.ContextMenu_Items_Cell_Actions_GotoToday}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Items_Home_Navigate_GotoToday}}" />
            <dxb:BarButtonItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.ContextMenu_Items_Cell_Actions_GotoDate}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Items_Home_Navigate_GotoDate}}" />
            <dxb:BarItemLinkSeparator />
            <dxb:BarSubItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.ContextMenu_Items_Cell_Actions_TimeScales}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.CellContextMenu_SwitchTimeScale}}" />
            <dxb:BarSubItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.ContextMenu_Items_Cell_Actions_TimeScaleCaptions}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Items_Home_TimeScale_ShowTimeScaleCaptions}}" />
            <dxb:BarItemLinkSeparator />
            <dxb:BarSubItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.ContextMenu_Items_Cell_Actions_SwitchView}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.SwitchView}}" />
            <dxb:BarItemLinkSeparator />
            <dxb:BarButtonItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.ContextMenu_Items_Cell_Actions_Paste}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Items_Appointment_Actions_Paste}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="ContextMenu.TimeRuler">
        <dxb:PopupMenu>
            <dxb:BarButtonItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.ContextMenu_Items_TimeRuler_Actions_NewAppointment}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Items_Home_Appointment_NewAppointment}}" />
            <dxb:BarButtonItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.ContextMenu_Items_TimeRuler_Actions_NewAllDayEvent}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Items_Home_Appointment_NewAllDayEvent}}" />
            <dxb:BarItemLinkSeparator />
            <dxb:BarButtonItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.ContextMenu_Items_TimeRuler_Actions_NewRecurringAppointment}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Items_Home_Appointment_NewRecurringAppointment}}" />
            <dxb:BarButtonItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.ContextMenu_Items_TimeRuler_Actions_NewRecurringEvent}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Items_Home_Appointment_NewRecurringEvent}}" />
            <dxb:BarItemLinkSeparator />
            <dxb:BarSubItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.ContextMenu_Items_TimeRuler_Actions_SwitchView}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.SwitchView}}" />
            <dxb:BarItemLinkSeparator />
            <dxb:BarButtonItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.ContextMenu_Items_TimeRuler_Actions_CustomizeTimeRuler}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.CustomizeTimeRuler}}" />
            <dxb:BarLinkContainerItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.ContextMenu_Items_TimeRuler_Actions_SwitchTimeScale}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.SwitchTimeScale}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="ContextMenu.AppointmentDrop">
        <dxb:PopupMenu>
            <dxb:BarButtonItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.ContextMenu_Items_AppointmentDrop_Actions_MoveAppointmentsOnDrop}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.MoveAppointmentsOnDrop}}" />
            <dxb:BarButtonItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.ContextMenu_Items_AppointmentDrop_Actions_CopyAppointmentsOnDrop}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.CopyAppointmentsOnDrop}}" />
            <dxb:BarButtonItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.ContextMenu_Items_AppointmentDrop_Actions_CancelDropAppointments}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.CancelDropAppointments}}" />
        </dxb:PopupMenu>
    </DataTemplate>

    <DataTemplate x:Key="{dxscht:LWKey SchedulerCommon.ContextMenu_DefaultOptions}">
        <ContentControl>
            <dxsch:OptionsContextMenu
                AppointmentContextMenu="{dxmvvm:ValueFactory ValueTemplate={StaticResource ContextMenu.Appointment}}"
                AppointmentDropContextMenu="{dxmvvm:ValueFactory ValueTemplate={StaticResource ContextMenu.AppointmentDrop}}"
                CellContextMenu="{dxmvvm:ValueFactory ValueTemplate={StaticResource ContextMenu.Cell}}"
                TimeRulerContextMenu="{dxmvvm:ValueFactory ValueTemplate={StaticResource ContextMenu.TimeRuler}}" />
        </ContentControl>
    </DataTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Scheduler\ContextMenu.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Scheduler\DateNavigationPanel.xaml-->
    <ControlTemplate x:Key="{dxscht:LWKey SchedulerCommon.DateNavigationPanelTemplate}" TargetType="dxsch:DateNavigationPanel">
        <DockPanel>
            <dxschv:SchedulerButton
                x:Name="PART_BackButton"
                VerticalAlignment="Center"
                Command="{TemplateBinding BackCommand}"
                DockPanel.Dock="Left"
                Style="{TemplateBinding BackButtonStyle}" />
            <dxschv:SchedulerButton
                x:Name="PART_NextButton"
                VerticalAlignment="Center"
                Command="{TemplateBinding NextCommand}"
                DockPanel.Dock="Left"
                Style="{TemplateBinding NextButtonStyle}" />
            <dxschv:IntervalPopupCalendar
                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                DisplayText="{TemplateBinding DisplayText}"
                DockPanel.Dock="Left"
                Scheduler="{TemplateBinding Scheduler}"
                ShowCalendarButton="{TemplateBinding ShowCalendarButton}"
                ShowText="{TemplateBinding ShowText}"
                TextBlockStyle="{TemplateBinding TextBlockStyle}" />
            <dxb:ToolBarControl
                x:Name="PART_ViewsToolBar"
                Margin="5,0"
                HorizontalAlignment="Right"
                DockPanel.Dock="Right"
                ItemsSource="{Binding Path=Scheduler.Views, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                Style="{TemplateBinding ViewSelectorStyle}"
                Visibility="{TemplateBinding ActualShowViewSelector, Converter={dx:BooleanToVisibilityConverter}}" />
        </DockPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="ShowButtons" Value="False">
                <Setter TargetName="PART_BackButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_NextButton" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <DataTrigger Binding="{Binding Scheduler.ActiveViewType, RelativeSource={RelativeSource Mode=Self}}" Value="ListView">
                <Setter TargetName="PART_BackButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_NextButton" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxscht:LWKey SchedulerCommon.IntervalPopupCalendarTemplate}" TargetType="dxschv:IntervalPopupCalendar">
        <StackPanel Orientation="Horizontal">
            <TextBlock
                x:Name="PART_TextBlock"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Style="{TemplateBinding TextBlockStyle}"
                Text="{TemplateBinding DisplayText}" />
            <dxschv:SchedulerButton
                x:Name="PART_DropDownButton"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Kind="DateNavigationPanelButtonCalendar"
                Visibility="{TemplateBinding ShowCalendarButton, Converter={dx:BooleanToVisibilityConverter}}" />
            <dxschv:StandAloneEditorPopupBase x:Name="PART_CalendarPopup" PlacementTarget="{Binding ElementName=PART_TextBlock}">
                <dx:PopupBorderControl Name="PART_PopupContent">
                    <dxe:DateNavigator
                        Name="PART_DateNavigator"
                        AllowMultipleRanges="False"
                        CalendarView="{Binding CalendarView, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        FocusedDate="{Binding CurrentDate, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        FontSize="12"
                        IsMultiSelect="False">
                        <dxmvvm:Interaction.Behaviors>
                            <dxschc:LimitedIntervalDateNavigatorBehavior Scheduler="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Scheduler}" />
                        </dxmvvm:Interaction.Behaviors>
                    </dxe:DateNavigator>
                </dx:PopupBorderControl>
            </dxschv:StandAloneEditorPopupBase>
        </StackPanel>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Scheduler.ActiveViewType, RelativeSource={RelativeSource Mode=Self}}" Value="ListView">
                <Setter TargetName="PART_TextBlock" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_DropDownButton" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <Trigger Property="ShowText" Value="False">
                <Setter TargetName="PART_TextBlock" Property="Visibility" Value="Collapsed" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Scheduler\DateNavigationPanel.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Scheduler\Flyout.xaml-->
    <Style x:Key="Label.Style" TargetType="dxlc:LayoutItemLabel">
        <Setter Property="FontWeight" Value="Bold" />
    </Style>
    <DataTemplate x:Key="LayoutItem_Start.Content">
        <TextBlock Text="{Binding Appointment.Start, Converter={dxmvvm:FormatStringConverter}}" />
    </DataTemplate>
    <DataTemplate x:Key="LayoutItem_End.Content">
        <TextBlock Text="{Binding Appointment.End, Converter={dxmvvm:FormatStringConverter}}" />
    </DataTemplate>
    <DataTemplate x:Key="LayoutItem_Location.Content">
        <TextBlock Text="{Binding Appointment.Location}" TextTrimming="CharacterEllipsis" />
    </DataTemplate>
    <DataTemplate x:Key="LayoutItem_Reminder.Content">
        <TextBlock Text="{Binding Appointment.Reminder.TimeBeforeStart, Converter={dxschc:TimeSpanToStringConverter}}" />
    </DataTemplate>
    <DataTemplate x:Key="LayoutItem_Description.Content">
        <TextBlock Text="{Binding Appointment.Description}" TextWrapping="Wrap" />
    </DataTemplate>
    <DataTemplate x:Key="LayoutItem_Resources.Content">
        <ItemsControl ItemsSource="{Binding Resources}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <dxlc:LayoutGroup Padding="0" IsItemsHost="True" Orientation="Vertical" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Caption}" />
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>
    <Style x:Key="LayoutItem_Images.ImageStyle" TargetType="Image">
        <Setter Property="dxb:ImageColorizer.IsEnabled" Value="True" />
        <Setter Property="dxb:ImageColorizer.Color" Value="{Binding Path='(TextBlock.Foreground)', RelativeSource={RelativeSource Self}, Converter={dxmvvm:BrushToColorConverter}}" />
        <Setter Property="Stretch" Value="None" />
        <Setter Property="RenderOptions.BitmapScalingMode" Value="NearestNeighbor" />
    </Style>


    <DataTemplate x:Key="LayoutItem_Images.Content">
        <StackPanel Orientation="Vertical">
            <Image Source="{dx:ImageSelector Source={dx:DXImage Image=AppointmentOccurrence.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/AppointmentOccurrence.svg'}}" Style="{StaticResource LayoutItem_Images.ImageStyle}" Visibility="{Binding ShowRecurrenceImage, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
            <Image Source="{dx:ImageSelector Source={dx:DXImage Image=AppointmentChangedOccurrence.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/AppointmentChangedOccurrence.svg'}}" Style="{StaticResource LayoutItem_Images.ImageStyle}" Visibility="{Binding ShowChangedRecurrenceImage, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
            <Image Source="{dx:ImageSelector Source={dx:DXImage Image=AppointmentReminder.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/AppointmentReminder.svg'}}" Style="{StaticResource LayoutItem_Images.ImageStyle}" Visibility="{Binding ShowReminderImage, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
        </StackPanel>
    </DataTemplate>

    <Style x:Key="{dxscht:LWKey SchedulerFlyout.LayoutControl}" TargetType="dxlc:LayoutControl">
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="Orientation" Value="Vertical" />
        <Setter Property="Width" Value="250" />
        <Setter Property="MinHeight" Value="150" />
        <Setter Property="Padding" Value="11" />
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerFlyout.LayoutItem_Start}" TargetType="dxlc:LayoutItem">
        <Setter Property="Label" Value="{dxschc:SchedulerLocalizer StringId=Tooltip_Start}" />
        <Setter Property="LabelStyle" Value="{StaticResource Label.Style}" />
        <Setter Property="Content" Value="{dxmvvm:ValueFactory ValueTemplate={StaticResource LayoutItem_Start.Content}}" />
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerFlyout.LayoutItem_End}" TargetType="dxlc:LayoutItem">
        <Setter Property="Label" Value="{dxschc:SchedulerLocalizer StringId=Tooltip_End}" />
        <Setter Property="LabelStyle" Value="{StaticResource Label.Style}" />
        <Setter Property="Content" Value="{dxmvvm:ValueFactory ValueTemplate={StaticResource LayoutItem_End.Content}}" />
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerFlyout.LayoutItem_Location}" TargetType="dxlc:LayoutItem">
        <Setter Property="Label" Value="{dxschc:SchedulerLocalizer StringId=Tooltip_Location}" />
        <Setter Property="LabelStyle" Value="{StaticResource Label.Style}" />
        <Setter Property="Visibility" Value="{Binding Appointment.Location, Converter={dxmvvm:StringToVisibilityConverter}}" />
        <Setter Property="Content" Value="{dxmvvm:ValueFactory ValueTemplate={StaticResource LayoutItem_Location.Content}}" />
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerFlyout.LayoutItem_Reminder}" TargetType="dxlc:LayoutItem">
        <Setter Property="Label" Value="{dxschc:SchedulerLocalizer StringId=Tooltip_Reminder}" />
        <Setter Property="LabelStyle" Value="{StaticResource Label.Style}" />
        <Setter Property="Visibility" Value="{DXBinding Expr='Appointment.Reminder != null', Converter={dxmvvm:BooleanToVisibilityConverter}}" />
        <Setter Property="Content" Value="{dxmvvm:ValueFactory ValueTemplate={StaticResource LayoutItem_Reminder.Content}}" />
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerFlyout.LayoutItem_Resources}" TargetType="dxlc:LayoutItem">
        <Setter Property="Label" Value="{dxschc:SchedulerLocalizer StringId=Tooltip_Resources}" />
        <Setter Property="LabelVerticalAlignment" Value="Top" />
        <Setter Property="LabelStyle" Value="{StaticResource Label.Style}" />
        <Setter Property="Content" Value="{dxmvvm:ValueFactory ValueTemplate={StaticResource LayoutItem_Resources.Content}}" />
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerFlyout.LayoutItem_Description}" TargetType="dxlc:LayoutItem">
        <Setter Property="LabelPosition" Value="Top" />
        <Setter Property="Visibility" Value="{Binding Appointment.Description, Converter={dxmvvm:StringToVisibilityConverter}}" />
        <Setter Property="Content" Value="{dxmvvm:ValueFactory ValueTemplate={StaticResource LayoutItem_Description.Content}}" />
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerFlyout.LayoutItem_Images}" TargetType="dxlc:LayoutItem">
        <Setter Property="Content" Value="{dxmvvm:ValueFactory ValueTemplate={StaticResource LayoutItem_Images.Content}}" />
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerFlyout.Appointment}" TargetType="dxschv:DayAppointmentControl">
        <Setter Property="Tag" Value="{Binding Path=(dxe:FlyoutControl.Flyout).PlacementTarget, RelativeSource={RelativeSource Self}}" />
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="MinHeight" Value="50" />
        <Setter Property="BorderBrush" Value="{DXBinding '@s.Tag.BorderBrush'}" />
        <Setter Property="BorderThickness" Value="{DXBinding '@s.Tag.BorderThickness'}" />
        <Setter Property="SelectionBorderBrush" Value="{DXBinding '@s.Tag.SelectionBorderBrush'}" />
        <Setter Property="SelectionBorderThickness" Value="{DXBinding '@s.Tag.SelectionBorderThickness'}" />
        <Setter Property="Background" Value="{DXBinding '@s.Tag.Background'}" />
        <Setter Property="Foreground" Value="{DXBinding '@s.Tag.Foreground'}" />
        <Setter Property="ShowInterval" Value="False" />
        <Setter Property="ShowDescription" Value="False" />
        <Setter Property="ShowLocation" Value="False" />
        <Setter Property="ShowStatus" Value="True" />
        <Setter Property="ShowRecurrenceImage" Value="False" />
        <Setter Property="ShowReminderImage" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="5,4,5,5" />
        <Setter Property="Margin" Value="0" />
    </Style>

    <DataTemplate x:Key="{dxscht:LWKey SchedulerFlyout.Template}">
        <dxlc:LayoutControl Style="{DynamicResource {dxscht:LWKey SchedulerFlyout.LayoutControl}}">
            <dxschv:DayAppointmentControl VerticalAlignment="Top" Content="{Binding}" Style="{DynamicResource {dxscht:LWKey SchedulerFlyout.Appointment}}" />
            <dxlc:LayoutControl
                Margin="0,5,0,0"
                Padding="0"
                VerticalAlignment="Top"
                Orientation="Vertical">
                <dxlc:LayoutItem Style="{DynamicResource {dxscht:LWKey SchedulerFlyout.LayoutItem_Start}}" />
                <dxlc:LayoutItem Style="{DynamicResource {dxscht:LWKey SchedulerFlyout.LayoutItem_End}}" />
            </dxlc:LayoutControl>
            <dxlc:LayoutControl
                Margin="0,5,0,0"
                Padding="0"
                VerticalAlignment="Top"
                Orientation="Vertical">
                <dxlc:LayoutItem Style="{DynamicResource {dxscht:LWKey SchedulerFlyout.LayoutItem_Location}}" />
                <dxlc:LayoutItem Style="{DynamicResource {dxscht:LWKey SchedulerFlyout.LayoutItem_Reminder}}" />
                <dxlc:LayoutItem Style="{DynamicResource {dxscht:LWKey SchedulerFlyout.LayoutItem_Resources}}" />
                <dxlc:LayoutItem Style="{DynamicResource {dxscht:LWKey SchedulerFlyout.LayoutItem_Description}}" />
            </dxlc:LayoutControl>
            <dxlc:LayoutItem HorizontalAlignment="Right" VerticalAlignment="Bottom" Style="{DynamicResource {dxscht:LWKey SchedulerFlyout.LayoutItem_Images}}" />
        </dxlc:LayoutControl>
    </DataTemplate>

    <DataTemplate x:Key="{dxscht:LWKey SchedulerFlyout.ToolTipTemplate}">
        <dxlc:LayoutControl
            MaxWidth="250"
            MaxHeight="300"
            Margin="0"
            Padding="0"
            IsHitTestVisible="False"
            Orientation="Vertical"
            TextBlock.FontWeight="Normal">
            <TextBlock
                VerticalAlignment="Top"
                FontWeight="Bold"
                Text="{Binding Appointment.Subject}"
                TextWrapping="Wrap" />
            <dxlc:LayoutItem Style="{DynamicResource {dxscht:LWKey SchedulerFlyout.LayoutItem_Start}}" />
            <dxlc:LayoutItem Style="{DynamicResource {dxscht:LWKey SchedulerFlyout.LayoutItem_End}}" />
            <dxlc:LayoutControl
                Margin="0"
                Padding="0"
                VerticalAlignment="Top"
                Orientation="Vertical"
                Visibility="{Binding Appointment.Location, Converter={dxmvvm:StringToVisibilityConverter}}">
                <dxlc:LayoutItem Style="{DynamicResource {dxscht:LWKey SchedulerFlyout.LayoutItem_Location}}" />
            </dxlc:LayoutControl>
            <TextBlock
                Text="{Binding Appointment.Description}"
                TextTrimming="CharacterEllipsis"
                TextWrapping="Wrap"
                Visibility="{Binding Appointment.Description, Converter={dxmvvm:StringToVisibilityConverter}}" />
        </dxlc:LayoutControl>
    </DataTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Scheduler\Flyout.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Scheduler\Ribbon.xaml-->
    <Style x:Key="Scheduler.BarItem.BaseStyle" TargetType="dxb:BarItem">
        <Setter Property="Tag" Value="{Binding Path=(dxsch:SchedulerControl.Scheduler), RelativeSource={RelativeSource Self}}" />
    </Style>

    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.RibbonControl}" TargetType="{x:Type dxr:RibbonControl}">
        <Setter Property="ShowApplicationButton" Value="False" />
        <Setter Property="ToolbarShowCustomizationButton" Value="False" />
        <Setter Property="AllowDrop" Value="False" />
        <Setter Property="RibbonStyle" Value="Office2019" />
    </Style>

    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.Categories_Default}" TargetType="{x:Type dxr:RibbonDefaultPageCategory}">
        <Setter Property="Caption" Value="{dxschc:SchedulerLocalizer StringId=Caption_CategoryDefault}" />
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.Pages_Home}" TargetType="{x:Type dxr:RibbonPage}">
        <Setter Property="Caption" Value="{dxschc:SchedulerLocalizer StringId=Caption_PageHome}" />
    </Style>

    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.Groups_Home_Appointment}" TargetType="{x:Type dxr:RibbonPageGroup}">
        <Setter Property="Caption" Value="{dxschc:SchedulerLocalizer StringId=Caption_GroupAppointment}" />
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.Groups_Home_Navigate}" TargetType="{x:Type dxr:RibbonPageGroup}">
        <Setter Property="Caption" Value="{dxschc:SchedulerLocalizer StringId=Caption_GroupViewNavigator}" />
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.Groups_Home_Arrange}" TargetType="{x:Type dxr:RibbonPageGroup}">
        <Setter Property="Caption" Value="{dxschc:SchedulerLocalizer StringId=Caption_GroupArrangeView}" />
        <Setter Property="Tag" Value="{Binding Path=(dxsch:SchedulerControl.Scheduler), RelativeSource={RelativeSource Self}}" />
        <Setter Property="IsVisible" Value="{DXBinding '@s.Tag.Views.CommandBarViews.Count > 1'}" />
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.Groups_Home_GroupBy}" TargetType="{x:Type dxr:RibbonPageGroup}">
        <Setter Property="Caption" Value="{dxschc:SchedulerLocalizer StringId=Caption_GroupGroupBy}" />
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.Categories_Appointment}" TargetType="{x:Type dxr:RibbonPageCategory}">
        <Setter Property="Caption" Value="{dxschc:SchedulerLocalizer StringId=Caption_PageCategoryAppointmentTools}" />
        <Setter Property="Tag" Value="{Binding Path=(dxsch:SchedulerControl.Scheduler), RelativeSource={RelativeSource Self}}" />
        <!--<Setter Property="IsVisible" Value="{DXBinding '@s.Tag.SelectedAppointments.Count == 1'}"/>-->
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxschc:SchedulerAppointmentRibbonPageCategoryBehavior />
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.Pages_Appointment}" TargetType="{x:Type dxr:RibbonPage}">
        <Setter Property="Caption" Value="{dxschc:SchedulerLocalizer StringId=Caption_PageAppointment}" />
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.Groups_Appointment_Actions}" TargetType="{x:Type dxr:RibbonPageGroup}">
        <Setter Property="Caption" Value="{dxschc:SchedulerLocalizer StringId=Caption_GroupAppointmentActions}" />
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.Groups_Appointment_Options}" TargetType="{x:Type dxr:RibbonPageGroup}">
        <Setter Property="Caption" Value="{dxschc:SchedulerLocalizer StringId=Caption_GroupAppointmentOptions}" />
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.Groups_Home_Layout}" TargetType="{x:Type dxr:RibbonPageGroup}">
        <Setter Property="Caption" Value="{dxschc:SchedulerLocalizer StringId=Caption_GroupLayout}" />
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.Groups_Home_TimeScale}" TargetType="{x:Type dxr:RibbonPageGroup}">
        <Setter Property="Caption" Value="{dxschc:SchedulerLocalizer StringId=Caption_GroupTimeScale}" />
        <Setter Property="Tag" Value="{Binding Path=(dxsch:SchedulerControl.Scheduler), RelativeSource={RelativeSource Self}}" />
        <Style.Triggers>
            <DataTrigger Binding="{DXBinding '@s.Tag.ActiveView', Converter={dxschc:TypeComparationConverter}, ConverterParameter={x:Type dxsch:MonthView}, Mode=OneWay}" Value="True">
                <Setter Property="IsVisible" Value="false" />
            </DataTrigger>
            <DataTrigger Binding="{DXBinding '@s.Tag.ActiveView.TimelineView.ActualViewMode'}" Value="{x:Static dxsch:TimelineViewMode.Standard}">
                <Setter Property="IsVisible" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.Groups_Home_Window}" TargetType="{x:Type dxr:RibbonPageGroup}">
        <Setter Property="Caption" Value="{dxschc:SchedulerLocalizer StringId=Caption_GroupWindow}" />
    </Style>

    <DataTemplate x:Key="BarCheckItem.ReminderItem">
        <ContentControl>
            <dxb:BarCheckItem
                AllowUncheckInGroup="False"
                Command="{DXBinding '@s.Tag.Commands.ChangeReminderTimeBeforeStartCommand'}"
                CommandParameter="{Binding}"
                Content="{Binding Converter={dxschc:TimeSpanToStringConverter}}"
                GroupIndex="4"
                Style="{StaticResource Scheduler.BarItem.BaseStyle}">
                <dxmvvm:Interaction.Behaviors>
                    <dxschc:SchedulerReminderBarCheckItemBehavior SelectedAppointments="{DXBinding '@s.AssociatedObject.Tag.SelectedAppointments'}" TimeSpan="{Binding}" />
                </dxmvvm:Interaction.Behaviors>
            </dxb:BarCheckItem>
        </ContentControl>
    </DataTemplate>

    <DataTemplate x:Key="BarCheckItem.StatusItem">
        <ContentControl>
            <dxb:BarCheckItem
                AllowUncheckInGroup="False"
                Command="{DXBinding '@s.Tag.Commands.ChangeStatusCommand'}"
                CommandParameter="{Binding Id}"
                Content="{Binding Caption}"
                GroupIndex="2"
                Style="{StaticResource Scheduler.BarItem.BaseStyle}">
                <dxmvvm:Interaction.Behaviors>
                    <dxschc:SchedulerStatusBarCheckItemBehavior SelectedAppointments="{DXBinding '@s.AssociatedObject.Tag.SelectedAppointments'}" StatusItem="{Binding}" />
                </dxmvvm:Interaction.Behaviors>
                <dxb:BarCheckItem.GlyphTemplate>
                    <DataTemplate>
                        <Rectangle Width="{Binding 'LinkControl.ActualGlyphSize.Width', RelativeSource={RelativeSource AncestorType=dxb:BarItemLinkInfo}}" Height="{Binding 'LinkControl.ActualGlyphSize.Height', RelativeSource={RelativeSource AncestorType=dxb:BarItemLinkInfo}}" Fill="{Binding Brush}" />
                    </DataTemplate>
                </dxb:BarCheckItem.GlyphTemplate>
            </dxb:BarCheckItem>
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="BarCheckItem.LabelItem">
        <ContentControl>
            <dxb:BarCheckItem
                AllowUncheckInGroup="False"
                Command="{DXBinding '@s.Tag.Commands.ChangeLabelCommand'}"
                CommandParameter="{Binding Id}"
                Content="{Binding Caption}"
                GroupIndex="3"
                Style="{StaticResource Scheduler.BarItem.BaseStyle}">
                <dxmvvm:Interaction.Behaviors>
                    <dxschc:SchedulerLabelBarCheckItemBehavior LabelItem="{Binding}" SelectedAppointments="{DXBinding '@s.AssociatedObject.Tag.SelectedAppointments'}" />
                </dxmvvm:Interaction.Behaviors>
                <dxb:BarCheckItem.GlyphTemplate>
                    <DataTemplate>
                        <Rectangle Width="{Binding 'LinkControl.ActualGlyphSize.Width', RelativeSource={RelativeSource AncestorType=dxb:BarItemLinkInfo}}" Height="{Binding 'LinkControl.ActualGlyphSize.Height', RelativeSource={RelativeSource AncestorType=dxb:BarItemLinkInfo}}" Fill="{Binding Brush}" />
                    </DataTemplate>
                </dxb:BarCheckItem.GlyphTemplate>
            </dxb:BarCheckItem>
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="BarCheckItem.TimeScale">
        <ContentControl>
            <dxb:BarCheckItem
                Command="{DXBinding '@s.Tag.Commands.ChangeTimeScaleCommand'}"
                CommandParameter="{Binding}"
                Content="{Binding Converter={dxschc:TimeSpanToStringConverter}}"
                IsChecked="{DXBinding Expr='@s.Tag.ActiveView.DayViewBase.TimeScale == @c', Mode=OneWay}"
                Style="{StaticResource Scheduler.BarItem.BaseStyle}" />
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="BarCheckItem.TimelineViewTimeScale">
        <ContentControl>
            <dxb:BarCheckItem Content="{Binding Caption}" IsChecked="{Binding IsEnabled}" Style="{StaticResource Scheduler.BarItem.BaseStyle}" />
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="BarCheckItem.TimelineViewTimeScaleCaptions">
        <ContentControl>
            <dxb:BarCheckItem
                Content="{Binding Caption}"
                IsChecked="{Binding ShowHeaders}"
                IsEnabled="{Binding IsEnabled}"
                Style="{StaticResource Scheduler.BarItem.BaseStyle}" />
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="BarCheckItem.SnapToCells">
        <ContentControl>
            <dxb:BarCheckItem
                Command="{DXBinding '@s.Tag.Commands.ChangeSnapToCellsModeCommand'}"
                CommandParameter="{Binding}"
                Content="{Binding Converter={StaticResource SnapToCellsModeToStringConverter}}"
                IsChecked="{DXBinding Expr='@s.Tag.ActiveView.DayViewBase.SnapToCellsMode == @c || @s.Tag.ActiveView.TimelineView.SnapToCellsMode == @c', Mode=OneWay, AllowUnsetValue=True}"
                Style="{StaticResource Scheduler.BarItem.BaseStyle}" />
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="BarCheckItem.View">
        <ContentControl>
            <dxb:BarCheckItem
                Content="{Binding Caption}"
                Glyph="{Binding Glyph}"
                Hint="{Binding Description}"
                LargeGlyph="{Binding LargeGlyph}"
                Style="{StaticResource Scheduler.BarItem.BaseStyle}">
                <dxmvvm:Interaction.Behaviors>
                    <dxschc:SchedulerViewBarCheckItemBehavior View="{Binding}" />
                </dxmvvm:Interaction.Behaviors>
            </dxb:BarCheckItem>
        </ContentControl>
    </DataTemplate>

    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.Items_Appointment_Actions_Open}" BasedOn="{StaticResource Scheduler.BarItem.BaseStyle}" TargetType="dxb:BarItem">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=MenuCmd_OpenAppointment}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.ShowAppointmentWindowCommand'}" />
        <Setter Property="Glyph" Value="{dx:ImageSelector Source={dx:DXImage Image=Open_16x16.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/Open.svg'}}" />
        <Setter Property="LargeGlyph" Value="{dx:ImageSelector Source={dx:DXImage Image=Open_32x32.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/Open.svg'}}" />
        <Setter Property="Hint" Value="{dxschc:SchedulerLocalizer StringId=DescCmd_OpenAppointment}" />
        <Setter Property="KeyGesture" Value="CTRL+O" />
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.Items_Appointment_Actions_EditSeries}" BasedOn="{StaticResource Scheduler.BarItem.BaseStyle}" TargetType="dxb:BarItem">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=MenuCmd_EditSeries}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.ShowEditRecurrencePatternWindowCommand'}" />
        <Setter Property="IsVisible" Value="{DXBinding '@s.Tag.SelectedAppointments.Count == 1 and ($int)@s.Tag.SelectedAppointments[0].Type != 0', Mode=OneWay}" />
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.Items_Appointment_Actions_RestoreOccurrence}" BasedOn="{StaticResource Scheduler.BarItem.BaseStyle}" TargetType="dxb:BarItem">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=MenuCmd_RestoreOccurrence}" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxschc:RestoreDefaultStateVisibilityBehavior />
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsVisible" Value="False" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.RestoreOccurrenceCommand'}" />
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.Items_Appointment_Options_ShowTimeAs}" BasedOn="{StaticResource Scheduler.BarItem.BaseStyle}" TargetType="dxb:BarSubItem">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=MenuCmd_ShowTimeAs}" />
        <Setter Property="ItemLinksSource" Value="{DXBinding '@s.Tag.StatusItems'}" />
        <Setter Property="IsEnabled" Value="{DXBinding '@s.Tag.SelectedAppointments.Count >0'}" />
        <Setter Property="ItemTemplate" Value="{StaticResource BarCheckItem.StatusItem}" />
        <Setter Property="Glyph" Value="{dx:ImageSelector Source={dx:DXImage Image=ChangeStatus_16x16.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/ChangeStatus.svg'}}" />
        <Setter Property="LargeGlyph" Value="{dx:ImageSelector Source={dx:DXImage Image=ChangeStatus_32x32.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/ChangeStatus.svg'}}" />
        <Setter Property="Hint" Value="{dxschc:SchedulerLocalizer StringId=DescCmd_ShowTimeAs}" />
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.Items_Appointment_Options_LabelAs}" BasedOn="{StaticResource Scheduler.BarItem.BaseStyle}" TargetType="dxb:BarSubItem">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=MenuCmd_LabelAs}" />
        <Setter Property="ItemLinksSource" Value="{DXBinding '@s.Tag.LabelItems'}" />
        <Setter Property="IsEnabled" Value="{DXBinding '@s.Tag.SelectedAppointments.Count >0'}" />
        <Setter Property="ItemTemplate" Value="{StaticResource BarCheckItem.LabelItem}" />
        <Setter Property="Glyph" Value="{dx:ImageSelector Source={dx:DXImage Image=ChangeLabel_16x16.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/ChangeLabel.svg'}}" />
        <Setter Property="LargeGlyph" Value="{dx:ImageSelector Source={dx:DXImage Image=ChangeLabel_16x16.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/ChangeLabel.svg'}}" />
        <Setter Property="Hint" Value="{dxschc:SchedulerLocalizer StringId=DescCmd_LabelAs}" />
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.Items_Appointment_Actions_Delete}" BasedOn="{StaticResource Scheduler.BarItem.BaseStyle}" TargetType="dxb:BarItem">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=MenuCmd_DeleteAppointment}" />
        <Setter Property="Glyph" Value="{dx:ImageSelector Source={dx:DXImage Image=Delete_16x16.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/Delete.svg'}}" />
        <Setter Property="LargeGlyph" Value="{dx:ImageSelector Source={dx:DXImage Image=Delete_32x32.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/Delete.svg'}}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.DeleteAppointmentsCommand'}" />
        <Setter Property="Hint" Value="{dxschc:SchedulerLocalizer StringId=DescCmd_DeleteAppointment}" />
        <Setter Property="KeyGesture" Value="CTRL+D" />
    </Style>

    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.Items_Appointment_Actions_Cut}" BasedOn="{StaticResource Scheduler.BarItem.BaseStyle}" TargetType="dxb:BarItem">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=MenuCmd_CutAppointment}" />
        <Setter Property="Glyph" Value="{dx:ImageSelector Source={dx:DXImage Image=Cut_16x16.png}, SvgSource={dxschc:SchedulerSvgImage Path='Edit/Cut.svg'}}" />
        <Setter Property="LargeGlyph" Value="{dx:ImageSelector Source={dx:DXImage Image=Cut_32x32.png}, SvgSource={dxschc:SchedulerSvgImage Path='Edit/Cut.svg'}}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.CutToClipboardCommand'}" />
        <Setter Property="Hint" Value="{dxschc:SchedulerLocalizer StringId=DescCmd_CutAppointment}" />
        <Setter Property="KeyGesture" Value="CTRL+X" />
        <Setter Property="IsVisible" Value="{DXBinding '@s.Tag.SelectedAppointments.Count > 0', Mode=OneWay}" />
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.Items_Appointment_Actions_Copy}" BasedOn="{StaticResource Scheduler.BarItem.BaseStyle}" TargetType="dxb:BarItem">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=MenuCmd_CopyAppointment}" />
        <Setter Property="Glyph" Value="{dx:ImageSelector Source={dx:DXImage Image=Copy_16x16.png}, SvgSource={dxschc:SchedulerSvgImage Path='Edit/Copy.svg'}}" />
        <Setter Property="LargeGlyph" Value="{dx:ImageSelector Source={dx:DXImage Image=Copy_32x32.png}, SvgSource={dxschc:SchedulerSvgImage Path='Edit/Copy.svg'}}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.CopyToClipboardCommand'}" />
        <Setter Property="Hint" Value="{dxschc:SchedulerLocalizer StringId=DescCmd_CopyAppointment}" />
        <Setter Property="KeyGesture" Value="CTRL+C" />
        <Setter Property="IsVisible" Value="{DXBinding '@s.Tag.SelectedAppointments.Count > 0', Mode=OneWay}" />
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.Items_Appointment_Actions_Paste}" BasedOn="{StaticResource Scheduler.BarItem.BaseStyle}" TargetType="dxb:BarItem">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=MenuCmd_PasteAppointment}" />
        <Setter Property="Glyph" Value="{dx:ImageSelector Source={dx:DXImage Image=Paste_16x16.png}, SvgSource={dxschc:SchedulerSvgImage Path='Edit/Paste.svg'}}" />
        <Setter Property="LargeGlyph" Value="{dx:ImageSelector Source={dx:DXImage Image=Paste_32x32.png}, SvgSource={dxschc:SchedulerSvgImage Path='Edit/Paste.svg'}}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.PasteFromClipboardCommand'}" />
        <Setter Property="Hint" Value="{dxschc:SchedulerLocalizer StringId=DescCmd_PasteAppointment}" />
        <Setter Property="KeyGesture" Value="CTRL+V" />
    </Style>

    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.Items_Home_Appointment_NewAppointment}" BasedOn="{StaticResource Scheduler.BarItem.BaseStyle}" TargetType="dxb:BarItem">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=MenuCmd_NewAppointment}" />
        <Setter Property="Glyph" Value="{dx:ImageSelector Source={dx:DXImage Image=Appointment_16x16.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/Appointment.svg'}}" />
        <Setter Property="LargeGlyph" Value="{dx:ImageSelector Source={dx:DXImage Image=Appointment_32x32.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/Appointment.svg'}}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.ShowNewAppointmentWindowCommand'}" />
        <Setter Property="KeyGesture" Value="CTRL+N" />
        <Setter Property="ShowKeyGesture" Value="True" />
        <Setter Property="Hint" Value="{dxschc:SchedulerLocalizer StringId=DescCmd_NewAppointment}" />
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.Items_Home_Appointment_NewAllDayEvent}" BasedOn="{StaticResource Scheduler.BarItem.BaseStyle}" TargetType="dxb:BarItem">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=MenuCmd_NewAllDayEvent}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.ShowNewAllDayAppointmentWindowCommand'}" />
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.Items_Home_Appointment_NewRecurringAppointment}" BasedOn="{StaticResource Scheduler.BarItem.BaseStyle}" TargetType="dxb:BarItem">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=MenuCmd_NewRecurringAppointment}" />
        <Setter Property="Glyph" Value="{dx:ImageSelector Source={dx:DXImage Image=RecurringAppointment_16x16.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/RecurringAppointment.svg'}}" />
        <Setter Property="LargeGlyph" Value="{dx:ImageSelector Source={dx:DXImage Image=RecurringAppointment_32x32.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/RecurringAppointment.svg'}}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.ShowNewRecurringAppointmentWindowCommand'}" />
        <Setter Property="Hint" Value="{dxschc:SchedulerLocalizer StringId=DescCmd_NewRecurringAppointment}" />
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.Items_Home_Appointment_NewRecurringEvent}" BasedOn="{StaticResource Scheduler.BarItem.BaseStyle}" TargetType="dxb:BarItem">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=MenuCmd_NewRecurringEvent}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.ShowNewRecurringAllDayAppointmentWindowCommand'}" />
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.Items_Home_Navigate_GotoToday}" BasedOn="{StaticResource Scheduler.BarItem.BaseStyle}" TargetType="dxb:BarItem">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=MenuCmd_GotoToday}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.GoToTodayCommand'}" />
        <Setter Property="Glyph" Value="{dx:ImageSelector Source={dx:DXImage Image=Today_16x16.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/Today.svg'}}" />
        <Setter Property="LargeGlyph" Value="{dx:ImageSelector Source={dx:DXImage Image=Today_32x32.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/Today.svg'}}" />
        <Setter Property="Hint" Value="{dxschc:SchedulerLocalizer StringId=DescCmd_GotoToday}" />
        <Setter Property="KeyGesture" Value="CTRL+T" />
        <Style.Triggers>
            <DataTrigger Binding="{DXBinding '@s.Tag.ActiveView', Converter={dxschc:TypeComparationConverter}, ConverterParameter={x:Type dxsch:ListView}, Mode=OneWay}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.Items_Home_Navigate_GotoDate}" BasedOn="{StaticResource Scheduler.BarItem.BaseStyle}" TargetType="dxb:BarItem">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=MenuCmd_GotoDate}" />
        <Setter Property="Glyph" Value="{dx:ImageSelector Source={dx:DXImage Image=GoToDate_16x16.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/GoToDate.svg'}}" />
        <Setter Property="LargeGlyph" Value="{dx:ImageSelector Source={dx:DXImage Image=GoToDate_32x32.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/GoToDate.svg'}}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.GoToDateCommand'}" />
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.SwitchView}" BasedOn="{StaticResource Scheduler.BarItem.BaseStyle}" TargetType="dxb:BarSubItem">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=MenuCmd_SwitchViewMenu}" />
        <Setter Property="ItemLinksSource" Value="{DXBinding '@s.Tag.Views.CommandBarViews'}" />
        <Setter Property="IsVisible" Value="{DXBinding '@s.Tag.Views.CommandBarViews.Count > 1'}" />
        <Setter Property="ItemTemplate" Value="{StaticResource BarCheckItem.View}" />
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.CustomizeTimeRuler}" BasedOn="{StaticResource Scheduler.BarItem.BaseStyle}" TargetType="dxb:BarItem">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=MenuCmd_CustomizeTimeRuler}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.CustomizeTimeRulerCommand'}" />
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.SwitchTimeScale}" BasedOn="{StaticResource Scheduler.BarItem.BaseStyle}" TargetType="dxb:BarLinkContainerItem">
        <Setter Property="ItemLinksSource" Value="{DXBinding '@s.Tag.ActiveView.DayViewBase.TimeScales'}" />
        <Setter Property="ItemTemplate" Value="{StaticResource BarCheckItem.TimeScale}" />
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.MoveAppointmentsOnDrop}" BasedOn="{StaticResource Scheduler.BarItem.BaseStyle}" TargetType="dxb:BarItem">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=MenuCmd_MoveAppointmentsOnDrop}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.MoveAppointmentsOnDropCommand'}" />
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.CopyAppointmentsOnDrop}" BasedOn="{StaticResource Scheduler.BarItem.BaseStyle}" TargetType="dxb:BarItem">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=MenuCmd_CopyAppointmentsOnDrop}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.CopyAppointmentsOnDropCommand'}" />
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.CancelDropAppointments}" BasedOn="{StaticResource Scheduler.BarItem.BaseStyle}" TargetType="dxb:BarItem">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=MenuCmd_CancelDropAppointments}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.CancelDropAppointmentsCommand'}" />
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.Items_Home_Navigate_Backward}" BasedOn="{StaticResource Scheduler.BarItem.BaseStyle}" TargetType="{x:Type dxb:BarButtonItem}">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=MenuCmd_NavigateBackward}" />
        <Setter Property="Glyph" Value="{dx:ImageSelector Source={dx:DXImage Image=Backward_16x16.png}, SvgSource={dxschc:SchedulerSvgImage Path='Navigation/Backward.svg'}}" />
        <Setter Property="LargeGlyph" Value="{dx:ImageSelector Source={dx:DXImage Image=Backward_32x32.png}, SvgSource={dxschc:SchedulerSvgImage Path='Navigation/Backward.svg'}}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.NavigateViewBackwardCommand'}" />
        <Setter Property="Hint" Value="{dxschc:SchedulerLocalizer StringId=DescCmd_NavigateBackward}" />
        <Style.Triggers>
            <DataTrigger Binding="{DXBinding '@s.Tag.ActiveView', Converter={dxschc:TypeComparationConverter}, ConverterParameter={x:Type dxsch:ListViewBase}, Mode=OneWay}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.Items_Home_Navigate_Forward}" BasedOn="{StaticResource Scheduler.BarItem.BaseStyle}" TargetType="{x:Type dxb:BarButtonItem}">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=MenuCmd_NavigateForward}" />
        <Setter Property="Glyph" Value="{dx:ImageSelector Source={dx:DXImage Image=Forward_16x16.png}, SvgSource={dxschc:SchedulerSvgImage Path='Navigation/Forward.svg'}}" />
        <Setter Property="LargeGlyph" Value="{dx:ImageSelector Source={dx:DXImage Image=Forward_32x32.png}, SvgSource={dxschc:SchedulerSvgImage Path='Navigation/Forward.svg'}}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.NavigateViewForwardCommand'}" />
        <Setter Property="Hint" Value="{dxschc:SchedulerLocalizer StringId=DescCmd_NavigateForward}" />
        <Style.Triggers>
            <DataTrigger Binding="{DXBinding '@s.Tag.ActiveView', Converter={dxschc:TypeComparationConverter}, ConverterParameter={x:Type dxsch:ListViewBase}, Mode=OneWay}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.Items_Home_Arrange_Views}" BasedOn="{StaticResource Scheduler.BarItem.BaseStyle}" TargetType="{x:Type dxb:BarLinkContainerItem}">
        <Setter Property="ItemLinksSource" Value="{DXBinding '@s.Tag.Views.CommandBarViews'}" />
        <Setter Property="IsVisible" Value="{DXBinding '@s.Tag.Views.CommandBarViews.Count > 1'}" />
        <Setter Property="ItemTemplate" Value="{StaticResource BarCheckItem.View}" />
    </Style>

    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.Items_Home_GroupBy_GroupByNone}" BasedOn="{StaticResource Scheduler.BarItem.BaseStyle}" TargetType="{x:Type dxb:BarCheckItem}">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=MenuCmd_SwitchToGroupByNone}" />
        <Setter Property="Glyph" Value="{dx:ImageSelector Source={dx:DXImage Image=GroupByNone_16x16.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/GroupByNone.svg'}}" />
        <Setter Property="LargeGlyph" Value="{dx:ImageSelector Source={dx:DXImage Image=GroupByNone_32x32.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/GroupByNone.svg'}}" />
        <Setter Property="IsChecked" Value="{DXBinding '@s.Tag.GroupType', Converter={StaticResource GroupByNoneToTrue}, Mode=TwoWay}" />
        <Setter Property="AllowUncheckInGroup" Value="False" />
        <Setter Property="GroupIndex" Value="1" />
        <Setter Property="Hint" Value="{dxschc:SchedulerLocalizer StringId=Caption_GroupByNoneDescription}" />
        <Style.Triggers>
            <DataTrigger Binding="{DXBinding '@s.Tag.ActiveView', Converter={dxschc:TypeComparationConverter}, ConverterParameter={x:Type dxsch:ListViewBase}, Mode=OneWay}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.Items_Home_GroupBy_GroupByDate}" BasedOn="{StaticResource Scheduler.BarItem.BaseStyle}" TargetType="{x:Type dxb:BarCheckItem}">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=MenuCmd_SwitchToGroupByDate}" />
        <Setter Property="Glyph" Value="{dx:ImageSelector Source={dx:DXImage Image=GroupByDate_16x16.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/GroupByDate.svg'}}" />
        <Setter Property="LargeGlyph" Value="{dx:ImageSelector Source={dx:DXImage Image=GroupByDate_32x32.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/GroupByDate.svg'}}" />
        <Setter Property="IsChecked" Value="{DXBinding '@s.Tag.GroupType', Converter={StaticResource GroupByDateToTrue}, Mode=TwoWay}" />
        <Setter Property="AllowUncheckInGroup" Value="False" />
        <Setter Property="GroupIndex" Value="1" />
        <Setter Property="Hint" Value="{dxschc:SchedulerLocalizer StringId=Caption_GroupByDateDescription}" />
        <Style.Triggers>
            <DataTrigger Binding="{DXBinding '@s.Tag.ActiveView', Converter={dxschc:TypeComparationConverter}, ConverterParameter={x:Type dxsch:ListViewBase}, Mode=OneWay}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.Items_Home_GroupBy_GroupByResource}" BasedOn="{StaticResource Scheduler.BarItem.BaseStyle}" TargetType="{x:Type dxb:BarCheckItem}">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=MenuCmd_SwitchToGroupByResource}" />
        <Setter Property="Glyph" Value="{dx:ImageSelector Source={dx:DXImage Image=GroupByResource_16x16.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/GroupByResource.svg'}}" />
        <Setter Property="LargeGlyph" Value="{dx:ImageSelector Source={dx:DXImage Image=GroupByResource_32x32.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/GroupByResource.svg'}}" />
        <Setter Property="IsChecked" Value="{DXBinding '@s.Tag.GroupType', Converter={StaticResource GroupByResourceToTrue}, Mode=TwoWay}" />
        <Setter Property="AllowUncheckInGroup" Value="False" />
        <Setter Property="GroupIndex" Value="1" />
        <Setter Property="Hint" Value="{dxschc:SchedulerLocalizer StringId=Caption_GroupByResourceDescription}" />
        <Style.Triggers>
            <DataTrigger Binding="{DXBinding '@s.Tag.ActiveView', Converter={dxschc:TypeComparationConverter}, ConverterParameter={x:Type dxsch:ListViewBase}, Mode=OneWay}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.Items_Appointment_Options_Reminder}" BasedOn="{StaticResource Scheduler.BarItem.BaseStyle}" TargetType="{x:Type dxb:BarSubItem}">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=MenuCmd_Reminder}" />
        <Setter Property="Glyph" Value="{dx:ImageSelector Source={dx:DXImage Image=Reminder_16x16.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/Reminder.svg'}}" />
        <Setter Property="LargeGlyph" Value="{dx:ImageSelector Source={dx:DXImage Image=Reminder_32x32.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/Reminder.svg'}}" />
        <Setter Property="ItemLinksSource" Value="{dxschc:DefaultReminderSpans}" />
        <Setter Property="ItemTemplate" Value="{StaticResource BarCheckItem.ReminderItem}" />
        <Setter Property="IsVisible" Value="{DXBinding '@s.Tag.AllowReminders'}" />
        <Setter Property="Hint" Value="{dxschc:SchedulerLocalizer StringId=DescCmd_Reminder}" />
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.Items_Appointment_Options_Recurrence}" BasedOn="{StaticResource Scheduler.BarItem.BaseStyle}" TargetType="{x:Type dxb:BarCheckItem}">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=ButtonCaption_Recurrence}" />
        <Setter Property="Glyph" Value="{dx:ImageSelector Source={dx:DXImage Image=Recurrence_16x16.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/Recurrence.svg'}}" />
        <Setter Property="LargeGlyph" Value="{dx:ImageSelector Source={dx:DXImage Image=Recurrence_32x32.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/Recurrence.svg'}}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.OpenRecurrenceWindowCommand'}" />
        <Setter Property="Hint" Value="{dxschc:SchedulerLocalizer StringId=ButtonDescription_Recurrence}" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxschc:SchedulerRecurrenceBarCheckItemBehavior Scheduler="{DXBinding '@a($dxb:BarCheckItem).Tag'}" />
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.Items_Home_TimeScale_SwitchTimeScale}" BasedOn="{StaticResource Scheduler.BarItem.BaseStyle}" TargetType="{x:Type dxb:BarSubItem}">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=MenuCmd_TimeScalesMenu}" />
        <Setter Property="Glyph" Value="{dx:ImageSelector Source={dx:DXImage Image=SwitchTimeScalesTo_16x16.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/SwitchTimeScalesTo.svg'}}" />
        <Setter Property="LargeGlyph" Value="{dx:ImageSelector Source={dx:DXImage Image=SwitchTimeScalesTo_32x32.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/SwitchTimeScalesTo.svg'}}" />
        <Setter Property="Hint" Value="{dxschc:SchedulerLocalizer StringId=DescCmd_TimeScalesMenu}" />
        <Setter Property="IsEnabled" Value="False" />
        <Style.Triggers>
            <DataTrigger Binding="{DXBinding '@s.Tag.ActiveView', Converter={dxschc:TypeComparationConverter}, ConverterParameter={x:Type dxsch:DayViewBase}, Mode=OneWay}" Value="True">
                <Setter Property="ItemLinksSource" Value="{DXBinding '@s.Tag.ActiveView.DayViewBase.TimeScales'}" />
                <Setter Property="ItemTemplate" Value="{StaticResource BarCheckItem.TimeScale}" />
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{DXBinding '@s.Tag.ActiveView', Converter={dxschc:TypeComparationConverter}, ConverterParameter={x:Type dxsch:TimelineView}, Mode=OneWay}" Value="True">
                <Setter Property="ItemLinksSource" Value="{DXBinding '@s.Tag.ActiveView.TimelineView.TimeScales'}" />
                <Setter Property="ItemTemplate" Value="{StaticResource BarCheckItem.TimelineViewTimeScale}" />
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.CellContextMenu_SwitchTimeScale}" BasedOn="{StaticResource Scheduler.BarItem.BaseStyle}" TargetType="{x:Type dxb:BarSubItem}">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=MenuCmd_TimeScalesMenu}" />
        <Setter Property="IsVisible" Value="False" />
        <Setter Property="ItemLinksSource" Value="{DXBinding '@s.Tag.ActiveView.TimelineView.TimeScales'}" />
        <Setter Property="ItemTemplate" Value="{StaticResource BarCheckItem.TimelineViewTimeScale}" />
        <Style.Triggers>
            <DataTrigger Binding="{DXBinding '@s.Tag.ActiveView.TimelineView.ActualViewMode'}" Value="{x:Static dxsch:TimelineViewMode.Legacy}">
                <Setter Property="IsVisible" Value="True" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.Items_Home_TimeScale_IntervalCount}" BasedOn="{StaticResource Scheduler.BarItem.BaseStyle}" TargetType="{x:Type dxb:BarEditItem}">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=Caption_IntervalCount}" />
        <Setter Property="IsVisible" Value="{DXBinding '@s.Tag.ActiveView', Converter={dxschc:TypeComparationConverter}, ConverterParameter={x:Type dxsch:TimelineView}, Mode=OneWay}" />
        <Setter Property="EditValue" Value="{DXBinding '@s.Tag.ActiveView.TimelineView.IntervalCount'}" />
        <Setter Property="EditSettings">
            <Setter.Value>
                <dxmvvm:ValueFactory>
                    <DataTemplate>
                        <ContentControl>
                            <dxe:SpinEditSettings
                                Focusable="True"
                                IsEnabled="False"
                                IsFloatValue="False"
                                MaxValue="15"
                                MinValue="1" />
                        </ContentControl>
                    </DataTemplate>
                </dxmvvm:ValueFactory>
            </Setter.Value>
        </Setter>
        <Setter Property="Hint" Value="{dxschc:SchedulerLocalizer StringId=Description_IntervalCount}" />
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.Items_Home_TimeScale_ShowTimeScaleCaptions}" BasedOn="{StaticResource Scheduler.BarItem.BaseStyle}" TargetType="{x:Type dxb:BarSubItem}">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=MenuCmd_TimeScaleCaptionsMenu}" />
        <Setter Property="IsVisible" Value="False" />
        <Setter Property="ItemLinksSource" Value="{DXBinding '@s.Tag.ActiveView.TimelineView.TimeScales'}" />
        <Setter Property="ItemTemplate" Value="{StaticResource BarCheckItem.TimelineViewTimeScaleCaptions}" />
        <Setter Property="Hint" Value="{dxschc:SchedulerLocalizer StringId=MenuCmd_TimeScaleCaptionsMenu}" />
        <Style.Triggers>
            <DataTrigger Binding="{DXBinding '@s.Tag.ActiveView.TimelineView.ActualViewMode'}" Value="{x:Static dxsch:TimelineViewMode.Legacy}">
                <Setter Property="IsVisible" Value="True" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.Items_Home_Layout_ShowWorkTimeOnly}" BasedOn="{StaticResource Scheduler.BarItem.BaseStyle}" TargetType="{x:Type dxb:BarCheckItem}">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=MenuCmd_ShowWorkTimeOnly}" />
        <Setter Property="IsVisible" Value="{DXBinding '@s.Tag.ActiveView', Converter={dxschc:TypeComparationConverter}, ConverterParameter={x:Type dxsch:DayViewBase}, Mode=OneWay}" />
        <Setter Property="Glyph" Value="{dx:ImageSelector Source={dx:DXImage Image=ShowWorkTimeOnly_16x16.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/ShowWorkTimeOnly.svg'}}" />
        <Setter Property="LargeGlyph" Value="{dx:ImageSelector Source={dx:DXImage Image=ShowWorkTimeOnly_32x32.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/ShowWorkTimeOnly.svg'}}" />
        <Setter Property="IsChecked" Value="{DXBinding '@s.Tag.ActiveView.DayViewBase.ShowWorkTimeOnly', Mode=TwoWay}" />
        <Setter Property="Hint" Value="{dxschc:SchedulerLocalizer StringId=DescCmd_ShowWorkTimeOnly}" />
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.Items_Home_Layout_ShowWorkDaysOnly}" BasedOn="{StaticResource Scheduler.BarItem.BaseStyle}" TargetType="{x:Type dxb:BarCheckItem}">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=MenuCmd_ShowWorkDaysOnly}" />
        <Setter Property="IsVisible" Value="{DXBinding '@s.Tag.ActiveView', Converter={dxschc:TypeComparationConverter}, ConverterParameter={x:Type dxsch:MonthView}, Mode=OneWay}" />
        <Setter Property="Glyph" Value="{dx:ImageSelector Source={dx:DXImage Image=ShowWorkTimeOnly_16x16.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/ShowWorkTimeOnly.svg'}}" />
        <Setter Property="LargeGlyph" Value="{dx:ImageSelector Source={dx:DXImage Image=ShowWorkTimeOnly_32x32.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/ShowWorkTimeOnly.svg'}}" />
        <Setter Property="IsChecked" Value="{DXBinding '@s.Tag.ActiveView.MonthView.ShowWorkDaysOnly', Mode=TwoWay}" />
        <Setter Property="Hint" Value="{dxschc:SchedulerLocalizer StringId=DescCmd_ShowWorkTimeOnly}" />
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.Items_Home_Layout_SwitchSnapToCells}" BasedOn="{StaticResource Scheduler.BarItem.BaseStyle}" TargetType="{x:Type dxb:BarSubItem}">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=MenuCmd_SwitchSnapToCells}" />
        <Setter Property="IsEnabled" Value="{DXBinding '@s.Tag.ActiveView.DayViewBase != null || @s.Tag.ActiveView.TimelineView != null', Mode=OneWay}" />
        <Setter Property="Glyph" Value="{dx:ImageSelector Source={dx:DXImage Image=SnapToCells_16x16.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/SnapToCells.svg'}}" />
        <Setter Property="LargeGlyph" Value="{dx:ImageSelector Source={dx:DXImage Image=SnapToCells_32x32.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/SnapToCells.svg'}}" />
        <Setter Property="ItemLinksSource" Value="{Binding Source={StaticResource SnapToCellsValues}}" />
        <Setter Property="ItemTemplate" Value="{StaticResource BarCheckItem.SnapToCells}" />
        <Setter Property="Hint" Value="{dxschc:SchedulerLocalizer StringId=DescCmd_SwitchSnapToCells}" />
    </Style>
    <Style x:Key="{dxscht:LWKey SchedulerCommandBar.Items_Home_Window_ShowRemindersWindow}" BasedOn="{StaticResource Scheduler.BarItem.BaseStyle}" TargetType="{x:Type dxb:BarButtonItem}">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=MenuCmd_OpenRemindersWindow}" />
        <Setter Property="IsEnabled" Value="{DXBinding '@s.Tag.TriggeredReminders.Count > 0', Mode=OneWay}" />
        <Setter Property="Glyph" Value="{dx:ImageSelector Source={dx:DXImage Image=Reminder_16x16.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/Reminder.svg'}}" />
        <Setter Property="LargeGlyph" Value="{dx:ImageSelector Source={dx:DXImage Image=Reminder_32x32.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/Reminder.svg'}}" />
        <Setter Property="Command" Value="{DXBinding '@s.Tag.Commands.ShowRemindersWindowCommand'}" />
        <Setter Property="Hint" Value="{dxschc:SchedulerLocalizer StringId=DescCmd_OpenRemindersWindow}" />
    </Style>


    <ControlTemplate x:Key="{dxscht:LWKey SchedulerCommandBar.EmptyRibbonTemplate}" TargetType="{x:Type Control}" />
    <ControlTemplate x:Key="{dxscht:LWKey SchedulerCommandBar.RibbonTemplate}" TargetType="{x:Type Control}">
        <dxr:RibbonControl dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.RibbonControl}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.RibbonControl}}">
            <dxmvvm:Interaction.Behaviors>
                <dxb:ControllerBehavior Actions="{Binding Path=(dxsch:SchedulerControl.Scheduler).RibbonActions, RelativeSource={RelativeSource TemplatedParent}}" ExecutionMode="OnEvent">
                    <dxb:ControllerBehavior.Triggers>
                        <dxb:ActionTrigger EventName="Loaded" ExecuteOnce="True" />
                    </dxb:ControllerBehavior.Triggers>
                </dxb:ControllerBehavior>
            </dxmvvm:Interaction.Behaviors>
            <dxr:RibbonDefaultPageCategory dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.Categories_Default}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Categories_Default}}">
                <dxr:RibbonPage dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.Pages_Home}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Pages_Home}}">
                    <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.Groups_Home_Appointment}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Groups_Home_Appointment}}">
                        <dxb:BarButtonItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.Items_Home_Appointment_NewAppointment}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Items_Home_Appointment_NewAppointment}}" />
                        <dxb:BarButtonItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.Items_Home_Appointment_NewRecurringAppointment}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Items_Home_Appointment_NewRecurringAppointment}}" />
                    </dxr:RibbonPageGroup>
                    <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.Groups_Home_Navigate}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Groups_Home_Navigate}}">
                        <dxb:BarButtonItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.Items_Home_Navigate_Backward}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Items_Home_Navigate_Backward}}" />
                        <dxb:BarButtonItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.Items_Home_Navigate_Forward}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Items_Home_Navigate_Forward}}" />
                        <dxb:BarButtonItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.Items_Home_Navigate_GotoToday}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Items_Home_Navigate_GotoToday}}" />
                    </dxr:RibbonPageGroup>
                    <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.Groups_Home_Arrange}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Groups_Home_Arrange}}">
                        <dxb:BarLinkContainerItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.Items_Home_Arrange_Views}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Items_Home_Arrange_Views}}" />
                    </dxr:RibbonPageGroup>
                    <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.Groups_Home_GroupBy}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Groups_Home_GroupBy}}">
                        <dxb:BarCheckItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.Items_Home_GroupBy_GroupByNone}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Items_Home_GroupBy_GroupByNone}}" />
                        <dxb:BarCheckItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.Items_Home_GroupBy_GroupByDate}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Items_Home_GroupBy_GroupByDate}}" />
                        <dxb:BarCheckItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.Items_Home_GroupBy_GroupByResource}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Items_Home_GroupBy_GroupByResource}}" />
                    </dxr:RibbonPageGroup>
                    <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.Groups_Home_TimeScale}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Groups_Home_TimeScale}}">
                        <dxb:BarSubItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.Items_Home_TimeScale_SwitchTimeScale}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Items_Home_TimeScale_SwitchTimeScale}}" />
                        <dxb:BarEditItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.Items_Home_TimeScale_IntervalCount}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Items_Home_TimeScale_IntervalCount}}" />
                        <dxb:BarSubItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.Items_Home_TimeScale_TimeScaleCaptions}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Items_Home_TimeScale_ShowTimeScaleCaptions}}" />
                    </dxr:RibbonPageGroup>
                    <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.Groups_Home_Layout}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Groups_Home_Layout}}">
                        <dxb:BarCheckItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.Items_Home_Layout_ShowWorkTimeOnly}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Items_Home_Layout_ShowWorkTimeOnly}}" />
                        <dxb:BarCheckItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.Items_Home_Layout_ShowWorkDaysOnly}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Items_Home_Layout_ShowWorkDaysOnly}}" />
                        <dxb:BarSubItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.Items_Home_Layout_SwitchSnapToCells}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Items_Home_Layout_SwitchSnapToCells}}" />
                    </dxr:RibbonPageGroup>
                    <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.Groups_Home_Window}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Groups_Home_Window}}">
                        <dxb:BarButtonItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.Items_Home_Window_ShowRemindersWindow}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Items_Home_Window_ShowRemindersWindow}}" />
                    </dxr:RibbonPageGroup>
                </dxr:RibbonPage>
            </dxr:RibbonDefaultPageCategory>
            <dxr:RibbonPageCategory dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.Categories_Appointment}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Categories_Appointment}}">
                <dxr:RibbonPage dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.Pages_Appointment}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Pages_Appointment}}">
                    <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.Groups_Appointment_Actions}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Groups_Appointment_Actions}}">
                        <dxb:BarButtonItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.Items_Appointment_Actions_Open}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Items_Appointment_Actions_Open}}" />
                        <dxb:BarButtonItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.Items_Appointment_Actions_Delete}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Items_Appointment_Actions_Delete}}" />
                    </dxr:RibbonPageGroup>
                    <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.Groups_Appointment_Options}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Groups_Appointment_Options}}">
                        <dxb:BarSubItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.Items_Appointment_Options_ShowTimeAs}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Items_Appointment_Options_ShowTimeAs}}" />
                        <dxb:BarSubItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.Items_Appointment_Options_LabelAs}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Items_Appointment_Options_LabelAs}}" />
                        <dxb:BarSubItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.Items_Appointment_Options_Reminder}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Items_Appointment_Options_Reminder}}" />
                        <dxb:BarCheckItem dx:XamlHelper.Name="{x:Static dxsch:DefaultBarItemNames.Items_Appointment_Options_Recurrence}" Style="{DynamicResource {dxscht:LWKey SchedulerCommandBar.Items_Appointment_Options_Recurrence}}" />
                    </dxr:RibbonPageGroup>
                </dxr:RibbonPage>
            </dxr:RibbonPageCategory>
        </dxr:RibbonControl>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Scheduler\Ribbon.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Scheduler\Scheduler.xaml-->
    <DataTemplate x:Key="Scheduler.DayView.GroupByResource">
        <dxschv:DayViewGroupByResourceControl
            x:Name="control"
            HorizontalScrollOffset="{Binding VisualData.HorizontalScrollOffset, Mode=TwoWay, RelativeSource={RelativeSource Mode=Self}}"
            VerticalScrollOffset="{Binding VisualData.VerticalScrollOffset, Mode=TwoWay, RelativeSource={RelativeSource Mode=Self}}"
            View="{Binding}"
            VisualData="{Binding VisualData.GroupByResource}">
            <dxmvvm:Interaction.Behaviors>
                <dxmvvm:ReadOnlyDependencyPropertyBindingBehavior Binding="{Binding VisualData.ViewportHeight, Mode=TwoWay, ElementName=control}" IsEnabled="{Binding IsVisible, ElementName=control}" Property="ViewportHeight" />
            </dxmvvm:Interaction.Behaviors>
        </dxschv:DayViewGroupByResourceControl>
    </DataTemplate>
    <DataTemplate x:Key="Scheduler.DayView.GroupByDate">
        <dxschv:DayViewGroupByDateControl
            x:Name="control"
            HorizontalScrollOffset="{Binding VisualData.GroupByDate.HorizontalScrollOffset, Mode=TwoWay, RelativeSource={RelativeSource Mode=Self}}"
            VerticalScrollOffset="{Binding VisualData.GroupByDate.VerticalScrollOffset, Mode=TwoWay, RelativeSource={RelativeSource Mode=Self}}"
            View="{Binding}"
            VisualData="{Binding VisualData.GroupByDate}">
            <dxmvvm:Interaction.Behaviors>
                <dxmvvm:ReadOnlyDependencyPropertyBindingBehavior Binding="{Binding VisualData.GroupByDate.ViewportHeight, Mode=TwoWay, ElementName=control}" IsEnabled="{Binding IsVisible, ElementName=control}" Property="ViewportHeight" />
            </dxmvvm:Interaction.Behaviors>
        </dxschv:DayViewGroupByDateControl>
    </DataTemplate>
    <DataTemplate x:Key="Scheduler.MonthView.GroupByNone">
        <dxschv:MonthViewGroupByResourceControl
            x:Name="control"
            VerticalScrollOffset="{Binding VisualData.VerticalScrollOffset, Mode=TwoWay}"
            View="{Binding}"
            VisualData="{Binding VisualData.GroupByNone}">
            <dxmvvm:Interaction.Behaviors>
                <dxmvvm:ReadOnlyDependencyPropertyBindingBehavior Binding="{Binding VisualData.CellHeight, Mode=TwoWay}" IsEnabled="{Binding IsVisible, ElementName=control}" Property="CellHeight" />
            </dxmvvm:Interaction.Behaviors>
        </dxschv:MonthViewGroupByResourceControl>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding ElementName=control, Path=IsVisible}" Value="False">
                <Setter TargetName="control" Property="VerticalScrollOffset" Value="0" />
                <Setter TargetName="control" Property="HorizontalScrollOffset" Value="0" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <DataTemplate x:Key="Scheduler.MonthView.GroupByResource">
        <dxschv:MonthViewGroupByResourceControl
            x:Name="control"
            HorizontalScrollOffset="{Binding VisualData.HorizontalScrollOffset, Mode=TwoWay}"
            VerticalScrollOffset="{Binding VisualData.VerticalScrollOffset, Mode=TwoWay}"
            View="{Binding}"
            VisualData="{Binding VisualData.GroupByResource}">
            <dxmvvm:Interaction.Behaviors>
                <dxmvvm:ReadOnlyDependencyPropertyBindingBehavior Binding="{Binding VisualData.CellHeight, Mode=TwoWay}" IsEnabled="{Binding IsVisible, ElementName=control}" Property="CellHeight" />
            </dxmvvm:Interaction.Behaviors>
        </dxschv:MonthViewGroupByResourceControl>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding ElementName=control, Path=IsVisible}" Value="False">
                <Setter TargetName="control" Property="VerticalScrollOffset" Value="0" />
                <Setter TargetName="control" Property="HorizontalScrollOffset" Value="0" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <DataTemplate x:Key="Scheduler.MonthView.GroupByDate">
        <dxschv:MonthViewGroupByDateControl
            x:Name="control"
            HorizontalScrollOffset="{Binding VisualData.HorizontalScrollOffset, Mode=TwoWay}"
            VerticalScrollOffset="{Binding VisualData.VerticalScrollOffset, Mode=TwoWay}"
            View="{Binding}"
            VisualData="{Binding VisualData.GroupByDate}">
            <dxmvvm:Interaction.Behaviors>
                <dxmvvm:ReadOnlyDependencyPropertyBindingBehavior Binding="{Binding VisualData.CellHeight, Mode=TwoWay}" IsEnabled="{Binding IsVisible, ElementName=control}" Property="CellHeight" />
            </dxmvvm:Interaction.Behaviors>
        </dxschv:MonthViewGroupByDateControl>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding ElementName=control, Path=IsVisible}" Value="False">
                <Setter TargetName="control" Property="VerticalScrollOffset" Value="0" />
                <Setter TargetName="control" Property="HorizontalScrollOffset" Value="0" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <DataTemplate x:Key="Scheduler.OneMonthView.GroupByNone">
        <dxschv:OneMonthViewControl
            x:Name="control"
            VerticalScrollOffset="{Binding VisualData.VerticalScrollOffset, Mode=TwoWay}"
            View="{Binding}"
            VisualData="{Binding VisualData.GroupByNone}">
            <dxmvvm:Interaction.Behaviors>
                <dxmvvm:ReadOnlyDependencyPropertyBindingBehavior Binding="{Binding VisualData.CellHeight, Mode=TwoWay}" IsEnabled="{Binding IsVisible, ElementName=control}" Property="CellHeight" />
            </dxmvvm:Interaction.Behaviors>
        </dxschv:OneMonthViewControl>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding ElementName=control, Path=IsVisible}" Value="False">
                <Setter TargetName="control" Property="VerticalScrollOffset" Value="0" />
                <Setter TargetName="control" Property="HorizontalScrollOffset" Value="0" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <DataTemplate x:Key="Scheduler.OneMonthView.GroupByResource">
        <dxschv:OneMonthViewGroupByResourceControl
            x:Name="control"
            HorizontalScrollOffset="{Binding VisualData.HorizontalScrollOffset, Mode=TwoWay}"
            VerticalScrollOffset="{Binding VisualData.VerticalScrollOffset, Mode=TwoWay}"
            View="{Binding}"
            VisualData="{Binding VisualData.GroupByResource}">
            <dxmvvm:Interaction.Behaviors>
                <dxmvvm:ReadOnlyDependencyPropertyBindingBehavior Binding="{Binding VisualData.CellHeight, Mode=TwoWay}" IsEnabled="{Binding IsVisible, ElementName=control}" Property="CellHeight" />
            </dxmvvm:Interaction.Behaviors>
        </dxschv:OneMonthViewGroupByResourceControl>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding ElementName=control, Path=IsVisible}" Value="False">
                <Setter TargetName="control" Property="VerticalScrollOffset" Value="0" />
                <Setter TargetName="control" Property="HorizontalScrollOffset" Value="0" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <DataTemplate x:Key="Scheduler.OneMonthView.GroupByDate">
        <dxschv:OneMonthViewGroupByDateControl
            x:Name="control"
            HorizontalScrollOffset="{Binding VisualData.HorizontalScrollOffset, Mode=TwoWay}"
            VerticalScrollOffset="{Binding VisualData.VerticalScrollOffset, Mode=TwoWay}"
            View="{Binding}"
            VisualData="{Binding VisualData.GroupByDate}">
            <dxmvvm:Interaction.Behaviors>
                <dxmvvm:ReadOnlyDependencyPropertyBindingBehavior Binding="{Binding VisualData.CellHeight, Mode=TwoWay}" IsEnabled="{Binding IsVisible, ElementName=control}" Property="CellHeight" />
            </dxmvvm:Interaction.Behaviors>
        </dxschv:OneMonthViewGroupByDateControl>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding ElementName=control, Path=IsVisible}" Value="False">
                <Setter TargetName="control" Property="VerticalScrollOffset" Value="0" />
                <Setter TargetName="control" Property="HorizontalScrollOffset" Value="0" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <DataTemplate x:Key="Scheduler.TimelineView">
        <dxschv:TimelineViewControl VerticalScrollOffset="{Binding VisualData.VerticalScrollOffset, Mode=TwoWay}" View="{Binding}" VisualData="{Binding VisualData}">
            <dxmvvm:Interaction.Behaviors>
                <dxmvvm:ReadOnlyDependencyPropertyBindingBehavior Binding="{Binding VisualData.CellWidth, Mode=TwoWay}" Property="CellWidth" />
                <dxmvvm:ReadOnlyDependencyPropertyBindingBehavior Binding="{Binding VisualData.CellHeight, Mode=TwoWay}" Property="CellHeight" />
            </dxmvvm:Interaction.Behaviors>
        </dxschv:TimelineViewControl>
    </DataTemplate>
    <DataTemplate x:Key="Scheduler.AgendaView">
        <dxschv:AgendaViewControl View="{Binding}" VisualData="{Binding VisualData}" />
    </DataTemplate>
    <DataTemplate x:Key="Scheduler.ListView">
        <dxschv:ListViewControl View="{Binding}" VisualData="{Binding VisualData}" />
    </DataTemplate>
    <DataTemplate x:Key="FlyoutControl.Settings">
        <ContentControl>
            <dxe:FlyoutSettings Placement="Right" ShowIndicator="True" />
        </ContentControl>
    </DataTemplate>


    <Style x:Key="ViewPresenter.Style" TargetType="dxschv:SchedulerViewPresenter">
        <Setter Property="DayViewGroupByNoneTemplate" Value="{StaticResource Scheduler.DayView.GroupByResource}" />
        <Setter Property="DayViewGroupByResourceTemplate" Value="{StaticResource Scheduler.DayView.GroupByResource}" />
        <Setter Property="DayViewGroupByDateTemplate" Value="{StaticResource Scheduler.DayView.GroupByDate}" />
        <Setter Property="MonthViewGroupByNoneTemplate" Value="{StaticResource Scheduler.MonthView.GroupByNone}" />
        <Setter Property="MonthViewGroupByResourceTemplate" Value="{StaticResource Scheduler.MonthView.GroupByResource}" />
        <Setter Property="MonthViewGroupByDateTemplate" Value="{StaticResource Scheduler.MonthView.GroupByDate}" />
        <Setter Property="OneMonthViewGroupByNoneTemplate" Value="{StaticResource Scheduler.OneMonthView.GroupByNone}" />
        <Setter Property="OneMonthViewGroupByResourceTemplate" Value="{StaticResource Scheduler.OneMonthView.GroupByResource}" />
        <Setter Property="OneMonthViewGroupByDateTemplate" Value="{StaticResource Scheduler.OneMonthView.GroupByDate}" />
        <Setter Property="TimelineViewTemplate" Value="{StaticResource Scheduler.TimelineView}" />
        <Setter Property="AgendaViewTemplate" Value="{StaticResource Scheduler.AgendaView}" />
        <Setter Property="ListViewTemplate" Value="{StaticResource Scheduler.ListView}" />
    </Style>
    <Style x:Key="FlyoutControl.DefaultStyle" TargetType="dxe:FlyoutControl">
        <Setter Property="IsOpen" Value="False" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Settings" Value="{dxmvvm:ValueFactory ValueTemplate={StaticResource FlyoutControl.Settings}}" />
        <Setter Property="Content" Value="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}" />
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="Padding" Value="0" />
    </Style>

    <ControlTemplate x:Key="{dxscht:LWKey SchedulerCommon.Template}" TargetType="dxsch:SchedulerControl">
        <dxb:BarManager CreateStandardLayout="False">
            <DockPanel>
                <dxe:FlyoutControl
                    x:Name="PART_FlyoutControl"
                    ContentTemplate="{TemplateBinding FlyoutContentTemplate}"
                    DockPanel.Dock="Top"
                    Style="{StaticResource FlyoutControl.DefaultStyle}" />
                <Control x:Name="PART_RibbonHost" DockPanel.Dock="Top" Template="{DynamicResource {dxscht:LWKey SchedulerCommandBar.EmptyRibbonTemplate}}" />
                <Grid x:Name="PART_Root">
                    <dx:DXBorder
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                        <DockPanel>
                            <dxsch:DateNavigationPanel x:Name="PART_DateNavigationPanel" DockPanel.Dock="Top" Scheduler="{Binding Path='(dxsch:SchedulerControl.Scheduler)', RelativeSource={RelativeSource Self}}" />
                            <dx:DXBorder
                                Name="PART_ViewTobBorder"
                                BorderBrush="{DynamicResource {dxscht:LWKey Scheduler.TobBorderBrush}}"
                                BorderThickness="0,1,0,0"
                                DockPanel.Dock="Top"
                                Visibility="Collapsed" />
                            <dxschv:SchedulerViewPresenter Margin="{TemplateBinding Padding}" Style="{StaticResource ViewPresenter.Style}" />
                        </DockPanel>
                    </dx:DXBorder>
                    <dxschv:ErrorRetryPanel x:Name="PART_ErrorPanel" Visibility="Collapsed" />
                </Grid>
            </DockPanel>
        </dxb:BarManager>
        <ControlTemplate.Triggers>
            <Trigger Property="CommandBarStyle" Value="Ribbon">
                <Setter TargetName="PART_RibbonHost" Property="Template" Value="{DynamicResource {dxscht:LWKey SchedulerCommandBar.RibbonTemplate}}" />
            </Trigger>
            <Trigger Property="ShowDateNavigationPanel" Value="False">
                <Setter TargetName="PART_DateNavigationPanel" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="ShowDateNavigationPanel" Value="True">
                <Setter TargetName="PART_DateNavigationPanel" Property="Visibility" Value="Visible" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ShowDateNavigationPanel" Value="True" />
                    <Condition Property="ActiveViewType" Value="ListView" />
                    <Condition SourceName="PART_DateNavigationPanel" Property="ActualShowViewSelector" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_DateNavigationPanel" Property="Visibility" Value="Collapsed" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ShowDateNavigationPanel" Value="True" />
                    <Condition Property="ActiveViewType" Value="ListView" />
                    <Condition SourceName="PART_DateNavigationPanel" Property="ActualShowViewSelector" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_ViewTobBorder" Property="Visibility" Value="Visible" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ShowDateNavigationPanel" Value="True" />
                    <Condition Property="ActiveViewType" Value="TimelineView" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_ViewTobBorder" Property="Visibility" Value="Visible" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxscht:LWKey SchedulerCommon.ErrorRetryTemplate}" TargetType="dxschv:ErrorRetryPanel">
        <dx:ThemedBorder
            Margin="10"
            Padding="3"
            BorderBrush="{DynamicResource {dxt:LWKey ThemedWindow.WindowInactiveBorderBrush}}"
            BorderThickness="1"
            CornerRadius="4">
            <dxlc:LayoutControl>
                <dxlc:LayoutGroup ItemSpace="8" Orientation="Vertical">
                    <dxlc:LayoutGroup Orientation="Horizontal">
                        <dx:DXImage
                            x:Name="icon"
                            Width="48"
                            Height="48"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            Source="{dx:SvgImageSource Uri={dx:UtilsResource Core/Images/DragRemove.svg}}"
                            Stretch="Fill" />
                        <TextBlock
                            MaxWidth="300"
                            MaxHeight="250"
                            VerticalAlignment="Center"
                            Text="{Binding}"
                            TextAlignment="Left"
                            TextWrapping="Wrap" />
                    </dxlc:LayoutGroup>
                    <dxlc:LayoutGroup Orientation="Horizontal">
                        <dx:SimpleButton
                            Name="PART_CopyButton"
                            VerticalAlignment="Bottom"
                            Command="{TemplateBinding CopyCommand}"
                            Content="Copy Info" />
                        <dx:SimpleButton
                            Name="PART_RetryButton"
                            VerticalAlignment="Bottom"
                            Command="{TemplateBinding RetryCommand}"
                            Content="Retry" />
                    </dxlc:LayoutGroup>
                </dxlc:LayoutGroup>
            </dxlc:LayoutControl>
        </dx:ThemedBorder>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Scheduler\Scheduler.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Editors\DailyRecurrenceControl.xaml-->

    <ControlTemplate x:Key="DailyRecurrenceControl.DefaultTemplate" TargetType="dxsche:DailyRecurrenceControl">
        <dxlc:LayoutControl Padding="0" DataContext="{TemplateBinding RecurrenceInfo}" Orientation="Vertical">
            <dxlc:LayoutControl Padding="0" VerticalAlignment="Top" Orientation="Horizontal">
                <RadioButton
                    x:Name="rbEveryDay"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    VerticalContentAlignment="Center"
                    Content="{dxschc:SchedulerLocalizer StringId=DailyRecurrenceControl_Every}"
                    IsChecked="{Binding WeekDays, Converter={StaticResource EnumToBoolConverter}, ConverterParameter=EveryDay, Mode=TwoWay}" />
                <dxe:SpinEdit
                    x:Name="spinDailyDaysCount"
                    MinWidth="70"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    AllowRoundOutOfRangeValue="True"
                    Focusable="True"
                    GotFocus="{DXEvent '@e(rbEveryDay).SetValue($RadioButton.IsCheckedProperty, true)'}"
                    InvalidValueBehavior="AllowLeaveEditor"
                    IsFloatValue="False"
                    MaxValue="1000"
                    MinValue="1"
                    Value="{Binding Periodicity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <dxlc:LayoutItemLabel HorizontalAlignment="Left" VerticalAlignment="Center" Content="{dxschc:SchedulerLocalizer StringId=DailyRecurrenceControl_DayOrDays}" />
            </dxlc:LayoutControl>
            <dxlc:LayoutControl Padding="0" VerticalAlignment="Top" Orientation="Horizontal">
                <RadioButton
                    x:Name="rbWorkDays"
                    VerticalAlignment="Center"
                    VerticalContentAlignment="Center"
                    Checked="{DXEvent '@e(spinDailyDaysCount).SetValue($dxe:SpinEdit.EditValueProperty, 1)'}"
                    Content="{dxschc:SchedulerLocalizer StringId=DailyRecurrenceControl_EveryWeekday}"
                    IsChecked="{Binding WeekDays, Converter={StaticResource EnumToBoolConverter}, ConverterParameter=WorkDays, Mode=TwoWay}" />
            </dxlc:LayoutControl>
        </dxlc:LayoutControl>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter TargetName="spinDailyDaysCount" Property="MinWidth" Value="140" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                <Setter TargetName="spinDailyDaysCount" Property="MinWidth" Value="140" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Editors\DailyRecurrenceControl.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Editors\MonthlyRecurrenceControl.xaml-->
    <ControlTemplate x:Key="MonthlyRecurrenceControl.DefaultTemplate" TargetType="dxsche:MonthlyRecurrenceControl">
        <dxlc:LayoutControl Padding="0" DataContext="{TemplateBinding Data}" Orientation="Vertical">
            <dxlc:LayoutControl Padding="0" VerticalAlignment="Top" Orientation="Horizontal">
                <RadioButton
                    Name="everyNDayRadioButton"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    VerticalContentAlignment="Center"
                    Content="{dxschc:SchedulerLocalizer StringId=MonthlyRecurrenceControl_Day}"
                    GroupName="MonthlyRecurrenceGroup"
                    IsChecked="{Binding EveryNDayChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <dxe:SpinEdit
                    x:Name="edDayNumber"
                    MinWidth="58"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    AllowRoundOutOfRangeValue="True"
                    GotFocus="{DXEvent '@e(everyNDayRadioButton).SetValue($RadioButton.IsCheckedProperty, true)'}"
                    InvalidValueBehavior="AllowLeaveEditor"
                    IsFloatValue="False"
                    MaxValue="31"
                    MinValue="1"
                    Value="{Binding RecurrenceInfo.DayNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <dxlc:LayoutItemLabel HorizontalAlignment="Left" VerticalAlignment="Center" Content="{dxschc:SchedulerLocalizer StringId=MonthlyRecurrenceControl_OfEvery}" />
                <dxe:SpinEdit
                    x:Name="edDayPeriodicity"
                    MinWidth="58"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    AllowRoundOutOfRangeValue="True"
                    GotFocus="{DXEvent '@e(everyNDayRadioButton).SetValue($RadioButton.IsCheckedProperty, true)'}"
                    InvalidValueBehavior="AllowLeaveEditor"
                    IsFloatValue="False"
                    MaxValue="100"
                    MinValue="1"
                    Value="{Binding RecurrenceInfo.Periodicity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" Text="{dxschc:SchedulerLocalizer StringId=MonthlyRecurrenceControl_MonthOrMonths}" />
            </dxlc:LayoutControl>
            <dxlc:LayoutControl Padding="0" VerticalAlignment="Top" Orientation="Horizontal">
                <RadioButton
                    Name="everyWeekOfMonthRadioButton"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    VerticalContentAlignment="Center"
                    Content="{dxschc:SchedulerLocalizer StringId=MonthlyRecurrenceControl_The}"
                    GroupName="MonthlyRecurrenceGroup"
                    IsChecked="{Binding EveryWeekOfMonthChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <dxsche:WeekOfMonthEdit
                    x:Name="edWeekOfMonth"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    EditValue="{Binding WeekOfMonth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    GotFocus="{DXEvent '@e(everyWeekOfMonthRadioButton).SetValue($RadioButton.IsCheckedProperty, true)'}"
                    InvalidValueBehavior="AllowLeaveEditor" />
                <dxsche:WeekDaysEdit
                    x:Name="edWeekDays"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    EditValue="{Binding RecurrenceInfo.WeekDays, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    GotFocus="{DXEvent '@e(everyWeekOfMonthRadioButton).SetValue($RadioButton.IsCheckedProperty, true)'}" />
                <dxlc:LayoutItemLabel HorizontalAlignment="Left" VerticalAlignment="Center" Content="{dxschc:SchedulerLocalizer StringId=MonthlyRecurrenceControl_OfEvery}" />
                <dxe:SpinEdit
                    x:Name="edMonthPeriodicity"
                    MinWidth="58"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    AllowRoundOutOfRangeValue="True"
                    GotFocus="{DXEvent '@e(everyWeekOfMonthRadioButton).SetValue($RadioButton.IsCheckedProperty, true)'}"
                    InvalidValueBehavior="AllowLeaveEditor"
                    IsFloatValue="False"
                    MaxValue="100"
                    MinValue="1"
                    Value="{Binding RecurrenceInfo.Periodicity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <dxlc:LayoutItemLabel HorizontalAlignment="Left" VerticalAlignment="Center" Content="{dxschc:SchedulerLocalizer StringId=MonthlyRecurrenceControl_MonthOrMonths}" />
            </dxlc:LayoutControl>
        </dxlc:LayoutControl>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter TargetName="edDayNumber" Property="MinWidth" Value="100" />
                <Setter TargetName="edDayPeriodicity" Property="MinWidth" Value="100" />
                <Setter TargetName="edMonthPeriodicity" Property="MinWidth" Value="100" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                <Setter TargetName="edDayNumber" Property="MinWidth" Value="100" />
                <Setter TargetName="edDayPeriodicity" Property="MinWidth" Value="100" />
                <Setter TargetName="edMonthPeriodicity" Property="MinWidth" Value="100" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Editors\MonthlyRecurrenceControl.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Editors\RecurrenceRangeControl.xaml-->

    <ControlTemplate x:Key="RecurrenceRangeControl.DefaultTemplate" TargetType="dxsche:RecurrenceRangeControl">
        <dxlc:LayoutControl Padding="0" DataContext="{TemplateBinding RecurrenceInfo}" Orientation="Vertical">
            <RadioButton
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                VerticalContentAlignment="Center"
                Content="{dxschc:SchedulerLocalizer StringId=RecurrenceRangeControl_NoEndDate}"
                IsChecked="{Binding Range, Converter={StaticResource Converter.Range.NoEndDate}}" />
            <dxlc:LayoutItem VerticalAlignment="Top">
                <dxlc:LayoutItem.Label>
                    <RadioButton
                        Name="rbOccurenceCount"
                        MinWidth="71"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        VerticalContentAlignment="Center"
                        Content="{dxschc:SchedulerLocalizer StringId=RecurrenceRangeControl_EndAfter}"
                        IsChecked="{Binding Range, Converter={StaticResource Converter.Range.OccurrenceCount}}" />
                </dxlc:LayoutItem.Label>
                <dxlc:LayoutGroup Orientation="Horizontal">
                    <dxe:SpinEdit
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        AllowRoundOutOfRangeValue="True"
                        GotFocus="{DXEvent '@e(rbOccurenceCount).SetValue($RadioButton.IsCheckedProperty, true)'}"
                        InvalidValueBehavior="AllowLeaveEditor"
                        IsFloatValue="False"
                        MinValue="1"
                        Value="{Binding OccurrenceCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <dxlc:LayoutItemLabel HorizontalAlignment="Left" VerticalAlignment="Center" Content="{dxschc:SchedulerLocalizer StringId=RecurrenceRangeControl_Occurrences}" />
                </dxlc:LayoutGroup>
            </dxlc:LayoutItem>
            <dxlc:LayoutItem VerticalAlignment="Top">
                <dxlc:LayoutItem.Label>
                    <RadioButton
                        Name="rbEndByDate"
                        MinWidth="71"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        VerticalContentAlignment="Center"
                        Content="{dxschc:SchedulerLocalizer StringId=RecurrenceRangeControl_EndBy}"
                        IsChecked="{Binding Range, Converter={StaticResource Converter.Range.EndByDate}}" />
                </dxlc:LayoutItem.Label>
                <dxe:DateEdit
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    DateTime="{Binding End, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    GotFocus="{DXEvent '@e(rbEndByDate).SetValue($RadioButton.IsCheckedProperty, true)'}"
                    InvalidValueBehavior="AllowLeaveEditor"
                    MinValue="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxsche:RecurrenceRangeControl}, Path=DataContext.MinEndByDate}" />
            </dxlc:LayoutItem>
        </dxlc:LayoutControl>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter TargetName="rbEndByDate" Property="MinWidth" Value="142" />
                <Setter TargetName="rbOccurenceCount" Property="MinWidth" Value="142" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                <Setter TargetName="rbEndByDate" Property="MinWidth" Value="142" />
                <Setter TargetName="rbOccurenceCount" Property="MinWidth" Value="142" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Editors\RecurrenceRangeControl.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Editors\RecurrenceTypeControl.xaml-->
    <ControlTemplate x:Key="RecurrenceTypeControl.DefaultTemplate" TargetType="dxsche:RecurrenceTypeControl">
        <dxe:ListBoxEdit EditValue="{Binding RecurrenceType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}" ItemsSource="{TemplateBinding RecurrenceTypes}" ShowBorder="False">
            <dxe:ListBoxEdit.StyleSettings>
                <dxe:RadioListBoxEditStyleSettings />
            </dxe:ListBoxEdit.StyleSettings>
            <dxe:ListBoxEdit.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Converter={dxschc:RecurrenceTypeToStringConverter}}" />
                </DataTemplate>
            </dxe:ListBoxEdit.ItemTemplate>
        </dxe:ListBoxEdit>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Editors\RecurrenceTypeControl.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Editors\WeekDaysCheckEdit.xaml-->
    <ControlTemplate x:Key="WeekDaysCheckEdit.DefaultTemplate" TargetType="dxsche:WeekDaysCheckEdit">
        <dxlc:FlowLayoutControl
            x:Name="lc"
            Padding="0"
            ItemSpace="7"
            ItemsSource="{TemplateBinding WeekDaysSource}"
            Orientation="Horizontal">
            <dxlc:FlowLayoutControl.ItemTemplate>
                <DataTemplate>
                    <CheckBox
                        MinWidth="65"
                        VerticalContentAlignment="Center"
                        Content="{Binding Text}"
                        IsChecked="{Binding IsChecked}" />
                </DataTemplate>
            </dxlc:FlowLayoutControl.ItemTemplate>
        </dxlc:FlowLayoutControl>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter TargetName="lc" Property="ItemSpace" Value="14" />
                <Setter TargetName="lc" Property="ItemTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <CheckBox
                                MinWidth="120"
                                VerticalContentAlignment="Center"
                                Content="{Binding Text}"
                                IsChecked="{Binding IsChecked}" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                <Setter TargetName="lc" Property="MinWidth" Value="14" />
                <Setter TargetName="lc" Property="ItemTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <CheckBox
                                MinWidth="120"
                                VerticalContentAlignment="Center"
                                Content="{Binding Text}"
                                IsChecked="{Binding IsChecked}" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Editors\WeekDaysCheckEdit.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Editors\WeeklyRecurrenceControl.xaml-->
    <ControlTemplate x:Key="WeeklyRecurrenceControl.DefaultTemplate" TargetType="dxsche:WeeklyRecurrenceControl">
        <dxlc:LayoutControl Padding="0" DataContext="{TemplateBinding RecurrenceInfo}" Orientation="Vertical">
            <dxlc:LayoutControl Padding="0" Orientation="Horizontal">
                <dxlc:LayoutItemLabel HorizontalAlignment="Left" VerticalAlignment="Center" Content="{dxschc:SchedulerLocalizer StringId=RecurrenceControl_RecurEvery}" />
                <dxe:SpinEdit
                    x:Name="edPeriodicity"
                    MinWidth="70"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    AllowRoundOutOfRangeValue="True"
                    Focusable="True"
                    InvalidValueBehavior="AllowLeaveEditor"
                    IsFloatValue="False"
                    MaxValue="53"
                    MinValue="1"
                    Value="{Binding Periodicity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <dxlc:LayoutItemLabel HorizontalAlignment="Left" VerticalAlignment="Center" Content="{dxschc:SchedulerLocalizer StringId=WeeklyRecurrenceControl_WeekOrWeeksOn}" />
            </dxlc:LayoutControl>
            <dxsche:WeekDaysCheckEdit
                VerticalAlignment="Top"
                FirstDayOfWeek="{TemplateBinding FirstDayOfWeek}"
                Focusable="True"
                RecurrenceInfo="{Binding}" />
        </dxlc:LayoutControl>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter TargetName="edPeriodicity" Property="MinWidth" Value="140" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                <Setter TargetName="edPeriodicity" Property="MinWidth" Value="140" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Editors\WeeklyRecurrenceControl.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Editors\YearlyRecurrenceControl.xaml-->
    <ControlTemplate x:Key="YearlyRecurrenceControl.DefaultTemplate" TargetType="dxsche:YearlyRecurrenceControl">
        <dxlc:LayoutControl Padding="0" DataContext="{TemplateBinding Data}" Orientation="Vertical">
            <dxlc:LayoutControl Padding="0" Orientation="Horizontal">
                <dxlc:LayoutItemLabel HorizontalAlignment="Left" VerticalAlignment="Center" Content="{dxschc:SchedulerLocalizer StringId=RecurrenceControl_RecurEvery}" />
                <dxe:SpinEdit
                    x:Name="edPeriodicity"
                    MinWidth="58"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    AllowRoundOutOfRangeValue="True"
                    InvalidValueBehavior="AllowLeaveEditor"
                    IsFloatValue="False"
                    MaxValue="100"
                    MinValue="1"
                    Value="{Binding RecurrenceInfo.Periodicity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <dxlc:LayoutItemLabel HorizontalAlignment="Left" VerticalAlignment="Center" Content="{dxschc:SchedulerLocalizer StringId=YearlyRecurrenceControl_YearOrYears}" />
            </dxlc:LayoutControl>
            <dxlc:LayoutControl Padding="0" Orientation="Horizontal">
                <RadioButton
                    Name="rbMonthDay"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    VerticalContentAlignment="Center"
                    Content="{dxschc:SchedulerLocalizer StringId=YearlyRecurrenceControl_On}"
                    GroupName="YearlyRecurrenceGroup"
                    IsChecked="{Binding MonthDayChecked}" />
                <dxsche:MonthEdit
                    x:Name="cbYearlyMonth"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    EditValue="{Binding RecurrenceInfo.Month, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    GotFocus="{DXEvent '@e(rbMonthDay).SetValue($RadioButton.IsCheckedProperty, true)'}" />
                <dxe:SpinEdit
                    x:Name="spinYearlyDayNumber"
                    MinWidth="58"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    AllowRoundOutOfRangeValue="True"
                    GotFocus="{DXEvent '@e(rbMonthDay).SetValue($RadioButton.IsCheckedProperty, true)'}"
                    InvalidValueBehavior="AllowLeaveEditor"
                    IsFloatValue="False"
                    MaxValue="31"
                    MinValue="1"
                    Value="{Binding RecurrenceInfo.DayNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </dxlc:LayoutControl>
            <dxlc:LayoutControl Padding="0" Orientation="Horizontal">
                <RadioButton
                    Name="rbWeekOfMonth"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    VerticalContentAlignment="Center"
                    Content="{dxschc:SchedulerLocalizer StringId=YearlyRecurrenceControl_OnThe}"
                    GroupName="YearlyRecurrenceGroup"
                    IsChecked="{Binding WeekOfMonthChecked}" />
                <dxsche:WeekOfMonthEdit
                    x:Name="weekOfMonthEdit"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    EditValue="{Binding WeekOfMonth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    GotFocus="{DXEvent '@e(rbWeekOfMonth).SetValue($RadioButton.IsCheckedProperty, true)'}" />
                <dxsche:WeekDaysEdit
                    x:Name="edWeekDays"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    EditValue="{Binding RecurrenceInfo.WeekDays, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    GotFocus="{DXEvent '@e(rbWeekOfMonth).SetValue($RadioButton.IsCheckedProperty, true)'}" />
                <dxlc:LayoutItemLabel HorizontalAlignment="Left" VerticalAlignment="Center" Content="{dxschc:SchedulerLocalizer StringId=YearlyRecurrenceControl_of}" />
                <dxsche:MonthEdit
                    x:Name="edWeeklyMonth"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    EditValue="{Binding RecurrenceInfo.Month, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    GotFocus="{DXEvent '@e(rbWeekOfMonth).SetValue($RadioButton.IsCheckedProperty, true)'}" />
            </dxlc:LayoutControl>
        </dxlc:LayoutControl>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter TargetName="edPeriodicity" Property="MinWidth" Value="100" />
                <Setter TargetName="spinYearlyDayNumber" Property="MinWidth" Value="100" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                <Setter TargetName="edPeriodicity" Property="MinWidth" Value="100" />
                <Setter TargetName="spinYearlyDayNumber" Property="MinWidth" Value="100" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Editors\YearlyRecurrenceControl.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Views\AgendaViewControl.xaml-->
    <Style x:Key="Agenda.GridControl.BaseStyle" TargetType="dxg:GridControl">
        <Setter Property="ShowBorder" Value="False" />
        <Setter Property="AutoExpandAllGroups" Value="True" />
        <Setter Property="SelectionMode" Value="Row" />
        <Setter Property="ClipboardCopyMode" Value="None" />
    </Style>
    <Style x:Key="Agenda.TableView.BaseStyle" TargetType="dxg:TableView">
        <Setter Property="AllowEditing" Value="False" />
        <Setter Property="NavigationStyle" Value="Row" />
        <Setter Property="ShowColumnHeaders" Value="False" />
        <Setter Property="ShowGroupPanel" Value="False" />
        <Setter Property="ShowIndicator" Value="False" />
        <Setter Property="IsGroupRowMenuEnabled" Value="False" />
        <Setter Property="PasteMode" Value="None" />
    </Style>


    <ControlTemplate x:Key="{dxscht:LWKey SchedulerCommon.AgendaViewTemplate}" TargetType="dxschv:AgendaViewControl">
        <dxg:GridControl
            x:Name="PART_AgendaGridControl"
            ItemsSource="{Binding Path=VisualData.AllAppointments, RelativeSource={RelativeSource Mode=TemplatedParent}}"
            SelectedItems="{Binding Path=VisualData.SelectedAppointments, RelativeSource={RelativeSource Mode=TemplatedParent}}"
            Style="{Binding Path=View.GridControlStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}">
            <dxmvvm:Interaction.Behaviors>
                <dxschc:StyleApplierBehavior Style="{StaticResource Agenda.GridControl.BaseStyle}" />
            </dxmvvm:Interaction.Behaviors>
            <dxg:GridControl.View>
                <dxg:TableView FocusedRow="{Binding Path=VisualData.FocusedAppointment, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}" GroupRowStyle="{TemplateBinding GroupRowStyle}" Style="{Binding Path=View.TableViewStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                    <dxmvvm:Interaction.Behaviors>
                        <dxschc:StyleApplierBehavior Style="{StaticResource Agenda.TableView.BaseStyle}" />
                    </dxmvvm:Interaction.Behaviors>
                    <dxg:TableView.DataRowTemplate>
                        <DataTemplate>
                            <dxschv:AgendaAppointmentControl Content="{Binding Row}" />
                        </DataTemplate>
                    </dxg:TableView.DataRowTemplate>
                    <dxg:TableView.GroupValueTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding RowData.Row.VisibleInterval.Start, Converter={dxmvvm:FormatStringConverter FormatString='{}{0:MMMM d}'}}" />
                        </DataTemplate>
                    </dxg:TableView.GroupValueTemplate>
                    <dxg:TableView.GroupSummaryItemTemplate>
                        <DataTemplate>
                            <TextBlock Margin="0,0,3,0" Text="{Binding Value, Converter={dxmvvm:FormatStringConverter FormatString='{}{0:yyyy}'}}" />
                        </DataTemplate>
                    </dxg:TableView.GroupSummaryItemTemplate>
                    <dxg:TableView.FocusedGroupRowBorderTemplate>
                        <ControlTemplate />
                    </dxg:TableView.FocusedGroupRowBorderTemplate>
                </dxg:TableView>
            </dxg:GridControl.View>
            <dxg:GridControl.Columns>
                <dxg:GridColumn FieldName="VisibleInterval.Start" GroupIndex="0" />
                <dxg:GridColumn FieldName="Appointment.Subject" />
                <dxg:GridColumn FieldName="Appointment.Location" AllowSearchPanel="{Binding Path=View.ShowAppointmentLocation, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                <dxg:GridColumn FieldName="Appointment.Description" AllowSearchPanel="{Binding Path=View.ShowAppointmentDescription, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                <dxg:GridColumn FieldName="Appointment.Interval" AllowSearchPanel="{Binding Path=View.ShowAppointmentInterval, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                <dxg:GridColumn FieldName="ResourcesString" AllowSearchPanel="{Binding Path=View.ShowAppointmentResource, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
            </dxg:GridControl.Columns>
            <dxg:GridControl.GroupSummary>
                <dxg:GridSummaryItem FieldName="VisibleInterval.Start" SummaryType="Min" />
            </dxg:GridControl.GroupSummary>
        </dxg:GridControl>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Views\AgendaViewControl.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Views\DayViewControl.xaml-->
    <DataTemplate x:Key="EmptySeparator.DefaultTemplate">
        <dx:DXBorder />
    </DataTemplate>
    <Style x:Key="TimeRulerHeadersPanel.Style" TargetType="dxschp:TimeRulerHeadersPanel">
        <Setter Property="ItemsSource" Value="{Binding VisualData.TimeRulers, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="AutoSize" Value="False" />
        <Setter Property="ItemMinSize" Value="{Binding View.TimeRulerSize, RelativeSource={RelativeSource TemplatedParent}}" />
    </Style>
    <Style x:Key="TimeRulerGroupPanel.Style" TargetType="dxschp:TimeRulerGroupPanel">
        <Setter Property="CellsCount" Value="{Binding VisualData.CellsCount, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="TimeRulers" Value="{Binding VisualData.TimeRulers, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="TimeMarkerPosition" Value="{Binding VisualData.CurrentTimePosition, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="TimeMarkerVisibility" Value="{Binding VisualData.TimeMarkerVisibility, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="TimeRulerSize" Value="{Binding View.TimeRulerSize, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="View" Value="{Binding View, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="TimeMarkerStyle" Value="{Binding TimeMarkerStyle, RelativeSource={RelativeSource TemplatedParent}}" />
    </Style>
    <Style x:Key="DateHeadersContainersPanel.GroupByResource.DayView.Style" TargetType="dxschp:DateHeadersContainersPanel">
        <Setter Property="AutoSizeMaxViewport" Value="{Binding View.ResourcesPerPage, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemsSource" Value="{Binding VisualData.DayGroups, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="ItemMinSize" Value="0" />
        <Setter Property="AutoSize" Value="True" />
        <Setter Property="ItemContainerOrientation" Value="Horizontal" />
        <Setter Property="ItemContainerItemMinSize" Value="0" />
        <Setter Property="ItemContainerAllowHScroll" Value="False" />
        <Setter Property="ItemContainerAllowVScroll" Value="False" />
        <Setter Property="ItemContainerAutoSize" Value="True" />
        <Setter Property="ShowGroupSeparators" Value="True" />
        <Setter Property="GroupSeparatorSize" Value="{Binding View.GroupSeparatorSize, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="GroupSeparatorTemplate" Value="{Binding DateHeaderSeparatorTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter Property="ItemContainerItemStyle" Value="{Binding View.DateHeaderStyle, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContainerItemContentTemplate" Value="{Binding View.DateHeaderContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContainerItemContentTemplateSelector" Value="{Binding View.DateHeaderContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
    </Style>
    <Style x:Key="DateHeadersContainerPanel.GroupByDate.DayView.Style" TargetType="dxschp:DateHeadersContainerPanel">
        <Setter Property="ItemsSource" Value="{Binding VisualData.DateHeaders, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="ItemMinSize" Value="0" />
        <Setter Property="AutoSize" Value="True" />
        <Setter Property="ItemStyle" Value="{Binding View.DateHeaderStyle, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContentTemplate" Value="{Binding View.DateHeaderContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContentTemplateSelector" Value="{Binding View.DateHeaderContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ShowGroupSeparators" Value="True" />
        <Setter Property="GroupSeparatorSize" Value="{Binding View.GroupSeparatorSize, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="GroupSeparatorTemplate" Value="{Binding DateHeaderSeparatorTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
    </Style>
    <Style x:Key="ResourceHeadersContainerPanel.GroupByResource.DayView.Style" TargetType="dxschp:ResourceHeadersContainerPanel">
        <Setter Property="AutoSizeMaxViewport" Value="{Binding View.ResourcesPerPage, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemsSource" Value="{Binding VisualData.ResourceHeaders, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="ItemMinSize" Value="0" />
        <Setter Property="AutoSize" Value="True" />
        <Setter Property="ItemStyle" Value="{Binding View.ResourceHeaderStyle, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContentTemplate" Value="{Binding View.ResourceHeaderContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContentTemplateSelector" Value="{Binding View.ResourceHeaderContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ShowGroupSeparators" Value="True" />
        <Setter Property="GroupSeparatorSize" Value="{Binding View.GroupSeparatorSize, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="GroupSeparatorTemplate" Value="{Binding ResourceHeaderSeparatorTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
    </Style>
    <Style x:Key="ResourceHeadersContainersPanel.GroupByDate.Style" TargetType="dxschp:ResourceHeadersContainersPanel">
        <Setter Property="ItemContainerAutoSizeMaxViewport" Value="{Binding View.ResourcesPerPage, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemsSource" Value="{Binding VisualData.DayGroups, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="ItemMinSize" Value="0" />
        <Setter Property="AutoSize" Value="True" />
        <Setter Property="ItemContainerOrientation" Value="Horizontal" />
        <Setter Property="ItemContainerItemMinSize" Value="0" />
        <Setter Property="ItemContainerAutoSize" Value="True" />
        <Setter Property="ShowGroupSeparators" Value="True" />
        <Setter Property="GroupSeparatorSize" Value="{Binding View.GroupSeparatorSize, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="GroupSeparatorTemplate" Value="{Binding ResourceHeaderSeparatorTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter Property="ItemContainerItemStyle" Value="{Binding View.ResourceHeaderStyle, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContainerItemContentTemplate" Value="{Binding View.ResourceHeaderContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContainerItemContentTemplateSelector" Value="{Binding View.ResourceHeaderContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
    </Style>
    <Style x:Key="AllDayGroupsPanel.GroupByResource.Style" TargetType="dxschp:AllDayGroupsByResourcePanel">
        <Setter Property="ItemsSource" Value="{Binding VisualData.DayGroups, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="ItemMinSize" Value="0" />
        <Setter Property="AutoSize" Value="True" />
        <Setter Property="AutoSizeMaxViewport" Value="{Binding View.ResourcesPerPage, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ShowGroupSeparators" Value="True" />
        <Setter Property="GroupSeparatorSize" Value="{Binding View.GroupSeparatorSize, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="GroupSeparatorTemplate" Value="{Binding GroupSeparatorTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter Property="View" Value="{Binding View, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="DayGroupCellsCount" Value="{Binding VisualData.DaysInOneResource, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="DayGroupIsAppointmentsOpacityAnimationEnabled" Value="{Binding View.IsAppointmentsOpacityAnimationEnabled, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="DayGroupAppointmentsOpacityAnimation" Value="{Binding View.AppointmentsOpacityAnimation, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="DayGroupAppointmentsContainerStyle" Value="{Binding AllDayAppointmentsContainerStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter Property="DayGroupDragAppointmentsContainerStyle" Value="{Binding AllDayDragAppointmentsContainerStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" />

        <Setter Property="ItemContainerVerticalBorderThickness" Value="{Binding CellVerticalBorderThickness, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContainerHorizontalBorderThickness" Value="{Binding CellHorizontalBorderThickness, RelativeSource={RelativeSource TemplatedParent}}" />
    </Style>
    <Style x:Key="AllDayGroupsPanel.GroupByDate.Style" TargetType="dxschp:AllDayGroupsPanel">
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="ItemMinSize" Value="0" />
        <Setter Property="AutoSize" Value="True" />
        <Setter Property="ItemsSource" Value="{Binding VisualData.DayGroups, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ShowGroupSeparators" Value="True" />
        <Setter Property="GroupSeparatorSize" Value="{Binding View.GroupSeparatorSize, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="DayGroupShowSeparators" Value="False" />
        <Setter Property="DayGroupCellsCount" Value="1" />
        <Setter Property="DayGroupCellContainersPerPage" Value="{Binding View.ResourcesPerPage, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="DayGroupAppointmentsOpacityAnimation" Value="{Binding View.AppointmentsOpacityAnimation, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="DayGroupIsAppointmentsOpacityAnimationEnabled" Value="{Binding View.IsAppointmentsOpacityAnimationEnabled, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="View" Value="{Binding View, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="DayGroupAppointmentsContainerStyle" Value="{Binding AllDayAppointmentsContainerStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter Property="DayGroupDragAppointmentsContainerStyle" Value="{Binding AllDayDragAppointmentsContainerStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter Property="GroupSeparatorTemplate" Value="{Binding GroupSeparatorTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}" />

        <Setter Property="ItemContainerVerticalBorderThickness" Value="{Binding CellVerticalBorderThickness, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContainerHorizontalBorderThickness" Value="{Binding CellHorizontalBorderThickness, RelativeSource={RelativeSource TemplatedParent}}" />
    </Style>
    <Style x:Key="DayGroupsPanel.GroupByResource.Style" TargetType="dxschp:DayGroupsByResourcePanel">
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="ItemMinSize" Value="0" />
        <Setter Property="AutoSize" Value="True" />
        <Setter Property="AutoSizeMaxViewport" Value="{DXBinding '@p.View.ResourcesPerPage'}" />
        <Setter Property="ItemsSource" Value="{Binding VisualData.DayGroups, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ShowGroupSeparators" Value="True" />
        <Setter Property="DayGroupShowSeparators" Value="False" />
        <Setter Property="GroupSeparatorSize" Value="{Binding View.GroupSeparatorSize, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="GroupSeparatorTemplate" Value="{Binding GroupSeparatorTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter Property="View" Value="{Binding View, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="DayGroupCellContainersPerPage" Value="-1" />
        <Setter Property="DayGroupCellsCount" Value="{Binding VisualData.CellsCount, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="DayGroupAppointmentsDeferredRendering" Value="{Binding View.AppointmentsDeferredRendering, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="DayGroupAppointmentsDeferredRenderingRange" Value="{Binding View.AppointmentsDeferredRenderingRange, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="DayGroupIsAppointmentsOpacityAnimationEnabled" Value="{Binding View.IsAppointmentsOpacityAnimationEnabled, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="DayGroupAppointmentsOpacityAnimation" Value="{Binding View.AppointmentsOpacityAnimation, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="DayGroupShowTimeIndicator" Value="True" />
        <Setter Property="DayGroupShowTimeIndicatorOverAppointment" Value="{Binding View.ShowTimeIndicatorOverAppointment, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="DayGroupTimeIndicatorPosition" Value="{Binding VisualData.CurrentTimePosition, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="DayGroupAppointmentsContainerStyle" Value="{Binding AppointmentsContainerStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter Property="DayGroupDragAppointmentsContainerStyle" Value="{Binding DragAppointmentsContainerStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" />

        <Setter Property="ItemContainerVerticalBorderThickness" Value="{Binding CellVerticalBorderThickness, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContainerHorizontalBorderThickness" Value="{Binding CellHorizontalBorderThickness, RelativeSource={RelativeSource TemplatedParent}}" />

        <Style.Triggers>
            <DataTrigger Binding="{Binding View.TimeIndicatorVisibility, RelativeSource={RelativeSource TemplatedParent}}" Value="Never">
                <Setter Property="DayGroupShowTimeIndicator" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding View.TimeIndicatorVisibility, RelativeSource={RelativeSource TemplatedParent}}" Value="Always">
                <Setter Property="DayGroupShowTimeIndicator" Value="True" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DayGroupsPanel.GroupByDate.Style" TargetType="dxschp:DayGroupsPanel">
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="ItemMinSize" Value="0" />
        <Setter Property="AutoSize" Value="True" />
        <Setter Property="ItemsSource" Value="{Binding VisualData.DayGroups, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ShowGroupSeparators" Value="True" />
        <Setter Property="DayGroupShowSeparators" Value="False" />
        <Setter Property="DayGroupCellsCount" Value="{Binding VisualData.CellsCount, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="DayGroupCellContainersPerPage" Value="{DXBinding '@p.View.ResourcesPerPage'}" />
        <Setter Property="GroupSeparatorSize" Value="{Binding View.GroupSeparatorSize, RelativeSource={RelativeSource TemplatedParent}}" />

        <Setter Property="DayGroupAppointmentsDeferredRendering" Value="{Binding View.AppointmentsDeferredRendering, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="DayGroupAppointmentsDeferredRenderingRange" Value="{Binding View.AppointmentsDeferredRenderingRange, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="DayGroupIsAppointmentsOpacityAnimationEnabled" Value="{Binding View.IsAppointmentsOpacityAnimationEnabled, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="DayGroupAppointmentsOpacityAnimation" Value="{Binding View.AppointmentsOpacityAnimation, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="DayGroupShowTimeIndicatorOverAppointment" Value="{Binding View.ShowTimeIndicatorOverAppointment, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="DayGroupTimeIndicatorPosition" Value="{Binding VisualData.CurrentTimePosition, RelativeSource={RelativeSource TemplatedParent}}" />

        <Setter Property="View" Value="{Binding View, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="DayGroupAppointmentsContainerStyle" Value="{Binding AppointmentsContainerStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter Property="DayGroupDragAppointmentsContainerStyle" Value="{Binding DragAppointmentsContainerStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter Property="GroupSeparatorTemplate" Value="{Binding GroupSeparatorTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}" />

        <Setter Property="ItemContainerVerticalBorderThickness" Value="{Binding CellVerticalBorderThickness, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContainerHorizontalBorderThickness" Value="{Binding CellHorizontalBorderThickness, RelativeSource={RelativeSource TemplatedParent}}" />

        <Style.Triggers>
            <DataTrigger Binding="{Binding View.TimeIndicatorVisibility, RelativeSource={RelativeSource TemplatedParent}}" Value="Never">
                <Setter Property="DayGroupShowTimeIndicator" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding View.TimeIndicatorVisibility, RelativeSource={RelativeSource TemplatedParent}}" Value="Always">
                <Setter Property="DayGroupShowTimeIndicator" Value="True" />
            </DataTrigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="HeaderAreaSeparator.GroupByResource.Style" TargetType="dxschp:ItemsContainerPanel">
        <Setter Property="AutoSizeMaxViewport" Value="{Binding View.ResourcesPerPage, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemsSource" Value="{Binding VisualData.ResourceHeaders, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="ItemMinSize" Value="0" />
        <Setter Property="AutoSize" Value="True" />
        <Setter Property="ShowGroupSeparators" Value="True" />
        <Setter Property="GroupSeparatorSize" Value="{Binding View.GroupSeparatorSize, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="GroupSeparatorTemplate" Value="{StaticResource EmptySeparator.DefaultTemplate}" />
        <Setter Property="ItemTemplate" Value="{Binding HeaderAreaSeparatorTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
    </Style>
    <Style x:Key="HeaderAreaSeparator.GroupByDate.DayView.Style" TargetType="dxschp:ItemsContainerPanel">
        <Setter Property="ItemsSource" Value="{Binding VisualData.DateHeaders, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="ItemMinSize" Value="0" />
        <Setter Property="AutoSize" Value="True" />
        <Setter Property="ShowGroupSeparators" Value="True" />
        <Setter Property="GroupSeparatorSize" Value="{Binding View.GroupSeparatorSize, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="GroupSeparatorTemplate" Value="{StaticResource EmptySeparator.DefaultTemplate}" />
        <Setter Property="ItemTemplate" Value="{Binding HeaderAreaSeparatorTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
    </Style>

    <ControlTemplate x:Key="{dxscht:LWKey SchedulerCommon.DayViewGroupByResourceTemplate}" TargetType="dxschv:DayViewGroupByResourceControl">
        <DockPanel>
            <DockPanel x:Name="timeRulersContainer" Margin="0,0,0,1" DockPanel.Dock="Left">
                <Decorator x:Name="timeRulersBottomOffset" Height="{DXBinding '@e(scrollViewer).HorizontalScrollBarActualHeight'}" DockPanel.Dock="Bottom" />
                <dxschp:TimeRulerHeadersPanel
                    x:Name="timerRulerHeadersPanel"
                    Height="{DXBinding '@e(headersContainer).ActualHeight + @e(allDayScrollViewer).ActualHeight'}"
                    DockPanel.Dock="Top"
                    Style="{StaticResource TimeRulerHeadersPanel.Style}" />
                <Grid>
                    <ContentPresenter VerticalAlignment="Top" ContentTemplate="{Binding TimeRulerHeaderSeparatorTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                    <dxschp:TimeRulerGroupPanel x:Name="timeRulerPanel" ScrollOffset="{DXBinding '@e(scrollPresenter).VAnimatedOffset'}" Style="{StaticResource TimeRulerGroupPanel.Style}" />
                </Grid>
            </DockPanel>
            <Grid>
                <DockPanel>
                    <DockPanel x:Name="headersContainer" Margin="0,0,1,0" DockPanel.Dock="Top">
                        <DockPanel
                            x:Name="resourceHeadersContainer"
                            dxschv:HeaderControl.ShowBottomBorder="False"
                            dxschv:HeaderControl.ShowTopBorder="True"
                            DockPanel.Dock="Top">
                            <ContentPresenter
                                x:Name="resourceHeadersOffset"
                                Width="{DXBinding '@e(scrollContainer).Tag'}"
                                dxschv:HeaderControl.ShowLeftBorder="False"
                                dxschv:HeaderControl.ShowRightBorder="False"
                                ContentTemplate="{TemplateBinding ResourceHeadersCornerTemplate}"
                                DockPanel.Dock="Right"
                                IsHitTestVisible="False"
                                Visibility="Collapsed" />
                            <dxschp:ResourceHeadersContainerPanel
                                x:Name="resourceHeadersPanel"
                                dxschv:HeaderControl.ShowLeftBorder="True"
                                dxschv:HeaderControl.ShowRightBorder="True"
                                FirstItemShowLeftBorder="True"
                                ScrollOffset="{DXBinding '@e(scrollPresenter).HAnimatedOffset'}"
                                Style="{StaticResource ResourceHeadersContainerPanel.GroupByResource.DayView.Style}" />
                        </DockPanel>
                        <DockPanel
                            x:Name="dateHeadersContainer"
                            dxschv:HeaderControl.ShowBottomBorder="True"
                            dxschv:HeaderControl.ShowTopBorder="True"
                            DockPanel.Dock="Top">
                            <ContentPresenter
                                x:Name="dateHeadersOffset"
                                Width="{DXBinding '@e(scrollContainer).Tag'}"
                                dxschv:HeaderControl.ShowLeftBorder="False"
                                dxschv:HeaderControl.ShowRightBorder="False"
                                ContentTemplate="{TemplateBinding DateHeadersCornerTemplate}"
                                DockPanel.Dock="Right"
                                IsHitTestVisible="False"
                                Visibility="Collapsed" />
                            <dxschp:DateHeadersContainersPanel
                                x:Name="dateHeadersPanel"
                                dxschv:HeaderControl.ShowLeftBorder="False"
                                dxschv:HeaderControl.ShowRightBorder="True"
                                FirstItemContainerFirstItemShowLeftBorder="True"
                                ItemContainerFirstItemShowLeftBorder="True"
                                ScrollOffset="{DXBinding '@e(scrollPresenter).HAnimatedOffset'}"
                                Style="{StaticResource DateHeadersContainersPanel.GroupByResource.DayView.Style}" />
                        </DockPanel>
                        <DockPanel x:Name="headerAreaSeparatorContainer" DockPanel.Dock="Top">
                            <Decorator
                                x:Name="headerAreaSeparatorOffset"
                                Width="{DXBinding '@e(scrollContainer).Tag'}"
                                DockPanel.Dock="Right"
                                IsHitTestVisible="False"
                                Visibility="Collapsed" />
                            <dxschp:ItemsContainerPanel x:Name="headerAreaSeparator" ScrollOffset="{DXBinding '@e(scrollPresenter).HAnimatedOffset'}" Style="{StaticResource HeaderAreaSeparator.GroupByResource.Style}" />
                        </DockPanel>
                    </DockPanel>
                    <Grid>
                        <DockPanel x:Name="scrollContainer">
                            <DockPanel.Tag>
                                <MultiBinding Converter="{dxschc:MathConverter Type=Max}" FallbackValue="0.0">
                                    <Binding ElementName="scrollViewer" Path="VerticalScrollBarActualWidth" />
                                    <Binding ElementName="allDayScrollViewer" Path="VerticalScrollBarActualWidth" />
                                </MultiBinding>
                            </DockPanel.Tag>
                            <DockPanel x:Name="allDayContainer" DockPanel.Dock="Top">
                                <ContentPresenter
                                    x:Name="allDayOffset"
                                    Width="{DXBinding '@e(scrollContainer).Tag'}"
                                    ContentTemplate="{TemplateBinding AllDayAreaCornerTemplate}"
                                    DockPanel.Dock="Right"
                                    IsHitTestVisible="False"
                                    Visibility="Collapsed" />
                                <dxschv:SchedulerScrollViewer
                                    x:Name="allDayScrollViewer"
                                    MinHeight="{DXBinding '@p.View.AllDayAreaMinHeight'}"
                                    MaxHeight="{DXBinding '@e(scrollContainer).ActualHeight / 2'}"
                                    HorizontalScrollBarVisibility="Hidden"
                                    SetHorizontalOffset="{DXBinding '@e(scrollViewer).HorizontalOffset'}">
                                    <dxschp:ScrollPanelPresenter x:Name="allDayScrollPresenter" Margin="0,0,1,0">
                                        <dxschp:AllDayGroupsByResourcePanel Style="{StaticResource AllDayGroupsPanel.GroupByResource.Style}" />
                                    </dxschp:ScrollPanelPresenter>
                                </dxschv:SchedulerScrollViewer>
                            </DockPanel>
                            <DockPanel>
                                <dxschv:DayCellControl
                                    x:Name="offset"
                                    Width="{DXBinding '@e(scrollContainer).Tag'}"
                                    DockPanel.Dock="Right"
                                    IsHitTestVisible="False"
                                    Visibility="Collapsed" />
                                <dxschv:SchedulerScrollViewer
                                    x:Name="scrollViewer"
                                    HScrollSnapping="{Binding Path=View.IsHorizontalScrollSnappingEnabled, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                    HorizontalScrollBarControlBoxVisibility="{Binding Path=View.ActualResourceNavigatorVisibility, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                    HorizontalScrollBarVisibility="{Binding Path=View.ActualHorizontalScrollBarVisibility, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                    SetHorizontalOffset="{TemplateBinding HorizontalScrollOffset}"
                                    SetVerticalOffset="{TemplateBinding VerticalScrollOffset}"
                                    VerticalScrollBarVisibility="{Binding Path=View.ActualVerticalScrollBarVisibility, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                    <dxmvvm:Interaction.Behaviors>
                                        <dxmvvm:EventToCommand Command="{Binding VisualData.OnZoomGestureCommand}" EventName="ZoomGesture" PassEventArgsToCommand="True" />
                                        <dxmvvm:EventToCommand Command="{Binding VisualData.OnReportExtendBoundaryCommand}" EventName="ReportManipulationExtendBoundary" PassEventArgsToCommand="True" />
                                    </dxmvvm:Interaction.Behaviors>
                                    <dxschp:ScrollPanelPresenter
                                        x:Name="scrollPresenter"
                                        Margin="0,0,1,1"
                                        HPixelScrolling="{Binding Path=View.IsHorizontalPerPixelScrollingEnabled, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                        HSmallScrollStep="1"
                                        VPixelScrolling="{Binding Path=View.IsVerticalPerPixelScrollingEnabled, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                        VWheelScrollLines="3">
                                        <dxschp:DayGroupsByResourcePanel Style="{StaticResource DayGroupsPanel.GroupByResource.Style}" />
                                    </dxschp:ScrollPanelPresenter>
                                    <dxschv:SchedulerScrollViewer.HorizontalScrollBarControlBox>
                                        <dxschv:ResourceNavigator
                                            FirstCommand="{DXBinding '@e(scrollViewer).Commands.LeftmostCommand'}"
                                            LastCommand="{DXBinding '@e(scrollViewer).Commands.RightmostCommand'}"
                                            MinusCommand="{DXBinding '@p.Commands.LessResourcesPerPageCommand'}"
                                            NextCommand="{DXBinding '@e(scrollViewer).Commands.RightCommand'}"
                                            NextPageCommand="{DXBinding '@e(scrollViewer).Commands.PageRightCommand'}"
                                            PlusCommand="{DXBinding '@p.Commands.MoreResourcesPerPageCommand'}"
                                            PrevCommand="{DXBinding '@e(scrollViewer).Commands.LeftCommand'}"
                                            PrevPageCommand="{DXBinding '@e(scrollViewer).Commands.PageLeftCommand'}" />
                                    </dxschv:SchedulerScrollViewer.HorizontalScrollBarControlBox>
                                </dxschv:SchedulerScrollViewer>
                            </DockPanel>
                        </DockPanel>
                        <ContentPresenter ContentTemplate="{TemplateBinding BorderTemplate}" />
                    </Grid>
                </DockPanel>
            </Grid>
        </DockPanel>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition SourceName="scrollViewer" Property="ComputedVerticalScrollBarVisibility" Value="Collapsed" />
                    <Condition SourceName="allDayScrollViewer" Property="ComputedVerticalScrollBarVisibility" Value="Visible" />
                </MultiTrigger.Conditions>
                <Setter TargetName="offset" Property="Visibility" Value="Visible" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition SourceName="scrollViewer" Property="ComputedVerticalScrollBarVisibility" Value="Visible" />
                    <Condition SourceName="allDayScrollViewer" Property="ComputedVerticalScrollBarVisibility" Value="Collapsed" />
                </MultiTrigger.Conditions>
                <Setter TargetName="allDayOffset" Property="Visibility" Value="Visible" />
            </MultiTrigger>
            <Trigger SourceName="allDayScrollViewer" Property="ComputedVerticalScrollBarVisibility" Value="Visible">
                <Setter TargetName="resourceHeadersOffset" Property="Visibility" Value="Visible" />
                <Setter TargetName="dateHeadersOffset" Property="Visibility" Value="Visible" />
                <Setter TargetName="headerAreaSeparatorOffset" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger SourceName="scrollViewer" Property="ComputedVerticalScrollBarVisibility" Value="Visible">
                <Setter TargetName="resourceHeadersOffset" Property="Visibility" Value="Visible" />
                <Setter TargetName="dateHeadersOffset" Property="Visibility" Value="Visible" />
                <Setter TargetName="headerAreaSeparatorOffset" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger SourceName="scrollViewer" Property="ComputedHorizontalScrollBarVisibility" Value="Collapsed">
                <Setter TargetName="timeRulersBottomOffset" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <DataTrigger Binding="{Binding View.ShowAllDayArea, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter TargetName="allDayContainer" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="timerRulerHeadersPanel" Property="Height" Value="{DXBinding '@e(headersContainer).ActualHeight'}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding View.ShowResourceHeaders, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter TargetName="resourceHeadersContainer" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding View.ShowDayHeaders, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter TargetName="dateHeadersContainer" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="resourceHeadersContainer" Property="dxschv:HeaderControl.ShowBottomBorder" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding View.Scheduler.ActualGroupType, RelativeSource={RelativeSource Self}}" Value="None">
                <Setter TargetName="resourceHeadersContainer" Property="Visibility" Value="Collapsed" />
            </DataTrigger>

            <DataTrigger Binding="{Binding View.Scheduler.ShowDateNavigationPanel, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter TargetName="resourceHeadersContainer" Property="dxschv:HeaderControl.ShowTopBorder" Value="False" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding View.Scheduler.ShowDateNavigationPanel, RelativeSource={RelativeSource Self}}" Value="False" />
                    <Condition Binding="{Binding ElementName=resourceHeadersContainer, Path=Visibility}" Value="Collapsed" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="dateHeadersContainer" Property="dxschv:HeaderControl.ShowTopBorder" Value="False" />
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding Source={x:Static dxsch:SchedulerControl.UseClassicStyle}, Mode=OneTime}" Value="False">
                <Setter TargetName="resourceHeadersContainer" Property="dxschv:HeaderControl.ShowTopBorder" Value="True" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static dxsch:SchedulerControl.UseClassicStyle}, Mode=OneTime}" Value="False" />
                    <Condition Binding="{Binding ElementName=resourceHeadersContainer, Path=Visibility}" Value="Collapsed" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="dateHeadersContainer" Property="dxschv:HeaderControl.ShowTopBorder" Value="True" />
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding Source={x:Static dxsch:SchedulerControl.UseClassicStyle}, Mode=OneTime}" Value="True">
                <Setter TargetName="timeRulersContainer" Property="Margin" Value="0" />
                <Setter TargetName="headersContainer" Property="Margin" Value="0" />
                <Setter TargetName="allDayScrollPresenter" Property="Margin" Value="0" />
                <Setter TargetName="scrollPresenter" Property="Margin" Value="0" />
            </DataTrigger>

            <DataTrigger Binding="{Binding View.GroupSeparatorSize, RelativeSource={RelativeSource Self}}" Value="0">
                <Setter TargetName="resourceHeadersPanel" Property="FirstItemShowLeftBorder" Value="True" />
                <Setter TargetName="resourceHeadersPanel" Property="dxschv:HeaderControl.ShowLeftBorder" Value="False" />
                <Setter TargetName="dateHeadersPanel" Property="FirstItemContainerFirstItemShowLeftBorder" Value="True" />
                <Setter TargetName="dateHeadersPanel" Property="ItemContainerFirstItemShowLeftBorder" Value="{x:Null}" />
                <Setter TargetName="dateHeadersPanel" Property="dxschv:HeaderControl.ShowLeftBorder" Value="False" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxscht:LWKey SchedulerCommon.DayViewGroupByDateTemplate}" TargetType="dxschv:DayViewGroupByDateControl">
        <DockPanel>
            <DockPanel x:Name="timeRulersContainer" Margin="0,0,0,1" DockPanel.Dock="Left">
                <Decorator x:Name="timeRulersBottomOffset" Height="{DXBinding '@e(scrollViewer).HorizontalScrollBarActualHeight'}" DockPanel.Dock="Bottom" />
                <dxschp:TimeRulerHeadersPanel
                    x:Name="timerRulerHeadersPanel"
                    Height="{DXBinding '@e(headersContainer).ActualHeight + @e(allDayContainer).ActualHeight'}"
                    DockPanel.Dock="Top"
                    Style="{StaticResource TimeRulerHeadersPanel.Style}" />
                <Grid DockPanel.Dock="Top">
                    <ContentPresenter VerticalAlignment="Top" ContentTemplate="{Binding TimeRulerHeaderSeparatorTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                    <dxschp:TimeRulerGroupPanel x:Name="timeRulerPanel" ScrollOffset="{DXBinding '@e(scrollPresenter).VAnimatedOffset'}" Style="{StaticResource TimeRulerGroupPanel.Style}" />
                </Grid>
            </DockPanel>
            <Grid>
                <DockPanel>
                    <DockPanel x:Name="headersContainer" Margin="0,0,1,0" DockPanel.Dock="Top">
                        <DockPanel
                            x:Name="dateHeadersContainer"
                            dxschv:HeaderControl.ShowBottomBorder="False"
                            dxschv:HeaderControl.ShowTopBorder="True"
                            DockPanel.Dock="Top">
                            <ContentPresenter
                                x:Name="dateHeadersOffset"
                                Width="{DXBinding '@e(scrollContainer).Tag'}"
                                dxschv:HeaderControl.ShowLeftBorder="False"
                                dxschv:HeaderControl.ShowRightBorder="False"
                                ContentTemplate="{TemplateBinding DateHeadersCornerTemplate}"
                                DockPanel.Dock="Right"
                                IsHitTestVisible="False"
                                Visibility="Collapsed" />
                            <dxschp:DateHeadersContainerPanel
                                x:Name="dateHeadersPanel"
                                dxschv:HeaderControl.ShowLeftBorder="True"
                                dxschv:HeaderControl.ShowRightBorder="True"
                                FirstItemShowLeftBorder="True"
                                Style="{StaticResource DateHeadersContainerPanel.GroupByDate.DayView.Style}" />
                        </DockPanel>
                        <DockPanel
                            x:Name="resourceHeadersContainer"
                            dxschv:HeaderControl.ShowBottomBorder="True"
                            dxschv:HeaderControl.ShowTopBorder="True"
                            DockPanel.Dock="Top">
                            <ContentPresenter
                                x:Name="resourceHeadersOffset"
                                Width="{DXBinding '@e(scrollContainer).Tag'}"
                                dxschv:HeaderControl.ShowLeftBorder="False"
                                dxschv:HeaderControl.ShowRightBorder="False"
                                ContentTemplate="{TemplateBinding ResourceHeadersCornerTemplate}"
                                DockPanel.Dock="Right"
                                IsHitTestVisible="False"
                                Visibility="Collapsed" />
                            <dxschp:ResourceHeadersContainersPanel
                                x:Name="resourceHeadersPanel"
                                dxschv:HeaderControl.ShowLeftBorder="False"
                                dxschv:HeaderControl.ShowRightBorder="True"
                                FirstItemContainerFirstItemShowLeftBorder="True"
                                ItemContainerFirstItemShowLeftBorder="True"
                                ItemContainerScrollOffset="{DXBinding '@e(scrollPresenter).HAnimatedOffset'}"
                                Style="{StaticResource ResourceHeadersContainersPanel.GroupByDate.Style}" />
                        </DockPanel>
                        <DockPanel x:Name="headerAreaSeparatorContainer" DockPanel.Dock="Top">
                            <Decorator
                                x:Name="headerAreaSeparatorOffset"
                                Width="{DXBinding '@e(scrollContainer).Tag'}"
                                DockPanel.Dock="Right"
                                IsHitTestVisible="False"
                                Visibility="Collapsed" />
                            <dxschp:ItemsContainerPanel x:Name="headerAreaSeparator" Style="{StaticResource HeaderAreaSeparator.GroupByDate.DayView.Style}" />
                        </DockPanel>
                    </DockPanel>
                    <Grid>
                        <DockPanel x:Name="scrollContainer">
                            <DockPanel.Tag>
                                <MultiBinding Converter="{dxschc:MathConverter Type=Max}" FallbackValue="0.0">
                                    <Binding ElementName="scrollViewer" Path="VerticalScrollBarActualWidth" />
                                    <Binding ElementName="allDayScrollViewer" Path="VerticalScrollBarActualWidth" />
                                </MultiBinding>
                            </DockPanel.Tag>
                            <DockPanel x:Name="allDayContainer" DockPanel.Dock="Top">
                                <ContentPresenter
                                    x:Name="allDayOffset"
                                    Width="{DXBinding '@e(scrollContainer).Tag'}"
                                    ContentTemplate="{TemplateBinding AllDayAreaCornerTemplate}"
                                    DockPanel.Dock="Right"
                                    IsHitTestVisible="False"
                                    Visibility="Collapsed" />
                                <dxschv:SchedulerScrollViewer
                                    x:Name="allDayScrollViewer"
                                    MinHeight="{DXBinding '@p.View.AllDayAreaMinHeight'}"
                                    MaxHeight="{DXBinding '@e(scrollContainer).ActualHeight / 2'}"
                                    HorizontalScrollBarVisibility="Hidden"
                                    SetHorizontalOffset="{DXBinding '@e(scrollViewer).HorizontalOffset'}">
                                    <dxschp:ScrollPanelPresenter x:Name="allDayScrollPresenter" Margin="0,0,1,0">
                                        <dxschp:AllDayGroupsPanel Style="{StaticResource AllDayGroupsPanel.GroupByDate.Style}" />
                                    </dxschp:ScrollPanelPresenter>
                                </dxschv:SchedulerScrollViewer>
                            </DockPanel>
                            <DockPanel>
                                <dxschv:DayCellControl
                                    x:Name="offset"
                                    Width="{DXBinding '@e(scrollContainer).Tag'}"
                                    DockPanel.Dock="Right"
                                    IsHitTestVisible="False"
                                    Visibility="Collapsed" />
                                <dxschv:SchedulerScrollViewer
                                    x:Name="scrollViewer"
                                    HScrollSnapping="{Binding Path=View.IsHorizontalScrollSnappingEnabled, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                    HorizontalScrollBarControlBoxVisibility="{Binding Path=View.ActualResourceNavigatorVisibility, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                    HorizontalScrollBarVisibility="{Binding Path=View.ActualHorizontalScrollBarVisibility, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                    SetHorizontalOffset="{TemplateBinding HorizontalScrollOffset}"
                                    SetVerticalOffset="{TemplateBinding VerticalScrollOffset}"
                                    VerticalScrollBarVisibility="{Binding Path=View.ActualVerticalScrollBarVisibility, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                    <dxmvvm:Interaction.Behaviors>
                                        <dxmvvm:EventToCommand Command="{Binding VisualData.OnZoomGestureCommand}" EventName="ZoomGesture" PassEventArgsToCommand="True" />
                                        <dxmvvm:EventToCommand Command="{Binding VisualData.OnReportExtendBoundaryCommand}" EventName="ReportManipulationExtendBoundary" PassEventArgsToCommand="True" />
                                    </dxmvvm:Interaction.Behaviors>
                                    <dxschp:ScrollPanelPresenter
                                        x:Name="scrollPresenter"
                                        Margin="0,0,1,1"
                                        AllowHScrollAnimation="True"
                                        HPixelScrolling="{Binding Path=View.IsHorizontalPerPixelScrollingEnabled, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                        VPixelScrolling="{Binding Path=View.IsVerticalPerPixelScrollingEnabled, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                        VWheelScrollLines="3">
                                        <dxschp:ScrollPanelPresenter.HScrollAnimation>
                                            <DoubleAnimation Duration="{StaticResource Scheduler.HScrollAnimation.Duration}">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseIn" Exponent="10" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </dxschp:ScrollPanelPresenter.HScrollAnimation>
                                        <dxschp:DayGroupsPanel Style="{StaticResource DayGroupsPanel.GroupByDate.Style}" />
                                    </dxschp:ScrollPanelPresenter>
                                    <dxschv:SchedulerScrollViewer.HorizontalScrollBarControlBox>
                                        <dxschv:ResourceNavigator
                                            FirstCommand="{DXBinding '@e(scrollViewer).Commands.LeftmostCommand'}"
                                            LastCommand="{DXBinding '@e(scrollViewer).Commands.RightmostCommand'}"
                                            MinusCommand="{DXBinding '@p.Commands.LessResourcesPerPageCommand'}"
                                            NextCommand="{DXBinding '@e(scrollViewer).Commands.RightCommand'}"
                                            NextPageCommand="{DXBinding '@e(scrollViewer).Commands.PageRightCommand'}"
                                            PlusCommand="{DXBinding '@p.Commands.MoreResourcesPerPageCommand'}"
                                            PrevCommand="{DXBinding '@e(scrollViewer).Commands.LeftCommand'}"
                                            PrevPageCommand="{DXBinding '@e(scrollViewer).Commands.PageLeftCommand'}" />
                                    </dxschv:SchedulerScrollViewer.HorizontalScrollBarControlBox>
                                </dxschv:SchedulerScrollViewer>
                            </DockPanel>
                        </DockPanel>
                        <ContentPresenter ContentTemplate="{TemplateBinding BorderTemplate}" />
                    </Grid>
                </DockPanel>
            </Grid>
        </DockPanel>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition SourceName="scrollViewer" Property="ComputedVerticalScrollBarVisibility" Value="Collapsed" />
                    <Condition SourceName="allDayScrollViewer" Property="ComputedVerticalScrollBarVisibility" Value="Visible" />
                </MultiTrigger.Conditions>
                <Setter TargetName="offset" Property="Visibility" Value="Visible" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition SourceName="scrollViewer" Property="ComputedVerticalScrollBarVisibility" Value="Visible" />
                    <Condition SourceName="allDayScrollViewer" Property="ComputedVerticalScrollBarVisibility" Value="Collapsed" />
                </MultiTrigger.Conditions>
                <Setter TargetName="allDayOffset" Property="Visibility" Value="Visible" />
            </MultiTrigger>
            <Trigger SourceName="allDayScrollViewer" Property="ComputedVerticalScrollBarVisibility" Value="Visible">
                <Setter TargetName="resourceHeadersOffset" Property="Visibility" Value="Visible" />
                <Setter TargetName="dateHeadersOffset" Property="Visibility" Value="Visible" />
                <Setter TargetName="headerAreaSeparatorOffset" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger SourceName="scrollViewer" Property="ComputedVerticalScrollBarVisibility" Value="Visible">
                <Setter TargetName="resourceHeadersOffset" Property="Visibility" Value="Visible" />
                <Setter TargetName="dateHeadersOffset" Property="Visibility" Value="Visible" />
                <Setter TargetName="headerAreaSeparatorOffset" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger SourceName="scrollViewer" Property="ComputedHorizontalScrollBarVisibility" Value="Collapsed">
                <Setter TargetName="timeRulersBottomOffset" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <DataTrigger Binding="{Binding View.ShowAllDayArea, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter TargetName="allDayContainer" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="timerRulerHeadersPanel" Property="Height" Value="{DXBinding '@e(headersContainer).ActualHeight'}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding View.ShowResourceHeaders, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter TargetName="resourceHeadersContainer" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding View.ShowDayHeaders, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter TargetName="dateHeadersContainer" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="resourceHeadersContainer" Property="dxschv:HeaderControl.ShowBottomBorder" Value="True" />
            </DataTrigger>

            <DataTrigger Binding="{Binding View.Scheduler.ShowDateNavigationPanel, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter TargetName="dateHeadersContainer" Property="dxschv:HeaderControl.ShowTopBorder" Value="False" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding View.Scheduler.ShowDateNavigationPanel, RelativeSource={RelativeSource Self}}" Value="False" />
                    <Condition Binding="{Binding ElementName=dateHeadersContainer, Path=Visibility}" Value="Collapsed" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="resourceHeadersContainer" Property="dxschv:HeaderControl.ShowTopBorder" Value="False" />
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding Source={x:Static dxsch:SchedulerControl.UseClassicStyle}, Mode=OneTime}" Value="False">
                <Setter TargetName="dateHeadersContainer" Property="dxschv:HeaderControl.ShowTopBorder" Value="True" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static dxsch:SchedulerControl.UseClassicStyle}, Mode=OneTime}" Value="False" />
                    <Condition Binding="{Binding ElementName=dateHeadersContainer, Path=Visibility}" Value="Collapsed" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="resourceHeadersContainer" Property="dxschv:HeaderControl.ShowTopBorder" Value="True" />
            </MultiDataTrigger>


            <DataTrigger Binding="{Binding Source={x:Static dxsch:SchedulerControl.UseClassicStyle}, Mode=OneTime}" Value="True">
                <Setter TargetName="timeRulersContainer" Property="Margin" Value="0" />
                <Setter TargetName="headersContainer" Property="Margin" Value="0" />
                <Setter TargetName="allDayScrollPresenter" Property="Margin" Value="0" />
                <Setter TargetName="scrollPresenter" Property="Margin" Value="0" />
            </DataTrigger>
            <DataTrigger Binding="{Binding View.GroupSeparatorSize, RelativeSource={RelativeSource Self}}" Value="0">
                <Setter TargetName="dateHeadersPanel" Property="FirstItemShowLeftBorder" Value="True" />
                <Setter TargetName="dateHeadersPanel" Property="dxschv:HeaderControl.ShowLeftBorder" Value="False" />

                <Setter TargetName="resourceHeadersPanel" Property="FirstItemContainerFirstItemShowLeftBorder" Value="True" />
                <Setter TargetName="resourceHeadersPanel" Property="ItemContainerFirstItemShowLeftBorder" Value="{x:Null}" />
                <Setter TargetName="resourceHeadersPanel" Property="dxschv:HeaderControl.ShowLeftBorder" Value="False" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Views\DayViewControl.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Views\GroupPanel.xaml-->
    <ControlTemplate x:Key="DayGroupPanel.DefaultTemplate" TargetType="dxschp:DayGroupPanel">
        <dxschp:ScrollPanelAggregator x:Name="PART_ScrollPanel">
            <dxschp:DayCellsDecorationPanel
                Panel.ZIndex="0"
                AllowAlternateDecoration="{Binding View.HighlightNonworkingHours, RelativeSource={RelativeSource TemplatedParent}}"
                AutoSize="True"
                Borders="{Binding DecorationInfo.Borders}"
                Columns="{Binding DecorationInfo.Columns}"
                HorizontalBorderThickness="{TemplateBinding ItemHorizontalBorderThickness}"
                ItemMinSize="{Binding View.CellMinHeight, RelativeSource={RelativeSource TemplatedParent}}"
                ItemsSource="{Binding DecorationInfo.Backgrounds}"
                Rows="{Binding DecorationInfo.Rows}"
                VerticalBorderThickness="{TemplateBinding ItemVerticalBorderThickness}" />
            <dxschp:DayCellsContainersPanel
                x:Name="PART_CellsPanel"
                Panel.ZIndex="0"
                dxschp:ScrollPanelAggregator.IsScrollPanel="True"
                AutoSize="True"
                AutoSizeMaxViewport="{TemplateBinding CellContainersPerPage}"
                ItemContainerAutoSize="True"
                ItemContainerHorizontalBorderThickness="{TemplateBinding ItemHorizontalBorderThickness}"
                ItemContainerItemContentTemplate="{Binding View.CellContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                ItemContainerItemContentTemplateSelector="{Binding View.CellContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                ItemContainerItemMinSize="{Binding View.CellMinHeight, RelativeSource={RelativeSource TemplatedParent}}"
                ItemContainerItemStyle="{Binding View.CellStyle, RelativeSource={RelativeSource TemplatedParent}}"
                ItemContainerOrientation="Vertical"
                ItemContainerVerticalBorderThickness="{TemplateBinding ItemVerticalBorderThickness}"
                ItemMinSize="0"
                ItemsCountInGroup="{TemplateBinding CellContainersPerGroup}"
                ItemsSource="{TemplateBinding CellContainers}"
                Orientation="Horizontal" />
            <dxschp:TimeRegionDecorationPanel
                AllowSplitRegion="True"
                AutoSize="True"
                Columns="{Binding DecorationInfo.Columns}"
                ItemMinSize="{Binding View.CellMinHeight, RelativeSource={RelativeSource TemplatedParent}}"
                ItemTemplate="{Binding View.TimeRegionContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                ItemTemplateSelector="{Binding View.TimeRegionContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                ItemsSource="{Binding DecorationInfo.TimeRegions}"
                Rows="{Binding DecorationInfo.Rows}" />
            <dxschp:DayCellsDecorationPanel
                AutoSize="True"
                Columns="{Binding DecorationInfo.Columns}"
                HorizontalBorderThickness="{TemplateBinding ItemHorizontalBorderThickness}"
                IsHitTestVisible="False"
                ItemMinSize="{Binding View.CellMinHeight, RelativeSource={RelativeSource TemplatedParent}}"
                Rows="{Binding DecorationInfo.Rows}"
                Selection="{Binding DecorationInfo.Selection}"
                VerticalBorderThickness="{TemplateBinding ItemVerticalBorderThickness}" />
            <dxschp:TimeIndicatorContainersPanel
                x:Name="PART_TimeIndicatorsPanel"
                Panel.ZIndex="2"
                AutoSize="True"
                AutoSizeMaxViewport="{TemplateBinding CellContainersPerPage}"
                ItemContainerCellMinSize="{Binding View.CellMinHeight, RelativeSource={RelativeSource TemplatedParent}}"
                ItemContainerCellsAutoSize="True"
                ItemContainerCellsCount="{TemplateBinding CellsCount}"
                ItemContainerOrientation="Vertical"
                ItemContainerPositionInCells="{TemplateBinding TimeIndicatorPosition}"
                ItemMinSize="0"
                ItemsCountInGroup="{TemplateBinding CellContainersPerGroup}"
                ItemsSource="{TemplateBinding CellContainers}"
                Orientation="Horizontal" />
            <dxschp:DayAppointmentsContainersPanel
                x:Name="PART_AppointmentsPanel"
                Panel.ZIndex="4"
                AutoSize="True"
                AutoSizeMaxViewport="{TemplateBinding CellContainersPerPage}"
                ItemContainerAutoSize="True"
                ItemContainerDeferredRendering="{TemplateBinding AppointmentsDeferredRendering}"
                ItemContainerDeferredRenderingRange="{TemplateBinding AppointmentsDeferredRenderingRange}"
                ItemContainerIsOpacityAnimationEnabled="{TemplateBinding IsAppointmentsOpacityAnimationEnabled}"
                ItemContainerItemContentTemplate="{Binding View.AppointmentContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                ItemContainerItemContentTemplateSelector="{Binding View.AppointmentContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                ItemContainerItemMinSize="{Binding View.CellMinHeight, RelativeSource={RelativeSource TemplatedParent}}"
                ItemContainerItemStyle="{Binding View.AppointmentStyle, RelativeSource={RelativeSource TemplatedParent}}"
                ItemContainerOpacityAnimation="{TemplateBinding AppointmentsOpacityAnimation}"
                ItemContainerOrientation="Vertical"
                ItemContainerRowsCount="{TemplateBinding CellsCount}"
                ItemMinSize="0"
                ItemStyle="{TemplateBinding AppointmentsContainerStyle}"
                ItemsCountInGroup="{TemplateBinding CellContainersPerGroup}"
                ItemsSource="{TemplateBinding CellContainers}"
                Orientation="Horizontal" />
            <dxschp:DayDragAppointmentsContainersPanel
                x:Name="PART_DragAppointmentsPanel"
                Panel.ZIndex="8"
                AutoSize="True"
                AutoSizeMaxViewport="{TemplateBinding CellContainersPerPage}"
                ItemContainerAutoSize="True"
                ItemContainerDeferredRendering="False"
                ItemContainerItemContentTemplate="{Binding View.AppointmentContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                ItemContainerItemContentTemplateSelector="{Binding View.AppointmentContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                ItemContainerItemMinSize="{Binding View.CellMinHeight, RelativeSource={RelativeSource TemplatedParent}}"
                ItemContainerItemStyle="{Binding View.AppointmentStyle, RelativeSource={RelativeSource TemplatedParent}}"
                ItemContainerOrientation="Vertical"
                ItemContainerRowsCount="{TemplateBinding CellsCount}"
                ItemMinSize="0"
                ItemStyle="{TemplateBinding DragAppointmentsContainerStyle}"
                ItemsCountInGroup="{TemplateBinding CellContainersPerGroup}"
                ItemsSource="{TemplateBinding CellContainers}"
                Orientation="Horizontal" />
            <dxschp:DayNavigationPanel
                x:Name="PART_NavigationPanel"
                Panel.ZIndex="9"
                AutoSize="True"
                AutoSizeMaxViewport="{TemplateBinding CellContainersPerPage}"
                ItemMinSize="0"
                ItemsCountInGroup="{TemplateBinding CellContainersPerGroup}"
                ItemsSource="{TemplateBinding CellContainers}"
                Orientation="Horizontal" />
            <dxschp:DayMoreButtonsPanel
                x:Name="PART_MoreButtonsPanel"
                Panel.ZIndex="10"
                AutoSize="True"
                AutoSizeMaxViewport="{TemplateBinding CellContainersPerPage}"
                ItemMinSize="0"
                ItemsCountInGroup="{TemplateBinding CellContainersPerGroup}"
                ItemsSource="{TemplateBinding CellContainers}"
                Orientation="Horizontal" />
        </dxschp:ScrollPanelAggregator>
        <ControlTemplate.Triggers>
            <Trigger Property="TimeIndicatorPosition" Value="0">
                <Setter TargetName="PART_TimeIndicatorsPanel" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="ShowTimeIndicator" Value="False">
                <Setter TargetName="PART_TimeIndicatorsPanel" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="ShowTimeIndicatorOverAppointment" Value="True">
                <Setter TargetName="PART_TimeIndicatorsPanel" Property="Panel.ZIndex" Value="5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="AllDayGroupPanel.DefaultTemplate" TargetType="dxschp:AllDayGroupPanel">
        <dxschp:ScrollPanelAggregator x:Name="PART_ScrollPanel">
            <dxschp:AllDayCellsContainersPanel
                x:Name="PART_CellsPanel"
                dxschp:ScrollPanelAggregator.AllowVScroll="False"
                AutoSize="True"
                AutoSizeMaxViewport="{TemplateBinding CellContainersPerPage}"
                ItemContainerAllowHScroll="False"
                ItemContainerAutoSize="True"
                ItemContainerHorizontalBorderThickness="{TemplateBinding ItemHorizontalBorderThickness}"
                ItemContainerItemContentTemplate="{Binding View.AllDayCellContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                ItemContainerItemContentTemplateSelector="{Binding View.AllDayCellContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                ItemContainerItemMinSize="0"
                ItemContainerItemStyle="{Binding View.AllDayCellStyle, RelativeSource={RelativeSource TemplatedParent}}"
                ItemContainerOrientation="Horizontal"
                ItemContainerVerticalBorderThickness="{TemplateBinding ItemVerticalBorderThickness}"
                ItemMinSize="0"
                ItemsSource="{TemplateBinding CellContainers}"
                Orientation="Horizontal" />
            <dxschp:AllDayAppointmentsContainersPanel
                x:Name="PART_AppointmentsPanel"
                dxschp:ScrollPanelAggregator.IsScrollPanel="True"
                AutoSize="True"
                AutoSizeMaxViewport="{TemplateBinding CellContainersPerPage}"
                ItemContainerAutoSize="False"
                ItemContainerColumnsCount="{TemplateBinding CellsCount}"
                ItemContainerDeferredRendering="{TemplateBinding AppointmentsDeferredRendering}"
                ItemContainerDeferredRenderingRange="{TemplateBinding AppointmentsDeferredRenderingRange}"
                ItemContainerIsOpacityAnimationEnabled="{TemplateBinding IsAppointmentsOpacityAnimationEnabled}"
                ItemContainerItemContentTemplate="{Binding View.AllDayAppointmentContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                ItemContainerItemContentTemplateSelector="{Binding View.AllDayAppointmentContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                ItemContainerItemMinSize="{Binding View.AllDayAppointmentMinHeight, RelativeSource={RelativeSource TemplatedParent}}"
                ItemContainerItemStyle="{Binding View.AllDayAppointmentStyle, RelativeSource={RelativeSource TemplatedParent}}"
                ItemContainerOpacityAnimation="{TemplateBinding AppointmentsOpacityAnimation}"
                ItemContainerOrientation="Vertical"
                ItemMinSize="0"
                ItemStyle="{TemplateBinding AppointmentsContainerStyle}"
                ItemsSource="{TemplateBinding CellContainers}"
                Orientation="Horizontal" />
            <dxschp:AllDayDragAppointmentsContainersPanel
                x:Name="PART_DragAppointmentsPanel"
                dxschp:ScrollPanelAggregator.AllowVScroll="False"
                AutoSize="True"
                AutoSizeMaxViewport="{TemplateBinding CellContainersPerPage}"
                ItemContainerAllowScroll="False"
                ItemContainerAutoSize="True"
                ItemContainerColumnsCount="{TemplateBinding CellsCount}"
                ItemContainerDeferredRendering="False"
                ItemContainerItemContentTemplate="{Binding View.AllDayAppointmentContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                ItemContainerItemContentTemplateSelector="{Binding View.AllDayAppointmentContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                ItemContainerItemMinSize="0"
                ItemContainerItemStyle="{Binding View.AllDayAppointmentStyle, RelativeSource={RelativeSource TemplatedParent}}"
                ItemContainerOrientation="Vertical"
                ItemMinSize="0"
                ItemStyle="{TemplateBinding DragAppointmentsContainerStyle}"
                ItemsSource="{TemplateBinding CellContainers}"
                Orientation="Horizontal" />
        </dxschp:ScrollPanelAggregator>
    </ControlTemplate>
    <ControlTemplate x:Key="MonthGroupPanel.DefaultTemplate" TargetType="dxschp:MonthGroupPanel">
        <dxschp:ScrollPanelAggregator x:Name="PART_ScrollPanel">
            <dxschp:MonthCellsDecorationPanel
                Panel.ZIndex="0"
                AllowAlternateDecoration="{Binding View.HighlightEvenMonths, RelativeSource={RelativeSource TemplatedParent}}"
                AllowScroll="False"
                AutoSize="True"
                Borders="{Binding DecorationInfo.Borders}"
                Columns="{Binding DecorationInfo.Columns}"
                HorizontalBorderThickness="{TemplateBinding ItemHorizontalBorderThickness}"
                ItemMinSize="0"
                ItemsSource="{Binding DecorationInfo.Backgrounds}"
                Rows="{Binding DecorationInfo.Rows}"
                VerticalBorderThickness="{TemplateBinding ItemVerticalBorderThickness}" />
            <dxschp:MonthCellsContainersPanel
                x:Name="PART_CellsPanel"
                dxschp:ScrollPanelAggregator.AllowHScroll="False"
                dxschp:ScrollPanelAggregator.IsScrollPanel="True"
                AutoSize="True"
                AutoSizeMaxViewport="{TemplateBinding CellContainersPerPage}"
                ItemContainerAutoSize="True"
                ItemContainerHorizontalBorderThickness="{TemplateBinding ItemHorizontalBorderThickness}"
                ItemContainerItemContentTemplate="{Binding View.CellContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                ItemContainerItemContentTemplateSelector="{Binding View.CellContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                ItemContainerItemMinSize="0"
                ItemContainerItemStyle="{Binding View.CellStyle, RelativeSource={RelativeSource TemplatedParent}}"
                ItemContainerOrientation="Horizontal"
                ItemContainerVerticalBorderThickness="{TemplateBinding ItemVerticalBorderThickness}"
                ItemMinSize="0"
                ItemsSource="{TemplateBinding CellContainers}"
                Orientation="Vertical">
                <dxmvvm:Interaction.Behaviors>
                    <dxschc:LegacyCellDecorationBehavior LegacyZIndex="1" NormalZIndex="4" />
                </dxmvvm:Interaction.Behaviors>
            </dxschp:MonthCellsContainersPanel>
            <dxschp:TimeRegionDecorationPanel
                Panel.ZIndex="2"
                AllowScroll="False"
                AutoSize="True"
                Columns="{Binding DecorationInfo.Columns}"
                ItemMinSize="0"
                ItemTemplate="{Binding View.TimeRegionContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                ItemTemplateSelector="{Binding View.TimeRegionContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                ItemsSource="{Binding DecorationInfo.TimeRegions}"
                Rows="{Binding DecorationInfo.Rows}" />
            <dxschp:MonthCellsDecorationPanel
                Panel.ZIndex="3"
                AllowScroll="False"
                AutoSize="True"
                Columns="{Binding DecorationInfo.Columns}"
                HorizontalBorderThickness="{TemplateBinding ItemHorizontalBorderThickness}"
                IsHitTestVisible="False"
                ItemMinSize="0"
                Rows="{Binding DecorationInfo.Rows}"
                Selection="{Binding DecorationInfo.Selection}"
                TodayCellIndex="{Binding DecorationInfo.TodayCellIndex}"
                VerticalBorderThickness="{TemplateBinding ItemVerticalBorderThickness}" />
            <dxschp:MonthAppointmentsContainersPanel
                x:Name="PART_AppointmentsPanel"
                Panel.ZIndex="5"
                dxschp:ScrollPanelAggregator.AllowHScroll="False"
                AutoSize="True"
                AutoSizeMaxViewport="{TemplateBinding CellContainersPerPage}"
                ItemContainerAllowHScroll="False"
                ItemContainerAllowScroll="False"
                ItemContainerAllowVScroll="False"
                ItemContainerAutoSize="{Binding View.StretchAppointments, RelativeSource={RelativeSource TemplatedParent}}"
                ItemContainerColumnsCount="{TemplateBinding CellsCount}"
                ItemContainerDeferredRendering="{TemplateBinding AppointmentsDeferredRendering}"
                ItemContainerDeferredRenderingRange="{TemplateBinding AppointmentsDeferredRenderingRange}"
                ItemContainerIsOpacityAnimationEnabled="{TemplateBinding IsAppointmentsOpacityAnimationEnabled}"
                ItemContainerItemContentTemplate="{Binding View.AppointmentContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                ItemContainerItemContentTemplateSelector="{Binding View.AppointmentContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                ItemContainerItemMinSize="{Binding View.AppointmentMinHeight, RelativeSource={RelativeSource TemplatedParent}}"
                ItemContainerItemStyle="{Binding View.AppointmentStyle, RelativeSource={RelativeSource TemplatedParent}}"
                ItemContainerOpacityAnimation="{TemplateBinding AppointmentsOpacityAnimation}"
                ItemContainerOrientation="Vertical"
                ItemMinSize="0"
                ItemStyle="{TemplateBinding AppointmentsContainerStyle}"
                ItemsSource="{TemplateBinding CellContainers}"
                Orientation="Vertical" />
            <dxschp:MonthDragAppointmentsContainersPanel
                x:Name="PART_DragAppointmentsPanel"
                Panel.ZIndex="6"
                dxschp:ScrollPanelAggregator.AllowHScroll="False"
                AutoSize="True"
                AutoSizeMaxViewport="{TemplateBinding CellContainersPerPage}"
                ItemContainerAllowHScroll="False"
                ItemContainerAllowScroll="False"
                ItemContainerAllowVScroll="False"
                ItemContainerAutoSize="True"
                ItemContainerColumnsCount="{TemplateBinding CellsCount}"
                ItemContainerItemContentTemplate="{Binding View.AppointmentContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                ItemContainerItemContentTemplateSelector="{Binding View.AppointmentContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                ItemContainerItemMinSize="{Binding View.AppointmentMinHeight, RelativeSource={RelativeSource TemplatedParent}}"
                ItemContainerItemStyle="{Binding View.AppointmentStyle, RelativeSource={RelativeSource TemplatedParent}}"
                ItemContainerOrientation="Vertical"
                ItemMinSize="0"
                ItemStyle="{TemplateBinding DragAppointmentsContainerStyle}"
                ItemsSource="{TemplateBinding CellContainers}"
                Orientation="Vertical" />
            <dxschp:MonthMoreButtonsPanel
                x:Name="PART_MoreButtonsPanel"
                Panel.ZIndex="7"
                dxschp:ScrollPanelAggregator.AllowHScroll="False"
                AutoSize="True"
                AutoSizeMaxViewport="{TemplateBinding CellContainersPerPage}"
                ItemContainerAutoSize="True"
                ItemContainerItemMinSize="0"
                ItemContainerOrientation="Horizontal"
                ItemMinSize="0"
                ItemsSource="{TemplateBinding CellContainers}"
                Orientation="Vertical" />
        </dxschp:ScrollPanelAggregator>
    </ControlTemplate>
    <ControlTemplate x:Key="OneMonthWeekContainerPanel.DefaultTemplate" TargetType="dxschp:OneMonthWeekContainerPanel">
        <Grid>
            <dxschp:OneMonthCellsDecorationPanel
                Panel.ZIndex="0"
                AllowAlternateDecoration="{Binding View.HighlightEvenMonths, RelativeSource={RelativeSource TemplatedParent}}"
                AllowScroll="False"
                AutoSize="True"
                Borders="{Binding DecorationInfo.Borders}"
                Columns="{Binding DecorationInfo.Columns}"
                HorizontalBorderThickness="{TemplateBinding ItemHorizontalBorderThickness}"
                ItemMinSize="0"
                ItemsSource="{Binding DecorationInfo.Backgrounds}"
                Rows="{Binding DecorationInfo.Rows}"
                VerticalBorderThickness="{TemplateBinding ItemVerticalBorderThickness}" />
            <dxschp:MonthCellsContainerPanel
                x:Name="PART_CellsPanel"
                Panel.ZIndex="0"
                AutoSize="True"
                ItemContentTemplate="{Binding View.CellContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                ItemContentTemplateSelector="{Binding View.CellContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                ItemHorizontalBorderThickness="{TemplateBinding ItemHorizontalBorderThickness}"
                ItemStyle="{Binding View.CellStyle, RelativeSource={RelativeSource TemplatedParent}}"
                ItemVerticalBorderThickness="{TemplateBinding ItemVerticalBorderThickness}"
                ItemsSource="{Binding CellContainer.Cells}"
                Orientation="Horizontal">
                <dxmvvm:Interaction.Behaviors>
                    <dxschc:LegacyCellDecorationBehavior LegacyZIndex="1" NormalZIndex="4" />
                </dxmvvm:Interaction.Behaviors>
            </dxschp:MonthCellsContainerPanel>
            <dxschp:OneMonthTimeRegionDecorationPanel
                Panel.ZIndex="2"
                AllowScroll="False"
                AutoSize="True"
                Columns="{Binding DecorationInfo.Columns}"
                ItemMinSize="0"
                ItemTemplate="{Binding View.TimeRegionContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                ItemTemplateSelector="{Binding View.TimeRegionContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                ItemsSource="{Binding DecorationInfo.TimeRegions}"
                Rows="{Binding DecorationInfo.Rows}" />
            <dxschp:OneMonthCellsDecorationPanel
                Panel.ZIndex="3"
                AllowScroll="False"
                AutoSize="True"
                Columns="{Binding DecorationInfo.Columns}"
                HorizontalBorderThickness="{TemplateBinding ItemHorizontalBorderThickness}"
                IsHitTestVisible="False"
                ItemMinSize="0"
                Rows="{Binding DecorationInfo.Rows}"
                Selection="{Binding DecorationInfo.Selection}"
                TodayCellIndex="{Binding DecorationInfo.TodayCellIndex}"
                VerticalBorderThickness="{TemplateBinding ItemVerticalBorderThickness}" />
            <dxschp:AppointmentsTimelinePanel
                x:Name="PART_AppointmentsPanel"
                MinHeight="{DXBinding '$sys:Math.Max(0, @p.View.WeekMinHeight - @s.Margin.Top - @s.Margin.Bottom)'}"
                Panel.ZIndex="4"
                ChildClippingMode="ClipToViewport"
                ChildType="{x:Type dxschv:MonthAppointmentControl}"
                FirstDayOfWeek="{Binding View.Scheduler.FirstDayOfWeek, RelativeSource={RelativeSource TemplatedParent}}"
                Intervals="{Binding Intervals}"
                ItemContentTemplate="{Binding View.AppointmentContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                ItemContentTemplateSelector="{Binding View.AppointmentContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                ItemMinWidth="0"
                ItemStyle="{Binding View.AppointmentStyle, RelativeSource={RelativeSource TemplatedParent}}"
                ItemsSource="{Binding CellContainer.Appointments}"
                Orientation="Horizontal"
                Resource="{Binding Resource}"
                RowHeight="{Binding View.AppointmentMinHeight, RelativeSource={RelativeSource TemplatedParent}}"
                ScaleUnit="Day"
                SnapToCellsMode="Always"
                SplitByRows="True"
                StretchMode="None"
                Style="{TemplateBinding AppointmentsContainerStyle}"
                UnitCount="1"
                VisualData="{Binding View.VisualData, RelativeSource={RelativeSource TemplatedParent}}"
                Zoom="{x:Static sys:TimeSpan.MaxValue}"
                Offset="{Binding Offset}" />
            <dxschp:AppointmentsTimelinePanel
                x:Name="PART_AppointmentsDragPanel"
                MinHeight="{DXBinding '$sys:Math.Max(0, @p.View.WeekMinHeight - @s.Margin.Top - @s.Margin.Bottom)'}"
                Panel.ZIndex="5"
                ChildClippingMode="ClipToViewport"
                ChildType="{x:Type dxschv:MonthAppointmentControl}"
                FirstDayOfWeek="{Binding View.Scheduler.FirstDayOfWeek, RelativeSource={RelativeSource TemplatedParent}}"
                Intervals="{Binding Intervals}"
                ItemContentTemplate="{Binding View.AppointmentContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                ItemContentTemplateSelector="{Binding View.AppointmentContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                ItemMinWidth="0"
                ItemStyle="{Binding View.AppointmentStyle, RelativeSource={RelativeSource TemplatedParent}}"
                ItemsSource="{Binding CellContainer.DragAppointments}"
                Orientation="Horizontal"
                Resource="{Binding Resource}"
                RowHeight="{Binding View.AppointmentMinHeight, RelativeSource={RelativeSource TemplatedParent}}"
                ScaleUnit="Day"
                SnapToCellsMode="Always"
                SplitByRows="True"
                StretchMode="StretchToMinSize"
                Style="{TemplateBinding DragAppointmentsContainerStyle}"
                UnitCount="1"
                VisualData="{Binding View.VisualData, RelativeSource={RelativeSource TemplatedParent}}"
                Zoom="{x:Static sys:TimeSpan.MaxValue}"
                Offset="{Binding Offset}" />
            <Grid x:Name="PART_MoreButtonContainer" Panel.ZIndex="6" Visibility="{DXBinding '@e(PART_AppointmentsPanel).HasMoreItems or @c.IsExpanded', Converter={dxmvvm:BooleanToVisibilityConverter}}">
                <dxschv:SchedulerButton
                    x:Name="PART_MoreButtonDown"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Bottom"
                    Panel.ZIndex="7"
                    Command="{Binding VisualData.MoreButtonClickedCommand, RelativeSource={RelativeSource TemplatedParent}}"
                    CommandParameter="{Binding ContainerIndex}"
                    IsEnabled="{DXBinding '@e(PART_AppointmentsPanel).HasMoreItems'}"
                    Kind="MoreButtonDown"
                    Visibility="{Binding IsExpanded, Converter={dxmvvm:BooleanToVisibilityConverter Inverse=True}}" />
                <dxschv:SchedulerButton
                    HorizontalAlignment="Right"
                    VerticalAlignment="Bottom"
                    Panel.ZIndex="8"
                    Command="{Binding VisualData.CollapseButtonClickedCommand, RelativeSource={RelativeSource TemplatedParent}}"
                    CommandParameter="{Binding ContainerIndex}"
                    IsEnabled="{DXBinding '!@e(PART_AppointmentsPanel).HasMoreItems'}"
                    Kind="MoreButtonUp"
                    Visibility="{Binding IsExpanded, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding View.MoreButtonsVisibility, RelativeSource={RelativeSource Self}}" Value="Always">
                <Setter TargetName="PART_MoreButtonContainer" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding View.MoreButtonsVisibility, RelativeSource={RelativeSource Self}}" Value="Never">
                <Setter TargetName="PART_MoreButtonContainer" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding View.StretchAppointments, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="PART_AppointmentsPanel" Property="StretchMode" Value="StretchToMinSize" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="TimeRulerGroupPanel.DefaultTemplate" TargetType="dxschp:TimeRulerGroupPanel">
        <Grid>
            <dxschp:TimeRulersContainersPanel
                x:Name="PART_TimeRulersPanel"
                AutoSize="False"
                ItemContainerAllowHScroll="False"
                ItemContainerAllowVScroll="False"
                ItemContainerAutoSize="True"
                ItemContainerItemMinSize="{Binding View.CellMinHeight, RelativeSource={RelativeSource TemplatedParent}}"
                ItemContainerItemStyle="{Binding View.TimeRulerCellStyle, RelativeSource={RelativeSource TemplatedParent}}"
                ItemContainerOrientation="Vertical"
                ItemContainerScrollOffset="{TemplateBinding ScrollOffset}"
                ItemMinSize="{TemplateBinding TimeRulerSize}"
                ItemsSource="{TemplateBinding TimeRulers}"
                Orientation="Horizontal" />
            <dxschp:TimeMarkerContainerPanel
                x:Name="PART_TimeMarkerPanel"
                CellMinSize="{Binding View.CellMinHeight, RelativeSource={RelativeSource TemplatedParent}}"
                CellsAutoSize="True"
                CellsCount="{TemplateBinding CellsCount}"
                ItemStyle="{TemplateBinding TimeMarkerStyle}"
                Orientation="Vertical"
                PositionInCells="{TemplateBinding TimeMarkerPosition}"
                ScrollOffset="{TemplateBinding ScrollOffset}"
                Visibility="{TemplateBinding ActualTimeMarkerVisibility}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TimeMarkerPosition" Value="0">
                <Setter TargetName="PART_TimeMarkerPanel" Property="Visibility" Value="Collapsed" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="TimelineAutoHeightGroupPanel.DefaultTemplate" TargetType="dxschp:TimelineAutoHeightGroupPanelBase">
        <Grid>
            <Grid x:Name="client">
                <dxschp:TimelineCellsDecorationPanel
                    Panel.ZIndex="0"
                    AllowAlternateDecoration="{Binding View.HighlightNonworkingHours, RelativeSource={RelativeSource TemplatedParent}}"
                    AllowScroll="False"
                    AutoSize="True"
                    Borders="{Binding View.VisualData.DecorationInfo.Borders, RelativeSource={RelativeSource TemplatedParent}}"
                    Columns="{Binding View.VisualData.DecorationInfo.Columns, RelativeSource={RelativeSource TemplatedParent}}"
                    HorizontalBorderThickness="{TemplateBinding ItemHorizontalBorderThickness}"
                    ItemMinSize="0"
                    ItemsSource="{Binding View.VisualData.DecorationInfo.Backgrounds, RelativeSource={RelativeSource TemplatedParent}}"
                    RowIndexOffset="{Binding ContainerIndex}"
                    Rows="1"
                    VerticalBorderThickness="{TemplateBinding ItemVerticalBorderThickness}" />
                <dxschp:TimelineCellsContainerPanel
                    Panel.ZIndex="0"
                    AutoSize="True"
                    ItemContentTemplate="{Binding View.CellContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                    ItemContentTemplateSelector="{Binding View.CellContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                    ItemHorizontalBorderThickness="{TemplateBinding ItemHorizontalBorderThickness}"
                    ItemMinSize="0"
                    ItemStyle="{Binding View.CellStyle, RelativeSource={RelativeSource TemplatedParent}}"
                    ItemVerticalBorderThickness="{TemplateBinding ItemVerticalBorderThickness}"
                    ItemsSource="{Binding Cells}"
                    Orientation="Horizontal" />
                <dxschp:TimeRegionDecorationPanel
                    AllowScroll="False"
                    AutoSize="True"
                    Columns="{Binding View.VisualData.DecorationInfo.Columns, RelativeSource={RelativeSource TemplatedParent}}"
                    ItemMinSize="0"
                    ItemTemplate="{Binding View.TimeRegionContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                    ItemTemplateSelector="{Binding View.TimeRegionContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                    ItemsSource="{Binding View.VisualData.DecorationInfo.TimeRegions, RelativeSource={RelativeSource TemplatedParent}}"
                    RowIndexOffset="{Binding ContainerIndex}"
                    Rows="1" />
                <dxschp:TimelineCellsDecorationPanel
                    AllowScroll="False"
                    AutoSize="True"
                    Columns="{Binding View.VisualData.DecorationInfo.Columns, RelativeSource={RelativeSource TemplatedParent}}"
                    HorizontalBorderThickness="{TemplateBinding ItemHorizontalBorderThickness}"
                    IsHitTestVisible="False"
                    ItemMinSize="0"
                    RowIndexOffset="{Binding ContainerIndex}"
                    Rows="1"
                    Selection="{Binding View.VisualData.DecorationInfo.Selection, RelativeSource={RelativeSource TemplatedParent}}"
                    VerticalBorderThickness="{TemplateBinding ItemVerticalBorderThickness}" />
                <dxschp:TimelineIndicatorContainerPanel
                    x:Name="PART_TimeIndicatorsPanel"
                    Panel.ZIndex="2"
                    CellMinSize="0"
                    CellsAutoSize="True"
                    CellsCount="{Binding View.IntervalCount, RelativeSource={RelativeSource TemplatedParent}}"
                    Orientation="Horizontal"
                    PositionInCells="{Binding VisualData.CurrentTimePosition, RelativeSource={RelativeSource TemplatedParent}}"
                    Visibility="{Binding View.TimeIndicatorVisibility, RelativeSource={RelativeSource TemplatedParent}}" />
                <dxschp:TimelineAppointmentsContainerPanel
                    Panel.ZIndex="4"
                    AllowScroll="False"
                    AutoSize="{Binding View.StretchAppointments, RelativeSource={RelativeSource TemplatedParent}}"
                    ColumnsCount="{Binding View.IntervalCount, RelativeSource={RelativeSource TemplatedParent}}"
                    DeferredRendering="{Binding View.AppointmentsDeferredRendering, RelativeSource={RelativeSource TemplatedParent}}"
                    DeferredRenderingRange="{Binding View.AppointmentsDeferredRenderingRange, RelativeSource={RelativeSource TemplatedParent}}"
                    IsOpacityAnimationEnabled="{Binding View.IsAppointmentsOpacityAnimationEnabled, RelativeSource={RelativeSource TemplatedParent}}"
                    ItemContentTemplate="{Binding View.AppointmentContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                    ItemContentTemplateSelector="{Binding View.AppointmentContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                    ItemMinSize="{Binding View.AppointmentMinHeight, RelativeSource={RelativeSource TemplatedParent}}"
                    ItemStyle="{Binding View.AppointmentStyle, RelativeSource={RelativeSource TemplatedParent}}"
                    ItemsSource="{Binding Appointments}"
                    OpacityAnimation="{Binding View.AppointmentsOpacityAnimation, RelativeSource={RelativeSource TemplatedParent}}"
                    Orientation="Vertical"
                    Style="{TemplateBinding AppointmentsContainerStyle}" />
                <dxschp:TimelineDragAppointmentsContainerPanel
                    Panel.ZIndex="6"
                    AllowScroll="False"
                    AutoSize="True"
                    ColumnsCount="{Binding View.IntervalCount, RelativeSource={RelativeSource TemplatedParent}}"
                    ItemContentTemplate="{Binding View.AppointmentContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                    ItemContentTemplateSelector="{Binding View.AppointmentContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                    ItemMinSize="{Binding View.AppointmentMinHeight, RelativeSource={RelativeSource TemplatedParent}}"
                    ItemStyle="{Binding View.AppointmentStyle, RelativeSource={RelativeSource TemplatedParent}}"
                    ItemsSource="{Binding DragAppointments}"
                    Orientation="Vertical"
                    Style="{TemplateBinding DragAppointmentsContainerStyle}" />
            </Grid>
            <dxschp:TimelineAutoHeightNavigationPanel AvailableHeight="{Binding ElementName=client, Path=ActualHeight}" />
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding View.ShowTimeIndicatorOverAppointment, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="PART_TimeIndicatorsPanel" Property="Panel.ZIndex" Value="5" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="TimelineStandardModeGroupPanel.DefaultTemplate" TargetType="dxschp:TimelineStandardModeGroupPanel">
        <Grid>
            <Grid x:Name="client">
                <dxschp:TimelineCellsDecoration
                    dxsch:HitTestBehavior.HitTestType="Cell"
                    ContainerViewModel="{Binding}"
                    HighlightNonworkingHours="{Binding View.HighlightNonworkingHours, RelativeSource={RelativeSource TemplatedParent}}"
                    HorizontalLineThickness="{TemplateBinding ItemHorizontalBorderThickness}"
                    Scale="{Binding View.VisualData.BaseTimeScale, RelativeSource={RelativeSource TemplatedParent}}"
                    SecondaryScale="{Binding View.VisualData.SecondaryTimeScale, RelativeSource={RelativeSource TemplatedParent}}"
                    VerticalLineThickness="{TemplateBinding ItemVerticalBorderThickness}"
                    View="{TemplateBinding View}"
                    ViewportInterval="{Binding View.ViewportInterval, RelativeSource={RelativeSource TemplatedParent}}"
                    Zoom="{Binding View.Zoom, RelativeSource={RelativeSource TemplatedParent}}" />
                <dxschp:TimelineCellsPanel
                    MinHeight="{Binding View.ResourceMinHeight, RelativeSource={RelativeSource TemplatedParent}}"
                    Panel.ZIndex="0"
                    ChildClippingMode="ClipToExtent"
                    FirstDayOfWeek="{Binding View.Scheduler.FirstDayOfWeek, RelativeSource={RelativeSource TemplatedParent}}"
                    Interval="{Binding View.VisualData.VisibleInterval, RelativeSource={RelativeSource TemplatedParent}}"
                    ItemContentTemplate="{Binding View.CellContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                    ItemContentTemplateSelector="{Binding View.CellContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                    ItemHorizontalBorderThickness="{TemplateBinding ItemHorizontalBorderThickness}"
                    ItemMinWidth="0"
                    ItemStyle="{Binding View.CellStyle, RelativeSource={RelativeSource TemplatedParent}}"
                    ItemVerticalBorderThickness="{TemplateBinding ItemVerticalBorderThickness}"
                    ItemsSource="{Binding Cells}"
                    Orientation="Horizontal"
                    RowHeight="0"
                    ScaleUnit="{Binding View.VisualData.ScaleUnit, RelativeSource={RelativeSource TemplatedParent}}"
                    SnapToCellsMode="Never"
                    SplitByRows="False"
                    StretchMode="StretchToMinSize"
                    UnitCount="{Binding View.VisualData.UnitCount, RelativeSource={RelativeSource TemplatedParent}}"
                    Visibility="{Binding View.ActualShowCellControls, RelativeSource={RelativeSource TemplatedParent}, Converter={dx:BooleanToVisibilityConverter}}"
                    Zoom="{Binding View.Zoom, RelativeSource={RelativeSource TemplatedParent}}"
                    Offset="{Binding View.VisualData.ViewportInterval.Start, RelativeSource={RelativeSource TemplatedParent}}" />
                <dxschp:TimeRegionsTimelinePanel
                    x:Name="PART_TimeRegionsPanel"
                    MinHeight="{Binding View.ResourceMinHeight, RelativeSource={RelativeSource TemplatedParent}}"
                    ChildClippingMode="ClipToExtent"
                    ChildType="{x:Type dxschp:TimeRegionContentPresenter}"
                    FirstDayOfWeek="{Binding View.Scheduler.FirstDayOfWeek, RelativeSource={RelativeSource TemplatedParent}}"
                    Interval="{Binding View.VisualData.VisibleInterval, RelativeSource={RelativeSource TemplatedParent}}"
                    ItemContentTemplate="{Binding View.TimeRegionContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                    ItemContentTemplateSelector="{Binding View.TimeRegionContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                    ItemMinWidth="0"
                    ItemsSource="{Binding TimeRegions}"
                    Orientation="Horizontal"
                    RowHeight="0"
                    ScaleUnit="{Binding View.VisualData.ScaleUnit, RelativeSource={RelativeSource TemplatedParent}}"
                    SplitByRows="False"
                    StretchMode="StretchToMinSize"
                    TimeRegionSnapToCellsMode="{Binding View.TimeRegionSnapToCellsMode, RelativeSource={RelativeSource TemplatedParent}}"
                    UnitCount="{Binding View.VisualData.UnitCount, RelativeSource={RelativeSource TemplatedParent}}"
                    Visibility="{Binding View.TimeRegionVisibility, RelativeSource={RelativeSource TemplatedParent}, Converter={dxschp:TimeRegionVisibilityToVisibilityConverter}}"
                    Zoom="{Binding View.Zoom, RelativeSource={RelativeSource TemplatedParent}}"
                    Offset="{Binding View.VisualData.ViewportInterval.Start, RelativeSource={RelativeSource TemplatedParent}}" />
                <dxschp:TimelineSelectionDecoration
                    ContainerViewModel="{Binding}"
                    IsHitTestVisible="False"
                    Scale="{Binding View.VisualData.BaseTimeScale, RelativeSource={RelativeSource TemplatedParent}}"
                    ViewportInterval="{Binding View.ViewportInterval, RelativeSource={RelativeSource TemplatedParent}}"
                    Zoom="{Binding View.Zoom, RelativeSource={RelativeSource TemplatedParent}}" />
                <dxschp:StandardTimelineIndicatorContainerPanel
                    x:Name="PART_TimeIndicatorsPanel"
                    Panel.ZIndex="2"
                    CellMinSize="0"
                    CellsAutoSize="True"
                    CellsCount="{Binding View.VisualData.VisibleIntervalsCount, RelativeSource={RelativeSource TemplatedParent}}"
                    HorizontalExtent="{Binding View.VisualData.HorizontalScrollExtent, RelativeSource={RelativeSource TemplatedParent}}"
                    HorizontalOffset="{Binding View.VisualData.HorizontalScrollOffset, RelativeSource={RelativeSource TemplatedParent}}"
                    HorizontalViewport="{Binding View.VisualData.HorizontalScrollViewport, RelativeSource={RelativeSource TemplatedParent}}"
                    Orientation="Horizontal"
                    PositionInCells="{Binding View.VisualData.CurrentTimePosition, RelativeSource={RelativeSource TemplatedParent}}"
                    View="{Binding View.TimelineView, RelativeSource={RelativeSource TemplatedParent}}"
                    Visibility="{Binding View.TimeIndicatorVisibility, RelativeSource={RelativeSource TemplatedParent}}" />
                <dxschp:AppointmentsTimelinePanel
                    x:Name="PART_AppointmentsPanel"
                    MinHeight="{DXBinding '$sys:Math.Max(0, @p.View.ResourceMinHeight - @s.Margin.Top - @s.Margin.Bottom)'}"
                    Panel.ZIndex="4"
                    ChildClippingMode="ClipToViewport"
                    ChildType="{x:Type dxschv:TimelineAppointmentControl}"
                    ExpandCommand="{Binding VisualData.MoreButtonClickedCommand, RelativeSource={RelativeSource TemplatedParent}}"
                    ExpandCommandParameter="{Binding ContainerIndex}"
                    FirstDayOfWeek="{Binding View.Scheduler.FirstDayOfWeek, RelativeSource={RelativeSource TemplatedParent}}"
                    Interval="{Binding View.VisualData.VisibleInterval, RelativeSource={RelativeSource TemplatedParent}}"
                    ItemContentTemplate="{Binding View.AppointmentContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                    ItemContentTemplateSelector="{Binding View.AppointmentContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                    ItemMinWidth="{Binding View.AppointmentMinWidth, RelativeSource={RelativeSource TemplatedParent}}"
                    ItemStyle="{Binding View.AppointmentStyle, RelativeSource={RelativeSource TemplatedParent}}"
                    ItemsSource="{Binding Appointments}"
                    Orientation="Horizontal"
                    Resource="{Binding Resource}"
                    RowHeight="{Binding View.AppointmentMinHeight, RelativeSource={RelativeSource TemplatedParent}}"
                    ScaleUnit="{Binding View.VisualData.ScaleUnit, RelativeSource={RelativeSource TemplatedParent}}"
                    SnapToCellsMode="{Binding View.SnapToCellsMode, RelativeSource={RelativeSource TemplatedParent}}"
                    SplitByRows="True"
                    StretchMode="None"
                    Style="{TemplateBinding AppointmentsContainerStyle}"
                    UnitCount="{Binding View.VisualData.UnitCount, RelativeSource={RelativeSource TemplatedParent}}"
                    VisualData="{Binding View.VisualData, RelativeSource={RelativeSource TemplatedParent}}"
                    Zoom="{Binding View.Zoom, RelativeSource={RelativeSource TemplatedParent}}"
                    Offset="{Binding View.VisualData.ViewportInterval.Start, RelativeSource={RelativeSource TemplatedParent}}" />
                <dxschp:AppointmentsTimelinePanel
                    x:Name="PART_AppointmentsDragPanel"
                    MinHeight="{DXBinding '$sys:Math.Max(0, @p.View.ResourceMinHeight - @s.Margin.Top - @s.Margin.Bottom)'}"
                    Panel.ZIndex="6"
                    ChildClippingMode="ClipToViewport"
                    ChildType="{x:Type dxschv:TimelineAppointmentDragControl}"
                    FirstDayOfWeek="{Binding View.Scheduler.FirstDayOfWeek, RelativeSource={RelativeSource TemplatedParent}}"
                    Interval="{Binding View.VisualData.VisibleInterval, RelativeSource={RelativeSource TemplatedParent}}"
                    ItemContentTemplate="{Binding View.AppointmentContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                    ItemContentTemplateSelector="{Binding View.AppointmentContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                    ItemMinWidth="{Binding View.AppointmentMinWidth, RelativeSource={RelativeSource TemplatedParent}}"
                    ItemStyle="{Binding View.AppointmentStyle, RelativeSource={RelativeSource TemplatedParent}}"
                    ItemsSource="{Binding DragAppointments}"
                    Orientation="Horizontal"
                    RowHeight="{Binding View.AppointmentMinHeight, RelativeSource={RelativeSource TemplatedParent}}"
                    ScaleUnit="{Binding View.VisualData.ScaleUnit, RelativeSource={RelativeSource TemplatedParent}}"
                    SnapToCellsMode="{Binding View.SnapToCellsMode, RelativeSource={RelativeSource TemplatedParent}}"
                    SplitByRows="True"
                    StretchMode="StretchToMinSize"
                    Style="{TemplateBinding DragAppointmentsContainerStyle}"
                    UnitCount="{Binding View.VisualData.UnitCount, RelativeSource={RelativeSource TemplatedParent}}"
                    Zoom="{Binding View.Zoom, RelativeSource={RelativeSource TemplatedParent}}"
                    Offset="{Binding View.VisualData.ViewportInterval.Start, RelativeSource={RelativeSource TemplatedParent}}" />
            </Grid>
            <dxschp:TimelineAutoHeightNavigationPanel AvailableHeight="{Binding ElementName=client, Path=ActualHeight}" />
            <Grid x:Name="PART_MoreButtonContainer" Visibility="{DXBinding '@e(PART_AppointmentsPanel).HasMoreItems or @c.IsExpanded', Converter={dxmvvm:BooleanToVisibilityConverter}}">
                <dxschv:SchedulerButton
                    x:Name="PART_MoreButtonDown"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Bottom"
                    Command="{Binding VisualData.MoreButtonClickedCommand, RelativeSource={RelativeSource TemplatedParent}}"
                    CommandParameter="{Binding ContainerIndex}"
                    IsEnabled="{DXBinding '@e(PART_AppointmentsPanel).HasMoreItems'}"
                    Kind="MoreButtonDown"
                    Visibility="{Binding IsExpanded, Converter={dxmvvm:BooleanToVisibilityConverter Inverse=True}}" />
                <dxschv:SchedulerButton
                    HorizontalAlignment="Right"
                    VerticalAlignment="Bottom"
                    Command="{Binding VisualData.CollapseButtonClickedCommand, RelativeSource={RelativeSource TemplatedParent}}"
                    CommandParameter="{Binding ContainerIndex}"
                    IsEnabled="{DXBinding '!@e(PART_AppointmentsPanel).HasMoreItems'}"
                    Kind="MoreButtonUp"
                    Visibility="{Binding IsExpanded, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding View.MoreButtonsVisibility, RelativeSource={RelativeSource Self}}" Value="Always">
                <Setter TargetName="PART_MoreButtonContainer" Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding View.MoreButtonsVisibility, RelativeSource={RelativeSource Self}}" Value="Never">
                <Setter TargetName="PART_MoreButtonContainer" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding View.ShowTimeIndicatorOverAppointment, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="PART_TimeIndicatorsPanel" Property="Panel.ZIndex" Value="5" />
            </DataTrigger>
            <DataTrigger Binding="{Binding View.StretchAppointments, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="PART_AppointmentsPanel" Property="StretchMode" Value="StretchToMinSize" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Views\GroupPanel.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Views\ListViewControl.xaml-->
    <Style x:Key="ImageStyle" TargetType="Image">
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
    </Style>
    <DataTemplate x:Key="EditSettings.Status">
        <ContentControl>
            <dxe:ComboBoxEditSettings DisplayMember="Caption" ItemsSource="{Binding Path='(dxsch:SchedulerControl.Scheduler).StatusItems', RelativeSource={RelativeSource Self}}" ValueMember="Id" />
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="EditSettings.Label">
        <ContentControl>
            <dxe:ComboBoxEditSettings DisplayMember="Caption" ItemsSource="{Binding Path='(dxsch:SchedulerControl.Scheduler).LabelItems', RelativeSource={RelativeSource Self}}" ValueMember="Id" />
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="EditSettings.Date">
        <ContentControl>
            <dxe:DateEditSettings Mask="g" MaskUseAsDisplayFormat="True" />
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="EditSettings.Recurrence">
        <ContentControl>
            <dxe:TextEditSettings NullText="(none)" />
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="EditSettings.Resource">
        <ContentControl>
            <dxsche:AppointmentResourceEditSettings Scheduler="{Binding Path=(dxsch:SchedulerControl.Scheduler), RelativeSource={RelativeSource Mode=Self}}" ValueMember="ResourceItem" />
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="EditSettings.Resources">
        <ContentControl>
            <dxsche:AppointmentResourcesEditSettings Scheduler="{Binding Path=(dxsch:SchedulerControl.Scheduler), RelativeSource={RelativeSource Mode=Self}}" />
        </ContentControl>
    </DataTemplate>
    <Style x:Key="List.GridControl.BaseStyle" TargetType="dxg:GridControl">
        <Setter Property="ShowBorder" Value="False" />
        <Setter Property="SelectionMode" Value="Row" />
        <Setter Property="ClipboardCopyMode" Value="None" />
    </Style>
    <Style x:Key="List.TableView.BaseStyle" TargetType="dxg:TableView">
        <Setter Property="AutoWidth" Value="True" />
        <Setter Property="AllowEditing" Value="False" />
        <Setter Property="ShowGroupPanel" Value="False" />
        <Setter Property="PasteMode" Value="None" />
    </Style>


    <DataTemplate x:Key="GridColumn.Icon.CellTemplate">
        <Image Source="{Binding Value, Converter={StaticResource AppointmentTypeToImageSourceConverter}}" Style="{StaticResource ImageStyle}" ToolTip="{Binding Value}" />
    </DataTemplate>
    <DataTemplate x:Key="GridColumn.Reminder.CellTemplate">
        <Image
            PreviewMouseDown="{DXEvent '@s.Tag.Commands.ChangeReminderTimeBeforeStartCommand'}"
            Source="{DXBinding 'Value != null', Converter={StaticResource HasReminderToImageSourceConverter}}"
            Style="{StaticResource ImageStyle}"
            Tag="{Binding Path=(dxsch:SchedulerControl.Scheduler), RelativeSource={RelativeSource Mode=Self}}" />
    </DataTemplate>

    <Style x:Key="{dxscht:LWKey ListViewGrid.GridColumn_Type}" TargetType="dxg:GridColumn">
        <Setter Property="FieldName" Value="Appointment.Type" />
        <Setter Property="Header" Value="{dxschc:SchedulerLocalizer StringId=Appointment_Type}" />
        <Setter Property="ToolTip" Value="{dxschc:SchedulerLocalizer StringId=Appointment_Type}" />
        <Setter Property="Image" Value="{dx:ImageSelector SvgSource={dxschc:SchedulerSvgImage Path='Actions/New.svg'}}" />
        <Setter Property="HeaderImageStyle" Value="{StaticResource ImageStyle}" />
        <Setter Property="CellTemplate" Value="{StaticResource GridColumn.Icon.CellTemplate}" />
        <Setter Property="Width" Value="26" />
        <Setter Property="AllowResizing" Value="False" />
        <Setter Property="AllowAutoFilter" Value="False" />
        <Setter Property="FixedWidth" Value="True" />
    </Style>
    <Style x:Key="{dxscht:LWKey ListViewGrid.GridColumn_Subject}" TargetType="dxg:GridColumn">
        <Setter Property="FieldName" Value="Appointment.Subject" />
        <Setter Property="Header" Value="{dxschc:SchedulerLocalizer StringId=Appointment_Subject}" />
        <Setter Property="Width" Value="120" />
    </Style>
    <Style x:Key="{dxscht:LWKey ListViewGrid.GridColumn_Location}" TargetType="dxg:GridColumn">
        <Setter Property="FieldName" Value="Appointment.Location" />
        <Setter Property="Header" Value="{dxschc:SchedulerLocalizer StringId=Appointment_Location}" />
        <Setter Property="Width" Value="100" />
    </Style>
    <Style x:Key="{dxscht:LWKey ListViewGrid.GridColumn_Status}" TargetType="dxg:GridColumn">
        <Setter Property="FieldName" Value="Appointment.StatusId" />
        <Setter Property="Header" Value="{dxschc:SchedulerLocalizer StringId=Appointment_Status}" />
        <Setter Property="EditSettings" Value="{dxmvvm:ValueFactory ValueTemplate={StaticResource EditSettings.Status}}" />
        <Setter Property="Width" Value="80" />
        <Setter Property="Visible" Value="False" />
    </Style>
    <Style x:Key="{dxscht:LWKey ListViewGrid.GridColumn_Label}" TargetType="dxg:GridColumn">
        <Setter Property="FieldName" Value="Appointment.LabelId" />
        <Setter Property="Header" Value="{dxschc:SchedulerLocalizer StringId=Appointment_Label}" />
        <Setter Property="EditSettings" Value="{dxmvvm:ValueFactory ValueTemplate={StaticResource EditSettings.Label}}" />
        <Setter Property="Width" Value="80" />
        <Setter Property="Visible" Value="False" />
    </Style>
    <Style x:Key="{dxscht:LWKey ListViewGrid.GridColumn_Start}" TargetType="dxg:GridColumn">
        <Setter Property="FieldName" Value="Appointment.Start" />
        <Setter Property="Header" Value="{dxschc:SchedulerLocalizer StringId=Appointment_Start}" />
        <Setter Property="SortIndex" Value="0" />
        <Setter Property="SortOrder" Value="Ascending" />
        <Setter Property="EditSettings" Value="{dxmvvm:ValueFactory ValueTemplate={StaticResource EditSettings.Date}}" />
        <Setter Property="Width" Value="120" />
    </Style>
    <Style x:Key="{dxscht:LWKey ListViewGrid.GridColumn_End}" TargetType="dxg:GridColumn">
        <Setter Property="FieldName" Value="Appointment.End" />
        <Setter Property="Header" Value="{dxschc:SchedulerLocalizer StringId=Appointment_End}" />
        <Setter Property="EditSettings" Value="{dxmvvm:ValueFactory ValueTemplate={StaticResource EditSettings.Date}}" />
        <Setter Property="Width" Value="120" />
    </Style>

    <Style x:Key="{dxscht:LWKey ListViewGrid.GridColumn_Reminder}" TargetType="dxg:GridColumn">
        <Setter Property="FieldName" Value="Appointment.Reminder" />
        <Setter Property="Header" Value="{dxschc:SchedulerLocalizer StringId=Appointment_Reminder}" />
        <Setter Property="ToolTip" Value="{dxschc:SchedulerLocalizer StringId=Appointment_Reminder}" />
        <Setter Property="Image" Value="{dx:ImageSelector SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/AppointmentReminder.svg'}}" />
        <Setter Property="HeaderImageStyle" Value="{StaticResource ImageStyle}" />
        <Setter Property="CellTemplate" Value="{StaticResource GridColumn.Reminder.CellTemplate}" />
        <Setter Property="Width" Value="24" />
        <Setter Property="AllowResizing" Value="False" />
        <Setter Property="AllowAutoFilter" Value="False" />
        <Setter Property="FixedWidth" Value="True" />
        <Setter Property="Visible" Value="False" />
    </Style>
    <Style x:Key="{dxscht:LWKey ListViewGrid.GridColumn_AllDay}" TargetType="dxg:GridColumn">
        <Setter Property="FieldName" Value="Appointment.AllDay" />
        <Setter Property="Header" Value="{dxschc:SchedulerLocalizer StringId=Appointment_AllDay}" />
        <Setter Property="Width" Value="32" />
        <Setter Property="FixedWidth" Value="True" />
        <Setter Property="Visible" Value="False" />
    </Style>
    <Style x:Key="{dxscht:LWKey ListViewGrid.GridColumn_Duration}" TargetType="dxg:GridColumn">
        <Setter Property="FieldName" Value="Appointment.Duration" />
        <Setter Property="Header" Value="{dxschc:SchedulerLocalizer StringId=Appointment_Duration}" />
        <Setter Property="Width" Value="100" />
        <Setter Property="Visible" Value="False" />
    </Style>
    <Style x:Key="{dxscht:LWKey ListViewGrid.GridColumn_Recurrence}" TargetType="dxg:GridColumn">
        <Setter Property="FieldName" Value="Appointment.RecurrenceInfo.Type" />
        <Setter Property="Header" Value="{dxschc:SchedulerLocalizer StringId=Appointment_Recurrence}" />
        <Setter Property="Width" Value="100" />
        <Setter Property="AllowEditing" Value="False" />
        <Setter Property="EditSettings" Value="{dxmvvm:ValueFactory ValueTemplate={StaticResource EditSettings.Recurrence}}" />
        <Setter Property="Visible" Value="False" />
    </Style>
    <Style x:Key="{dxscht:LWKey ListViewGrid.GridColumn_Resource}" TargetType="dxg:GridColumn">
        <Setter Property="FieldName" Value="Resources" />
        <Setter Property="Header" Value="{dxschc:SchedulerLocalizer StringId=Appointment_Resource}" />
        <Setter Property="Width" Value="100" />
        <Setter Property="EditSettings" Value="{dxmvvm:ValueFactory ValueTemplate={StaticResource EditSettings.Resources}}" />
        <Setter Property="Visible" Value="False" />
        <Setter Property="AllowColumnFiltering" Value="False" />
        <Setter Property="AllowEditing" Value="False" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(dxsch:SchedulerControl.Scheduler).DataSource.ResourceSharing, FallbackValue=True, RelativeSource={RelativeSource Mode=Self}}" Value="False">
                <Setter Property="EditSettings" Value="{dxmvvm:ValueFactory ValueTemplate={StaticResource EditSettings.Resource}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="{dxscht:LWKey SchedulerCommon.ListViewTemplate}" TargetType="dxschv:ListViewControl">
        <dxg:GridControl
            x:Name="PART_ListGridControl"
            ItemsSource="{Binding Path=VisualData.AllAppointments, RelativeSource={RelativeSource Mode=TemplatedParent}}"
            SelectedItems="{Binding Path=VisualData.SelectedAppointments, RelativeSource={RelativeSource Mode=TemplatedParent}}"
            Style="{Binding Path=View.GridControlStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}">
            <dxmvvm:Interaction.Behaviors>
                <dxschc:StyleApplierBehavior Style="{StaticResource List.GridControl.BaseStyle}" />
            </dxmvvm:Interaction.Behaviors>
            <dxg:GridControl.View>
                <dxg:TableView FocusedRow="{Binding Path=VisualData.FocusedAppointment, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}" Style="{Binding Path=View.TableViewStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                    <dxmvvm:Interaction.Behaviors>
                        <dxschc:ListViewGridClipboardBehavior />
                        <dxschc:StyleApplierBehavior Style="{StaticResource List.TableView.BaseStyle}" />
                    </dxmvvm:Interaction.Behaviors>
                </dxg:TableView>
            </dxg:GridControl.View>
            <dxg:GridColumn Style="{DXBinding '@p.View.ColumnStyleType'}" />
            <dxg:GridColumn Style="{DXBinding '@p.View.ColumnStyleSubject'}" />
            <dxg:GridColumn Style="{DXBinding '@p.View.ColumnStyleLocation'}" />
            <dxg:GridColumn Style="{DXBinding '@p.View.ColumnStyleStatus'}" />
            <dxg:GridColumn Style="{DXBinding '@p.View.ColumnStyleLabel'}" />
            <dxg:GridColumn Style="{DXBinding '@p.View.ColumnStyleStart'}" />
            <dxg:GridColumn Style="{DXBinding '@p.View.ColumnStyleEnd'}" />

            <dxg:GridColumn Style="{DXBinding '@p.View.ColumnStyleReminder'}" />
            <dxg:GridColumn Style="{DXBinding '@p.View.ColumnStyleAllDay'}" />
            <dxg:GridColumn Style="{DXBinding '@p.View.ColumnStyleDuration'}" />
            <dxg:GridColumn Style="{DXBinding '@p.View.ColumnStyleRecurrence'}" />
            <dxg:GridColumn Style="{DXBinding '@p.View.ColumnStyleResource'}" />
        </dxg:GridControl>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Views\ListViewControl.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Views\MonthViewControl.xaml-->
    <Style x:Key="HeaderAreaSeparator.GroupByDate.MonthView.Style" TargetType="dxschp:ItemsContainerPanel">
        <Setter Property="ItemsSource" Value="{Binding VisualData.DateHeaders, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="ItemMinSize" Value="0" />
        <Setter Property="AutoSize" Value="True" />
        <Setter Property="ItemTemplate" Value="{Binding HeaderAreaSeparatorTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
    </Style>
    <Style x:Key="ResourceHeadersContainerPanel.GroupByResource.MonthView.Style" TargetType="dxschp:ResourceHeadersContainerPanel">
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="ItemMinSize" Value="0" />
        <Setter Property="AutoSize" Value="True" />
        <Setter Property="AutoSizeMaxViewport" Value="{Binding View.ResourcesPerPage, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemsSource" Value="{Binding VisualData.ResourceHeaders, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemStyle" Value="{Binding View.ResourceHeaderStyle, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContentTemplate" Value="{Binding View.ResourceHeaderContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContentTemplateSelector" Value="{Binding View.ResourceHeaderContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ShowGroupSeparators" Value="True" />
        <Setter Property="GroupSeparatorSize" Value="{Binding View.GroupSeparatorSize, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="GroupSeparatorTemplate" Value="{Binding ResourceHeaderSeparatorTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
    </Style>
    <Style x:Key="DateHeadersContainersPanel.GroupByResource.MonthView.Style" TargetType="dxschp:DateHeadersContainersPanel">
        <Setter Property="AutoSizeMaxViewport" Value="{Binding View.ResourcesPerPage, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="AutoSize" Value="True" />
        <Setter Property="ItemsSource" Value="{Binding VisualData.DayGroups, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="ItemMinSize" Value="0" />
        <Setter Property="ShowGroupSeparators" Value="True" />
        <Setter Property="GroupSeparatorSize" Value="{Binding View.GroupSeparatorSize, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="GroupSeparatorTemplate" Value="{Binding DateHeaderSeparatorTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter Property="ItemContainerOrientation" Value="Horizontal" />
        <Setter Property="ItemContainerItemMinSize" Value="0" />
        <Setter Property="ItemContainerAllowHScroll" Value="False" />
        <Setter Property="ItemContainerAllowVScroll" Value="False" />
        <Setter Property="ItemContainerAutoSize" Value="True" />
        <Setter Property="ItemContainerItemStyle" Value="{Binding View.DateHeaderStyle, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContainerItemContentTemplate" Value="{Binding View.DateHeaderContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContainerItemContentTemplateSelector" Value="{Binding View.DateHeaderContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
    </Style>
    <Style x:Key="DateHeadersContainersPanel.OneGroupByResource.Style" TargetType="dxschp:DateHeadersContainersPanel">
        <Setter Property="AutoSizeMaxViewport" Value="{Binding View.ResourcesPerPage, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="AutoSize" Value="True" />
        <Setter Property="ItemsSource" Value="{Binding VisualData.RealWeeksGroups, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="ItemMinSize" Value="0" />
        <Setter Property="ShowGroupSeparators" Value="True" />
        <Setter Property="GroupSeparatorSize" Value="{Binding View.GroupSeparatorSize, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="GroupSeparatorTemplate" Value="{Binding DateHeaderSeparatorTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter Property="ItemContainerOrientation" Value="Horizontal" />
        <Setter Property="ItemContainerItemMinSize" Value="0" />
        <Setter Property="ItemContainerAllowHScroll" Value="False" />
        <Setter Property="ItemContainerAllowVScroll" Value="False" />
        <Setter Property="ItemContainerAutoSize" Value="True" />
        <Setter Property="ItemContainerItemStyle" Value="{Binding View.DateHeaderStyle, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContainerItemContentTemplate" Value="{Binding View.DateHeaderContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContainerItemContentTemplateSelector" Value="{Binding View.DateHeaderContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
    </Style>
    <Style x:Key="DateHeadersContainerPanel.GroupByDate.MonthView.Style" TargetType="dxschp:DateHeadersContainerPanel">
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="ItemMinSize" Value="0" />
        <Setter Property="AutoSize" Value="True" />
        <Setter Property="AutoSizeMaxViewport" Value="{DXBinding @p.VisualData.WeekDayCount}" />
        <Setter Property="ItemsSource" Value="{Binding VisualData.DateHeaders, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemStyle" Value="{Binding View.DateHeaderStyle, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContentTemplate" Value="{Binding View.DateHeaderContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContentTemplateSelector" Value="{Binding View.DateHeaderContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
    </Style>
    <Style x:Key="MonthGroupsPanel.GroupByResource.Style" TargetType="dxschp:MonthGroupsPanel">
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="AutoSize" Value="True" />
        <Setter Property="AutoSizeMaxViewport" Value="{Binding View.ResourcesPerPage, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemsSource" Value="{Binding VisualData.DayGroups, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ShowGroupSeparators" Value="True" />
        <Setter Property="GroupSeparatorTemplate" Value="{Binding GroupSeparatorTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter Property="ItemsCountInGroup" Value="1" />
        <Setter Property="MonthGroupCellsCount" Value="{Binding VisualData.WeekDayCount, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="GroupSeparatorSize" Value="{Binding View.GroupSeparatorSize, RelativeSource={RelativeSource TemplatedParent}}" />

        <Setter Property="MonthGroupAppointmentsDeferredRendering" Value="{Binding View.AppointmentsDeferredRendering, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="MonthGroupAppointmentsDeferredRenderingRange" Value="{Binding View.AppointmentsDeferredRenderingRange, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="MonthGroupIsAppointmentsOpacityAnimationEnabled" Value="{Binding View.IsAppointmentsOpacityAnimationEnabled, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="MonthGroupAppointmentsOpacityAnimation" Value="{Binding View.AppointmentsOpacityAnimation, RelativeSource={RelativeSource TemplatedParent}}" />

        <Setter Property="MonthGroupCellContainersPerPage" Value="{Binding View.WeekCount, RelativeSource={RelativeSource TemplatedParent}}" />

        <Setter Property="View" Value="{Binding View, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="MonthGroupAppointmentsContainerStyle" Value="{Binding AppointmentsContainerStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter Property="MonthGroupDragAppointmentsContainerStyle" Value="{Binding DragAppointmentsContainerStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" />

        <Setter Property="ItemContainerVerticalBorderThickness" Value="{Binding CellVerticalBorderThickness, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContainerHorizontalBorderThickness" Value="{Binding CellHorizontalBorderThickness, RelativeSource={RelativeSource TemplatedParent}}" />
    </Style>
    <Style x:Key="MonthGroupsByDatePanel.GroupByDate.Style" TargetType="dxschp:MonthGroupsByDatePanel">
        <Setter Property="Orientation" Value="Vertical" />
        <Setter Property="ItemMinSize" Value="0" />
        <Setter Property="AutoSize" Value="True" />
        <Setter Property="AutoSizeMaxViewport" Value="{Binding View.ResourcesPerPage, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemsSource" Value="{Binding VisualData.DayGroups, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ShowGroupSeparators" Value="True" />
        <Setter Property="GroupSeparatorTemplate" Value="{Binding GroupSeparatorTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter Property="ItemsCountInGroup" Value="1" />
        <Setter Property="MonthGroupCellsCount" Value="{Binding VisualData.WeekDayCount, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="GroupSeparatorSize" Value="{Binding View.GroupSeparatorSize, RelativeSource={RelativeSource TemplatedParent}}" />

        <Setter Property="MonthGroupAppointmentsDeferredRendering" Value="{Binding View.AppointmentsDeferredRendering, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="MonthGroupAppointmentsDeferredRenderingRange" Value="{Binding View.AppointmentsDeferredRenderingRange, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="MonthGroupIsAppointmentsOpacityAnimationEnabled" Value="{Binding View.IsAppointmentsOpacityAnimationEnabled, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="MonthGroupAppointmentsOpacityAnimation" Value="{Binding View.AppointmentsOpacityAnimation, RelativeSource={RelativeSource TemplatedParent}}" />

        <Setter Property="MonthGroupCellContainersPerPage" Value="{Binding View.WeekCount, RelativeSource={RelativeSource TemplatedParent}}" />

        <Setter Property="View" Value="{Binding View, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="MonthGroupAppointmentsContainerStyle" Value="{Binding AppointmentsContainerStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter Property="MonthGroupDragAppointmentsContainerStyle" Value="{Binding DragAppointmentsContainerStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" />

        <Setter Property="ItemContainerVerticalBorderThickness" Value="{Binding CellVerticalBorderThickness, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContainerHorizontalBorderThickness" Value="{Binding CellHorizontalBorderThickness, RelativeSource={RelativeSource TemplatedParent}}" />
    </Style>
    <Style x:Key="OneMonthDateHeadersContainersPanel.Style" TargetType="dxschp:OneMonthDateHeadersContainersPanel">
        <Setter Property="AutoSizeMaxViewport" Value="{Binding View.ResourcesPerPage, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="AutoSize" Value="True" />
        <Setter Property="ItemsSource" Value="{Binding VisualData.WeeksGroups, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="ItemMinSize" Value="0" />
        <Setter Property="ShowGroupSeparators" Value="True" />
        <Setter Property="GroupSeparatorSize" Value="{Binding View.GroupSeparatorSize, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="GroupSeparatorTemplate" Value="{Binding DateHeaderSeparatorTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter Property="ItemContainerOrientation" Value="Horizontal" />
        <Setter Property="ItemContainerItemMinSize" Value="0" />
        <Setter Property="ItemContainerAllowHScroll" Value="False" />
        <Setter Property="ItemContainerAllowVScroll" Value="False" />
        <Setter Property="ItemContainerAutoSize" Value="True" />
        <Setter Property="ItemContainerItemStyle" Value="{Binding View.DateHeaderStyle, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContainerItemContentTemplate" Value="{Binding View.DateHeaderContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContainerItemContentTemplateSelector" Value="{Binding View.DateHeaderContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
    </Style>
    <Style x:Key="OneMonthDateHeadersContainersPanel.GroupByDate.Style" TargetType="dxschp:OneMonthDateHeadersContainerPanel">
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="ItemMinSize" Value="0" />
        <Setter Property="AutoSize" Value="True" />
        <Setter Property="AutoSizeMaxViewport" Value="{DXBinding @p.VisualData.WeekDayCount}" />
        <Setter Property="ItemsSource" Value="{Binding VisualData.DateHeaders, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemStyle" Value="{Binding View.DateHeaderStyle, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContentTemplate" Value="{Binding View.DateHeaderContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContentTemplateSelector" Value="{Binding View.DateHeaderContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
    </Style>
    <Style x:Key="OneMonthGroupsPanel.Style" TargetType="dxschp:OneMonthGroupsPanel">
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="View" Value="{Binding View, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemsSource" Value="{Binding View.VisualData.WeeksGroups, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContainerAppointmentsContainerStyle" Value="{Binding AppointmentsContainerStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter Property="ItemContainerDragAppointmentsContainerStyle" Value="{Binding DragAppointmentsContainerStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter Property="ItemContainerVerticalBorderThickness" Value="{Binding CellVerticalBorderThickness, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContainerHorizontalBorderThickness" Value="{Binding CellHorizontalBorderThickness, RelativeSource={RelativeSource TemplatedParent}}" />

        <Setter Property="ShowGroupSeparators" Value="True" />
        <Setter Property="GroupSeparatorTemplate" Value="{Binding GroupSeparatorTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter Property="ItemsCountInGroup" Value="1" />
        <Setter Property="GroupSeparatorSize" Value="{Binding View.GroupSeparatorSize, RelativeSource={RelativeSource TemplatedParent}}" />

        <Setter Property="ItemContainerAutoSize" Value="true" />
        <Setter Property="ItemContainerMinHeight" Value="{Binding View.WeekMinHeight, RelativeSource={RelativeSource TemplatedParent}}" />
    </Style>
    <Style x:Key="OneMonthResourceGroupsPanel.Style" TargetType="dxschp:OneMonthGroupsPanel">
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="View" Value="{Binding View, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemsSource" Value="{Binding View.VisualData.WeeksGroups, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContainerAppointmentsContainerStyle" Value="{Binding AppointmentsContainerStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter Property="ItemContainerDragAppointmentsContainerStyle" Value="{Binding DragAppointmentsContainerStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter Property="ItemContainerVerticalBorderThickness" Value="{Binding CellVerticalBorderThickness, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContainerHorizontalBorderThickness" Value="{Binding CellHorizontalBorderThickness, RelativeSource={RelativeSource TemplatedParent}}" />

        <Setter Property="ShowGroupSeparators" Value="True" />
        <Setter Property="GroupSeparatorTemplate" Value="{Binding GroupSeparatorTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter Property="ItemsCountInGroup" Value="1" />
        <Setter Property="GroupSeparatorSize" Value="{Binding View.GroupSeparatorSize, RelativeSource={RelativeSource TemplatedParent}}" />

        <Setter Property="ItemContainerAutoSize" Value="true" />
        <Setter Property="ItemContainerMinHeight" Value="{Binding View.WeekMinHeight, RelativeSource={RelativeSource TemplatedParent}}" />
    </Style>
    <Style x:Key="OneMonthAppointmentsResourceParentPanel.Style" TargetType="dxschp:OneMonthResourceGroupsPanel">
        <!-- TODO set properties here -->
        <!--<Setter Property="Orientation" Value="Horizontal"/>-->
        <!--<Setter Property="View" Value="{Binding View, RelativeSource={RelativeSource TemplatedParent}}"/>-->
        <!--<Setter Property="ItemsSource" Value="{Binding View.VisualData.WeeksGroups, RelativeSource={RelativeSource TemplatedParent}}"/>-->

        <Setter Property="ItemContainerAppointmentsContainerStyle" Value="{Binding AppointmentsContainerStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter Property="ItemContainerDragAppointmentsContainerStyle" Value="{Binding DragAppointmentsContainerStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter Property="ItemContainerVerticalBorderThickness" Value="{Binding CellVerticalBorderThickness, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContainerHorizontalBorderThickness" Value="{Binding CellHorizontalBorderThickness, RelativeSource={RelativeSource TemplatedParent}}" />

        <!--<Setter Property="ShowGroupSeparators" Value="True"/>
        <Setter Property="GroupSeparatorTemplate" Value="{Binding GroupSeparatorTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
        <Setter Property="ItemsCountInGroup" Value="1"/>
        <Setter Property="GroupSeparatorSize" Value="{Binding View.GroupSeparatorSize, RelativeSource={RelativeSource TemplatedParent}}"/>

        <Setter Property="ItemContainerAutoSize" Value="true"/>
        <Setter Property="ItemContainerMinHeight" Value="{Binding View.WeekMinHeight, RelativeSource={RelativeSource TemplatedParent}}"/>-->
    </Style>
    <Style x:Key="OneMonthGroupsByDatePanel.Style" TargetType="dxschp:OneMonthGroupsByDatePanel">
        <Setter Property="Orientation" Value="Vertical" />
        <Setter Property="View" Value="{Binding View, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemsSource" Value="{Binding View.VisualData.WeeksGroups, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContainerAppointmentsContainerStyle" Value="{Binding AppointmentsContainerStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter Property="ItemContainerDragAppointmentsContainerStyle" Value="{Binding DragAppointmentsContainerStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter Property="ItemContainerVerticalBorderThickness" Value="{Binding CellVerticalBorderThickness, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContainerHorizontalBorderThickness" Value="{Binding CellHorizontalBorderThickness, RelativeSource={RelativeSource TemplatedParent}}" />

        <Setter Property="ShowGroupSeparators" Value="True" />
        <Setter Property="GroupSeparatorTemplate" Value="{Binding GroupSeparatorTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter Property="ItemsCountInGroup" Value="1" />
        <Setter Property="GroupSeparatorSize" Value="{Binding View.GroupSeparatorSize, RelativeSource={RelativeSource TemplatedParent}}" />

        <Setter Property="ItemContainerAutoSize" Value="true" />
        <Setter Property="ItemContainerMinHeight" Value="{Binding View.WeekMinHeight, RelativeSource={RelativeSource TemplatedParent}}" />
    </Style>


    <Style x:Key="ResourceHeadersContainerPanel.GroupByDate.Style" BasedOn="{StaticResource ResourceHeadersContainerPanel.GroupByResource.MonthView.Style}" TargetType="dxschp:ResourceHeadersContainerPanel">
        <Setter Property="Orientation" Value="Vertical" />
        <Setter Property="GroupSeparatorTemplate" Value="{Binding ResourceHeaderSeparatorTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter Property="dxschv:HeaderControl.Orientation" Value="Vertical" />
    </Style>

    <Style x:Key="MonthNavigationPanel.GroupByResource.Style" TargetType="dxschp:MonthNavigationPanel">
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="ItemMinSize" Value="0" />
        <Setter Property="AutoSize" Value="True" />
        <Setter Property="AutoSizeMaxViewport" Value="{Binding View.ResourcesPerPage, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemsSource" Value="{Binding VisualData.DayGroups, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ShowGroupSeparators" Value="True" />
        <Setter Property="GroupSeparatorSize" Value="{Binding View.GroupSeparatorSize, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemsCountInGroup" Value="1" />
        <Setter Property="GroupSeparatorTemplate" Value="{StaticResource EmptySeparator.DefaultTemplate}" />
    </Style>
    <Style x:Key="MonthNavigationPanel.GroupByDate.Style" BasedOn="{StaticResource MonthNavigationPanel.GroupByResource.Style}" TargetType="dxschp:MonthNavigationPanel">
        <Setter Property="Orientation" Value="Vertical" />
    </Style>

    <ControlTemplate x:Key="{dxscht:LWKey SchedulerCommon.MonthViewGroupByResourceTemplate}" TargetType="dxschv:MonthViewGroupByResourceControl">
        <Grid>
            <DockPanel>
                <DockPanel
                    x:Name="headersContainer"
                    Margin="0,0,1,0"
                    ClipToBounds="True"
                    DockPanel.Dock="Top">
                    <DockPanel
                        x:Name="resourceHeadersContainer"
                        dxschv:HeaderControl.ShowBottomBorder="False"
                        dxschv:HeaderControl.ShowTopBorder="True"
                        DockPanel.Dock="Top">
                        <ContentPresenter
                            x:Name="resourceHeadersOffset"
                            Width="{DXBinding '@e(scrollContainer).Tag'}"
                            dxschv:HeaderControl.ShowLeftBorder="False"
                            dxschv:HeaderControl.ShowRightBorder="False"
                            ContentTemplate="{TemplateBinding ResourceHeadersCornerTemplate}"
                            DockPanel.Dock="Right"
                            IsHitTestVisible="False"
                            Visibility="Collapsed" />
                        <dxschp:ResourceHeadersContainerPanel
                            x:Name="resourceHeadersPanel"
                            dxschv:HeaderControl.ShowLeftBorder="True"
                            dxschv:HeaderControl.ShowRightBorder="True"
                            FirstItemShowLeftBorder="True"
                            ScrollOffset="{DXBinding '@e(scrollPresenter).HAnimatedOffset'}"
                            Style="{StaticResource ResourceHeadersContainerPanel.GroupByResource.MonthView.Style}" />
                    </DockPanel>
                    <DockPanel
                        x:Name="dateHeadersContainer"
                        dxschv:HeaderControl.ShowBottomBorder="True"
                        dxschv:HeaderControl.ShowTopBorder="True"
                        DockPanel.Dock="Top">
                        <ContentPresenter
                            x:Name="dateHeadersOffset"
                            Width="{DXBinding '@e(scrollContainer).Tag'}"
                            dxschv:HeaderControl.ShowLeftBorder="False"
                            dxschv:HeaderControl.ShowRightBorder="False"
                            ContentTemplate="{TemplateBinding DateHeadersCornerTemplate}"
                            DockPanel.Dock="Right"
                            IsHitTestVisible="False"
                            Visibility="Collapsed" />
                        <dxschp:DateHeadersContainersPanel
                            x:Name="dateHeadersPanel"
                            dxschv:HeaderControl.ShowLeftBorder="False"
                            dxschv:HeaderControl.ShowRightBorder="True"
                            FirstItemContainerFirstItemShowLeftBorder="True"
                            ItemContainerFirstItemShowLeftBorder="True"
                            ScrollOffset="{DXBinding '@e(scrollPresenter).HAnimatedOffset'}"
                            Style="{StaticResource DateHeadersContainersPanel.GroupByResource.MonthView.Style}" />
                    </DockPanel>
                    <DockPanel x:Name="headerAreaSeparatorContainer" DockPanel.Dock="Top">
                        <Decorator
                            x:Name="headerAreaSeparatorOffset"
                            Width="{DXBinding '@e(scrollContainer).Tag'}"
                            DockPanel.Dock="Right"
                            IsHitTestVisible="False"
                            Visibility="Collapsed" />
                        <dxschp:ItemsContainerPanel x:Name="headerAreaSeparator" ScrollOffset="{DXBinding '@e(scrollPresenter).HAnimatedOffset'}" Style="{StaticResource HeaderAreaSeparator.GroupByResource.Style}" />
                    </DockPanel>
                </DockPanel>
                <Grid>
                    <DockPanel x:Name="scrollContainer" Tag="{DXBinding '@e(scrollViewer).VerticalScrollBarActualWidth', FallbackValue=0.0}">
                        <dxschv:SchedulerScrollViewer
                            x:Name="scrollViewer"
                            HScrollSnapping="{DXBinding '@p.View.IsHorizontalScrollSnappingEnabled'}"
                            HorizontalScrollBarControlBoxVisibility="{Binding Path=View.ActualResourceNavigatorVisibility, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            HorizontalScrollBarVisibility="{Binding Path=View.ActualHorizontalScrollBarVisibility, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            IsDeferredVerticalScrollingEnabled="{DXBinding '@p.View.IsDeferredVerticalScrollingEnabled'}"
                            SetHorizontalOffset="{TemplateBinding HorizontalScrollOffset}"
                            SetVerticalOffset="{TemplateBinding VerticalScrollOffset}"
                            ShowScrollTip="True"
                            VScrollSnapping="{DXBinding '@p.View.IsVerticalScrollSnappingEnabled'}"
                            VerticalScrollBarVisibility="{Binding Path=View.ActualVerticalScrollBarVisibility, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                            <dxmvvm:Interaction.Behaviors>
                                <dxmvvm:EventToCommand Command="{Binding VisualData.OnReportExtendBoundaryCommand}" EventName="ReportExtendBoundary" />
                                <dxmvvm:EventToCommand Command="{Binding VisualData.OnReportExtendBoundaryCommand}" EventName="ReportManipulationExtendBoundary" />
                                <dxmvvm:EventToCommand Command="{Binding VisualData.OnZoomGestureCommand}" EventName="ZoomGesture" PassEventArgsToCommand="True" />
                            </dxmvvm:Interaction.Behaviors>
                            <dxschp:ScrollPanelPresenter
                                x:Name="scrollPresenter"
                                Margin="0,0,1,1"
                                HPixelScrolling="{Binding Path=View.IsHorizontalPerPixelScrollingEnabled, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                VPixelScrolling="{Binding Path=View.IsVerticalPerPixelScrollingEnabled, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                <dxschp:ScrollPanelAggregator>
                                    <dxschp:MonthGroupsPanel x:Name="PART_MonthGroupsPanel" dxschp:ScrollPanelAggregator.IsScrollPanel="True" Style="{StaticResource MonthGroupsPanel.GroupByResource.Style}" />
                                    <dxschp:MonthNavigationPanel x:Name="navigationPanel" Style="{StaticResource MonthNavigationPanel.GroupByResource.Style}" />
                                </dxschp:ScrollPanelAggregator>
                            </dxschp:ScrollPanelPresenter>
                            <dxschv:SchedulerScrollViewer.HorizontalScrollBarControlBox>
                                <dxschv:ResourceNavigator
                                    FirstCommand="{DXBinding '@e(scrollViewer).Commands.LeftmostCommand'}"
                                    LastCommand="{DXBinding '@e(scrollViewer).Commands.RightmostCommand'}"
                                    MinusCommand="{DXBinding '@p.Commands.LessResourcesPerPageCommand'}"
                                    NextCommand="{DXBinding '@e(scrollViewer).Commands.RightCommand'}"
                                    NextPageCommand="{DXBinding '@e(scrollViewer).Commands.PageRightCommand'}"
                                    PlusCommand="{DXBinding '@p.Commands.MoreResourcesPerPageCommand'}"
                                    PrevCommand="{DXBinding '@e(scrollViewer).Commands.LeftCommand'}"
                                    PrevPageCommand="{DXBinding '@e(scrollViewer).Commands.PageLeftCommand'}" />
                            </dxschv:SchedulerScrollViewer.HorizontalScrollBarControlBox>
                        </dxschv:SchedulerScrollViewer>
                    </DockPanel>
                    <ContentPresenter ContentTemplate="{TemplateBinding BorderTemplate}" />
                </Grid>
            </DockPanel>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger SourceName="scrollViewer" Property="ComputedVerticalScrollBarVisibility" Value="Visible">
                <Setter TargetName="resourceHeadersOffset" Property="Visibility" Value="Visible" />
                <Setter TargetName="dateHeadersOffset" Property="Visibility" Value="Visible" />
                <Setter TargetName="headerAreaSeparatorOffset" Property="Visibility" Value="Visible" />
            </Trigger>
            <DataTrigger Binding="{Binding View.ShowResourceHeaders, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter TargetName="resourceHeadersContainer" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding View.ShowDayHeaders, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter TargetName="dateHeadersContainer" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="resourceHeadersContainer" Property="dxschv:HeaderControl.ShowBottomBorder" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding View.Scheduler.ActualGroupType, RelativeSource={RelativeSource Self}}" Value="None">
                <Setter TargetName="resourceHeadersContainer" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding View.Scheduler.ShowDateNavigationPanel, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter TargetName="resourceHeadersContainer" Property="dxschv:HeaderControl.ShowTopBorder" Value="False" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding View.Scheduler.ShowDateNavigationPanel, RelativeSource={RelativeSource Self}}" Value="False" />
                    <Condition Binding="{Binding ElementName=resourceHeadersContainer, Path=Visibility}" Value="Collapsed" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="dateHeadersContainer" Property="dxschv:HeaderControl.ShowTopBorder" Value="False" />
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding Source={x:Static dxsch:SchedulerControl.UseClassicStyle}, Mode=OneTime}" Value="False">
                <Setter TargetName="resourceHeadersContainer" Property="dxschv:HeaderControl.ShowTopBorder" Value="True" />
                <Setter TargetName="resourceHeadersPanel" Property="FirstItemShowLeftBorder" Value="True" />
                <Setter TargetName="dateHeadersPanel" Property="FirstItemContainerFirstItemShowLeftBorder" Value="True" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static dxsch:SchedulerControl.UseClassicStyle}, Mode=OneTime}" Value="False" />
                    <Condition Binding="{Binding ElementName=resourceHeadersContainer, Path=Visibility}" Value="Collapsed" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="dateHeadersContainer" Property="dxschv:HeaderControl.ShowTopBorder" Value="True" />
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding Source={x:Static dxsch:SchedulerControl.UseClassicStyle}, Mode=OneTime}" Value="True">
                <Setter TargetName="headersContainer" Property="Margin" Value="0" />
                <Setter TargetName="scrollPresenter" Property="Margin" Value="0" />
            </DataTrigger>

            <DataTrigger Binding="{Binding View.GroupSeparatorSize, RelativeSource={RelativeSource Self}}" Value="0">
                <Setter TargetName="resourceHeadersPanel" Property="FirstItemShowLeftBorder" Value="True" />
                <Setter TargetName="resourceHeadersPanel" Property="dxschv:HeaderControl.ShowLeftBorder" Value="False" />
                <Setter TargetName="dateHeadersPanel" Property="FirstItemContainerFirstItemShowLeftBorder" Value="True" />
                <Setter TargetName="dateHeadersPanel" Property="ItemContainerFirstItemShowLeftBorder" Value="{x:Null}" />
                <Setter TargetName="dateHeadersPanel" Property="dxschv:HeaderControl.ShowLeftBorder" Value="False" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxscht:LWKey SchedulerCommon.MonthViewGroupByDateTemplate}" TargetType="dxschv:MonthViewGroupByDateControl">
        <Grid>
            <DockPanel>
                <DockPanel
                    x:Name="resourceHeadersContainer"
                    Margin="0,0,0,1"
                    Panel.ZIndex="2"
                    dxschv:HeaderControl.ShowBottomBorder="True"
                    dxschv:HeaderControl.ShowTopBorder="False"
                    DockPanel.Dock="Left">
                    <ContentPresenter
                        x:Name="resourceHeadersTopOffset"
                        Height="{DXBinding '@e(dateHeadersContainer).ActualHeight'}"
                        Panel.ZIndex="2"
                        dxschv:HeaderControl.ShowBottomBorder="False"
                        dxschv:HeaderControl.ShowLeftBorder="False"
                        dxschv:HeaderControl.ShowRightBorder="False"
                        dxschv:HeaderControl.ShowTopBorder="False"
                        ContentTemplate="{TemplateBinding ResourceHeadersCornerTemplate}"
                        DockPanel.Dock="Top"
                        IsHitTestVisible="False"
                        Visibility="Visible" />
                    <ContentPresenter
                        x:Name="resourceHeadersBottomOffset"
                        Height="{DXBinding '@e(scrollViewer).HorizontalScrollBarActualHeight'}"
                        Panel.ZIndex="1"
                        dxschv:HeaderControl.ShowLeftBorder="False"
                        dxschv:HeaderControl.ShowRightBorder="False"
                        ContentTemplate="{TemplateBinding ResourceHeadersBottomCornerTemplate}"
                        DockPanel.Dock="Bottom"
                        IsHitTestVisible="False"
                        Visibility="Visible" />
                    <dxschp:ResourceHeadersContainerPanel
                        x:Name="resourceHeadersPanel"
                        Panel.ZIndex="0"
                        dxschv:HeaderControl.ShowLeftBorder="True"
                        dxschv:HeaderControl.ShowRightBorder="True"
                        FirstItemShowRightBorder="True"
                        ScrollOffset="{DXBinding '@e(scrollPresenter).HAnimatedOffset'}"
                        Style="{StaticResource ResourceHeadersContainerPanel.GroupByDate.Style}" />
                </DockPanel>
                <DockPanel
                    x:Name="dateHeadersContainer"
                    Margin="0,0,1,0"
                    Panel.ZIndex="1"
                    dxschv:HeaderControl.ShowBottomBorder="True"
                    dxschv:HeaderControl.ShowTopBorder="False"
                    DockPanel.Dock="Top">
                    <ContentPresenter
                        x:Name="dateHeadersOffset"
                        Width="{DXBinding '@e(scrollContainer).Tag'}"
                        dxschv:HeaderControl.ShowLeftBorder="False"
                        dxschv:HeaderControl.ShowRightBorder="False"
                        ContentTemplate="{TemplateBinding DateHeadersCornerTemplate}"
                        DockPanel.Dock="Right"
                        IsHitTestVisible="False"
                        Visibility="Collapsed" />
                    <dxschp:DateHeadersContainerPanel
                        x:Name="dateHeadersPanel"
                        dxschv:HeaderControl.ShowLeftBorder="False"
                        dxschv:HeaderControl.ShowRightBorder="True"
                        FirstItemShowLeftBorder="True"
                        Style="{StaticResource DateHeadersContainerPanel.GroupByDate.MonthView.Style}" />
                </DockPanel>
                <DockPanel x:Name="headerAreaSeparatorContainer" Margin="0,0,1,0" DockPanel.Dock="Top">
                    <Decorator
                        x:Name="headerAreaSeparatorOffset"
                        Width="{DXBinding '@e(scrollContainer).Tag'}"
                        DockPanel.Dock="Right"
                        IsHitTestVisible="False"
                        Visibility="Collapsed" />
                    <dxschp:ItemsContainerPanel x:Name="headerAreaSeparator" Style="{StaticResource HeaderAreaSeparator.GroupByDate.MonthView.Style}" />
                </DockPanel>
                <Grid>
                    <DockPanel x:Name="scrollContainer" Panel.ZIndex="0" Tag="{Binding ElementName=scrollViewer, Path=VerticalScrollBarActualWidth, FallbackValue=0.0}">
                        <dxschv:SchedulerScrollViewer
                            x:Name="scrollViewer"
                            HScrollSnapping="{DXBinding '@p.View.IsHorizontalScrollSnappingEnabled'}"
                            HorizontalScrollBarControlBoxVisibility="{Binding Path=View.ActualResourceNavigatorVisibility, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            HorizontalScrollBarVisibility="{Binding Path=View.ActualHorizontalScrollBarVisibility, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            IsDeferredVerticalScrollingEnabled="{DXBinding '@p.View.IsDeferredVerticalScrollingEnabled'}"
                            SetHorizontalOffset="{TemplateBinding HorizontalScrollOffset}"
                            SetVerticalOffset="{TemplateBinding VerticalScrollOffset}"
                            ShowScrollTip="True"
                            VScrollSnapping="{DXBinding '@p.View.IsVerticalScrollSnappingEnabled'}"
                            VerticalScrollBarVisibility="{Binding Path=View.ActualVerticalScrollBarVisibility, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                            <dxmvvm:Interaction.Behaviors>
                                <dxmvvm:EventToCommand Command="{Binding VisualData.OnReportExtendBoundaryCommand}" EventName="ReportExtendBoundary" />
                                <dxmvvm:EventToCommand Command="{Binding VisualData.OnZoomGestureCommand}" EventName="ZoomGesture" PassEventArgsToCommand="True" />
                            </dxmvvm:Interaction.Behaviors>
                            <dxschp:ScrollPanelPresenter
                                x:Name="scrollPresenter"
                                Margin="0,0,1,1"
                                AllowHScrollAnimation="True"
                                HPixelScrolling="{Binding Path=View.IsHorizontalPerPixelScrollingEnabled, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                VPixelScrolling="{Binding Path=View.IsVerticalPerPixelScrollingEnabled, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                <dxschp:ScrollPanelPresenter.HScrollAnimation>
                                    <DoubleAnimation Duration="{StaticResource Scheduler.HScrollAnimation.Duration}">
                                        <DoubleAnimation.EasingFunction>
                                            <ExponentialEase EasingMode="EaseIn" Exponent="10" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </dxschp:ScrollPanelPresenter.HScrollAnimation>
                                <dxschp:ScrollPanelAggregator>
                                    <dxschp:MonthGroupsByDatePanel x:Name="PART_MonthGroupsPanel" dxschp:ScrollPanelAggregator.IsScrollPanel="True" Style="{StaticResource MonthGroupsByDatePanel.GroupByDate.Style}" />
                                    <dxschp:MonthNavigationPanel x:Name="navigationPanel" dxschp:ScrollPanelAggregator.InvertScroll="True" Style="{StaticResource MonthNavigationPanel.GroupByDate.Style}" />
                                </dxschp:ScrollPanelAggregator>
                            </dxschp:ScrollPanelPresenter>
                            <dxschv:SchedulerScrollViewer.HorizontalScrollBarControlBox>
                                <dxschv:ResourceNavigator
                                    FirstCommand="{DXBinding '@e(scrollViewer).Commands.LeftmostCommand'}"
                                    LastCommand="{DXBinding '@e(scrollViewer).Commands.RightmostCommand'}"
                                    MinusCommand="{DXBinding '@p.Commands.LessResourcesPerPageCommand'}"
                                    NextCommand="{DXBinding '@e(scrollViewer).Commands.RightCommand'}"
                                    NextPageCommand="{DXBinding '@e(scrollViewer).Commands.PageRightCommand'}"
                                    PlusCommand="{DXBinding '@p.Commands.MoreResourcesPerPageCommand'}"
                                    PrevCommand="{DXBinding '@e(scrollViewer).Commands.LeftCommand'}"
                                    PrevPageCommand="{DXBinding '@e(scrollViewer).Commands.PageLeftCommand'}" />
                            </dxschv:SchedulerScrollViewer.HorizontalScrollBarControlBox>
                        </dxschv:SchedulerScrollViewer>
                    </DockPanel>
                    <ContentPresenter ContentTemplate="{TemplateBinding BorderTemplate}" />
                </Grid>
            </DockPanel>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger SourceName="scrollViewer" Property="ComputedVerticalScrollBarVisibility" Value="Visible">
                <Setter TargetName="dateHeadersOffset" Property="Visibility" Value="Visible" />
                <Setter TargetName="headerAreaSeparatorOffset" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger SourceName="scrollViewer" Property="ComputedHorizontalScrollBarVisibility" Value="Collapsed">
                <Setter TargetName="resourceHeadersBottomOffset" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <DataTrigger Binding="{Binding View.ShowResourceHeaders, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter TargetName="resourceHeadersContainer" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding View.ShowDayHeaders, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter TargetName="dateHeadersContainer" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="resourceHeadersTopOffset" Property="Visibility" Value="Collapsed" />
            </DataTrigger>

            <DataTrigger Binding="{Binding View.Scheduler.ShowDateNavigationPanel, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="dateHeadersContainer" Property="dxschv:HeaderControl.ShowTopBorder" Value="True" />
                <Setter TargetName="resourceHeadersTopOffset" Property="dxschv:HeaderControl.ShowTopBorder" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static dxsch:SchedulerControl.UseClassicStyle}, Mode=OneTime}" Value="False">
                <Setter TargetName="resourceHeadersContainer" Property="dxschv:HeaderControl.ShowTopBorder" Value="True" />
                <Setter TargetName="dateHeadersContainer" Property="dxschv:HeaderControl.ShowTopBorder" Value="True" />
                <Setter TargetName="resourceHeadersTopOffset" Property="dxschv:HeaderControl.ShowTopBorder" Value="True" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Source={x:Static dxsch:SchedulerControl.UseClassicStyle}, Mode=OneTime}" Value="True">
                <Setter TargetName="resourceHeadersContainer" Property="Margin" Value="0" />
                <Setter TargetName="dateHeadersContainer" Property="Margin" Value="0" />
                <Setter TargetName="headerAreaSeparatorContainer" Property="Margin" Value="0" />
                <Setter TargetName="scrollPresenter" Property="Margin" Value="0" />
            </DataTrigger>

            <DataTrigger Binding="{Binding View.GroupSeparatorSize, RelativeSource={RelativeSource Self}}" Value="0">
                <Setter TargetName="resourceHeadersPanel" Property="dxschv:HeaderControl.ShowRightBorder" Value="False" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxscht:LWKey SchedulerCommon.OneMonthViewTemplate}" TargetType="dxschv:OneMonthViewControl">
        <Grid>
            <DockPanel>
                <DockPanel
                    x:Name="headersContainer"
                    Margin="0,0,1,0"
                    ClipToBounds="True"
                    DockPanel.Dock="Top">
                    <DockPanel
                        x:Name="resourceHeadersContainer"
                        dxschv:HeaderControl.ShowBottomBorder="True"
                        dxschv:HeaderControl.ShowTopBorder="False"
                        DockPanel.Dock="Top">
                        <ContentPresenter
                            x:Name="resourceHeadersOffset"
                            Width="{DXBinding '@e(scrollContainer).Tag'}"
                            dxschv:HeaderControl.ShowLeftBorder="False"
                            dxschv:HeaderControl.ShowRightBorder="False"
                            ContentTemplate="{TemplateBinding ResourceHeadersCornerTemplate}"
                            DockPanel.Dock="Right"
                            IsHitTestVisible="False"
                            Visibility="Collapsed" />
                        <dxschp:ResourceHeadersContainerPanel
                            x:Name="resourceHeadersPanel"
                            dxschv:HeaderControl.ShowLeftBorder="True"
                            dxschv:HeaderControl.ShowRightBorder="True"
                            FirstItemShowLeftBorder="False"
                            ScrollOffset="{DXBinding '@e(scrollPresenter).HAnimatedOffset'}"
                            Style="{StaticResource ResourceHeadersContainerPanel.GroupByResource.MonthView.Style}" />
                    </DockPanel>
                    <DockPanel
                        x:Name="dateHeadersContainer"
                        dxschv:HeaderControl.ShowBottomBorder="True"
                        dxschv:HeaderControl.ShowTopBorder="False"
                        DockPanel.Dock="Top">
                        <ContentPresenter
                            x:Name="dateHeadersOffset"
                            Width="{DXBinding '@e(scrollContainer).Tag'}"
                            dxschv:HeaderControl.ShowLeftBorder="False"
                            dxschv:HeaderControl.ShowRightBorder="False"
                            ContentTemplate="{TemplateBinding DateHeadersCornerTemplate}"
                            DockPanel.Dock="Right"
                            IsHitTestVisible="False"
                            Visibility="Collapsed" />
                        <dxschp:OneMonthDateHeadersContainersPanel
                            x:Name="dateHeadersPanel"
                            dxschv:HeaderControl.ShowLeftBorder="False"
                            dxschv:HeaderControl.ShowRightBorder="True"
                            FirstItemContainerFirstItemShowLeftBorder="False"
                            ItemContainerFirstItemShowLeftBorder="True"
                            ScrollOffset="{DXBinding '@e(scrollPresenter).HAnimatedOffset'}"
                            Style="{StaticResource OneMonthDateHeadersContainersPanel.Style}" />
                    </DockPanel>
                    <DockPanel x:Name="headerAreaSeparatorContainer" DockPanel.Dock="Top">
                        <Decorator
                            x:Name="headerAreaSeparatorOffset"
                            Width="{DXBinding '@e(scrollContainer).Tag'}"
                            DockPanel.Dock="Right"
                            IsHitTestVisible="False"
                            Visibility="Collapsed" />
                        <dxschp:ItemsContainerPanel x:Name="headerAreaSeparator" ScrollOffset="{DXBinding '@e(scrollPresenter).HAnimatedOffset'}" Style="{StaticResource HeaderAreaSeparator.GroupByResource.Style}" />
                    </DockPanel>
                </DockPanel>
                <Grid>
                    <DockPanel x:Name="scrollContainer" Tag="{DXBinding '@e(scrollViewer).VerticalScrollBarActualWidth', FallbackValue=0.0}">
                        <dxschv:SchedulerScrollViewer
                            x:Name="scrollViewer"
                            HScrollSnapping="False"
                            HorizontalScrollBarControlBoxVisibility="{Binding Path=View.ActualResourceNavigatorVisibility, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            HorizontalScrollBarVisibility="{Binding Path=View.ActualHorizontalScrollBarVisibility, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            IsDeferredVerticalScrollingEnabled="False"
                            SetHorizontalOffset="{TemplateBinding HorizontalScrollOffset}"
                            SetVerticalOffset="{TemplateBinding VerticalScrollOffset}"
                            ShowScrollTip="True"
                            VScrollSnapping="False"
                            VerticalScrollBarVisibility="{Binding Path=View.ActualVerticalScrollBarVisibility, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                            <dxschp:ScrollPanelPresenterEx
                                x:Name="scrollPresenter"
                                Margin="0,0,1,1"
                                HPixelScrolling="{Binding Path=View.IsHorizontalPerPixelScrollingEnabled, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                VPixelScrolling="{Binding Path=View.IsVerticalPerPixelScrollingEnabled, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                VSmallScrollStep="50"
                                VWheelScrollLines="50">
                                <dxschp:ScrollPanelAggregator>
                                    <dxschp:OneMonthGroupsPanel x:Name="PART_OneMonthGroupsPanel" dxschp:ScrollPanelAggregator.IsScrollPanel="True" Style="{StaticResource OneMonthGroupsPanel.Style}" />
                                </dxschp:ScrollPanelAggregator>
                            </dxschp:ScrollPanelPresenterEx>
                        </dxschv:SchedulerScrollViewer>
                    </DockPanel>
                    <ContentPresenter ContentTemplate="{TemplateBinding BorderTemplate}" />
                </Grid>
            </DockPanel>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger SourceName="scrollViewer" Property="ComputedVerticalScrollBarVisibility" Value="Visible">
                <Setter TargetName="resourceHeadersOffset" Property="Visibility" Value="Visible" />
                <Setter TargetName="dateHeadersOffset" Property="Visibility" Value="Visible" />
                <!--<Setter TargetName="headerAreaSeparatorOffset" Property="Visibility" Value="Visible"/>-->
            </Trigger>
            <DataTrigger Binding="{Binding View.ShowResourceHeaders, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter TargetName="resourceHeadersContainer" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding View.ShowDayHeaders, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter TargetName="dateHeadersContainer" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding View.Scheduler.ActualGroupType, RelativeSource={RelativeSource Self}}" Value="None">
                <Setter TargetName="resourceHeadersContainer" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding View.ViewMode, RelativeSource={RelativeSource Self}}" Value="Standard">
                <Setter TargetName="resourceHeadersContainer" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding View.Scheduler.ShowDateNavigationPanel, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="resourceHeadersContainer" Property="dxschv:HeaderControl.ShowTopBorder" Value="True" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding View.Scheduler.ShowDateNavigationPanel, RelativeSource={RelativeSource Self}}" Value="True" />
                    <Condition Binding="{Binding ElementName=resourceHeadersContainer, Path=Visibility}" Value="Collapsed" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="dateHeadersContainer" Property="dxschv:HeaderControl.ShowTopBorder" Value="True" />
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding Source={x:Static dxsch:SchedulerControl.UseClassicStyle}, Mode=OneTime}" Value="False">
                <Setter TargetName="resourceHeadersContainer" Property="dxschv:HeaderControl.ShowTopBorder" Value="True" />
                <Setter TargetName="resourceHeadersPanel" Property="FirstItemShowLeftBorder" Value="True" />
                <Setter TargetName="dateHeadersPanel" Property="FirstItemContainerFirstItemShowLeftBorder" Value="True" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static dxsch:SchedulerControl.UseClassicStyle}, Mode=OneTime}" Value="False" />
                    <Condition Binding="{Binding ElementName=resourceHeadersContainer, Path=Visibility}" Value="Collapsed" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="dateHeadersContainer" Property="dxschv:HeaderControl.ShowTopBorder" Value="True" />
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding Source={x:Static dxsch:SchedulerControl.UseClassicStyle}, Mode=OneTime}" Value="True">
                <Setter TargetName="headersContainer" Property="Margin" Value="0" />
                <Setter TargetName="scrollPresenter" Property="Margin" Value="0" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxscht:LWKey SchedulerCommon.OneMonthViewGroupByDateTemplate}" TargetType="dxschv:OneMonthViewGroupByDateControl">
        <dxschp:TimelineViewLayoutPanel
            ResourceWidth="30"
            ShowDateHeaders="{Binding View.ShowDayHeaders, RelativeSource={RelativeSource TemplatedParent}}"
            ShowResourceHeaders="{Binding View.ShowResourceHeaders, RelativeSource={RelativeSource TemplatedParent}}"
            View="{TemplateBinding View}">
            <!--
                ResourceWidth="{Binding View.ResourceWidth, RelativeSource={RelativeSource TemplatedParent}}"
                ActualPxViewportWidth ="{Binding VisualData.HorizontalPxViewport, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            -->
            <dxschp:TimelineViewLayoutPanel.ResourceHeadersCorner>
                <ContentPresenter
                    x:Name="resourceHeadersTopOffset"
                    dxschv:HeaderControl.ShowBottomBorder="False"
                    dxschv:HeaderControl.ShowLeftBorder="False"
                    dxschv:HeaderControl.ShowRightBorder="False"
                    dxschv:HeaderControl.ShowTopBorder="False"
                    ContentTemplate="{TemplateBinding ResourceHeadersCornerTemplate}"
                    IsHitTestVisible="False"
                    Visibility="Visible" />
            </dxschp:TimelineViewLayoutPanel.ResourceHeadersCorner>
            <dxschp:TimelineViewLayoutPanel.ResourceHeadersPanel>
                <dxschp:OneMonthByDateResourceHeadersContainersPanel
                    x:Name="resourceHeadersPanel"
                    Margin="0,1"
                    Panel.ZIndex="0"
                    dxschv:HeaderControl.Orientation="Horizontal"
                    dxschv:HeaderControl.ShowBottomBorder="True"
                    dxschv:HeaderControl.ShowLeftBorder="True"
                    dxschv:HeaderControl.ShowRightBorder="True"
                    dxschv:HeaderControl.ShowTopBorder="True"
                    ItemContentTemplate="{Binding View.ResourceHeaderContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                    ItemContentTemplateSelector="{Binding View.ResourceHeaderContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                    ItemsSource="{Binding VisualData.ResourceHeaders, RelativeSource={RelativeSource TemplatedParent}}"
                    MainPanel="{Binding ElementName=PART_MainPanel}"
                    WeekCount="{Binding VisualData.WeeksCount}">
                    <dxschp:OneMonthByDateResourceHeadersContainersPanel.ItemStyle>
                        <Style TargetType="dxschv:ResourceHeaderControl">
                            <Setter Property="Orientation" Value="Vertical" />
                        </Style>
                    </dxschp:OneMonthByDateResourceHeadersContainersPanel.ItemStyle>
                </dxschp:OneMonthByDateResourceHeadersContainersPanel>
            </dxschp:TimelineViewLayoutPanel.ResourceHeadersPanel>
            <dxschp:TimelineViewLayoutPanel.ResourceHeadersBottomCorner>
                <ContentPresenter
                    x:Name="resourceHeadersBottomOffset"
                    dxschv:HeaderControl.ShowLeftBorder="False"
                    dxschv:HeaderControl.ShowRightBorder="False"
                    ContentTemplate="{TemplateBinding ResourceHeadersBottomCornerTemplate}"
                    IsHitTestVisible="False"
                    Visibility="Visible" />
            </dxschp:TimelineViewLayoutPanel.ResourceHeadersBottomCorner>
            <dxschp:TimelineViewLayoutPanel.TimeScaleControl>
                <dxschp:OneMonthDateHeadersContainerPanel
                    x:Name="dateHeadersPanel"
                    dxschv:HeaderControl.ShowLeftBorder="False"
                    dxschv:HeaderControl.ShowRightBorder="True"
                    FirstItemShowLeftBorder="False"
                    Style="{StaticResource OneMonthDateHeadersContainersPanel.GroupByDate.Style}" />
            </dxschp:TimelineViewLayoutPanel.TimeScaleControl>
            <dxschp:TimelineViewLayoutPanel.ScrollViewer>
                <dxschv:SchedulerScrollViewer
                    x:Name="scrollViewer"
                    Margin="0,0,0,1"
                    HorizontalScrollBarVisibility="{Binding Path=View.ActualHorizontalScrollBarVisibility, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                    SetVerticalOffset="{TemplateBinding VerticalScrollOffset}"
                    VScrollSnapping="False"
                    VerticalScrollBarControlBoxVisibility="{Binding Path=View.ActualResourceNavigatorVisibility, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                    VerticalScrollBarVisibility="{Binding Path=View.ActualVerticalScrollBarVisibility, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                    <dxmvvm:Interaction.Behaviors>
                        <!--<dxmvvm:EventToCommand EventName="StartHorizontalScrollThumbTrack" Command="{Binding VisualData.OnStartScrollThumbTrackCommand}"/>
                        <dxmvvm:EventToCommand EventName="EndHorizontalScrollThumbTrack" Command="{Binding VisualData.OnEndScrollThumbTrackCommand}"/>
                        <dxmvvm:EventToCommand EventName="ReportExtendBoundary" Command="{Binding VisualData.OnReportExtendBoundaryCommand}"/>
                        <dxmvvm:EventToCommand EventName="ReportManipulationExtendBoundary" Command="{Binding VisualData.OnReportExtendBoundaryCommand}"/>-->
                        <dxmvvm:EventToCommand Command="{Binding VisualData.OnZoomGestureCommand}" EventName="ZoomGesture" PassEventArgsToCommand="True" />
                    </dxmvvm:Interaction.Behaviors>
                    <dxschp:ScrollPanelPresenterEx
                        x:Name="scrollPresenter"
                        Margin="0,0,1,1"
                        HPixelScrolling="{Binding Path=View.IsHorizontalPerPixelScrollingEnabled, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                        VPixelScrolling="{Binding Path=View.IsVerticalPerPixelScrollingEnabled, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                        VSmallScrollStep="50"
                        VWheelScrollLines="50">
                        <dxschp:ScrollPanelAggregator>
                            <dxschp:OneMonthGroupsByDatePanel x:Name="PART_MainPanel" dxschp:ScrollPanelAggregator.IsScrollPanel="True" Style="{StaticResource OneMonthGroupsByDatePanel.Style}" />
                        </dxschp:ScrollPanelAggregator>
                    </dxschp:ScrollPanelPresenterEx>
                </dxschv:SchedulerScrollViewer>
            </dxschp:TimelineViewLayoutPanel.ScrollViewer>
            <dxschp:TimelineViewLayoutPanel.ContentBorderPresenter>
                <ContentPresenter Margin="0,0,1,0" ContentTemplate="{TemplateBinding StandardBorderTemplate}" />
            </dxschp:TimelineViewLayoutPanel.ContentBorderPresenter>
            <dxschp:TimelineViewLayoutPanel.ResourceBorderPresenter>
                <ContentPresenter Margin="0,1,0,0" ContentTemplate="{TemplateBinding StandardResourcePanelBorderTemplate}" />
            </dxschp:TimelineViewLayoutPanel.ResourceBorderPresenter>
        </dxschp:TimelineViewLayoutPanel>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxscht:LWKey SchedulerCommon.OneMonthViewGroupByResourceTemplate}" TargetType="dxschv:OneMonthViewGroupByResourceControl">
        <Grid>
            <DockPanel>
                <DockPanel
                    x:Name="headersContainer"
                    Margin="0,0,1,0"
                    ClipToBounds="True"
                    DockPanel.Dock="Top">
                    <DockPanel
                        x:Name="resourceHeadersContainer"
                        dxschv:HeaderControl.ShowBottomBorder="False"
                        dxschv:HeaderControl.ShowTopBorder="True"
                        DockPanel.Dock="Top">
                        <ContentPresenter
                            x:Name="resourceHeadersOffset"
                            Width="{DXBinding '@e(scrollContainer).Tag'}"
                            dxschv:HeaderControl.ShowLeftBorder="False"
                            dxschv:HeaderControl.ShowRightBorder="False"
                            ContentTemplate="{TemplateBinding ResourceHeadersCornerTemplate}"
                            DockPanel.Dock="Right"
                            IsHitTestVisible="False"
                            Visibility="Collapsed" />
                        <dxschp:ResourceHeadersContainerPanel
                            x:Name="resourceHeadersPanel"
                            dxschv:HeaderControl.ShowLeftBorder="True"
                            dxschv:HeaderControl.ShowRightBorder="True"
                            FirstItemShowLeftBorder="True"
                            Style="{StaticResource ResourceHeadersContainerPanel.GroupByResource.MonthView.Style}" />
                    </DockPanel>
                    <DockPanel
                        x:Name="dateHeadersContainer"
                        dxschv:HeaderControl.ShowBottomBorder="True"
                        dxschv:HeaderControl.ShowTopBorder="True"
                        DockPanel.Dock="Top">
                        <ContentPresenter
                            x:Name="dateHeadersOffset"
                            Width="{DXBinding '@e(scrollContainer).Tag'}"
                            dxschv:HeaderControl.ShowLeftBorder="False"
                            dxschv:HeaderControl.ShowRightBorder="False"
                            ContentTemplate="{TemplateBinding DateHeadersCornerTemplate}"
                            DockPanel.Dock="Right"
                            IsHitTestVisible="False"
                            Visibility="Collapsed" />
                        <dxschp:OneMonthDateHeadersContainersPanel
                            x:Name="dateHeadersPanel"
                            dxschv:HeaderControl.ShowLeftBorder="False"
                            dxschv:HeaderControl.ShowRightBorder="True"
                            FirstItemContainerFirstItemShowLeftBorder="False"
                            ItemContainerFirstItemShowLeftBorder="True"
                            Style="{StaticResource OneMonthDateHeadersContainersPanel.Style}" />
                        <!--<dxschp:DateHeadersContainersPanel
                            x:Name="dateHeadersPanel" Style="{StaticResource DateHeadersContainersPanel.OneGroupByResource.Style}" ScrollOffset="{DXBinding '@e(scrollPresenter).HAnimatedOffset'}"
                            dxschv:HeaderControl.ShowLeftBorder="False" dxschv:HeaderControl.ShowRightBorder="True"
                            ItemContainerFirstItemShowLeftBorder="True"
                            FirstItemContainerFirstItemShowLeftBorder="True"/>-->
                    </DockPanel>
                    <DockPanel x:Name="headerAreaSeparatorContainer" DockPanel.Dock="Top">
                        <Decorator
                            x:Name="headerAreaSeparatorOffset"
                            Width="{DXBinding '@e(scrollContainer).Tag'}"
                            DockPanel.Dock="Right"
                            IsHitTestVisible="False"
                            Visibility="Collapsed" />
                        <dxschp:ItemsContainerPanel x:Name="headerAreaSeparator" Style="{StaticResource HeaderAreaSeparator.GroupByResource.Style}" />
                    </DockPanel>
                </DockPanel>
                <Grid>
                    <DockPanel x:Name="scrollContainer" Tag="{DXBinding '@e(scrollViewer).VerticalScrollBarActualWidth', FallbackValue=0.0}">
                        <dxschv:SchedulerScrollViewer
                            x:Name="scrollViewer"
                            HScrollSnapping="{DXBinding '@p.View.IsHorizontalScrollSnappingEnabled'}"
                            HorizontalScrollBarControlBoxVisibility="{Binding Path=View.ActualResourceNavigatorVisibility, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            HorizontalScrollBarVisibility="{Binding Path=View.ActualHorizontalScrollBarVisibility, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            IsDeferredVerticalScrollingEnabled="False"
                            SetVerticalOffset="{TemplateBinding VerticalScrollOffset}"
                            ShowScrollTip="True"
                            VScrollSnapping="False"
                            VerticalScrollBarVisibility="{Binding Path=View.ActualVerticalScrollBarVisibility, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                            <dxmvvm:Interaction.Behaviors>
                                <!--<dxmvvm:EventToCommand EventName="ReportExtendBoundary" Command="{Binding VisualData.OnReportExtendBoundaryCommand}"/>
                                <dxmvvm:EventToCommand EventName="ReportManipulationExtendBoundary" Command="{Binding VisualData.OnReportExtendBoundaryCommand}"/>-->
                                <dxmvvm:EventToCommand Command="{Binding VisualData.OnZoomGestureCommand}" EventName="ZoomGesture" PassEventArgsToCommand="True" />
                            </dxmvvm:Interaction.Behaviors>
                            <dxschp:ScrollPanelPresenterEx
                                x:Name="scrollPresenter"
                                Margin="0,0,1,1"
                                HPixelScrolling="{Binding Path=View.IsHorizontalPerPixelScrollingEnabled, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                VPixelScrolling="{Binding Path=View.IsVerticalPerPixelScrollingEnabled, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                VSmallScrollStep="50"
                                VWheelScrollLines="50">
                                <dxschp:ScrollPanelPresenter.ManualHScrollInfo>
                                    <dxschp:ManualScrollInfo Extent="{Binding VisualData.HorizontalScrollExtent}" Viewport="{Binding VisualData.HorizontalScrollViewport}" Offset="{Binding VisualData.HorizontalScrollOffset, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </dxschp:ScrollPanelPresenter.ManualHScrollInfo>
                                <dxschp:ScrollPanelAggregator>
                                    <dxschp:OneMonthResourceGroupsPanel
                                        dxschp:ScrollPanelAggregator.IsScrollPanel="True"
                                        ExpandedIndexes="{Binding VisualData.ExpandedContainers}"
                                        GroupSeparatorTemplate="{Binding GroupSeparatorTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                        ItemMaxSize="{Binding WeekMaxHeight}"
                                        ItemMinSize="{Binding WeekMinHeight}"
                                        ItemsSource="{Binding VisualData.WeekResources}"
                                        Style="{StaticResource OneMonthAppointmentsResourceParentPanel.Style}"
                                        View="{Binding}"
                                        VisualData="{Binding VisualData}" />
                                    <!--<dxschp:MonthNavigationPanel x:Name="navigationPanel" Style="{StaticResource MonthNavigationPanel.GroupByResource.Style}"/>-->
                                </dxschp:ScrollPanelAggregator>
                            </dxschp:ScrollPanelPresenterEx>
                            <dxschv:SchedulerScrollViewer.HorizontalScrollBarControlBox>
                                <dxschv:ResourceNavigator
                                    FirstCommand="{DXBinding '@e(scrollViewer).Commands.LeftmostCommand'}"
                                    LastCommand="{DXBinding '@e(scrollViewer).Commands.RightmostCommand'}"
                                    MinusCommand="{DXBinding '@p.Commands.LessResourcesPerPageCommand'}"
                                    NextCommand="{DXBinding '@e(scrollViewer).Commands.RightCommand'}"
                                    NextPageCommand="{DXBinding '@e(scrollViewer).Commands.PageRightCommand'}"
                                    PlusCommand="{DXBinding '@p.Commands.MoreResourcesPerPageCommand'}"
                                    PrevCommand="{DXBinding '@e(scrollViewer).Commands.LeftCommand'}"
                                    PrevPageCommand="{DXBinding '@e(scrollViewer).Commands.PageLeftCommand'}" />
                            </dxschv:SchedulerScrollViewer.HorizontalScrollBarControlBox>
                        </dxschv:SchedulerScrollViewer>
                    </DockPanel>
                    <ContentPresenter ContentTemplate="{TemplateBinding BorderTemplate}" />
                </Grid>
            </DockPanel>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger SourceName="scrollViewer" Property="ComputedVerticalScrollBarVisibility" Value="Visible">
                <Setter TargetName="resourceHeadersOffset" Property="Visibility" Value="Visible" />
                <Setter TargetName="dateHeadersOffset" Property="Visibility" Value="Visible" />
                <Setter TargetName="headerAreaSeparatorOffset" Property="Visibility" Value="Visible" />
            </Trigger>
            <DataTrigger Binding="{Binding View.ShowResourceHeaders, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter TargetName="resourceHeadersContainer" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding View.ShowDayHeaders, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter TargetName="dateHeadersContainer" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="resourceHeadersContainer" Property="dxschv:HeaderControl.ShowBottomBorder" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding View.Scheduler.ActualGroupType, RelativeSource={RelativeSource Self}}" Value="None">
                <Setter TargetName="resourceHeadersContainer" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding View.Scheduler.ShowDateNavigationPanel, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter TargetName="resourceHeadersContainer" Property="dxschv:HeaderControl.ShowTopBorder" Value="False" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding View.Scheduler.ShowDateNavigationPanel, RelativeSource={RelativeSource Self}}" Value="False" />
                    <Condition Binding="{Binding ElementName=resourceHeadersContainer, Path=Visibility}" Value="Collapsed" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="dateHeadersContainer" Property="dxschv:HeaderControl.ShowTopBorder" Value="False" />
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding Source={x:Static dxsch:SchedulerControl.UseClassicStyle}, Mode=OneTime}" Value="False">
                <Setter TargetName="resourceHeadersContainer" Property="dxschv:HeaderControl.ShowTopBorder" Value="True" />
                <Setter TargetName="resourceHeadersPanel" Property="FirstItemShowLeftBorder" Value="True" />
                <Setter TargetName="dateHeadersPanel" Property="FirstItemContainerFirstItemShowLeftBorder" Value="True" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static dxsch:SchedulerControl.UseClassicStyle}, Mode=OneTime}" Value="False" />
                    <Condition Binding="{Binding ElementName=resourceHeadersContainer, Path=Visibility}" Value="Collapsed" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="dateHeadersContainer" Property="dxschv:HeaderControl.ShowTopBorder" Value="True" />
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding Source={x:Static dxsch:SchedulerControl.UseClassicStyle}, Mode=OneTime}" Value="True">
                <Setter TargetName="headersContainer" Property="Margin" Value="0" />
                <Setter TargetName="scrollPresenter" Property="Margin" Value="0" />
            </DataTrigger>

            <DataTrigger Binding="{Binding View.GroupSeparatorSize, RelativeSource={RelativeSource Self}}" Value="0">
                <Setter TargetName="resourceHeadersPanel" Property="FirstItemShowLeftBorder" Value="True" />
                <Setter TargetName="resourceHeadersPanel" Property="dxschv:HeaderControl.ShowLeftBorder" Value="False" />
                <Setter TargetName="dateHeadersPanel" Property="FirstItemContainerFirstItemShowLeftBorder" Value="True" />
                <Setter TargetName="dateHeadersPanel" Property="ItemContainerFirstItemShowLeftBorder" Value="{x:Null}" />
                <Setter TargetName="dateHeadersPanel" Property="dxschv:HeaderControl.ShowLeftBorder" Value="False" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Views\MonthViewControl.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Views\TimelineViewControl.xaml-->
    <Style x:Key="ResourceHeadersPanel.Style" TargetType="dxschp:ResourceHeadersContainerPanel">
        <Setter Property="Orientation" Value="Vertical" />
        <Setter Property="AutoSize" Value="True" />
        <Setter Property="AutoSizeMaxViewport" Value="{Binding View.ResourcesPerPage, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemsSource" Value="{Binding VisualData.ResourceHeaders, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemStyle" Value="{Binding View.ResourceHeaderStyle, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContentTemplate" Value="{Binding View.ResourceHeaderContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContentTemplateSelector" Value="{Binding View.ResourceHeaderContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ShowGroupSeparators" Value="True" />
        <Setter Property="GroupSeparatorSize" Value="{Binding View.GroupSeparatorSize, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="GroupSeparatorTemplate" Value="{Binding ResourceHeaderSeparatorTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter Property="dxschv:HeaderControl.Orientation" Value="Vertical" />
    </Style>
    <Style x:Key="DateHeadersPanel.Style" TargetType="dxschp:TimelineDateHeadersPanel">
        <Setter Property="Orientation" Value="Vertical" />
        <Setter Property="ItemMinSize" Value="0" />
        <Setter Property="AutoSize" Value="False" />
        <Setter Property="ItemsSource" Value="{Binding VisualData.DateHeaders, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="AllowScroll" Value="False" />
        <Setter Property="ItemStyle" Value="{Binding View.DateHeaderStyle, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContentTemplate" Value="{Binding View.DateHeaderContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContentTemplateSelector" Value="{Binding View.DateHeaderContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
    </Style>
    <Style x:Key="CellsContainersPanel.Style" TargetType="dxschp:TimelineCellsContainersPanel">
        <Setter Property="Orientation" Value="Vertical" />
        <Setter Property="ItemMinSize" Value="0" />
        <Setter Property="AutoSize" Value="True" />
        <Setter Property="AutoSizeMaxViewport" Value="{Binding View.ResourcesPerPage, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemsSource" Value="{Binding VisualData.CellContainers, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ShowGroupSeparators" Value="True" />
        <Setter Property="GroupSeparatorSize" Value="{Binding View.GroupSeparatorSize, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="GroupSeparatorTemplate" Value="{Binding GroupSeparatorTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter Property="ItemsCountInGroup" Value="1" />
        <Setter Property="ItemContainerItemMinSize" Value="0" />
        <Setter Property="ItemContainerOrientation" Value="Horizontal" />
        <Setter Property="ItemContainerAutoSize" Value="True" />
        <Setter Property="ItemContainerAllowHScroll" Value="False" />
        <Setter Property="ItemContainerAllowVScroll" Value="False" />
        <Setter Property="ItemContainerItemStyle" Value="{Binding View.CellStyle, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContainerItemContentTemplate" Value="{Binding View.CellContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContainerItemContentTemplateSelector" Value="{Binding View.CellContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContainerVerticalBorderThickness" Value="{Binding CellVerticalBorderThickness, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContainerHorizontalBorderThickness" Value="{Binding CellHorizontalBorderThickness, RelativeSource={RelativeSource TemplatedParent}}" />
    </Style>
    <Style x:Key="TimelineAutoHeightGroupsPanel.Style" TargetType="dxschp:TimelineAutoHeightGroupsPanel">
        <Setter Property="View" Value="{Binding View, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="VisualData" Value="{Binding VisualData, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemsSource" Value="{Binding VisualData.CellContainers, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemMinSize" Value="{Binding View.ResourceMinHeight, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="AutoSize" Value="True" />
        <Setter Property="AllowDifferentItemSize" Value="True" />
        <Setter Property="ShowGroupSeparators" Value="True" />
        <Setter Property="GroupSeparatorSize" Value="{Binding View.GroupSeparatorSize, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="GroupSeparatorTemplate" Value="{Binding GroupSeparatorTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter Property="ItemContainerAppointmentsContainerStyle" Value="{Binding AppointmentsContainerStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter Property="ItemContainerDragAppointmentsContainerStyle" Value="{Binding DragAppointmentsContainerStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter Property="ItemContainerVerticalBorderThickness" Value="{Binding CellVerticalBorderThickness, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContainerHorizontalBorderThickness" Value="{Binding CellHorizontalBorderThickness, RelativeSource={RelativeSource TemplatedParent}}" />
    </Style>
    <Style x:Key="TimelineStandardModeGroupsPanel.Style" TargetType="dxschp:TimelineStandardModeGroupsPanel">
        <Setter Property="View" Value="{Binding View, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="VisualData" Value="{Binding VisualData, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemsSource" Value="{Binding VisualData.CellContainers, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ExpandedIndexes" Value="{Binding VisualData.ExpandedContainers, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemMinSize" Value="{Binding View.ResourceMinHeight, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemMaxSize" Value="{Binding View.ResourceMaxHeight, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="AutoSize" Value="True" />
        <Setter Property="ItemContainerAppointmentsContainerStyle" Value="{Binding AppointmentsContainerStyle, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContainerDragAppointmentsContainerStyle" Value="{Binding DragAppointmentsContainerStyle, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContainerVerticalBorderThickness" Value="{Binding CellVerticalBorderThickness, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContainerHorizontalBorderThickness" Value="{Binding CellHorizontalBorderThickness, RelativeSource={RelativeSource TemplatedParent}}" />
    </Style>


    <Style x:Key="TimelineAppointmentsContainersPanel.Style" TargetType="dxschp:TimelineAppointmentsContainersPanel">
        <Setter Property="Orientation" Value="Vertical" />
        <Setter Property="ItemMinSize" Value="0" />
        <Setter Property="AutoSize" Value="True" />
        <Setter Property="AutoSizeMaxViewport" Value="{Binding View.ResourcesPerPage, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemsSource" Value="{Binding VisualData.CellContainers, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ShowGroupSeparators" Value="True" />
        <Setter Property="GroupSeparatorSize" Value="{Binding View.GroupSeparatorSize, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="GroupSeparatorTemplate" Value="{StaticResource EmptySeparator.DefaultTemplate}" />
        <Setter Property="ItemsCountInGroup" Value="1" />
        <Setter Property="ItemContainerOrientation" Value="Vertical" />
        <Setter Property="ItemContainerAutoSize" Value="{Binding View.StretchAppointments, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContainerAllowHScroll" Value="False" />
        <Setter Property="ItemContainerAllowVScroll" Value="False" />
        <Setter Property="ItemContainerAllowScroll" Value="False" />
        <Setter Property="ItemContainerColumnsCount" Value="{Binding View.IntervalCount, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContainerItemMinSize" Value="{Binding View.AppointmentMinHeight, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContainerItemStyle" Value="{Binding View.AppointmentStyle, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContainerItemContentTemplate" Value="{Binding View.AppointmentContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContainerItemContentTemplateSelector" Value="{Binding View.AppointmentContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />

        <Setter Property="ItemContainerDeferredRendering" Value="{Binding View.AppointmentsDeferredRendering, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContainerDeferredRenderingRange" Value="{Binding View.AppointmentsDeferredRenderingRange, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContainerIsOpacityAnimationEnabled" Value="{Binding View.IsAppointmentsOpacityAnimationEnabled, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContainerOpacityAnimation" Value="{Binding View.AppointmentsOpacityAnimation, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemStyle" Value="{Binding AppointmentsContainerStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
    </Style>
    <Style x:Key="TimelineDragAppointmentsContainersPanel.Style" TargetType="dxschp:TimelineDragAppointmentsContainersPanel">
        <Setter Property="Orientation" Value="Vertical" />
        <Setter Property="ItemMinSize" Value="0" />
        <Setter Property="AutoSize" Value="True" />
        <Setter Property="AutoSizeMaxViewport" Value="{Binding View.ResourcesPerPage, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemsSource" Value="{Binding VisualData.CellContainers, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ShowGroupSeparators" Value="True" />
        <Setter Property="GroupSeparatorSize" Value="{Binding View.GroupSeparatorSize, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="GroupSeparatorTemplate" Value="{StaticResource EmptySeparator.DefaultTemplate}" />
        <Setter Property="ItemsCountInGroup" Value="1" />
        <Setter Property="ItemContainerOrientation" Value="Vertical" />
        <Setter Property="ItemContainerAutoSize" Value="True" />
        <Setter Property="ItemContainerAllowHScroll" Value="False" />
        <Setter Property="ItemContainerAllowVScroll" Value="False" />
        <Setter Property="ItemContainerAllowScroll" Value="False" />
        <Setter Property="ItemContainerColumnsCount" Value="{Binding View.IntervalCount, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContainerItemMinSize" Value="{Binding View.AppointmentMinHeight, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContainerItemStyle" Value="{Binding View.AppointmentStyle, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContainerItemContentTemplate" Value="{Binding View.AppointmentContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContainerItemContentTemplateSelector" Value="{Binding View.AppointmentContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemStyle" Value="{Binding DragAppointmentsContainerStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
    </Style>
    <Style x:Key="TimelineNavigationPanel.Style" TargetType="dxschp:TimelineNavigationPanel">
        <Setter Property="Orientation" Value="Vertical" />
        <Setter Property="ItemMinSize" Value="0" />
        <Setter Property="AutoSize" Value="True" />
        <Setter Property="AutoSizeMaxViewport" Value="{Binding View.ResourcesPerPage, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemsSource" Value="{Binding VisualData.CellContainers, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ShowGroupSeparators" Value="True" />
        <Setter Property="GroupSeparatorSize" Value="{Binding View.GroupSeparatorSize, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="GroupSeparatorTemplate" Value="{StaticResource EmptySeparator.DefaultTemplate}" />
        <Setter Property="ItemsCountInGroup" Value="1" />
    </Style>
    <Style x:Key="TimelineMoreButtonsPanel.Style" TargetType="dxschp:TimelineMoreButtonsPanel">
        <Setter Property="Orientation" Value="Vertical" />
        <Setter Property="ItemMinSize" Value="0" />
        <Setter Property="AutoSize" Value="True" />
        <Setter Property="AutoSizeMaxViewport" Value="{Binding View.ResourcesPerPage, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemsSource" Value="{Binding VisualData.CellContainers, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ShowGroupSeparators" Value="True" />
        <Setter Property="GroupSeparatorSize" Value="{Binding View.GroupSeparatorSize, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="GroupSeparatorTemplate" Value="{StaticResource EmptySeparator.DefaultTemplate}" />
        <Setter Property="ItemsCountInGroup" Value="1" />
        <Setter Property="ItemContainerItemMinSize" Value="0" />
        <Setter Property="ItemContainerOrientation" Value="Horizontal" />
        <Setter Property="ItemContainerAutoSize" Value="True" />
        <Setter Property="ItemContainerAllowHScroll" Value="False" />
        <Setter Property="ItemContainerAllowVScroll" Value="False" />
    </Style>
    <Style x:Key="TimelineTimeIndicatorContainersPanel.Style" TargetType="dxschp:TimelineTimeIndicatorContainersPanel">
        <Setter Property="dxschp:ScrollPanelAggregator.AllowHScroll" Value="False" />
        <Setter Property="Orientation" Value="Vertical" />
        <Setter Property="ItemMinSize" Value="0" />
        <Setter Property="AutoSize" Value="True" />
        <Setter Property="AutoSizeMaxViewport" Value="{Binding View.ResourcesPerPage, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemsSource" Value="{Binding VisualData.CellContainers, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ShowGroupSeparators" Value="True" />
        <Setter Property="GroupSeparatorSize" Value="{Binding View.GroupSeparatorSize, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="GroupSeparatorTemplate" Value="{StaticResource EmptySeparator.DefaultTemplate}" />
        <Setter Property="ItemsCountInGroup" Value="1" />
        <Setter Property="ItemContainerCellMinSize" Value="0" />
        <Setter Property="ItemContainerOrientation" Value="Horizontal" />
        <Setter Property="ItemContainerCellsAutoSize" Value="True" />
        <Setter Property="ItemContainerCellsCount" Value="{Binding View.IntervalCount, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ItemContainerPositionInCells" Value="{Binding VisualData.CurrentTimePosition, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Visibility" Value="{Binding View.TimeIndicatorVisibility, RelativeSource={RelativeSource TemplatedParent}}" />
    </Style>


    <Style x:Key="TimelineAutoHeightResourceHeadersPanel.Style" BasedOn="{StaticResource ResourceHeadersPanel.Style}" TargetType="dxschp:ResourceHeadersContainerPanel">
        <Setter Property="ItemMinSize" Value="{Binding View.ResourceMinHeight, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="AllowDifferentItemSize" Value="True" />
        <Setter Property="AutoSizeMaxViewport" Value="-1" />
    </Style>

    <ControlTemplate x:Key="{dxscht:LWKey SchedulerCommon.TimelineViewTemplate}" TargetType="dxschv:TimelineViewControl">
        <Grid>
            <DockPanel>
                <DockPanel
                    x:Name="resourceHeadersContainer"
                    Margin="0,0,0,1"
                    Panel.ZIndex="2"
                    dxschv:HeaderControl.ShowBottomBorder="True"
                    dxschv:HeaderControl.ShowTopBorder="False"
                    DockPanel.Dock="Left">
                    <ContentPresenter
                        x:Name="resourceHeadersTopOffset"
                        Height="{DXBinding '@e(dateHeadersContainer).ActualHeight'}"
                        Panel.ZIndex="2"
                        dxschv:HeaderControl.ShowBottomBorder="False"
                        dxschv:HeaderControl.ShowLeftBorder="False"
                        dxschv:HeaderControl.ShowRightBorder="False"
                        dxschv:HeaderControl.ShowTopBorder="False"
                        ContentTemplate="{TemplateBinding ResourceHeadersCornerTemplate}"
                        DockPanel.Dock="Top"
                        IsHitTestVisible="False"
                        Visibility="Visible" />
                    <ContentPresenter
                        x:Name="resourceHeadersBottomOffset"
                        Height="{DXBinding '@e(scrollViewer).HorizontalScrollBarActualHeight'}"
                        Panel.ZIndex="1"
                        dxschv:HeaderControl.ShowLeftBorder="False"
                        dxschv:HeaderControl.ShowRightBorder="False"
                        ContentTemplate="{TemplateBinding ResourceHeadersBottomCornerTemplate}"
                        DockPanel.Dock="Bottom"
                        IsHitTestVisible="False"
                        Visibility="Visible" />
                    <dxschp:ResourceHeadersContainerPanel
                        x:Name="resourceHeadersPanel"
                        Panel.ZIndex="0"
                        dxschv:HeaderControl.ShowLeftBorder="True"
                        dxschv:HeaderControl.ShowRightBorder="False"
                        FirstItemShowRightBorder="True"
                        ScrollOffset="{DXBinding '@e(scrollPresenter).VAnimatedOffset'}"
                        Style="{StaticResource ResourceHeadersPanel.Style}" />
                </DockPanel>
                <DockPanel
                    x:Name="dateHeadersContainer"
                    Margin="0,0,1,0"
                    Panel.ZIndex="1"
                    dxschv:HeaderControl.ShowBottomBorder="True"
                    dxschv:HeaderControl.ShowTopBorder="False"
                    DockPanel.Dock="Top">
                    <ContentPresenter
                        x:Name="dateHeadersOffset"
                        Width="{DXBinding '@e(scrollContainer).Tag'}"
                        dxschv:HeaderControl.ShowLeftBorder="False"
                        dxschv:HeaderControl.ShowRightBorder="False"
                        ContentTemplate="{TemplateBinding DateHeadersCornerTemplate}"
                        DockPanel.Dock="Right"
                        IsHitTestVisible="False"
                        Visibility="Collapsed" />
                    <dxschp:TimelineDateHeadersPanel
                        x:Name="dateHeadersPanel"
                        dxschv:HeaderControl.ShowLeftBorder="False"
                        dxschv:HeaderControl.ShowRightBorder="True"
                        dxschv:HeaderControl.ShowTopBorder="False"
                        FirstColumnItemShowLeftBorder="True"
                        FirstRowItemShowTopBorder="False"
                        Style="{StaticResource DateHeadersPanel.Style}" />
                </DockPanel>
                <Grid>
                    <DockPanel x:Name="scrollContainer" Panel.ZIndex="0" Tag="{Binding ElementName=scrollViewer, Path=VerticalScrollBarActualWidth, FallbackValue=0.0}">
                        <dxschv:SchedulerScrollViewer
                            x:Name="scrollViewer"
                            HorizontalScrollBarVisibility="{Binding Path=View.ActualHorizontalScrollBarVisibility, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            SetVerticalOffset="{TemplateBinding VerticalScrollOffset}"
                            VScrollSnapping="{DXBinding '@p.View.IsVerticalScrollSnappingEnabled'}"
                            VerticalScrollBarControlBoxVisibility="{Binding Path=View.ActualResourceNavigatorVisibility, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            VerticalScrollBarVisibility="{Binding Path=View.ActualVerticalScrollBarVisibility, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                            <dxmvvm:Interaction.Behaviors>
                                <dxmvvm:EventToCommand Command="{Binding VisualData.OnStartScrollThumbTrackCommand}" EventName="StartHorizontalScrollThumbTrack" />
                                <dxmvvm:EventToCommand Command="{Binding VisualData.OnEndScrollThumbTrackCommand}" EventName="EndHorizontalScrollThumbTrack" />
                                <dxmvvm:EventToCommand Command="{Binding VisualData.OnReportExtendBoundaryCommand}" EventName="ReportExtendBoundary" />
                                <dxmvvm:EventToCommand Command="{Binding VisualData.OnReportExtendBoundaryCommand}" EventName="ReportManipulationExtendBoundary" />
                                <dxmvvm:EventToCommand Command="{Binding VisualData.OnZoomGestureCommand}" EventName="ZoomGesture" PassEventArgsToCommand="True" />
                            </dxmvvm:Interaction.Behaviors>
                            <dxschp:ScrollPanelPresenter x:Name="scrollPresenter" Margin="0,0,1,1" VPixelScrolling="{Binding Path=View.IsVerticalPerPixelScrollingEnabled, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                <dxschp:ScrollPanelPresenter.ManualHScrollInfo>
                                    <dxschp:ManualScrollInfo Extent="{Binding VisualData.HorizontalScrollExtent}" Viewport="{Binding VisualData.HorizontalScrollViewport}" Offset="{Binding VisualData.HorizontalScrollOffset, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </dxschp:ScrollPanelPresenter.ManualHScrollInfo>
                                <dxschp:ScrollPanelAggregator>
                                    <dxschp:TimelineCellsDecorationPanel
                                        AllowAlternateDecoration="{Binding View.HighlightNonworkingHours, RelativeSource={RelativeSource TemplatedParent}}"
                                        AllowScroll="True"
                                        AutoSize="True"
                                        AutoSizeMaxViewPort="{Binding View.ResourcesPerPage, RelativeSource={RelativeSource TemplatedParent}}"
                                        Borders="{Binding VisualData.DecorationInfo.Borders, RelativeSource={RelativeSource TemplatedParent}}"
                                        Columns="{Binding VisualData.DecorationInfo.Columns, RelativeSource={RelativeSource TemplatedParent}}"
                                        HorizontalBorderThickness="{TemplateBinding CellHorizontalBorderThickness}"
                                        ItemMinSize="0"
                                        ItemsSource="{Binding VisualData.DecorationInfo.Backgrounds, RelativeSource={RelativeSource TemplatedParent}}"
                                        Rows="{Binding VisualData.DecorationInfo.Rows, RelativeSource={RelativeSource TemplatedParent}}"
                                        StretchDirection="Horizontal"
                                        VerticalBorderThickness="{TemplateBinding CellVerticalBorderThickness}" />
                                    <dxschp:TimelineCellsContainersPanel
                                        x:Name="PART_CellsContainersPanel"
                                        Panel.ZIndex="0"
                                        dxschp:ScrollPanelAggregator.AllowHScroll="False"
                                        dxschp:ScrollPanelAggregator.IsScrollPanel="True"
                                        Style="{StaticResource CellsContainersPanel.Style}" />
                                    <dxschp:TimeRegionDecorationPanel
                                        AllowScroll="True"
                                        AutoSize="True"
                                        AutoSizeMaxViewPort="{Binding View.ResourcesPerPage, RelativeSource={RelativeSource TemplatedParent}}"
                                        Columns="{Binding VisualData.DecorationInfo.Columns, RelativeSource={RelativeSource TemplatedParent}}"
                                        ItemMinSize="0"
                                        ItemTemplate="{Binding View.TimeRegionContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                        ItemTemplateSelector="{Binding View.TimeRegionContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                                        ItemsSource="{Binding VisualData.DecorationInfo.TimeRegions, RelativeSource={RelativeSource TemplatedParent}}"
                                        Rows="{Binding VisualData.DecorationInfo.Rows, RelativeSource={RelativeSource TemplatedParent}}"
                                        StretchDirection="Horizontal" />
                                    <dxschp:TimelineCellsDecorationPanel
                                        AllowScroll="True"
                                        AutoSize="True"
                                        AutoSizeMaxViewPort="{Binding View.ResourcesPerPage, RelativeSource={RelativeSource TemplatedParent}}"
                                        Columns="{Binding VisualData.DecorationInfo.Columns, RelativeSource={RelativeSource TemplatedParent}}"
                                        HorizontalBorderThickness="{TemplateBinding CellHorizontalBorderThickness}"
                                        IsHitTestVisible="False"
                                        ItemMinSize="0"
                                        Rows="{Binding VisualData.DecorationInfo.Rows, RelativeSource={RelativeSource TemplatedParent}}"
                                        Selection="{Binding VisualData.DecorationInfo.Selection, RelativeSource={RelativeSource TemplatedParent}}"
                                        VerticalBorderThickness="{TemplateBinding CellVerticalBorderThickness}" />
                                    <dxschp:TimelineTimeIndicatorContainersPanel x:Name="PART_TimeIndicatorsPanel" Panel.ZIndex="2" Style="{StaticResource TimelineTimeIndicatorContainersPanel.Style}" />
                                    <dxschp:TimelineAppointmentsContainersPanel Panel.ZIndex="4" Style="{StaticResource TimelineAppointmentsContainersPanel.Style}" />
                                    <dxschp:TimelineDragAppointmentsContainersPanel Panel.ZIndex="6" Style="{StaticResource TimelineDragAppointmentsContainersPanel.Style}" />
                                    <dxschp:TimelineNavigationPanel Panel.ZIndex="8" Style="{StaticResource TimelineNavigationPanel.Style}" />
                                    <dxschp:TimelineMoreButtonsPanel Panel.ZIndex="10" Style="{StaticResource TimelineMoreButtonsPanel.Style}" />
                                </dxschp:ScrollPanelAggregator>
                            </dxschp:ScrollPanelPresenter>
                            <dxschv:SchedulerScrollViewer.VerticalScrollBarControlBox>
                                <dxschv:ResourceNavigator
                                    FirstCommand="{DXBinding '@e(scrollViewer).Commands.UpmostCommand'}"
                                    LastCommand="{DXBinding '@e(scrollViewer).Commands.DownmostCommand'}"
                                    MinusCommand="{DXBinding '@p.Commands.LessResourcesPerPageCommand'}"
                                    NextCommand="{DXBinding '@e(scrollViewer).Commands.DownCommand'}"
                                    NextPageCommand="{DXBinding '@e(scrollViewer).Commands.PageDownCommand'}"
                                    Orientation="Vertical"
                                    PlusCommand="{DXBinding '@p.Commands.MoreResourcesPerPageCommand'}"
                                    PrevCommand="{DXBinding '@e(scrollViewer).Commands.UpCommand'}"
                                    PrevPageCommand="{DXBinding '@e(scrollViewer).Commands.PageUpCommand'}" />
                            </dxschv:SchedulerScrollViewer.VerticalScrollBarControlBox>
                        </dxschv:SchedulerScrollViewer>
                    </DockPanel>
                    <ContentPresenter ContentTemplate="{TemplateBinding BorderTemplate}" />
                </Grid>
            </DockPanel>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger SourceName="scrollViewer" Property="ComputedVerticalScrollBarVisibility" Value="Visible">
                <Setter TargetName="dateHeadersOffset" Property="Visibility" Value="Visible" />
            </Trigger>
            <DataTrigger Binding="{Binding View.ShowResourceHeaders, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter TargetName="resourceHeadersContainer" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding View.ShowDayHeaders, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter TargetName="dateHeadersContainer" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="resourceHeadersTopOffset" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding View.Scheduler.ActualGroupType, RelativeSource={RelativeSource Self}}" Value="None">
                <Setter TargetName="resourceHeadersContainer" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding View.ShowTimeIndicatorOverAppointment, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="PART_TimeIndicatorsPanel" Property="Panel.ZIndex" Value="5" />
            </DataTrigger>

            <DataTrigger Binding="{Binding View.Scheduler.ShowDateNavigationPanel, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="dateHeadersContainer" Property="dxschv:HeaderControl.ShowTopBorder" Value="True" />
                <Setter TargetName="resourceHeadersTopOffset" Property="dxschv:HeaderControl.ShowTopBorder" Value="True" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static dxsch:SchedulerControl.UseClassicStyle}, Mode=OneTime}" Value="True" />
                    <Condition Binding="{Binding View.Scheduler.ShowDateNavigationPanel, RelativeSource={RelativeSource Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="dateHeadersPanel" Property="FirstRowItemShowTopBorder" Value="True" />
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static dxsch:SchedulerControl.UseClassicStyle}, Mode=OneTime}" Value="False">
                <Setter TargetName="resourceHeadersContainer" Property="dxschv:HeaderControl.ShowTopBorder" Value="True" />
                <Setter TargetName="dateHeadersContainer" Property="dxschv:HeaderControl.ShowTopBorder" Value="True" />
                <Setter TargetName="dateHeadersPanel" Property="FirstRowItemShowTopBorder" Value="True" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Source={x:Static dxsch:SchedulerControl.UseClassicStyle}, Mode=OneTime}" Value="True">
                <Setter TargetName="resourceHeadersContainer" Property="Margin" Value="0" />
                <Setter TargetName="dateHeadersContainer" Property="Margin" Value="0" />
                <Setter TargetName="scrollPresenter" Property="Margin" Value="0" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxscht:LWKey SchedulerCommon.TimelineViewAutoHeightTemplate}" TargetType="dxschv:TimelineViewControl">
        <Grid>
            <DockPanel>
                <DockPanel
                    x:Name="resourceHeadersContainer"
                    Margin="0,0,0,1"
                    Panel.ZIndex="2"
                    dxschv:HeaderControl.ShowBottomBorder="True"
                    dxschv:HeaderControl.ShowTopBorder="False"
                    DockPanel.Dock="Left">
                    <ContentPresenter
                        x:Name="resourceHeadersTopOffset"
                        Height="{DXBinding '@e(dateHeadersContainer).ActualHeight'}"
                        Panel.ZIndex="2"
                        dxschv:HeaderControl.ShowBottomBorder="False"
                        dxschv:HeaderControl.ShowLeftBorder="False"
                        dxschv:HeaderControl.ShowRightBorder="False"
                        dxschv:HeaderControl.ShowTopBorder="False"
                        ContentTemplate="{TemplateBinding ResourceHeadersCornerTemplate}"
                        DockPanel.Dock="Top"
                        IsHitTestVisible="False"
                        Visibility="Visible" />
                    <ContentPresenter
                        x:Name="resourceHeadersBottomOffset"
                        Height="{DXBinding '@e(scrollViewer).HorizontalScrollBarActualHeight'}"
                        Panel.ZIndex="1"
                        dxschv:HeaderControl.ShowLeftBorder="False"
                        dxschv:HeaderControl.ShowRightBorder="False"
                        ContentTemplate="{TemplateBinding ResourceHeadersBottomCornerTemplate}"
                        DockPanel.Dock="Bottom"
                        IsHitTestVisible="False"
                        Visibility="Visible" />
                    <dxschp:TimelineAutoHeightResourceHeadersContainersPanel
                        x:Name="resourceHeadersPanel"
                        Panel.ZIndex="0"
                        dxschv:HeaderControl.ShowLeftBorder="True"
                        dxschv:HeaderControl.ShowRightBorder="True"
                        MainPanel="{Binding ElementName=PART_MainPanel}"
                        Style="{StaticResource TimelineAutoHeightResourceHeadersPanel.Style}" />
                </DockPanel>
                <DockPanel
                    x:Name="dateHeadersContainer"
                    Margin="0,0,1,0"
                    Panel.ZIndex="1"
                    dxschv:HeaderControl.ShowBottomBorder="True"
                    dxschv:HeaderControl.ShowTopBorder="False"
                    DockPanel.Dock="Top">
                    <ContentPresenter
                        x:Name="dateHeadersOffset"
                        Width="{DXBinding '@e(scrollContainer).Tag'}"
                        dxschv:HeaderControl.ShowLeftBorder="False"
                        dxschv:HeaderControl.ShowRightBorder="False"
                        ContentTemplate="{TemplateBinding DateHeadersCornerTemplate}"
                        DockPanel.Dock="Right"
                        IsHitTestVisible="False"
                        Visibility="Collapsed" />
                    <dxschp:TimelineDateHeadersPanel
                        x:Name="dateHeadersPanel"
                        dxschv:HeaderControl.ShowLeftBorder="False"
                        dxschv:HeaderControl.ShowRightBorder="True"
                        dxschv:HeaderControl.ShowTopBorder="False"
                        FirstColumnItemShowLeftBorder="True"
                        FirstRowItemShowTopBorder="False"
                        Style="{StaticResource DateHeadersPanel.Style}" />
                </DockPanel>
                <Grid>
                    <DockPanel x:Name="scrollContainer" Panel.ZIndex="0" Tag="{Binding ElementName=scrollViewer, Path=VerticalScrollBarActualWidth, FallbackValue=0.0}">
                        <dxschv:SchedulerScrollViewer
                            x:Name="scrollViewer"
                            HorizontalScrollBarVisibility="{Binding Path=View.ActualHorizontalScrollBarVisibility, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            SetVerticalOffset="{TemplateBinding VerticalScrollOffset}"
                            VScrollSnapping="{DXBinding '@p.View.IsVerticalScrollSnappingEnabled'}"
                            VerticalScrollBarControlBoxVisibility="{Binding Path=View.ActualResourceNavigatorVisibility, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            VerticalScrollBarVisibility="{Binding Path=View.ActualVerticalScrollBarVisibility, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                            <dxmvvm:Interaction.Behaviors>
                                <dxmvvm:EventToCommand Command="{Binding VisualData.OnStartScrollThumbTrackCommand}" EventName="StartHorizontalScrollThumbTrack" />
                                <dxmvvm:EventToCommand Command="{Binding VisualData.OnEndScrollThumbTrackCommand}" EventName="EndHorizontalScrollThumbTrack" />
                                <dxmvvm:EventToCommand Command="{Binding VisualData.OnReportExtendBoundaryCommand}" EventName="ReportExtendBoundary" />
                                <dxmvvm:EventToCommand Command="{Binding VisualData.OnReportExtendBoundaryCommand}" EventName="ReportManipulationExtendBoundary" />
                                <dxmvvm:EventToCommand Command="{Binding VisualData.OnZoomGestureCommand}" EventName="ZoomGesture" PassEventArgsToCommand="True" />
                            </dxmvvm:Interaction.Behaviors>
                            <dxschp:ScrollPanelPresenter x:Name="scrollPresenter" Margin="0,0,1,1" VPixelScrolling="{Binding Path=View.IsVerticalPerPixelScrollingEnabled, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                <dxschp:ScrollPanelPresenter.ManualHScrollInfo>
                                    <dxschp:ManualScrollInfo Extent="{Binding VisualData.HorizontalScrollExtent}" Viewport="{Binding VisualData.HorizontalScrollViewport}" Offset="{Binding VisualData.HorizontalScrollOffset, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </dxschp:ScrollPanelPresenter.ManualHScrollInfo>
                                <dxschp:ScrollPanelAggregator>
                                    <dxschp:TimelineAutoHeightGroupsPanel x:Name="PART_MainPanel" dxschp:ScrollPanelAggregator.IsScrollPanel="True" Style="{StaticResource TimelineAutoHeightGroupsPanel.Style}" />
                                </dxschp:ScrollPanelAggregator>
                            </dxschp:ScrollPanelPresenter>
                            <dxschv:SchedulerScrollViewer.VerticalScrollBarControlBox>
                                <dxschv:ResourceNavigator
                                    FirstCommand="{DXBinding '@e(scrollViewer).Commands.UpmostCommand'}"
                                    LastCommand="{DXBinding '@e(scrollViewer).Commands.DownmostCommand'}"
                                    NextCommand="{DXBinding '@e(scrollViewer).Commands.DownCommand'}"
                                    NextPageCommand="{DXBinding '@e(scrollViewer).Commands.PageDownCommand'}"
                                    Orientation="Vertical"
                                    PrevCommand="{DXBinding '@e(scrollViewer).Commands.UpCommand'}"
                                    PrevPageCommand="{DXBinding '@e(scrollViewer).Commands.PageUpCommand'}" />
                            </dxschv:SchedulerScrollViewer.VerticalScrollBarControlBox>
                        </dxschv:SchedulerScrollViewer>
                    </DockPanel>
                    <ContentPresenter ContentTemplate="{TemplateBinding BorderTemplate}" />
                </Grid>
            </DockPanel>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger SourceName="scrollViewer" Property="ComputedVerticalScrollBarVisibility" Value="Visible">
                <Setter TargetName="dateHeadersOffset" Property="Visibility" Value="Visible" />
            </Trigger>
            <DataTrigger Binding="{Binding View.ShowResourceHeaders, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter TargetName="resourceHeadersContainer" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding View.ShowDayHeaders, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter TargetName="dateHeadersContainer" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="resourceHeadersTopOffset" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding View.Scheduler.ActualGroupType, RelativeSource={RelativeSource Self}}" Value="None">
                <Setter TargetName="resourceHeadersContainer" Property="Visibility" Value="Collapsed" />
            </DataTrigger>

            <DataTrigger Binding="{Binding View.Scheduler.ShowDateNavigationPanel, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="dateHeadersContainer" Property="dxschv:HeaderControl.ShowTopBorder" Value="True" />
                <Setter TargetName="resourceHeadersTopOffset" Property="dxschv:HeaderControl.ShowTopBorder" Value="True" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static dxsch:SchedulerControl.UseClassicStyle}, Mode=OneTime}" Value="True" />
                    <Condition Binding="{Binding View.Scheduler.ShowDateNavigationPanel, RelativeSource={RelativeSource Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="dateHeadersPanel" Property="FirstRowItemShowTopBorder" Value="True" />
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static dxsch:SchedulerControl.UseClassicStyle}, Mode=OneTime}" Value="False">
                <Setter TargetName="resourceHeadersContainer" Property="dxschv:HeaderControl.ShowTopBorder" Value="True" />
                <Setter TargetName="dateHeadersContainer" Property="dxschv:HeaderControl.ShowTopBorder" Value="True" />
                <Setter TargetName="dateHeadersPanel" Property="FirstRowItemShowTopBorder" Value="True" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Source={x:Static dxsch:SchedulerControl.UseClassicStyle}, Mode=OneTime}" Value="True">
                <Setter TargetName="resourceHeadersContainer" Property="Margin" Value="0" />
                <Setter TargetName="dateHeadersContainer" Property="Margin" Value="0" />
                <Setter TargetName="scrollPresenter" Property="Margin" Value="0" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxscht:LWKey SchedulerCommon.TimelineViewStandardModeTemplate}" TargetType="dxschv:TimelineViewControl">
        <dxschp:TimelineViewLayoutPanel
            ActualPxViewportWidth="{Binding VisualData.HorizontalPxViewport, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            ResourceWidth="{Binding View.ResourceWidth, RelativeSource={RelativeSource TemplatedParent}}"
            ShowDateHeaders="{Binding View.ShowDayHeaders, RelativeSource={RelativeSource TemplatedParent}}"
            ShowResourceHeaders="{Binding View.ShowResourceHeaders, RelativeSource={RelativeSource TemplatedParent}}"
            View="{TemplateBinding View}">
            <dxschp:TimelineViewLayoutPanel.ResourceHeadersCorner>
                <ContentPresenter
                    x:Name="resourceHeadersTopOffset"
                    dxschv:HeaderControl.ShowBottomBorder="False"
                    dxschv:HeaderControl.ShowLeftBorder="False"
                    dxschv:HeaderControl.ShowRightBorder="False"
                    dxschv:HeaderControl.ShowTopBorder="False"
                    ContentTemplate="{TemplateBinding ResourceHeadersCornerTemplate}"
                    IsHitTestVisible="False"
                    Visibility="Visible" />
            </dxschp:TimelineViewLayoutPanel.ResourceHeadersCorner>
            <dxschp:TimelineViewLayoutPanel.ResourceHeadersPanel>
                <dxschp:StandardTimelineResourceHeadersContainersPanel
                    x:Name="resourceHeadersPanel"
                    Margin="0,0,0,1"
                    Panel.ZIndex="0"
                    dxschv:HeaderControl.Orientation="Horizontal"
                    dxschv:HeaderControl.ShowBottomBorder="True"
                    dxschv:HeaderControl.ShowLeftBorder="True"
                    dxschv:HeaderControl.ShowRightBorder="True"
                    dxschv:HeaderControl.ShowTopBorder="True"
                    ItemContentTemplate="{Binding View.ResourceHeaderContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                    ItemContentTemplateSelector="{Binding View.ResourceHeaderContentTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                    ItemStyle="{Binding View.ResourceHeaderStyle, RelativeSource={RelativeSource TemplatedParent}}"
                    ItemsSource="{Binding VisualData.ResourceHeaders, RelativeSource={RelativeSource TemplatedParent}}"
                    MainPanel="{Binding ElementName=PART_MainPanel}" />
            </dxschp:TimelineViewLayoutPanel.ResourceHeadersPanel>
            <dxschp:TimelineViewLayoutPanel.ResourceHeadersBottomCorner>
                <ContentPresenter
                    x:Name="resourceHeadersBottomOffset"
                    dxschv:HeaderControl.ShowLeftBorder="False"
                    dxschv:HeaderControl.ShowRightBorder="False"
                    ContentTemplate="{TemplateBinding ResourceHeadersBottomCornerTemplate}"
                    IsHitTestVisible="False"
                    Visibility="Visible" />
            </dxschp:TimelineViewLayoutPanel.ResourceHeadersBottomCorner>
            <dxschp:TimelineViewLayoutPanel.TimeScaleControl>
                <dxschp:TimeScalesPanel
                    Margin="0,0,1,0"
                    AllowDifferentItemSize="True"
                    ItemContainerChildClippingMode="ClipToViewport"
                    ItemContainerFirstDayOfWeek="{Binding View.Scheduler.FirstDayOfWeek, RelativeSource={RelativeSource TemplatedParent}}"
                    ItemContainerInterval="{Binding View.VisualData.VisibleInterval, RelativeSource={RelativeSource TemplatedParent}}"
                    ItemContainerItemContentTemplate="{Binding DateHeaderContentTemplate}"
                    ItemContainerItemContentTemplateSelector="{Binding DateHeaderContentTemplateSelector}"
                    ItemContainerItemMinWidth="0"
                    ItemContainerItemStyle="{Binding DateHeaderStyle}"
                    ItemContainerOrientation="Horizontal"
                    ItemContainerScaleUnit="{Binding View.VisualData.ScaleUnit, RelativeSource={RelativeSource TemplatedParent}}"
                    ItemContainerSetOffset="{Binding View.VisualData.ViewportInterval.Start, RelativeSource={RelativeSource TemplatedParent}}"
                    ItemContainerSnapToCellsMode="Never"
                    ItemContainerSplitByRows="False"
                    ItemContainerStretchMode="None"
                    ItemContainerUnitCount="{Binding View.VisualData.UnitCount, RelativeSource={RelativeSource TemplatedParent}}"
                    ItemContainerZoom="{Binding View.Zoom, RelativeSource={RelativeSource TemplatedParent}}"
                    ItemsSource="{Binding View.VisualData.DateHeaders, RelativeSource={RelativeSource TemplatedParent}}"
                    Orientation="Vertical" />
            </dxschp:TimelineViewLayoutPanel.TimeScaleControl>
            <dxschp:TimelineViewLayoutPanel.ScrollViewer>
                <dxschv:SchedulerScrollViewer
                    x:Name="scrollViewer"
                    HorizontalScrollBarVisibility="{Binding Path=View.ActualHorizontalScrollBarVisibility, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                    SetVerticalOffset="{TemplateBinding VerticalScrollOffset}"
                    VScrollSnapping="{Binding View.IsVerticalScrollSnappingEnabled, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                    VerticalScrollBarControlBoxVisibility="{Binding Path=View.ActualResourceNavigatorVisibility, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                    VerticalScrollBarVisibility="{Binding Path=View.ActualVerticalScrollBarVisibility, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                    <dxmvvm:Interaction.Behaviors>
                        <!--<dxmvvm:EventToCommand EventName="StartHorizontalScrollThumbTrack" Command="{Binding VisualData.OnStartScrollThumbTrackCommand}"/>
                        <dxmvvm:EventToCommand EventName="EndHorizontalScrollThumbTrack" Command="{Binding VisualData.OnEndScrollThumbTrackCommand}"/>
                        <dxmvvm:EventToCommand EventName="ReportExtendBoundary" Command="{Binding VisualData.OnReportExtendBoundaryCommand}"/>
                        <dxmvvm:EventToCommand EventName="ReportManipulationExtendBoundary" Command="{Binding VisualData.OnReportExtendBoundaryCommand}"/>-->
                        <dxmvvm:EventToCommand Command="{Binding VisualData.OnZoomGestureCommand}" EventName="ZoomGesture" PassEventArgsToCommand="True" />
                    </dxmvvm:Interaction.Behaviors>
                    <dxschp:ScrollPanelPresenterEx
                        x:Name="scrollPresenter"
                        Margin="0,0,1,1"
                        VPixelScrolling="True"
                        VSmallScrollStep="50"
                        VWheelScrollLines="50">
                        <dxschp:ScrollPanelPresenter.ManualHScrollInfo>
                            <dxschp:ManualScrollInfo Extent="{Binding VisualData.HorizontalScrollExtent}" Viewport="{Binding VisualData.HorizontalScrollViewport}" Offset="{Binding VisualData.HorizontalScrollOffset, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </dxschp:ScrollPanelPresenter.ManualHScrollInfo>
                        <dxschp:ScrollPanelAggregator>
                            <dxschp:TimelineStandardModeGroupsPanel x:Name="PART_MainPanel" dxschp:ScrollPanelAggregator.IsScrollPanel="True" Style="{StaticResource TimelineStandardModeGroupsPanel.Style}" />
                        </dxschp:ScrollPanelAggregator>
                    </dxschp:ScrollPanelPresenterEx>
                </dxschv:SchedulerScrollViewer>
            </dxschp:TimelineViewLayoutPanel.ScrollViewer>
            <dxschp:TimelineViewLayoutPanel.ContentBorderPresenter>
                <ContentPresenter Margin="0,0,1,0" ContentTemplate="{TemplateBinding StandardBorderTemplate}" />
            </dxschp:TimelineViewLayoutPanel.ContentBorderPresenter>
            <dxschp:TimelineViewLayoutPanel.ResourceBorderPresenter>
                <ContentPresenter ContentTemplate="{TemplateBinding StandardResourcePanelBorderTemplate}" />
            </dxschp:TimelineViewLayoutPanel.ResourceBorderPresenter>
        </dxschp:TimelineViewLayoutPanel>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Views\TimelineViewControl.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Windows\AppointmentWindowRibbon.xaml-->
    <Style x:Key="Window.BarItem.BaseStyle" TargetType="dxb:BarItem">
        <Setter Property="Tag" Value="{Binding Path=(dxsch:SchedulerControl.Scheduler), RelativeSource={RelativeSource Self}}" />
    </Style>


    <Style x:Key="{dxscht:LWKey AppointmentWindowCommandBar.RibbonControl}" TargetType="{x:Type dxr:RibbonControl}">
        <Setter Property="RibbonStyle" Value="Office2019" />
        <Setter Property="ShowApplicationButton" Value="False" />
    </Style>
    <Style x:Key="{dxscht:LWKey AppointmentWindowCommandBar.Categories_Default}" TargetType="{x:Type dxr:RibbonDefaultPageCategory}" />
    <Style x:Key="{dxscht:LWKey AppointmentWindowCommandBar.Pages_Appointment}" TargetType="{x:Type dxr:RibbonPage}">
        <Setter Property="Caption" Value="{dxschc:SchedulerLocalizer StringId=Caption_PageAppointment}" />
    </Style>

    <Style x:Key="{dxscht:LWKey AppointmentWindowCommandBar.Groups_Actions}" TargetType="{x:Type dxr:RibbonPageGroup}">
        <Setter Property="Caption" Value="{dxschc:SchedulerLocalizer StringId=PageCaption_Actions}" />
    </Style>
    <Style x:Key="{dxscht:LWKey AppointmentWindowCommandBar.Groups_Options}" TargetType="{x:Type dxr:RibbonPageGroup}">
        <Setter Property="Caption" Value="{dxschc:SchedulerLocalizer StringId=PageCaption_Options}" />
    </Style>

    <Style x:Key="{dxscht:LWKey AppointmentWindowCommandBar.Items_Actions_Save}" BasedOn="{StaticResource Window.BarItem.BaseStyle}" TargetType="dxb:BarItem">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=ButtonCaption_Save}" />
        <Setter Property="Command" Value="{Binding SaveAppointmentCommand}" />
        <Setter Property="Glyph" Value="{dx:ImageSelector Source={dx:DXImage Image=Save_16x16.png}, SvgSource={dxschc:SchedulerSvgImage Path='Save/Save.svg'}}" />
        <Setter Property="LargeGlyph" Value="{dx:ImageSelector Source={dx:DXImage Image=Save_32x32.png}, SvgSource={dxschc:SchedulerSvgImage Path='Save/Save.svg'}}" />
    </Style>
    <Style x:Key="{dxscht:LWKey AppointmentWindowCommandBar.Items_Actions_SaveAndClose}" BasedOn="{StaticResource Window.BarItem.BaseStyle}" TargetType="dxb:BarItem">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=ButtonCaption_SaveAndClose}" />
        <Setter Property="Command" Value="{Binding SaveAndCloseAppointmentCommand}" />
        <Setter Property="Glyph" Value="{dx:ImageSelector Source={dx:DXImage Image=SaveAndClose_16x16.png}, SvgSource={dxschc:SchedulerSvgImage Path='Save/SaveAndClose.svg'}}" />
        <Setter Property="LargeGlyph" Value="{dx:ImageSelector Source={dx:DXImage Image=SaveAndClose_32x32.png}, SvgSource={dxschc:SchedulerSvgImage Path='Save/SaveAndClose.svg'}}" />
    </Style>
    <Style x:Key="{dxscht:LWKey AppointmentWindowCommandBar.Items_Actions_Previous}" BasedOn="{StaticResource Window.BarItem.BaseStyle}" TargetType="dxb:BarItem">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=ButtonCaption_Previous}" />
        <Setter Property="Command" Value="{Binding PreviousCommand}" />
        <Setter Property="Glyph" Value="{dx:ImageSelector Source={dx:DXImage Image=MoveUp_16x16.png}, SvgSource={dxschc:SchedulerSvgImage Path='Arrows/MoveUp.svg'}}" />
        <Setter Property="LargeGlyph" Value="{dx:ImageSelector Source={dx:DXImage Image=MoveUp_32x32.png}, SvgSource={dxschc:SchedulerSvgImage Path='Arrows/MoveUp.svg'}}" />
    </Style>
    <Style x:Key="{dxscht:LWKey AppointmentWindowCommandBar.Items_Actions_Next}" BasedOn="{StaticResource Window.BarItem.BaseStyle}" TargetType="dxb:BarItem">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=ButtonCaption_Next}" />
        <Setter Property="Command" Value="{Binding NextCommand}" />
        <Setter Property="Glyph" Value="{dx:ImageSelector Source={dx:DXImage Image=MoveDown_16x16.png}, SvgSource={dxschc:SchedulerSvgImage Path='Arrows/MoveDown.svg'}}" />
        <Setter Property="LargeGlyph" Value="{dx:ImageSelector Source={dx:DXImage Image=MoveDown_32x32.png}, SvgSource={dxschc:SchedulerSvgImage Path='Arrows/MoveDown.svg'}}" />
    </Style>
    <Style x:Key="{dxscht:LWKey AppointmentWindowCommandBar.Items_Actions_Delete}" BasedOn="{StaticResource Window.BarItem.BaseStyle}" TargetType="dxb:BarItem">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=ButtonCaption_Delete}" />
        <Setter Property="Command" Value="{Binding RemoveAppointmentCommand}" />
        <Setter Property="Glyph" Value="{dx:ImageSelector Source={dx:DXImage Image=Delete_16x16.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/Delete.svg'}}" />
        <Setter Property="LargeGlyph" Value="{dx:ImageSelector Source={dx:DXImage Image=Delete_32x32.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/Delete.svg'}}" />
    </Style>

    <Style x:Key="{dxscht:LWKey AppointmentWindowCommandBar.Items_Options_Label}" x:Shared="False" BasedOn="{StaticResource Window.BarItem.BaseStyle}" TargetType="dxb:BarEditItem">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=AppointmentWindow_Label}" />
        <Setter Property="EditWidth" Value="150" />
        <Setter Property="EditValue" Value="{Binding Label, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="IsReadOnly" Value="{Binding IsReadOnly}" />
        <Setter Property="EditSettings">
            <Setter.Value>
                <dxsche:AppointmentLabelEditSettings Scheduler="{Binding Path='(dxsch:SchedulerControl.Scheduler)', RelativeSource={RelativeSource Self}}" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxscht:LWKey AppointmentWindowCommandBar.Items_Options_Status}" x:Shared="False" BasedOn="{StaticResource Window.BarItem.BaseStyle}" TargetType="dxb:BarEditItem">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=AppointmentWindow_ShowTimeAs}" />
        <Setter Property="EditWidth" Value="150" />
        <Setter Property="EditValue" Value="{Binding Status, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="IsReadOnly" Value="{Binding IsReadOnly}" />
        <Setter Property="EditSettings">
            <Setter.Value>
                <dxsche:AppointmentStatusEditSettings Scheduler="{Binding Path='(dxsch:SchedulerControl.Scheduler)', RelativeSource={RelativeSource Self}}" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxscht:LWKey AppointmentWindowCommandBar.Items_Options_Resources}" x:Shared="False" BasedOn="{StaticResource Window.BarItem.BaseStyle}" TargetType="dxb:BarEditItem">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=AppointmentWindow_Resource}" />
        <Setter Property="EditWidth" Value="150" />
        <Setter Property="EditValue" Value="{Binding Resources, Mode=TwoWay, Converter={dxschc:ResourcesEditValueConverter}, UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="IsReadOnly" Value="{Binding IsReadOnly}" />
        <Setter Property="IsVisible" Value="{Binding ResourceSharing}" />
        <Setter Property="IsEnabled" Value="{DXBinding '!IsReadOnly'}" />
        <Setter Property="EditSettings">
            <Setter.Value>
                <dxsche:AppointmentResourcesEditSettings Scheduler="{Binding Path='(dxsch:SchedulerControl.Scheduler)', RelativeSource={RelativeSource Self}}" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxscht:LWKey AppointmentWindowCommandBar.Items_Options_Resource}" x:Shared="False" BasedOn="{StaticResource Window.BarItem.BaseStyle}" TargetType="dxb:BarEditItem">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=AppointmentWindow_Resource}" />
        <Setter Property="EditWidth" Value="150" />
        <Setter Property="EditValue" Value="{Binding Resource, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="IsVisible" Value="{DXBinding '!ResourceSharing'}" />
        <Setter Property="IsEnabled" Value="{DXBinding '!IsReadOnly'}" />
        <Setter Property="EditSettings">
            <Setter.Value>
                <dxsche:AppointmentResourceEditSettings Scheduler="{Binding Path='(dxsch:SchedulerControl.Scheduler)', RelativeSource={RelativeSource Self}}" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{dxscht:LWKey AppointmentWindowCommandBar.Items_Options_Reminder}" x:Shared="False" BasedOn="{StaticResource Window.BarItem.BaseStyle}" TargetType="dxb:BarEditItem">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=AppointmentWindow_Reminder}" />
        <Setter Property="EditWidth" Value="150" />
        <Setter Property="EditValue" Value="{Binding ReminderSpan, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
        <Setter Property="IsVisible" Value="{DXBinding '@s.Tag.AllowReminders'}" />
        <Setter Property="IsReadOnly" Value="{Binding IsReadOnly}" />
        <Setter Property="EditSettings">
            <Setter.Value>
                <dxe:ComboBoxEditSettings
                    AutoComplete="True"
                    IsTextEditable="True"
                    ItemsSource="{Binding ReminderSpans}"
                    ValidateOnEnterKeyPressed="True"
                    ValidateOnTextInput="False" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxscht:LWKey AppointmentWindowCommandBar.Items_Options_Recurrence}" BasedOn="{StaticResource Window.BarItem.BaseStyle}" TargetType="dxb:BarCheckItem">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=ButtonCaption_Recurrence}" />
        <Setter Property="Command" Value="{Binding EditRecurrenceCommand, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="IsChecked" Value="{Binding IsAppointmentTypePattern}" />
        <Setter Property="IsEnabled" Value="{Binding IsRecurrenceButtonEnabled}" />
        <Setter Property="Glyph" Value="{dx:ImageSelector Source={dx:DXImage Image=Recurrence_16x16.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/Recurrence.svg'}}" />
        <Setter Property="LargeGlyph" Value="{dx:ImageSelector Source={dx:DXImage Image=Recurrence_32x32.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/Recurrence.svg'}}" />
        <Setter Property="RibbonStyle" Value="Large" />
    </Style>
    <Style x:Key="{dxscht:LWKey AppointmentWindowCommandBar.Items_Options_TimeZones}" BasedOn="{StaticResource Window.BarItem.BaseStyle}" TargetType="dxb:BarCheckItem">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=ButtonCaption_TimeZones}" />
        <Setter Property="IsChecked" Value="{Binding IsTimeZoneButtonChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="IsVisible" Value="{Binding IsTimeZoneButtonVisible}" />
        <Setter Property="IsEnabled" Value="{Binding IsTimeZoneButtonEnabled}" />
        <Setter Property="Glyph" Value="{dx:ImageSelector Source={dx:DXImage Image=BOLocalization_16x16.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/TimeZones.svg'}}" />
        <Setter Property="LargeGlyph" Value="{dx:ImageSelector Source={dx:DXImage Image=BOLocalization_32x32.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/TimeZones.svg'}}" />
        <Setter Property="RibbonStyle" Value="Large" />
    </Style>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Windows\AppointmentWindowRibbon.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Windows\AppointmentWindowStyles.xaml-->
    <Style x:Key="AppointmentWindowThemeKey_WindowBase" TargetType="Window">
        <Setter Property="Width" Value="800" />
        <Setter Property="Height" Value="450" />
        <Setter Property="MinWidth" Value="400" />
        <Setter Property="MinHeight" Value="350" />
        <Setter Property="Title" Value="{Binding Title}" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Width" Value="1000" />
                <Setter Property="Height" Value="700" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                <Setter Property="Width" Value="1000" />
                <Setter Property="Height" Value="700" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxscht:LWKey AppointmentWindow.Window}" BasedOn="{StaticResource AppointmentWindowThemeKey_WindowBase}" TargetType="Window" />
    <Style x:Key="{dxscht:LWKey AppointmentWindow.ThemedWindow}" BasedOn="{StaticResource AppointmentWindowThemeKey_WindowBase}" TargetType="dx:ThemedWindow" />


    <Style x:Key="{dxscht:LWKey AppointmentWindow.LayoutItem_Subject}" TargetType="dxlc:LayoutItem">
        <Setter Property="Label" Value="{dxschc:SchedulerLocalizer StringId=AppointmentWindow_Subject}" />
    </Style>
    <Style x:Key="{dxscht:LWKey AppointmentWindow.Editor_Subject}" TargetType="dxe:TextEdit">
        <Setter Property="EditValue" Value="{Binding Subject, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="IsReadOnly" Value="{Binding IsReadOnly}" />
    </Style>

    <Style x:Key="{dxscht:LWKey AppointmentWindow.LayoutItem_Location}" TargetType="dxlc:LayoutItem">
        <Setter Property="Label" Value="{dxschc:SchedulerLocalizer StringId=AppointmentWindow_Location}" />
    </Style>
    <Style x:Key="{dxscht:LWKey AppointmentWindow.Editor_Location}" TargetType="dxe:TextEdit">
        <Setter Property="EditValue" Value="{Binding Location, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="IsReadOnly" Value="{Binding IsReadOnly}" />
    </Style>

    <Style x:Key="{dxscht:LWKey AppointmentWindow.LayoutItem_StartTime}" TargetType="dxlc:LayoutItem">
        <Setter Property="Label" Value="{dxschc:SchedulerLocalizer StringId=AppointmentWindow_StartTime}" />
        <Setter Property="IsEnabled" Value="{DXBinding '!IsAppointmentTypePattern or IsNewAppointment'}" />
    </Style>
    <Style x:Key="{dxscht:LWKey AppointmentWindow.Editor_StartDate}" TargetType="dxe:DateEdit">
        <Setter Property="EditValue" Value="{Binding TimeInterval.StartDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
        <Setter Property="IsReadOnly" Value="{Binding IsReadOnly}" />
    </Style>
    <Style x:Key="{dxscht:LWKey AppointmentWindow.Editor_StartTime}" TargetType="dxe:TextEdit">
        <Setter Property="EditValue" Value="{Binding TimeInterval.StartTime, Converter={dxschc:TimeSpanToDateTimeConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
        <Setter Property="IsReadOnly" Value="{Binding IsReadOnly}" />
        <Setter Property="IsEnabled" Value="{DXBinding '!AllDay'}" />
        <Setter Property="MaskType" Value="DateTime" />
        <Setter Property="Mask" Value="{DXBinding '$globalization:CultureInfo.CurrentCulture.DateTimeFormat.LongTimePattern'}" />
        <Setter Property="DisplayFormatString" Value="{DXBinding '$globalization:CultureInfo.CurrentCulture.DateTimeFormat.LongTimePattern'}" />
    </Style>
    <Style x:Key="{dxscht:LWKey AppointmentWindow.Editor_AllDay}" TargetType="dxe:CheckEdit">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=AppointmentWindow_AllDayEvent}" />
        <Setter Property="EditValue" Value="{Binding AllDay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="IsReadOnly" Value="{Binding IsReadOnly}" />
    </Style>

    <Style x:Key="{dxscht:LWKey AppointmentWindow.LayoutItem_EndTime}" TargetType="dxlc:LayoutItem">
        <Setter Property="Label" Value="{dxschc:SchedulerLocalizer StringId=AppointmentWindow_EndTime}" />
        <Setter Property="IsEnabled" Value="{DXBinding '!IsAppointmentTypePattern or IsNewAppointment'}" />
    </Style>
    <Style x:Key="{dxscht:LWKey AppointmentWindow.Editor_EndDate}" TargetType="dxe:DateEdit">
        <Setter Property="EditValue" Value="{Binding TimeInterval.EndDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
        <Setter Property="IsReadOnly" Value="{Binding IsReadOnly}" />
    </Style>
    <Style x:Key="{dxscht:LWKey AppointmentWindow.Editor_EndTime}" TargetType="dxe:TextEdit">
        <Setter Property="EditValue" Value="{Binding TimeInterval.EndTime, Converter={dxschc:TimeSpanToDateTimeConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
        <Setter Property="IsReadOnly" Value="{Binding IsReadOnly}" />
        <Setter Property="IsEnabled" Value="{DXBinding '!AllDay'}" />
        <Setter Property="MaskType" Value="DateTime" />
        <Setter Property="Mask" Value="{DXBinding '$globalization:CultureInfo.CurrentCulture.DateTimeFormat.LongTimePattern'}" />
        <Setter Property="DisplayFormatString" Value="{DXBinding '$globalization:CultureInfo.CurrentCulture.DateTimeFormat.LongTimePattern'}" />
    </Style>
    <Style x:Key="{dxscht:LWKey AppointmentWindow.Editor_TimeZone}" TargetType="dxsche:TimeZoneEdit">
        <Setter Property="EditValue" Value="{Binding TimeInterval.TimeZone, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="IsReadOnly" Value="{Binding IsReadOnly}" />
        <Setter Property="IsEnabled" Value="{DXBinding '!AllDay and !IsAppointmentRecurring'}" />
        <Setter Property="Visibility" Value="{DXBinding 'IsTimeZoneButtonChecked and IsTimeZoneButtonVisible', Converter={dxmvvm:BooleanToVisibilityConverter}}" />
    </Style>

    <Style x:Key="{dxscht:LWKey AppointmentWindow.LayoutItem_Description}" TargetType="dxlc:LayoutItem">
        <Setter Property="VerticalAlignment" Value="Stretch" />
    </Style>
    <Style x:Key="{dxscht:LWKey AppointmentWindow.Editor_Description}" TargetType="dxe:TextEdit">
        <Setter Property="EditValue" Value="{Binding Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="IsReadOnly" Value="{Binding IsReadOnly}" />
        <Setter Property="AcceptsReturn" Value="True" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
    </Style>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Windows\AppointmentWindowStyles.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Windows\DeleteOccurrenceWindowStyles.xaml-->
    <Style x:Key="DeleteOccurrenceWindowThemeKey_WindowBase" TargetType="Window">
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="SizeToContent" Value="Height" />
        <Setter Property="Title" Value="{dxschc:SchedulerLocalizer StringId=Caption_DeleteRecurrentApt}" />
        <Setter Property="Width" Value="450" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Width" Value="800" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                <Setter Property="Width" Value="800" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxscht:LWKey DeleteOccurrenceWindow.Window}" BasedOn="{StaticResource DeleteOccurrenceWindowThemeKey_WindowBase}" TargetType="dx:DXDialogWindow">
        <Setter Property="ShowIcon" Value="False" />
    </Style>
    <Style x:Key="{dxscht:LWKey DeleteOccurrenceWindow.ThemedWindow}" BasedOn="{StaticResource DeleteOccurrenceWindowThemeKey_WindowBase}" TargetType="dx:ThemedWindow">
        <Setter Property="ShowIcon" Value="False" />
    </Style>

    <Style x:Key="{dxscht:LWKey DeleteOccurrenceWindow.Header_Image}" TargetType="Image">
        <Setter Property="Stretch" Value="None" />
        <Setter Property="Source" Value="{dx:ImageSelector Source={dx:DXImage Image=Warning_32x32.png}, SvgSource={dxschc:SchedulerSvgImage Path='Status/Warning.svg'}}" />
    </Style>
    <Style x:Key="{dxscht:LWKey DeleteOccurrenceWindow.Header_Message}" TargetType="TextBlock">
        <Setter Property="Text" Value="{Binding Message}" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style x:Key="{dxscht:LWKey DeleteOccurrenceWindow.RadioButton_DeleteOccurrence}" TargetType="RadioButton">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=DeleteOccurrenceWindow_DeleteOccurrence}" />
        <Setter Property="IsChecked" Value="{DXBinding '!DeleteSeries', BackExpr='DeleteSeries=!@v', Mode=TwoWay}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>
    <Style x:Key="{dxscht:LWKey DeleteOccurrenceWindow.RadioButton_DeleteSeries}" TargetType="RadioButton">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=DeleteOccurrenceWindow_DeleteSeries}" />
        <Setter Property="IsChecked" Value="{Binding DeleteSeries, Mode=TwoWay}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style x:Key="{dxscht:LWKey DeleteOccurrenceWindow.Button_Ok}" TargetType="dx:DialogButton">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=ButtonCaption_OK}" />
        <Setter Property="Command" Value="{Binding DeleteCommand}" />
        <Setter Property="IsDefault" Value="True" />
        <Setter Property="DialogResult" Value="OK" />
        <Setter Property="MinWidth" Value="65" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinWidth" Value="130" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                <Setter Property="MinWidth" Value="130" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxscht:LWKey DeleteOccurrenceWindow.Button_Cancel}" TargetType="dx:DialogButton">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=ButtonCaption_Cancel}" />
        <Setter Property="IsCancel" Value="True" />
        <Setter Property="DialogResult" Value="Cancel" />
        <Setter Property="MinWidth" Value="65" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinWidth" Value="130" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                <Setter Property="MinWidth" Value="130" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxscht:LWKey DeleteOccurrenceWindow.ThemedWindowButton_Ok}" TargetType="dx:ThemedWindowDialogButton">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=ButtonCaption_OK}" />
        <Setter Property="IsDefault" Value="True" />
        <Setter Property="DialogResult" Value="OK" />
        <Setter Property="MinWidth" Value="65" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinWidth" Value="130" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                <Setter Property="MinWidth" Value="130" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxscht:LWKey DeleteOccurrenceWindow.ThemedWindowButton_Cancel}" TargetType="dx:ThemedWindowDialogButton">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=ButtonCaption_Cancel}" />
        <Setter Property="IsCancel" Value="True" />
        <Setter Property="DialogResult" Value="Cancel" />
        <Setter Property="MinWidth" Value="65" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinWidth" Value="130" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                <Setter Property="MinWidth" Value="130" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Windows\DeleteOccurrenceWindowStyles.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Windows\EditOccurrenceWindowStyles.xaml-->
    <Style x:Key="EditOccurrenceWindowThemeKey_WindowBase" TargetType="Window">
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="SizeToContent" Value="Height" />
        <Setter Property="Title" Value="{dxschc:SchedulerLocalizer StringId=Caption_OpenRecurrentApt}" />
        <Setter Property="Width" Value="450" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Width" Value="800" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                <Setter Property="Width" Value="800" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxscht:LWKey EditOccurrenceWindow.Window}" BasedOn="{StaticResource EditOccurrenceWindowThemeKey_WindowBase}" TargetType="dx:DXDialogWindow">
        <Setter Property="ShowIcon" Value="False" />
    </Style>
    <Style x:Key="{dxscht:LWKey EditOccurrenceWindow.ThemedWindow}" BasedOn="{StaticResource EditOccurrenceWindowThemeKey_WindowBase}" TargetType="dx:ThemedWindow">
        <Setter Property="ShowIcon" Value="False" />
    </Style>

    <Style x:Key="{dxscht:LWKey EditOccurrenceWindow.Header_Image}" TargetType="Image">
        <Setter Property="Stretch" Value="None" />
        <Setter Property="Source" Value="{dx:ImageSelector Source={dx:DXImage Image=Warning_32x32.png}, SvgSource={dxschc:SchedulerSvgImage Path='Status/Warning.svg'}}" />
    </Style>
    <Style x:Key="{dxscht:LWKey EditOccurrenceWindow.Header_Message}" TargetType="TextBlock">
        <Setter Property="Text" Value="{dxschc:SchedulerLocalizer StringId=EditOccurrenceWindow_EditRecurrentAppointmentMessage}" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style x:Key="{dxscht:LWKey EditOccurrenceWindow.RadioButton_EditOccurrence}" TargetType="RadioButton">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=EditOccurrenceWindow_EditOccurrence}" />
        <Setter Property="IsChecked" Value="True" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>
    <Style x:Key="{dxscht:LWKey EditOccurrenceWindow.RadioButton_EditSeries}" TargetType="RadioButton">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=EditOccurrenceWindow_EditSeries}" />
        <Setter Property="IsChecked" Value="{Binding EditSeries, Mode=TwoWay}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style x:Key="{dxscht:LWKey EditOccurrenceWindow.Button_Ok}" TargetType="dx:DialogButton">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=ButtonCaption_OK}" />
        <Setter Property="IsDefault" Value="True" />
        <Setter Property="DialogResult" Value="OK" />
        <Setter Property="MinWidth" Value="65" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinWidth" Value="130" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                <Setter Property="MinWidth" Value="130" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxscht:LWKey EditOccurrenceWindow.Button_Cancel}" TargetType="dx:DialogButton">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=ButtonCaption_Cancel}" />
        <Setter Property="IsCancel" Value="True" />
        <Setter Property="DialogResult" Value="Cancel" />
        <Setter Property="MinWidth" Value="65" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinWidth" Value="130" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                <Setter Property="MinWidth" Value="130" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxscht:LWKey EditOccurrenceWindow.ThemedWindowButton_Ok}" TargetType="dx:ThemedWindowDialogButton">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=ButtonCaption_OK}" />
        <Setter Property="IsDefault" Value="True" />
        <Setter Property="DialogResult" Value="OK" />
        <Setter Property="MinWidth" Value="65" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinWidth" Value="130" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                <Setter Property="MinWidth" Value="130" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxscht:LWKey EditOccurrenceWindow.ThemedWindowButton_Cancel}" TargetType="dx:ThemedWindowDialogButton">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=ButtonCaption_Cancel}" />
        <Setter Property="IsCancel" Value="True" />
        <Setter Property="DialogResult" Value="Cancel" />
        <Setter Property="MinWidth" Value="65" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinWidth" Value="130" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                <Setter Property="MinWidth" Value="130" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Windows\EditOccurrenceWindowStyles.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Windows\GotoDateWindowStyles.xaml-->
    <Style x:Key="GotoDateWindowThemeKey_WindowBase" TargetType="Window">
        <Setter Property="Title" Value="{dxschc:SchedulerLocalizer StringId=Caption_GotoDate}" />
        <Setter Property="Width" Value="320" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="SizeToContent" Value="Height" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Width" Value="500" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                <Setter Property="Width" Value="500" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxscht:LWKey GotoDateWindow.Window}" BasedOn="{StaticResource GotoDateWindowThemeKey_WindowBase}" TargetType="dx:DXDialogWindow" />
    <Style x:Key="{dxscht:LWKey GotoDateWindow.ThemedWindow}" BasedOn="{StaticResource GotoDateWindowThemeKey_WindowBase}" TargetType="dx:ThemedWindow" />

    <Style x:Key="{dxscht:LWKey GotoDateWindow.LayoutItem_Date}" TargetType="dxlc:LayoutItem">
        <Setter Property="Label" Value="{dxschc:SchedulerLocalizer StringId=GotoDateWindow_Date}" />
    </Style>
    <Style x:Key="{dxscht:LWKey GotoDateWindow.Editor_Date}" x:Shared="False" TargetType="dxe:DateEdit">
        <Style.Resources>
            <Style TargetType="dxe:DateNavigator">
                <Setter Property="dxsch:SchedulerControl.Scheduler" Value="{Binding Path='(dxe:BaseEdit.OwnerEdit).(dxsch:SchedulerControl.Scheduler)', RelativeSource={RelativeSource Mode=Self}}" />
                <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <ContentControl>
                                <dxschc:DateNavigatorCustomTodayBehavior Scheduler="{Binding Path='AssociatedObject.(dxsch:SchedulerControl.Scheduler)', RelativeSource={RelativeSource Mode=Self}}" />
                            </ContentControl>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
        <Setter Property="EditValue" Value="{Binding Date, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
    </Style>

    <Style x:Key="{dxscht:LWKey GotoDateWindow.LayoutItem_ShowIn}" TargetType="dxlc:LayoutItem">
        <Setter Property="Label" Value="{dxschc:SchedulerLocalizer StringId=GotoDateWindow_ShowIn}" />
    </Style>
    <Style x:Key="{dxscht:LWKey GotoDateWindow.Editor_ShowIn}" TargetType="dxe:ComboBoxEdit">
        <Setter Property="EditValue" Value="{Binding View, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="IsTextEditable" Value="False" />
        <Setter Property="DisplayMember" Value="Caption" />
        <Setter Property="ItemsSource" Value="{Binding Views}" />
    </Style>

    <Style x:Key="{dxscht:LWKey GotoDateWindow.Button_Ok}" TargetType="dx:DialogButton">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=ButtonCaption_OK}" />
        <Setter Property="Command" Value="{Binding GoToDateCommand}" />
        <Setter Property="IsDefault" Value="True" />
        <Setter Property="DialogResult" Value="OK" />
    </Style>
    <Style x:Key="{dxscht:LWKey GotoDateWindow.Button_Cancel}" TargetType="dx:DialogButton">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=ButtonCaption_Cancel}" />
        <Setter Property="IsCancel" Value="True" />
        <Setter Property="DialogResult" Value="Cancel" />
    </Style>
    <Style x:Key="{dxscht:LWKey GotoDateWindow.ThemedWindowButton_Ok}" TargetType="dx:ThemedWindowDialogButton">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=ButtonCaption_OK}" />
        <Setter Property="Command" Value="{Binding GoToDateCommand}" />
        <Setter Property="IsDefault" Value="True" />
        <Setter Property="DialogResult" Value="OK" />
    </Style>
    <Style x:Key="{dxscht:LWKey GotoDateWindow.ThemedWindowButton_Cancel}" TargetType="dx:ThemedWindowDialogButton">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=ButtonCaption_Cancel}" />
        <Setter Property="IsCancel" Value="True" />
        <Setter Property="DialogResult" Value="Cancel" />
    </Style>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Windows\GotoDateWindowStyles.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Windows\RecurrenceWindowStyles.xaml-->
    <Style x:Key="LayoutItem.LabelStyle" TargetType="dxlc:LayoutItemLabel">
        <Setter Property="Margin" Value="0,0,5,0" />
    </Style>
    <Style x:Key="recurrenceInfoControlStyle" TargetType="dxsche:RecurrenceInfoControlBase">
        <Setter Property="RecurrenceInfo" Value="{Binding RecurrenceInfo}" />
        <Style.Triggers>
            <Trigger Property="Visibility" Value="Collapsed">
                <Setter Property="RecurrenceInfo" Value="{x:Null}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="RecurrenceWindowThemeKey_WindowBase" TargetType="Window">
        <Setter Property="Width" Value="565" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="ShowInTaskbar" Value="False" />
        <Setter Property="SizeToContent" Value="Height" />
        <Setter Property="Title" Value="{dxschc:SchedulerLocalizer StringId=RecurrenceWindow_Title}" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Width" Value="800" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                <Setter Property="Width" Value="800" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxscht:LWKey RecurrenceWindow.Window}" BasedOn="{StaticResource RecurrenceWindowThemeKey_WindowBase}" TargetType="dx:DXDialogWindow">
        <Setter Property="ShowIcon" Value="False" />
    </Style>
    <Style x:Key="{dxscht:LWKey RecurrenceWindow.ThemedWindow}" BasedOn="{StaticResource RecurrenceWindowThemeKey_WindowBase}" TargetType="dx:ThemedWindow">
        <Setter Property="ShowIcon" Value="False" />
    </Style>


    <Style x:Key="{dxscht:LWKey RecurrenceWindow.GroupBox_Appointment}" TargetType="GroupBox">
        <Setter Property="Header" Value="{dxschc:SchedulerLocalizer StringId=RecurrenceWindow_AppointmentTime}" />
    </Style>
    <Style x:Key="{dxscht:LWKey RecurrenceWindow.LayoutItem_Start}" TargetType="dxlc:LayoutItem">
        <Setter Property="Label" Value="{dxschc:SchedulerLocalizer StringId=RecurrenceWindow_Start}" />
        <Setter Property="LabelStyle" Value="{StaticResource LayoutItem.LabelStyle}" />
    </Style>
    <Style x:Key="{dxscht:LWKey RecurrenceWindow.Editor_Start}" TargetType="dxe:TextEdit">
        <Setter Property="InvalidValueBehavior" Value="AllowLeaveEditor" />
        <Setter Property="Mask" Value="t" />
        <Setter Property="MaskUseAsDisplayFormat" Value="True" />
        <Setter Property="MaskType" Value="DateTime" />
        <Setter Property="EditValue" Value="{Binding Start, UpdateSourceTrigger=PropertyChanged}" />
    </Style>

    <Style x:Key="{dxscht:LWKey RecurrenceWindow.LayoutItem_End}" TargetType="dxlc:LayoutItem">
        <Setter Property="Label" Value="{dxschc:SchedulerLocalizer StringId=RecurrenceWindow_End}" />
        <Setter Property="LabelStyle" Value="{StaticResource LayoutItem.LabelStyle}" />
    </Style>
    <Style x:Key="{dxscht:LWKey RecurrenceWindow.Editor_End}" TargetType="dxe:TextEdit">
        <Setter Property="InvalidValueBehavior" Value="AllowLeaveEditor" />
        <Setter Property="Mask" Value="t" />
        <Setter Property="MaskUseAsDisplayFormat" Value="True" />
        <Setter Property="MaskType" Value="DateTime" />
        <Setter Property="EditValue" Value="{Binding End, UpdateSourceTrigger=PropertyChanged}" />
    </Style>

    <Style x:Key="{dxscht:LWKey RecurrenceWindow.LayoutItem_Duration}" TargetType="dxlc:LayoutItem">
        <Setter Property="Label" Value="{dxschc:SchedulerLocalizer StringId=RecurrenceWindow_Duration}" />
        <Setter Property="LabelStyle" Value="{StaticResource LayoutItem.LabelStyle}" />
    </Style>
    <Style x:Key="{dxscht:LWKey RecurrenceWindow.Editor_Duration}" TargetType="dxsche:DurationEdit">
        <Setter Property="InvalidValueBehavior" Value="AllowLeaveEditor" />
        <Setter Property="EditValue" Value="{Binding Duration, Converter={dxschc:TimeSpanToStringConverter}, UpdateSourceTrigger=PropertyChanged}" />
    </Style>

    <Style x:Key="{dxscht:LWKey RecurrenceWindow.GroupBox_RecurrencePattern}" TargetType="GroupBox">
        <Setter Property="Header" Value="{dxschc:SchedulerLocalizer StringId=RecurrenceWindow_RecurrencePattern}" />
    </Style>
    <Style x:Key="{dxscht:LWKey RecurrenceWindow.Editor_RecurrenceType}" TargetType="dxsche:RecurrenceTypeControl">
        <Setter Property="RecurrenceTypes" Value="{Binding AvailableRecurrenceTypes}" />
        <Setter Property="RecurrenceType" Value="{Binding RecurrenceInfo.Type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
    </Style>
    <Style x:Key="{dxscht:LWKey RecurrenceWindow.Editor_DailyRecurrence}" BasedOn="{StaticResource recurrenceInfoControlStyle}" TargetType="dxsche:DailyRecurrenceControl">
        <Setter Property="Visibility" Value="{Binding RecurrenceInfo.Type, Converter={dxschc:RecurrenceTypeToVisibilityConverter VisibleValue=Daily}}" />
    </Style>
    <Style x:Key="{dxscht:LWKey RecurrenceWindow.Editor_WeeklyRecurrence}" BasedOn="{StaticResource recurrenceInfoControlStyle}" TargetType="dxsche:WeeklyRecurrenceControl">
        <Setter Property="Visibility" Value="{Binding RecurrenceInfo.Type, Converter={dxschc:RecurrenceTypeToVisibilityConverter VisibleValue=Weekly}}" />
        <Setter Property="FirstDayOfWeek" Value="{Binding FirstDayOfWeek}" />
    </Style>
    <Style x:Key="{dxscht:LWKey RecurrenceWindow.Editor_MonthlyRecurrence}" BasedOn="{StaticResource recurrenceInfoControlStyle}" TargetType="dxsche:MonthlyRecurrenceControl">
        <Setter Property="Visibility" Value="{Binding RecurrenceInfo.Type, Converter={dxschc:RecurrenceTypeToVisibilityConverter VisibleValue=Monthly}}" />
    </Style>
    <Style x:Key="{dxscht:LWKey RecurrenceWindow.Editor_YearlyRecurrence}" BasedOn="{StaticResource recurrenceInfoControlStyle}" TargetType="dxsche:YearlyRecurrenceControl">
        <Setter Property="Visibility" Value="{Binding RecurrenceInfo.Type, Converter={dxschc:RecurrenceTypeToVisibilityConverter VisibleValue=Yearly}}" />
    </Style>

    <Style x:Key="{dxscht:LWKey RecurrenceWindow.GroupBox_RangeOfRecurrence}" TargetType="GroupBox">
        <Setter Property="Header" Value="{dxschc:SchedulerLocalizer StringId=RecurrenceWindow_RangeOfRecurrence}" />
    </Style>
    <Style x:Key="{dxscht:LWKey RecurrenceWindow.Editor_RecurrenceInfo}" TargetType="dxsche:RecurrenceRangeControl">
        <Setter Property="RecurrenceInfo" Value="{Binding RecurrenceInfo}" />
    </Style>
    <Style x:Key="{dxscht:LWKey RecurrenceWindow.Editor_TimeZone}" TargetType="dxsche:TimeZoneEdit">
        <Setter Property="EditValue" Value="{Binding TimeZone, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="Visibility" Value="{DXBinding 'IsAppointmentTimeZoneEnabled', Converter={dxmvvm:BooleanToVisibilityConverter}}" />
    </Style>


    <Style x:Key="{dxscht:LWKey RecurrenceWindow.Button_OK}" TargetType="dx:DialogButton">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=ButtonCaption_Ok}" />
        <Setter Property="Command" Value="{Binding SaveCommand}" />
        <Setter Property="MinWidth" Value="65" />
        <Setter Property="IsDefault" Value="True" />
        <Setter Property="DialogResult" Value="OK" />
    </Style>
    <Style x:Key="{dxscht:LWKey RecurrenceWindow.Button_Cancel}" TargetType="dx:DialogButton">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=ButtonCaption_Cancel}" />
        <Setter Property="MinWidth" Value="65" />
        <Setter Property="IsCancel" Value="True" />
        <Setter Property="DialogResult" Value="Cancel" />
    </Style>
    <Style x:Key="{dxscht:LWKey RecurrenceWindow.Button_Delete}" TargetType="dx:DialogButton">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=ButtonCaption_Delete}" />
        <Setter Property="Command" Value="{Binding DeleteCommand}" />
        <Setter Property="MinWidth" Value="65" />
        <Setter Property="DialogResult" Value="Cancel" />
    </Style>
    <Style x:Key="{dxscht:LWKey RecurrenceWindow.ThemedWindowButton_Ok}" TargetType="dx:ThemedWindowDialogButton">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=ButtonCaption_Ok}" />
        <Setter Property="Command" Value="{Binding SaveCommand}" />
        <Setter Property="MinWidth" Value="65" />
        <Setter Property="IsDefault" Value="True" />
        <Setter Property="DialogResult" Value="OK" />
    </Style>
    <Style x:Key="{dxscht:LWKey RecurrenceWindow.ThemedWindowButton_Cancel}" TargetType="dx:ThemedWindowDialogButton">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=ButtonCaption_Cancel}" />
        <Setter Property="MinWidth" Value="65" />
        <Setter Property="IsCancel" Value="True" />
        <Setter Property="DialogResult" Value="Cancel" />
    </Style>
    <Style x:Key="{dxscht:LWKey RecurrenceWindow.ThemedWindowButton_Delete}" TargetType="dx:ThemedWindowDialogButton">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=ButtonCaption_Delete}" />
        <Setter Property="Command" Value="{Binding DeleteCommand}" />
        <Setter Property="MinWidth" Value="65" />
        <Setter Property="DialogResult" Value="Cancel" />
    </Style>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Windows\RecurrenceWindowStyles.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Windows\RemindersWindowStyles.xaml-->
    <DataTemplate x:Key="ListBoxItemTemplate">
        <DockPanel>
            <Image
                Margin="0,0,5,0"
                DockPanel.Dock="Left"
                RenderOptions.BitmapScalingMode="NearestNeighbor"
                Source="{dx:ImageSelector Source={dx:DXImage Image=Today_16x16.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/Today.svg'}}"
                Stretch="None" />
            <TextBlock
                Width="140"
                Margin="10,0,0,0"
                DockPanel.Dock="Right"
                Text="{Binding TimeBeforeAppointmentStartDisplayText}"
                TextAlignment="Left" />
            <TextBlock Text="{Binding Appointment.Subject}" TextTrimming="CharacterEllipsis" />
        </DockPanel>
    </DataTemplate>
    <Style x:Key="ListBoxItemStyle" TargetType="dxe:ListBoxEditItem">
        <Setter Property="ToolBar.ToolTip" Value="{Binding Appointment.Subject}" />
    </Style>


    <Style x:Key="RemindersWindowThemeKey_Window" TargetType="Window">
        <Setter Property="Width" Value="490" />
        <Setter Property="MaxHeight" Value="800"/>
        <Setter Property="Title" Value="{Binding Title}" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="SizeToContent" Value="Height" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Width" Value="800" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                <Setter Property="Width" Value="800" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxscht:LWKey RemindersWindow.Window}" BasedOn="{StaticResource RemindersWindowThemeKey_Window}" TargetType="dx:DXDialogWindow" />
    <Style x:Key="{dxscht:LWKey RemindersWindow.ThemedWindow}" BasedOn="{StaticResource RemindersWindowThemeKey_Window}" TargetType="dx:ThemedWindow" />


    <Style x:Key="{dxscht:LWKey RemindersWindow.Header_Image}" TargetType="Image">
        <Setter Property="Stretch" Value="None" />
        <Setter Property="Source" Value="{dx:ImageSelector Source={dx:DXImage Image=Today_32x32.png}, SvgSource={dxschc:SchedulerSvgImage Path='Scheduling/Today.svg'}}" />
        <Setter Property="RenderOptions.BitmapScalingMode" Value="NearestNeighbor" />
        <Setter Property="Opacity" Value="{DXBinding 'SelectedReminders.Count == 1 ? 1d : 0d'}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>
    <Style x:Key="{dxscht:LWKey RemindersWindow.Header_Subject}" TargetType="TextBlock">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Opacity" Value="0" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding SelectedReminders.Count}" Value="1">
                <Setter Property="Opacity" Value="1" />
                <Setter Property="Text" Value="{Binding SelectedReminders[0].Appointment.Subject}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxscht:LWKey RemindersWindow.Header_Description}" TargetType="TextBlock">
        <Setter Property="Text" Value="{Binding Description}" />
    </Style>
    <Style x:Key="{dxscht:LWKey RemindersWindow.Editor_Reminders}" TargetType="dxe:ListBoxEdit">
        <Setter Property="SelectionMode" Value="Extended" />
        <Setter Property="MinHeight" Value="130" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ItemsSource" Value="{Binding TriggeredReminders}" />
        <Setter Property="EditValue" Value="{Binding SelectedReminders, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="ItemTemplate" Value="{StaticResource ListBoxItemTemplate}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxItemStyle}" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dxmvvm:EventToCommand
                            Command="{Binding OpenItemCommand}"
                            DispatcherPriority="Normal"
                            EventName="MouseDoubleClick"
                            MarkRoutedEventsAsHandled="True" />
                        <dxmvvm:KeyToCommand
                            Command="{Binding OpenItemCommand}"
                            EventName="KeyDown"
                            KeyGesture="Enter"
                            MarkRoutedEventsAsHandled="True" />
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxscht:LWKey RemindersWindow.LayoutItemLabel_Snooze}" TargetType="dxlc:LayoutItemLabel">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=RemindersWindow_ClickSnoozeToBeReminderAgainIn}" />
    </Style>
    <Style x:Key="{dxscht:LWKey RemindersWindow.Editor_Snooze}" TargetType="dxe:ComboBoxEdit">
        <Setter Property="DisplayMember" Value="DisplayText" />
        <Setter Property="ValueMember" Value="TimeSpan" />
        <Setter Property="IsTextEditable" Value="False" />
        <Setter Property="IsEnabled" Value="{Binding CanOpenAppointmentWindow}" />
        <Setter Property="ItemsSource" Value="{Binding SnoozeList}" />
        <Setter Property="EditValue" Value="{Binding SnoozeValue}" />
    </Style>

    <Style x:Key="{dxscht:LWKey RemindersWindow.Button_Snooze}" TargetType="Button">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=RemindersWindow_Snooze}" />
        <Setter Property="Command" Value="{Binding SnoozeCommand}" />
        <Setter Property="IsEnabled" Value="{Binding CanOpenAppointmentWindow}" />
        <Setter Property="MinWidth" Value="85" />
    </Style>
    <Style x:Key="{dxscht:LWKey RemindersWindow.Button_DismissAll}" TargetType="Button">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=RemindersWindow_DismissAll}" />
        <Setter Property="Command" Value="{Binding DismissAllCommand}" />
        <Setter Property="IsEnabled" Value="{Binding CanEditAllAppointments}" />
        <Setter Property="MinWidth" Value="85" />
    </Style>
    <Style x:Key="{dxscht:LWKey RemindersWindow.Button_Dismiss}" TargetType="Button">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=RemindersWindow_Dismiss}" />
        <Setter Property="Command" Value="{Binding DismissCommand}" />
        <Setter Property="IsEnabled" Value="{Binding CanOpenAppointmentWindow}" />
        <Setter Property="MinWidth" Value="85" />
    </Style>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Windows\RemindersWindowStyles.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Windows\TimeRulerWindowStyles.xaml-->
    <Style x:Key="TimeRulerWindowThemeKey_Window" TargetType="Window">
        <Setter Property="Title" Value="{dxschc:SchedulerLocalizer StringId=Caption_TimeRuler}" />
        <Setter Property="Width" Value="360" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="SizeToContent" Value="Height" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Width" Value="650" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                <Setter Property="Width" Value="650" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxscht:LWKey TimeRulerWindow.Window}" BasedOn="{StaticResource TimeRulerWindowThemeKey_Window}" TargetType="dx:DXDialogWindow" />
    <Style x:Key="{dxscht:LWKey TimeRulerWindow.ThemedWindow}" BasedOn="{StaticResource TimeRulerWindowThemeKey_Window}" TargetType="dx:ThemedWindow" />


    <Style x:Key="{dxscht:LWKey TimeRulerWindow.LayoutItem_Caption}" TargetType="dxlc:LayoutItem">
        <Setter Property="Label" Value="{dxschc:SchedulerLocalizer StringId=AppointmentWindow_Label}" />
    </Style>
    <Style x:Key="{dxscht:LWKey TimeRulerWindow.Editor_Caption}" TargetType="dxe:TextEdit">
        <Setter Property="EditValue" Value="{Binding Caption, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
    </Style>

    <Style x:Key="{dxscht:LWKey TimeRulerWindow.LayoutItem_TimeZone}" TargetType="dxlc:LayoutItem">
        <Setter Property="Label" Value="{dxschc:SchedulerLocalizer StringId=TimeRulerWindow_TimeZone}" />
    </Style>
    <Style x:Key="{dxscht:LWKey TimeRulerWindow.Editor_TimeZone}" TargetType="dxsche:TimeZoneEdit">
        <Setter Property="EditValue" Value="{Binding TimeZone, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
    </Style>

    <Style x:Key="{dxscht:LWKey TimeRulerWindow.LayoutItem_CurrentTime}" TargetType="dxlc:LayoutItem">
        <Setter Property="Label" Value="{dxschc:SchedulerLocalizer StringId=TimeRulerWindow_CurrentTime}" />
    </Style>
    <Style x:Key="{dxscht:LWKey TimeRulerWindow.Editor_CurrentTime}" TargetType="dxe:TextEdit">
        <Setter Property="EditValue" Value="{Binding CurrentTime, Mode=OneWay}" />
        <Setter Property="IsReadOnly" Value="True" />
    </Style>

    <Style x:Key="{dxscht:LWKey TimeRulerWindow.Button_Ok}" TargetType="dx:DialogButton">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=ButtonCaption_OK}" />
        <Setter Property="Command" Value="{Binding SaveCommand}" />
        <Setter Property="IsDefault" Value="True" />
        <Setter Property="DialogResult" Value="OK" />
    </Style>
    <Style x:Key="{dxscht:LWKey TimeRulerWindow.Button_Cancel}" TargetType="dx:DialogButton">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=ButtonCaption_Cancel}" />
        <Setter Property="Command" Value="{Binding CancelCommand}" />
        <Setter Property="IsCancel" Value="True" />
        <Setter Property="DialogResult" Value="Cancel" />
    </Style>
    <Style x:Key="{dxscht:LWKey TimeRulerWindow.ThemedWindowButton_Ok}" TargetType="dx:ThemedWindowDialogButton">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=ButtonCaption_OK}" />
        <Setter Property="Command" Value="{Binding SaveCommand}" />
        <Setter Property="IsDefault" Value="True" />
        <Setter Property="DialogResult" Value="OK" />
    </Style>
    <Style x:Key="{dxscht:LWKey TimeRulerWindow.ThemedWindowButton_Cancel}" TargetType="dx:ThemedWindowDialogButton">
        <Setter Property="Content" Value="{dxschc:SchedulerLocalizer StringId=ButtonCaption_Cancel}" />
        <Setter Property="Command" Value="{Binding CancelCommand}" />
        <Setter Property="IsCancel" Value="True" />
        <Setter Property="DialogResult" Value="Cancel" />
    </Style>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Scheduler\DevExpress.Xpf.Scheduling\Themes\Independent\Windows\TimeRulerWindowStyles.xaml-->


    <!--#region DEFAULT STYLES-->

    <Style x:Key="DailyRecurrenceControl.DefaultStyle" TargetType="dxsche:DailyRecurrenceControl">
        <Setter Property="Template" Value="{StaticResource DailyRecurrenceControl.DefaultTemplate}" />
    </Style>
    <Style x:Key="MonthlyRecurrenceControl.DefaultStyle" TargetType="dxsche:MonthlyRecurrenceControl">
        <Setter Property="Template" Value="{StaticResource MonthlyRecurrenceControl.DefaultTemplate}" />
    </Style>
    <Style x:Key="RecurrenceRangeControl.DefaultStyle" TargetType="dxsche:RecurrenceRangeControl">
        <Setter Property="Template" Value="{StaticResource RecurrenceRangeControl.DefaultTemplate}" />
    </Style>
    <Style x:Key="RecurrenceTypeControl.DefaultStyle" TargetType="dxsche:RecurrenceTypeControl">
        <Setter Property="Template" Value="{StaticResource RecurrenceTypeControl.DefaultTemplate}" />
    </Style>
    <Style x:Key="WeekDaysCheckEdit.DefaultStyle" TargetType="dxsche:WeekDaysCheckEdit">
        <Setter Property="Template" Value="{StaticResource WeekDaysCheckEdit.DefaultTemplate}" />
    </Style>
    <Style x:Key="WeeklyRecurrenceControl.DefaultStyle" TargetType="dxsche:WeeklyRecurrenceControl">
        <Setter Property="Template" Value="{StaticResource WeeklyRecurrenceControl.DefaultTemplate}" />
    </Style>
    <Style x:Key="YearlyRecurrenceControl.DefaultStyle" TargetType="dxsche:YearlyRecurrenceControl">
        <Setter Property="Template" Value="{StaticResource YearlyRecurrenceControl.DefaultTemplate}" />
    </Style>
    <Style x:Key="MonthCellsDecorationPanel.DefaultStyle" TargetType="dxschp:MonthCellsDecorationPanel">
        <Setter Property="TodayBorderThickness" Value="4" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="TodayBorderThickness" Value="8" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DayGroupPanel.DefaultStyle" TargetType="dxschp:DayGroupPanel">
        <Setter Property="Template" Value="{StaticResource DayGroupPanel.DefaultTemplate}" />
    </Style>
    <Style x:Key="AllDayGroupPanel.DefaultStyle" TargetType="dxschp:AllDayGroupPanel">
        <Setter Property="Template" Value="{StaticResource AllDayGroupPanel.DefaultTemplate}" />
    </Style>
    <Style x:Key="MonthGroupPanel.DefaultStyle" TargetType="dxschp:MonthGroupPanel">
        <Setter Property="Template" Value="{StaticResource MonthGroupPanel.DefaultTemplate}" />
    </Style>
    <Style x:Key="OneMonthWeekContainerPanel.DefaultStyle" TargetType="dxschp:OneMonthWeekContainerPanel">
        <Setter Property="Template" Value="{StaticResource OneMonthWeekContainerPanel.DefaultTemplate}" />
        <Setter Property="VisualData" Value="{Binding Path=View.VisualData, RelativeSource={RelativeSource Mode=Self}}" />
    </Style>
    <Style x:Key="TimeRulerGroupPanel.DefaultStyle" TargetType="dxschp:TimeRulerGroupPanel">
        <Setter Property="Template" Value="{StaticResource TimeRulerGroupPanel.DefaultTemplate}" />
    </Style>
    <Style x:Key="TimelineAutoHeightGroupPanel.DefaultStyle" TargetType="dxschp:TimelineAutoHeightGroupPanel">
        <Setter Property="Template" Value="{StaticResource TimelineAutoHeightGroupPanel.DefaultTemplate}" />
    </Style>
    <Style x:Key="TimelineStandardModeGroupPanel.DefaultStyle" TargetType="dxschp:TimelineStandardModeGroupPanel">
        <Setter Property="Template" Value="{StaticResource TimelineStandardModeGroupPanel.DefaultTemplate}" />
    </Style>
    <Style x:Key="OneMonthResourceWeeksPanel.DefaultStyle" TargetType="dxschp:OneMonthResourceWeeksPanel">
        <!-- TODO set properties here ? -->
        <Setter Property="AutoSizeMaxViewport" Value="{Binding View.ResourcesPerPage, RelativeSource={RelativeSource Self}}" />
        <Setter Property="ExpandedWeekIndexes" Value="{Binding ExpandedWeekContainers}" />
        <!--<Setter Property="AutoSize" Value="True"/>
        <Setter Property="ItemsSource" Value="{Binding VisualData.WeeksGroups, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="ItemMinSize" Value="0"/>
        <Setter Property="ShowGroupSeparators" Value="True"/>
        <Setter Property="GroupSeparatorSize" Value="{Binding View.GroupSeparatorSize, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="GroupSeparatorTemplate" Value="{Binding DateHeaderSeparatorTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>-->
    </Style>
    <!--#endregion DEFAULT STYLES-->


</ResourceDictionary>