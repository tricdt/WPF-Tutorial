<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxtm="clr-namespace:DevExpress.Xpf.TreeMap;assembly=DevExpress.Xpf.TreeMap.v24.1"
    xmlns:dxtmt="clr-namespace:DevExpress.Xpf.TreeMap.Themes;assembly=DevExpress.Xpf.TreeMap.v24.1">

    <dxtm:ListToVisibilityConverter x:Key="listToVisibilityConverter" />
    <dxtm:LeafForegroundConverter x:Key="leafForegroundConverter" />
    <dxtm:BoolToVisibilityConverter x:Key="boolToVisibilityConverter" />
    <dxtm:BoolToBrushConverter x:Key="boolToBrushConverter" />
    <dxtm:VerticalBeakAlignmentToVisibilityConverter x:Key="beakVPositionConverter" />
    <dxtm:HorizontalBeakAlignmentToVisibilityConverter x:Key="beakHPositionConverter" />


    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.TreeMap\DevExpress.Xpf.TreeMap\Themes\Generic\TreeMapControl.xaml-->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.TreeMap\DevExpress.Xpf.TreeMap\Themes\Generic\TreeMapControl.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.TreeMap\DevExpress.Xpf.TreeMap\Themes\Generic\TreeMapItemPresentation.xaml-->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.TreeMap\DevExpress.Xpf.TreeMap\Themes\Generic\TreeMapItemPresentation.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.TreeMap\DevExpress.Xpf.TreeMap\Themes\Generic\TreeMapItemsControl.xaml-->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.TreeMap\DevExpress.Xpf.TreeMap\Themes\Generic\TreeMapItemsControl.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.TreeMap\DevExpress.Xpf.TreeMap\Themes\Generic\HierarchicalDataItem.xaml-->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.TreeMap\DevExpress.Xpf.TreeMap\Themes\Generic\HierarchicalDataItem.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.TreeMap\DevExpress.Xpf.TreeMap\Themes\Generic\Sunburst.xaml-->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.TreeMap\DevExpress.Xpf.TreeMap\Themes\Generic\Sunburst.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.TreeMap\DevExpress.Xpf.TreeMap\Themes\Generic\ToolTip.xaml-->
    <Style x:Key="arrowStyle" TargetType="Path">
        <Setter Property="Stretch" Value="Fill" />
        <Setter Property="Fill" Value="{Binding ToolTipBackground}" />
    </Style>
    <DataTemplate x:Key="defaultToolTipContentTemplate">
        <TextBlock
            Margin="20,15,20,18"
            FontSize="{Binding ToolTipFontSize}"
            FontWeight="{Binding ToolTipFontWeight}"
            Foreground="{Binding ToolTipForeground}"
            Text="{Binding ToolTipText}"
            TextWrapping="Wrap" />
    </DataTemplate>



    <Style x:Key="leftArrowStyle" BasedOn="{StaticResource arrowStyle}" TargetType="Path">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Width" Value="13" />
        <Setter Property="Visibility" Value="{Binding HorizontalBeakAlignment, Converter={StaticResource beakHPositionConverter}, ConverterParameter=Left, Mode=OneWay}" />
    </Style>

    <Style x:Key="rightArrowStyle" BasedOn="{StaticResource arrowStyle}" TargetType="Path">
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Width" Value="13" />
        <Setter Property="Visibility" Value="{Binding HorizontalBeakAlignment, Converter={StaticResource beakHPositionConverter}, ConverterParameter=Right, Mode=OneWay}" />
    </Style>

    <Style x:Key="centerArrowStyle" BasedOn="{StaticResource arrowStyle}" TargetType="Path">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Width" Value="26" />
        <Setter Property="Visibility" Value="{Binding HorizontalBeakAlignment, Converter={StaticResource beakHPositionConverter}, ConverterParameter=Center, Mode=OneWay}" />
    </Style>

    <DataTemplate x:Key="toolTipTemplate">
        <Grid
            x:Name="Tooltip"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            dxtm:ToolTipPanel.ShadowPadding="0, 0, 0, 8"
            Background="Transparent"
            UseLayoutRounding="True">
            <Grid.Effect>
                <DropShadowEffect Direction="-90" Opacity="0.4" ShadowDepth="4" />
            </Grid.Effect>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid
                x:Name="TopArrowsContainer"
                Height="13"
                Margin="0,0,0,-1"
                Visibility="{Binding VerticalBeakAlignment, Converter={StaticResource beakVPositionConverter}, ConverterParameter=Top, Mode=OneWay}">
                <Path x:Name="CenterTopArrow" Data="F1 M 461,316L 474,303L 487,316L 461,316 Z" Style="{StaticResource centerArrowStyle}" />
                <Path x:Name="LeftTopArrow" Data="F1 M 461,316L 474,316L 461,303L 461,316 Z" Style="{StaticResource leftArrowStyle}" />
                <Path x:Name="RightTopArrow" Data="F1 M 461,316L 474,316L 474,303L 461,316 Z" Style="{StaticResource rightArrowStyle}" />
            </Grid>
            <dx:DXBorder x:Name="ContentBack" Grid.Row="1" Background="{Binding ToolTipBackground}" />
            <ContentPresenter Grid.Row="1" Content="{Binding}" ContentTemplate="{Binding ContentTemplate}" />
            <StackPanel Grid.Row="2" Orientation="Vertical">
                <Grid
                    x:Name="BottomArrowsContainer"
                    Height="13"
                    Margin="0,-1,0,0"
                    Visibility="{Binding VerticalBeakAlignment, Converter={StaticResource beakVPositionConverter}, ConverterParameter=Bottom, Mode=OneWay}">
                    <Path x:Name="CenterBottomArrow" Data="F1 M 461,303L 474,316L 487,303L 461,303 Z" Style="{StaticResource centerArrowStyle}" />
                    <Path x:Name="LeftBottomArrow" Data="F1 M 461,303L 474,303L 461,316L 461,303 Z" Style="{StaticResource leftArrowStyle}" />
                    <Path x:Name="RightBottomArrow" Data="F1 M 461,303L 474,303L 474,316L 461,303 Z" Style="{StaticResource rightArrowStyle}" />
                </Grid>
                <dx:DXBorder x:Name="BottomShadowContainer" Height="8" />
            </StackPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="defaultSunburstToolTipContentTemplate">
        <TextBlock
            Margin="20,15,20,18"
            FontSize="{DynamicResource {dxtmt:LWKey TreeMapBrushes.ToolTipFontSize}}"
            FontWeight="{DynamicResource {dxtmt:LWKey TreeMapBrushes.ToolTipFontWeight}}"
            Foreground="{DynamicResource {dxtmt:LWKey TreeMapBrushes.ToolTipForeground}}"
            Text="{Binding ToolTipText}"
            TextWrapping="Wrap" />
    </DataTemplate>

    <DataTemplate x:Key="SunburstToolTipTemplate">
        <Grid
            x:Name="Tooltip"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            dxtm:ToolTipPanel.ShadowPadding="0, 0, 0, 8"
            Background="Transparent"
            UseLayoutRounding="True">
            <Grid.Effect>
                <DropShadowEffect Direction="-90" Opacity="0.4" ShadowDepth="4" />
            </Grid.Effect>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid
                x:Name="TopArrowsContainer"
                Height="13"
                Margin="0,0,0,-1"
                Visibility="{Binding VerticalBeakAlignment, Converter={StaticResource beakVPositionConverter}, ConverterParameter=Top, Mode=OneWay}">
                <Path x:Name="CenterTopArrow" Data="F1 M 461,316L 474,303L 487,316L 461,316 Z" Style="{StaticResource centerArrowStyle}" />
                <Path x:Name="LeftTopArrow" Data="F1 M 461,316L 474,316L 461,303L 461,316 Z" Style="{StaticResource leftArrowStyle}" />
                <Path x:Name="RightTopArrow" Data="F1 M 461,316L 474,316L 474,303L 461,316 Z" Style="{StaticResource rightArrowStyle}" />
            </Grid>
            <dx:DXBorder x:Name="ContentBack" Grid.Row="1" Background="{DynamicResource {dxtmt:LWKey TreeMapBrushes.ToolTipBackground}}" />
            <ContentPresenter Grid.Row="1" Content="{Binding}" ContentTemplate="{Binding ContentTemplate}" />
            <StackPanel Grid.Row="2" Orientation="Vertical">
                <Grid
                    x:Name="BottomArrowsContainer"
                    Height="13"
                    Margin="0,-1,0,0"
                    Visibility="{Binding VerticalBeakAlignment, Converter={StaticResource beakVPositionConverter}, ConverterParameter=Bottom, Mode=OneWay}">
                    <Path x:Name="CenterBottomArrow" Data="F1 M 461,303L 474,316L 487,303L 461,303 Z" Style="{StaticResource centerArrowStyle}" />
                    <Path x:Name="LeftBottomArrow" Data="F1 M 461,303L 474,303L 461,316L 461,303 Z" Style="{StaticResource leftArrowStyle}" />
                    <Path x:Name="RightBottomArrow" Data="F1 M 461,303L 474,303L 474,316L 461,303 Z" Style="{StaticResource rightArrowStyle}" />
                </Grid>
                <dx:DXBorder x:Name="BottomShadowContainer" Height="8" />
            </StackPanel>
        </Grid>
    </DataTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.TreeMap\DevExpress.Xpf.TreeMap\Themes\Generic\ToolTip.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.TreeMap\DevExpress.Xpf.TreeMap\Themes\Generic.xaml-->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.TreeMap\DevExpress.Xpf.TreeMap\Themes\Generic.xaml-->


    <!--#region DEFAULT STYLES-->

    <Style x:Key="TreeMapControl.DefaultStyleBase" TargetType="{x:Type dxtm:TreeMapControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxtm:TreeMapControl}">
                    <Grid>
                        <dx:DXBorder Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <dxtm:HierarchicalLayoutControl x:Name="PART_OuterItemsContainer" Legend="{TemplateBinding Legend}" Titles="{TemplateBinding Titles}">
                                <dxtm:HierarchicalLayoutControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <dxtm:HierarchicalLayoutControlPanel />
                                    </ItemsPanelTemplate>
                                </dxtm:HierarchicalLayoutControl.ItemsPanel>
                                <dxtm:HierarchicalLayoutControl.MasterElement>
                                    <dxtm:TreeMapItemsControl x:Name="PART_ItemsContainer" />
                                </dxtm:HierarchicalLayoutControl.MasterElement>
                            </dxtm:HierarchicalLayoutControl>
                        </dx:DXBorder>
                        <dxtm:ToolTipPanel x:Name="PART_ToolTipPanel" Position="{Binding Path=ToolTipInfo.ToolTipPosition, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=ToolTipInfo.Visible, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}">
                            <Popup AllowsTransparency="True" IsOpen="{Binding Path=ToolTipInfo.Visible, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Placement="Absolute">
                                <ContentPresenter Content="{Binding Path=ToolTipInfo, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ToolTipTemplate}" />
                            </Popup>
                        </dxtm:ToolTipPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource {dxtmt:LWKey TreeMapBrushes.ControlBorderBrush}}" />
        <Setter Property="ToolTipTemplate" Value="{StaticResource toolTipTemplate}" />
        <Setter Property="ToolTipContentTemplate" Value="{StaticResource defaultToolTipContentTemplate}" />
        <Setter Property="ToolTipGroupContentTemplate" Value="{StaticResource defaultToolTipContentTemplate}" />
        <Setter Property="GroupHeaderContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock
                        Margin="4"
                        FontSize="{Binding FontSize}"
                        FontStyle="{Binding FontStyle}"
                        FontWeight="{Binding FontWeight}"
                        Foreground="{Binding ActualForeground}"
                        Text="{Binding Label}"
                        TextTrimming="WordEllipsis"
                        Visibility="{Binding LabelVisible, Converter={StaticResource boolToVisibilityConverter}}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="LeafContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dx:DXBorder BorderBrush="{Binding BorderBrush}" BorderThickness="{Binding BorderThickness}">
                        <dxtm:TreeMapTextPanel Visibility="{Binding LabelVisible, Converter={StaticResource boolToVisibilityConverter}}">
                            <TextBlock
                                Margin="4"
                                HorizontalAlignment="{Binding LeafTextHorizontalAlignment}"
                                VerticalAlignment="{Binding LeafTextVerticalAlignment}"
                                FontFamily="{Binding FontFamily}"
                                FontSize="{Binding FontSize}"
                                FontStyle="{Binding FontStyle}"
                                FontWeight="{Binding FontWeight}"
                                Foreground="{Binding ActualForeground}"
                                Text="{Binding Label}"
                                TextTrimming="WordEllipsis"
                                TextWrapping="WrapWithOverflow" />
                        </dxtm:TreeMapTextPanel>
                    </dx:DXBorder>
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="TreeMapStyle">
            <Setter.Value>
                <dxtm:TreeMapStyle
                    GroupBackground="{DynamicResource {dxtmt:LWKey TreeMapBrushes.GroupBackground}}"
                    GroupBorderBrush="{DynamicResource {dxtmt:LWKey TreeMapBrushes.GroupBorderBrush}}"
                    GroupFontFamily="{DynamicResource {x:Static SystemFonts.CaptionFontFamilyKey}}"
                    GroupFontSize="{DynamicResource {dxtmt:LWKey TreeMapBrushes.GroupFontSize}}"
                    GroupFontWeight="{DynamicResource {dxtmt:LWKey TreeMapBrushes.GroupFontWeight}}"
                    GroupForeground="{DynamicResource {dxtmt:LWKey TreeMapBrushes.GroupForeground}}"
                    LeafFontFamily="{DynamicResource {x:Static SystemFonts.CaptionFontFamilyKey}}"
                    LeafFontSize="{DynamicResource {x:Static SystemFonts.IconFontSizeKey}}"
                    SubGroupBackground="{DynamicResource {dxtmt:LWKey TreeMapBrushes.SubGroupBackground}}"
                    SubGroupFontSize="{DynamicResource {dxtmt:LWKey TreeMapBrushes.SubGroupFontSize}}"
                    SubGroupFontWeight="{DynamicResource {dxtmt:LWKey TreeMapBrushes.SubGroupFontWeight}}"
                    SubGroupForeground="{DynamicResource {dxtmt:LWKey TreeMapBrushes.SubGroupForeground}}"
                    ToolTipBackground="{DynamicResource {dxtmt:LWKey TreeMapBrushes.ToolTipBackground}}"
                    ToolTipFontSize="{DynamicResource {dxtmt:LWKey TreeMapBrushes.ToolTipFontSize}}"
                    ToolTipFontWeight="{DynamicResource {dxtmt:LWKey TreeMapBrushes.ToolTipFontWeight}}"
                    ToolTipForeground="{DynamicResource {dxtmt:LWKey TreeMapBrushes.ToolTipForeground}}" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Title.DefaultStyleBase" TargetType="{x:Type dxtm:Title}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxtm:Title}">
                    <Grid>
                        <dx:DXBorder
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                        </dx:DXBorder>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Legend.DefaultStyleBase" TargetType="{x:Type dxtm:Legend}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxtm:Legend}">
                    <Grid>
                        <ContentControl
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            DataContext="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            Visibility="{DXBinding Expr='@e(legendItemsControl).Items.Count &gt; 0 ? `Visible` : `Collapsed`'}">
                            <ContentControl.Template>
                                <ControlTemplate TargetType="ContentControl">
                                    <dx:DXBorder
                                        Padding="{TemplateBinding Padding}"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}">
                                        <ContentPresenter Content="{TemplateBinding Content}" />
                                    </dx:DXBorder>
                                </ControlTemplate>
                            </ContentControl.Template>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <ContentPresenter Grid.Row="0" Content="{TemplateBinding Title}" />
                                <dxtm:LegendItemsControl
                                    x:Name="legendItemsControl"
                                    Grid.Row="1"
                                    ItemTemplate="{TemplateBinding ItemTemplate}"
                                    ItemsSource="{TemplateBinding Items}">
                                    <dxtm:LegendItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <WrapPanel Orientation="{Binding Direction, Converter={dxtm:LegendDirectionToOrientationConverter}}" />
                                        </ItemsPanelTemplate>
                                    </dxtm:LegendItemsControl.ItemsPanel>
                                </dxtm:LegendItemsControl>
                            </Grid>
                        </ContentControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="5" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxtmt:LWKey TreeMapBrushes.ControlBorderBrush}}" />
    </Style>
    <Style x:Key="LegendTitle.DefaultStyleBase" TargetType="{x:Type dxtm:LegendTitle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxtm:LegendTitle}">
                    <Grid>
                        <dx:DXBorder
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                        </dx:DXBorder>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Visibility" Value="{Binding Visible, RelativeSource={RelativeSource Mode=Self}, Converter={dxtm:BoolToVisibilityConverter}}" />
    </Style>
    <Style x:Key="TreeMapItemPresentation.DefaultStyleBase" TargetType="{x:Type dxtm:TreeMapItemPresentation}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxtm:TreeMapItemPresentation}">
                    <dxtm:TreeMapItemPanel Background="{Binding TreeMapItem.ActualBackground, RelativeSource={RelativeSource TemplatedParent}}" OpacityMask="{Binding TreeMapItem.OpacityMask, RelativeSource={RelativeSource TemplatedParent}}">
                        <ContentPresenter ContentSource="Header" />
                        <dx:DXBorder
                            Margin="4"
                            Background="White"
                            BorderBrush="{Binding TreeMapItem.GroupBorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Visibility="{TemplateBinding ItemsSource, Converter={StaticResource listToVisibilityConverter}}">
                            <dxtm:TreeMapItemsControl ItemsSource="{TemplateBinding ItemsSource}" ParentItem="{Binding}" />
                        </dx:DXBorder>
                    </dxtm:TreeMapItemPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="HeaderTemplate" Value="{Binding TreeMapItem.ActualTemplate, RelativeSource={RelativeSource Self}}" />
    </Style>
    <Style x:Key="TreeMapItemsControl.DefaultStyleBase" TargetType="{x:Type dxtm:TreeMapItemsControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxtm:TreeMapItemsControl}">
                    <ItemsPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <dxtm:TreeMapPanel GroupLevel="{Binding Path=GroupLevel, RelativeSource={RelativeSource AncestorType={x:Type dxtm:TreeMapItemsControl}}}" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HierarchicalTreeMapItemControl.DefaultStyleBase" TargetType="{x:Type dxtm:HierarchicalTreeMapItemControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxtm:HierarchicalTreeMapItemControl}">
                    <dx:DXBorder x:Name="PART_Border" BorderBrush="#4D000000" BorderThickness="1">
                        <TextBlock
                            x:Name="PART_Label"
                            Margin="4"
                            Foreground="{Binding Background, RelativeSource={RelativeSource AncestorType={x:Type dxtm:TreeMapItemPanel}}, Converter={StaticResource leafForegroundConverter}}"
                            Text="{TemplateBinding Text}"
                            TextTrimming="WordEllipsis"
                            TextWrapping="WrapWithOverflow" />
                    </dx:DXBorder>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding ItemType, RelativeSource={RelativeSource Self}}" Value="{x:Static dxtm:ItemType.RootGroup}">
                            <Setter TargetName="PART_Border" Property="BorderThickness" Value="0" />
                            <Setter TargetName="PART_Label" Property="Foreground" Value="{DynamicResource {dxtmt:LWKey TreeMapBrushes.GroupForeground}}" />
                            <Setter TargetName="PART_Label" Property="FontWeight" Value="{DynamicResource {dxtmt:LWKey TreeMapBrushes.GroupFontWeight}}" />
                            <Setter TargetName="PART_Label" Property="FontSize" Value="{DynamicResource {dxtmt:LWKey TreeMapBrushes.GroupFontSize}}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ItemType, RelativeSource={RelativeSource Self}}" Value="{x:Static dxtm:ItemType.SubGroup}">
                            <Setter TargetName="PART_Border" Property="BorderThickness" Value="0" />
                            <Setter TargetName="PART_Label" Property="Foreground" Value="{DynamicResource {dxtmt:LWKey TreeMapBrushes.SubGroupForeground}}" />
                            <Setter TargetName="PART_Label" Property="FontWeight" Value="{DynamicResource {dxtmt:LWKey TreeMapBrushes.SubGroupFontWeight}}" />
                            <Setter TargetName="PART_Label" Property="FontSize" Value="{DynamicResource {dxtmt:LWKey TreeMapBrushes.SubGroupFontSize}}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SunburstControl.DefaultStyleBase" TargetType="{x:Type dxtm:SunburstControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxtm:SunburstControl}">
                    <Grid Background="Transparent">
                        <dxtm:HierarchicalLayoutControl
                            x:Name="PART_OuterItemsContainer"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Legend="{TemplateBinding Legend}"
                            Titles="{TemplateBinding Titles}">
                            <dxtm:HierarchicalLayoutControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <dxtm:HierarchicalLayoutControlPanel />
                                </ItemsPanelTemplate>
                            </dxtm:HierarchicalLayoutControl.ItemsPanel>
                            <dxtm:HierarchicalLayoutControl.MasterElement>
                                <Grid>
                                    <dxtm:SunburstSegmentItemsControl x:Name="PART_SunburstSegmentItemsControl" SectorStyle="{Binding SectorStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                        <dxtm:SunburstSegmentItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <dxtm:SunburstPanel
                                                    HoleRadiusPercent="{Binding Path=(dxtm:SunburstControl.Sunburst).HoleRadiusPercent, RelativeSource={RelativeSource Self}}"
                                                    LabelDisplayMode="{Binding Path=(dxtm:SunburstControl.Sunburst).LabelDisplayMode, RelativeSource={RelativeSource Self}}"
                                                    LevelCount="{Binding Path=(dxtm:SunburstControl.Sunburst).LevelCount, RelativeSource={RelativeSource Self}}"
                                                    MinLabelSize="{Binding Path=(dxtm:SunburstControl.Sunburst).MinLabelSize, RelativeSource={RelativeSource Self}}"
                                                    SectorViewInfos="{Binding Path=(dxtm:SunburstControl.Sunburst).SectorViewInfos, RelativeSource={RelativeSource Self}}" />
                                            </ItemsPanelTemplate>
                                        </dxtm:SunburstSegmentItemsControl.ItemsPanel>
                                    </dxtm:SunburstSegmentItemsControl>
                                    <dxtm:SunburstHoleContentControl Content="{Binding RelativeSource={RelativeSource AncestorType={x:Type dxtm:SunburstControl}}, Path=HoleContent}" HoleRadiusPercent="{Binding Path=(dxtm:SunburstControl.Sunburst).HoleRadiusPercent, RelativeSource={RelativeSource Self}}" />
                                </Grid>
                            </dxtm:HierarchicalLayoutControl.MasterElement>
                        </dxtm:HierarchicalLayoutControl>
                        <dxtm:ToolTipPanel x:Name="PART_ToolTipPanel" Position="{Binding Path=ToolTipInfo.ToolTipPosition, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=ToolTipInfo.Visible, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}">
                            <Popup AllowsTransparency="True" IsOpen="{Binding Path=ToolTipInfo.Visible, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Placement="Absolute">
                                <ContentPresenter Content="{Binding Path=ToolTipInfo, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ToolTipTemplate}" />
                            </Popup>
                        </dxtm:ToolTipPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ToolTipTemplate" Value="{StaticResource SunburstToolTipTemplate}" />
        <Setter Property="ToolTipContentTemplate" Value="{StaticResource defaultSunburstToolTipContentTemplate}" />
        <Setter Property="ToolTipGroupContentTemplate" Value="{StaticResource defaultSunburstToolTipContentTemplate}" />
    </Style>
    <Style x:Key="SunburstSectorPresentation.DefaultStyleBase" TargetType="{x:Type dxtm:SunburstSectorPresentation}">
        <Setter Property="Stroke" Value="{Binding Stroke}" />
        <Setter Property="Fill">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource boolToBrushConverter}">
                    <Binding Path="IsSelected" />
                    <Binding Path="IsHighlighted" />
                    <Binding Path="Fill" />
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="OpacityMask">
            <Setter.Value>
                <MultiBinding Converter="{dxtm:OpacityMaskConverter}">
                    <Binding Path="IsSelected" />
                    <Binding Path="IsHighlighted" />
                    <Binding Path="Fill" />
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="StrokeThickness" Value="{Binding StrokeThickness}" />
        <Setter Property="Geometry" Value="{Binding Geometry}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxtm:SunburstSectorPresentation}">
                    <Grid>
                        <Path
                            Data="{TemplateBinding Geometry}"
                            Fill="{TemplateBinding Fill}"
                            Stroke="{TemplateBinding Stroke}"
                            StrokeThickness="{TemplateBinding StrokeThickness}" />
                        <dxtm:SunburstLabelPresentation LabelBounds="{Binding LabelBounds}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SunburstLabelPresentation.DefaultStyleBase" TargetType="{x:Type dxtm:SunburstLabelPresentation}">
        <Setter Property="Foreground" Value="{Binding Foreground}" />
        <Setter Property="FontSize" Value="{Binding FontSize}" />
        <Setter Property="FontStyle" Value="{Binding FontStyle}" />
        <Setter Property="FontWeight" Value="{Binding FontWeight}" />
        <Setter Property="FontFamily" Value="{Binding FontFamily}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Text" Value="{Binding TextObject}" />
        <Setter Property="Visibility" Value="{Binding LabelVisible, Converter={StaticResource boolToVisibilityConverter}}" />
        <Setter Property="LabelEffect" Value="{Binding Shadow}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxtm:SunburstLabelPresentation">
                    <Grid
                        x:Name="labelGrid"
                        RenderTransform="{Binding LabelTransform}"
                        RenderTransformOrigin="0.5, 0.5"
                        Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type dxtm:SunburstControl}, Mode=FindAncestor}, Path=LabelDisplayMode, Converter={dxtm:LabelDisplayModeToVisibilityConverter}}">
                        <dx:DXBorder
                            x:Name="labelBorder"
                            Padding="{TemplateBinding Padding}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <TextBlock
                                x:Name="labelTextBlock"
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                Effect="{TemplateBinding LabelEffect}"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                FontStretch="{TemplateBinding FontStretch}"
                                FontStyle="{TemplateBinding FontStyle}"
                                FontWeight="{TemplateBinding FontWeight}"
                                Foreground="{TemplateBinding Foreground}"
                                Text="{TemplateBinding Text}"
                                TextTrimming="{TemplateBinding TextTrimming}"
                                TextWrapping="{TemplateBinding TextWrapping}" />
                        </dx:DXBorder>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion DEFAULT STYLES-->

</ResourceDictionary>