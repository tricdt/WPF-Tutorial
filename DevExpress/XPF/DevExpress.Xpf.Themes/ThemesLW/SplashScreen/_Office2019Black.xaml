<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm">

    <ResourceDictionary.MergedDictionaries>
        <!-- TODO: Egorov -->
        <dxi:PaletteResourceDictionary UseCache="False" />
    </ResourceDictionary.MergedDictionaries>

    <SolidColorBrush x:Key="ProgressBarIndicatorBrush" Color="{StaticResource Color.Focused}" />
    <SolidColorBrush x:Key="ProgressBarBackgroundBrush" Color="{StaticResource Color.Button.Background}" />
    <SolidColorBrush x:Key="ProgressBarBorderBrush" Color="{StaticResource Color.Button.Background}" />
    <dx:WpfSvgPalette x:Key="ThemedSplashScreen.LogoPalette">
        <SolidColorBrush x:Key="BlackColor" Color="{StaticResource Color.Focused}" />
        <SolidColorBrush x:Key="WhiteColor" Color="#80FFFFFF" />
    </dx:WpfSvgPalette>

    <!-- TOP_REGION -->

    <Style x:Key="{dxt:LWKey SplashScreen.TopRegionStyle}" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource Brush.Button.Background}" />
        <Setter Property="TextBlock.Foreground" Value="{StaticResource Brush.Backstage.Foreground}" />
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Border}" />
        <Setter Property="BorderThickness" Value="1,1,1,0" />
    </Style>

    <!-- BOTTOM_REGION -->

    <Style x:Key="{dxt:LWKey SplashScreen.BottomRegionStyle}" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource Brush.Window.Background}" />
        <Setter Property="TextBlock.Foreground" Value="{StaticResource Brush.Foreground}" />
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Border}" />
        <Setter Property="BorderThickness" Value="1,0,1,1" />
        <Setter Property="Height" Value="148" />
    </Style>

    <!-- PROGRESS INDICATOR -->

    <ControlTemplate x:Key="ProgressBarTemplate" TargetType="{x:Type ProgressBar}">
        <Grid x:Name="Root">
            <dxi:SplashScreenBorder Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                <Grid x:Name="PART_Track" Margin="0">
                    <Grid x:Name="PART_Indicator" ClipToBounds="True" HorizontalAlignment="Left">
                        <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}" />
                        <Rectangle
                            x:Name="Animation"
                            Fill="{TemplateBinding Foreground}"
                            RenderTransformOrigin="-0.5,0.5"
                            Visibility="Collapsed">
                            <Rectangle.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="0.25" />
                                </TransformGroup>
                            </Rectangle.RenderTransform>
                        </Rectangle>
                    </Grid>
                </Grid>
            </dxi:SplashScreenBorder>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Determinate" />
                    <VisualState x:Name="Indeterminate">
                        <Storyboard RepeatBehavior="Forever">
                            <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5" />
                                <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5" />
                                <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5" />
                            </PointAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="LayoutTransform" TargetName="Root">
                    <Setter.Value>
                        <RotateTransform Angle="-90" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsIndeterminate" Value="true">
                <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed" />
                <Setter Property="Visibility" TargetName="Animation" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{dxt:LWKey SplashScreen.ProgressBarStyle}" TargetType="ProgressBar">
        <Setter Property="Foreground" Value="{StaticResource ProgressBarIndicatorBrush}" />
        <Setter Property="Background" Value="{StaticResource ProgressBarBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ProgressBarBorderBrush}" />
        <Setter Property="Template" Value="{StaticResource ProgressBarTemplate}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Width" Value="350" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Margin" Value="0,0,0,6" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="UIShape.WaitIndicator" TargetType="{x:Type Path}">
        <Setter Property="Data" Value="F1 M 16.1,8.09999C 16.9284,8.09999 17.6,8.77157 17.6,9.59999C 17.6,10.4284 16.9284,11.1 16.1,11.1C 15.2716,11.1 14.6,10.4284 14.6,9.59999C 14.6,8.77157 15.2716,8.09999 16.1,8.09999 Z M 3.1,8.09999C 3.92843,8.09999 4.6,8.77157 4.6,9.59999C 4.6,10.4284 3.92843,11.1 3.1,11.1C 2.27157,11.1 1.6,10.4284 1.6,9.59999C 1.6,8.77157 2.27157,8.09999 3.1,8.09999 Z M 11.1,16.1C 11.1,16.9284 10.4284,17.6 9.6,17.6C 8.77157,17.6 8.1,16.9284 8.1,16.1C 8.1,15.2716 8.77157,14.6 9.6,14.6C 10.4284,14.6 11.1,15.2716 11.1,16.1 Z M 11.1,3.1C 11.1,3.92843 10.4284,4.6 9.6,4.6C 8.77157,4.6 8.1,3.92843 8.1,3.1C 8.1,2.27157 8.77157,1.6 9.6,1.6C 10.4284,1.6 11.1,2.27157 11.1,3.1 Z M 15.2835,13.0925C 15.8738,13.6738 15.881,14.6235 15.2997,15.2137C 14.7183,15.8039 13.7686,15.8112 13.1784,15.2298C 12.5882,14.6485 12.581,13.6988 13.1623,13.1086C 13.7436,12.5184 14.6933,12.5112 15.2835,13.0925 Z M 6.02161,3.97017C 6.61182,4.55149 6.61904,5.50121 6.03772,6.09142C 5.4564,6.68164 4.50668,6.68886 3.91646,6.10754C 3.32624,5.52621 3.31903,4.57649 3.90035,3.98628C 4.48167,3.39606 5.43139,3.38884 6.02161,3.97017 Z M 6.10753,15.2835C 5.52621,15.8738 4.57649,15.881 3.98627,15.2997C 3.39606,14.7183 3.38884,13.7686 3.97016,13.1784C 4.55148,12.5882 5.5012,12.581 6.09142,13.1623C 6.68164,13.7436 6.68885,14.6933 6.10753,15.2835 Z M 15.2298,6.02161C 14.6485,6.61183 13.6988,6.61904 13.1086,6.03772C 12.5184,5.4564 12.5111,4.50668 13.0925,3.91646C 13.6738,3.32625 14.6235,3.31903 15.2137,3.90035C 15.8039,4.48167 15.8112,5.43139 15.2298,6.02161 Z " />
        <Setter Property="Fill" Value="{StaticResource Brush.Backstage.Foreground}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Stretch" Value="Fill" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <ControlTemplate x:Key="WaitIndicatorProgressBarTemplate" TargetType="{x:Type ProgressBar}">
        <Grid x:Name="Root">
            <Path
                x:Name="Content"
                Height="{TemplateBinding Height}"
                Margin="{TemplateBinding Margin}"
                RenderTransformOrigin="0.5,0.5"
                Style="{StaticResource UIShape.WaitIndicator}"
                Width="{TemplateBinding Width}">
                <Path.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform />
                        <SkewTransform />
                        <RotateTransform Angle="0" />
                        <TranslateTransform />
                    </TransformGroup>
                </Path.RenderTransform>
            </Path>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Determinate" />
                    <VisualState x:Name="Indeterminate">
                        <Storyboard Timeline.DesiredFrameRate="{x:Static dx:WaitIndicator.DesiredFrameRate}">
                            <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" Storyboard.TargetName="Content" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                <EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="359" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <Style x:Key="{dxt:LWKey SplashScreen.WaitIndicatorProgressBarStyle}" TargetType="ProgressBar">
        <Setter Property="Template" Value="{StaticResource WaitIndicatorProgressBarTemplate}" />
        <Setter Property="IsIndeterminate" Value="True" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Height" Value="26" />
        <Setter Property="Width" Value="26" />
    </Style>

    <ControlTemplate x:Key="WaitIndicatorContainerTemplate" TargetType="ContentControl">
        <dxi:SplashScreenBorder Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <ContentPresenter Margin="{TemplateBinding Padding}" />
        </dxi:SplashScreenBorder>
    </ControlTemplate>

    <Style x:Key="{dxt:LWKey SplashScreen.WaitIndicatorContainerStyle}" TargetType="ContentControl">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Template" Value="{StaticResource WaitIndicatorContainerTemplate}" />
        <Setter Property="Padding" Value="24" />
        <Setter Property="Background" Value="{StaticResource Brush.ControlLight.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Focused}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource Brush.ControlLight.Foreground}" />
    </Style>

    <Style x:Key="{dxt:LWKey SplashScreen.WaitIndicatorStatusTextBoxStyle}" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Margin" Value="6,0,0,0" />
        <Style.Triggers>
            <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--#region Generic-->
    <Style x:Key="SplashScreenWindowStyleBase" TargetType="dx:SplashScreenWindow">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dx:SplashScreenWindow">
                    <dxi:SplashScreenBorder Background="{TemplateBinding ActualBackground}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter ContentSource="Content" />
                    </dxi:SplashScreenBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxt:LWKey SplashScreen.WindowStyle}" TargetType="dx:SplashScreenWindow" BasedOn="{StaticResource SplashScreenWindowStyleBase}" />

    <Style x:Key="{dxt:LWKey SplashScreen.TitleTextBoxStyle}" TargetType="TextBlock">
        <Setter Property="FontSize" Value="21" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="Margin" Value="60,2" />
    </Style>
    <Style x:Key="{dxt:LWKey SplashScreen.SubTitleTextBoxStyle}" TargetType="TextBlock">
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Opacity" Value="0.75" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="Margin" Value="60,2" />
    </Style>
    <Style x:Key="{dxt:LWKey SplashScreen.StatusTextBoxStyle}" TargetType="TextBlock">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Margin" Value="0,3,3,6" />
    </Style>
    <Style x:Key="{dxt:LWKey SplashScreen.CopyrightTextBoxStyle}" TargetType="TextBlock">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Margin" Value="20,3,3,20" />
    </Style>
    <Style x:Key="{dxt:LWKey SplashScreen.LogoImageStyle}" TargetType="Image">
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Margin" Value="20" />
        <Setter Property="Stretch" Value="None" />
        <Setter Property="dx:WpfSvgPalette.Palette" Value="{StaticResource ThemedSplashScreen.LogoPalette}" />
    </Style>

    <Style x:Key="{dxt:LWKey FluentSplashScreen.WindowStyle}" TargetType="dx:SplashScreenWindow" BasedOn="{StaticResource SplashScreenWindowStyleBase}">
        <Setter Property="BorderBrush" Value="#20000000" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="AllowAcrylic" Value="True" />
        <Setter Property="Background" Value="#FF525252" />
        <Setter Property="AcrylicColor" Value="#40525252" />

    </Style>

    <Style x:Key="{dxt:LWKey FluentSplashScreen.TitleTextBoxStyle}" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="FontSize" Value="35" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="Margin" Value="60,0" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                            <DiscreteDoubleKeyFrame KeyTime="0" Value="-100" />
                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.25" Value="-100" />
                            <EasingDoubleKeyFrame KeyTime="0:0:0.75" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <QuadraticEase EasingMode="EaseOut" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.25" Value="0" />
                            <EasingDoubleKeyFrame KeyTime="0:0:0.75" Value="1">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <QuadraticEase EasingMode="EaseOut" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxt:LWKey FluentSplashScreen.SubTitleTextBoxStyle}" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="FontSize" Value="21" />
        <Setter Property="Opacity" Value="0.75" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="Margin" Value="60,0" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                            <DiscreteDoubleKeyFrame KeyTime="0" Value="-100" />
                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.375" Value="-100" />
                            <EasingDoubleKeyFrame KeyTime="0:0:0.875" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <QuadraticEase EasingMode="EaseOut" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.375" Value="0" />
                            <EasingDoubleKeyFrame KeyTime="0:0:0.875" Value="1">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <QuadraticEase EasingMode="EaseOut" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxt:LWKey FluentSplashScreen.StatusTextBoxStyle}" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Margin" Value="30,3,3,25" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                            <DiscreteDoubleKeyFrame KeyTime="0" Value="-100" />
                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.5" Value="-100" />
                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <QuadraticEase EasingMode="EaseOut" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.5" Value="0" />
                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <QuadraticEase EasingMode="EaseOut" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxt:LWKey FluentSplashScreen.CopyrightTextBoxStyle}" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="TextAlignment" Value="Right" />
        <Setter Property="Margin" Value="3,3,30,25" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                            <DiscreteDoubleKeyFrame KeyTime="0" Value="100" />
                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.625" Value="100" />
                            <EasingDoubleKeyFrame KeyTime="0:0:1.125" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <QuadraticEase EasingMode="EaseOut" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.625" Value="0" />
                            <EasingDoubleKeyFrame KeyTime="0:0:1.125" Value="1">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <QuadraticEase EasingMode="EaseOut" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{dxt:LWKey FluentSplashScreen.LogoImageStyle}" TargetType="Image">
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Margin" Value="30,30,0,0" />
        <Setter Property="Stretch" Value="None" />
        <Setter Property="dx:WpfSvgPalette.Palette">
            <Setter.Value>
                <dx:WpfSvgPalette>
                    <SolidColorBrush x:Key="#FFFFFF" Color="#FFFFFFFF" />
                    <SolidColorBrush x:Key="BlackColor" Color="#FFFFFFFF" />
                </dx:WpfSvgPalette>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                            <DiscreteDoubleKeyFrame KeyTime="0" Value="-100" />
                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.125" Value="-100" />
                            <EasingDoubleKeyFrame KeyTime="0:0:0.625" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <QuadraticEase EasingMode="EaseOut" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                            <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.125" Value="0" />
                            <EasingDoubleKeyFrame KeyTime="0:0:0.625" Value="1">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <QuadraticEase EasingMode="EaseOut" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>


    <ControlTemplate x:Key="FluentProgressBarTemplate" TargetType="{x:Type ProgressBar}">
        <Grid HorizontalAlignment="Stretch">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Determinate" />
                    <VisualState x:Name="Indeterminate">
                        <Storyboard RepeatBehavior="Forever">
                            <DoubleAnimation Duration="0:0:3.917" Storyboard.TargetName="PART_IndeterminateRoot" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" />
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="E1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:1" />
                                <EasingDoubleKeyFrame KeyTime="0:0:2" />
                                <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:3" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="E2" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.167" Value="0" />
                                <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:1.167" />
                                <EasingDoubleKeyFrame KeyTime="0:0:2.167" />
                                <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:3.167" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="E3" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.333" Value="0" />
                                <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:1.333" />
                                <EasingDoubleKeyFrame KeyTime="0:0:2.333" />
                                <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:3.333" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="E4" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0" />
                                <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:1.5" />
                                <EasingDoubleKeyFrame KeyTime="0:0:2.5" />
                                <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:3.5" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="E5" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.667" Value="0" />
                                <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:1.667" />
                                <EasingDoubleKeyFrame KeyTime="0:0:2.667" />
                                <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:3.667" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="B1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="-50" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0" />
                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0" />
                                <EasingDoubleKeyFrame KeyTime="0:0:3" Value="100" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="B2" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="-50" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.667" Value="0" />
                                <EasingDoubleKeyFrame KeyTime="0:0:2.167" Value="0" />
                                <EasingDoubleKeyFrame KeyTime="0:0:3.167" Value="100" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="B3" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="-50" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.833" Value="0" />
                                <EasingDoubleKeyFrame KeyTime="0:0:2.333" Value="0" />
                                <EasingDoubleKeyFrame KeyTime="0:0:3.333" Value="100" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="B4" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="-50" />
                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0" />
                                <EasingDoubleKeyFrame KeyTime="0:0:2.5" Value="0" />
                                <EasingDoubleKeyFrame KeyTime="0:0:3.5" Value="100" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="B5" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="-50" />
                                <EasingDoubleKeyFrame KeyTime="0:0:1.167" Value="0" />
                                <EasingDoubleKeyFrame KeyTime="0:0:2.667" Value="0" />
                                <EasingDoubleKeyFrame KeyTime="0:0:3.667" Value="100" />
                            </DoubleAnimationUsingKeyFrames>

                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="E1" Storyboard.TargetProperty="Opacity">
                                <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                <EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="1" />
                                <DiscreteDoubleKeyFrame KeyTime="0:0:2.3" Value="1" />
                                <EasingDoubleKeyFrame KeyTime="0:0:2.8" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="E2" Storyboard.TargetProperty="Opacity">
                                <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                <EasingDoubleKeyFrame KeyTime="0:0:1.667" Value="1" />
                                <DiscreteDoubleKeyFrame KeyTime="0:0:2.467" Value="1" />
                                <EasingDoubleKeyFrame KeyTime="0:0:2.967" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="E3" Storyboard.TargetProperty="Opacity">
                                <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                <EasingDoubleKeyFrame KeyTime="0:0:1.833" Value="1" />
                                <DiscreteDoubleKeyFrame KeyTime="0:0:2.633" Value="1" />
                                <EasingDoubleKeyFrame KeyTime="0:0:3.133" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="E4" Storyboard.TargetProperty="Opacity">
                                <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="1" />
                                <DiscreteDoubleKeyFrame KeyTime="0:0:2.8" Value="1" />
                                <EasingDoubleKeyFrame KeyTime="0:0:3.3" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="E5" Storyboard.TargetProperty="Opacity">
                                <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                <EasingDoubleKeyFrame KeyTime="0:0:2.167" Value="1" />
                                <DiscreteDoubleKeyFrame KeyTime="0:0:2.967" Value="1" />
                                <EasingDoubleKeyFrame KeyTime="0:0:3.467" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="PART_IndeterminateRoot" HorizontalAlignment="Left" VerticalAlignment="Center">
                <Grid.RenderTransform>
                    <TranslateTransform />
                </Grid.RenderTransform>
                <dxi:SplashScreenBorder x:Name="B5" RenderTransformOrigin="0.5,0.5">
                    <dxi:SplashScreenBorder.RenderTransform>
                        <TranslateTransform />
                    </dxi:SplashScreenBorder.RenderTransform>
                    <Ellipse x:Name="E5" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5">
                        <Ellipse.RenderTransform>
                            <TranslateTransform />
                        </Ellipse.RenderTransform>
                    </Ellipse>
                </dxi:SplashScreenBorder>
                <dxi:SplashScreenBorder x:Name="B4" RenderTransformOrigin="0.5,0.5">
                    <dxi:SplashScreenBorder.RenderTransform>
                        <TranslateTransform />
                    </dxi:SplashScreenBorder.RenderTransform>
                    <Ellipse x:Name="E4" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5">
                        <Ellipse.RenderTransform>
                            <TranslateTransform />
                        </Ellipse.RenderTransform>
                    </Ellipse>
                </dxi:SplashScreenBorder>
                <dxi:SplashScreenBorder x:Name="B3" RenderTransformOrigin="0.5,0.5">
                    <dxi:SplashScreenBorder.RenderTransform>
                        <TranslateTransform />
                    </dxi:SplashScreenBorder.RenderTransform>
                    <Ellipse x:Name="E3" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5">
                        <Ellipse.RenderTransform>
                            <TranslateTransform />
                        </Ellipse.RenderTransform>
                    </Ellipse>
                </dxi:SplashScreenBorder>
                <dxi:SplashScreenBorder x:Name="B2" RenderTransformOrigin="0.5,0.5">
                    <dxi:SplashScreenBorder.RenderTransform>
                        <TranslateTransform />
                    </dxi:SplashScreenBorder.RenderTransform>
                    <Ellipse x:Name="E2" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5">
                        <Ellipse.RenderTransform>
                            <TranslateTransform />
                        </Ellipse.RenderTransform>
                    </Ellipse>
                </dxi:SplashScreenBorder>
                <dxi:SplashScreenBorder x:Name="B1" Grid.Column="8" RenderTransformOrigin="0.5,0.5">
                    <dxi:SplashScreenBorder.RenderTransform>
                        <TranslateTransform />
                    </dxi:SplashScreenBorder.RenderTransform>
                    <Ellipse x:Name="E1" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5">
                        <Ellipse.RenderTransform>
                            <TranslateTransform />
                        </Ellipse.RenderTransform>
                    </Ellipse>
                </dxi:SplashScreenBorder>
            </Grid>
            <dxi:SplashScreenBorder x:Name="PART_DeterminateRoot" HorizontalAlignment="Stretch" Visibility="Collapsed">
                <Grid x:Name="PART_Track" Margin="1">
                    <Grid x:Name="PART_Indicator" ClipToBounds="True" HorizontalAlignment="Left">
                        <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}" />
                        <Rectangle
                            x:Name="Animation"
                            Fill="{TemplateBinding Foreground}"
                            RenderTransformOrigin="-0.5,0.5"
                            Visibility="Collapsed">
                            <Rectangle.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="0.25" />
                                </TransformGroup>
                            </Rectangle.RenderTransform>
                        </Rectangle>
                    </Grid>
                </Grid>
            </dxi:SplashScreenBorder>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsIndeterminate" Value="False">
                <Setter Property="Visibility" TargetName="PART_IndeterminateRoot" Value="Collapsed" />
                <Setter Property="Visibility" TargetName="PART_DeterminateRoot" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{dxt:LWKey FluentSplashScreen.ProgressBarStyle}" TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="Background" Value="#FFF3F3F3" />
        <Setter Property="BorderBrush" Value="#FFF3F3F3" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="IsIndeterminate" Value="True" />
        <Setter Property="ClipToBounds" Value="True" />
        <Setter Property="Width" Value="NaN" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Margin" Value="15,10,15,0" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Template" Value="{StaticResource FluentProgressBarTemplate}" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxi:FluentProgressBarBehavior AnimationStartDelay="625" />
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsIndeterminate" Value="False">
                <Setter Property="Width" Value="350" />
                <Setter Property="Margin" Value="0,20,0,0" />
                <Setter Property="HorizontalAlignment" Value="Center" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion Generic-->


</ResourceDictionary>