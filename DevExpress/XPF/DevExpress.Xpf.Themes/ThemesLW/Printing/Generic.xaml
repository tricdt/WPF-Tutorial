<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="http://schemas.devexpress.com/winfx/2008/xaml/printing"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
    xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys"
    xmlns:dxdo="http://schemas.devexpress.com/winfx/2008/xaml/docking"
    xmlns:dxdv="http://schemas.devexpress.com/winfx/2008/xaml/documentviewer"
    xmlns:dxdvt="http://schemas.devexpress.com/winfx/2008/xaml/documentviewer/themekeys"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dxe_helpers="clr-namespace:DevExpress.Xpf.Editors.Helpers;assembly=DevExpress.Xpf.Core.v24.1"
    xmlns:dxedp="clr-namespace:DevExpress.Xpf.Editors.DataPager;assembly=DevExpress.Xpf.Core.v24.1"
    xmlns:dxef="clr-namespace:DevExpress.Xpf.Editors.Flyout;assembly=DevExpress.Xpf.Core.v24.1"
    xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
    xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys"
    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
    xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol"
    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
    xmlns:dxp="clr-namespace:DevExpress.Xpf.Printing;assembly=DevExpress.Xpf.Printing.v24.1"
    xmlns:dxpn="clr-namespace:DevExpress.Xpf.Printing.Native;assembly=DevExpress.Xpf.Printing.v24.1"
    xmlns:dxpnl="clr-namespace:DevExpress.Xpf.Printing.Native.Lines;assembly=DevExpress.Xpf.Printing.v24.1"
    xmlns:dxpp="clr-namespace:DevExpress.Xpf.Printing.Parameters;assembly=DevExpress.Xpf.Printing.v24.1"
    xmlns:dxpt="clr-namespace:DevExpress.Xpf.Printing.Themes;assembly=DevExpress.Xpf.Printing.v24.1"
    xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon"
    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
    xmlns:pcb="clr-namespace:DevExpress.Xpf.Printing.PreviewControl.Bars;assembly=DevExpress.Xpf.Printing.v24.1"
    xmlns:pcn="clr-namespace:DevExpress.Xpf.Printing.PreviewControl.Native;assembly=DevExpress.Xpf.Printing.v24.1"
    xmlns:pcne="clr-namespace:DevExpress.Xpf.Printing.PreviewControl.Native.Editing;assembly=DevExpress.Xpf.Printing.v24.1"
    xmlns:xpc="clr-namespace:DevExpress.XtraPrinting;assembly=DevExpress.Printing.v24.1.Core"
    xmlns:xpd="clr-namespace:DevExpress.XtraPrinting;assembly=DevExpress.Data.v24.1"
    xmlns:xpdr="clr-namespace:DevExpress.XtraPrinting.Drawing;assembly=DevExpress.Printing.v24.1.Core"
    xmlns:xpds="clr-namespace:DevExpress.XtraPrinting.Design;assembly=DevExpress.Printing.v24.1.Core"
    xmlns:xrp="clr-namespace:DevExpress.XtraReports.Parameters;assembly=DevExpress.Printing.v24.1.Core"
    xmlns:dxco="http://schemas.devexpress.com/winfx/2008/xaml/controls"
    xmlns:dxcoi="http://schemas.devexpress.com/winfx/2008/xaml/controls/internal"
    xmlns:dxcot="http://schemas.devexpress.com/winfx/2008/xaml/controls/themekeys">

    <dxmvvm:BooleanToObjectConverter x:Key="orientationGlyphConverter">
        <dxmvvm:BooleanToObjectConverter.TrueValue>
            <dx:SvgImageSource Uri="{dx:PrintingResource Images/PageOrientationLandscape.svg}" />
        </dxmvvm:BooleanToObjectConverter.TrueValue>
        <dxmvvm:BooleanToObjectConverter.FalseValue>
            <dx:SvgImageSource Uri="{dx:PrintingResource Images/PageOrientationPortrait.svg}" />
        </dxmvvm:BooleanToObjectConverter.FalseValue>
    </dxmvvm:BooleanToObjectConverter>
    <dxmvvm:BooleanToObjectConverter x:Key="collateConverter">
        <dxmvvm:BooleanToObjectConverter.TrueValue>
            <sys:Int32>0</sys:Int32>
        </dxmvvm:BooleanToObjectConverter.TrueValue>
        <dxmvvm:BooleanToObjectConverter.FalseValue>
            <sys:Int32>1</sys:Int32>
        </dxmvvm:BooleanToObjectConverter.FalseValue>
    </dxmvvm:BooleanToObjectConverter>
    <Style x:Key="PasswordBoxEditPDFDialog" TargetType="dxe:PasswordBoxEdit">
        <Setter Property="Width" Value="190" />
    </Style>
    <Thickness x:Key="WatermarkEditorMargin">0,0,0,12</Thickness>
    <sys:Double x:Key="buttonMinWidth">85</sys:Double>
    <Thickness x:Key="clientAreaMargin">12</Thickness>
    <Thickness x:Key="clientAreaMarginNoBottom">12,12,12,0</Thickness>
    <Thickness x:Key="controlVerticalSpacing">0,0,0,4</Thickness>
    <Thickness x:Key="controlHorizontalSpacing">0,0,4,0</Thickness>
    <Thickness x:Key="groupVerticalSpacing">0,0,0,12</Thickness>
    <dxp:DisabledCommand x:Key="disabledCommand" />
    <sys:Double x:Key="zoomComboBoxWidth">100</sys:Double>
    <dx:FormatStringConverter x:Key="pageCountFormatStringConverter" FormatString="/ {0}" />
    <GridLength x:Key="lobGridHorizontalSpacing">4</GridLength>
    <dxpn:NumberToVisibilityConverter x:Key="visibilityConverter" />
    <dxpn:ObjectToCollectionConverter x:Key="objectToCollectionConverter" />
    <dx:ObjectToBooleanConverter x:Key="objectToBooleanConverter" />
    <dx:BoolToVisibilityConverter x:Key="boolToVisibilityConverter" />
    <dxpn:DocumentMapSelectionChangedEventArgsConverter x:Key="documentMapSelectionEventArgsConverter" />
    <dx:BoolInverseConverter x:Key="boolInverseConverter" />
    <sys:Boolean x:Key="TrueBoolean">True</sys:Boolean>
    <sys:Boolean x:Key="FalseBoolean">false</sys:Boolean>
    <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
    <dxp:CursorModeToCanMouseScrollConverter x:Key="cursorModeToCanMouseScrollConverter" />
    <dxdv:CheckBarItemTemplateSelector x:Key="checkItemTemplateSelector" />
    <dxmvvm:ObjectToObjectConverter x:Key="orientationConverter">
        <dxmvvm:MapItem Source="{x:Static xrp:Orientation.Horizontal}" Target="{x:Static Orientation.Horizontal}" />
        <dxmvvm:MapItem Source="{x:Static xrp:Orientation.Vertical}" Target="{x:Static Orientation.Vertical}" />
    </dxmvvm:ObjectToObjectConverter>
    <dxmvvm:ObjectToObjectConverter x:Key="orientationInvertConverter">
        <dxmvvm:MapItem Source="{x:Static xrp:Orientation.Horizontal}" Target="{x:Static Orientation.Vertical}" />
        <dxmvvm:MapItem Source="{x:Static xrp:Orientation.Vertical}" Target="{x:Static Orientation.Horizontal}" />
    </dxmvvm:ObjectToObjectConverter>
    <dxmvvm:ObjectToObjectConverter x:Key="descriptionPositionConverter">
        <dxmvvm:MapItem Source="{x:Static xrp:Orientation.Horizontal}" Target="{x:Static dxlc:LayoutItemLabelPosition.Left}" />
        <dxmvvm:MapItem Source="{x:Static xrp:Orientation.Vertical}" Target="{x:Static dxlc:LayoutItemLabelPosition.Top}" />
    </dxmvvm:ObjectToObjectConverter>
    <dxpn:SharedSizeGroup x:Key="headerWidthGroup" />
    <dx:EmbeddedResourceImageConverter x:Key="EmbeddedResourceImageConverter" />
    <Color x:Key="{dxpt:LWKey NewDocumentViewer.HighlightSelectionColor}">#596098C0</Color>
    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\BackstageDocumentPreviewControl.xaml-->
    <ControlTemplate x:Key="linkButtonTemplate" TargetType="Button">
        <TextBlock Foreground="#FF0173C7" Text="{TemplateBinding Content}" TextDecorations="Underline" />
    </ControlTemplate>
    <DataTemplate x:Key="printerItemTemplate">
        <DockPanel>
            <dx:DXImage
                Width="32"
                Height="32"
                DockPanel.Dock="Left"
                Source="{Binding Path=PrinterType, Converter={pcn:PrinterTypeToImageUriConverter}}" />
            <TextBlock Margin="9,0,0,0" DockPanel.Dock="Top" Text="{Binding DisplayName}" />
            <TextBlock
                Margin="9,0,0,0"
                DockPanel.Dock="Bottom"
                IsEnabled="False"
                Opacity="0.4"
                Text="{Binding Status}" />
        </DockPanel>
    </DataTemplate>
    <DataTemplate x:Key="paperKindItemTemplate">
        <DockPanel>
            <dx:DXImage
                Width="32"
                Height="32"
                DockPanel.Dock="Left"
                Source="{Binding Kind, Converter={dxpn:PaperKindToGlyphConverter}}" />
            <TextBlock Margin="9,0,0,0" DockPanel.Dock="Top" Text="{Binding PaperName}" />
            <UniformGrid
                Margin="9,0,0,0"
                Columns="2"
                DockPanel.Dock="Bottom"
                IsEnabled="False">
                <TextBlock IsEnabled="False" Opacity="0.4">
                    <Run Text="{Binding Path=., Mode=OneTime, Source={dxp:PrintingStringId StringId=PageSetupWidth}, StringFormat='{}{0}:'}" /><Run Text="{Binding Width, StringFormat='  {0:0} ', Converter={dxpn:PageDimensionToDisplayValueConverter}}" />
                </TextBlock>
                <TextBlock IsEnabled="False" Opacity="0.4">
                    <Run Text="{Binding Path=., Mode=OneTime, Source={dxp:PrintingStringId StringId=PageSetupHeight}, StringFormat='{}{0}:'}" /><Run Text="{Binding Height, StringFormat='  {0:0} ', Converter={dxpn:PageDimensionToDisplayValueConverter}}" />
                </TextBlock>
            </UniformGrid>
        </DockPanel>
    </DataTemplate>
    <ControlTemplate x:Key="pageMarginsDisplayTemplate">
        <DockPanel Margin="3">
            <dx:DXImage
                Width="32"
                Height="32"
                DockPanel.Dock="Left"
                Source="{Binding EditValue, Converter={dxpn:PageMarginsInfoToGlyphConverter}}" />
            <TextBlock Margin="9,0,0,0" DockPanel.Dock="Top" Text="{Binding EditValue.DisplayName}" />
            <TextBlock
                Margin="9,0,0,0"
                DockPanel.Dock="Bottom"
                Opacity="0.4"
                TextTrimming="CharacterEllipsis">
                <Run Text="{dxp:PrintingStringId StringId=PageSetupMarginsLeft}" /><Run Text="{Binding EditValue.Margins.Left, StringFormat='  {0:0} ', Converter={dxpn:PageDimensionToDisplayValueConverter}}" />
                <Run Text="{dxp:PrintingStringId StringId=PageSetupMarginsRight}" /><Run Text="{Binding EditValue.Margins.Right, StringFormat='  {0:0} ', Converter={dxpn:PageDimensionToDisplayValueConverter}}" />
                <Run Text="{dxp:PrintingStringId StringId=PageSetupMarginsTop}" /><Run Text="{Binding EditValue.Margins.Top, StringFormat='  {0:0} ', Converter={dxpn:PageDimensionToDisplayValueConverter}}" />
                <Run Text="{dxp:PrintingStringId StringId=PageSetupMarginsBottom}" /><Run Text="{Binding EditValue.Margins.Bottom, StringFormat='  {0:0} ', Converter={dxpn:PageDimensionToDisplayValueConverter}}" />
            </TextBlock>
        </DockPanel>
    </ControlTemplate>
    <DataTemplate x:Key="pageMarginsItemTemplate">
        <DockPanel Grid.IsSharedSizeScope="True">
            <dx:DXImage
                Width="32"
                Height="32"
                DockPanel.Dock="Left"
                Source="{Binding Converter={dxpn:PageMarginsInfoToGlyphConverter}}" />
            <TextBlock Margin="9,0,0,0" DockPanel.Dock="Top" Text="{Binding DisplayName}" />
            <Grid Margin="9,0,24,0" DockPanel.Dock="Bottom" Opacity="0.4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" SharedSizeGroup="label" />
                    <ColumnDefinition Width="auto" SharedSizeGroup="value" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="auto" SharedSizeGroup="label" />
                    <ColumnDefinition Width="auto" SharedSizeGroup="label" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <TextBlock Margin="0,0,8,0" Text="{dxp:PrintingStringId StringId=PageSetupMarginsLeft}" />
                <TextBlock Grid.Column="1" Text="{Binding Margins.Left, StringFormat='  {0:0} ', Converter={dxpn:PageDimensionToDisplayValueConverter}}" />
                <TextBlock Grid.Column="3" Margin="0,0,8,0" Text="{dxp:PrintingStringId StringId=PageSetupMarginsRight}" />
                <TextBlock Grid.Column="4" Text="{Binding Margins.Right, StringFormat='  {0:0} ', Converter={dxpn:PageDimensionToDisplayValueConverter}}" />
                <TextBlock Grid.Row="1" Margin="0,0,8,0" Text="{dxp:PrintingStringId StringId=PageSetupMarginsTop}" />
                <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding Margins.Top, StringFormat='  {0:0} ', Converter={dxpn:PageDimensionToDisplayValueConverter}}" />
                <TextBlock
                    Grid.Row="1"
                    Grid.Column="3"
                    Margin="0,0,8,0"
                    Text="{dxp:PrintingStringId StringId=PageSetupMarginsBottom}" />
                <TextBlock Grid.Row="1" Grid.Column="4" Text="{Binding Margins.Bottom, StringFormat='  {0:0} ', Converter={dxpn:PageDimensionToDisplayValueConverter}}" />
            </Grid>
        </DockPanel>
    </DataTemplate>
    <DataTemplate x:Key="pageRangeTemplate">
        <DockPanel>
            <dx:DXImage
                Width="32"
                Height="32"
                DockPanel.Dock="Left"
                Source="{Binding Converter={dxpn:PrintRangeToImageSourceConverter}}" />
            <TextBlock Margin="9,0,0,0" DockPanel.Dock="Top" Text="{Binding Converter={dxpn:PrintRangeToDisplayNameConverter}}" />
            <TextBlock
                Margin="9,0,0,0"
                DockPanel.Dock="Bottom"
                IsEnabled="False"
                Opacity="0.4"
                Text="{Binding Converter={dxpn:PrintRangeToDescriptionConverter}}" />
        </DockPanel>
    </DataTemplate>
    <DataTemplate x:Key="duplexModeItemTemplate">
        <DockPanel>
            <dx:DXImage
                Width="32"
                Height="32"
                DockPanel.Dock="Left"
                Source="{Binding Converter={dxpn:DuplexModeToGlyphConverter}}" />
            <TextBlock Margin="9,0,0,0" DockPanel.Dock="Top" Text="{Binding Converter={dxpn:DuplexModeToDisplayTextAndDescriptionConverter DisplayTextType=DisplayText}}" />
            <TextBlock
                Margin="9,0,0,0"
                DockPanel.Dock="Bottom"
                IsEnabled="False"
                Opacity="0.4"
                Text="{Binding Converter={dxpn:DuplexModeToDisplayTextAndDescriptionConverter DisplayTextType=Description}}" />
        </DockPanel>
    </DataTemplate>
    <DataTemplate x:Key="collateItemTemplate">
        <DockPanel>
            <dx:DXImage
                Width="32"
                Height="32"
                DockPanel.Dock="Left"
                Source="{Binding Converter={dxpn:PrintingStringIdToImageSourceConverter}}" />
            <TextBlock Margin="9,0,0,0" DockPanel.Dock="Top" Text="{Binding Converter={dxpn:PrintingStringIdToStringConverter}}" />
            <TextBlock
                Margin="9,0,0,0"
                DockPanel.Dock="Bottom"
                IsEnabled="False"
                Opacity="0.4"
                Text="{Binding Converter={dxpn:CollateStringToCollateDescriptionConverter}}" />
        </DockPanel>
    </DataTemplate>
    <Style x:Key="comboboxStyle" TargetType="{x:Type dxe:ComboBoxEdit}">
        <Setter Property="ApplyItemTemplateToSelectedItem" Value="True" />
        <Setter Property="IsTextEditable" Value="False" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    </Style>


    <DataTemplate x:Key="orientationItemTemplate">
        <StackPanel Orientation="Horizontal">
            <dx:DXImage
                Width="32"
                Height="32"
                DockPanel.Dock="Left"
                Source="{Binding Landscape, Converter={StaticResource orientationGlyphConverter}}" />
            <TextBlock Margin="9,0,0,0" VerticalAlignment="Center" Text="{Binding DisplayName}" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="{dxpt:LWKey BackstagePrintPreview.PrintOptionsTemplate}">
        <dxlc:LayoutControl
            Width="320"
            Padding="0"
            dxe:ValidationService.IsValidationContainer="True"
            IsEnabled="{Binding AllowEditOptions}">
            <dxlc:LayoutGroup Orientation="Vertical">
                <dxlc:LayoutGroup Orientation="Horizontal">
                    <dxlc:LayoutItem HorizontalAlignment="Left">
                        <Button Command="{Binding Path=(dxp:BackstagePrintPreview.ActualPreview).PrintCommand, RelativeSource={RelativeSource Self}}">
                            <StackPanel Margin="24,10,24,12">
                                <dx:DXImage
                                    Width="32"
                                    Height="32"
                                    Margin="0,0,0,9"
                                    Source="{dx:SvgImageSource Uri={dx:PrintingResource Images/BarItems/PrintDialog.svg}}" />
                                <TextBlock Text="{dxp:PrintingStringId StringId=Print}" />
                            </StackPanel>
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Style.Triggers>
                                        <Trigger Property="dxe:ValidationService.HasValidationError" Value="True">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                    </dxlc:LayoutItem>
                    <dxlc:LayoutItem
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        AddColonToLabel="True"
                        Label="{dxp:PrintingStringId StringId=PrintCopies}">
                        <dxe:SpinEdit
                            MinWidth="70"
                            AllowRoundOutOfRangeValue="False"
                            EditValue="{Binding Path=Copies, UpdateSourceTrigger=PropertyChanged}"
                            EditValueType="{x:Type sys:Int16}"
                            IsEnabled="{Binding AllowCopies}"
                            IsFloatValue="False"
                            MaxValue="{Binding MaxCopies}"
                            MinValue="1"
                            ValidateOnTextInput="True" />
                    </dxlc:LayoutItem>
                </dxlc:LayoutGroup>

                <dxlc:LayoutGroup Orientation="Vertical">
                    <dxlc:LayoutItem>
                        <Grid Margin="0,12,0,6">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock FontSize="20" Text="{dxp:PrintingStringId StringId=Printer}" />
                            <dx:DXImage
                                Grid.Column="1"
                                Width="16"
                                Height="16"
                                VerticalAlignment="Center"
                                Source="{dx:SvgImageSource Uri={dx:PrintingResource Images/Printers/Info.svg}}">
                                <dx:DXImage.ToolTip>
                                    <ToolTip>
                                        <StackPanel>
                                            <TextBlock Margin="3,3,3,9" FontWeight="Bold" Text="{Binding SelectedPrinter.FullName}" />
                                            <TextBlock Margin="3" Text="{Binding SelectedPrinter.Status, Converter={dxpn:PrinterStatusConverter StringId=PrinterStatus}}" />
                                            <TextBlock Margin="3,0,3,3" Text="{Binding SelectedPrinter.Location, Converter={dxpn:PrinterStatusConverter StringId=PrinterLocation}}" />
                                            <TextBlock Margin="3,0,3,3" Text="{Binding SelectedPrinter.Comment, Converter={dxpn:PrinterStatusConverter StringId=PrinterComment}}" />
                                            <TextBlock Margin="3,0,3,3" Text="{Binding SelectedPrinter.PrinterDocumentsInQueue, Converter={dxpn:PrinterStatusConverter StringId=PrinterQueue}}" />
                                        </StackPanel>
                                    </ToolTip>
                                </dx:DXImage.ToolTip>
                            </dx:DXImage>
                        </Grid>
                    </dxlc:LayoutItem>
                    <dxlc:LayoutItem>
                        <dxe:ComboBoxEdit
                            DisplayMember="DisplayName"
                            EditValue="{Binding SelectedPrinter, UpdateSourceTrigger=PropertyChanged}"
                            ItemTemplate="{StaticResource printerItemTemplate}"
                            ItemsSource="{Binding Path=AvailablePrinters}"
                            Style="{StaticResource comboboxStyle}" />
                    </dxlc:LayoutItem>
                    <dxlc:LayoutItem AddColonToLabel="True" Label="{dxp:PrintingStringId StringId=PaperSource}">
                        <dxe:ComboBoxEdit
                            EditValue="{Binding PaperSource, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            IsEnabled="{Binding AllowEditPaperSource}"
                            IsTextEditable="false"
                            ItemsSource="{Binding Path=AvailablePaperSources}" />
                    </dxlc:LayoutItem>
                    <dxlc:LayoutItem HorizontalContentAlignment="Right">
                        <Button
                            Command="{Binding Path=ShowPreferencesCommand}"
                            Content="{dxp:PrintingStringId StringId=Preferences}"
                            Cursor="Hand"
                            Template="{StaticResource linkButtonTemplate}" />
                    </dxlc:LayoutItem>
                </dxlc:LayoutGroup>
                <dxlc:LayoutGroup Orientation="Vertical" Visibility="{Binding Path=(dxp:BackstagePrintPreview.ActualPreview).ShowPrintSettings, Converter={dx:BooleanToVisibilityConverter}, RelativeSource={RelativeSource Self}}">
                    <dxlc:LayoutItem>
                        <TextBlock Margin="0,12,0,6" FontSize="20" Text="{dxp:PrintingStringId StringId=PrintPreviewSettings}" />
                    </dxlc:LayoutItem>
                    <dxlc:LayoutItem>
                        <dxe:ComboBoxEdit
                            EditValue="{Binding PrintRange, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            ItemTemplate="{StaticResource pageRangeTemplate}"
                            ItemsSource="{dxpn:SystemPrintRanges}"
                            Style="{StaticResource comboboxStyle}" />
                    </dxlc:LayoutItem>
                    <dxlc:LayoutItem AddColonToLabel="True" Label="{dxp:PrintingStringId StringId=WatermarkPageRangePages}">
                        <dxe:TextEdit
                            VerticalAlignment="Center"
                            EditValue="{Binding Path=CustomPageRange, ValidatesOnDataErrors=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            IsEnabled="{Binding AllowCustomPageRange}"
                            Mask="(\d+(-\d+)?)(,(\d+(-\d+)?))*"
                            MaskShowPlaceHolders="False"
                            MaskType="RegEx" />
                    </dxlc:LayoutItem>
                    <dxlc:LayoutItem>
                        <dxe:ComboBoxEdit
                            EditValue="{Binding Duplex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            IsEnabled="{Binding CanDuplex}"
                            ItemTemplate="{StaticResource duplexModeItemTemplate}"
                            ItemsSource="{dxpn:DuplexDataProvider}"
                            SelectedIndex="0"
                            Style="{StaticResource comboboxStyle}" />
                    </dxlc:LayoutItem>
                    <dxlc:LayoutItem>
                        <dxe:ComboBoxEdit
                            IsEnabled="{Binding AllowCollate}"
                            ItemTemplate="{StaticResource collateItemTemplate}"
                            ItemsSource="{dxpn:CollateValues}"
                            SelectedIndex="{Binding Collate, Converter={StaticResource collateConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Style="{StaticResource comboboxStyle}" />
                    </dxlc:LayoutItem>

                    <dxlc:LayoutItem>
                        <dxe:ComboBoxEdit
                            DisplayMember="DisplayName"
                            EditValue="{Binding Landscape, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            ItemTemplate="{StaticResource orientationItemTemplate}"
                            ItemsSource="{dxpn:PageOrientations}"
                            Style="{StaticResource comboboxStyle}"
                            ValueMember="Landscape" />

                    </dxlc:LayoutItem>
                    <dxlc:LayoutItem>
                        <dxe:ComboBoxEdit
                            DisplayMember="PaperName"
                            EditValue="{Binding SelectedPaperSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            ItemTemplate="{StaticResource paperKindItemTemplate}"
                            ItemsSource="{Binding AvailablePaperSizes}"
                            Style="{StaticResource comboboxStyle}" />
                    </dxlc:LayoutItem>
                    <dxlc:LayoutItem>
                        <dxe:ComboBoxEdit
                            ApplyItemTemplateToSelectedItem="False"
                            EditNonEditableTemplate="{StaticResource pageMarginsDisplayTemplate}"
                            EditValue="{Binding SelectedPageMargins, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            ItemTemplate="{StaticResource pageMarginsItemTemplate}"
                            ItemsSource="{Binding AvailablePageMargins}"
                            Style="{StaticResource comboboxStyle}" />
                    </dxlc:LayoutItem>
                    <dxlc:LayoutItem HorizontalAlignment="Right">
                        <Button
                            Command="{Binding ShowPageSetupCommand}"
                            Content="{dxp:PrintingStringId StringId=PageSetup}"
                            Cursor="Hand"
                            Template="{StaticResource linkButtonTemplate}" />
                    </dxlc:LayoutItem>
                </dxlc:LayoutGroup>
            </dxlc:LayoutGroup>
        </dxlc:LayoutControl>
    </DataTemplate>

    <DataTemplate x:Key="{dxpt:LWKey BackstagePrintPreview.StatusBarTemplate}">
        <dxb:StatusBarControl
            Margin="30,0,0,0"
            AllowCustomizationMenu="False"
            GlyphSize="Small"
            ShowBackground="False"
            ShowSizeGrip="False">
            <pcb:FirstPageBarItem Command="{Binding Path=ActualCommandProvider.FirstPageCommand, ElementName=PART_Preview}" GlyphSize="Small" />
            <pcb:PreviousPageBarItem Command="{Binding Path=ActualCommandProvider.PreviousPageCommand, ElementName=PART_Preview}" GlyphSize="Small" />
            <pcb:PageNumberEditItem Content="{x:Null}" SettingsSource="{Binding ElementName=PART_Preview}">
                <pcb:PageNumberEditItem.Content2Template>
                    <DataTemplate>
                        <TextBlock VerticalAlignment="Center" Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type dxb:BarEditItemLinkControl}}}" Text="{Binding}" />
                    </DataTemplate>
                </pcb:PageNumberEditItem.Content2Template>
            </pcb:PageNumberEditItem>
            <pcb:LastPageBarItem Command="{Binding Path=ActualCommandProvider.LastPageCommand, ElementName=PART_Preview}" GlyphSize="Small" />
            <pcb:NextPageBarItem Command="{Binding Path=ActualCommandProvider.NextPageCommand, ElementName=PART_Preview}" GlyphSize="Small" />
            <pcb:ProgressEditItem ProgressSettings="{Binding Document, ElementName=PART_Preview, FallbackValue={x:Null}}" />
            <pcb:StopPageBuildItem Glyph="{local:PrintingResourceImage ResourceName=Images/BarItems/Stop.svg}" Command="{Binding Path=ActualCommandProvider.StopPageBuildingCommand, ElementName=PART_Preview}" />
            <dxb:BarEditItem
                Alignment="Far"
                Content="{Binding Path=(dxp:BackstagePrintPreview.ActualPreview).ZoomFactor, FallbackValue={x:Null}, Converter={dxmvvm:FormatStringConverter FormatString=P0}, RelativeSource={RelativeSource Self}}"
                EditValue="{Binding Path=(dxp:BackstagePrintPreview.ActualPreview).ZoomFactor, FallbackValue=1, Converter={pcn:TrackBarZoomValueConverter MinZoomValue=0.1, MaxZoomValue=5}, RelativeSource={RelativeSource TemplatedParent}}"
                EditWidth="120">
                <dxb:BarEditItem.ContentTemplate>
                    <DataTemplate>
                        <TextBlock VerticalAlignment="Center" Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type dxb:BarEditItemLinkControl}}}" Text="{Binding}" />
                    </DataTemplate>
                </dxb:BarEditItem.ContentTemplate>
                <dxb:BarEditItem.EditSettings>
                    <dxe:TrackBarEditSettings
                        LargeStep="0.1"
                        Maximum="2"
                        Minimum="0"
                        SmallStep="0.05"
                        TickFrequency="2"
                        TickPlacement="None">
                        <dxe:TrackBarEditSettings.StyleSettings>
                            <dxe:TrackBarZoomStyleSettings />
                        </dxe:TrackBarEditSettings.StyleSettings>
                    </dxe:TrackBarEditSettings>
                </dxb:BarEditItem.EditSettings>
            </dxb:BarEditItem>
            <dxb:BarButtonItem
                Alignment="Far"
                Command="{Binding SetZoomModeCommand, ElementName=PART_Preview}"
                CommandParameter="PageLevel"
                Glyph="{dx:SvgImageSource Uri={dx:PrintingResource Images/BarItems/Scaling.svg}}"
                Hint="{dxp:PrintingStringId StringId=ZoomToWholePage}"
                LargeGlyph="{dx:SvgImageSource Uri={dx:PrintingResource Images/BarItems/Scaling.svg}}" />
        </dxb:StatusBarControl>
    </DataTemplate>

    <ControlTemplate x:Key="{dxpt:LWKey BackstagePrintPreview.Template}" TargetType="{x:Type dxp:BackstagePrintPreview}">
        <Grid Name="root">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition MaxWidth="1" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>
            <TextBlock
                Grid.ColumnSpan="3"
                Margin="0,0,0,12"
                FontSize="40"
                Text="{dxp:PrintingStringId StringId=PrintPreviewTitle}" />
            <ScrollViewer
                Grid.Row="1"
                Grid.RowSpan="2"
                HorizontalScrollBarVisibility="Disabled"
                VerticalScrollBarVisibility="Auto">
                <StackPanel Margin="0,0,40,0">
                    <ContentControl Content="{TemplateBinding PrintOptions}" ContentTemplate="{TemplateBinding PrintOptionsTemplate}" Focusable="False" />
                    <ContentControl Content="{TemplateBinding CustomSettings}" ContentTemplate="{TemplateBinding CustomSettingsTemplate}" Focusable="False" />
                </StackPanel>

            </ScrollViewer>
            <dx:ThemedBorder
                Grid.Row="1"
                Grid.RowSpan="2"
                Grid.Column="1"
                Width="1"
                BorderThickness="1" />
            <dxp:DocumentPreviewControl
                x:Name="PART_Preview"
                Grid.Row="1"
                Grid.Column="2"
                Margin="40,0,0,0"
                BarsTemplate="{x:Null}"
                CommandBarStyle="None"
                DocumentSource="{TemplateBinding DocumentSource}"
                EnableContinuousScrolling="{TemplateBinding EnableContinuousScrolling}"
                Focusable="False"
                PresenterTemplate="{DynamicResource {dxpt:LWKey BackstagePrintPreview.DocumentPresenterTemplate}}"
                RequestDocumentCreation="True"
                ResetSettingsOnDocumentClose="False"
                RibbonTemplate="{x:Null}"
                Style="{DynamicResource {dxpt:LWKey BackstagePrintPreview.DocumentPreviewStyle}}"
                Visibility="{TemplateBinding ShowPreview, Converter={dx:BooleanToVisibilityConverter}}"
                ZoomFactor="{Binding ZoomFactor, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                ZoomMode="{Binding ZoomMode, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                <dxp:DocumentPreviewControl.Resources>
                    <Style TargetType="dxpn:PreviewSurface">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate />
                            </Setter.Value>
                        </Setter>
                    </Style>
                </dxp:DocumentPreviewControl.Resources>
            </dxp:DocumentPreviewControl>
            <ContentControl
                Grid.Row="2"
                Grid.Column="2"
                ContentTemplate="{TemplateBinding StatusBarTemplate}"
                Visibility="{TemplateBinding ShowPreview, Converter={dx:BooleanToVisibilityConverter}}" />
        </Grid>
    </ControlTemplate>

    <DataTemplate x:Key="{dxpt:LWKey BackstagePrintPreview.DocumentPresenterTemplate}">
        <dxp:DocumentPresenterControl>
            <dxb:BarManager.DXContextMenu>
                <dxb:PopupMenu>
                    <pcb:HandToolBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.HandTool}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.HandToolCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <pcb:SelectToolBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.SelectTool}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.SelectToolCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <dxb:BarItemSeparator />
                    <pcb:CopyBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.Copy}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.CopyCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                </dxb:PopupMenu>
            </dxb:BarManager.DXContextMenu>
        </dxp:DocumentPresenterControl>
    </DataTemplate>

    <Style x:Key="{dxpt:LWKey BackstagePrintPreview.DocumentPreviewStyle}" TargetType="{x:Type dxp:DocumentPreviewControl}">
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
        <Setter Property="CursorMode" Value="HandTool" />
        <Setter Property="PresenterTemplate" Value="{DynamicResource {dxpt:LWKey BackstagePrintPreview.DocumentPresenterTemplate}}" />
    </Style>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\BackstageDocumentPreviewControl.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\CharacterComb.xaml-->
    <ControlTemplate x:Key="editTemplateCharacter">
        <Grid RenderOptions.BitmapScalingMode="HighQuality" RenderOptions.EdgeMode="Aliased">
            <dxe:NativeImage x:Name="PART_NativeImage" UseLayoutRounding="True" />
            <pcne:CharacterCombCaret x:Name="PART_Caret" />
            <TextBox x:Name="PART_Editor" VerticalAlignment="Stretch" Opacity="0" />
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="editInplaceTemplate">
        <Grid>
            <dxe:NativeImage x:Name="PART_NativeImage" UseLayoutRounding="True" />
            <pcne:CharacterCombCaret x:Name="PART_Caret" />
            <TextBox x:Name="PART_Editor" VerticalAlignment="Stretch" Opacity="0" />
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="editNonEditableTemplate">
        <Grid>
            <dxe:NativeImage x:Name="PART_NativeImage" UseLayoutRounding="True" />
            <TextBlock x:Name="PART_Editor" dx:FocusHelper2.Focusable="False" Opacity="0" />
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="editNonEditableInplaceTemplate" />
    <ControlTemplate x:Key="displayInplaceTemplate">
        <Grid>
            <dxe:NativeImage x:Name="PART_NativeImage" UseLayoutRounding="True" />
            <TextBlock x:Name="PART_Editor" dx:FocusHelper2.Focusable="False" Opacity="0" />
        </Grid>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\CharacterComb.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\Constants.xaml-->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\Constants.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\DateRangeEditor.xaml-->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\DateRangeEditor.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\DialogsTemplates.xaml-->
    <Style x:Key="baseDialogWindow" TargetType="{x:Type dx:ThemedWindow}">
        <Setter Property="dxe:ValidationService.IsValidationContainer" Value="True" />
        <Setter Property="SizeToContent" Value="WidthAndHeight" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="ShowIcon" Value="False" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="ShowInTaskbar" Value="False" />
    </Style>
    <ControlTemplate x:Key="toogleButtonTemplate" TargetType="ToggleButton">
        <Grid Background="Transparent">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Grid
                x:Name="Root"
                Width="16"
                Height="16"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Background="Transparent">
                <dx:DXBorder
                    x:Name="IsUnchecked"
                    Width="Auto"
                    Height="Auto"
                    CornerRadius="2">
                    <Path
                        Width="6"
                        Height="7"
                        Margin="2,0,1,0"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Data="F1 M 26,22.0001L 26,14.0001L 30,18.0001L 26,22.0001 Z "
                        Fill="{TemplateBinding Foreground}"
                        Stretch="Fill" />
                </dx:DXBorder>
                <dx:DXBorder
                    x:Name="IsChecked"
                    Width="9"
                    Height="9"
                    CornerRadius="2"
                    Visibility="Collapsed">
                    <Path
                        Width="7"
                        Height="6"
                        Margin="0,1,0,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Data="F1 M 32.9999,14.0001L 40.9999,14.0001L 37,18.0001L 32.9999,14.0001 Z "
                        Fill="{TemplateBinding Foreground}"
                        Stretch="Fill" />
                </dx:DXBorder>
            </Grid>
            <TextBlock Grid.Column="1" Text="{dxp:PrintingStringId StringId=MoreOptions}" TextAlignment="Left" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="IsUnchecked" Storyboard.TargetProperty="(UIElement.Opacity)" To="0.5" Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Unchecked" />
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IsUnchecked" Storyboard.TargetProperty="(UIElement.Visibility)" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>
                                            Collapsed
                                        </Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IsChecked" Storyboard.TargetProperty="(UIElement.Visibility)" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>
                                            Visible
                                        </Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Indeterminate" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <Style x:Key="customFooterbaseDialogWindow" TargetType="{x:Type dx:ThemedWindow}" BasedOn="{StaticResource baseDialogWindow}">
        <Setter Property="dxi:ThemedWindowOptions.UseCustomDialogFooter" Value="True" />
    </Style>
    <Style x:Key="{dxpt:LWKey NewDocumentViewer.CustomFooterDialogStyle}" BasedOn="{StaticResource customFooterbaseDialogWindow}" TargetType="{x:Type dx:ThemedWindow}" />

    <Style x:Key="{dxpt:LWKey NewDocumentViewer.CommonDialogStyle}" BasedOn="{StaticResource baseDialogWindow}" TargetType="{x:Type dx:ThemedWindow}" />

    <DataTemplate x:Key="{dxpt:LWKey NewDocumentViewer.WatermarkDialogTemplate}">
        <Grid HorizontalAlignment="Stretch">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>
            <dxmvvm:Interaction.Behaviors>
                <dxmvvm:OpenFileDialogService />
                <dx:DXMessageBoxService />
            </dxmvvm:Interaction.Behaviors>
            <dxlc:LayoutControl Orientation="Horizontal">
                <dxlc:LayoutControl.Resources>
                    <Style x:Key="LayoutGroupWithStandardGroupBoxWithMargins" TargetType="dxlc:LayoutGroup">
                        <Setter Property="View" Value="GroupBox" />
                        <Setter Property="GroupBoxStyle">
                            <Setter.Value>
                                <Style TargetType="dxlc:GroupBox">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="dxlc:GroupBox">
                                                <GroupBox Header="{TemplateBinding Header}" HeaderTemplate="{TemplateBinding HeaderTemplate}">
                                                    <dx:DXContentPresenter x:Name="ContentElement" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding CurrentContentTemplate}" />
                                                </GroupBox>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </dxlc:LayoutControl.Resources>
                <dxlc:LayoutGroup Orientation="Vertical" VerticalAlignment="Stretch" Width="200">
                    <Grid Width="auto" Height="300">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Button HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Command="{Binding AddWatermark}">
                            <Button.Content>
                                <dx:DXImage Width="16" Height="16" Source="{local:PrintingResourceImage ResourceName=Images/Actions/Add.svg}" />
                            </Button.Content>
                        </Button>
                        <Button
                            Grid.Column="3"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Command="{Binding MoveUp}">
                            <Button.Content>
                                <dx:DXImage Width="16" Height="16" Source="{local:PrintingResourceImage ResourceName=Images/Actions/ArrowUp.svg}" />
                            </Button.Content>
                        </Button>
                        <Button
                            Grid.Column="4"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Command="{Binding MoveDown}">
                            <Button.Content>
                                <dx:DXImage Width="16" Height="16" Source="{local:PrintingResourceImage ResourceName=Images/Actions/ArrowDown.svg}" />
                            </Button.Content>
                        </Button>

                        <dxe:ListBoxEdit
                            Grid.Row="1"
                            Grid.ColumnSpan="5"
                            ItemsSource="{Binding WatermarkItems}"
                            HorizontalContentAlignment="Stretch"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch">
                            <dxe:ListBoxEdit.ItemContainerStyle>
                                <Style TargetType="{x:Type ListBoxItem}">
                                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                </Style>
                            </dxe:ListBoxEdit.ItemContainerStyle>
                            <dxe:ListBoxEdit.ItemTemplate>
                                <DataTemplate>
                                    <DataTemplate.Resources>
                                        <dxpn:BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
                                    </DataTemplate.Resources>
                                    <Grid HorizontalAlignment="Stretch">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="auto" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{Binding Id}" />
                                        <Button Grid.Column="2" Command="{Binding DeleteWatermark}" Visibility="{Binding IsSelected, Converter={StaticResource booleanToVisibilityConverter}}">
                                            <Button.Content>
                                                <dx:DXImage Width="16" Height="16" Source="{local:PrintingResourceImage ResourceName=Images/Actions/Trash.svg}" />
                                            </Button.Content>
                                        </Button>
                                    </Grid>
                                </DataTemplate>
                            </dxe:ListBoxEdit.ItemTemplate>
                        </dxe:ListBoxEdit>
                    </Grid>
                </dxlc:LayoutGroup>
                <dxlc:LayoutGroup Orientation="Vertical" VerticalAlignment="Stretch" Width="663" Visibility="{Binding PlaceholderVisibility, Mode=OneWay}">
                    <TextBlock Text="{local:PrintingStringId StringId=WatermarkPlaceholder}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                </dxlc:LayoutGroup>
                <dxlc:LayoutGroup VerticalAlignment="Stretch" Orientation="Vertical" Visibility="{Binding EditorVisibility, Mode=OneWay}">
                    <dxlc:LayoutGroup View="Tabs">
                        <dxlc:LayoutGroup Header="{dxp:PrintingStringId StringId=TextWatermarkTitle}" Orientation="Vertical">
                            <dxlc:LayoutItem Label="{dxp:PrintingStringId StringId=WatermarkText}" LabelPosition="Left">
                                <dxe:ComboBoxEdit
                                    Name="textEditor"
                                    Width="352"
                                    EditValue="{Binding Text, UpdateSourceTrigger=PropertyChanged}"
                                    ItemsSource="{x:Static xpds:WMTextConverter.StandardValues}" />
                            </dxlc:LayoutItem>

                            <dxlc:LayoutGroup IsEnabled="{Binding Text, Converter={dxmvvm:StringToBooleanConverter}}" Orientation="Vertical">
                                <dxlc:LayoutGroup Orientation="Horizontal">
                                    <dxlc:LayoutGroup Orientation="Vertical">
                                        <dxlc:LayoutItem Label="{dxp:PrintingStringId StringId=WatermarkTextDirection}" LabelPosition="Left">
                                            <dxe:ComboBoxEdit EditValue="{Binding TextDirection, UpdateSourceTrigger=PropertyChanged}" IsTextEditable="False" ItemsSource="{dxe:EnumItemsSource EnumType=xpdr:DirectionMode, NameConverter={dxpn:DirectionModeDisplayNameConverter}}" />
                                        </dxlc:LayoutItem>
                                        <dxlc:LayoutItem Label="{dxp:PrintingStringId StringId=WatermarkFontName}" LabelPosition="Left">
                                            <dxe:ComboBoxEdit EditValue="{Binding TextFontFamily, UpdateSourceTrigger=PropertyChanged}" IsTextEditable="False" ItemsSource="{dxpn:FontFamiliesCollection}">
                                                <dxe:ComboBoxEdit.ItemTemplate>
                                                    <DataTemplate>
                                                        <TextBlock FontFamily="{Binding}" Text="{Binding}" />
                                                    </DataTemplate>
                                                </dxe:ComboBoxEdit.ItemTemplate>
                                            </dxe:ComboBoxEdit>
                                        </dxlc:LayoutItem>
                                    </dxlc:LayoutGroup>
                                    <dxlc:LayoutGroup Margin="25,0,0,0" Orientation="Vertical">
                                        <dxlc:LayoutItem Label="{dxp:PrintingStringId StringId=WatermarkTextColor}" LabelPosition="Left">
                                            <dxe:PopupColorEdit EditValue="{Binding TextForeground, UpdateSourceTrigger=PropertyChanged}" />
                                        </dxlc:LayoutItem>
                                        <dxlc:LayoutItem Label="{dxp:PrintingStringId StringId=WatermarkFontSize}" LabelPosition="Left">
                                            <dxe:ComboBoxEdit EditValue="{Binding TextFontSize, UpdateSourceTrigger=PropertyChanged}">
                                                <dxe:ComboBoxEdit.ItemsSource>
                                                    <dxpn:PredefinedFontSizeFCollection />
                                                </dxe:ComboBoxEdit.ItemsSource>
                                            </dxe:ComboBoxEdit>
                                        </dxlc:LayoutItem>
                                    </dxlc:LayoutGroup>
                                </dxlc:LayoutGroup>
                                <dxlc:LayoutItem Label=" ">
                                    <StackPanel Orientation="Horizontal">
                                        <dxe:CheckEdit
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            Content="{dxp:PrintingStringId StringId=WatermarkFontItalic}"
                                            EditValue="{Binding TextIsItalic, UpdateSourceTrigger=PropertyChanged}" />
                                        <dxe:CheckEdit
                                            Margin="12,0,0,0"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            Content="{dxp:PrintingStringId StringId=WatermarkFontBold}"
                                            EditValue="{Binding TextIsBold, UpdateSourceTrigger=PropertyChanged}" />
                                    </StackPanel>
                                </dxlc:LayoutItem>
                                <dxlc:LayoutItem Label="{dxp:PrintingStringId StringId=WatermarkTransparency}" LabelPosition="Left">
                                    <dxe:TrackBarEdit
                                        EditValue="{Binding Path=TextTransparency, UpdateSourceTrigger=PropertyChanged}"
                                        LargeStep="25"
                                        Maximum="255"
                                        Minimum="0"
                                        SmallStep="10" />
                                </dxlc:LayoutItem>
                                <dxlc:LayoutItem Label="{dxp:PrintingStringId StringId=WatermarkPosition}" LabelPosition="Left">
                                    <dxe:ListBoxEdit ShowBorder="False" ItemsSource="{dxpn:PositionsItemsSource}" EditValue="{Binding TextPosition, UpdateSourceTrigger=PropertyChanged}">
                                        <dxe:ListBoxEdit.Resources>
                                            <dxpn:WatermarkPositionBoolConverter x:Key="positionBoolConverter" BehindText="{dxp:PrintingStringId StringId=WatermarkPositionBehind}" InFrontText="{dxp:PrintingStringId StringId=WatermarkPositionInFront}" />
                                        </dxe:ListBoxEdit.Resources>
                                        <dxe:ListBoxEdit.StyleSettings>
                                            <dxe:RadioListBoxEditStyleSettings />
                                        </dxe:ListBoxEdit.StyleSettings>
                                        <dxe:ListBoxEdit.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Horizontal" />
                                            </ItemsPanelTemplate>
                                        </dxe:ListBoxEdit.ItemsPanel>
                                        <dxe:ListBoxEdit.ItemTemplateSelector>
                                            <dxpn:PositionTemplateSelector>
                                                <dxpn:PositionTemplateSelector.InFrontValueTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding Converter={StaticResource positionBoolConverter}}" />
                                                    </DataTemplate>
                                                </dxpn:PositionTemplateSelector.InFrontValueTemplate>
                                                <dxpn:PositionTemplateSelector.BehindValueTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding Converter={StaticResource positionBoolConverter}}" />
                                                    </DataTemplate>
                                                </dxpn:PositionTemplateSelector.BehindValueTemplate>
                                            </dxpn:PositionTemplateSelector>
                                        </dxe:ListBoxEdit.ItemTemplateSelector>
                                    </dxe:ListBoxEdit>
                                </dxlc:LayoutItem>
                            </dxlc:LayoutGroup>
                        </dxlc:LayoutGroup>
                        <dxlc:LayoutGroup Header="{dxp:PrintingStringId StringId=PictureWatermarkTitle}" Orientation="Vertical">
                            <dxlc:LayoutGroup Orientation="Vertical">
                                <dxlc:LayoutItem Label="{dxp:PrintingStringId StringId=WatermarkLoadImage}" LabelPosition="Left">
                                    <dxe:ButtonEdit
                                        AllowDefaultButton="False"
                                        EditValue="{Binding ImageFileName, Mode=OneWay}"
                                        FontStyle="Italic"
                                        IsReadOnly="True"
                                        IsTextEditable="False">
                                        <dxe:ButtonEdit.Buttons>
                                            <dxe:ButtonInfo Command="{Binding OpenImageCommand}" GlyphKind="Regular" />
                                        </dxe:ButtonEdit.Buttons>
                                    </dxe:ButtonEdit>
                                </dxlc:LayoutItem>
                                <dxlc:LayoutGroup IsEnabled="{Binding ImageSource, Converter={dxmvvm:ObjectToBooleanConverter}}" Orientation="Vertical">
                                    <dxlc:LayoutGroup Orientation="Horizontal">
                                        <dxlc:LayoutItem Label="{dxp:PrintingStringId StringId=WatermarkImageSizeMode}" LabelPosition="Left">
                                            <dxe:ComboBoxEdit EditValue="{Binding ImageViewMode, UpdateSourceTrigger=PropertyChanged}" IsTextEditable="False" ItemsSource="{dxe:EnumItemsSource EnumType=xpdr:ImageViewMode, NameConverter={dxpn:ImageViewModeDisplayNameConverter}}" />
                                        </dxlc:LayoutItem>
                                        <dxlc:LayoutItem Margin="10,0,0,0" HorizontalAlignment="Right" HorizontalContentAlignment="Right">
                                            <dxe:CheckEdit
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center"
                                                Content="{dxp:PrintingStringId StringId=WatermarkImageTiling}"
                                                IsChecked="{Binding ImageIsTiled}" />
                                        </dxlc:LayoutItem>
                                    </dxlc:LayoutGroup>
                                    <dxlc:LayoutItem Label="{dxp:PrintingStringId StringId=WatermarkImageHorizontalAlignment}" LabelPosition="Left">
                                        <dxe:ComboBoxEdit EditValue="{Binding ImageHorizontalAlignment, UpdateSourceTrigger=PropertyChanged}" IsTextEditable="False" ItemsSource="{dxpn:WatermarkPictureHorizontalAlignment}" />
                                    </dxlc:LayoutItem>
                                    <dxlc:LayoutItem Label="{dxp:PrintingStringId StringId=WatermarkImageVerticalAlignment}" LabelPosition="Left">
                                        <dxe:ComboBoxEdit EditValue="{Binding ImageVerticalAlignment, UpdateSourceTrigger=PropertyChanged}" IsTextEditable="False" ItemsSource="{dxpn:WatermarkPictureVerticalAlignment}" />
                                    </dxlc:LayoutItem>
                                    <dxlc:LayoutItem Label="{dxp:PrintingStringId StringId=WatermarkTransparency}" LabelPosition="Left">
                                        <dxe:TrackBarEdit
                                            EditValue="{Binding ImageTransparency, UpdateSourceTrigger=PropertyChanged}"
                                            Maximum="255"
                                            Minimum="0"
                                            SmallStep="10" />
                                    </dxlc:LayoutItem>
                                    <dxlc:LayoutItem Label="{dxp:PrintingStringId StringId=WatermarkPosition}" LabelPosition="Left">
                                        <dxe:ListBoxEdit ShowBorder="False" ItemsSource="{dxpn:PositionsItemsSource}" EditValue="{Binding ImagePosition, UpdateSourceTrigger=PropertyChanged}">
                                            <dxe:ListBoxEdit.Resources>
                                                <dxpn:WatermarkPositionBoolConverter x:Key="positionBoolConverter" BehindText="{dxp:PrintingStringId StringId=WatermarkPositionBehind}" InFrontText="{dxp:PrintingStringId StringId=WatermarkPositionInFront}" />
                                            </dxe:ListBoxEdit.Resources>
                                            <dxe:ListBoxEdit.StyleSettings>
                                                <dxe:RadioListBoxEditStyleSettings />
                                            </dxe:ListBoxEdit.StyleSettings>
                                            <dxe:ListBoxEdit.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <StackPanel Orientation="Horizontal" />
                                                </ItemsPanelTemplate>
                                            </dxe:ListBoxEdit.ItemsPanel>
                                            <dxe:ListBoxEdit.ItemTemplateSelector>
                                                <dxpn:PositionTemplateSelector>
                                                    <dxpn:PositionTemplateSelector.InFrontValueTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding Converter={StaticResource positionBoolConverter}}" />
                                                        </DataTemplate>
                                                    </dxpn:PositionTemplateSelector.InFrontValueTemplate>
                                                    <dxpn:PositionTemplateSelector.BehindValueTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding Converter={StaticResource positionBoolConverter}}" />
                                                        </DataTemplate>
                                                    </dxpn:PositionTemplateSelector.BehindValueTemplate>
                                                </dxpn:PositionTemplateSelector>
                                            </dxe:ListBoxEdit.ItemTemplateSelector>
                                        </dxe:ListBoxEdit>
                                    </dxlc:LayoutItem>
                                </dxlc:LayoutGroup>
                            </dxlc:LayoutGroup>
                        </dxlc:LayoutGroup>
                    </dxlc:LayoutGroup>
                    <dxlc:LayoutGroup VerticalAlignment="Top" Orientation="Horizontal">
                        <dxlc:LayoutGroup
                            Orientation="Vertical"
                            Width="150"
                            Style="{StaticResource LayoutGroupWithStandardGroupBoxWithMargins}"
                            Header="{dxp:PrintingStringId StringId=WatermarkId}">
                            <dxlc:LayoutGroup Orientation="Horizontal">
                                <dxe:TextEdit
                                    EditValue="{Binding Id, UpdateSourceTrigger=PropertyChanged}"
                                    Margin="5,0,0,0"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Center" />
                            </dxlc:LayoutGroup>
                        </dxlc:LayoutGroup>
                        <dxlc:LayoutGroup Header="{dxp:PrintingStringId StringId=WatermarkPageRange}" Orientation="Vertical" Style="{StaticResource LayoutGroupWithStandardGroupBoxWithMargins}">
                            <dxlc:LayoutGroup Orientation="Horizontal">
                                <dxlc:LayoutItem>
                                    <dxe:ListBoxEdit EditValue="{Binding IsPageRange, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{dxpn:BooleanItemsSource}" ShowBorder="False">
                                        <dxe:ListBoxEdit.Resources>
                                            <dxmvvm:BooleanToObjectConverter x:Key="booleanToTextConverter" FalseValue="{dxp:PrintingStringId StringId=WatermarkPageRangeAllPages}" TrueValue="{dxp:PrintingStringId StringId=WatermarkPageRangePages}" />
                                        </dxe:ListBoxEdit.Resources>
                                        <dxe:ListBoxEdit.StyleSettings>
                                            <dxe:RadioListBoxEditStyleSettings />
                                        </dxe:ListBoxEdit.StyleSettings>
                                        <dxe:ListBoxEdit.ItemTemplateSelector>
                                            <dxpn:BooleanTemplateSelector>
                                                <dxpn:BooleanTemplateSelector.FalseValueTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding Converter={StaticResource booleanToTextConverter}}" />
                                                    </DataTemplate>
                                                </dxpn:BooleanTemplateSelector.FalseValueTemplate>
                                                <dxpn:BooleanTemplateSelector.TrueValueTemplate>
                                                    <DataTemplate>
                                                        <StackPanel Orientation="Horizontal">
                                                            <TextBlock VerticalAlignment="Center" Text="{Binding Converter={StaticResource booleanToTextConverter}}" />
                                                            <dxe:TextEdit
                                                                Width="100"
                                                                Margin="5,0,0,0"
                                                                VerticalAlignment="Center"
                                                                EditValue="{Binding DataContext.PageRange, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxe:ListBoxEdit}}"
                                                                IsEnabled="{Binding DataContext.IsPageRange, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxe:ListBoxEdit}}"
                                                                Mask="((\d+(-\d+?)?)(\,(\d+(-\d+?)?)?)*)?"
                                                                MaskType="RegEx"
                                                                MaskUseAsDisplayFormat="True"
                                                                NullText="{Binding DataContext.PageRangePlaceholder, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxe:ListBoxEdit}}" />
                                                            <TextBlock Margin="5,0,0,0" VerticalAlignment="Center" Text="{dxp:PrintingStringId StringId=WatermarkPageRangeHint}" />
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </dxpn:BooleanTemplateSelector.TrueValueTemplate>
                                            </dxpn:BooleanTemplateSelector>
                                        </dxe:ListBoxEdit.ItemTemplateSelector>
                                    </dxe:ListBoxEdit>
                                </dxlc:LayoutItem>
                            </dxlc:LayoutGroup>
                        </dxlc:LayoutGroup>
                    </dxlc:LayoutGroup>
                </dxlc:LayoutGroup>
                <dx:BackgroundPanel x:Name="PART_PreviewImage" Width="200" Margin="0,0,6,0" Visibility="{Binding EditorVisibility, Mode=OneWay}">
                    <dxmvvm:Interaction.Behaviors>
                        <dxpn:WatermarkPreviewAreaProvider />
                        <dxmvvm:EventToCommand Command="{Binding UpdatePreviewCommand}" Event="Loaded" />
                    </dxmvvm:Interaction.Behaviors>

                    <Grid HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="True">
                        <Image IsHitTestVisible="False" Source="{Binding PreviewImage, UpdateSourceTrigger=PropertyChanged}" Stretch="None" />
                        <dx:DXBorder Background="Transparent" BorderBrush="#FFC3C3C3" BorderThickness="1" />
                    </Grid>
                </dx:BackgroundPanel>

            </dxlc:LayoutControl>
            <dx:ThemedWindowDialogButtonsControl Grid.Row="1">
                <dx:ThemedWindowDialogButton Alignment="Right" Content="{dxe:EditorStringId OK}" DialogResult="OK" />
                <dx:ThemedWindowDialogButton Alignment="Right" Content="{dxe:EditorStringId Cancel}" DialogResult="Cancel" />
            </dx:ThemedWindowDialogButtonsControl>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="{dxpt:LWKey NewDocumentViewer.PageSetupDialogTemplate}">
        <DataTemplate.Resources>
            <Style x:Key="baseEditWidthStyle" TargetType="dxe:BaseEdit">
                <Setter Property="Width" Value="120" />
            </Style>
            <Style x:Key="labelStyle" TargetType="TextBlock">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Margin" Value="0,0,4,0" />
            </Style>
            <Style x:Key="pageSettingsEditorStyle" BasedOn="{StaticResource baseEditWidthStyle}" TargetType="dxe:TextEdit">
                <Setter Property="Margin" Value="0,0,0,4" />
                <Setter Property="MaskType" Value="Numeric" />
                <Setter Property="Mask" Value="{Binding Mask}" />
                <Setter Property="HorizontalContentAlignment" Value="Right" />
                <Setter Property="DisplayFormatString" Value="{Binding DisplayFormat}" />
            </Style>
            <Style x:Key="groupStyle" TargetType="dxlc:GroupBox">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="SeparatorBrush" Value="Transparent" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=(dx:ThemeManager.ThemeName), RelativeSource={RelativeSource AncestorType=Window}}" Value="Office2016WhiteSE">
                        <Setter Property="TitleBackground" Value="#22b0b0b0" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="marginStyle" TargetType="Line">
                <Setter Property="StrokeDashArray" Value="2" />
                <Setter Property="StrokeThickness" Value="1" />
                <Setter Property="Stroke" Value="Gray" />
            </Style>
        </DataTemplate.Resources>

        <dxlc:LayoutControl
            Margin="24,24,24,0"
            Padding="0"
            Grid.IsSharedSizeScope="True"
            Orientation="Horizontal">
            <dxlc:LayoutGroup HorizontalAlignment="Stretch" VerticalAlignment="Top" Orientation="Vertical">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="4*" />
                        <ColumnDefinition Width="5*" />
                    </Grid.ColumnDefinitions>
                    <dxlc:LayoutItem Width="250" VerticalAlignment="Stretch">
                        <dx:DXBorder Grid.Column="0" Margin="0,0,32,0" Background="#22b0b0b0">
                            <Grid Margin="24">
                                <dxmvvm:Interaction.Behaviors>
                                    <dxpn:PageSettingsPreviewPainter
                                        BottomMargin="{Binding AssociatedObject.DataContext.BottomMargin, RelativeSource={RelativeSource Self}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                        Landscape="{Binding AssociatedObject.DataContext.Landscape, RelativeSource={RelativeSource Self}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                        LeftMargin="{Binding AssociatedObject.DataContext.LeftMargin, RelativeSource={RelativeSource Self}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                        PaperHeight="{Binding AssociatedObject.DataContext.PaperHeight, RelativeSource={RelativeSource Self}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                        PaperKind="{Binding AssociatedObject.DataContext.PaperKind, RelativeSource={RelativeSource Self}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                        PaperWidth="{Binding AssociatedObject.DataContext.PaperWidth, RelativeSource={RelativeSource Self}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                        RightMargin="{Binding AssociatedObject.DataContext.RightMargin, RelativeSource={RelativeSource Self}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                        TopMargin="{Binding AssociatedObject.DataContext.TopMargin, RelativeSource={RelativeSource Self}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                                </dxmvvm:Interaction.Behaviors>
                                <dx:DXBorder
                                    Background="White"
                                    BorderBrush="Gray"
                                    BorderThickness="1"
                                    CornerRadius="2" />
                                <dx:DXBorder>
                                    <Grid>
                                        <Line
                                            Width="1"
                                            Margin="1,0,0,0"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Stretch"
                                            Style="{StaticResource marginStyle}"
                                            Y2="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Grid}}" />
                                        <Line
                                            Width="1"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Stretch"
                                            Style="{StaticResource marginStyle}"
                                            Y2="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Grid}}" />
                                    </Grid>
                                </dx:DXBorder>
                                <dx:DXBorder>
                                    <Grid>
                                        <Line
                                            Height="1"
                                            Margin="0,1,0,0"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Top"
                                            Style="{StaticResource marginStyle}"
                                            X2="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Grid}}" />
                                        <Line
                                            Height="1"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Bottom"
                                            Style="{StaticResource marginStyle}"
                                            X2="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Grid}}" />
                                    </Grid>
                                </dx:DXBorder>
                            </Grid>
                        </dx:DXBorder>
                    </dxlc:LayoutItem>
                    <dxlc:LayoutGroup Grid.Column="1" ItemLabelsAlignment="Local" Orientation="Vertical">
                        <dxlc:LayoutGroup
                            GroupBoxStyle="{StaticResource groupStyle}"
                            Header="{dxp:PrintingStringId StringId=PageSetupPaperCaption}"
                            Orientation="Vertical"
                            View="GroupBox">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto" SharedSizeGroup="title" />
                                    <ColumnDefinition Width="auto" SharedSizeGroup="editor" />
                                    <ColumnDefinition Width="24" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                </Grid.RowDefinitions>
                                <TextBlock Margin="0,0,0,12" Style="{StaticResource labelStyle}" Text="{dxp:PrintingStringId StringId=PageSetupSize}" />
                                <TextBlock
                                    Grid.Row="1"
                                    Margin="0,0,0,12"
                                    Style="{StaticResource labelStyle}"
                                    Text="{dxp:PrintingStringId StringId=PageSetupUnits}" />
                                <TextBlock Grid.Row="2" Style="{StaticResource labelStyle}" Text="{dxp:PrintingStringId StringId=PageSetupWidth}" />
                                <TextBlock Grid.Row="3" Style="{StaticResource labelStyle}" Text="{dxp:PrintingStringId StringId=PageSetupHeight}" />
                                <dxe:ComboBoxEdit
                                    Grid.Column="1"
                                    Grid.ColumnSpan="3"
                                    Margin="0,0,0,12"
                                    DisplayMember="PaperName"
                                    EditValue="{Binding PaperKind, UpdateSourceTrigger=PropertyChanged}"
                                    IsTextEditable="False"
                                    ItemsSource="{Binding PaperSizes}"
                                    ValueMember="Kind" />

                                <dxe:ComboBoxEdit
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Margin="0,0,0,12"
                                    VerticalAlignment="Top"
                                    DisplayMember="DisplayName"
                                    EditValue="{Binding Unit, UpdateSourceTrigger=PropertyChanged}"
                                    IsTextEditable="False"
                                    ItemsSource="{Binding Units}"
                                    Style="{StaticResource baseEditWidthStyle}"
                                    ValueMember="Unit" />
                                <dxe:TextEdit
                                    Grid.Row="2"
                                    Grid.Column="1"
                                    EditValue="{Binding PaperWidth, ValidatesOnDataErrors=True}"
                                    IsEnabled="{Binding PaperKind, Converter={dxpn:PaperKindToSizeEditorIsEnabledConverter}}"
                                    Style="{StaticResource pageSettingsEditorStyle}" />
                                <dxe:TextEdit
                                    Grid.Row="3"
                                    Grid.Column="1"
                                    EditValue="{Binding PaperHeight, ValidatesOnDataErrors=True}"
                                    IsEnabled="{Binding PaperKind, Converter={dxpn:PaperKindToSizeEditorIsEnabledConverter}}"
                                    Style="{StaticResource pageSettingsEditorStyle}" />
                                <dxe:ListBoxEdit
                                    Grid.Row="1"
                                    Grid.RowSpan="3"
                                    Grid.Column="3"
                                    HorizontalAlignment="Stretch"
                                    AllowItemHighlighting="True"
                                    ScrollViewer.CanContentScroll="False"
                                    ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                    ShowBorder="False">
                                    <dxe:ListBoxEditItem Margin="0,0,6,0" HorizontalContentAlignment="Stretch" IsSelected="{Binding DataContext.Landscape, Mode=TwoWay, Converter={dxmvvm:BooleanNegationConverter}}">
                                        <StackPanel HorizontalAlignment="Center">
                                            <dx:DXImage
                                                Width="48"
                                                Height="48"
                                                Margin="12,0"
                                                Source="{dx:SvgImageSource Uri='/DevExpress.Xpf.Printing.v24.1;component/Images/PageOrientationPortrait.svg'}" />
                                            <TextBlock Text="{dxp:PrintingStringId StringId=PageSetupOrientationPortrait}" TextAlignment="Center" />
                                        </StackPanel>
                                    </dxe:ListBoxEditItem>
                                    <dxe:ListBoxEditItem Margin="6,0,0,0" HorizontalContentAlignment="Stretch" IsSelected="{Binding DataContext.Landscape, Mode=OneTime}">
                                        <StackPanel HorizontalAlignment="Center">
                                            <dx:DXImage
                                                Width="48"
                                                Height="48"
                                                Margin="12,0"
                                                Source="{dx:SvgImageSource Uri='/DevExpress.Xpf.Printing.v24.1;component/Images/PageOrientationLandscape.svg'}" />
                                            <TextBlock Text="{dxp:PrintingStringId StringId=PageSetupOrientationLandscape}" TextAlignment="Center" />
                                        </StackPanel>
                                    </dxe:ListBoxEditItem>
                                    <dxe:ListBoxEdit.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <UniformGrid Columns="2" Rows="1" />
                                        </ItemsPanelTemplate>
                                    </dxe:ListBoxEdit.ItemsPanel>
                                </dxe:ListBoxEdit>
                            </Grid>
                        </dxlc:LayoutGroup>
                        <dxlc:LayoutGroup
                            Margin="0,24,0,0"
                            GroupBoxStyle="{StaticResource groupStyle}"
                            Header="{dxp:PrintingStringId StringId=PageSetupPageMargins}"
                            Orientation="Horizontal"
                            View="GroupBox">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto" SharedSizeGroup="title" />
                                    <ColumnDefinition Width="auto" SharedSizeGroup="editor" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="auto" SharedSizeGroup="title" />
                                    <ColumnDefinition Width="auto" SharedSizeGroup="editor" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                </Grid.RowDefinitions>
                                <TextBlock Style="{StaticResource labelStyle}" Text="{dxp:PrintingStringId StringId=PageSetupMarginsLeft}" />
                                <TextBlock Grid.Column="3" Style="{StaticResource labelStyle}" Text="{dxp:PrintingStringId StringId=PageSetupMarginsRight}" />
                                <TextBlock Grid.Row="1" Style="{StaticResource labelStyle}" Text="{dxp:PrintingStringId StringId=PageSetupMarginsTop}" />
                                <TextBlock
                                    Grid.Row="1"
                                    Grid.Column="3"
                                    Style="{StaticResource labelStyle}"
                                    Text="{dxp:PrintingStringId StringId=PageSetupMarginsBottom}" />
                                <dxe:TextEdit Grid.Column="1" EditValue="{Binding LeftMargin, ValidatesOnDataErrors=True}" Style="{StaticResource pageSettingsEditorStyle}" />
                                <dxe:TextEdit Grid.Column="4" EditValue="{Binding RightMargin, ValidatesOnDataErrors=True}" Style="{StaticResource pageSettingsEditorStyle}" />
                                <dxe:TextEdit
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    EditValue="{Binding TopMargin, ValidatesOnDataErrors=True}"
                                    Style="{StaticResource pageSettingsEditorStyle}" />
                                <dxe:TextEdit
                                    Grid.Row="1"
                                    Grid.Column="4"
                                    EditValue="{Binding BottomMargin, ValidatesOnDataErrors=True}"
                                    Style="{StaticResource pageSettingsEditorStyle}" />
                            </Grid>
                        </dxlc:LayoutGroup>
                    </dxlc:LayoutGroup>
                </Grid>
            </dxlc:LayoutGroup>
        </dxlc:LayoutControl>
    </DataTemplate>

    <DataTemplate x:Key="{dxpt:LWKey NewDocumentViewer.ExportOptionsDialogTemplate}">
        <Grid Width="450">
            <dxmvvm:Interaction.BehaviorsTemplate>
                <DataTemplate>
                    <ItemsControl>
                        <dx:DXMessageBoxService />
                        <dxmvvm:CurrentWindowService />
                    </ItemsControl>
                </DataTemplate>
            </dxmvvm:Interaction.BehaviorsTemplate>
            <dxlc:DockLayoutControl Margin="12,12,12,0">
                <dxlc:LayoutGroup
                    Name="mainGroup"
                    dxlc:DockLayoutControl.Dock="Client"
                    ItemLabelsAlignment="Local"
                    Orientation="Vertical">
                    <dxlc:LayoutItem AddColonToLabel="True" Label="{dxp:PrintingStringId StringId=ExportFormat}">
                        <dxe:ComboBoxEdit EditValue="{Binding ExportFormat, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsTextEditable="False" ItemsSource="{Binding AvailableExportFormats}" />
                    </dxlc:LayoutItem>
                    <dxlc:LayoutItem AddColonToLabel="True" Label="{dxp:PrintingStringId StringId=FilePath}">
                        <dxe:ButtonEdit AllowDefaultButton="False" EditValue="{Binding FileName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                            <dxe:ButtonEdit.Buttons>
                                <dxe:ButtonInfo Command="{Binding SelectFileCommand}" GlyphKind="Regular" />
                            </dxe:ButtonEdit.Buttons>
                        </dxe:ButtonEdit>
                    </dxlc:LayoutItem>
                    <dxlc:LayoutItem>
                        <dxe:CheckEdit Content="{dxp:PrintingStringId StringId=OpenFileAfterExport}" EditValue="{Binding OpenFileAfterExport}" IsEnabled="{Binding CanUseActionAfterExport}" />
                    </dxlc:LayoutItem>
                    <dxlc:LayoutItem Width="{Binding ActualWidth, Mode=OneWay, ElementName=mainGroup}" Margin="0,6,0,0">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                            </Grid.RowDefinitions>
                            <ToggleButton
                                Name="expanderButton"
                                Margin="-3,0,0,0"
                                HorizontalContentAlignment="Left"
                                Foreground="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource TemplatedParent}}"
                                IsChecked="False"
                                Template="{StaticResource toogleButtonTemplate}" />

                            <dx:DXExpander
                                Grid.Row="1"
                                Margin="0,6,0,0"
                                HorizontalExpand="None"
                                IsExpanded="{Binding ElementName=expanderButton, Path=IsChecked}"
                                VerticalExpand="FromTopToBottom">
                                <dxpnl:LinesContainer Lines="{Binding ExportOptionLines}" />
                            </dx:DXExpander>
                        </Grid>
                    </dxlc:LayoutItem>
                </dxlc:LayoutGroup>
            </dxlc:DockLayoutControl>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="{dxpt:LWKey NewDocumentViewer.PrintStatusDialogTemplate}">
        <Grid MinWidth="300">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid Margin="24,16,24,22">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Image
                    x:Name="PART_MessageBoxImage"
                    Width="32"
                    Height="32"
                    Margin="-6,-1,12,-4"
                    VerticalAlignment="Top"
                    SnapsToDevicePixels="True"
                    Source="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Print.svg}"
                    Stretch="UniformToFill" />
                <TextBlock
                    Grid.Column="1"
                    MaxWidth="{x:Static SystemParameters.MaximizedPrimaryScreenWidth}"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    Focusable="False"
                    Text="{Binding ProgressStatus}"
                    TextWrapping="Wrap" />
            </Grid>
            <Grid Grid.Row="1" Margin="12,0,12,12" HorizontalAlignment="Right">
                <Grid x:Name="okGrid">
                    <Button
                        x:Name="PART_OkButton"
                        MinWidth="65"
                        Margin="6,0,0,0"
                        Command="{Binding CancelCommand}"
                        Content="{dx:DXMessageBoxStringId StringId=Cancel}"
                        IsCancel="True"
                        IsDefault="True" />
                </Grid>
            </Grid>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="{dxpt:LWKey NewDocumentViewer.SendOptionsDialogTemplate}">
        <Grid Width="420">
            <dxlc:DockLayoutControl Margin="12,12,12,0" AllowItemSizing="True">
                <dxlc:LayoutGroup
                    dxlc:DockLayoutControl.AllowHorizontalSizing="True"
                    dxlc:DockLayoutControl.Dock="Client"
                    ItemLabelsAlignment="Local"
                    Orientation="Vertical">
                    <dxlc:LayoutItem AddColonToLabel="True" Label="{dxp:PrintingStringId StringId=ExportFormat}">
                        <dxe:ComboBoxEdit EditValue="{Binding ExportFormat, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsTextEditable="False" ItemsSource="{Binding AvailableExportFormats}" />
                    </dxlc:LayoutItem>
                    <dxlc:LayoutItem AddColonToLabel="True" Label="{dxp:PrintingStringId StringId=FilePath}">
                        <dxe:ButtonEdit AllowDefaultButton="False" EditValue="{Binding FileName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                            <dxe:ButtonEdit.Buttons>
                                <dxe:ButtonInfo Command="{Binding SelectFileCommand}" GlyphKind="Regular" />
                            </dxe:ButtonEdit.Buttons>
                        </dxe:ButtonEdit>
                    </dxlc:LayoutItem>
                    <dxlc:LayoutItem Margin="0,6,0,0">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                            </Grid.RowDefinitions>
                            <StackPanel Orientation="Horizontal">
                                <ToggleButton
                                    Name="expanderButton"
                                    Margin="-3,0,0,0"
                                    HorizontalContentAlignment="Left"
                                    IsChecked="False"
                                    Template="{StaticResource toogleButtonTemplate}" />
                            </StackPanel>
                            <dx:DXExpander
                                Grid.Row="1"
                                Margin="0,6,0,0"
                                HorizontalExpand="None"
                                IsExpanded="{Binding ElementName=expanderButton, Path=IsChecked}"
                                VerticalExpand="FromTopToBottom">
                                <dxpnl:LinesContainer Lines="{Binding ExportOptionLines}" />
                            </dx:DXExpander>
                        </Grid>
                    </dxlc:LayoutItem>
                </dxlc:LayoutGroup>
            </dxlc:DockLayoutControl>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="{dxpt:LWKey NewDocumentViewer.ScaleDialogTemplate}">
        <DataTemplate.Resources>
            <dxpn:ScaleModeToBooleanConverter x:Key="scaleModeToBooleanConverter" />
            <dxpn:ScaleModeToVisibilityConverter x:Key="scaleModeToVisibilityConverter" />
            <pcn:ScaleFactorToPercentsConverter x:Key="scaleToPercentsConverter" />
        </DataTemplate.Resources>
        <Grid x:Name="LayoutRoot" Margin="12,12,12,0">
            <Grid Grid.IsSharedSizeScope="True">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>
                <RadioButton
                    Name="scaleButton"
                    Grid.Row="0"
                    VerticalAlignment="Center"
                    HorizontalContentAlignment="Stretch"
                    VerticalContentAlignment="Center"
                    IsChecked="True">
                    <TextBlock VerticalAlignment="Center" Text="{dxp:PrintingStringId StringId=Scaling_Adjust_Start_Label}" />
                </RadioButton>

                <dxe:ComboBoxEdit
                    Grid.Column="1"
                    Width="100"
                    Margin="9,0,0,0"
                    AllowNullInput="False"
                    DisplayFormatString="# '%'"
                    EditValue="{Binding Path=ScaleFactor, Converter={StaticResource scaleToPercentsConverter}, ValidatesOnDataErrors=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    IsEnabled="{Binding IsChecked, ElementName=scaleButton}"
                    ItemsSource="{Binding ScaleFactorValues}">
                    <dxe:ComboBoxEdit.ItemTemplate>
                        <DataTemplate>
                            <TextBlock>
                                <TextBlock.Text>
                                    <Binding StringFormat="# '%'" />
                                </TextBlock.Text>
                            </TextBlock>
                        </DataTemplate>
                    </dxe:ComboBoxEdit.ItemTemplate>
                </dxe:ComboBoxEdit>

                <TextBlock
                    Grid.Column="2"
                    Margin="9,0,0,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    IsEnabled="{Binding IsChecked, ElementName=scaleButton}"
                    Text="{dxp:PrintingStringId StringId=Scaling_Adjust_End_Label}" />

                <RadioButton
                    Name="fitButton"
                    Grid.Row="1"
                    Margin="0,9,0,0"
                    HorizontalContentAlignment="Stretch"
                    VerticalContentAlignment="Center"
                    IsChecked="{Binding ScaleMode, Mode=TwoWay, Converter={StaticResource scaleModeToBooleanConverter}, ConverterParameter=FitToPageWidth}">
                    <TextBlock VerticalAlignment="Center" Text="{dxp:PrintingStringId StringId=Scaling_Fit_Start_Label}" />
                </RadioButton>

                <dxe:ComboBoxEdit
                    x:Name="cmbBxPagesToFit"
                    Grid.Row="1"
                    Grid.Column="1"
                    Margin="9,9,0,0"
                    AllowNullInput="False"
                    EditValue="{Binding Path=PagesToFit, ValidatesOnDataErrors=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    IsEnabled="{Binding IsChecked, ElementName=fitButton}"
                    ItemsSource="{Binding PagesToFitValues}" />

                <TextBlock
                    Grid.Row="1"
                    Grid.Column="2"
                    Margin="9,9,0,0"
                    IsEnabled="{Binding IsChecked, ElementName=fitButton}"
                    Text="{dxp:PrintingStringId StringId=Scaling_Fit_End_Label}" />
            </Grid>
        </Grid>
    </DataTemplate>




    <DataTemplate x:Key="{dxpt:LWKey NewDocumentViewer.PrintDialogTemplate}">
        <Grid Name="Root">
            <dxlc:LayoutControl>
                <dxlc:LayoutControl.Resources>
                    <Style x:Key="firstColumnStyle" TargetType="{x:Type dxe:BaseEdit}">
                        <Setter Property="Width" Value="170" />
                        <Style.Triggers>
                            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                                <Setter Property="Width" Value="294" />
                            </Trigger>
                            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                                <Setter Property="Width" Value="294" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </dxlc:LayoutControl.Resources>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="3*" />
                    </Grid.ColumnDefinitions>
                    <dxlc:LayoutGroup
                        x:Name="PART_DockPreviewPart"
                        Height="{Binding ActualHeight, ElementName=PART_DockClientPart, Mode=OneWay}"
                        dxlc:DockLayoutControl.Dock="Left"
                        ItemLabelsAlignment="Local"
                        Orientation="Vertical">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <dx:BackgroundPanel Name="PART_PreviewImage" Margin="0,0,0,10">
                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="True">
                                    <Image IsHitTestVisible="False" Source="{Binding PreviewImage}" Stretch="None">
                                        <dxmvvm:Interaction.Behaviors>
                                            <pcn:PreviewAreaProvider />
                                            <dxmvvm:EventToCommand Command="{Binding UpdatePreviewCommand}" Event="Loaded" />
                                        </dxmvvm:Interaction.Behaviors>
                                    </Image>
                                    <dx:DXBorder Background="Transparent" BorderBrush="#FFC3C3C3" BorderThickness="1" />
                                </Grid>
                            </dx:BackgroundPanel>
                            <dxedp:DataPager
                                Grid.Row="1"
                                HorizontalAlignment="Center"
                                DisplayMode="FirstLastPreviousNext"
                                IsTotalItemCountFixed="True"
                                PageSize="1"
                                ShowTotalPageCount="True"
                                Source="{Binding DataPagerSource}"
                                PageIndex="{Binding PagePreviewIndex, Mode=TwoWay}">
                                <dxedp:DataPager.Resources>
                                    <Style TargetType="{x:Type dxe:SpinEdit}">
                                        <Setter Property="Width" Value="30" />
                                        <Style.Triggers>
                                            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                                                <Setter Property="Width" Value="60" />
                                            </Trigger>
                                            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                                                <Setter Property="Width" Value="60" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </dxedp:DataPager.Resources>
                            </dxedp:DataPager>
                        </Grid>
                    </dxlc:LayoutGroup>
                    <dxlc:LayoutGroup
                        x:Name="PART_DockClientPart"
                        Grid.Column="1"
                        Margin="12,0,0,0"
                        VerticalAlignment="Top"
                        dxlc:DockLayoutControl.Dock="Client"
                        ItemLabelsAlignment="Local"
                        Orientation="Vertical">
                        <dxlc:LayoutItem AddColonToLabel="True" Label="{dxp:PrintingStringId StringId=Printer}">
                            <dxlc:LayoutGroup ItemLabelsAlignment="Local">
                                <dxlc:LayoutItem HorizontalAlignment="Left" VerticalAlignment="Stretch" VerticalContentAlignment="Stretch">
                                    <dxe:ComboBoxEdit
                                        Margin="5,0,0,0"
                                        ApplyItemTemplateToSelectedItem="True"
                                        EditValue="{Binding SelectedPrinter, UpdateSourceTrigger=PropertyChanged}"
                                        IsTextEditable="False"
                                        ItemsSource="{Binding Path=PrinterItems}"
                                        Style="{StaticResource firstColumnStyle}">
                                        <dxe:ComboBoxEdit.ItemTemplate>
                                            <DataTemplate>
                                                <Grid Margin="2,0">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="auto" />
                                                        <ColumnDefinition Width="*" />
                                                    </Grid.ColumnDefinitions>
                                                    <dx:DXImage Width="16" Height="16" Source="{Binding Path=PrinterType, Converter={pcn:PrinterTypeToImageUriConverter}}" />
                                                    <TextBlock
                                                        Grid.Column="1"
                                                        Margin="2,0,2,0"
                                                        VerticalAlignment="Center"
                                                        Text="{Binding Path=DisplayName}" />
                                                </Grid>
                                            </DataTemplate>
                                        </dxe:ComboBoxEdit.ItemTemplate>
                                    </dxe:ComboBoxEdit>
                                </dxlc:LayoutItem>
                                <dxlc:LayoutItem HorizontalAlignment="Stretch" VerticalAlignment="Stretch" VerticalContentAlignment="Stretch">
                                    <Button Command="{Binding Path=PreferencesCommand}" Content="{dxp:PrintingStringId StringId=Preferences}" />
                                </dxlc:LayoutItem>
                            </dxlc:LayoutGroup>
                        </dxlc:LayoutItem>
                        <dxlc:LayoutItem AddColonToLabel="True" Label="{dxp:PrintingStringId StringId=PrinterStatus}">
                            <TextBlock Margin="5,0,0,0" Text="{Binding Path=SelectedPrinter.Status}" />
                        </dxlc:LayoutItem>
                        <dxlc:LayoutItem AddColonToLabel="True" Label="{dxp:PrintingStringId StringId=PrinterLocation}">
                            <TextBlock Margin="5,0,0,0" Text="{Binding Path=SelectedPrinter.Location}" />
                        </dxlc:LayoutItem>
                        <dxlc:LayoutItem AddColonToLabel="True" Label="{dxp:PrintingStringId StringId=PrinterComment}">
                            <TextBlock Margin="5,0,0,0" Text="{Binding Path=SelectedPrinter.Comment}" />
                        </dxlc:LayoutItem>
                        <dxlc:LayoutItem AddColonToLabel="True" Label="{dxp:PrintingStringId StringId=PrinterQueue}">
                            <TextBlock Margin="5,0,0,0" Text="{Binding Path=SelectedPrinter.PrinterDocumentsInQueue}" />
                        </dxlc:LayoutItem>
                        <dxlc:LayoutItem AddColonToLabel="True" IsEnabled="{Binding AllowCopies}" Label="{dxp:PrintingStringId StringId=Copies}">
                            <dxlc:LayoutGroup Margin="5,0,0,0" Orientation="Horizontal" View="Group">
                                <dxlc:LayoutItem HorizontalAlignment="Left">
                                    <dxe:SpinEdit
                                        Name="copiesEdit"
                                        AllowRoundOutOfRangeValue="False"
                                        EditValue="{Binding Path=Copies, UpdateSourceTrigger=PropertyChanged}"
                                        EditValueType="{x:Type sys:Int16}"
                                        IsFloatValue="False"
                                        MaxValue="{Binding MaxCopies}"
                                        MinValue="1"
                                        Style="{StaticResource firstColumnStyle}"
                                        ValidateOnTextInput="True" />
                                </dxlc:LayoutItem>
                                <dxlc:LayoutItem Margin="0,0,18,0" HorizontalAlignment="Left" VerticalAlignment="Center">
                                    <dxe:CheckEdit
                                        VerticalAlignment="Center"
                                        Content="{dxp:PrintingStringId StringId=Collate}"
                                        EditValue="{Binding Collate, Mode=TwoWay}"
                                        IsEnabled="{Binding Path=AllowCollate}" />
                                </dxlc:LayoutItem>
                            </dxlc:LayoutGroup>
                        </dxlc:LayoutItem>
                        <dxlc:LayoutItem AddColonToLabel="True" Label="{dxp:PrintingStringId StringId=PageRange}">
                            <dxlc:LayoutGroup Margin="5,0,0,0" ItemLabelsAlignment="Local" Orientation="Horizontal">
                                <dxlc:LayoutItem HorizontalAlignment="Left">
                                    <dxe:ListBoxEdit
                                        HorizontalContentAlignment="Stretch"
                                        Background="{x:Null}"
                                        EditValue="{Binding Path=PrintRange, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        ShowBorder="False"
                                        Style="{StaticResource firstColumnStyle}">
                                        <dxe:ListBoxEdit.StyleSettings>
                                            <dxe:RadioListBoxEditStyleSettings />
                                        </dxe:ListBoxEdit.StyleSettings>
                                        <dxe:ListBoxEditItem Height="{Binding ActualHeight, ElementName=rangeItem}" Content="{dxpn:SystemPrintRange Range=AllPages}">
                                            <dxe:ListBoxEditItem.ContentTemplate>
                                                <DataTemplate>
                                                    <Grid>
                                                        <TextBlock Margin="6,0,0,0" VerticalAlignment="Center" Text="{dxp:PrintingStringId StringId=AllPages}" />
                                                    </Grid>
                                                </DataTemplate>
                                            </dxe:ListBoxEditItem.ContentTemplate>
                                        </dxe:ListBoxEditItem>
                                        <dxe:ListBoxEditItem Height="{Binding ActualHeight, ElementName=rangeItem}" Content="{dxpn:SystemPrintRange Range=CurrentPage}">
                                            <dxe:ListBoxEditItem.ContentTemplate>
                                                <DataTemplate>
                                                    <Grid>
                                                        <TextBlock Margin="6,0,0,0" VerticalAlignment="Center" Text="{dxp:PrintingStringId StringId=CurrentPage}" />
                                                    </Grid>
                                                </DataTemplate>
                                            </dxe:ListBoxEditItem.ContentTemplate>
                                        </dxe:ListBoxEditItem>
                                        <dxe:ListBoxEditItem x:Name="rangeItem" Content="{dxpn:SystemPrintRange Range=SomePages}">
                                            <dxe:ListBoxEditItem.ContentTemplate>
                                                <DataTemplate>
                                                    <dxlc:LayoutItem Margin="6,0,0,0" Label="{dxp:PrintingStringId StringId=SomePages}">
                                                        <dxe:TextEdit
                                                            Grid.Column="1"
                                                            Margin="5,0,-2,0"
                                                            VerticalAlignment="Center"
                                                            EditValue="{Binding Path=(DataContext).CustomPageRange, RelativeSource={RelativeSource AncestorType=dxe:ListBoxEdit}, ValidatesOnDataErrors=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                            IsEnabled="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=dxe:ListBoxEditItem}}"
                                                            Mask="(\d+(-\d+)?)(,(\d+(-\d+)?))*"
                                                            MaskShowPlaceHolders="False"
                                                            MaskType="RegEx" />
                                                    </dxlc:LayoutItem>
                                                </DataTemplate>
                                            </dxe:ListBoxEditItem.ContentTemplate>
                                        </dxe:ListBoxEditItem>
                                    </dxe:ListBoxEdit>
                                </dxlc:LayoutItem>
                                <dxlc:LayoutItem
                                    Height="{Binding ActualHeight, ElementName=copiesEdit}"
                                    Margin="0,0,18,3"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Bottom"
                                    VerticalContentAlignment="Center">
                                    <TextBlock IsEnabled="False" Text="{dxp:PrintingStringId StringId=PageRangeHint}" />
                                </dxlc:LayoutItem>
                            </dxlc:LayoutGroup>

                        </dxlc:LayoutItem>
                        <dxlc:LayoutItem HorizontalAlignment="Left" AddColonToLabel="True" Label="{dxp:PrintingStringId StringId=DuplexMode}">
                            <Grid>
                                <dxe:CheckEdit Margin="5,0,0,0" HorizontalAlignment="Left" Visibility="Hidden" />
                                <dxe:ComboBoxEdit
                                    Margin="5,0,0,0"
                                    DisplayTextConverter="{dxpn:DuplexModeToDisplayTextConverter}"
                                    EditValue="{Binding Duplex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    IsEnabled="{Binding CanDuplex}"
                                    IsTextEditable="False"
                                    ItemsSource="{dxpn:DuplexDataProvider}"
                                    Style="{StaticResource firstColumnStyle}">
                                    <dxe:ComboBoxEdit.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Name="root" Orientation="Horizontal">
                                                <dx:DXImage
                                                    Width="16"
                                                    Height="16"
                                                    VerticalAlignment="Center"
                                                    Source="{Binding Converter={dxpn:DuplexModeToGlyphConverter}}" />
                                                <TextBlock Margin="2,0" VerticalAlignment="Center" Text="{Binding Converter={dxpn:DuplexModeToDisplayTextConverter}}" />
                                            </StackPanel>
                                            <DataTemplate.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter TargetName="root" Property="Opacity" Value="0.7" />
                                                </Trigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </dxe:ComboBoxEdit.ItemTemplate>
                                </dxe:ComboBoxEdit>
                            </Grid>
                        </dxlc:LayoutItem>
                        <dxlc:LayoutItem
                            HorizontalAlignment="Left"
                            HorizontalContentAlignment="Left"
                            AddColonToLabel="True"
                            Label="{dxp:PrintingStringId StringId=PaperSource}">
                            <dxe:ComboBoxEdit
                                Grid.Column="0"
                                Margin="5,0,0,0"
                                EditValue="{Binding PaperSource}"
                                IsTextEditable="False"
                                ItemsSource="{Binding Path=PaperSources}"
                                Style="{StaticResource firstColumnStyle}" />
                        </dxlc:LayoutItem>

                        <dxlc:LayoutItem AddColonToLabel="True" Label="{dxp:PrintingStringId StringId=FilePath}">
                            <dxlc:LayoutGroup Margin="5,0,0,0" ItemLabelsAlignment="Local">
                                <dxlc:LayoutItem HorizontalAlignment="Left">
                                    <dxe:ButtonEdit
                                        x:Name="PART_PrintFileSelectButton"
                                        AllowDefaultButton="False"
                                        EditValue="{Binding Path=PrintFileName, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                        IsEnabled="{Binding Path=PrintToFile}"
                                        Style="{StaticResource firstColumnStyle}">
                                        <dxe:ButtonEdit.Buttons>
                                            <dxe:ButtonInfo Command="{Binding Path=FileSelectCommand}" GlyphKind="Regular" />
                                        </dxe:ButtonEdit.Buttons>
                                    </dxe:ButtonEdit>
                                </dxlc:LayoutItem>
                                <dxlc:LayoutItem Margin="0,0,18,0" HorizontalAlignment="Left" VerticalAlignment="Center">
                                    <dxe:CheckEdit VerticalAlignment="Center" Content="{dxp:PrintingStringId StringId=PrintToFile}" EditValue="{Binding Path=PrintToFile, Mode=TwoWay}" />
                                </dxlc:LayoutItem>
                            </dxlc:LayoutGroup>
                        </dxlc:LayoutItem>
                    </dxlc:LayoutGroup>
                </Grid>
            </dxlc:LayoutControl>
        </Grid>
    </DataTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\DialogsTemplates.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\DocumentPreview.xaml-->
    <ControlTemplate x:Key="documentViewerTemplate">
        <dxb:BarManager
            x:Name="barManager"
            AllowCustomization="False"
            CreateStandardLayout="True"
            MDIMergeStyle="Never">
            <dxb:BarManager.Controllers>
                <dxp:DocumentPreviewBarManagerController />
            </dxb:BarManager.Controllers>
            <Grid>
                <dxp:DocumentViewer Name="DocumentViewer" Model="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}" />
            </Grid>
        </dxb:BarManager>
    </ControlTemplate>


    <!-- Model="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}" -->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\DocumentPreview.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\DocumentPreviewBarManagerController.xaml-->
    <DataTemplate x:Key="zoomModeItemTemplate">
        <TextBlock Text="{Binding Path=DisplayedText}" />
    </DataTemplate>


    <DataTemplate x:Key="separatorItemTemplate">
        <Rectangle
            Width="{StaticResource zoomComboBoxWidth}"
            Height="1"
            Margin="0,1,0,1"
            Fill="Black" />
    </DataTemplate>
    <DataTemplate x:Key="documentPreviewBarManagerControllerTemplate">
        <dxb:BarManagerActionContainer>
            <!-- bars -->

            <dxp:AddDocumentPreviewToolBarAction>
                <dxb:Bar
                    x:Name="DocumentPreviewToolBar"
                    AllowQuickCustomization="False"
                    Caption="{dxp:PrintingStringId StringId=ToolBarCaption}"
                    UseWholeRow="True">
                    <dxb:Bar.DockInfo>
                        <dxb:BarDockInfo ContainerType="Top" />
                    </dxb:Bar.DockInfo>
                </dxb:Bar>
            </dxp:AddDocumentPreviewToolBarAction>
            <dxb:InsertStatusBarIfNotExistAction>
                <dxb:Bar x:Name="DocumentPreviewStatusBar" Caption="{dxp:PrintingStringId StringId=StatusBarCaption}" UseWholeRow="True">
                    <dxb:Bar.DockInfo>
                        <dxb:BarDockInfo ContainerType="Bottom" />
                    </dxb:Bar.DockInfo>
                </dxb:Bar>
            </dxb:InsertStatusBarIfNotExistAction>

            <!-- bar items -->
            <dxb:BarButtonItem
                Name="parameters"
                Command="{dxp:BarItemBinding Path=Model.ToggleParametersPanelCommand, FallbackValueResourceKey='disabledCommand'}"
                Content="{dxp:PrintingStringId StringId=Parameters}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Parameters.svg}"
                IsVisible="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Parameters.svg}" />
            <dxb:BarButtonItem
                Name="documentMap"
                Command="{dxp:BarItemBinding Path=Model.ToggleDocumentMapCommand, FallbackValueResourceKey='disabledCommand'}"
                Content="{dxp:PrintingStringId StringId=DocumentMap}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/DocumentMap.svg}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/DocumentMap.svg}" />
            <dxb:BarButtonItem
                Name="search"
                Command="{dxp:BarItemBinding Path=Model.ToggleSearchPanelCommand}"
                Content="{dxp:PrintingStringId StringId=Search}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Find.svg}"
                IsVisible="{dxp:BarItemBinding Path=Model.IsSearchVisible}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Find.svg}" />
            <dxb:BarButtonItem
                Name="open"
                Command="{dxp:BarItemBinding Path=Model.OpenCommand}"
                Content="{dxp:PrintingStringId StringId=Open}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Open.svg}"
                IsVisible="{dxp:BarItemBinding Path=Model.IsOpenButtonVisible}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Open.svg}" />
            <dxb:BarButtonItem
                Name="save"
                Command="{dxp:BarItemBinding Path=Model.SaveCommand}"
                Content="{dxp:PrintingStringId StringId=Save}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Save.svg}"
                IsVisible="{dxp:BarItemBinding Path=Model.IsSaveButtonVisible}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Save.svg}" />
            <dxb:BarButtonItem
                Name="print"
                Command="{dxp:BarItemBinding Path=Model.PrintCommand}"
                CommandParameter="default"
                Content="{dxp:PrintingStringId StringId=Print}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/PrintDialog.svg}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/PrintDialog.svg}" />
            <dxb:BarButtonItem
                Name="printDirect"
                Command="{dxp:BarItemBinding Path=Model.PrintDirectCommand}"
                Content="{dxp:PrintingStringId StringId=PrintDirect}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Print.svg}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Print.svg}" />
            <dxb:BarButtonItem
                Name="pageSetup"
                Command="{dxp:BarItemBinding Path=Model.PageSetupCommand}"
                Content="{dxp:PrintingStringId StringId=PageSetup}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/PageSetup.svg}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/PageSetup.svg}" />

            <dxb:BarButtonItem
                Name="scaling"
                Command="{dxp:BarItemBinding Path=Model.ScaleCommand}"
                Content="{dxp:PrintingStringId StringId=Scaling}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Scaling.svg}"
                IsVisible="{dxp:BarItemBinding Path=Model.IsScaleVisible}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Scaling.svg}" />

            <dxb:BarButtonItem
                Name="zoomOut"
                Command="{dxp:BarItemBinding Path=Model.ZoomOutCommand}"
                Content="{dxp:PrintingStringId StringId=DecreaseZoom}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ZoomOut.svg}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ZoomOut.svg}" />
            <dxb:BarEditItem
                Name="zoom"
                CustomizationContent="{dxp:PrintingStringId StringId=Zoom}"
                CustomizationGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Zoom.svg}"
                EditValue="{dxp:BarItemBinding Path=Model.ZoomMode, Mode=TwoWay}"
                EditWidth="{StaticResource zoomComboBoxWidth}">
                <dxb:BarEditItem.EditSettings>
                    <dxe:ComboBoxEditSettings DataContext="{Binding Path=(dxb:BarEditItem.BarEditItem), RelativeSource={RelativeSource Mode=Self}}" IsTextEditable="False" ItemsSource="{dxp:BarItemBinding Path=Model.ZoomModes, IsBarItemTarget=False}">
                        <dxe:ComboBoxEditSettings.ItemTemplateSelector>
                            <dxp:ZoomComboBoxTemplateSelector SeparatorItemTemplate="{StaticResource separatorItemTemplate}" ZoomModeItemTemplate="{StaticResource zoomModeItemTemplate}" />
                        </dxe:ComboBoxEditSettings.ItemTemplateSelector>
                    </dxe:ComboBoxEditSettings>

                </dxb:BarEditItem.EditSettings>
            </dxb:BarEditItem>
            <dxb:BarButtonItem
                Name="zoomIn"
                Command="{dxp:BarItemBinding Path=Model.ZoomInCommand}"
                Content="{dxp:PrintingStringId StringId=IncreaseZoom}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ZoomIn.svg}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ZoomIn.svg}" />

            <dxb:BarButtonItem
                Name="firstPage"
                Command="{dxp:BarItemBinding Path=Model.FirstPageCommand}"
                Content="{dxp:PrintingStringId StringId=FirstPage}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/First.svg}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/First.svg}" />
            <dxb:BarButtonItem
                Name="previousPage"
                Command="{dxp:BarItemBinding Path=Model.PreviousPageCommand}"
                Content="{dxp:PrintingStringId StringId=PreviousPage}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Prev.svg}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Prev.svg}" />
            <dxb:BarButtonItem
                Name="nextPage"
                Command="{dxp:BarItemBinding Path=Model.NextPageCommand}"
                Content="{dxp:PrintingStringId StringId=NextPage}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Next.svg}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Next.svg}" />
            <dxb:BarButtonItem
                Name="lastPage"
                Command="{dxp:BarItemBinding Path=Model.LastPageCommand}"
                Content="{dxp:PrintingStringId StringId=LastPage}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Last.svg}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Last.svg}" />
            <dxb:BarButtonItem
                Name="watermark"
                Command="{dxp:BarItemBinding Path=Model.WatermarkCommand}"
                Content="{dxp:PrintingStringId StringId=Watermark}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Watermark.svg}"
                IsVisible="{dxp:BarItemBinding Path=Model.IsSetWatermarkVisible}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Watermark.svg}" />
            <dxb:BarButtonItem
                Name="exportPDF"
                Command="{dxp:BarItemBinding Path=Model.ExportCommand}"
                CommandParameter="Pdf"
                Content="{dxp:PrintingStringId StringId=ExportPdf}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportPDF.svg}"
                Hint="{dxp:PrintingStringId StringId=ExportPdf}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportPDF.svg}" />
            <dxb:BarButtonItem
                Name="exportHTML"
                Command="{dxp:BarItemBinding Path=Model.ExportCommand}"
                CommandParameter="Htm"
                Content="{dxp:PrintingStringId StringId=ExportHtm}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportHTM.svg}"
                Hint="{dxp:PrintingStringId StringId=ExportHtm}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportHTM.svg}" />
            <dxb:BarButtonItem
                Name="exportMHT"
                Command="{dxp:BarItemBinding Path=Model.ExportCommand}"
                CommandParameter="Mht"
                Content="{dxp:PrintingStringId StringId=ExportMht}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportMHT.svg}"
                Hint="{dxp:PrintingStringId StringId=ExportMht}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportMHT.svg}" />
            <dxb:BarButtonItem
                Name="exportRTF"
                Command="{dxp:BarItemBinding Path=Model.ExportCommand}"
                CommandParameter="Rtf"
                Content="{dxp:PrintingStringId StringId=ExportRtf}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportRTF.svg}"
                Hint="{dxp:PrintingStringId StringId=ExportRtf}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportRTF.svg}" />
            <dxb:BarButtonItem
                Name="exportXLS"
                Command="{dxp:BarItemBinding Path=Model.ExportCommand}"
                CommandParameter="Xls"
                Content="{dxp:PrintingStringId StringId=ExportXls}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportXLS.svg}"
                Hint="{dxp:PrintingStringId StringId=ExportXls}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportXLS.svg}" />
            <dxb:BarButtonItem
                Name="exportXLSX"
                Command="{dxp:BarItemBinding Path=Model.ExportCommand}"
                CommandParameter="Xlsx"
                Content="{dxp:PrintingStringId StringId=ExportXlsx}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportXLSX.svg}"
                Hint="{dxp:PrintingStringId StringId=ExportXlsx}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportXLSX.svg}" />
            <dxb:BarButtonItem
                Name="exportCSV"
                Command="{dxp:BarItemBinding Path=Model.ExportCommand}"
                CommandParameter="Csv"
                Content="{dxp:PrintingStringId StringId=ExportCsv}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportCSV.svg}"
                Hint="{dxp:PrintingStringId StringId=ExportCsv}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportCSV.svg}" />
            <dxb:BarButtonItem
                Name="exportText"
                Command="{dxp:BarItemBinding Path=Model.ExportCommand}"
                CommandParameter="Txt"
                Content="{dxp:PrintingStringId StringId=ExportTxt}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportTxt.svg}"
                Hint="{dxp:PrintingStringId StringId=ExportTxt}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportTxt.svg}" />
            <dxb:BarButtonItem
                Name="exportImage"
                Command="{dxp:BarItemBinding Path=Model.ExportCommand}"
                CommandParameter="Image"
                Content="{dxp:PrintingStringId StringId=ExportImage}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportImage.svg}"
                Hint="{dxp:PrintingStringId StringId=ExportImage}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportImage.svg}" />
            <dxb:BarSplitButtonItem
                Name="export"
                Command="{dxp:BarItemBinding Path=Model.ExportCommand}"
                Content="{dxp:PrintingStringId StringId=ExportFile}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Export.svg}"
                Hint="{dxp:PrintingStringId StringId=ExportFile_Hint}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Export.svg}">
                <dxb:BarSplitButtonItem.PopupControl>
                    <dxb:PopupMenu>
                        <dxb:PopupMenu.ItemLinks>
                            <dxb:BarButtonItemLink BarItemName="exportPDF" />
                            <dxb:BarButtonItemLink BarItemName="exportHTML" />
                            <dxb:BarButtonItemLink BarItemName="exportMHT" />
                            <dxb:BarButtonItemLink BarItemName="exportRTF" />
                            <dxb:BarButtonItemLink BarItemName="exportXLS" />
                            <dxb:BarButtonItemLink BarItemName="exportXLSX" />
                            <dxb:BarButtonItemLink BarItemName="exportCSV" />
                            <dxb:BarButtonItemLink BarItemName="exportText" />
                            <dxb:BarButtonItemLink BarItemName="exportImage" />
                            <dxb:BarButtonItemLink BarItemName="exportXPS" />
                        </dxb:PopupMenu.ItemLinks>
                    </dxb:PopupMenu>
                </dxb:BarSplitButtonItem.PopupControl>
            </dxb:BarSplitButtonItem>

            <dxb:BarButtonItem
                Name="emailPDF"
                Command="{dxp:BarItemBinding Path=Model.SendCommand}"
                CommandParameter="{x:Static xpc:ExportFormat.Pdf}"
                Content="{dxp:PrintingStringId StringId=SendPdf}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportPDF.svg}"
                Hint="{dxp:PrintingStringId StringId=ExportPdf}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportPDF.svg}" />
            <dxb:BarButtonItem
                Name="emailMHT"
                Command="{dxp:BarItemBinding Path=Model.SendCommand}"
                CommandParameter="{x:Static xpc:ExportFormat.Mht}"
                Content="{dxp:PrintingStringId StringId=SendMht}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportMHT.svg}"
                Hint="{dxp:PrintingStringId StringId=ExportMht}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportMHT.svg}" />
            <dxb:BarButtonItem
                Name="emailRTF"
                Command="{dxp:BarItemBinding Path=Model.SendCommand}"
                CommandParameter="{x:Static xpc:ExportFormat.Rtf}"
                Content="{dxp:PrintingStringId StringId=SendRtf}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportRTF.svg}"
                Hint="{dxp:PrintingStringId StringId=ExportRtf}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportRTF.svg}" />
            <dxb:BarButtonItem
                Name="emailXLS"
                Command="{dxp:BarItemBinding Path=Model.SendCommand}"
                CommandParameter="{x:Static xpc:ExportFormat.Xls}"
                Content="{dxp:PrintingStringId StringId=SendXls}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportXLS.svg}"
                Hint="{dxp:PrintingStringId StringId=ExportXls}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportXLS.svg}" />
            <dxb:BarButtonItem
                Name="emailXLSX"
                Command="{dxp:BarItemBinding Path=Model.SendCommand}"
                CommandParameter="{x:Static xpc:ExportFormat.Xlsx}"
                Content="{dxp:PrintingStringId StringId=SendXlsx}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportXLSX.svg}"
                Hint="{dxp:PrintingStringId StringId=ExportXlsx}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportXLSX.svg}" />
            <dxb:BarButtonItem
                Name="emailCSV"
                Command="{dxp:BarItemBinding Path=Model.SendCommand}"
                CommandParameter="{x:Static xpc:ExportFormat.Csv}"
                Content="{dxp:PrintingStringId StringId=SendCsv}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportCSV.svg}"
                Hint="{dxp:PrintingStringId StringId=ExportCsv}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportCSV.svg}" />
            <dxb:BarButtonItem
                Name="emailText"
                Command="{dxp:BarItemBinding Path=Model.SendCommand}"
                CommandParameter="{x:Static xpc:ExportFormat.Txt}"
                Content="{dxp:PrintingStringId StringId=SendTxt}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportTxt.svg}"
                Hint="{dxp:PrintingStringId StringId=ExportTxt}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportTxt.svg}" />
            <dxb:BarButtonItem
                Name="emailImage"
                Command="{dxp:BarItemBinding Path=Model.SendCommand}"
                CommandParameter="{x:Static xpc:ExportFormat.Image}"
                Content="{dxp:PrintingStringId StringId=SendImage}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportImage.svg}"
                Hint="{dxp:PrintingStringId StringId=ExportImage}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportImage.svg}" />
            <dxb:BarSplitButtonItem
                Name="email"
                Command="{dxp:BarItemBinding Path=Model.SendCommand}"
                CommandParameter="{x:Null}"
                Content="{dxp:PrintingStringId StringId=SendFile}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Mail.svg}"
                Hint="{dxp:PrintingStringId StringId=SendFile_Hint}"
                IsVisible="{dxp:BarItemBinding Path=Model.IsSendVisible}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Mail.svg}">
                <dxb:BarSplitButtonItem.PopupControl>
                    <dxb:PopupMenu>
                        <dxb:PopupMenu.ItemLinks>
                            <dxb:BarButtonItemLink BarItemName="emailPDF" />
                            <dxb:BarButtonItemLink BarItemName="emailMHT" />
                            <dxb:BarButtonItemLink BarItemName="emailRTF" />
                            <dxb:BarButtonItemLink BarItemName="emailXLS" />
                            <dxb:BarButtonItemLink BarItemName="emailXLSX" />
                            <dxb:BarButtonItemLink BarItemName="emailCSV" />
                            <dxb:BarButtonItemLink BarItemName="emailText" />
                            <dxb:BarButtonItemLink BarItemName="emailImage" />
                            <dxb:BarButtonItemLink BarItemName="emailXPS" />
                        </dxb:PopupMenu.ItemLinks>
                    </dxb:PopupMenu>
                </dxb:BarSplitButtonItem.PopupControl>
            </dxb:BarSplitButtonItem>

            <dxb:BarEditItem
                x:Name="pageNumber"
                Content="{dxp:PrintingStringId StringId=GoToPage}"
                Content2="{dxp:BarItemBinding Path=Model.PageCount, Converter='pageCountFormatStringConverter', FallbackValue=' / 0'}"
                EditValue="{dxp:BarItemBinding Path=Model.CurrentPageNumber, Mode=TwoWay, UpdateSourceTrigger=Explicit, FallbackValue=0}"
                IsEnabled="{dxp:BarItemBinding Path=Model.PageCount, FallbackValue=False}"
                ShowScreenTip="False">
                <dxb:BarEditItem.EditStyle>
                    <Style TargetType="{x:Type dxe:TextEdit}">
                        <Setter Property="Padding" Value="0,-2,0,-2" />
                        <Setter Property="MinWidth" Value="30" />
                    </Style>
                </dxb:BarEditItem.EditStyle>
                <dxb:BarEditItem.EditSettings>
                    <dxe:TextEditSettings
                        HorizontalContentAlignment="Center"
                        AllowNullInput="True"
                        Mask="\d{0,6}"
                        MaskType="RegEx" />
                </dxb:BarEditItem.EditSettings>
            </dxb:BarEditItem>


            <dxb:BarEditItem
                x:Name="progress"
                EditValue="{dxp:BarItemBinding Path=Model.ProgressValue, Mode=OneWay}"
                IsVisible="{dxp:BarItemBinding Path=Model.ProgressVisibility, FallbackValue=False}"
                ShowScreenTip="False">
                <dxb:BarEditItem.EditStyle>
                    <Style TargetType="{x:Type dxe:ProgressBarEdit}">
                        <Setter Property="MinWidth" Value="150" />
                        <Setter Property="MaxHeight" Value="12" />
                    </Style>
                </dxb:BarEditItem.EditStyle>
                <dxb:BarEditItem.EditSettings>
                    <dxe:ProgressBarEditSettings DataContext="{Binding Path=(dxb:BarEditItem.BarEditItem), RelativeSource={RelativeSource Mode=Self}}" Maximum="{dxp:BarItemBinding Path=Model.ProgressMaximum, IsBarItemTarget=False}" Minimum="0" />
                </dxb:BarEditItem.EditSettings>
            </dxb:BarEditItem>

            <dxb:BarEditItem x:Name="progressMarquee" IsVisible="{dxp:BarItemBinding Path=Model.ProgressMarqueeVisibility, FallbackValue=False}">
                <dxb:BarEditItem.EditTemplate>
                    <DataTemplate>
                        <dxe:ProgressBarEdit Height="12" MinWidth="150">
                            <dxe:ProgressBarEdit.StyleSettings>
                                <dxe:ProgressBarMarqueeStyleSettings />
                            </dxe:ProgressBarEdit.StyleSettings>
                        </dxe:ProgressBarEdit>
                    </DataTemplate>
                </dxb:BarEditItem.EditTemplate>
            </dxb:BarEditItem>

            <dxb:BarButtonItem
                x:Name="stop"
                Command="{dxp:BarItemBinding Path=Model.StopCommand, FallbackValueResourceKey='disabledCommand'}"
                Content="{dxp:PrintingStringId StringId=StopPageBuilding}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Stop.svg}"
                IsVisible="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" />

            <dxb:BarStaticItem
                Name="zoomFactor"
                AutoSizeMode="Fill"
                Content="{dxp:BarItemBinding Path=Model.ZoomDisplayText}"
                ContentAlignment="Right"
                ShowBorder="False" />

            <!-- bar item links -->
            <dxb:BarButtonItemLink dxb:BarItemLinkActionBase.Target="DocumentPreviewToolBar" BarItemName="parameters" />
            <dxb:BarButtonItemLink dxb:BarItemLinkActionBase.Target="DocumentPreviewToolBar" BarItemName="documentMap" />
            <dxb:BarButtonItemLink dxb:BarItemLinkActionBase.Target="DocumentPreviewToolBar" BarItemName="search" />
            <dxb:BarItemLinkSeparator dxb:BarItemLinkActionBase.Target="DocumentPreviewToolBar" />
            <dxb:BarButtonItemLink dxb:BarItemLinkActionBase.Target="DocumentPreviewToolBar" BarItemName="open" />
            <dxb:BarButtonItemLink dxb:BarItemLinkActionBase.Target="DocumentPreviewToolBar" BarItemName="save" />
            <dxb:BarItemLinkSeparator dxb:BarItemLinkActionBase.Target="DocumentPreviewToolBar" />
            <dxb:BarButtonItemLink dxb:BarItemLinkActionBase.Target="DocumentPreviewToolBar" BarItemName="print" />
            <dxb:BarButtonItemLink dxb:BarItemLinkActionBase.Target="DocumentPreviewToolBar" BarItemName="printDirect" />
            <dxb:BarButtonItemLink dxb:BarItemLinkActionBase.Target="DocumentPreviewToolBar" BarItemName="pageSetup" />
            <dxb:BarButtonItemLink dxb:BarItemLinkActionBase.Target="DocumentPreviewToolBar" BarItemName="scaling" />
            <dxb:BarItemLinkSeparator dxb:BarItemLinkActionBase.Target="DocumentPreviewToolBar" />
            <dxb:BarButtonItemLink dxb:BarItemLinkActionBase.Target="DocumentPreviewToolBar" BarItemName="zoomOut" />
            <dxb:BarEditItemLink dxb:BarItemLinkActionBase.Target="DocumentPreviewToolBar" BarItemName="zoom" />
            <dxb:BarButtonItemLink dxb:BarItemLinkActionBase.Target="DocumentPreviewToolBar" BarItemName="zoomIn" />
            <dxb:BarItemLinkSeparator dxb:BarItemLinkActionBase.Target="DocumentPreviewToolBar" />
            <dxb:BarButtonItemLink dxb:BarItemLinkActionBase.Target="DocumentPreviewToolBar" BarItemName="firstPage" />
            <dxb:BarButtonItemLink dxb:BarItemLinkActionBase.Target="DocumentPreviewToolBar" BarItemName="previousPage" />
            <dxb:BarButtonItemLink dxb:BarItemLinkActionBase.Target="DocumentPreviewToolBar" BarItemName="nextPage" />
            <dxb:BarButtonItemLink dxb:BarItemLinkActionBase.Target="DocumentPreviewToolBar" BarItemName="lastPage" />
            <dxb:BarItemLinkSeparator dxb:BarItemLinkActionBase.Target="DocumentPreviewToolBar" />
            <dxb:BarSplitButtonItemLink dxb:BarItemLinkActionBase.Target="DocumentPreviewToolBar" BarItemName="export" />
            <dxb:BarSplitButtonItemLink dxb:BarItemLinkActionBase.Target="DocumentPreviewToolBar" BarItemName="email" />
            <dxb:BarItemLinkSeparator dxb:BarItemLinkActionBase.Target="DocumentPreviewToolBar" />
            <dxb:BarButtonItemLink dxb:BarItemLinkActionBase.Target="DocumentPreviewToolBar" BarItemName="watermark" />
            <dxb:BarEditItemLink dxb:BarItemLinkActionBase.Target="DocumentPreviewStatusBar" dxpn:GoToPageEditBehavior.Apply="True" BarItemName="pageNumber" />
            <dxb:BarEditItemLink dxb:BarItemLinkActionBase.Target="DocumentPreviewStatusBar" BarItemName="progress" />
            <dxb:BarEditItemLink dxb:BarItemLinkActionBase.Target="DocumentPreviewStatusBar" BarItemName="progressMarquee" />
            <dxb:BarButtonItemLink dxb:BarItemLinkActionBase.Target="DocumentPreviewStatusBar" BarItemDisplayMode="ContentAndGlyph" BarItemName="stop" />
            <dxb:BarStaticItemLink dxb:BarItemLinkActionBase.Target="DocumentPreviewStatusBar" BarItemName="zoomFactor" />

        </dxb:BarManagerActionContainer>
    </DataTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\DocumentPreviewBarManagerController.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\LobControl.xaml-->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\LobControl.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\WinImageEdit.xaml-->
    <ControlTemplate x:Key="editTemplateFlyout">
        <Grid Margin="1" Focusable="False" RenderOptions.BitmapScalingMode="NearestNeighbor">
            <dx:BackgroundPanel Name="background" />
            <dxe:NativeImage
                x:Name="PART_Editor"
                Background="{Binding Background, ElementName=background}"
                Focusable="False"
                Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).HasImage, Converter={dx:BooleanToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
            <ContentControl dx:FocusHelper2.Focusable="False" Template="{Binding Path=(dxe:BaseEdit.OwnerEdit).EmptyContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).HasImage, Converter={dx:BooleanToVisibilityConverter Invert=True}, RelativeSource={RelativeSource TemplatedParent}}" />
            <dxef:FlyoutControl
                x:Name="PART_MenuFlyout"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                AnimationDuration="00:00:00.1"
                Background="Transparent"
                BorderThickness="0"
                OpenOnHover="True"
                PlacementTarget="{Binding Path=(dxe:BaseEdit.OwnerEdit)}"
                Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).ShowMenu, RelativeSource={RelativeSource Self}, Converter={dx:BooleanToVisibilityConverter}}">
                <dxmvvm:Interaction.Behaviors>
                    <dxmvvm:EventToCommand Command="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).CanShowMenuPopupCommand}" EventName="Opening" PassEventArgsToCommand="True" />
                </dxmvvm:Interaction.Behaviors>
                <dxef:FlyoutControl.Settings>
                    <dxef:FlyInSettings />
                </dxef:FlyoutControl.Settings>
                <ContentControl Focusable="False" Template="{DynamicResource {dxt:LWKey ImageEdit.MenuPopupTemplate}}">
                    <ContentControl Focusable="False">
                        <ContentControl.ContentTemplate>
                            <DataTemplate>
                                <StackPanel x:Name="PART_MenuContent" Orientation="Horizontal">
                                    <dxe:ImageEditClearToolButton />
                                    <dxe:ImageEditLoadToolButton />
                                </StackPanel>
                            </DataTemplate>
                        </ContentControl.ContentTemplate>
                    </ContentControl>
                </ContentControl>
            </dxef:FlyoutControl>
        </Grid>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\WinImageEdit.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\DocumentViewer.xaml-->
    <HierarchicalDataTemplate x:Key="treeViewItemTemplate" ItemsSource="{Binding Path=Nodes}">
        <TextBlock Text="{Binding Text}" />
    </HierarchicalDataTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\DocumentViewer.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\BrickImageEdit.xaml-->
    <ControlTemplate x:Key="menuButtonTemplate" TargetType="Button">
        <Grid>
            <dx:DXBorder
                Name="border"
                Height="50"
                Background="Black"
                Opacity="0" />
            <ContentPresenter Name="presenter" HorizontalAlignment="Center" VerticalAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="border" Property="Opacity" Value="0.3" />
                <Setter TargetName="presenter" Property="Opacity" Value="0.9" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="border" Property="Opacity" Value="0.5" />
                <Setter TargetName="presenter" Property="Opacity" Value="0.7" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="presenter" Property="Opacity" Value="0.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="menuToggleButtonTemplate" TargetType="ToggleButton">
        <Grid>
            <dx:DXBorder
                Name="border"
                Height="50"
                Background="Black"
                Opacity="0" />
            <ContentPresenter Name="presenter" HorizontalAlignment="Center" VerticalAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="border" Property="Opacity" Value="0.3" />
                <Setter TargetName="presenter" Property="Opacity" Value="0.9" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="border" Property="Opacity" Value="0.5" />
                <Setter TargetName="presenter" Property="Opacity" Value="0.7" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="border" Property="Opacity" Value="0.4" />
                <Setter TargetName="presenter" Property="Opacity" Value="0.8" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="moreColorsButtonTemplate" TargetType="Button">
        <Grid>
            <dx:DXBorder Name="background" Background="Transparent" />
            <StackPanel Orientation="Horizontal">
                <dx:DXImage
                    Name="icon"
                    Width="16"
                    Height="16"
                    Margin="3"
                    Source="{dx:SvgImageSource Uri={dx:PrintingResource Images/ImageEditItems/ColorEditMoreColors.svg}}" />
                <ContentPresenter VerticalAlignment="Center" TextElement.Foreground="Black" />
            </StackPanel>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="background" Property="Background" Value="#C5C5C5" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="background" Property="Background" Value="#AEAEAE" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter TargetName="icon" Property="Width" Value="32" />
                <Setter TargetName="icon" Property="Height" Value="32" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                <Setter TargetName="icon" Property="Width" Value="32" />
                <Setter TargetName="icon" Property="Height" Value="32" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="listBoxItemStyle" TargetType="{x:Type dxe:ListBoxEditItem}">
        <Setter Property="Margin" Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxe:ListBoxEditItem}">
                    <Grid>
                        <dx:DXBorder Name="border" Background="Black" Opacity="0" />
                        <ContentPresenter Margin="3" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Opacity" Value="0.2" />
                        </Trigger>
                        <Trigger Property="IsMouseCaptured" Value="True">
                            <Setter TargetName="border" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="border" Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="editTemplateBrick">
        <Grid x:Name="PART_Container" Background="Transparent">
            <dx:DXBorder
                Padding="{Binding Path=(dxe:BaseEdit.OwnerEdit).Padding, RelativeSource={RelativeSource Self}}"
                Background="{Binding Path=(dxe:BaseEdit.OwnerEdit).Background, RelativeSource={RelativeSource Self}}"
                BorderBrush="{Binding Path=(dxe:BaseEdit.OwnerEdit).BorderBrush, RelativeSource={RelativeSource Self}}"
                BorderThickness="{Binding Path=(dxe:BaseEdit.OwnerEdit).BorderThickness, RelativeSource={RelativeSource Self}}">
                <dxe:NativeImage x:Name="PART_Editor" Focusable="False" />
            </dx:DXBorder>
            <dx:DXBorder
                Width="50"
                Margin="0,-1,-50,-250"
                HorizontalAlignment="Right"
                VerticalAlignment="Top">
                <ContentControl
                    VerticalAlignment="Stretch"
                    VerticalContentAlignment="Stretch"
                    Focusable="False"
                    Template="{Binding Path=(dxe:BaseEdit.OwnerEdit).MenuContainerTemplate, RelativeSource={RelativeSource TemplatedParent}}">
                    <ContentControl
                        VerticalAlignment="Stretch"
                        VerticalContentAlignment="Stretch"
                        Focusable="False"
                        Template="{Binding Path=(dxe:BaseEdit.OwnerEdit).MenuTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
                </ContentControl>
            </dx:DXBorder>

        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="template" TargetType="{x:Type pcne:BrickImageEdit}">
        <Grid x:Name="PART_Root">
            <ContentControl
                x:Name="Border"
                HorizontalContentAlignment="Stretch"
                VerticalContentAlignment="Stretch"
                dx:FocusHelper2.Focusable="False"
                dxei:ControlHelper.ShowFocusedState="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource TemplatedParent}}"
                Background="{TemplateBinding Background}"
                Template="{TemplateBinding ActualBorderTemplate}">

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <dxe:ErrorControl x:Name="PART_ErrorPresenter" Grid.Column="0" />
                    <dxe:EditorControl
                        x:Name="PART_Content"
                        Grid.Column="1"
                        Foreground="{TemplateBinding Foreground}"
                        Template="{TemplateBinding ActualEditorControlTemplate}" />
                </Grid>
            </ContentControl>
        </Grid>
    </ControlTemplate>


    <Style x:Key="listBoxEditStyle" TargetType="{x:Type dxe:ListBoxEdit}">
        <Setter Property="ShowBorder" Value="False" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource listBoxItemStyle}" />
    </Style>
    <ControlTemplate x:Key="colorEditTemplate">
        <StackPanel>
            <dxb:BarManager x:Name="PART_Editor" CreateStandardLayout="False">
                <dxb:BarManager.Items>
                    <dxb:BarButtonItem x:Name="PART_ResetButton" Content="{Binding Path=DataContext.DefaultColorButtonContent, RelativeSource={RelativeSource TemplatedParent}}" IsVisible="{Binding Path=DataContext.ShowDefaultColorButton, RelativeSource={RelativeSource TemplatedParent}}" />
                    <dxei:GalleryBarItem x:Name="galleryItem">
                        <dxei:GalleryBarItem.Gallery>
                            <dxb:Gallery
                                x:Name="PART_Gallery"
                                AllowFilter="False"
                                ColCount="{Binding Path=DataContext.ColumnCount, RelativeSource={RelativeSource TemplatedParent}}"
                                GroupItemsMargin="0,3,0,3"
                                IsGroupCaptionVisible="True"
                                IsItemCaptionVisible="True"
                                IsItemDescriptionVisible="False"
                                IsItemGlyphVisible="False"
                                ItemCheckMode="Single"
                                ItemMargin="{Binding Path=DataContext.ChipMargin, RelativeSource={RelativeSource TemplatedParent}}"
                                MinColCount="{Binding Path=DataContext.ColumnCount, RelativeSource={RelativeSource TemplatedParent}}" />
                        </dxei:GalleryBarItem.Gallery>
                    </dxei:GalleryBarItem>
                    <dxb:BarButtonItem x:Name="PART_NoColorButton" Content="{Binding Path=DataContext.NoColorButtonContent, RelativeSource={RelativeSource TemplatedParent}}" IsVisible="{Binding Path=DataContext.ShowNoColorButton, RelativeSource={RelativeSource TemplatedParent}}" />
                </dxb:BarManager.Items>
                <dxb:MenuBarControl Background="{DynamicResource {dxt:LWKey ColorEdit.Background}}">
                    <dxb:MenuBarControl.Menu>
                        <dxb:PopupMenu x:Name="PART_Menu">
                            <dxb:BarButtonItemLink BarItemName="PART_ResetButton" />
                            <dxei:GalleryBarItemLink BarItemName="galleryItem" />
                            <dxb:BarButtonItemLink BarItemName="PART_NoColorButton" />
                        </dxb:PopupMenu>
                    </dxb:MenuBarControl.Menu>
                </dxb:MenuBarControl>
            </dxb:BarManager>
            <Button
                Margin="0,3,0,0"
                Command="{Binding Path=(dxe:BaseEdit.OwnerEdit).MoreColorsCommand, RelativeSource={RelativeSource Self}}"
                Content="{dxe:EditorStringId ColorEdit_MoreColorsButtonCaption}"
                Template="{StaticResource moreColorsButtonTemplate}" />
        </StackPanel>
    </ControlTemplate>
    <DataTemplate x:Key="uploadFileTemplate">
        <Button
            Name="loadImage"
            Command="{x:Static ApplicationCommands.Open}"
            Template="{StaticResource menuButtonTemplate}"
            ToolTip="{dxpn:PreviewStringId StringId=ImageEditingFieldEditor_LoadImage}">
            <Grid>
                <Path Data="M7.9,11.9c0.4-0.6,1-0.9,1.7-0.9H19V8.7C19,8.3,18.7,8,18.3,8H10V5.7C10,5.3,9.7,5,9.3,5H3.7C3.3,5,3,5.3,3,5.7v14L7.9,11.9z" Fill="White" Opacity="0.75" />
                <Path Data="M9.6,12h13.2c0.5,0,0.9,0.6,0.6,1.1l-4,6.5c-0.2,0.3-0.5,0.5-0.8,0.5H4l4.7-7.5C8.9,12.2,9.2,12,9.6,12z" Fill="White" />
            </Grid>
        </Button>
    </DataTemplate>
    <DataTemplate x:Key="alignmentAndSizingTemplate">
        <Grid>
            <ToggleButton Name="alignmentAndSizing" Template="{StaticResource menuToggleButtonTemplate}" ToolTip="{dxpn:PreviewStringId StringId=ImageEditingFieldEditor_SizeModeAndAlignment}">
                <Polygon Fill="White" Points="20,12 20,4 12,4 15,7 7,15 4,12 4,20 12,20 9,17 17,9  " />
            </ToggleButton>
            <dxe:FlyoutControl
                Name="PART_AlignmentFlyout"
                VerticalAlignment="Top"
                AllowMoveAnimation="False"
                AnimationDuration="0"
                Background="White"
                BorderBrush="#FF666666"
                HorizontalOffset="-13"
                IsOpen="{Binding IsChecked, ElementName=alignmentAndSizing, Mode=TwoWay}"
                PlacementTarget="{Binding ElementName=PART_MenuContent}">
                <dxmvvm:Interaction.Behaviors>
                    <pcne:FlyoutSettingsProvider Target="{Binding Content, ElementName=alignmentAndSizing}" />
                </dxmvvm:Interaction.Behaviors>
                <StackPanel Margin="12" HorizontalAlignment="Left">
                    <TextBlock
                        Margin="3,0,0,6"
                        FontWeight="Bold"
                        Foreground="#787878"
                        Text="{dxpn:PreviewStringId StringId=ImageEditingFieldEditor_SizeMode}"
                        Typography.Capitals="AllSmallCaps" />
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <dxe:ListBoxEdit
                            Margin="0,0,0,24"
                            Background="Transparent"
                            EditValue="{Binding ImageSizeMode, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                            ItemsSource="{Binding ImageSizeModes}"
                            Style="{StaticResource listBoxEditStyle}">
                            <dxe:ListBoxEdit.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <UniformGrid Columns="3" Rows="2" />
                                </ItemsPanelTemplate>
                            </dxe:ListBoxEdit.ItemsPanel>
                            <dxe:ListBoxEdit.ItemTemplate>
                                <DataTemplate>
                                    <dx:DXImage Source="{Binding Converter={pcn:ImageSizeModeToImageSourceConverter}}" ToolTip="{Binding Converter={dxpn:EnumToDisplayNameConverter}}" />
                                </DataTemplate>
                            </dxe:ListBoxEdit.ItemTemplate>
                        </dxe:ListBoxEdit>
                    </Grid>
                    <TextBlock
                        Margin="3,0,0,6"
                        FontWeight="Bold"
                        Foreground="#787878"
                        Text="{dxpn:PreviewStringId StringId=ImageEditingFieldEditor_Alignment}"
                        Typography.Capitals="AllSmallCaps" />
                    <dxe:ListBoxEdit EditValue="{Binding ImageAlignment, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" ItemsSource="{Binding ImageAlignments}" Style="{StaticResource listBoxEditStyle}">
                        <dxe:ListBoxEdit.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Columns="3" />
                            </ItemsPanelTemplate>
                        </dxe:ListBoxEdit.ItemsPanel>
                        <dxe:ListBoxEdit.ItemTemplate>
                            <DataTemplate>
                                <dx:DXImage Source="{Binding Converter={pcn:ImageAlignmentToImageSourceConverter}}" ToolTip="{Binding Converter={dxpn:EnumToDisplayNameConverter}}" />
                            </DataTemplate>
                        </dxe:ListBoxEdit.ItemTemplate>
                    </dxe:ListBoxEdit>
                </StackPanel>
            </dxe:FlyoutControl>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="paintingTemplate">
        <Grid>
            <ToggleButton Name="painting" Template="{StaticResource menuToggleButtonTemplate}" ToolTip="{dxpn:PreviewStringId StringId=ImageEditingFieldEditor_BrushOptions}">
                <Grid>
                    <Path Data="M8,13c1,1-0.5-0.5,2,2c-2.5,4.2-4,4-8,4C4.5,16.5,5.3,13,8,13z M14,12l6.5-6.5c0.3-0.3,0.3-0.7,0-1l-2-2                                                    c-0.3-0.3-0.7-0.3-1,0L11,9L14,12z M9,11c-0.3,0.3-0.3,0.7,0,1l2,2c0.3,0.3,0.7,0.3,1,0l1-1l-3-3L9,11z" Fill="White" />
                    <Path Data="M2,21c8.5,8.6,11.8-4.5,19,0C12.6,12.4,9.2,25.6,2,21z" Fill="{Binding BrushColor, Converter={dxmvvm:ColorToBrushConverter}}" />
                </Grid>
            </ToggleButton>
            <dxe:FlyoutControl
                VerticalAlignment="Top"
                AllowMoveAnimation="False"
                AnimationDuration="0"
                Background="White"
                BorderBrush="#FF666666"
                HorizontalOffset="-13"
                IsOpen="{Binding IsChecked, ElementName=painting, Mode=TwoWay}"
                PlacementTarget="{Binding ElementName=PART_MenuContent}">
                <dxmvvm:Interaction.Behaviors>
                    <pcne:FlyoutSettingsProvider Target="{Binding Content, ElementName=painting}" />
                </dxmvvm:Interaction.Behaviors>
                <StackPanel Margin="12" HorizontalAlignment="Left">
                    <TextBlock
                        Margin="0,0,0,6"
                        FontWeight="Bold"
                        Foreground="#787878"
                        Text="{dxpn:PreviewStringId StringId=ImageEditingFieldEditor_BrushSize}"
                        Typography.Capitals="AllSmallCaps" />
                    <Grid Margin="0,0,0,24">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="24" />
                        </Grid.ColumnDefinitions>
                        <dxe:TrackBarEdit
                            Name="brushSize"
                            Margin="0,0,9,24"
                            EditValue="{Binding BrushSize}"
                            LargeStep="2"
                            Maximum="11"
                            Minimum="1"
                            SmallStep="1"
                            TickFrequency="1"
                            TickPlacement="BottomRight">
                            <dxe:TrackBarEdit.Resources>
                                <ControlTemplate x:Key="trackBarEditBackgroundTemplate" TargetType="{x:Type ContentControl}">
                                    <Grid x:Name="Root">
                                        <dx:DXBorder
                                            x:Name="IsDefault"
                                            Height="4"
                                            Background="#FFD4D4D4"
                                            BorderBrush="White"
                                            BorderThickness="1" />
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="InternalFocusStates">
                                                <VisualState x:Name="InternalFocused">
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF0072C6" Duration="0" />
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="InternalUnfocused" />
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                    </Grid>
                                </ControlTemplate>
                                <dxe:GridLengthConverter x:Key="GridLengthConverter" />
                                <ControlTemplate x:Key="trackbarEditThumbTemplate" TargetType="{x:Type Thumb}">
                                    <Grid x:Name="Root" Background="Transparent">
                                        <dx:DXBorder x:Name="Back" Background="White" />
                                        <dx:DXBorder
                                            x:Name="IsDefault"
                                            Width="7"
                                            Height="14"
                                            Background="#FF444444"
                                            BorderBrush="#FFFFFFFF"
                                            BorderThickness="1" />
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="IsDefault" Property="Background" Value="#FF0072C6" />
                                        </Trigger>
                                        <Trigger Property="IsDragging" Value="True">
                                            <Setter TargetName="IsDefault" Property="Background" Value="#FF0072C6" />
                                        </Trigger>
                                        <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                                            <Setter TargetName="IsDefault" Property="MinHeight" Value="26" />
                                            <Setter TargetName="IsDefault" Property="MinWidth" Value="16" />
                                            <Setter TargetName="Back" Property="MinHeight" Value="26" />
                                            <Setter TargetName="Back" Property="MinWidth" Value="16" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                                <ControlTemplate x:Key="{dxt:LWKey TrackBarEdit.PanelHorizontalTemplate}" TargetType="dxe:RangeEditBasePanel">
                                    <Grid x:Name="root">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition x:Name="leftButton" Width="Auto" />
                                            <ColumnDefinition x:Name="leftColumn" Width="{Binding Path=(dxe:RangeEditBaseInfo.LayoutInfo).LeftSidePosition, Converter={StaticResource GridLengthConverter}}" />
                                            <ColumnDefinition x:Name="centerColumn" Width="Auto" />
                                            <ColumnDefinition x:Name="rightColumn" Width="{Binding Path=(dxe:RangeEditBaseInfo.LayoutInfo).RightSidePosition, Converter={StaticResource GridLengthConverter}}" />
                                            <ColumnDefinition x:Name="rightButton" Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <ContentControl
                                            x:Name="back"
                                            Grid.Row="1"
                                            Grid.Column="1"
                                            Grid.ColumnSpan="3"
                                            dxei:ControlHelper.ShowFocusedState="{Binding Path=(dxe:BaseEdit.OwnerEdit).IsKeyboardFocusWithin}"
                                            Style="{DynamicResource {dxt:LWKey TrackBarEdit.HorizontalBackgroundStyle}}"
                                            Template="{StaticResource trackBarEditBackgroundTemplate}" />
                                        <pcne:BrushSizeTickItemsControl
                                            x:Name="PART_BottomTickText"
                                            Grid.Row="3"
                                            Grid.Column="1"
                                            Grid.ColumnSpan="3"
                                            Height="{Binding Path=(TextElement.FontSize), RelativeSource={RelativeSource Self}}"
                                            Margin="0,1,0,3"
                                            Placement="Bottom"
                                            Style="{DynamicResource {dxt:LWKey TrackBarEdit.TickBarStyle}}" />
                                        <RepeatButton
                                            x:Name="left"
                                            Grid.Row="1"
                                            Grid.Column="1"
                                            Command="{Binding Path=(dxe:BaseEdit.OwnerEdit).DecrementLargeCommand}"
                                            Style="{DynamicResource {dxt:LWKey TrackBarEdit.PanelLeftSideStyle}}" />
                                        <Thumb
                                            x:Name="PART_Thumb"
                                            Grid.Row="1"
                                            Grid.Column="2"
                                            Style="{DynamicResource {dxt:LWKey TrackBarEditThumb.HorizontalThumbStyle}}"
                                            Template="{StaticResource trackbarEditThumbTemplate}" />
                                        <RepeatButton
                                            x:Name="right"
                                            Grid.Row="1"
                                            Grid.Column="3"
                                            Command="{Binding Path=(dxe:BaseEdit.OwnerEdit).IncrementLargeCommand}"
                                            Style="{DynamicResource {dxt:LWKey TrackBarEdit.PanelRightSideStyle}}" />
                                    </Grid>
                                </ControlTemplate>
                            </dxe:TrackBarEdit.Resources>
                        </dxe:TrackBarEdit>
                        <Grid Grid.Column="1" VerticalAlignment="Top">
                            <Ellipse Width="24" Height="24" Fill="LightGray" />
                            <Ellipse Width="{Binding Path=Value, ElementName=brushSize}" Height="{Binding Path=Value, ElementName=brushSize}" Fill="Black" />
                        </Grid>
                    </Grid>
                    <TextBlock
                        Margin="0,0,0,6"
                        FontWeight="Bold"
                        Foreground="#787878"
                        Text="{dxpn:PreviewStringId StringId=ImageEditingFieldEditor_BrushColor}"
                        Typography.Capitals="AllSmallCaps" />
                    <pcne:CustomColorEdit
                        ChipMargin="2"
                        ChipSize="Medium"
                        EditTemplate="{StaticResource colorEditTemplate}"
                        EditValue="{Binding BrushColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        ShowBorder="False"
                        ShowDefaultColorButton="False"
                        ShowNoColorButton="False">
                        <pcne:CustomColorEdit.Resources>
                            <Style x:Key="{dxt:LWKey GalleryItemControl.DefaultGroupCaptionTextStyle}" TargetType="ContentControl">
                                <Setter Property="FontWeight" Value="Bold" />
                                <Setter Property="Foreground" Value="#FF444444" />
                            </Style>
                            <SolidColorBrush x:Key="{dxt:LWKey ColorEdit.Background}" Color="Transparent" />
                            <ControlTemplate x:Key="{dxt:LWKey GalleryItemGroupControl.CaptionTemplate}" TargetType="{x:Type ContentControl}">
                                <dx:DXBorder Background="Transparent">
                                    <ContentPresenter />
                                </dx:DXBorder>
                            </ControlTemplate>
                            <Style TargetType="{x:Type dxb:MenuBarControl}">
                                <Setter Property="ShowGlyphSideBackground" Value="False" />
                            </Style>


                            <Style x:Key="{dxt:LWKey BarButtonItemLayoutPanel.StyleInMenu}" TargetType="{x:Type dxb:BarItemLayoutPanel}">
                                <Setter Property="MinHeight" Value="22" />
                                <Setter Property="AdditionalContentMargin" Value="3,0,3,0" />
                                <Setter Property="ArrowMargin" Value="3" />
                                <Setter Property="ArrowThemeKey" Value="{dxt:LWKey BarSubItem.ArrowTemplateInMenu}" />
                                <Setter Property="BorderThemeKey" Value="{dxbt:BarItemBorderInMenuThemeKey}" />
                                <Setter Property="BottomArrowMargin" Value="3" />
                                <Setter Property="BottomCommonContentMargin" Value="0" />
                                <Setter Property="BottomContentAndGlyphMargin" Value="0,0,0,4" />
                                <Setter Property="BottomGlyphMargin" Value="3" />
                                <Setter Property="CommonContentMargin" Value="0" />
                                <Setter Property="CommonMargin" Value="0" />
                                <Setter Property="Content2Margin" Value="3,0,3,0" />
                                <Setter Property="ContentAndGlyphMargin" Value="4,0,0,0" />
                                <Setter Property="ContentMargin" Value="8,0,16,0" />
                                <Setter Property="DescriptionMargin" Value="8,0,3,0" />
                                <Setter Property="FirstBorderUseNormalStateOnly" Value="True" />
                                <Setter Property="GlyphBackgroundThickness" Value="-1" />
                                <Setter Property="GlyphMargin" Value="3" />
                                <Setter Property="HorizontalAlignment" Value="Left" />
                                <Setter Property="KeyGestureMargin" Value="3,0,19,0" />
                                <Setter Property="LeftArrowMargin" Value="3" />
                                <Setter Property="LeftCommonContentMargin" Value="0" />
                                <Setter Property="LeftContentAndGlyphMargin" Value="4,0,0,0" />
                                <Setter Property="LeftGlyphMargin" Value="3,3,0,3" />
                                <Setter Property="Margin" Value="0,0,1,1" />
                                <Setter Property="RightArrowMargin" Value="3" />
                                <Setter Property="RightCommonContentMargin" Value="0" />
                                <Setter Property="RightContentAndGlyphMargin" Value="0,0,4,0" />
                                <Setter Property="RightGlyphMargin" Value="0,3,3,3" />
                                <Setter Property="SecondBorderUseNormalStateOnly" Value="True" />
                                <Setter Property="TextSplitterStyleKey" Value="{dxt:LWKey TextSplitter.BarSubItem}" />
                                <Setter Property="TopArrowMargin" Value="3" />
                                <Setter Property="TopCommonContentMargin" Value="0" />
                                <Setter Property="TopContentAndGlyphMargin" Value="0,4,0,0" />
                                <Setter Property="TopGlyphMargin" Value="3" />
                                <Setter Property="TouchSplitterThemeKey" Value="{dxt:LWKey BarItemTouchSplitter.Template}" />
                                <Setter Property="VerticalAlignment" Value="Stretch" />
                                <Style.Triggers>
                                    <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                                        <Setter Property="MinHeight" Value="44" />
                                        <Setter Property="AdditionalContentMargin" Value="14,0,14,0" />
                                        <Setter Property="ArrowMargin" Value="14" />
                                        <Setter Property="BottomArrowMargin" Value="14" />
                                        <Setter Property="BottomCommonContentMargin" Value="0" />
                                        <Setter Property="BottomContentAndGlyphMargin" Value="0" />
                                        <Setter Property="BottomGlyphMargin" Value="14" />
                                        <Setter Property="CommonContentMargin" Value="0" />
                                        <Setter Property="CommonMargin" Value="0" />
                                        <Setter Property="Content2Margin" Value="14,0,14,0" />
                                        <Setter Property="ContentAndGlyphMargin" Value="0" />
                                        <Setter Property="ContentMargin" Value="14,0,44,0" />
                                        <Setter Property="DescriptionMargin" Value="14,0,14,0" />
                                        <Setter Property="GlyphBackgroundThickness" Value="-1" />
                                        <Setter Property="GlyphMargin" Value="14" />
                                        <Setter Property="KeyGestureMargin" Value="14,0,50,0" />
                                        <Setter Property="LeftArrowMargin" Value="14" />
                                        <Setter Property="LeftCommonContentMargin" Value="0" />
                                        <Setter Property="LeftContentAndGlyphMargin" Value="0" />
                                        <Setter Property="LeftGlyphMargin" Value="14,14,0,14" />
                                        <Setter Property="Margin" Value="0,0,1,1" />
                                        <Setter Property="RightArrowMargin" Value="14" />
                                        <Setter Property="RightCommonContentMargin" Value="0" />
                                        <Setter Property="RightContentAndGlyphMargin" Value="0" />
                                        <Setter Property="RightGlyphMargin" Value="0,14,14,14" />
                                        <Setter Property="TopArrowMargin" Value="14" />
                                        <Setter Property="TopCommonContentMargin" Value="0" />
                                        <Setter Property="TopContentAndGlyphMargin" Value="0" />
                                        <Setter Property="TopGlyphMargin" Value="14" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>

                        </pcne:CustomColorEdit.Resources>
                    </pcne:CustomColorEdit>
                </StackPanel>
            </dxe:FlyoutControl>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="imageListTemplate">
        <Grid>
            <ToggleButton Name="list" Template="{StaticResource menuToggleButtonTemplate}" ToolTip="{dxpn:PreviewStringId StringId=ImageEditingFieldEditor_ChooseImage}">
                <Grid>
                    <Path Data="M22,2H2C1.5,2,1,2.5,1,3v18c0,0.5,0.5,1,1,1h20c0.5,0,1-0.5,1-1V3C23,2.5,22.5,2,22,2z M21,20H3V4h18V20z                                       M15.5,6C16.9,6,18,7.1,18,8.5S16.9,11,15.5,11S13,9.9,13,8.5S14.1,6,15.5,6z M15,19l-8-8l-3,3v5H15z" Fill="White" />
                    <Polygon Fill="White" Opacity="0.5" Points="16.4,19 19,19 15,15 13.7,16.3" />
                </Grid>
            </ToggleButton>
            <dxe:FlyoutControl
                Name="PART_AlignmentFlyout"
                VerticalAlignment="Top"
                AllowMoveAnimation="False"
                AnimationDuration="0"
                Background="White"
                BorderBrush="#FF666666"
                HorizontalOffset="-13"
                IsOpen="{Binding IsChecked, ElementName=list, Mode=TwoWay}"
                PlacementTarget="{Binding ElementName=PART_MenuContent}">
                <dxmvvm:Interaction.Behaviors>
                    <pcne:FlyoutSettingsProvider Target="{Binding Content, ElementName=list}" />
                </dxmvvm:Interaction.Behaviors>
                <StackPanel Margin="12">
                    <dxe:SelectorEditColumnProvider Name="columnProvider" OwnerEdit="{Binding ElementName=imageList}">
                        <dxe:SelectorEditColumnProvider.CustomColumns>
                            <sys:String>DisplayName</sys:String>
                        </dxe:SelectorEditColumnProvider.CustomColumns>
                    </dxe:SelectorEditColumnProvider>
                    <dxe:SearchControl
                        Name="searchControl"
                        Margin="0,0,0,12"
                        ColumnProvider="{Binding ElementName=columnProvider}"
                        CriteriaOperatorType="Or"
                        FilterByColumnsMode="Custom"
                        FilterCondition="Contains"
                        ShowClearButton="True"
                        ShowCloseButton="False"
                        ShowFindButton="False"
                        ShowMRUButton="False"
                        Visibility="{Binding AllowSearchPredefinedImages, Converter={dx:BooleanToVisibilityConverter}}" />

                    <dxe:ListBoxEdit
                        Name="imageList"
                        MaxHeight="424"
                        Padding="0"
                        dx:ScrollBarExtensions.ScrollBarMode="TouchOverlap"
                        AllowRejectUnknownValues="False"
                        FilterCriteria="{Binding FilterCriteria, ElementName=searchControl}"
                        ItemContainerStyle="{StaticResource listBoxItemStyle}"
                        ItemsSource="{Binding PredefinedImages}"
                        ShowBorder="False">
                        <dxmvvm:Interaction.Behaviors>
                            <dxmvvm:EventToCommand
                                Command="{Binding OnImageSelectedCommand}"
                                EventArgsConverter="{pcn:GalleryEditValueEventArgsConverter}"
                                EventName="EditValueChanged"
                                PassEventArgsToCommand="True" />
                        </dxmvvm:Interaction.Behaviors>
                        <dxe:ListBoxEdit.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Width="{Binding DataContext.GalleryImageWidth, Converter={pcn:DoubleCalculateConverter Argument1=2, MaxValue=150, Argument2=60}}" Margin="6,0" Columns="2" />
                            </ItemsPanelTemplate>
                        </dxe:ListBoxEdit.ItemsPanel>
                        <dxe:ListBoxEdit.ItemTemplate>
                            <DataTemplate>
                                <Grid MaxWidth="150">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto" MaxHeight="150" />
                                        <RowDefinition Height="*" MaxHeight="50" />
                                    </Grid.RowDefinitions>
                                    <dx:DXBorder>
                                        <dx:DXImage
                                            Height="{Binding DataContext.GalleryImageHeight, RelativeSource={RelativeSource AncestorType=dxe:ListBoxEdit}}"
                                            MaxWidth="150"
                                            MaxHeight="150"
                                            Margin="6"
                                            Source="{Binding Image, Converter={pcn:ImageToImageSourceConverter}}"
                                            Stretch="Uniform" />
                                    </dx:DXBorder>
                                    <dx:DXBorder Grid.Row="1" VerticalAlignment="Stretch" Visibility="{Binding DataContext.ShowPredefinedImageCaption, Converter={dx:BooleanToVisibilityConverter}, RelativeSource={RelativeSource AncestorType=dxe:ListBoxEdit}}">
                                        <TextBlock
                                            MaxHeight="38"
                                            Margin="6,0,6,6"
                                            VerticalAlignment="Center"
                                            FontWeight="Bold"
                                            Foreground="Black"
                                            Text="{Binding DisplayName}"
                                            TextTrimming="CharacterEllipsis"
                                            TextWrapping="Wrap" />
                                    </dx:DXBorder>
                                </Grid>
                            </DataTemplate>
                        </dxe:ListBoxEdit.ItemTemplate>
                    </dxe:ListBoxEdit>
                </StackPanel>
            </dxe:FlyoutControl>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="resetImageTemplate">
        <Button
            Name="reset"
            Command="{Binding ResetImageCommand}"
            Template="{StaticResource menuButtonTemplate}"
            ToolTip="{dxpn:PreviewStringId StringId=ImageEditingFieldEditor_Reset}">
            <Path Data="M12,3C9.5,3,7.3,4,5.6,5.6L3,3v8h0.1h3H11L7.8,7.8C8.9,6.7,10.3,6,12,6c3.3,0,6,2.7,6,6s-2.7,6-6,6                                   c-2.6,0-4.8-1.7-5.6-4H3.2c0.9,4,4.5,7,8.8,7c5,0,9-4,9-9C21,7,17,3,12,3z" Fill="White" />
        </Button>
    </DataTemplate>
    <DataTemplate x:Key="clearImageTemplate">
        <Grid>
            <Button
                Name="clear"
                Command="{Binding ClearImageCommand}"
                Template="{StaticResource menuButtonTemplate}"
                ToolTip="{dxpn:PreviewStringId StringId=ImageEditingFieldEditor_Clear}">
                <Path Data="M19,5c0.6,0,1,0.4,1,1v1H4V6c0-0.6,0.4-1,1-1h5V4c0-0.6,0.4-1,1-1h2c0.6,0,1,0.4,1,1v1H19z M19,8v12                                       c0,0.6-0.4,1-1,1H6c-0.6,0-1-0.4-1-1V8H19z M9,10H7v9h2V10z M13,10h-2v9h2V10z M17,10h-2v9h2V10z" Fill="White" />
            </Button>
            <Button Name="fakeButton" Visibility="{Binding IsEnabled, ElementName=clear, Converter={dx:BooleanToVisibilityConverter Invert=True}}">
                <Button.Template>
                    <ControlTemplate>
                        <dx:DXBorder Background="Transparent" />
                    </ControlTemplate>
                </Button.Template>
            </Button>
        </Grid>
    </DataTemplate>
    <ControlTemplate x:Key="menuTemplate">
        <StackPanel
            x:Name="PART_MenuContent"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Top"
            Orientation="Vertical">
            <ContentControl Content="{Binding}" ContentTemplate="{StaticResource imageListTemplate}" Visibility="{Binding AllowChooseImage, Converter={dx:BooleanToVisibilityConverter}}" />
            <ContentControl Content="{Binding}" ContentTemplate="{StaticResource uploadFileTemplate}" Visibility="{Binding AllowLoadImage, Converter={dx:BooleanToVisibilityConverter}}" />
            <ContentControl Content="{Binding}" ContentTemplate="{StaticResource paintingTemplate}" Visibility="{Binding AllowDraw, Converter={dx:BooleanToVisibilityConverter}}" />
            <ContentControl Content="{Binding}" ContentTemplate="{StaticResource alignmentAndSizingTemplate}" Visibility="{Binding AllowChangeSizeOptions, Converter={dx:BooleanToVisibilityConverter}}" />
            <ContentControl Content="{Binding}" ContentTemplate="{StaticResource resetImageTemplate}" Visibility="{Binding AllowResetImage, Converter={dx:BooleanToVisibilityConverter}}" />
            <ContentControl Content="{Binding}" ContentTemplate="{StaticResource clearImageTemplate}" Visibility="{Binding AllowClear, Converter={dx:BooleanToVisibilityConverter}}" />
        </StackPanel>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\BrickImageEdit.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\NavigationPane.xaml-->
    <DataTemplate x:Key="documentMapTemplate">
        <Grid>
            <TextBlock Text="{dxp:PrintingStringId StringId=NavigationPane_NoBookmarks}" Visibility="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).Document.HasBookmarks, RelativeSource={RelativeSource Self}, Converter={dx:BooleanToVisibilityConverter Invert=True}}" />
            <pcn:DocumentMap x:Name="PART_DocumentMapControl" Settings="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualDocumentMapSettings, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).Document.HasBookmarks, RelativeSource={RelativeSource Self}, Converter={dx:BooleanToVisibilityConverter}}">
                <pcn:DocumentMap.Resources>
                    <ControlTemplate x:Key="{dxgt:LWKey GridControl.BorderTemplate}" TargetType="{x:Type ContentControl}">
                        <ContentPresenter x:Name="content" Grid.RowSpan="3" Margin="3" />
                    </ControlTemplate>
                    <Style TargetType="{x:Type dxg:OuterBorderElement}">
                        <Setter Property="Template" Value="{x:Null}" />
                    </Style>
                    <SolidColorBrush x:Key="{dxgt:LWKey GridRow.BorderNoneBrush}" Color="Transparent" />
                    <SolidColorBrush x:Key="{dxgt:LWKey TreeListView.RowMarginBackgroundBrush}" Color="Transparent" />
                    <ControlTemplate x:Key="{dxgt:LWKey TableView.DataPresenterTemplate}" TargetType="{x:Type dxg:DataPresenter}">
                        <ContentPresenter />
                    </ControlTemplate>
                </pcn:DocumentMap.Resources>
            </pcn:DocumentMap>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="pagesTemplate">
        <pcn:ThumbnailsViewerControl FilteredPageIndices="{Binding NavigationPaneSearchModel.ResultPageIndices, RelativeSource={RelativeSource AncestorType=dxp:NavigationPaneControl}}" SelectedPageNumber="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).CurrentPageNumber, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Settings="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ThumbnailsSettings, RelativeSource={RelativeSource TemplatedParent}}" />
    </DataTemplate>
    <DataTemplate x:Key="searchResultTemplate">
        <Grid DataContext="{Binding NavigationPaneSearchModel, RelativeSource={RelativeSource AncestorType=dxp:NavigationPaneControl}}">
            <TextBlock TextWrapping="Wrap">
                <TextBlock.Text>
                    <MultiBinding Converter="{pcn:NavigationPaneSearchResultsStateConverter}">
                        <Binding Path="SearchState" />
                        <Binding Path="SearchResults.Count" />
                        <Binding Path="SearchText" />
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
            <dxe:ListBoxEdit
                Name="searchResultsList"
                DisplayMember="Name"
                EditValue="{Binding SelectedSearchResult, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                IsEnabled="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).Document.IsCreating, Converter={dxmvvm:BooleanNegationConverter}, RelativeSource={RelativeSource Self}, FallbackValue=False}"
                ItemsSource="{Binding SearchResults}"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                ShowBorder="False">
                <dxe:ListBoxEdit.ItemTemplate>
                    <DataTemplate>
                        <dx:DXBorder BorderBrush="#1A727272" BorderThickness="0,0,0,1">
                            <TextBlock
                                MinHeight="24"
                                MaxHeight="48"
                                TextTrimming="CharacterEllipsis"
                                TextWrapping="Wrap">
                                <dxmvvm:Interaction.Behaviors>
                                    <dxpn:TextBlockBindableInlinesBehavior>
                                        <dxpn:TextBlockBindableInlinesBehavior.InlineList>
                                            <MultiBinding Converter="{pcn:BrickPagePairToDisplayTextConverter}" ConverterParameter="Backward">
                                                <Binding Path="(dxp:DocumentPreviewControl.ActualViewer).Document.PrintingSystem.Pages" RelativeSource="{RelativeSource TemplatedParent}" />
                                                <Binding Path="BrickPagePair" />
                                                <Binding Path="NavigationPaneSearchModel.UseCaseSensitiveSearch" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type dxp:NavigationPaneControl}}" />
                                                <Binding Path="NavigationPaneSearchModel.SearchText" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type dxp:NavigationPaneControl}}" />
                                            </MultiBinding>
                                        </dxpn:TextBlockBindableInlinesBehavior.InlineList>
                                    </dxpn:TextBlockBindableInlinesBehavior>
                                </dxmvvm:Interaction.Behaviors>
                            </TextBlock>
                        </dx:DXBorder>
                    </DataTemplate>
                </dxe:ListBoxEdit.ItemTemplate>
                <dxe:ListBoxEdit.ItemsPanel>
                    <ItemsPanelTemplate>
                        <DockPanel VerticalAlignment="Top" />
                    </ItemsPanelTemplate>
                </dxe:ListBoxEdit.ItemsPanel>
                <dxe:ListBoxEdit.ItemContainerStyle>
                    <Style TargetType="{x:Type dxe:ListBoxEditItem}">
                        <Setter Property="DockPanel.Dock" Value="Top" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="ToolTip">
                            <Setter.Value>
                                <ToolTip MaxWidth="200">
                                    <TextBlock Text="{Binding Converter={pcn:SearchDataToLocationTextConverter}}" TextTrimming="CharacterEllipsis" TextWrapping="Wrap" />
                                </ToolTip>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </dxe:ListBoxEdit.ItemContainerStyle>
                <dxmvvm:Interaction.Behaviors>
                    <dxmvvm:EventToCommand
                        Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).NavigateCommand, RelativeSource={RelativeSource TemplatedParent}}"
                        EventArgsConverter="{pcn:EditValueChangedEventArgsSelectedItemConverter}"
                        EventName="EditValueChanged"
                        PassEventArgsToCommand="True" />
                </dxmvvm:Interaction.Behaviors>
            </dxe:ListBoxEdit>
        </Grid>
    </DataTemplate>
    <Style x:Key="navigationButtonStyle" TargetType="Button">
        <Setter Property="Padding" Value="0" />
        <Setter Property="Command" Value="{Binding NavigateToNextResultCommand}" />
        <Setter Property="Content" Value="{x:Null}" />
        <Setter Property="Margin" Value="3,0,0,0" />
    </Style>
    <DataTemplate x:Key="TabItemNormalBackground">
        <dxi:TabBorder
            BorderBackground="Transparent"
            BorderBrush="Transparent"
            BorderMargin="0,1"
            BorderThickness="0"
            HoldBorderMargin="0"
            HoldBorderThickness="0"
            ViewInfo="{Binding}" />
    </DataTemplate>
    <DataTemplate x:Key="TabItemHoverBackground">
        <dxi:TabBorder
            BorderBackground="Transparent"
            BorderBrush="Transparent"
            BorderMargin="0,1"
            BorderThickness="0"
            HoldBorderMargin="0"
            HoldBorderThickness="0"
            ViewInfo="{Binding}" />
    </DataTemplate>
    <DataTemplate x:Key="TabItemSelectedBackground">
        <dxi:TabBorder
            BorderBackground="Transparent"
            BorderBrush="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}"
            BorderMargin="0,1"
            BorderThickness="0,0,0,0"
            HoldBorderMargin="0"
            HoldBorderThickness="0"
            ViewInfo="{Binding}" />
    </DataTemplate>
    <DataTemplate x:Key="TabItemFocusedBackground" />
    <DataTemplate x:Key="TabControlBackground">
        <dxi:TabBorder
            BorderBackground="Transparent"
            BorderBrush="Transparent"
            BorderThickness="0"
            ViewInfo="{Binding}" />
    </DataTemplate>


    <pcn:NavigationPaneTabTemplateSelector
        x:Key="tabTemplateSelector"
        DocumentMapTemplate="{StaticResource documentMapTemplate}"
        PagesTemplate="{StaticResource pagesTemplate}"
        SearchResultTemplate="{StaticResource searchResultTemplate}" />

    <ControlTemplate x:Key="{dxpt:LWKey NavigationPane.Template}" TargetType="{x:Type dxp:NavigationPaneControl}">
        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <dxe:ButtonEdit
                Name="PART_SearchBox"
                Margin="0,0,0,4"
                AllowDefaultButton="False"
                AllowNullInput="True"
                EditValue="{Binding NavigationPaneSearchModel.SearchText, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                NullText="{dxp:PrintingStringId StringId=NavigationPane_SearchBoxPlaceholder}"
                ShowNullText="True">
                <dxe:ButtonEdit.Buttons>
                    <dxe:ButtonInfo Command="{Binding Path=(dxe:BaseEdit.OwnerEdit).SetNullValueCommand, RelativeSource={RelativeSource Self}}" GlyphKind="Cancel" Visibility="{Binding NavigationPaneSearchModel.SearchText, Converter={dxmvvm:ObjectToBooleanConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                    <dxe:ButtonInfo Margin="1,0,0,0" GlyphKind="DropDown">
                        <dxe:ButtonInfo.Template>
                            <DataTemplate>
                                <ToggleButton x:Name="PART_Item" IsChecked="{Binding IsChecked, Mode=TwoWay}" Style="{DynamicResource {dxt:LWKey Buttons.ButtonStyle}}">
                                    <dxb:BarManager.DXContextMenu>
                                        <dxb:PopupMenu DataContext="{Binding NavigationPaneSearchModel, RelativeSource={RelativeSource AncestorType={x:Type dxp:NavigationPaneControl}}}" IsOpen="{Binding PlacementTarget.IsChecked, RelativeSource={RelativeSource Self}}">
                                            <dxb:BarCheckItem CloseSubMenuOnClick="False" Content="{dxdv:DocumentViewerControlLocalizedString FindControlCaseSensitive}" IsChecked="{Binding UseCaseSensitiveSearch, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            <dxb:BarCheckItem CloseSubMenuOnClick="False" Content="{dxdv:DocumentViewerControlLocalizedString FindControlWholeWordsOnly}" IsChecked="{Binding SearchWholeWords, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        </dxb:PopupMenu>
                                    </dxb:BarManager.DXContextMenu>
                                </ToggleButton>
                            </DataTemplate>
                        </dxe:ButtonInfo.Template>
                    </dxe:ButtonInfo>
                </dxe:ButtonEdit.Buttons>
            </dxe:ButtonEdit>

            <Grid
                Grid.Row="1"
                Margin="0,0,0,8"
                DataContext="{TemplateBinding NavigationPaneSearchModel}"
                Visibility="{Binding NavigationPaneSearchModel.SearchState, RelativeSource={RelativeSource TemplatedParent}, Converter={pcn:NavigationPaneSearchStateToVisibilityConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>
                <TextBlock>
                    <TextBlock.Text>
                        <MultiBinding Converter="{pcn:NavigationPaneSearchStateConverter}">
                            <Binding Path="SearchState" />
                            <Binding Path="SearchResults.Count" />
                            <Binding Path="SelectedSearchResultIndex" />
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
                <Button
                    Grid.Column="1"
                    CommandParameter="Backward"
                    ContentTemplate="{DynamicResource {dxt:LWKey Buttons.UpGlyph}}"
                    Style="{StaticResource navigationButtonStyle}" />
                <Button
                    Grid.Column="2"
                    CommandParameter="Forward"
                    ContentTemplate="{DynamicResource {dxt:LWKey Buttons.DownGlyph}}"
                    Style="{StaticResource navigationButtonStyle}" />
            </Grid>

            <dx:DXTabControl
                Grid.Row="2"
                Padding="0,4,0,0"
                BackgroundTemplate="{StaticResource TabControlBackground}"
                ClipToBounds="True"
                ItemHeaderTemplate="{DynamicResource {dxpt:LWKey NavigationPane.TabHeaderTemplate}}"
                ItemTemplateSelector="{StaticResource tabTemplateSelector}"
                SelectedItem="{Binding NavigationPaneSettings.ActiveTab, RelativeSource={RelativeSource TemplatedParent}}"
                TabContentCacheMode="CacheTabsOnSelecting">
                <dx:DXTabControl.Resources>
                    <Style x:Key="{dxt:LWKey DXTabControl.PanelContainerStyle}" TargetType="{x:Type dxi:TabPanelContainer}">
                        <Setter Property="NormalMargin" Value="{pcn:NavigationPaneTabPanelMarginExtension}" />
                        <!--<Setter Property="NormalPadding" Value="0,2,0,2"/>
                        <Setter Property="HoldMargin" Value="0,0,-1,0" />
                        <Setter Property="HoldPadding" Value="0,0,0,0"/>-->
                    </Style>
                </dx:DXTabControl.Resources>
                <dx:DXTabControl.ItemsSource>
                    <MultiBinding Converter="{pcn:NavigationPaneTabItemsSourceConverter}">
                        <Binding Path="NavigationPaneSettings.ShowDocumentMapTab" RelativeSource="{RelativeSource TemplatedParent}" />
                        <Binding Path="NavigationPaneSettings.ShowPagesTab" RelativeSource="{RelativeSource TemplatedParent}" />
                    </MultiBinding>
                </dx:DXTabControl.ItemsSource>
                <dx:DXTabControl.ItemContainerStyle>
                    <Style TargetType="dx:DXTabItem">
                        <Setter Property="Padding" Value="0,3,0,0" />
                        <Setter Property="FocusedBackgroundTemplate" Value="{StaticResource TabItemFocusedBackground}" />
                        <Setter Property="HoverBackgroundTemplate" Value="{StaticResource TabItemHoverBackground}" />
                        <Setter Property="NormalBackgroundTemplate" Value="{StaticResource TabItemNormalBackground}" />
                        <Setter Property="SelectedBackgroundTemplate" Value="{StaticResource TabItemSelectedBackground}" />
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="TextElement.FontWeight" Value="Bold" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </dx:DXTabControl.ItemContainerStyle>
                <dx:DXTabControl.View>
                    <dx:TabControlScrollView ScrollButtonShowMode="Never" ScrollButtonsShowMode="Never" />
                </dx:DXTabControl.View>
            </dx:DXTabControl>
        </Grid>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\NavigationPane.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\DocumentPreviewControl.xaml-->
    <Style TargetType="{x:Type dxb:BarItem}" x:Key="previewBarItemStyle">
        <Setter Property="Glyph" Value="{Binding Path=SmallGlyph, Converter={dxpn:UriToSvgImageSourceConverter}}"/>
        <Setter Property="LargeGlyph" Value="{Binding Path=LargeGlyph, Converter={dxpn:UriToSvgImageSourceConverter}}"/>
        <Setter Property="GlyphAlignment" Value="Top"/>
    </Style>
    <Style x:Key="exportItemStyleBase" TargetType="{x:Type dxb:BarButtonItem}" BasedOn="{StaticResource previewBarItemStyle}">
        <Setter Property="Hint" Value="{Binding Path=Hint}" />
        <Setter Property="CommandParameter" Value="{Binding Format}" />
        <Setter Property="Command" Value="{Binding}" />
        <Setter Property="Content" Value="{Binding}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel>
                        <TextBlock Text="{Binding Caption, Mode=OneWay}" />
                        <TextBlock Opacity="0.5" Text="{Binding Tag, Mode=OneWay}" />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <DataTemplate x:Key="{dxpt:LWKey NewDocumentViewer.PaginationTemplate}">
        <Grid Margin="10,0,10,0">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).CurrentPageNumber, RelativeSource={RelativeSource TemplatedParent}}" />
                <TextBlock Text=" / " />
                <TextBlock Text="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).PageCount, RelativeSource={RelativeSource TemplatedParent}}" />
            </StackPanel>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="{dxpt:LWKey NewDocumentViewer.ExportPopupMenuItemTemplate}">
        <ContentControl>
            <dxb:BarButtonItem dxp:DocumentPreviewControl.BarItemName="{Binding Path=Format, StringFormat=bExport{0}}" Style="{StaticResource exportItemStyleBase}" />
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="{dxpt:LWKey NewDocumentViewer.SendPopupMenuItemTemplate}">
        <ContentControl>
            <dxb:BarButtonItem dxp:DocumentPreviewControl.BarItemName="{Binding Path=Format, StringFormat=bSend{0}}" Style="{StaticResource exportItemStyleBase}" />
        </ContentControl>
    </DataTemplate>

    <DataTemplate x:Key="{dxpt:LWKey NewDocumentViewer.NavigationPaneDockLayoutTemplate}">
        <dxdo:DockLayoutManager Background="Transparent" DisposeOnWindowClosing="False" ViewStyle="Light">
            <dxmvvm:Interaction.Behaviors>
                <pcn:HideClosingItemsBehavior />
            </dxmvvm:Interaction.Behaviors>
            <dxdo:LayoutGroup>
                <dxdo:LayoutGroup ItemWidth="300" Orientation="Vertical">
                    <dxdo:LayoutPanel MinWidth="150" Caption="{dxp:PrintingStringId StringId=Parameters}">
                        <dxdo:LayoutPanel.Visibility>
                            <MultiBinding FallbackValue="Collapsed" Mode="TwoWay">
                                <MultiBinding.Converter>
                                    <dxp:DockPanelVisibilityConverter />
                                </MultiBinding.Converter>
                                <Binding Mode="TwoWay" Path="(dxp:DocumentPreviewControl.ActualViewer).PropertyProvider.ShowParametersPanel" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Mode="OneWay" Path="(dxp:DocumentPreviewControl.ActualViewer).ParameterPanelViewModel.HasVisibleParameters" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Mode="OneWay" Path="(dxp:DocumentPreviewControl.ActualViewer).AutoShowParametersPanel" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding>
                        </dxdo:LayoutPanel.Visibility>
                        <dxpp:ParametersPanel IsEnabled="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).Document.IsCreating, Converter={StaticResource boolInverseConverter}, RelativeSource={RelativeSource Self}}" ParametersModel="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ParameterPanelViewModel, RelativeSource={RelativeSource Self}}">
                            <dxmvvm:Interaction.Behaviors>
                                <dxpn:LegacyParametersPanelModelSwitcher />
                            </dxmvvm:Interaction.Behaviors>
                        </dxpp:ParametersPanel>
                    </dxdo:LayoutPanel>
                    <dxdo:LayoutPanel Caption="{dxp:PrintingStringId StringId=NavigationPane_Title}" MinWidth="150">
                        <dxdo:LayoutPanel.Visibility>
                            <MultiBinding FallbackValue="Collapsed" Mode="TwoWay">
                                <MultiBinding.Converter>
                                    <dxp:DockPanelVisibilityConverter />
                                </MultiBinding.Converter>
                                <Binding Mode="TwoWay" Path="(dxp:DocumentPreviewControl.ActualViewer).ShowNavigationPane" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding
                                    Converter="{StaticResource objectToBooleanConverter}"
                                    Mode="OneWay"
                                    Path="(dxp:DocumentPreviewControl.ActualViewer).Document"
                                    RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding>
                        </dxdo:LayoutPanel.Visibility>
                        <dxp:NavigationPaneControl Margin="12,12,12,0" />
                    </dxdo:LayoutPanel>
                </dxdo:LayoutGroup>
                <dxdo:LayoutPanel
                    Name="DocumentViewerPanel"
                    AllowClose="False"
                    AllowDrag="False"
                    Background="Transparent"
                    Caption="{dxp:PrintingStringId StringId=ToolBarCaption}"
                    ShowBorder="False"
                    ShowCaption="False">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <dxco:BreadcrumbControl DisplayMember="Name" EditMode="Items" KeyMember="ID" ParentMember="ParentID" PopupHeight="0" Visibility="{Binding Path=(local:DocumentPreviewControl.ActualViewer).Document.BreadcrumbViewModel.Visible, RelativeSource={RelativeSource Self}, Converter={StaticResource boolToVisibilityConverter}, FallbackValue=Collapsed}" SelectedItem="{Binding Path=(local:DocumentPreviewControl.ActualViewer).Document.BreadcrumbViewModel.SelectedNode, RelativeSource={RelativeSource Self}, Mode=TwoWay}" ItemsSource="{Binding Path=(local:DocumentPreviewControl.ActualViewer).Document.BreadcrumbViewModel.NestedReports, RelativeSource={RelativeSource Self}}">
                            <dxco:BreadcrumbControl.Resources>
                                <Style x:Key="{dxcot:LWKey BreadcrumbControl.ArrowStyleBase}" TargetType="{x:Type dxcoi:BreadcrumbArrowControl}">
                                    <Setter Property="IsHitTestVisible" Value="False" />
                                    <Setter Property="Template" Value="{DynamicResource {dxcot:LWKey BreadcrumbControl.ArrowTemplate}}" />
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="Padding" Value="3" />
                                    <Setter Property="BorderThickness" Value="0,1,1,1" />
                                    <Setter Property="ArrowGeometry" Value="F1 M 2,0 6,4 2,8 Z" />
                                    <Style.Triggers>
                                        <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                                            <Setter Property="Padding" Value="16" />
                                        </Trigger>
                                        <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                                            <Setter Property="Padding" Value="16" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                                <Style x:Key="{dxcot:LWKey BreadcrumbControl.ArrowStyle}" BasedOn="{dx:TargetStaticResource {dxcot:LWKey BreadcrumbControl.ArrowStyleBase}, TargetDictionary={dxi:ThemeResourceDictionary Path='Controls/Generic.xaml'}}" TargetType="{x:Type dxcoi:BreadcrumbArrowControl}" />
                                <Style x:Key="{dxcot:LWKey BreadcrumbControl.RootItemArrowStyle}" BasedOn="{dx:TargetStaticResource {dxcot:LWKey BreadcrumbControl.ArrowStyleBase}, TargetDictionary={dxi:ThemeResourceDictionary Path='Controls/Generic.xaml'}}" TargetType="{x:Type dxcoi:BreadcrumbArrowControl}">
                                    <Setter Property="BorderThickness" Value="1" />
                                </Style>
                                <Style TargetType="dxcoi:BreadcrumbPathEdit">
                                    <Setter Property="ShowEditorButtons" Value="False" />
                                    <Setter Property="ShowPopupIfReadOnly" Value="False" />
                                    <Setter Property="IsReadOnly" Value="True" />
                                </Style>
                            </dxco:BreadcrumbControl.Resources>
                        </dxco:BreadcrumbControl>
                        <ContentPresenter Grid.Row="1" Content="{Binding}" />
                    </Grid>
                </dxdo:LayoutPanel>
            </dxdo:LayoutGroup>
        </dxdo:DockLayoutManager>
    </DataTemplate>

    <DataTemplate x:Key="{dxpt:LWKey NewDocumentViewer.SeparatePanelsDockLayoutTemplate}">
        <dxdo:DockLayoutManager Background="Transparent" DisposeOnWindowClosing="False">
            <dxmvvm:Interaction.Behaviors>
                <pcn:HideClosingItemsBehavior />
            </dxmvvm:Interaction.Behaviors>
            <dxdo:LayoutGroup>
                <dxdo:LayoutGroup ItemWidth="250" Orientation="Vertical">
                    <dxdo:LayoutPanel Caption="{dxp:PrintingStringId StringId=Parameters}">
                        <dxdo:LayoutPanel.Visibility>
                            <MultiBinding FallbackValue="Collapsed" Mode="TwoWay">
                                <MultiBinding.Converter>
                                    <dxp:DockPanelVisibilityConverter />
                                </MultiBinding.Converter>
                                <Binding Mode="TwoWay" Path="(dxp:DocumentPreviewControl.ActualViewer).PropertyProvider.ShowParametersPanel" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Mode="OneWay" Path="(dxp:DocumentPreviewControl.ActualViewer).ParameterPanelViewModel.HasVisibleParameters" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Mode="OneWay" Path="(dxp:DocumentPreviewControl.ActualViewer).AutoShowParametersPanel" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding>
                        </dxdo:LayoutPanel.Visibility>
                        <dxpp:ParametersPanel IsEnabled="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).Document.IsCreating, Converter={StaticResource boolInverseConverter}, RelativeSource={RelativeSource Self}}" ParametersModel="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ParameterPanelViewModel, RelativeSource={RelativeSource Self}}">
                            <dxmvvm:Interaction.Behaviors>
                                <dxpn:LegacyParametersPanelModelSwitcher />
                            </dxmvvm:Interaction.Behaviors>
                        </dxpp:ParametersPanel>
                    </dxdo:LayoutPanel>
                    <dxdo:LayoutPanel Caption="{dxp:PrintingStringId StringId=DocumentMap}">
                        <dxdo:LayoutPanel.Visibility>
                            <MultiBinding FallbackValue="Collapsed" Mode="TwoWay">
                                <MultiBinding.Converter>
                                    <dxp:DockPanelVisibilityConverter />
                                </MultiBinding.Converter>
                                <Binding Mode="TwoWay" Path="(dxp:DocumentPreviewControl.ActualViewer).PropertyProvider.ShowDocumentMap" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Mode="OneWay" Path="(dxp:DocumentPreviewControl.ActualViewer).Document.HasBookmarks" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Mode="OneWay" Path="(dxp:DocumentPreviewControl.ActualViewer).AutoShowDocumentMap" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding>
                        </dxdo:LayoutPanel.Visibility>
                        <pcn:DocumentMap SelectedItem="{Binding ActualSettings.SelectedNode, RelativeSource={RelativeSource Self}}" Settings="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualDocumentMapSettings, RelativeSource={RelativeSource TemplatedParent}}" />
                    </dxdo:LayoutPanel>
                    <dxdo:LayoutPanel Caption="{dxp:PrintingStringId StringId=Thumbnails}">
                        <dxdo:LayoutPanel.Visibility>
                            <MultiBinding FallbackValue="Collapsed" Mode="TwoWay">
                                <MultiBinding.Converter>
                                    <dxp:DockPanelVisibilityConverter />
                                </MultiBinding.Converter>
                                <Binding Mode="TwoWay" Path="(dxp:DocumentPreviewControl.ActualViewer).ShowThumbnails" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding
                                    Converter="{StaticResource objectToBooleanConverter}"
                                    Mode="OneWay"
                                    Path="(dxp:DocumentPreviewControl.ActualViewer).Document"
                                    RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding>
                        </dxdo:LayoutPanel.Visibility>
                        <pcn:ThumbnailsViewerControl SelectedPageNumber="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).CurrentPageNumber, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Settings="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ThumbnailsSettings, RelativeSource={RelativeSource TemplatedParent}}" />
                    </dxdo:LayoutPanel>
                </dxdo:LayoutGroup>
                <dxdo:LayoutPanel
                    Name="DocumentViewerPanel"
                    AllowDrag="False"
                    Background="Transparent"
                    Caption="{dxp:PrintingStringId StringId=ToolBarCaption}"
                    ShowBorder="False"
                    ShowCaption="False">
                    <ContentPresenter Content="{Binding}" />
                </dxdo:LayoutPanel>
            </dxdo:LayoutGroup>
        </dxdo:DockLayoutManager>
    </DataTemplate>

    <DataTemplate x:Key="{dxpt:LWKey NewDocumentViewer.PresenterTemplate}">
        <Grid>
            <dxpn:PreviewSurface />
            <ContentControl Focusable="False" ContentTemplate="{DynamicResource {dxpt:LWKey NewDocumentViewer.NavigationPaneDockLayoutTemplate}}">
                <dxmvvm:Interaction.Behaviors>
                    <pcn:DocumentPreviewDockingLayoutTemplateUpdater UseNavigationPaneTemplate="{Binding Path=AssociatedObject.(dxp:DocumentPreviewControl.ActualViewer).UseOfficeInspiredNavigationPane, RelativeSource={RelativeSource Self}}" />
                </dxmvvm:Interaction.Behaviors>
                <dxp:DocumentPresenterControl Focusable="False">
                    <dxb:BarManager.DXContextMenu>
                        <dxb:PopupMenu>
                            <pcb:HandToolBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.HandTool}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.HandToolCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                            <pcb:SelectToolBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.SelectTool}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.SelectToolCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                            <dxb:BarItemSeparator />
                            <pcb:CopyBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.Copy}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.CopyCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                        </dxb:PopupMenu>
                    </dxb:BarManager.DXContextMenu>
                </dxp:DocumentPresenterControl>
            </ContentControl>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="{dxpt:LWKey NewDocumentViewer.BarsTemplate}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>
            <dxb:BarContainerControl>
                <dxb:ToolBarControl
                    dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.Bar}"
                    AllowCustomizationMenu="False"
                    AllowHide="False"
                    Caption="{dxp:PrintingStringId StringId=ToolBarCaption}"
                    GlyphSize="Large"
                    UseWholeRow="True">
                    <dxmvvm:Interaction.Behaviors>
                        <dxb:ControllerBehavior Actions="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.Actions, RelativeSource={RelativeSource TemplatedParent}}" ExecutionMode="OnEvent">
                            <dxb:ControllerBehavior.Triggers>
                                <dxb:ActionTrigger EventName="Loaded" ExecuteOnce="True" />
                            </dxb:ControllerBehavior.Triggers>
                        </dxb:ControllerBehavior>
                    </dxmvvm:Interaction.Behaviors>
                    <pcb:OpenBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.Open}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.OpenDocumentCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <pcb:SaveBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.Save}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.SaveCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <dxb:BarItemLinkSeparator />
                    <pcb:ParametersBarCheckItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.Parameters}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.ToggleParametersPanelCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <pcb:DocumentMapBarCheckItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.DocumentMap}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.ToggleDocumentMapCommand, RelativeSource={RelativeSource TemplatedParent}}" IsVisible="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).UseOfficeInspiredNavigationPane, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanNegationConverter}, FallbackValue=False}" />
                    <pcb:ThumbnailsBarCheckItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.Thumbnails}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.ToggleThumbnailsCommand, RelativeSource={RelativeSource TemplatedParent}}" IsVisible="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).UseOfficeInspiredNavigationPane, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanNegationConverter}, FallbackValue=False}" />
                    <pcb:EditingFieldsBarCheckItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.EditingFields}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.ToggleEditingFieldsCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <pcb:FindTextBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.Find}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.ShowFindTextCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{StaticResource TrueBoolean}" />
                    <dxb:BarItemLinkSeparator />
                    <pcb:PrintBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.Print}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.PrintCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <pcb:PrintDirectBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.PrintDirect}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.PrintDirectCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <pcb:PageSetupBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.PageSetup}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.PageSetupCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <pcb:ScaleBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.Scale}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.ScaleCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <dxb:BarItemLinkSeparator />
                    <pcb:FirstPageBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.FirstPage}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.FirstPageCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <pcb:PreviousPageBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.PreviousPage}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.PreviousPageCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <pcb:NextPageBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.NextPage}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.NextPageCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <pcb:LastPageBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.LastPage}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.LastPageCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <pcb:NavigationPaneBarCheckItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.NavigationPane}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.ToggleNavigationPaneCommand, RelativeSource={RelativeSource TemplatedParent}}" IsVisible="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).UseOfficeInspiredNavigationPane, RelativeSource={RelativeSource TemplatedParent}, FallbackValue=True}" />
                    <dxb:BarItemLinkSeparator />
                    <pcb:ZoomOutBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.ZoomOut}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.ZoomOutCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <pcb:ZoomBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.Zoom}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.ZoomCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <pcb:ZoomInBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.ZoomIn}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.ZoomInCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <dxb:BarItemLinkSeparator />
                    <pcb:PageLayoutBarSubItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.PageLayoutSplit}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.SetPageLayoutSplitCommand, RelativeSource={RelativeSource TemplatedParent}}" SubItemsGlyphSize="Small" />
                    <pcb:ContinuousScrollingBarCheckItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.ContinuousScrolling}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.ToggleEnableContinuousScrollingCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <pcb:CoverPageBarCheckItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.ShowCoverPage}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.ToggleShowCoverPageCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <dxb:BarItemLinkSeparator />
                    <pcb:ExportSplitItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.Export}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.ExportSplitCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    <pcb:SendSplitItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.Send}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.SendSplitCommand, RelativeSource={RelativeSource TemplatedParent}}" />

                    <pcb:WatermarkBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.Watermark}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.SetWatermarkCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                </dxb:ToolBarControl>
            </dxb:BarContainerControl>
            <ContentControl Grid.Row="1" ContentTemplate="{DynamicResource {dxpt:LWKey NewDocumentViewer.PresenterTemplate}}" UseLayoutRounding="True" />
            <dxb:StatusBarControl
                Grid.Row="2"
                dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.StatusBar}"
                AllowCustomizationMenu="False" Focusable="True" IsTabStop="True"
                Caption="{dxp:PrintingStringId StringId=StatusBarCaption}">
                <pcb:PageNumberEditItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.PageNumber}" Focusable="True" SettingsSource="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer), RelativeSource={RelativeSource TemplatedParent}}" />
                <pcb:ProgressEditItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.Progress}" Focusable="True" ProgressSettings="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).Document, RelativeSource={RelativeSource TemplatedParent}, FallbackValue={x:Null}}" />
                <pcb:StopPageBuildItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.StopBuilding}" Focusable="True" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.StopPageBuildingCommand, RelativeSource={RelativeSource TemplatedParent}}" Glyph="{local:PrintingResourceImage ResourceName=Images/BarItems/Stop.svg}" />
                <pcb:ZoomFactorEditItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.ZoomFactor}" Focusable="True" Alignment="Far" SettingsSource="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer), RelativeSource={RelativeSource TemplatedParent}}" />
            </dxb:StatusBarControl>
        </Grid>
    </DataTemplate>

    <Style x:Key="{dxpt:LWKey NewDocumentViewer.RibbonStyle}" TargetType="{x:Type dxr:RibbonControl}">
        <Setter Property="ToolbarShowMode" Value="Hide" />
        <Setter Property="RibbonTitleBarVisibility" Value="Collapsed" />
        <Setter Property="RibbonStyle" Value="Office2010" />
        <Setter Property="HideEmptyGroups" Value="True" />
        <Setter Property="AllowCustomization" Value="False" />
    </Style>

    <DataTemplate x:Key="{dxpt:LWKey NewDocumentViewer.RibbonTemplate}">
        <Grid>
            <dxmvvm:Interaction.Behaviors>
                <dxb:ControllerBehavior Actions="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.RibbonActions, RelativeSource={RelativeSource TemplatedParent}}" ExecutionMode="OnEvent">
                    <dxb:ControllerBehavior.Triggers>
                        <dxb:ActionTrigger EventName="Loaded" ExecuteOnce="True" />
                    </dxb:ControllerBehavior.Triggers>
                </dxb:ControllerBehavior>
            </dxmvvm:Interaction.Behaviors>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>
            <dxr:RibbonControl dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.Ribbon}" Focusable="False" Style="{DynamicResource {dxpt:LWKey NewDocumentViewer.RibbonStyle}}">
                <dxr:RibbonControl.ApplicationMenu>
                    <dxr:ApplicationMenu Name="menu">
                        <dxb:BarButtonItemLink BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.Open}" />
                        <dxb:BarButtonItemLink BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.Save}" />
                        <dxb:BarItemSeparator />
                        <dxb:BarButtonItemLink BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.Print}" />
                    </dxr:ApplicationMenu>
                </dxr:RibbonControl.ApplicationMenu>
                <dxr:RibbonDefaultPageCategory>
                    <dxr:RibbonPage dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.PreviewPage}" Caption="{dxp:PrintingStringId StringId=RibbonPageCaption}">
                        <dxr:RibbonPageGroup dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.FileGroup}" Caption="{dxp:PrintingStringId StringId=RibbonPageGroup_File}">
                            <pcb:OpenBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.Open}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.OpenDocumentCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                            <pcb:SaveBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.Save}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.SaveCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                        </dxr:RibbonPageGroup>

                        <dxr:RibbonPageGroup dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.PrintGroup}" Caption="{dxp:PrintingStringId StringId=RibbonPageGroup_Print}">
                            <pcb:PrintBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.Print}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.PrintCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                            <pcb:PrintDirectBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.PrintDirect}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.PrintDirectCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                            <pcb:PageSetupBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.PageSetup}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.PageSetupCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                            <pcb:ScaleBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.Scale}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.ScaleCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                        </dxr:RibbonPageGroup>

                        <dxr:RibbonPageGroup dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.NavigationGroup}" Caption="{dxp:PrintingStringId StringId=RibbonPageGroup_Navigation}">
                            <pcb:FirstPageBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.FirstPage}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.FirstPageCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                            <pcb:PreviousPageBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.PreviousPage}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.PreviousPageCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                            <pcb:NextPageBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.NextPage}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.NextPageCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                            <pcb:LastPageBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.LastPage}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.LastPageCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                            <pcb:NavigationPaneBarCheckItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.NavigationPane}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.ToggleNavigationPaneCommand, RelativeSource={RelativeSource TemplatedParent}}" IsVisible="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).UseOfficeInspiredNavigationPane, RelativeSource={RelativeSource TemplatedParent}}" />
                        </dxr:RibbonPageGroup>

                        <dxr:RibbonPageGroup dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.ZoomGroup}" Caption="{dxp:PrintingStringId StringId=RibbonPageGroup_Zoom}">
                            <pcb:ZoomOutBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.ZoomOut}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.ZoomOutCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                            <pcb:ZoomBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.Zoom}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.ZoomCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                            <pcb:ZoomInBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.ZoomIn}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.ZoomInCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                        </dxr:RibbonPageGroup>
                        <dxr:RibbonPageGroup dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.ViewGroup}" Caption="{dxp:PrintingStringId StringId=RibbonPageGroup_View}">
                            <pcb:PageLayoutBarSubItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.PageLayoutSplit}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.SetPageLayoutSplitCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                            <dxb:BarItemSeparator />
                            <pcb:ContinuousScrollingBarCheckItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.ContinuousScrolling}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.ToggleEnableContinuousScrollingCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                            <pcb:CoverPageBarCheckItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.ShowCoverPage}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.ToggleShowCoverPageCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                        </dxr:RibbonPageGroup>

                        <dxr:RibbonPageGroup dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.ExportGroup}" Caption="{dxp:PrintingStringId StringId=RibbonPageGroup_Export}">
                            <pcb:ExportSplitItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.Export}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.ExportSplitCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                            <pcb:SendSplitItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.Send}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.SendSplitCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                        </dxr:RibbonPageGroup>

                        <dxr:RibbonPageGroup dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.DocumentGroup}" Caption="{dxp:PrintingStringId StringId=RibbonPageGroup_Document}">
                            <pcb:ParametersBarCheckItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.Parameters}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.ToggleParametersPanelCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                            <pcb:DocumentMapBarCheckItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.DocumentMap}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.ToggleDocumentMapCommand, RelativeSource={RelativeSource TemplatedParent}}" IsVisible="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).UseOfficeInspiredNavigationPane, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanNegationConverter}, FallbackValue=False}" />
                            <pcb:ThumbnailsBarCheckItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.Thumbnails}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.ToggleThumbnailsCommand, RelativeSource={RelativeSource TemplatedParent}}" IsVisible="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).UseOfficeInspiredNavigationPane, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanNegationConverter}, FallbackValue=False}" />
                            <pcb:EditingFieldsBarCheckItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.EditingFields}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.ToggleEditingFieldsCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                            <pcb:FindTextBarItem
                                dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.Find}"
                                Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.ShowFindTextCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                CommandParameter="{StaticResource TrueBoolean}"
                                IsVisible="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).UseOfficeInspiredNavigationPane, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanNegationConverter}, FallbackValue=False}" />
                            <pcb:WatermarkBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.Watermark}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.SetWatermarkCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                        </dxr:RibbonPageGroup>
                    </dxr:RibbonPage>
                </dxr:RibbonDefaultPageCategory>

            </dxr:RibbonControl>
            <ContentControl
                Grid.Row="1"
                ContentTemplate="{DynamicResource {dxpt:LWKey NewDocumentViewer.PresenterTemplate}}"
                Focusable="False"
                UseLayoutRounding="True" />
            <dxr:RibbonStatusBarControl Grid.Row="2" dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.StatusBar}" Focusable="True" IsTabStop="True">
                <dxr:RibbonStatusBarControl.LeftItems>
                    <pcb:PageNumberEditItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.PageNumber}" SettingsSource="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer), RelativeSource={RelativeSource TemplatedParent}}" />
                    <pcb:ProgressEditItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.Progress}" ProgressSettings="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).Document, RelativeSource={RelativeSource TemplatedParent}, FallbackValue={x:Null}}" />
                    <pcb:StopPageBuildItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.StopBuilding}" Command="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualCommandProvider.StopPageBuildingCommand, RelativeSource={RelativeSource TemplatedParent}}" Glyph="{local:PrintingResourceImage ResourceName=Images/BarItems/Stop.svg}" />
                </dxr:RibbonStatusBarControl.LeftItems>
                <dxr:RibbonStatusBarControl.RightItems>
                    <pcb:ZoomFactorEditItem dxp:DocumentPreviewControl.BarItemName="{x:Static pcb:DefaultPreviewBarItemNames.ZoomFactor}" SettingsSource="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer), RelativeSource={RelativeSource TemplatedParent}}" />
                </dxr:RibbonStatusBarControl.RightItems>
            </dxr:RibbonStatusBarControl>
        </Grid>
    </DataTemplate>


    <ControlTemplate x:Key="{dxpt:LWKey NewDocumentViewer.ScrollViewerTemplate}" TargetType="{x:Type pcn:PreviewScrollViewer}">
        <Grid x:Name="Grid" Margin="{TemplateBinding Margin}" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <ScrollContentPresenter
                x:Name="PART_ScrollContentPresenter"
                Margin="{TemplateBinding Padding}"
                CanContentScroll="{TemplateBinding CanContentScroll}"
                CanHorizontallyScroll="False"
                CanVerticallyScroll="False">
                <Grid.RowSpan>
                    <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}">
                        <Binding.Converter>
                            <dx:EnumToObjectConverter DefaultValue="1">
                                <dx:EnumToObjectConverter.Values>
                                    <dx:EnumObjectProvider x:Key="TouchOverlap" Value="2" />
                                </dx:EnumToObjectConverter.Values>
                            </dx:EnumToObjectConverter>
                        </Binding.Converter>
                    </Binding>
                </Grid.RowSpan>
                <Grid.ColumnSpan>
                    <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}">
                        <Binding.Converter>
                            <dx:EnumToObjectConverter DefaultValue="1">
                                <dx:EnumToObjectConverter.Values>
                                    <dx:EnumObjectProvider x:Key="TouchOverlap" Value="2" />
                                </dx:EnumToObjectConverter.Values>
                            </dx:EnumToObjectConverter>
                        </Binding.Converter>
                    </Binding>
                </Grid.ColumnSpan>
            </ScrollContentPresenter>
            <ScrollBar
                x:Name="PART_VerticalScrollBar"
                Grid.Row="0"
                Grid.Column="1"
                AutomationProperties.AutomationId="VerticalScrollBar"
                Cursor="Arrow"
                Maximum="{TemplateBinding ScrollableHeight}"
                Minimum="0"
                ViewportSize="{TemplateBinding ViewportHeight}"
                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
                <Grid.RowSpan>
                    <MultiBinding>
                        <MultiBinding.Bindings>
                            <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource Self}" />
                            <Binding Path="(dx:ScrollBarExtensions.ScrollViewerOrientation)" RelativeSource="{RelativeSource TemplatedParent}" />
                        </MultiBinding.Bindings>
                        <MultiBinding.Converter>
                            <dx:VerticalScrollBarRowSpanConverter />
                        </MultiBinding.Converter>
                    </MultiBinding>
                </Grid.RowSpan>
            </ScrollBar>
            <ScrollBar
                x:Name="PART_HorizontalScrollBar"
                Grid.Row="1"
                Grid.Column="0"
                AutomationProperties.AutomationId="HorizontalScrollBar"
                Cursor="Arrow"
                Maximum="{TemplateBinding ScrollableWidth}"
                Minimum="0"
                Orientation="Horizontal"
                ViewportSize="{TemplateBinding ViewportWidth}"
                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
                <Grid.ColumnSpan>
                    <MultiBinding>
                        <MultiBinding.Bindings>
                            <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource Self}" />
                            <Binding Path="(dx:ScrollBarExtensions.ScrollViewerOrientation)" RelativeSource="{RelativeSource TemplatedParent}" />
                        </MultiBinding.Bindings>
                        <MultiBinding.Converter>
                            <dx:HorizontalScrollBarRowSpanConverter />
                        </MultiBinding.Converter>
                    </MultiBinding>
                </Grid.ColumnSpan>
            </ScrollBar>
            <dx:DXBorder
                x:Name="Corner"
                Grid.Row="1"
                Grid.Column="1"
                Style="{DynamicResource {dxt:LWKey ScrollBar.ScrollingCornerStyle}}">
                <dx:DXBorder.Visibility>
                    <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}">
                        <Binding.Converter>
                            <dx:EnumToObjectConverter DefaultValue="Visible">
                                <dx:EnumToObjectConverter.Values>
                                    <dx:EnumObjectProvider x:Key="TouchOverlap" Value="Collapsed" />
                                </dx:EnumToObjectConverter.Values>
                            </dx:EnumToObjectConverter>
                        </Binding.Converter>
                    </Binding>
                </dx:DXBorder.Visibility>
                <dx:BackgroundPanel />
            </dx:DXBorder>
            <dxe:FlyoutControl
                x:Name="PART_FlyoutControl"
                VerticalAlignment="Center"
                AllowMoveAnimation="False"
                ContentTemplate="{DynamicResource {dxpt:LWKey NewDocumentViewer.PaginationTemplate}}"
                IsOpen="False"
                PlacementTarget="{Binding ElementName=PART_VerticalScrollBar}">
                <dxe:FlyoutControl.Settings>
                    <dxe:FlyoutSettings Placement="Left" ShowIndicator="True" />
                </dxe:FlyoutControl.Settings>
            </dxe:FlyoutControl>
        </Grid>
    </ControlTemplate>

    <DataTemplate x:Key="{dxpt:LWKey NewDocumentViewer.SelectionCanvasContentTemplate}">
        <dx:DXBorder
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Background="#45007FFF"
            BorderBrush="#FF007FFF"
            BorderThickness="1" />
    </DataTemplate>

    <ControlTemplate x:Key="{dxpt:LWKey NewDocumentViewer.SelectionCanvasTemplate}" TargetType="{x:Type pcn:SelectionCanvas}">
        <Canvas x:Name="PART_SelectionCanvas" ClipToBounds="True">
            <ContentControl
                Canvas.Left="{Binding Path=(SelectionRectangle).X, RelativeSource={RelativeSource TemplatedParent}}"
                Canvas.Top="{Binding Path=(SelectionRectangle).Y, RelativeSource={RelativeSource TemplatedParent}}"
                Width="{Binding Path=(SelectionRectangle).Width, RelativeSource={RelativeSource TemplatedParent}}"
                Height="{Binding Path=(SelectionRectangle).Height, RelativeSource={RelativeSource TemplatedParent}}"
                Content="{TemplateBinding SelectionRectangle}"
                ContentTemplate="{DynamicResource {dxpt:LWKey NewDocumentViewer.SelectionCanvasContentTemplate}}"
                Focusable="False" />
        </Canvas>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxpt:LWKey NewDocumentViewer.PageSelectorTemplate}" TargetType="{x:Type pcn:PageSelector}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <dxdv:DocumentPresenterDecorator
                x:Name="PART_Decorator"
                Grid.RowSpan="2"
                Grid.ColumnSpan="2"
                FocusVisualStyle="{x:Null}"
                Focusable="False">
                <Grid>
                    <pcn:PreviewScrollViewer
                        x:Name="PART_ScrollViewer"
                        Padding="{TemplateBinding Padding}"
                        dx:ScrollBarExtensions.ScrollBehavior="{dx:ScrollViewerScrollBehavior}"
                        CanContentScroll="True"
                        CanMouseScroll="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).CursorMode, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource cursorModeToCanMouseScrollConverter}}"
                        FlowDirection="{Binding FlowDirection, RelativeSource={RelativeSource AncestorType=dxp:DocumentPreviewControl}}"
                        Focusable="false"
                        Template="{DynamicResource {dxpt:LWKey NewDocumentViewer.ScrollViewerTemplate}}">
                        <dxmvvm:Interaction.Behaviors>
                            <pcn:CursorAttachedBehavior CursorMode="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).CursorMode, RelativeSource={RelativeSource TemplatedParent}}" />
                            <dx:ScrollViewerTouchBehavior Orientation="Vertical" />
                        </dxmvvm:Interaction.Behaviors>
                        <ItemsPresenter x:Name="PART_ItemsPresenter" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </pcn:PreviewScrollViewer>
                </Grid>
            </dxdv:DocumentPresenterDecorator>
            <pcn:SelectionCanvas Grid.ColumnSpan="2" SelectionRectangle="{Binding Path=SelectionRectangle, RelativeSource={RelativeSource AncestorType=dxp:DocumentPresenterControl}}" />
            <dx:DXExpander
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                HorizontalExpand="FromLeftToRight"
                Visibility="{TemplateBinding IsSearchControlVisible, Converter={dx:BooleanToVisibilityConverter}}"
                IsExpanded="{TemplateBinding IsSearchControlVisible}"
                Opacity="{Binding Path=AnimationProgress, RelativeSource={RelativeSource Self}}">
                <dxdv:SearchControlContainer IsSearchControlVisible="{TemplateBinding IsSearchControlVisible}" SearchParameter="{TemplateBinding SearchParameter}" />
            </dx:DXExpander>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxpt:LWKey NewDocumentViewer.DocumentPresenterTemplate}" TargetType="{x:Type dxp:DocumentPresenterControl}">
        <dx:DXBorder Focusable="False">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                </Grid.RowDefinitions>
                <TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    FontWeight="Bold"
                    Text="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).Document.DocumentStatus, UpdateSourceTrigger=PropertyChanged, Converter={dxpn:DocumentStatusToTextConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                    TextAlignment="Center"
                    Visibility="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).Document.DocumentStatus, Converter={dxpn:DocumentStatusToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}" />
                <Grid Name="renderContainer">
                    <dxe:NativeImage x:Name="PART_NativeImage" Focusable="False" />
                    <pcn:PageSelector
                        x:Name="PART_ItemsControl"
                        Background="Transparent"
                        IsSearchControlVisible="{TemplateBinding IsSearchControlVisible}"
                        SearchParameter="{TemplateBinding SearchParameter}"
                        VirtualizingStackPanel.VirtualizationMode="Recycling">
                        <pcn:PageSelector.ItemsPanel>
                            <ItemsPanelTemplate>
                                <dxdv:DocumentViewerPanel Name="itemsHost" FlowDirection="LeftToRight" IsItemsHost="True" />
                            </ItemsPanelTemplate>
                        </pcn:PageSelector.ItemsPanel>
                    </pcn:PageSelector>
                </Grid>
            </Grid>
        </dx:DXBorder>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxpt:LWKey NewDocumentViewer.Template}" TargetType="{x:Type dxp:DocumentPreviewControl}">
        <ContentControl
            Grid.RowSpan="3"
            Grid.ColumnSpan="3"
            ContentTemplate="{TemplateBinding ActualBarsTemplate}"
            Focusable="False" />
    </ControlTemplate>

    <ControlTemplate x:Key="{dxpt:LWKey NewDocumentViewer.DocumentMapTemplate}" TargetType="{x:Type pcn:DocumentMap}">
        <dxg:GridControl
            x:Name="PART_GridControl"
            Grid.Row="1"
            CurrentItem="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
            ItemsSource="{TemplateBinding ActualSource}"
            SelectedItem="{Binding SelectedItem, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
            SelectionMode="Row"
            ShowBorder="False">
            <dxmvvm:Interaction.Behaviors>
                <dxmvvm:KeyToCommand
                    Command="{x:Static dxdv:DocumentMapCommands.GoToNodeCommand}"
                    CommandParameter="{Binding Path=CurrentItem, ElementName=PART_GridControl}"
                    EventName="PreviewKeyDown"
                    KeyGesture="Enter"
                    MarkRoutedEventsAsHandled="True" />
                <dxmvvm:KeyToCommand
                    Command="{x:Static dxdv:DocumentMapCommands.GoToNodeCommand}"
                    CommandParameter="{Binding Path=CurrentItem, ElementName=PART_GridControl}"
                    EventName="PreviewKeyDown"
                    KeyGesture="Space"
                    MarkRoutedEventsAsHandled="True" />
            </dxmvvm:Interaction.Behaviors>
            <dxg:GridControl.View>
                <dxg:TreeListView x:Name="PART_TreeView" Style="{TemplateBinding TreeViewStyle}">
                    <dxg:TreeListView.FormatConditions>
                        <dxg:FormatCondition FieldName="IsHighlighted" ApplyToRow="True" Expression="[IsHighlighted] = True">
                            <dxg:FormatCondition.Format>
                                <dx:Format Background="#FFFFEE80" Foreground="#FF2B579A" />
                            </dxg:FormatCondition.Format>
                        </dxg:FormatCondition>
                    </dxg:TreeListView.FormatConditions>
                    <dxg:TreeListView.RowCellMenuCustomizations>
                        <dxb:BarButtonItem
                            Command="{x:Static dxdv:DocumentMapCommands.GoToNodeCommand}"
                            CommandParameter="{Binding Path=CurrentItem, ElementName=PART_GridControl}"
                            CommandTarget="{Binding ElementName=PART_GridControl}"
                            Content="{dxdv:DocumentViewerControlLocalizedString DocumentMapGoToCaption}" />
                    </dxg:TreeListView.RowCellMenuCustomizations>
                    <dxmvvm:Interaction.Behaviors>
                        <dxmvvm:EventToCommand Command="{x:Static dxdv:DocumentMapCommands.GoToNodeCommand}" EventName="MouseLeftButtonUp">
                            <dxmvvm:EventToCommand.EventArgsConverter>
                                <dxdv:MouseEventArgsToDataRowConverter ChangedButton="Left" />
                            </dxmvvm:EventToCommand.EventArgsConverter>
                        </dxmvvm:EventToCommand>
                    </dxmvvm:Interaction.Behaviors>
                </dxg:TreeListView>
            </dxg:GridControl.View>
            <dxg:GridControl.Columns>
                <dxg:GridColumn FieldName="Title" />
            </dxg:GridControl.Columns>
        </dxg:GridControl>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxpt:LWKey NewDocumentViewer.ThumbnailsTemplate}" TargetType="{x:Type pcn:ThumbnailsViewerControl}">
        <Grid>
            <pcn:ThumbnailsPresenterControl PageDisplayMode="Wrap" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxpt:LWKey NewDocumentViewer.ThumbnailsPresenterTemplate}" TargetType="{x:Type pcn:ThumbnailsPresenterControl}">
        <Grid>
            <dxe:NativeImage x:Name="PART_NativeImage" />
            <pcn:ThumbnailsPageSelector x:Name="PART_ItemsControl">
                <pcn:ThumbnailsPageSelector.ItemsPanel>
                    <ItemsPanelTemplate>
                        <dxdv:DocumentViewerPanel x:Name="PART_DocumentViewerPanel" />
                    </ItemsPanelTemplate>
                </pcn:ThumbnailsPageSelector.ItemsPanel>
            </pcn:ThumbnailsPageSelector>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxpt:LWKey NewDocumentViewer.PageControlItemTemplate}" TargetType="{x:Type dxp:PreviewPageControlItem}">
        <Grid Margin="1">
            <ContentControl Content="{Binding}" ContentTemplate="{DynamicResource {dxpt:LWKey NewDocumentViewer.PageBorderTemplate}}" Focusable="False" IsHitTestVisible="False" />
            <pcn:PageMarginsEditor Focusable="False" Margin="-1" Page="{Binding}" Zoom="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ZoomFactor, RelativeSource={RelativeSource Self}}" />
        </Grid>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\DocumentPreviewControl.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\ParametersPanel.xaml-->
    <Style x:Key="descriptionStyle" TargetType="TextBlock">
        <Setter Property="Text" Value="{Binding ActualDescription}" />
        <Setter Property="dxei:TextBlockService.AllowIsTextTrimmed" Value="True" />
        <Setter Property="ToolTip">
            <Setter.Value>
                <ToolTip Content="{Binding PlacementTarget.Text, RelativeSource={RelativeSource Self}}" Visibility="{Binding Path=PlacementTarget.(dxei:TextBlockService.IsTextTrimmed), Mode=OneWay, Converter={dx:BooleanToVisibilityConverter}, RelativeSource={RelativeSource Self}}" />
            </Setter.Value>
        </Setter>
    </Style>



    <ControlTemplate x:Key="parametersControlTemplate" TargetType="dxpp:ParametersPanel">
        <dxlc:LayoutControl
            Padding="0,12"
            VerticalAlignment="Top"
            DataContext="{TemplateBinding ParametersModel}"
            Orientation="Vertical">
            <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                <dxpp:ParameterLayoutRoot
                    x:Name="PART_parametersContainer"
                    Margin="12,0"
                    Grid.IsSharedSizeScope="True"
                    ItemLabelsAlignment="Local"
                    ItemsSource="{Binding ItemViewModels}"
                    Orientation="Vertical">
                    <dxpp:ParameterLayoutRoot.GroupStyle>
                        <Style TargetType="dxpp:ParameterLayoutGroup">
                            <Setter Property="IsCollapsible" Value="{Binding ShowExpandButton}" />
                            <Setter Property="IsCollapsed" Value="{Binding Expanded, Mode=OneTime, Converter={dxmvvm:BooleanNegationConverter}}" />
                            <Setter Property="Header" Value="{Binding}" />
                            <Setter Property="HeaderTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis" Visibility="{Binding TitleVisible, Converter={dxmvvm:BooleanToVisibilityConverter HiddenInsteadOfCollapsed=True}}" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="View" Value="{Binding BorderVisible, Converter={dxmvvm:BooleanToObjectConverter TrueValue=GroupBox, FalseValue=Group}}" />
                            <Setter Property="Orientation" Value="{Binding Orientation, Converter={StaticResource orientationConverter}}" />
                            <Setter Property="ItemsSource" Value="{Binding Items}" />
                            <Setter Property="GroupBoxStyle">
                                <Setter.Value>
                                    <Style TargetType="dxlc:GroupBox">
                                        <Setter Property="TitleVisibility" Value="{Binding Converter={dxpn:ParameterGroupTitleVisibilityConverter}}" />
                                    </Style>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Visibility" Value="{Binding Visible, Converter={dx:BooleanToVisibilityConverter}}" />
                        </Style>
                    </dxpp:ParameterLayoutRoot.GroupStyle>
                    <dxpp:ParameterLayoutRoot.ParameterItemStyle>
                        <Style TargetType="dxlc:LayoutItem">
                            <Setter Property="Visibility" Value="{Binding Visible, Converter={dx:BooleanToVisibilityConverter}}" />
                            <Setter Property="IsEnabled" Value="{Binding Enabled}" />
                        </Style>
                    </dxpp:ParameterLayoutRoot.ParameterItemStyle>
                    <dxpp:ParameterLayoutRoot.SeparatorStyle>
                        <Style TargetType="dxlc:GroupSeparator">
                            <Setter Property="Orientation" Value="{Binding Path=(dxpp:ParameterLayoutGroup.GroupModel).Orientation, RelativeSource={RelativeSource Self}, Converter={StaticResource orientationInvertConverter}, FallbackValue=Horizontal}" />
                            <Setter Property="Visibility" Value="{Binding Visible, Converter={dx:BooleanToVisibilityConverter}}" />
                        </Style>
                    </dxpp:ParameterLayoutRoot.SeparatorStyle>
                    <dxpp:ParameterLayoutRoot.Resources>
                        <Style TargetType="dxlc:GroupSeparator">
                            <Setter Property="Orientation" Value="{Binding Path=(dxpp:ParameterLayoutGroup.GroupModel).Orientation, RelativeSource={RelativeSource Self}, Converter={StaticResource orientationInvertConverter}, FallbackValue=Horizontal}" />
                            <Setter Property="Visibility" Value="{Binding Visible, Converter={dx:BooleanToVisibilityConverter}}" />
                        </Style>
                    </dxpp:ParameterLayoutRoot.Resources>
                </dxpp:ParameterLayoutRoot>
            </ScrollViewer>
            <dxlc:LayoutGroup Margin="12,12,12,0" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                <dx:UniformStackPanel ChildSpacing="6">
                    <Button Name="PART_resetButton" Command="{Binding ResetParametersCommand}" Content="{dxp:PrintingStringId StringId=ParametersReset}" />
                    <Button Name="PART_submitButton" Command="{Binding SubmitParametersCommand}" Content="{dxp:PrintingStringId StringId=ParametersSubmit}" />
                </dx:UniformStackPanel>
            </dxlc:LayoutGroup>
        </dxlc:LayoutControl>
    </ControlTemplate>
    <ControlTemplate x:Key="horizontalLineLayout" TargetType="dxpp:ParameterLineLayout">
        <dxpp:AutoFitColumnGrid x:Name="panel">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0" MinWidth="10" SharedSizeGroup="{Binding Path=(dxpp:ParameterLayoutGroup.GroupModel), Converter={dxpn:ParameterGroupToLabelSizeScopeConverter}, RelativeSource={RelativeSource Self}}" />
                <ColumnDefinition Width="4" MinWidth="4" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Label VerticalAlignment="Center">
                <TextBlock Style="{StaticResource descriptionStyle}" TextTrimming="CharacterEllipsis" />
            </Label>
            <ContentPresenter Grid.Column="2" MinWidth="{Binding Content.MinWidth, RelativeSource={RelativeSource Self}}" Content="{TemplateBinding Content}" />
        </dxpp:AutoFitColumnGrid>
    </ControlTemplate>
    <ControlTemplate x:Key="verticalLineLayout" TargetType="dxpp:ParameterLineLayout">
        <StackPanel Name="panel">
            <Label>
                <TextBlock Margin="0,0,0,4" Style="{StaticResource descriptionStyle}" TextWrapping="Wrap" />
            </Label>
            <ContentPresenter Grid.Column="2" MinWidth="{Binding Content.MinWidth, RelativeSource={RelativeSource Self}}" Content="{TemplateBinding Content}" />
        </StackPanel>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\ParametersPanel.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\DocumentPreviewRibbonController.xaml-->
    <DataTemplate x:Key="zoomModeButtonTemplate">
        <ContentControl>
            <dxb:BarButtonItem dxp:BarItemBehavior.SendZoomToModelOnClick="{dxp:RibbonItemBinding Path=Model}" CommandParameter="{Binding}" Content="{Binding}" />
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="separatorButtonTemplate">
        <ContentControl>
            <dxb:BarItemSeparator />
        </ContentControl>
    </DataTemplate>


    <DataTemplate x:Key="documentPreviewRibbonControllerTemplate">
        <dxr:RibbonActionContainer>

            <dxb:BarCheckItem
                Name="showParameters"
                Command="{dxp:RibbonItemBinding Path=Model.ToggleParametersPanelCommand, FallbackValueResourceKey='disabledCommand'}"
                Content="{dxp:PrintingStringId StringId=Parameters}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Parameters.svg}"
                Hint="{dxp:PrintingStringId StringId=Parameters_Hint}"
                IsChecked="{dxp:RibbonItemBinding Path=Model.IsParametersPanelVisible, Mode=OneWay}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Parameters.svg}" />
            <dxb:BarCheckItem
                Name="showSearch"
                Command="{dxp:RibbonItemBinding Path=Model.ToggleSearchPanelCommand}"
                Content="{dxp:PrintingStringId StringId=Search}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Find.svg}"
                Hint="{dxp:PrintingStringId StringId=Search_Hint}"
                IsChecked="{dxp:RibbonItemBinding Path=Model.IsSearchPanelVisible, Mode=OneWay}"
                IsVisible="{dxp:RibbonItemBinding Path=Model.IsSearchVisible}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Find.svg}" />
            <dxb:BarCheckItem
                Name="showMap"
                Command="{dxp:RibbonItemBinding Path=Model.ToggleDocumentMapCommand, FallbackValueResourceKey='disabledCommand'}"
                Content="{dxp:PrintingStringId StringId=DocumentMap}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/DocumentMap.svg}"
                Hint="{dxp:PrintingStringId StringId=DocumentMap_Hint}"
                IsChecked="{dxp:RibbonItemBinding Path=Model.IsDocumentMapVisible, Mode=OneWay}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/DocumentMap.svg}" />

            <dxb:BarSubItem
                Name="zoomMode"
                AllowDrop="True"
                Content="{dxp:PrintingStringId StringId=Zoom}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Zoom.svg}"
                Hint="{dxp:PrintingStringId StringId=Zoom_Hint}"
                ItemLinksSource="{dxp:RibbonItemBinding Path=Model.ZoomModes}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Zoom.svg}">
                <dxb:BarSubItem.ItemTemplateSelector>
                    <dxp:ZoomSubItemTemplateSelector SeparatorItemTemplate="{StaticResource separatorItemTemplate}" ZoomModeItemTemplate="{StaticResource zoomModeItemTemplate}" />
                </dxb:BarSubItem.ItemTemplateSelector>
            </dxb:BarSubItem>
            <dxb:BarButtonItem
                Name="open"
                Command="{dxp:RibbonItemBinding Path=Model.OpenCommand}"
                Content="{dxp:PrintingStringId StringId=Open}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Open.svg}"
                Hint="{dxp:PrintingStringId StringId=Open_Hint}"
                IsVisible="{dxp:RibbonItemBinding Path=Model.IsOpenButtonVisible}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Open.svg}" />
            <dxb:BarButtonItem
                Name="save"
                Command="{dxp:RibbonItemBinding Path=Model.SaveCommand}"
                Content="{dxp:PrintingStringId StringId=Save}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Save.svg}"
                Hint="{dxp:PrintingStringId StringId=Save_Hint}"
                IsVisible="{dxp:RibbonItemBinding Path=Model.IsSaveButtonVisible}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Save.svg}" />
            <dxb:BarButtonItem
                Name="print"
                Command="{dxp:RibbonItemBinding Path=Model.PrintCommand}"
                CommandParameter="default"
                Content="{dxp:PrintingStringId StringId=Print}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/PrintDialog.svg}"
                Hint="{dxp:PrintingStringId StringId=Print_Hint}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/PrintDialog.svg}" />

            <dxb:BarButtonItem
                Name="printDirect"
                Command="{dxp:RibbonItemBinding Path=Model.PrintDirectCommand}"
                Content="{dxp:PrintingStringId StringId=PrintDirect}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Print.svg}"
                Hint="{dxp:PrintingStringId StringId=PrintDirect_Hint}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Print.svg}" />
            <dxb:BarButtonItem
                Name="pageSetup"
                Command="{dxp:RibbonItemBinding Path=Model.PageSetupCommand}"
                Content="{dxp:PrintingStringId StringId=PageSetup}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/PageSetup.svg}"
                Hint="{dxp:PrintingStringId StringId=PageSetup_Hint}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/PageSetup.svg}" />

            <dxb:BarButtonItem
                Name="scaling"
                Command="{dxp:RibbonItemBinding Path=Model.ScaleCommand}"
                Content="{dxp:PrintingStringId StringId=Scaling}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Scaling.svg}"
                Hint="{dxp:PrintingStringId StringId=Scaling_Hint}"
                IsVisible="{dxp:RibbonItemBinding Path=Model.IsScaleVisible}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Scaling.svg}" />

            <dxb:BarButtonItem
                Name="zoomOut"
                Command="{dxp:RibbonItemBinding Path=Model.ZoomOutCommand}"
                Content="{dxp:PrintingStringId StringId=DecreaseZoom}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ZoomOut.svg}"
                Hint="{dxp:PrintingStringId StringId=DecreaseZoom_Hint}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ZoomOut.svg}" />
            <dxb:BarButtonItem
                Name="zoomIn"
                Command="{dxp:RibbonItemBinding Path=Model.ZoomInCommand}"
                Content="{dxp:PrintingStringId StringId=IncreaseZoom}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ZoomIn.svg}"
                Hint="{dxp:PrintingStringId StringId=IncreaseZoom_Hint}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ZoomIn.svg}" />

            <dxb:BarButtonItem
                Name="firstPage"
                Command="{dxp:RibbonItemBinding Path=Model.FirstPageCommand}"
                Content="{dxp:PrintingStringId StringId=FirstPage}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/First.svg}"
                Hint="{dxp:PrintingStringId StringId=FirstPage_Hint}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/First.svg}" />
            <dxb:BarButtonItem
                Name="previousPage"
                Command="{dxp:RibbonItemBinding Path=Model.PreviousPageCommand}"
                Content="{dxp:PrintingStringId StringId=PreviousPage}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Prev.svg}"
                Hint="{dxp:PrintingStringId StringId=PreviousPage_Hint}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Prev.svg}" />
            <dxb:BarButtonItem
                Name="nextPage"
                Command="{dxp:RibbonItemBinding Path=Model.NextPageCommand}"
                Content="{dxp:PrintingStringId StringId=NextPage}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Next.svg}"
                Hint="{dxp:PrintingStringId StringId=NextPage_Hint}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Next.svg}" />
            <dxb:BarButtonItem
                Name="lastPage"
                Command="{dxp:RibbonItemBinding Path=Model.LastPageCommand}"
                Content="{dxp:PrintingStringId StringId=LastPage}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Last.svg}"
                Hint="{dxp:PrintingStringId StringId=LastPage_Hint}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Last.svg}" />
            <dxb:BarButtonItem
                Name="watermark"
                Command="{dxp:RibbonItemBinding Path=Model.WatermarkCommand}"
                Content="{dxp:PrintingStringId StringId=Watermark}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Watermark.svg}"
                Hint="{dxp:PrintingStringId StringId=Watermark_Hint}"
                IsEnabled="{dxp:RibbonItemBinding Path=Model.IsSetWatermarkVisible}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Watermark.svg}" />
            <dxb:BarButtonItem
                Name="exportPDF"
                Command="{dxp:RibbonItemBinding Path=Model.ExportCommand}"
                CommandParameter="Pdf"
                Content="{dxp:PrintingStringId StringId=ExportPdf}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportPDF.svg}"
                Hint="{dxp:PrintingStringId StringId=ExportPdf}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportPDF.svg}" />
            <dxb:BarButtonItem
                Name="exportHTML"
                Command="{dxp:RibbonItemBinding Path=Model.ExportCommand}"
                CommandParameter="Htm"
                Content="{dxp:PrintingStringId StringId=ExportHtm}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportHTM.svg}"
                Hint="{dxp:PrintingStringId StringId=ExportHtm}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportHTM.svg}" />
            <dxb:BarButtonItem
                Name="exportMHT"
                Command="{dxp:RibbonItemBinding Path=Model.ExportCommand}"
                CommandParameter="Mht"
                Content="{dxp:PrintingStringId StringId=ExportMht}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportMHT.svg}"
                Hint="{dxp:PrintingStringId StringId=ExportMht}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportMHT.svg}" />
            <dxb:BarButtonItem
                Name="exportRTF"
                Command="{dxp:RibbonItemBinding Path=Model.ExportCommand}"
                CommandParameter="Rtf"
                Content="{dxp:PrintingStringId StringId=ExportRtf}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportRTF.svg}"
                Hint="{dxp:PrintingStringId StringId=ExportRtf}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportRTF.svg}" />
            <dxb:BarButtonItem
                Name="exportXLS"
                Command="{dxp:RibbonItemBinding Path=Model.ExportCommand}"
                CommandParameter="Xls"
                Content="{dxp:PrintingStringId StringId=ExportXls}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportXLS.svg}"
                Hint="{dxp:PrintingStringId StringId=ExportXls}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportXLS.svg}" />
            <dxb:BarButtonItem
                Name="exportXLSX"
                Command="{dxp:RibbonItemBinding Path=Model.ExportCommand}"
                CommandParameter="Xlsx"
                Content="{dxp:PrintingStringId StringId=ExportXlsx}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportXLSX.svg}"
                Hint="{dxp:PrintingStringId StringId=ExportXlsx}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportXLSX.svg}" />
            <dxb:BarButtonItem
                Name="exportCSV"
                Command="{dxp:RibbonItemBinding Path=Model.ExportCommand}"
                CommandParameter="Csv"
                Content="{dxp:PrintingStringId StringId=ExportCsv}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportCSV.svg}"
                Hint="{dxp:PrintingStringId StringId=ExportCsv}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportCSV.svg}" />
            <dxb:BarButtonItem
                Name="exportText"
                Command="{dxp:RibbonItemBinding Path=Model.ExportCommand}"
                CommandParameter="Txt"
                Content="{dxp:PrintingStringId StringId=ExportTxt}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportTxt.svg}"
                Hint="{dxp:PrintingStringId StringId=ExportTxt}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportTxt.svg}" />
            <dxb:BarButtonItem
                Name="exportImage"
                Command="{dxp:RibbonItemBinding Path=Model.ExportCommand}"
                CommandParameter="Image"
                Content="{dxp:PrintingStringId StringId=ExportImage}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportImage.svg}"
                Hint="{dxp:PrintingStringId StringId=ExportImage}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportImage.svg}" />
            <dxb:BarSplitButtonItem
                Name="export"
                Command="{dxp:RibbonItemBinding Path=Model.ExportCommand}"
                Content="{dxp:PrintingStringId StringId=ExportFile}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Export.svg}"
                Hint="{dxp:PrintingStringId StringId=ExportFile_Hint}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Export.svg}">
                <dxb:BarSplitButtonItem.PopupControl>
                    <dxb:PopupMenu>
                        <dxb:PopupMenu.ItemLinks>
                            <dxb:BarButtonItemLink BarItemName="exportPDF" />
                            <dxb:BarButtonItemLink BarItemName="exportHTML" />
                            <dxb:BarButtonItemLink BarItemName="exportMHT" />
                            <dxb:BarButtonItemLink BarItemName="exportRTF" />
                            <dxb:BarButtonItemLink BarItemName="exportXLS" />
                            <dxb:BarButtonItemLink BarItemName="exportXLSX" />
                            <dxb:BarButtonItemLink BarItemName="exportCSV" />
                            <dxb:BarButtonItemLink BarItemName="exportText" />
                            <dxb:BarButtonItemLink BarItemName="exportImage" />
                            <dxb:BarButtonItemLink BarItemName="exportXPS" />
                        </dxb:PopupMenu.ItemLinks>
                    </dxb:PopupMenu>
                </dxb:BarSplitButtonItem.PopupControl>
            </dxb:BarSplitButtonItem>

            <dxb:BarButtonItem
                Name="emailPDF"
                Command="{dxp:RibbonItemBinding Path=Model.SendCommand}"
                CommandParameter="{x:Static xpc:ExportFormat.Pdf}"
                Content="{dxp:PrintingStringId StringId=SendPdf}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportPDF.svg}"
                Hint="{dxp:PrintingStringId StringId=ExportPdf}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportPDF.svg}" />
            <dxb:BarButtonItem
                Name="emailMHT"
                Command="{dxp:RibbonItemBinding Path=Model.SendCommand}"
                CommandParameter="{x:Static xpc:ExportFormat.Mht}"
                Content="{dxp:PrintingStringId StringId=SendMht}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportMHT.svg}"
                Hint="{dxp:PrintingStringId StringId=ExportMht}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportMHT.svg}" />
            <dxb:BarButtonItem
                Name="emailRTF"
                Command="{dxp:RibbonItemBinding Path=Model.SendCommand}"
                CommandParameter="{x:Static xpc:ExportFormat.Rtf}"
                Content="{dxp:PrintingStringId StringId=SendRtf}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportRTF.svg}"
                Hint="{dxp:PrintingStringId StringId=ExportRtf}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportRTF.svg}" />
            <dxb:BarButtonItem
                Name="emailXLS"
                Command="{dxp:RibbonItemBinding Path=Model.SendCommand}"
                CommandParameter="{x:Static xpc:ExportFormat.Xls}"
                Content="{dxp:PrintingStringId StringId=SendXls}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportXLS.svg}"
                Hint="{dxp:PrintingStringId StringId=ExportXls}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportXLS.svg}" />
            <dxb:BarButtonItem
                Name="emailXLSX"
                Command="{dxp:RibbonItemBinding Path=Model.SendCommand}"
                CommandParameter="{x:Static xpc:ExportFormat.Xlsx}"
                Content="{dxp:PrintingStringId StringId=SendXlsx}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportXLSX.svg}"
                Hint="{dxp:PrintingStringId StringId=ExportXlsx}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportXLSX.svg}" />
            <dxb:BarButtonItem
                Name="emailCSV"
                Command="{dxp:RibbonItemBinding Path=Model.SendCommand}"
                CommandParameter="{x:Static xpc:ExportFormat.Csv}"
                Content="{dxp:PrintingStringId StringId=SendCsv}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportCSV.svg}"
                Hint="{dxp:PrintingStringId StringId=ExportCsv}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportCSV.svg}" />
            <dxb:BarButtonItem
                Name="emailText"
                Command="{dxp:RibbonItemBinding Path=Model.SendCommand}"
                CommandParameter="{x:Static xpc:ExportFormat.Txt}"
                Content="{dxp:PrintingStringId StringId=SendTxt}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportTxt.svg}"
                Hint="{dxp:PrintingStringId StringId=ExportTxt}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportTxt.svg}" />
            <dxb:BarButtonItem
                Name="emailImage"
                Command="{dxp:RibbonItemBinding Path=Model.SendCommand}"
                CommandParameter="{x:Static xpc:ExportFormat.Image}"
                Content="{dxp:PrintingStringId StringId=SendImage}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportImage.svg}"
                Hint="{dxp:PrintingStringId StringId=ExportImage}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/ExportImage.svg}" />
            <dxb:BarSplitButtonItem
                Name="email"
                Command="{dxp:RibbonItemBinding Path=Model.SendCommand}"
                CommandParameter="{x:Null}"
                Content="{dxp:PrintingStringId StringId=SendFile}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Mail.svg}"
                Hint="{dxp:PrintingStringId StringId=SendFile_Hint}"
                IsVisible="{dxp:RibbonItemBinding Path=Model.IsSendVisible}"
                LargeGlyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Mail.svg}">
                <dxb:BarSplitButtonItem.PopupControl>
                    <dxb:PopupMenu>
                        <dxb:PopupMenu.ItemLinks>
                            <dxb:BarButtonItemLink BarItemName="emailPDF" />
                            <dxb:BarButtonItemLink BarItemName="emailMHT" />
                            <dxb:BarButtonItemLink BarItemName="emailRTF" />
                            <dxb:BarButtonItemLink BarItemName="emailXLS" />
                            <dxb:BarButtonItemLink BarItemName="emailXLSX" />
                            <dxb:BarButtonItemLink BarItemName="emailCSV" />
                            <dxb:BarButtonItemLink BarItemName="emailText" />
                            <dxb:BarButtonItemLink BarItemName="emailImage" />
                            <dxb:BarButtonItemLink BarItemName="emailXPS" />
                        </dxb:PopupMenu.ItemLinks>
                    </dxb:PopupMenu>
                </dxb:BarSplitButtonItem.PopupControl>
            </dxb:BarSplitButtonItem>
            <dxb:BarEditItem
                x:Name="pageNumber"
                Content="{dxp:PrintingStringId StringId=GoToPage}"
                Content2="{dxp:RibbonItemBinding Path=Model.PageCount, Converter='pageCountFormatStringConverter', FallbackValue=' / 0'}"
                EditValue="{dxp:RibbonItemBinding Path=Model.CurrentPageNumber, Mode=TwoWay, UpdateSourceTrigger=Explicit, FallbackValue=0}"
                IsEnabled="{dxp:RibbonItemBinding Path=Model.PageCount, FallbackValue=False}"
                ShowScreenTip="False">
                <dxb:BarEditItem.EditStyle>
                    <Style TargetType="{x:Type dxe:TextEdit}">
                        <Setter Property="MinWidth" Value="30" />
                    </Style>
                </dxb:BarEditItem.EditStyle>
                <dxb:BarEditItem.EditSettings>
                    <dxe:TextEditSettings
                        HorizontalContentAlignment="Center"
                        AllowNullInput="True"
                        Mask="\d{0,6}"
                        MaskType="RegEx" />
                </dxb:BarEditItem.EditSettings>
            </dxb:BarEditItem>


            <dxb:BarEditItem
                x:Name="progress"
                EditValue="{dxp:RibbonItemBinding Path=Model.ProgressValue, Mode=OneWay}"
                IsVisible="{dxp:RibbonItemBinding Path=Model.ProgressVisibility, FallbackValue=False}"
                ShowScreenTip="False">
                <dxb:BarEditItem.EditStyle>
                    <Style TargetType="{x:Type dxe:ProgressBarEdit}">
                        <Setter Property="MinWidth" Value="150" />
                        <Setter Property="MaxHeight" Value="12" />
                    </Style>
                </dxb:BarEditItem.EditStyle>
                <dxb:BarEditItem.EditSettings>
                    <dxe:ProgressBarEditSettings DataContext="{Binding Path=(dxb:BarEditItem.BarEditItem), RelativeSource={RelativeSource Mode=Self}}" Maximum="{dxp:RibbonItemBinding Path=Model.ProgressMaximum}" Minimum="0" />
                </dxb:BarEditItem.EditSettings>
            </dxb:BarEditItem>

            <dxb:BarEditItem x:Name="progressMarquee" IsVisible="{dxp:RibbonItemBinding Path=Model.ProgressMarqueeVisibility, FallbackValue=False}">
                <dxb:BarEditItem.EditTemplate>
                    <DataTemplate>
                        <dxe:ProgressBarEdit Height="12" MinWidth="150">
                            <dxe:ProgressBarEdit.StyleSettings>
                                <dxe:ProgressBarMarqueeStyleSettings />
                            </dxe:ProgressBarEdit.StyleSettings>
                        </dxe:ProgressBarEdit>
                    </DataTemplate>
                </dxb:BarEditItem.EditTemplate>
            </dxb:BarEditItem>

            <dxb:BarButtonItem
                x:Name="stop"
                Command="{dxp:RibbonItemBinding Path=Model.StopCommand, FallbackValueResourceKey='disabledCommand'}"
                Content="{dxp:PrintingStringId StringId=StopPageBuilding}"
                Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Stop.svg}"
                IsVisible="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" />

            <dxb:BarStaticItem
                Name="zoomFactor"
                AutoSizeMode="Fill"
                Content="{dxp:RibbonItemBinding Path=Model.ZoomDisplayText}"
                ContentAlignment="Right"
                ShowBorder="False" />

            <dxr:AddRibbonPageCategoryAction>
                <dxr:AddRibbonPageCategoryAction.Category>
                    <dxr:RibbonDefaultPageCategory Name="defaultPageCategory" />
                </dxr:AddRibbonPageCategoryAction.Category>
            </dxr:AddRibbonPageCategoryAction>

            <dxr:AddRibbonPageAction CategoryName="defaultPageCategory">
                <dxr:AddRibbonPageAction.Page>
                    <dxr:RibbonPage Name="defaultPage" Caption="{dxp:PrintingStringId StringId=RibbonPageCaption}" />
                </dxr:AddRibbonPageAction.Page>
            </dxr:AddRibbonPageAction>

            <dxr:AddRibbonPageGroupAction PageName="defaultPage">
                <dxr:AddRibbonPageGroupAction.Group>
                    <dxr:RibbonPageGroup Name="fileGroup" Caption="{dxp:PrintingStringId StringId=RibbonPageGroup_File}">
                        <dxb:BarButtonItemLink BarItemName="open" />
                        <dxb:BarButtonItemLink BarItemName="save" />
                    </dxr:RibbonPageGroup>
                </dxr:AddRibbonPageGroupAction.Group>
            </dxr:AddRibbonPageGroupAction>

            <dxr:AddRibbonPageGroupAction PageName="defaultPage">
                <dxr:AddRibbonPageGroupAction.Group>
                    <dxr:RibbonPageGroup Name="printGroup" Caption="{dxp:PrintingStringId StringId=RibbonPageGroup_Print}">
                        <dxb:BarButtonItemLink BarItemName="print" />
                        <dxb:BarButtonItemLink BarItemName="printDirect" />
                        <dxb:BarButtonItemLink BarItemName="pageSetup" />
                        <dxb:BarButtonItemLink BarItemName="scaling" />
                    </dxr:RibbonPageGroup>
                </dxr:AddRibbonPageGroupAction.Group>
            </dxr:AddRibbonPageGroupAction>

            <dxr:AddRibbonPageGroupAction PageName="defaultPage">
                <dxr:AddRibbonPageGroupAction.Group>
                    <dxr:RibbonPageGroup Name="navigationGroup" Caption="{dxp:PrintingStringId StringId=RibbonPageGroup_Navigation}">
                        <dxb:BarButtonItemLink BarItemName="firstPage" />
                        <dxb:BarButtonItemLink BarItemName="previousPage" />
                        <dxb:BarButtonItemLink BarItemName="nextPage" />
                        <dxb:BarButtonItemLink BarItemName="lastPage" />
                    </dxr:RibbonPageGroup>
                </dxr:AddRibbonPageGroupAction.Group>
            </dxr:AddRibbonPageGroupAction>

            <dxr:AddRibbonPageGroupAction PageName="defaultPage">
                <dxr:AddRibbonPageGroupAction.Group>
                    <dxr:RibbonPageGroup Name="zoomGroup" Caption="{dxp:PrintingStringId StringId=RibbonPageGroup_Zoom}">
                        <dxb:BarButtonItemLink BarItemName="zoomOut" />
                        <dxb:BarSubItemLink BarItemName="zoomMode" />
                        <dxb:BarButtonItemLink BarItemName="zoomIn" />
                    </dxr:RibbonPageGroup>
                </dxr:AddRibbonPageGroupAction.Group>
            </dxr:AddRibbonPageGroupAction>

            <dxr:AddRibbonPageGroupAction PageName="defaultPage">
                <dxr:AddRibbonPageGroupAction.Group>
                    <dxr:RibbonPageGroup Name="exportGroup" Caption="{dxp:PrintingStringId StringId=RibbonPageGroup_Export}">
                        <dxb:BarSplitButtonItemLink BarItemName="export" />
                        <dxb:BarSplitButtonItemLink BarItemName="email" />
                    </dxr:RibbonPageGroup>
                </dxr:AddRibbonPageGroupAction.Group>
            </dxr:AddRibbonPageGroupAction>

            <dxr:AddRibbonPageGroupAction PageName="defaultPage">
                <dxr:AddRibbonPageGroupAction.Group>
                    <dxr:RibbonPageGroup Name="documentGroup" Caption="{dxp:PrintingStringId StringId=RibbonPageGroup_Document}">
                        <dxb:BarCheckItemLink BarItemName="showParameters" />
                        <dxb:BarCheckItemLink BarItemName="showMap" />
                        <dxb:BarCheckItemLink BarItemName="showSearch" />
                        <dxb:BarButtonItemLink BarItemName="watermark" />
                    </dxr:RibbonPageGroup>
                </dxr:AddRibbonPageGroupAction.Group>
            </dxr:AddRibbonPageGroupAction>
        </dxr:RibbonActionContainer>
    </DataTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\DocumentPreviewRibbonController.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\ScrollablePageView.xaml-->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\ScrollablePageView.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\RibbonDocumentPreview.xaml-->
    <ControlTemplate x:Key="ribbonDocumentPreviewTemplate">
        <dxb:BarManager x:Name="barManager">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>
                <dxpn:PreviewSurface Grid.RowSpan="2" />

                <dxr:RibbonControl x:Name="ribbonControl" RibbonHeaderVisibility="Collapsed">
                    <dxr:RibbonControl.Controllers>
                        <dxp:DocumentPreviewRibbonController />
                    </dxr:RibbonControl.Controllers>
                </dxr:RibbonControl>
                <dxp:DocumentViewer x:Name="DocumentViewer" Grid.Row="1" Model="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}" />
                <dxr:RibbonStatusBarControl Name="previewStatusBar" Grid.Row="2" IsSizeGripVisible="False">
                    <dxr:RibbonStatusBarControl.LeftItemLinks>
                        <dxb:BarEditItemLink dxpn:GoToPageEditBehavior.Apply="True" BarItemName="pageNumber" />
                        <dxb:BarEditItemLink BarItemName="progress" />
                        <dxb:BarEditItemLink BarItemName="progressMarquee" />
                        <dxb:BarButtonItemLink BarItemName="stop" />
                    </dxr:RibbonStatusBarControl.LeftItemLinks>
                    <dxr:RibbonStatusBarControl.RightItemLinks>
                        <dxb:BarStaticItemLink BarItemName="zoomFactor" />
                    </dxr:RibbonStatusBarControl.RightItemLinks>
                </dxr:RibbonStatusBarControl>
            </Grid>
        </dxb:BarManager>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\RibbonDocumentPreview.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\PdfSecurityOptionsControl.xaml-->


    <ControlTemplate x:Key="passwordSecurityOptionsTemplate">
        <StackPanel Margin="12">
            <GroupBox Margin="0,0,0,12">
                <GroupBox.Header>
                    <ContentControl IsEnabled="{Binding ElementName=requireOpenPassword, Path=IsEnabled}">
                        <TextBlock Text="{dxp:PrintingStringId StringId=PdfPasswordSecurityOptions_OpenPasswordHeader}" />
                    </ContentControl>
                </GroupBox.Header>
                <StackPanel>
                    <dxe:CheckEdit
                        Name="requireOpenPassword"
                        Content="{dxp:PrintingStringId StringId=PdfPasswordSecurityOptions_RequireOpenPassword}"
                        IsChecked="{Binding Path=RequireOpenPassword}"
                        Margin="0,0,0,12" />
                    <ContentControl IsEnabled="{Binding Path=RequireOpenPassword}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Name="openPasswordLabel" Grid.Column="0" Text="{dxp:PrintingStringId StringId=PdfPasswordSecurityOptions_OpenPassword}" />
                            <dxe:PasswordBoxEdit Name="openPassword" Grid.Column="1" EditValue="{Binding Path=OpenPassword}">
                                <dxe:PasswordBoxEdit.Style>
                                    <Style TargetType="dxe:PasswordBoxEdit">
                                        <Setter Property="Width" Value="190" />
                                    </Style>
                                </dxe:PasswordBoxEdit.Style>
                            </dxe:PasswordBoxEdit>
                        </Grid>
                    </ContentControl>
                </StackPanel>
            </GroupBox>
            <GroupBox>
                <GroupBox.Header>
                    <ContentControl IsEnabled="{Binding ElementName=restrictPermissions, Path=IsEnabled}">
                        <TextBlock Text="{dxp:PrintingStringId StringId=PdfPasswordSecurityOptions_Permissions}" />
                    </ContentControl>
                </GroupBox.Header>
                <StackPanel>
                    <dxe:CheckEdit
                        Name="restrictPermissions"
                        Content="{dxp:PrintingStringId StringId=PdfPasswordSecurityOptions_RestrictPermissions}"
                        IsChecked="{Binding Path=RestrictPermissions}"
                        Margin="0,0,0,12" />
                    <StackPanel IsEnabled="{Binding Path=RestrictPermissions}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock
                                Name="permissionsPasswordLabel"
                                Grid.Row="0"
                                Grid.Column="0"
                                Margin="0,0,0,5"
                                Text="{dxp:PrintingStringId StringId=PdfPasswordSecurityOptions_PermissionsPassword}" />
                            <dxe:PasswordBoxEdit
                                Name="permissionsPassword"
                                Grid.Row="0"
                                Grid.Column="1"
                                Margin="0,0,0,5"
                                Password="{Binding Path=PermissionsPassword, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                <dxe:PasswordBoxEdit.Style>
                                    <Style TargetType="dxe:PasswordBoxEdit">
                                        <Setter Property="Width" Value="190" />
                                    </Style>
                                </dxe:PasswordBoxEdit.Style>
                            </dxe:PasswordBoxEdit>
                        </Grid>
                        <Grid>
                            <Grid.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding PermissionsPassword}" Value="">
                                            <Setter Property="Grid.IsEnabled" Value="False" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <Grid.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Margin" Value="0,0,0,5" />
                                </Style>
                            </Grid.Resources>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock
                                Name="printingPermissionsLabel"
                                Grid.Row="0"
                                Grid.Column="0"
                                Text="{dxp:PrintingStringId StringId=PdfPasswordSecurityOptions_PrintingPermissions}" />
                            <dxe:ComboBoxEdit
                                Name="printingPermissions"
                                Grid.Row="0"
                                Grid.Column="1"
                                Margin="0,0,0,5"
                                DisplayMember="Value"
                                EditValue="{Binding Path=PrintingPermissions, Mode=TwoWay}"
                                IsTextEditable="False"
                                ItemsSource="{Binding Path=PrintingPermissionsValues}"
                                ValueMember="Key">
                                <dxe:ComboBoxEdit.Style>
                                    <Style TargetType="dxe:ComboBoxEdit">
                                        <Setter Property="Width" Value="190" />
                                    </Style>
                                </dxe:ComboBoxEdit.Style>
                            </dxe:ComboBoxEdit>
                            <TextBlock
                                Name="changingPermissionsLabel"
                                Grid.Row="1"
                                Grid.Column="0"
                                Text="{dxp:PrintingStringId StringId=PdfPasswordSecurityOptions_ChangingPermissions}" />

                            <dxe:ComboBoxEdit
                                Name="changingPermissions"
                                Grid.Row="1"
                                Grid.Column="1"
                                Margin="0,0,0,5"
                                DisplayMember="Value"
                                EditValue="{Binding Path=ChangingPermissions, Mode=TwoWay}"
                                IsTextEditable="False"
                                ItemsSource="{Binding Path=ChangingPermissionsValues}"
                                ValueMember="Key">
                                <dxe:ComboBoxEdit.Style>
                                    <Style TargetType="dxe:ComboBoxEdit">
                                        <Setter Property="Width" Value="190" />
                                    </Style>
                                </dxe:ComboBoxEdit.Style>
                            </dxe:ComboBoxEdit>
                            <dxe:CheckEdit
                                Name="enableCopying"
                                Grid.Row="2"
                                Grid.ColumnSpan="2"
                                Content="{dxp:PrintingStringId StringId=PdfPasswordSecurityOptions_EnableCopying}"
                                Margin="0,0,0,4"
                                IsChecked="{Binding Path=EnableCopying}" />
                            <dxe:CheckEdit
                                Name="enableScreenReaders"
                                Grid.Row="3"
                                Grid.ColumnSpan="2"
                                Content="{dxp:PrintingStringId StringId=PdfPasswordSecurityOptions_EnableScreenReaders}"
                                IsChecked="{Binding Path=EnableScreenReaders}" />

                        </Grid>
                    </StackPanel>
                </StackPanel>
            </GroupBox>
            <Grid Margin="0,8,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>
                <TextBlock Margin="12,0,0,0" Text="{dxp:PrintingStringId StringId=PdfPasswordSecurityEncryptionLevel}" />
                <dxe:ComboBoxEdit
                    Grid.Column="1"
                    Margin="0,0,12,5"
                    DisplayMember="Value"
                    EditValue="{Binding Path=EncryptionLevel, Mode=TwoWay}"
                    IsTextEditable="False"
                    ItemsSource="{Binding Path=PdfEncryptionLevelValues}"
                    ValueMember="Key">
                    <dxe:ComboBoxEdit.Style>
                        <Style TargetType="dxe:ComboBoxEdit">
                            <Setter Property="Width" Value="190" />
                        </Style>
                    </dxe:ComboBoxEdit.Style>
                </dxe:ComboBoxEdit>
            </Grid>
        </StackPanel>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\PdfSecurityOptionsControl.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\WatermarkControl.xaml-->
    <ControlTemplate x:Key="watermarkControlTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <dx:BackgroundPanel
                x:Name="PART_PreviewImage"
                Grid.Column="0"
                Width="245"
                Margin="0,0,0,10">
                <dxmvvm:Interaction.Behaviors>
                    <dxpn:WatermarkPreviewAreaProvider />
                    <dxmvvm:EventToCommand Command="{Binding UpdatePreviewCommand}" Event="Loaded" />
                </dxmvvm:Interaction.Behaviors>

                <Grid HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="True">
                    <Image IsHitTestVisible="False" Source="{Binding PreviewImage, UpdateSourceTrigger=PropertyChanged}" Stretch="None" />
                    <dx:DXBorder Background="Transparent" BorderBrush="#FFC3C3C3" BorderThickness="1" />
                </Grid>
            </dx:BackgroundPanel>

            <StackPanel Name="mainPanel" Grid.Column="1" Margin="12,0,0,0">
                <dx:DXTabControl
                    Name="watermarkTabControl"
                    HorizontalAlignment="Stretch"
                    HorizontalContentAlignment="Stretch"
                    TabContentCacheMode="CacheAllTabs">
                    <dx:DXTabItem x:Name="textTabItem" Header="{dxp:PrintingStringId StringId=TextWatermarkTitle}">
                        <Grid x:Name="textGrid">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock VerticalAlignment="Center" Text="{dxp:PrintingStringId StringId=WatermarkText}" Margin="0,0,12,12" />
                            <dxe:ComboBoxEdit
                                Name="textEditor"
                                Grid.Column="1"
                                Grid.ColumnSpan="2"
                                Width="349"
                                AcceptsReturn="False"
                                EditValue="{Binding Mode=TwoWay, Path=Text, UpdateSourceTrigger=PropertyChanged}"
                                ItemsSource="{Binding TextStandardValues}"
                                Margin="0,0,0,12"
                                TextWrapping="NoWrap" />
                            <TextBlock
                                Grid.Row="1"
                                VerticalAlignment="Center"
                                Text="{dxp:PrintingStringId StringId=WatermarkTextDirection}"
                                Margin="0,0,12,12" />
                            <dxe:ComboBoxEdit
                                Grid.Row="1"
                                Grid.Column="1"
                                DisplayMember="Text"
                                EditValue="{Binding Mode=TwoWay, Path=TextDirectionMode, UpdateSourceTrigger=PropertyChanged}"
                                IsEnabled="{Binding TextIsNotEmpty}"
                                IsTextEditable="False"
                                Margin="0,0,0,12"
                                ItemsSource="{Binding TextDirectionModeStandardValues}" />
                            <TextBlock
                                Grid.Row="2"
                                VerticalAlignment="Center"
                                Text="{dxp:PrintingStringId StringId=WatermarkFontName}"
                                Margin="0,0,12,12" />
                            <dxe:ComboBoxEdit
                                Grid.Row="2"
                                Grid.Column="1"
                                EditValue="{Binding Mode=TwoWay, Path=FontName, UpdateSourceTrigger=PropertyChanged}"
                                IsEnabled="{Binding TextIsNotEmpty}"
                                IsTextEditable="False"
                                Margin="0,0,0,12"
                                ItemsSource="{Binding FontNameStandardValues}" />
                            <dxe:CheckEdit
                                Grid.Row="2"
                                Grid.Column="3"
                                Content="{dxp:PrintingStringId StringId=WatermarkFontBold}"
                                EditValue="{Binding IsTextBold, Mode=TwoWay}"
                                Margin="12,0,0,12"
                                IsEnabled="{Binding TextIsNotEmpty}" />
                            <TextBlock
                                Grid.Row="3"
                                VerticalAlignment="Center"
                                Text="{dxp:PrintingStringId StringId=WatermarkFontSize}"
                                Margin="0,0,12,12" />
                            <Grid Grid.Row="3" Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="90" />
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <dxe:ComboBoxEdit
                                    EditValue="{Binding Mode=TwoWay, Path=FontSize, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"
                                    IsEnabled="{Binding TextIsNotEmpty}"
                                    IsTextEditable="True"
                                    ItemsSource="{Binding FontSizeStandardValues}"
                                    Margin="0,0,0,12"
                                    Mask="Numeric" />
                                <TextBlock
                                    Grid.Column="1"
                                    Padding="18,0,0,0"
                                    VerticalAlignment="Center"
                                    Margin="0,0,12,12"
                                    Text="{dxp:PrintingStringId StringId=WatermarkTextColor}" />
                                <dxe:PopupColorEdit
                                    Grid.Column="2"
                                    EditValue="{Binding Mode=TwoWay, Path=TextColor, UpdateSourceTrigger=PropertyChanged}"
                                    IsEnabled="{Binding TextIsNotEmpty}"
                                    Margin="0,0,0,12" />

                            </Grid>
                            <dxe:CheckEdit
                                Grid.Row="3"
                                Grid.Column="2"
                                VerticalAlignment="Center"
                                Content="{dxp:PrintingStringId StringId=WatermarkFontItalic}"
                                EditValue="{Binding IsTextItalic, Mode=TwoWay}"
                                IsEnabled="{Binding TextIsNotEmpty}"
                                Margin="12,0,0,12" />
                            <TextBlock
                                Grid.Row="4"
                                VerticalAlignment="Center"
                                Text="{dxp:PrintingStringId StringId=WatermarkTransparency}"
                                Margin="0,0,12,12" />
                            <dxe:TrackBarEdit
                                Grid.Row="4"
                                Grid.Column="1"
                                Grid.ColumnSpan="2"
                                EditValue="{Binding Path=TextTransparency, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                IsEnabled="{Binding TextIsNotEmpty}"
                                LargeStep="{Binding TextTransparencyLargeStep}"
                                Maximum="{Binding MaxTextTransparency}"
                                Minimum="{Binding MinTextTransparency}"
                                SmallStep="{Binding TextTransparencyStep}" />
                        </Grid>
                    </dx:DXTabItem>
                    <dx:DXTabItem x:Name="pictureTabItem" Header="{dxp:PrintingStringId StringId=PictureWatermarkTitle}">
                        <Grid Name="pictureGrid" Width="{Binding ElementName=textGrid, Path=ActualWidth}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock VerticalAlignment="Center" Text="{dxp:PrintingStringId StringId=WatermarkLoadImage}" Margin="0,0,12,12" />
                            <dxe:ButtonEdit
                                Grid.Column="1"
                                Grid.ColumnSpan="2"
                                VerticalAlignment="Center"
                                AllowDefaultButton="False"
                                EditValue="{Binding PictureFileName}"
                                FontStyle="Italic"
                                Foreground="LightGray"
                                Margin="0,0,0,12"
                                IsTextEditable="False">
                                <dxe:ButtonInfo x:Name="regular" Command="{Binding LoadImageCommand}" GlyphKind="Regular" />
                            </dxe:ButtonEdit>
                            <TextBlock
                                Grid.Row="1"
                                VerticalAlignment="Center"
                                Text="{dxp:PrintingStringId StringId=WatermarkImageSizeMode}"
                                Margin="0,0,12,12" />
                            <dxe:ComboBoxEdit
                                Grid.Row="1"
                                Grid.Column="1"
                                DisplayMember="Text"
                                EditValue="{Binding Mode=TwoWay, Path=PictureViewMode, UpdateSourceTrigger=PropertyChanged}"
                                IsEnabled="{Binding IsPictureLoaded}"
                                IsTextEditable="False"
                                Margin="0,0,0,12"
                                ItemsSource="{Binding PictureViewModeStandardValues}" />
                            <dxe:CheckEdit
                                Grid.Row="1"
                                Grid.Column="2"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Content="{dxp:PrintingStringId StringId=WatermarkImageTiling}"
                                EditValue="{Binding IsPictureTiled, Mode=TwoWay}"
                                Margin="12,0,0,12"
                                IsEnabled="{Binding IsPictureLoaded}" />
                            <TextBlock Grid.Row="2" Text="{dxp:PrintingStringId StringId=WatermarkImageHorizontalAlignment}" Margin="0,0,12,12" />
                            <dxe:ComboBoxEdit
                                Grid.Row="2"
                                Grid.Column="1"
                                DisplayMember="Text"
                                EditValue="{Binding Mode=TwoWay, Path=PictureHorizontalAlignment, UpdateSourceTrigger=PropertyChanged}"
                                IsEnabled="{Binding IsPictureLoaded}"
                                IsTextEditable="False"
                                Margin="0,0,0,12"
                                ItemsSource="{Binding PictureHorizontalAlignmentStandardValues}" />
                            <TextBlock Grid.Row="3" Text="{dxp:PrintingStringId StringId=WatermarkImageVerticalAlignment}" Margin="0,0,12,12" />
                            <dxe:ComboBoxEdit
                                Grid.Row="3"
                                Grid.Column="1"
                                DisplayMember="Text"
                                EditValue="{Binding Mode=TwoWay, Path=PictureVerticalAlignment, UpdateSourceTrigger=PropertyChanged}"
                                IsEnabled="{Binding IsPictureLoaded}"
                                IsTextEditable="False"
                                Margin="0,0,0,12"
                                ItemsSource="{Binding PictureVerticalAlignmentStandardValues}" />
                            <TextBlock
                                Grid.Row="4"
                                VerticalAlignment="Center"
                                Text="{dxp:PrintingStringId StringId=WatermarkTransparency}"
                                Margin="0,0,12,12" />
                            <dxe:TrackBarEdit
                                Grid.Row="4"
                                Grid.Column="1"
                                Grid.ColumnSpan="2"
                                EditValue="{Binding Path=PictureTransparency, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                IsEnabled="{Binding IsPictureLoaded}"
                                LargeStep="{Binding PictureTransparencyLargeStep}"
                                Maximum="{Binding MaxPictureTransparency}"
                                Minimum="{Binding MinPictureTransparency}"
                                SmallStep="{Binding PictureTransparencyStep}" />
                        </Grid>
                    </dx:DXTabItem>
                </dx:DXTabControl>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.Resources>
                        <dx:BoolInverseConverter x:Key="boolInverseConverter" />
                    </Grid.Resources>
                    <GroupBox
                        Margin="0,12,0,0"
                        Padding="14,12"
                        dx:DXDockPanel.Dock="Left"
                        Header="{dxp:PrintingStringId StringId=WatermarkPosition}">
                        <StackPanel>
                            <RadioButton
                                VerticalAlignment="Center"
                                Content="{dxp:PrintingStringId StringId=WatermarkPositionInFront}"
                                IsChecked="{Binding ShowBehind, Converter={StaticResource boolInverseConverter}, Mode=TwoWay}"
                                Margin="0,0,12,12" />
                            <RadioButton
                                VerticalAlignment="Center"
                                Content="{dxp:PrintingStringId StringId=WatermarkPositionBehind}"
                                IsChecked="{Binding ShowBehind, Mode=TwoWay}"
                                Margin="0,0,0,12" />
                        </StackPanel>
                    </GroupBox>
                    <GroupBox
                        Grid.Column="1"
                        Margin="12,12,0,0"
                        Padding="14,12"
                        Header="{dxp:PrintingStringId StringId=WatermarkPageRange}">
                        <StackPanel>
                            <RadioButton
                                VerticalAlignment="Center"
                                dx:DXDockPanel.Dock="Left"
                                Margin="0,0,12,12"
                                Content="{dxp:PrintingStringId StringId=WatermarkPageRangeAllPages}"
                                IsChecked="{Binding IsPageRange, Converter={StaticResource boolInverseConverter}, Mode=TwoWay}" />
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition Width="130" />
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>
                                <RadioButton
                                    VerticalAlignment="Center"
                                    dx:DXDockPanel.Dock="Left"
                                    Content="{dxp:PrintingStringId StringId=WatermarkPageRangePages}"
                                    Margin="0,0,12,12"
                                    IsChecked="{Binding IsPageRange, Mode=TwoWay}" />
                                <dxe:TextEdit
                                    Grid.Column="1"
                                    VerticalAlignment="Center"
                                    EditValue="{Binding Mode=TwoWay, Path=PageRange, UpdateSourceTrigger=PropertyChanged}"
                                    Mask="(\d+(-\d+)?)(,(\d+(-\d+)?))*"
                                    MaskShowPlaceHolders="False"
                                    MaskType="RegEx"
                                    ValidateOnEnterKeyPressed="True"
                                    ValidateOnTextInput="False" />
                                <TextBlock
                                    Grid.Column="2"
                                    Padding="18,0,0,0"
                                    VerticalAlignment="Center"
                                    Text="{dxp:PrintingStringId StringId=WatermarkPageRangeHint}" />
                            </Grid>
                        </StackPanel>
                    </GroupBox>
                </Grid>
            </StackPanel>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dx:ThemeManager.IsTouchlineTheme), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="textEditor" Property="Width" Value="500" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dx:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="textEditor" Property="Width" Value="500" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\WatermarkControl.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\EditingFieldDefaultTemplates.xaml-->
    <DataTemplate x:Key="{dxpt:LWKey EditingField.Integer}">
        <dxe:SpinEdit
            Name="PART_Editor"
            EditValue="{Binding Value, UpdateSourceTrigger=PropertyChanged}"
            EditValueType="{x:Type sys:Int32}"
            IsFloatValue="False"
            Mask="d"
            MaskType="Numeric"
            MaskUseAsDisplayFormat="True"
            ShowBorder="False" />
    </DataTemplate>
    <DataTemplate x:Key="{dxpt:LWKey EditingField.IntegerPositive}">
        <dxe:SpinEdit
            Name="PART_Editor"
            EditValue="{Binding Value, UpdateSourceTrigger=PropertyChanged}"
            EditValueType="{x:Type sys:Int32}"
            IsFloatValue="False"
            Mask="d"
            MaskType="Numeric"
            MaskUseAsDisplayFormat="True"
            MinValue="0"
            ShowBorder="False"
            Style="{Binding EditorStyle, FallbackValue={x:Null}}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxpt:LWKey EditingField.FixedPoint}">
        <dxe:SpinEdit
            Name="PART_Editor"
            EditValue="{Binding Value, UpdateSourceTrigger=PropertyChanged}"
            EditValueType="{x:Type sys:Double}"
            IsFloatValue="true"
            Mask="f"
            MaskType="Numeric"
            MaskUseAsDisplayFormat="True"
            ShowBorder="False"
            Style="{Binding EditorStyle, FallbackValue={x:Null}}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxpt:LWKey EditingField.FixedPointPositive}">
        <dxe:SpinEdit
            Name="PART_Editor"
            EditValue="{Binding Value, UpdateSourceTrigger=PropertyChanged}"
            EditValueType="{x:Type sys:Double}"
            IsFloatValue="True"
            Mask="f"
            MaskType="Numeric"
            MaskUseAsDisplayFormat="True"
            MinValue="0"
            ShowBorder="False"
            Style="{Binding EditorStyle, FallbackValue={x:Null}}" />
    </DataTemplate>

    <DataTemplate x:Key="{dxpt:LWKey EditingField.Date}">
        <dxe:DateEdit
            Name="PART_Editor"
            EditValue="{Binding Value, UpdateSourceTrigger=PropertyChanged}"
            Mask="d"
            MaskType="DateTimeAdvancingCaret"
            MaskUseAsDisplayFormat="True"
            ShowBorder="False"
            Style="{Binding EditorStyle, FallbackValue={x:Null}}" />
    </DataTemplate>

    <DataTemplate x:Key="{dxpt:LWKey EditingField.DevExpress_Xpf_Printing_PredefinedCharacterCombResourceKey}">
        <pcne:CharacterCombEdit x:Name="PART_Editor" EditValue="{Binding Value, UpdateSourceTrigger=PropertyChanged}" ShowBorder="False" />
    </DataTemplate>

    <DataTemplate x:Key="{dxpt:LWKey EditingField.OnlyLetters}">
        <dxe:TextEdit
            Name="PART_Editor"
            EditValue="{Binding Value, UpdateSourceTrigger=PropertyChanged}"
            Mask="\p{L}+"
            MaskType="RegEx"
            ShowBorder="False"
            Style="{Binding EditorStyle, FallbackValue={x:Null}}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxpt:LWKey EditingField.OnlyUppercaseLetters}">
        <dxe:TextEdit
            Name="PART_Editor"
            EditValue="{Binding Value, UpdateSourceTrigger=PropertyChanged}"
            Mask="\p{Lu}+"
            MaskType="RegEx"
            ShowBorder="False"
            Style="{Binding EditorStyle, FallbackValue={x:Null}}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxpt:LWKey EditingField.OnlyLowercaseLetters}">
        <dxe:TextEdit
            Name="PART_Editor"
            EditValue="{Binding Value, UpdateSourceTrigger=PropertyChanged}"
            Mask="\p{Ll}+"
            MaskType="RegEx"
            ShowBorder="False"
            Style="{Binding EditorStyle, FallbackValue={x:Null}}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxpt:LWKey EditingField.OnlyLatinLetters}">
        <dxe:TextEdit
            Name="PART_Editor"
            EditValue="{Binding Value, UpdateSourceTrigger=PropertyChanged}"
            Mask="[a-zA-Z]+"
            MaskType="RegEx"
            ShowBorder="False"
            Style="{Binding EditorStyle, FallbackValue={x:Null}}" />
    </DataTemplate>

    <DataTemplate x:Key="{dxpt:LWKey EditingField.BrickImageEdit}">
        <pcne:BrickImageEdit x:Name="PART_Editor" Source="{Binding Value, Mode=OneWay}" />
    </DataTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\EditingFieldDefaultTemplates.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\PopupWinImageEdit.xaml-->
    <ControlTemplate x:Key="popupContentTemplate" TargetType="{x:Type ContentControl}">
        <Grid SnapsToDevicePixels="True">
            <dxpn:WinImageEdit
                x:Name="PART_PopupContent"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                ImageSizeMode="{x:Static xpd:ImageSizeMode.Squeeze}"
                ShowBorder="False" />
        </Grid>
    </ControlTemplate>


    <ControlTemplate x:Key="popupDisplayTemplate">
        <Grid
            x:Name="PART_Editor"
            Margin="3"
            dx:FocusHelper2.Focusable="True"
            Background="Transparent">
            <dx:DXImage
                x:Name="PART_Icon"
                Width="16"
                Height="16"
                dx:FocusHelper2.Focusable="False"
                RenderOptions.BitmapScalingMode="NearestNeighbor"
                Source="/DevExpress.Xpf.Core.v24.1;component/Editors/Images/ImageEdit/DefaultIcon.svg"
                Stretch="Fill" />
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxe:BaseEdit.OwnerEdit).HasImage, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter TargetName="PART_Icon" Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxt:LWKey Brushes.GrayScaleSvgPalette}}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\PopupWinImageEdit.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic.xaml-->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\EditorTemplates.xaml-->
    <Style x:Key="AllowNullStyle" TargetType="{x:Type dxe:BaseEdit}">
        <Setter Property="AllowNullInput" Value="{Binding AllowNull}" />
        <Setter Property="ShowNullTextForEmptyValue" Value="{Binding AllowNull}" />
        <Setter Property="NullText" Value="{Binding AllowNull, Converter={dxpn:AllowNullToNullTextConverter}}" />
        <Setter Property="EditValue" Value="{Binding Value, ValidatesOnDataErrors=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
    </Style>
    <DataTemplate x:Key="multiValueTemplate">
        <dxpp:ParameterLineLayout>
            <dxe:ComboBoxEdit
                Name="combobox"
                Grid.Column="1"
                MinWidth="40"
                MaxHeight="100"
                EditValue="{Binding Value, Mode=TwoWay, ValidatesOnDataErrors=True}">
                <dxe:ComboBoxEdit.StyleSettings>
                    <dxe:TokenComboBoxStyleSettings Name="tokenSettings" EnableTokenWrapping="True" NewTokenPosition="Far" />
                </dxe:ComboBoxEdit.StyleSettings>
            </dxe:ComboBoxEdit>
        </dxpp:ParameterLineLayout>
    </DataTemplate>
    <DataTemplate x:Key="multiValueLookUpTemplate">
        <dxpp:ParameterLineLayout>
            <dxe:ComboBoxEdit
                Grid.Column="1"
                MinWidth="40"
                MaxHeight="100"
                AutoComplete="true"
                DisplayMember="RealDescription"
                EditValue="{Binding Value, Mode=TwoWay, ValidatesOnDataErrors=True}"
                FocusPopupOnOpen="False"
                ImmediatePopup="True"
                IncrementalFiltering="False"
                IncrementalSearch="True"
                ItemsSource="{Binding LookUpValues}"
                ShowCustomItems="True"
                ValidateOnEnterKeyPressed="True"
                ValidateOnTextInput="True"
                ValueMember="Value">
                <dxmvvm:Interaction.Behaviors>
                    <dxpp:ShowPopupBehavior />
                </dxmvvm:Interaction.Behaviors>
                <dxe:ComboBoxEdit.StyleSettings>
                    <dxe:CheckedTokenComboBoxStyleSettings
                        AllowEditTokens="False"
                        EnableTokenWrapping="True"
                        NewTokenPosition="Far"
                        ShowTokenButtons="True" />
                </dxe:ComboBoxEdit.StyleSettings>
            </dxe:ComboBoxEdit>
        </dxpp:ParameterLineLayout>
    </DataTemplate>
    <DataTemplate x:Key="dateRangeTemplate">
        <dxpp:ParameterLineLayout>
            <dxpn:DateRangeEdit EditValue="{Binding Value, UpdateSourceTrigger=PropertyChanged}" />
        </dxpp:ParameterLineLayout>
    </DataTemplate>



    <DataTemplate x:Key="stringEditorTemplate">
        <dxpp:ParameterLineLayout>
            <dxe:TextEdit
                Grid.Column="1"
                MinWidth="40"
                EditValuePostDelay="500"
                EditValuePostMode="Delayed"
                InvalidValueBehavior="AllowLeaveEditor"
                Style="{StaticResource AllowNullStyle}" />
        </dxpp:ParameterLineLayout>
    </DataTemplate>

    <DataTemplate x:Key="numericEditorTemplate">
        <dxpp:ParameterLineLayout>
            <dxpn:SpinEditEx
                Grid.Column="1"
                MinWidth="40"
                EditValuePostDelay="500"
                EditValuePostMode="Delayed"
                EditValueType="{Binding Type}"
                InvalidValueBehavior="AllowLeaveEditor"
                Style="{StaticResource AllowNullStyle}" />
        </dxpp:ParameterLineLayout>
    </DataTemplate>

    <DataTemplate x:Key="numericFloatEditorTemplate">
        <dxpp:ParameterLineLayout>
            <dxpn:SpinEditEx
                Grid.Column="1"
                MinWidth="40"
                EditValuePostDelay="500"
                EditValuePostMode="Delayed"
                EditValueType="{Binding Type}"
                InvalidValueBehavior="AllowLeaveEditor"
                IsFloatValue="True"
                Style="{StaticResource AllowNullStyle}" />
        </dxpp:ParameterLineLayout>
    </DataTemplate>

    <DataTemplate x:Key="booleanEditorTemplate">
        <dxpp:ParameterLineLayout>
            <dxe:ComboBoxEdit
                Grid.Column="1"
                MinWidth="40"
                DisplayMember="Key"
                EditValuePostDelay="500"
                EditValuePostMode="Delayed"
                InvalidValueBehavior="AllowLeaveEditor"
                IsTextEditable="False"
                ItemsSource="{x:Static dxpp:BooleanValuesHelper.BooleanValues}"
                ShowCustomItems="{Binding AllowNull}"
                Style="{StaticResource AllowNullStyle}"
                ValueMember="Value" />
        </dxpp:ParameterLineLayout>
    </DataTemplate>

    <DataTemplate x:Key="dateTimeEditorTemplate">
        <dxpp:ParameterLineLayout>
            <dxe:DateEdit
                Grid.Column="1"
                MinWidth="40"
                EditValuePostDelay="500"
                EditValuePostMode="Delayed"
                InvalidValueBehavior="AllowLeaveEditor"
                Style="{StaticResource AllowNullStyle}" />
        </dxpp:ParameterLineLayout>
    </DataTemplate>

    <DataTemplate x:Key="lookUpEditTemplate">
        <dxpp:ParameterLineLayout>
            <dxe:ComboBoxEdit
                Grid.Column="1"
                MinWidth="40"
                AllowUpdateTwoWayBoundPropertiesOnSynchronization="False"
                DisplayMember="RealDescription"
                IsTextEditable="False"
                ItemsSource="{Binding LookUpValues}"
                ShowCustomItems="{Binding AllowNull}"
                Style="{StaticResource AllowNullStyle}"
                ValueMember="Value" />
        </dxpp:ParameterLineLayout>
    </DataTemplate>

    <DataTemplate x:Key="guidTemplate">
        <dxpp:ParameterLineLayout>
            <dxpn:GuidTextEditor
                Grid.Column="1"
                MinWidth="40"
                EditValue="{Binding Value, Converter={dxpp:StringToGuidConverter}, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                EditValuePostDelay="500"
                EditValuePostMode="Delayed"
                Style="{StaticResource AllowNullStyle}" />
        </dxpp:ParameterLineLayout>
    </DataTemplate>
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\EditorTemplates.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\OverlayWindow.xaml-->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\OverlayWindow.xaml-->

    <!--#region C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\PreviewSurface.xaml-->
    <!--#endregion C:\work\2023.1\XPF\DevExpress.Xpf.Printing\DevExpress.Xpf.Printing\Themes\Generic\PreviewSurface.xaml-->


    <!--#region DEFAULT STYLES-->

    <Style x:Key="DocumentPreviewBarCheckItem.DefaultStyleBase" TargetType="{x:Type pcb:DocumentPreviewBarCheckItem}" BasedOn="{StaticResource previewBarItemStyle}">
        <Setter Property="Content" Value="{Binding Path=Caption}" />
        <Setter Property="Hint" Value="{Binding Path=Hint}" />
        <Setter Property="IsChecked" Value="{Binding Path=IsChecked, Mode=OneWay}" />
    </Style>
    <Style x:Key="BackstagePrintPreview.DefaultStyleBase" TargetType="{x:Type dxp:BackstagePrintPreview}">
        <Setter Property="dx:ScrollBarExtensions.ScrollBarMode" Value="TouchOverlap" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Template" Value="{DynamicResource {dxpt:LWKey BackstagePrintPreview.Template}}" />
        <Setter Property="PrintOptionsTemplate" Value="{DynamicResource {dxpt:LWKey BackstagePrintPreview.PrintOptionsTemplate}}" />
        <Setter Property="StatusBarTemplate" Value="{DynamicResource {dxpt:LWKey BackstagePrintPreview.StatusBarTemplate}}" />
    </Style>
    <Style x:Key="CharacterCombEdit.DefaultStyleBase" BasedOn="{dx:TargetStaticResource TextEdit.DefaultStyleBase, TargetDictionary={dxi:ThemeResourceDictionary Path='Core/Editors/Editors.Generic.xaml'}}" TargetType="{x:Type pcne:CharacterCombEdit}">
        <Setter Property="SelectAllOnGotFocus" Value="True" />
        <Setter Property="DisplayTemplate" Value="{StaticResource displayInplaceTemplate}" />
        <Setter Property="EditTemplate" Value="{StaticResource editTemplateCharacter}" />
        <Setter Property="EditNonEditableTemplate" Value="{StaticResource editNonEditableTemplate}" />
        <Style.Triggers>
            <Trigger Property="EditMode" Value="InplaceActive">
                <Setter Property="EditTemplate" Value="{StaticResource editInplaceTemplate}" />
                <Setter Property="EditNonEditableTemplate" Value="{StaticResource editNonEditableInplaceTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DateRangeControl.DefaultStyleBase" TargetType="{x:Type dxpn:DateRangeControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxpn:DateRangeControl}">
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type dxe:DateNavigator}">
                            <Setter Property="AllowMultipleRanges" Value="False" />
                            <Setter Property="IsMultiSelect" Value="False" />
                            <Setter Property="RowCount" Value="1" />
                            <Setter Property="ColumnCount" Value="1" />
                            <Setter Property="Focusable" Value="False" />
                            <Setter Property="Margin" Value="0,0,0,8" />
                            <Setter Property="HorizontalAlignment" Value="Stretch" />
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="MinValue" Value="{Binding MinValue, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="MaxValue" Value="{Binding MaxValue, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid Margin="12">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <dxe:ListBoxEdit
                            Name="list"
                            Width="180"
                            MaxHeight="{Binding ActualHeight, ElementName=startDateContainer, Mode=OneWay}"
                            Margin="0,0,4,0"
                            dx:ScrollBarExtensions.ScrollBarMode="TouchOverlap"
                            EditValue="{Binding SelectedPredefinedRange, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                            ItemsSource="{Binding PredefinedRanges.Keys, RelativeSource={RelativeSource TemplatedParent}}"
                            ScrollViewer.CanContentScroll="False"
                            ShowBorder="False">
                            <dxe:ListBoxEdit.ItemTemplate>
                                <DataTemplate>
                                    <ToggleButton Margin="0,0,0,4" Padding="6,2" IsChecked="{Binding IsSelected, Mode=TwoWay, RelativeSource={RelativeSource AncestorType=dxe:ListBoxEditItem}}">
                                        <TextBlock Text="{Binding}" TextTrimming="CharacterEllipsis" />
                                    </ToggleButton>
                                </DataTemplate>
                            </dxe:ListBoxEdit.ItemTemplate>
                            <dxe:ListBoxEdit.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Margin="0,0,8,0" />
                                </ItemsPanelTemplate>
                            </dxe:ListBoxEdit.ItemsPanel>
                            <dxe:ListBoxEdit.ItemContainerStyle>
                                <Style TargetType="dxe:ListBoxEditItem">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="dxe:ListBoxEditItem">
                                                <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </dxe:ListBoxEdit.ItemContainerStyle>
                        </dxe:ListBoxEdit>
                        <StackPanel
                            Name="startDateContainer"
                            Grid.Column="1"
                            Margin="8,0,0,0"
                            VerticalAlignment="Top">
                            <dxe:DateNavigator
                                Name="PART_startDate"
                                MaxValue="{TemplateBinding MaxValue}"
                                MinValue="{TemplateBinding MinValue}"
                                ShowTodayButton="False" />
                            <dxe:DateEdit
                                Grid.Row="1"
                                AllowDefaultButton="False"
                                EditValue="{Binding StartDate, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                MaxValue="{TemplateBinding MaxValue}"
                                MinValue="{TemplateBinding MinValue}" />
                        </StackPanel>
                        <StackPanel Grid.Column="2" Margin="8,0,0,0">
                            <dxe:DateNavigator
                                Name="PART_endDate"
                                MaxValue="{TemplateBinding MaxValue}"
                                MinValue="{TemplateBinding MinValue}"
                                ShowTodayButton="False" />
                            <dxe:DateEdit
                                AllowDefaultButton="False"
                                EditValue="{Binding EndDate, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                MaxValue="{TemplateBinding MaxValue}"
                                MinValue="{TemplateBinding MinValue}" />
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DateRangeEdit.DefaultStyleBase" BasedOn="{dx:TargetStaticResource PopupBaseEdit.DefaultStyleBase, TargetDictionary={dxi:ThemeResourceDictionary Path='Core/Editors/Editors.Generic.xaml'}}" TargetType="{x:Type dxpn:DateRangeEdit}">
        <Setter Property="PopupContentTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <dxpn:DateRangeControl x:Name="PART_PopupContent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DocumentPreview.DefaultStyleBase" TargetType="{x:Type dxp:DocumentPreview}">
        <Setter Property="Template" Value="{StaticResource documentViewerTemplate}" />
    </Style>
    <Style x:Key="DocumentPreviewBarManagerController.DefaultStyleBase" TargetType="{x:Type dxp:DocumentPreviewBarManagerController}">
        <Setter Property="Template" Value="{StaticResource documentPreviewBarManagerControllerTemplate}" />
    </Style>
    <Style x:Key="LobControl.DefaultStyleBase" TargetType="{x:Type dxpn:LobControl}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxpn:LobControl}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="{StaticResource lobGridHorizontalSpacing}" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter
                            Grid.Row="0"
                            Grid.Column="0"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Header}" />
                        <ContentPresenter
                            Grid.Row="0"
                            Grid.Column="2"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Content}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="WinImageEdit.DefaultStyleBase" TargetType="{x:Type dxpn:WinImageEdit}">

        <Setter Property="OpenFileDialogServiceTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxmvvm:OpenFileDialogService />
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MessageBoxServiceTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dx:DXMessageBoxService />
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="EditTemplate" Value="{StaticResource editTemplateFlyout}" />
        <Setter Property="DisplayTemplate" Value="{StaticResource editTemplateFlyout}" />
        <Setter Property="EmptyContentTemplate" Value="{DynamicResource {dxt:LWKey ImageEdit.EmptyContentTemplate}}" />
        <Setter Property="BorderTemplate" Value="{DynamicResource {dxt:LWKey BaseEdit.CommonBorderTemplate}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxpn:WinImageEdit}">
                    <Grid x:Name="PART_Root">
                        <ContentControl
                            x:Name="Border"
                            HorizontalContentAlignment="Stretch"
                            VerticalContentAlignment="Stretch"
                            dx:FocusHelper2.Focusable="False"
                            dxe_helpers:ControlHelper.ShowFocusedState="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource TemplatedParent}}"
                            Background="{TemplateBinding Background}"
                            Template="{TemplateBinding ActualBorderTemplate}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <dxe:ErrorControl x:Name="PART_ErrorPresenter" Grid.Column="0" />
                                <dxe:EditorControl
                                    x:Name="PART_Content"
                                    Grid.Column="1"
                                    Padding="{TemplateBinding Padding}"
                                    Foreground="{TemplateBinding Foreground}"
                                    Template="{TemplateBinding ActualEditorControlTemplate}" />
                            </Grid>
                        </ContentControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DocumentViewer.DefaultStyleBase" TargetType="{x:Type dxp:DocumentViewer}">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type dxp:DocumentViewer}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <dxpn:PreviewSurface Grid.RowSpan="2" />
                            <dxpn:PrintingSearchPanel
                                Grid.Row="0"
                                MinHeight="32"
                                Margin="0,0,1,0"
                                dxpn:SearchPanelBehavior.SearchBoxFocused="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Model.IsSearchPanelVisible, Mode=OneWay, FallbackValue=false}"
                                Model="{TemplateBinding Model}"
                                Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Model.IsSearchPanelVisible, Converter={StaticResource boolToVisibilityConverter}, Mode=TwoWay, FallbackValue=Collapsed}" />

                            <dxpn:DocumentPreviewDockLayoutManager
                                x:Name="documentPreviewDockLayoutManager"
                                Grid.Row="1"
                                dxpn:DockLayoutManagerBehavior.ForbidDockingWithItems="DocumentViewerPanel,SearchLayoutPanel"
                                dxpn:DockLayoutManagerBehavior.HideItemsOnClosing="True"
                                Background="Transparent"
                                DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                <dxdo:LayoutGroup Margin="0">
                                    <dxdo:LayoutGroup
                                        Name="ParametersGroup"
                                        Margin="2"
                                        DockItemInterval="2"
                                        ItemWidth="300"
                                        Orientation="Vertical">
                                        <dxdo:LayoutPanel Caption="{dxp:PrintingStringId StringId=Parameters}" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Model.IsParametersPanelVisible, Converter={StaticResource boolToVisibilityConverter}, Mode=TwoWay, FallbackValue=Collapsed}">
                                            <ScrollViewer
                                                Padding="0"
                                                BorderThickness="0"
                                                HorizontalScrollBarVisibility="Disabled"
                                                VerticalScrollBarVisibility="Auto">
                                                <dxpp:ParametersPanel
                                                    Name="parametersPanel"
                                                    dxe:ValidationService.IsValidationContainer="True"
                                                    IsEnabled="{Binding Model.IsCreating, Converter={StaticResource boolInverseConverter}}"
                                                    ParametersModel="{Binding Model.ParametersModel, RelativeSource={RelativeSource TemplatedParent}}" />
                                            </ScrollViewer>
                                        </dxdo:LayoutPanel>

                                        <dxdo:LayoutPanel Name="documentMapPanel" Caption="{dxp:PrintingStringId StringId=DocumentMap}" Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Model.IsDocumentMapVisible, Converter={StaticResource boolToVisibilityConverter}, Mode=TwoWay, FallbackValue=Collapsed}">
                                            <TreeView
                                                Name="documentMapTreeView"
                                                dxpn:TreeViewBehavior.ExpandRootNode="{Binding RelativeSource={RelativeSource Self}, Path=ItemsSource, Converter={StaticResource objectToBooleanConverter}}"
                                                BorderThickness="0"
                                                ItemTemplate="{StaticResource treeViewItemTemplate}"
                                                ItemsSource="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Model.DocumentMapRootNode, Converter={StaticResource objectToCollectionConverter}}">
                                                <dxmvvm:Interaction.Behaviors>
                                                    <dxpn:DocumentMapSelectionBehavior Model="{Binding Path=Model, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                                </dxmvvm:Interaction.Behaviors>
                                            </TreeView>
                                        </dxdo:LayoutPanel>
                                    </dxdo:LayoutGroup>

                                    <dxdo:LayoutPanel
                                        Name="DocumentViewerPanel"
                                        AllowDrag="False"
                                        Background="Transparent"
                                        Caption="{dxp:PrintingStringId StringId=ToolBarCaption}"
                                        ShowBorder="False"
                                        ShowCaption="False">
                                        <Grid>
                                            <ScrollViewer
                                                Name="documentPreviewScrollViewer"
                                                Padding="0"
                                                Background="Transparent"
                                                BorderThickness="0"
                                                FocusVisualStyle="{x:Null}"
                                                HorizontalScrollBarVisibility="Auto"
                                                IsTabStop="False"
                                                VerticalScrollBarVisibility="Auto">
                                                <ScrollViewer.CanContentScroll>True</ScrollViewer.CanContentScroll>
                                                <FocusManager.FocusedElement>
                                                    <Binding ElementName="scrollablePageView" />
                                                </FocusManager.FocusedElement>
                                                <dxpn:ScrollablePageView
                                                    x:Name="scrollablePageView"
                                                    BorderBrush="Black"
                                                    BorderThickness="1"
                                                    FocusVisualStyle="{x:Null}"
                                                    Model="{Binding Path=Model, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}"
                                                    PageMargin="20" />
                                            </ScrollViewer>
                                            <TextBlock
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                FontWeight="Bold"
                                                Foreground="#FFA5A4AD"
                                                Text="{dxp:PrintingStringId StringId=Msg_EmptyDocument}"
                                                Visibility="{Binding Path=Model.IsEmptyDocument, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource visibilityConverter}, FallbackValue=Collapsed}" />
                                            <Grid Visibility="{Binding Path=Model.IsLoading, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource visibilityConverter}, FallbackValue=Collapsed}">
                                                <dx:WaitIndicator HorizontalAlignment="Center" VerticalAlignment="Center" DeferedVisibility="True" />
                                            </Grid>

                                            <dxpn:CursorContainer x:Name="previewCursorContainer" />
                                        </Grid>
                                    </dxdo:LayoutPanel>
                                </dxdo:LayoutGroup>
                            </dxpn:DocumentPreviewDockLayoutManager>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>
    <Style x:Key="BrickImageEdit.DefaultStyleBase" BasedOn="{dx:TargetStaticResource BaseEdit.DefaultStyleBase, TargetDictionary={dxi:ThemeResourceDictionary Path='Core/Editors/Editors.Generic.xaml'}}" TargetType="pcne:BrickImageEdit">
        <Setter Property="Background" Value="{Binding Background}" />
        <Setter Property="BorderBrush" Value="{Binding BorderBrush}" />
        <Setter Property="BorderThickness" Value="{Binding BorderThickness}" />
        <Setter Property="Padding" Value="{Binding Padding}" />
        <Setter Property="Template" Value="{StaticResource template}" />
        <Setter Property="EmptyContentTemplate" Value="{DynamicResource {dxt:LWKey ImageEdit.EmptyContentTemplate}}" />
        <Setter Property="EditTemplate" Value="{StaticResource editTemplateBrick}" />
        <Setter Property="MenuTemplate" Value="{StaticResource menuTemplate}" />
        <Setter Property="Renderer" Value="{Binding Renderer}" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dxmvvm:EventToCommand Command="{Binding OnImageLoadedCommand}" EventName="ImageLoaded" PassEventArgsToCommand="True" />
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MenuContainerTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <dx:DXBorder Width="50" Background="#FF666666">
                        <ContentPresenter />
                    </dx:DXBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="EditTemplate" Value="{StaticResource editTemplateBrick}" />
        <Setter Property="OpenFileDialogServiceTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxmvvm:OpenFileDialogService />
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MessageBoxServiceTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dx:DXMessageBoxService />
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="EditMode" Value="InplaceInactive">
                <Setter Property="DisplayTemplate" Value="{StaticResource editTemplateBrick}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="NavigationPaneControl.DefaultStyleBase" TargetType="{x:Type dxp:NavigationPaneControl}">
        <Setter Property="NavigationPaneSettings" Value="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ActualNavigationPaneSettings, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Template" Value="{DynamicResource {dxpt:LWKey NavigationPane.Template}}" />
    </Style>
    <Style x:Key="DocumentPreviewBarButtonItem.DefaultStyleBase" TargetType="{x:Type pcb:DocumentPreviewBarButtonItem}" BasedOn="{StaticResource previewBarItemStyle}">
        <Setter Property="Content" Value="{Binding Path=Caption}" />
        <Setter Property="Hint" Value="{Binding Path=Hint}" />
    </Style>
    <Style x:Key="DocumentPreviewBarSubItem.DefaultStyleBase" TargetType="{x:Type pcb:DocumentPreviewBarSubItem}" BasedOn="{StaticResource previewBarItemStyle}">
        <Setter Property="Content" Value="{Binding Path=Caption}" />
        <Setter Property="Hint" Value="{Binding Path=Hint}" />
        <Setter Property="ItemLinksSource" Value="{Binding Path=Items}" />
        <Setter Property="ItemTemplateSelector" Value="{StaticResource checkItemTemplateSelector}" />
    </Style>
    <Style x:Key="PageLayoutBarSubItem.DefaultStyleBase" TargetType="{x:Type pcb:PageLayoutBarSubItem}" BasedOn="{StaticResource previewBarItemStyle}">
        <Setter Property="SubItemsGlyphSize" Value="Large" />
        <Setter Property="Content" Value="{Binding Path=Caption}" />
        <Setter Property="Hint" Value="{Binding Path=Hint}" />
        <Setter Property="ItemLinksSource" Value="{Binding Path=Items}" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <pcb:PageLayoutBarCheckItem Command="{Binding}" />
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplateSelector" Value="{x:Null}" />
    </Style>
    <Style x:Key="SelectToolBarItem.DefaultStyleBase" BasedOn="{StaticResource DocumentPreviewBarCheckItem.DefaultStyleBase}" TargetType="{x:Type pcb:SelectToolBarItem}">
        <Setter Property="CommandParameter" Value="{Binding Path=CommandValue}" />
    </Style>
    <Style x:Key="HandToolBarItem.DefaultStyleBase" BasedOn="{StaticResource DocumentPreviewBarCheckItem.DefaultStyleBase}" TargetType="{x:Type pcb:HandToolBarItem}">
        <Setter Property="CommandParameter" Value="{Binding Path=CommandValue}" />
    </Style>
    <Style x:Key="PageNumberEditItem.DefaultStyleBase" TargetType="{x:Type pcb:PageNumberEditItem}">
        <Setter Property="Content" Value="{dxp:PrintingStringId StringId=GoToPage}" />
        <Setter Property="Content2" Value="{Binding Path=SettingsSource.PageCount, Converter={StaticResource pageCountFormatStringConverter}, RelativeSource={RelativeSource Self}}" />
        <Setter Property="EditValue" Value="{Binding Mode=TwoWay, UpdateSourceTrigger=Explicit, Path=SettingsSource.CurrentPageNumber, FallbackValue=0, RelativeSource={RelativeSource Self}}" />
        <Setter Property="IsEnabled" Value="{Binding SettingsSource.PageCount, FallbackValue=False, RelativeSource={RelativeSource Self}}" />
        <Setter Property="EditStyle">
            <Setter.Value>
                <Style TargetType="{x:Type dxe:TextEdit}">
                    <Setter Property="Padding" Value="0,-2,0,-2" />
                    <Setter Property="MinWidth" Value="30" />
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExportSplitItem.DefaultStyleBase" TargetType="{x:Type pcb:ExportSplitItem}" BasedOn="{StaticResource previewBarItemStyle}">
        <Setter Property="Content" Value="{Binding Path=Caption}" />
        <Setter Property="Hint" Value="{Binding Path=Hint}" />
    </Style>
    <Style x:Key="ZoomFactorEditItem.DefaultStyleBase" TargetType="{x:Type pcb:ZoomFactorEditItem}">
        <Setter Property="Content" Value="{Binding SettingsSource.ZoomFactor, FallbackValue={x:Null}, Converter={dxmvvm:FormatStringConverter FormatString=P0}, RelativeSource={RelativeSource Self}}" />
        <Setter Property="EditValue" Value="{Binding SettingsSource.ZoomFactor, FallbackValue=1, Converter={pcn:TrackBarZoomValueConverter MinZoomValue=0.1, MaxZoomValue=5}, RelativeSource={RelativeSource Self}}" />
        <Setter Property="IsEnabled" Value="{Binding SettingsSource.ZoomFactor, FallbackValue=False, RelativeSource={RelativeSource Self}}" />
    </Style>
    <Style x:Key="ProgressEditItem.DefaultStyleBase" TargetType="{x:Type pcb:ProgressEditItem}">
        <Setter Property="EditValue" Value="{Binding ProgressSettings.ProgressPosition, Mode=OneWay, FallbackValue=0, RelativeSource={RelativeSource Self}}" />
        <Setter Property="IsVisible" Value="{Binding ProgressSettings.InProgress, FallbackValue={StaticResource FalseBoolean}, RelativeSource={RelativeSource Self}}" />
        <Setter Property="EditStyle">
            <Setter.Value>
                <Style TargetType="{x:Type dxe:ProgressBarEdit}">
                    <Setter Property="MinWidth" Value="150" />
                    <Setter Property="ContentDisplayMode" Value="Value" />
                    <Setter Property="DisplayFormatString" Value="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).Document.ProgressDisplayText, RelativeSource={RelativeSource Self}}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="EditHeight" Value="22" />
    </Style>
    <Style x:Key="StopPageBuildItem.DefaultStyleBase" TargetType="{x:Type pcb:StopPageBuildItem}">
        <Setter Property="IsVisible" Value="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" />
    </Style>
    <Style x:Key="ThumbnailPageControlItem.DefaultStyleBase" TargetType="{x:Type pcn:ThumbnailPageControlItem}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="IsSelected" Value="{Binding Path=IsSelected}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type pcn:ThumbnailPageControlItem}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ContentControl Content="{Binding}" ContentTemplate="{DynamicResource {dxpt:LWKey NewDocumentViewer.PageBorderTemplate}}" IsHitTestVisible="False" />
                        <TextBlock
                            Grid.Row="1"
                            Margin="0,5,0,5"
                            Text="{Binding Path=PageNumber}"
                            TextAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ThumbnailsViewerControl.DefaultStyleBase" TargetType="{x:Type pcn:ThumbnailsViewerControl}">
        <Setter Property="Template" Value="{DynamicResource {dxpt:LWKey NewDocumentViewer.ThumbnailsTemplate}}" />
    </Style>
    <Style x:Key="ThumbnailsPresenterControl.DefaultStyleBase" TargetType="{x:Type pcn:ThumbnailsPresenterControl}">
        <Setter Property="Template" Value="{DynamicResource {dxpt:LWKey NewDocumentViewer.ThumbnailsPresenterTemplate}}" />
    </Style>
    <Style x:Key="ThumbnailsPageSelector.DefaultStyleBase" TargetType="{x:Type pcn:ThumbnailsPageSelector}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type pcn:ThumbnailsPageSelector}">
                    <Grid>
                        <dxdv:DocumentPresenterDecorator
                            x:Name="PART_Decorator"
                            Grid.RowSpan="2"
                            Grid.ColumnSpan="2"
                            FocusVisualStyle="{x:Null}"
                            Focusable="False">
                            <pcn:PreviewScrollViewer
                                x:Name="PART_ScrollViewer"
                                Padding="{TemplateBinding Padding}"
                                dx:ScrollBarExtensions.ScrollBehavior="{dx:ScrollViewerScrollBehavior}"
                                dx:ScrollViewerTouchBehavior.IsEnabled="True"
                                CanContentScroll="True"
                                CanMouseScroll="True"
                                Focusable="false"
                                HorizontalScrollBarVisibility="Auto"
                                ShowFlyoutOnScroll="False"
                                Template="{DynamicResource {dxpt:LWKey NewDocumentViewer.ScrollViewerTemplate}}"
                                VerticalScrollBarVisibility="Auto">
                                <dxmvvm:Interaction.Behaviors>
                                    <dx:ScrollViewerTouchBehavior Orientation="Vertical" />
                                </dxmvvm:Interaction.Behaviors>
                                <ItemsPresenter x:Name="PART_ItemsPresenter" />
                            </pcn:PreviewScrollViewer>
                        </dxdv:DocumentPresenterDecorator>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DocumentMap.DefaultStyleBase" TargetType="{x:Type pcn:DocumentMap}">
        <Setter Property="TreeViewStyle" Value="{DynamicResource {dxdvt:LWKey DocumentViewer.TreeViewStyle}}" />
        <Setter Property="Template" Value="{DynamicResource {dxpt:LWKey NewDocumentViewer.DocumentMapTemplate}}" />
    </Style>
    <Style x:Key="PreviewPageControlItem.DefaultStyleBase" TargetType="{x:Type dxp:PreviewPageControlItem}">
        <Setter Property="Focusable" Value="True" />
        <Setter Property="IsSelected" Value="{Binding IsSelected}" />
        <Setter Property="Template" Value="{DynamicResource {dxpt:LWKey NewDocumentViewer.PageControlItemTemplate}}" />
    </Style>
    <Style x:Key="SelectionCanvas.DefaultStyleBase" TargetType="{x:Type pcn:SelectionCanvas}">
        <Setter Property="Template" Value="{DynamicResource {dxpt:LWKey NewDocumentViewer.SelectionCanvasTemplate}}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsHitTestVisible" Value="False" />
    </Style>
    <Style x:Key="PageSelector.DefaultStyleBase" TargetType="{x:Type pcn:PageSelector}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template" Value="{DynamicResource {dxpt:LWKey NewDocumentViewer.PageSelectorTemplate}}" />
    </Style>
    <Style x:Key="DocumentPresenterControl.DefaultStyleBase" TargetType="{x:Type dxp:DocumentPresenterControl}">
        <Setter Property="MinHeight" Value="10" />
        <Setter Property="FlowDirection" Value="LeftToRight" />
        <Setter Property="Template" Value="{DynamicResource {dxpt:LWKey NewDocumentViewer.DocumentPresenterTemplate}}" />
    </Style>
    <Style x:Key="DocumentPreviewControl.DefaultStyleBase" TargetType="{x:Type dxp:DocumentPreviewControl}">
        <Setter Property="HighlightSelectionColor" Value="{DynamicResource {dxpt:LWKey NewDocumentViewer.HighlightSelectionColor}}" />
        <Setter Property="BarsTemplate" Value="{DynamicResource {dxpt:LWKey NewDocumentViewer.BarsTemplate}}" />
        <Setter Property="RibbonTemplate" Value="{DynamicResource {dxpt:LWKey NewDocumentViewer.RibbonTemplate}}" />
        <Setter Property="PresenterTemplate" Value="{DynamicResource {dxpt:LWKey NewDocumentViewer.PresenterTemplate}}" />
        <Setter Property="Template" Value="{DynamicResource {dxpt:LWKey NewDocumentViewer.Template}}" />
        <Setter Property="dx:ScrollBarExtensions.ScrollBarMode" Value="TouchOverlap" />
    </Style>
    <Style x:Key="PageMarginsEditor.DefaultStyleBase" TargetType="{x:Type pcn:PageMarginsEditor}">
        <Setter Property="Visibility">
            <Setter.Value>
                <MultiBinding Converter="{pcn:PageViewModelToPageMarginsVisibilityConverter}">
                    <Binding />
                    <Binding Path="(dxp:DocumentPreviewControl.ActualViewer).CurrentPageNumber" RelativeSource="{RelativeSource Self}" />
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="IsEnabled" Value="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).Document.CanChangePageSettings, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Focusable" Value="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).Document.CanChangePageSettings, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="pcn:PageMarginsEditor">
                    <Grid Name="Margins" ClipToBounds="True" Visibility="{Binding Path=(dxp:DocumentPreviewControl.ActualViewer).ShowPageMargins, RelativeSource={RelativeSource Self}, Converter={dx:BooleanToVisibilityConverter}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="{Binding TopMargin.Size, RelativeSource={RelativeSource TemplatedParent}}" MinHeight="0" MaxHeight="{Binding TopMargin.MaxSize, RelativeSource={RelativeSource TemplatedParent}}" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" MinHeight="1" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="{Binding BottomMargin.Size, RelativeSource={RelativeSource TemplatedParent}}" MinHeight="0" MaxHeight="{Binding BottomMargin.MaxSize, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{Binding LeftMargin.Size, RelativeSource={RelativeSource TemplatedParent}}" MinWidth="0" MaxWidth="{Binding LeftMargin.MaxSize, RelativeSource={RelativeSource TemplatedParent}}" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="{Binding RightMargin.Size, RelativeSource={RelativeSource TemplatedParent}}" MinWidth="0" MaxWidth="{Binding RightMargin.MaxSize, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Grid.ColumnDefinitions>
                        <pcn:MarginThumb
                            Grid.RowSpan="5"
                            Grid.Column="1"
                            VerticalAlignment="Stretch"
                            Background="LightGray"
                            Orientation="Vertical"
                            PageMargin="{TemplateBinding LeftMargin}"
                            ResizeBehavior="PreviousAndNext"
                            SetPageMarginCommand="{Binding Page.SetPageMarginCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                        <pcn:MarginThumb
                            Grid.Row="1"
                            Grid.ColumnSpan="5"
                            HorizontalAlignment="Stretch"
                            Background="LightGray"
                            Orientation="Horizontal"
                            PageMargin="{TemplateBinding TopMargin}"
                            ResizeBehavior="PreviousAndNext"
                            SetPageMarginCommand="{Binding SetPageMarginCommand}" />
                        <pcn:MarginThumb
                            Grid.RowSpan="5"
                            Grid.Column="3"
                            VerticalAlignment="Stretch"
                            Background="LightGray"
                            Orientation="Vertical"
                            PageMargin="{TemplateBinding RightMargin}"
                            ResizeBehavior="PreviousAndNext"
                            SetPageMarginCommand="{Binding SetPageMarginCommand}" />
                        <pcn:MarginThumb
                            Grid.Row="3"
                            Grid.ColumnSpan="5"
                            HorizontalAlignment="Stretch"
                            Background="LightGray"
                            Orientation="Horizontal"
                            PageMargin="{TemplateBinding BottomMargin}"
                            ResizeBehavior="PreviousAndNext"
                            SetPageMarginCommand="{Binding SetPageMarginCommand}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MarginThumb.DefaultStyleBase" TargetType="{x:Type pcn:MarginThumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type pcn:MarginThumb}">
                    <Grid Background="#00000000">
                        <pcn:NoSizeDecorator>
                            <Line
                                Name="border"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Stroke="LightGray"
                                StrokeDashArray="1 1"
                                StrokeThickness="5"
                                X2="{TemplateBinding ActualWidth}"
                                Y2="{TemplateBinding ActualHeight}" />
                        </pcn:NoSizeDecorator>
                        <ToolTipService.ToolTip>
                            <ToolTip x:Name="PART_Tooltip" Placement="Mouse" Visibility="{Binding IsDragging, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanToVisibilityConverter HiddenInsteadOfCollapsed=True}}">
                                <ToolTip.Content>
                                    <MultiBinding Converter="{pcn:MarginSideAndSizeToTextConverter}" FallbackValue="{x:Null}">
                                        <Binding Mode="OneWay" Path="PageMargin.Side" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Mode="OneWay" Path="ActualSize" RelativeSource="{RelativeSource TemplatedParent}" />
                                    </MultiBinding>
                                </ToolTip.Content>
                            </ToolTip>
                        </ToolTipService.ToolTip>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="Gray" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                                <VisualState x:Name="Pressed" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="border" Property="Y2" Value="1" />
                            <Setter TargetName="border" Property="Height" Value="1" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="border" Property="X2" Value="1" />
                            <Setter TargetName="border" Property="Width" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Height" Value="3" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="3" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ParametersPanel.DefaultStyleBase" TargetType="dxpp:ParametersPanel">
        <Setter Property="ParameterTemplateSelector">
            <Setter.Value>
                <dxpp:ParameterTemplateSelector />
            </Setter.Value>
        </Setter>
        <Setter Property="Template" Value="{StaticResource parametersControlTemplate}" />
    </Style>
    <Style x:Key="ParameterLineLayout.DefaultStyleBase" TargetType="dxpp:ParameterLineLayout">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Visibility" Value="{Binding Visible, Converter={dx:BooleanToVisibilityConverter}}" />
        <Setter Property="Template" Value="{StaticResource horizontalLineLayout}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding LabelOrientation}" Value="{x:Static xrp:Orientation.Vertical}">
                <Setter Property="Template" Value="{StaticResource verticalLineLayout}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DocumentPreviewRibbonController.DefaultStyleBase" TargetType="{x:Type dxp:DocumentPreviewRibbonController}">
        <Setter Property="Template" Value="{StaticResource documentPreviewRibbonControllerTemplate}" />
    </Style>
    <Style x:Key="ScrollablePageView.DefaultStyleBase" TargetType="dxpn:ScrollablePageView">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxpn:ScrollablePageView">
                    <dx:DXBorder
                        x:Name="pageBorder"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        BorderThickness="0"
                        Visibility="{Binding Path=Model.PageCount, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource visibilityConverter}, FallbackValue=Collapsed}">
                        <dx:DXBorder
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            BorderBrush="Transparent"
                            BorderThickness="{TemplateBinding PageMargin}">
                            <dxpn:PageBorderControl BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid x:Name="pageContentViewContainer">
                                    <Viewbox Width="{Binding Path=Model.PageViewWidth, RelativeSource={RelativeSource Mode=TemplatedParent}}" Height="{Binding Path=Model.PageViewHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                        <dx:DXContentPresenter Content="{Binding Path=Model.PageContent, RelativeSource={RelativeSource Mode=TemplatedParent}}" IsHitTestVisible="{Binding Path=Model.IsLoading, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource boolInverseConverter}, FallbackValue=True}" />
                                    </Viewbox>

                                    <Grid Background="White" Visibility="{Binding Path=Model.IsIncorrectPageContent, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource visibilityConverter}, FallbackValue=Collapsed}">
                                        <dxpn:PageWithRedCross />
                                    </Grid>
                                </Grid>
                            </dxpn:PageBorderControl>
                        </dx:DXBorder>
                    </dx:DXBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="dx:FrameworkElementHelper.IsClipped" Value="True" />
    </Style>
    <Style x:Key="RibbonDocumentPreview.DefaultStyleBase" TargetType="{x:Type dxp:RibbonDocumentPreview}">
        <Setter Property="Template" Value="{StaticResource ribbonDocumentPreviewTemplate}" />
    </Style>
    <Style x:Key="PdfSecurityOptionsControl.DefaultStyleBase" TargetType="dxpn:PdfSecurityOptionsControl">
        <Setter Property="Template" Value="{StaticResource passwordSecurityOptionsTemplate}" />
    </Style>
    <Style x:Key="WatermarkControl.DefaultStyleBase" TargetType="dxpn:WatermarkControl">
        <Setter Property="Template" Value="{StaticResource watermarkControlTemplate}" />
    </Style>
    <Style x:Key="PopupWinImageEdit.DefaultStyleBase" BasedOn="{dx:TargetStaticResource PopupBaseEdit.DefaultStyleBase, TargetDictionary={dxi:ThemeResourceDictionary Path='Core/Editors/Editors.Generic.xaml'}}" TargetType="{x:Type dxpn:PopupWinImageEdit}">
        <Setter Property="OpenFileDialogServiceTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxmvvm:OpenFileDialogService />
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MessageBoxServiceTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dx:DXMessageBoxService />
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="EditNonEditableTemplate" Value="{StaticResource popupDisplayTemplate}" />
        <Setter Property="DisplayTemplate" Value="{StaticResource popupDisplayTemplate}" />
        <Setter Property="PopupContentTemplate" Value="{StaticResource popupContentTemplate}" />
        <Setter Property="EditTemplate" Value="{StaticResource popupDisplayTemplate}" />
        <Style.Triggers>
            <Trigger Property="EditMode" Value="InplaceActive">
                <Setter Property="EditTemplate" Value="{StaticResource popupDisplayTemplate}" />
                <Setter Property="EditNonEditableTemplate" Value="{StaticResource popupDisplayTemplate}" />
            </Trigger>
            <Trigger Property="EditMode" Value="InplaceInactive">
                <Setter Property="DisplayTemplate" Value="{StaticResource popupDisplayTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="OverlayWindow.DefaultStyleBase" TargetType="dxpn:OverlayWindow">
        <Style.Setters>
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="dxpn:OverlayWindow">
                        <dx:DXBorder>
                            <dx:DXBorder.Background>
                                <RadialGradientBrush>
                                    <GradientStop Offset="0" Color="#A5000000" />
                                    <GradientStop Offset="1" Color="#D8000000" />
                                </RadialGradientBrush>
                            </dx:DXBorder.Background>
                            <dx:DXContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Cursor="{TemplateBinding Cursor}" />
                        </dx:DXBorder>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>
    <Style x:Key="PreviewSurface.DefaultStyleBase" TargetType="{x:Type dxpn:PreviewSurface}">
        <Setter Property="Template" Value="{DynamicResource {dxpt:LWKey Printing.PreviewSurfaceTemplate}}" />
    </Style>
    <!--#endregion DEFAULT STYLES-->
</ResourceDictionary>