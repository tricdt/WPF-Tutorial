<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:col="clr-namespace:System.Collections;assembly=mscorlib"
    xmlns:barcode="clr-namespace:DevExpress.XtraPrinting.BarCode;assembly=DevExpress.Printing.v24.1.Core"
    xmlns:barcodenative="clr-namespace:DevExpress.XtraPrinting.BarCode.Native;assembly=DevExpress.Printing.v24.1.Core"
    xmlns:bars="clr-namespace:DevExpress.Xpf.Printing.PreviewControl.Bars;assembly=DevExpress.Xpf.Printing.v24.1"
    xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=System"
    xmlns:crosstab="clr-namespace:DevExpress.XtraReports.UI.CrossTab;assembly=DevExpress.XtraReports.v24.1"
    xmlns:dae="clr-namespace:DevExpress.DataAccess.Excel;assembly=DevExpress.DataAccess.v24.1"
    xmlns:datafederation="clr-namespace:DevExpress.Xpf.DataAccess.Native.DataFederation;assembly=DevExpress.Xpf.DataAccess.v24.1"
    xmlns:dataproviders="clr-namespace:DevExpress.Data.XtraReports.DataProviders;assembly=DevExpress.Data.v24.1"
    xmlns:drawing2d="clr-namespace:System.Drawing.Drawing2D;assembly=System.Drawing"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
    xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys"
    xmlns:dxco="http://schemas.devexpress.com/winfx/2008/xaml/controls"
    xmlns:dxcv="http://schemas.devexpress.com/winfx/2008/xaml/codeview"
    xmlns:dxd="clr-namespace:DevExpress.Data;assembly=DevExpress.Data.v24.1"
    xmlns:dxda="http://schemas.devexpress.com/winfx/2008/xaml/dataaccess"
    xmlns:dxdaef="clr-namespace:DevExpress.DataAccess.EntityFramework;assembly=DevExpress.DataAccess.v24.1"
    xmlns:dxdaf="clr-namespace:DevExpress.DataAccess.DataFederation;assembly=DevExpress.DataAccess.v24.1"
    xmlns:dxdai="http://schemas.devexpress.com/winfx/2008/xaml/dataaccess/internal"
    xmlns:dxdajson="clr-namespace:DevExpress.DataAccess.Json;assembly=DevExpress.DataAccess.v24.1"
    xmlns:dxdane="clr-namespace:DevExpress.Xpf.DataAccess.Native.Editors;assembly=DevExpress.Xpf.DataAccess.v24.1"
    xmlns:dxdaob="clr-namespace:DevExpress.DataAccess.ObjectBinding;assembly=DevExpress.DataAccess.v24.1"
    xmlns:dxdasql="clr-namespace:DevExpress.DataAccess.Sql;assembly=DevExpress.DataAccess.v24.1"
    xmlns:dxdat="http://schemas.devexpress.com/winfx/2008/xaml/dataaccess/themekeys"
    xmlns:dxdaw="clr-namespace:DevExpress.Xpf.DataAccess.DataSourceWizard;assembly=DevExpress.Xpf.DataAccess.v24.1"
    xmlns:dxdawn="clr-namespace:DevExpress.Xpf.DataAccess.DataSourceWizard.Native;assembly=DevExpress.Xpf.DataAccess.v24.1"
    xmlns:dxdiag="http://schemas.devexpress.com/winfx/2008/xaml/diagram"
    xmlns:dxdiagci="clr-namespace:DevExpress.Diagram.Core.Native;assembly=DevExpress.Diagram.v24.1.Core"
    xmlns:dxdiagi="http://schemas.devexpress.com/winfx/2008/xaml/diagram/internal"
    xmlns:dxdiagt="http://schemas.devexpress.com/winfx/2008/xaml/diagram/themekeys"
    xmlns:dxdo="http://schemas.devexpress.com/winfx/2008/xaml/docking"
    xmlns:dxdv="http://schemas.devexpress.com/winfx/2008/xaml/documentviewer"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dxe1="clr-namespace:DevExpress.Xpf.Editors.Filtering;assembly=DevExpress.Xpf.Core.v24.1"
    xmlns:dxee="http://schemas.devexpress.com/winfx/2008/xaml/expressioneditor"
    xmlns:dxeei="http://schemas.devexpress.com/winfx/2008/xaml/expressioneditor/internal"
    xmlns:dxeet="clr-namespace:DevExpress.Xpf.ExpressionEditor.Themes;assembly=DevExpress.Xpf.ExpressionEditor.v24.1"
    xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
    xmlns:dxfui="http://schemas.devexpress.com/winfx/2008/xaml/core/filteringui"
    xmlns:dxfuit="http://schemas.devexpress.com/winfx/2008/xaml/core/filteringui/themekeys"
    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
    xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys"
    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
    xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol"
    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
    xmlns:dxmvvmi="http://schemas.devexpress.com/winfx/2008/xaml/mvvm/internal"
    xmlns:dxn="http://schemas.devexpress.com/winfx/2008/xaml/navbar"
    xmlns:dxp="http://schemas.devexpress.com/winfx/2008/xaml/printing"
    xmlns:dxpbars="http://schemas.devexpress.com/winfx/2008/xaml/printing/bars"
    xmlns:dxpg="http://schemas.devexpress.com/winfx/2008/xaml/pivotgrid"
    xmlns:dxpivotgrid="clr-namespace:DevExpress.XtraPivotGrid;assembly=DevExpress.PivotGrid.v24.1.Core"
    xmlns:dxpn="http://schemas.devexpress.com/winfx/2008/xaml/printing/native"
    xmlns:dxpp="http://schemas.devexpress.com/winfx/2008/xaml/printing/parameters"
    xmlns:dxprg="http://schemas.devexpress.com/winfx/2008/xaml/propertygrid"
    xmlns:dxprgt="http://schemas.devexpress.com/winfx/2008/xaml/propertygrid/themekeys"
    xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon"
    xmlns:dxre="clr-namespace:DevExpress.Xpf.RichEdit;assembly=DevExpress.Xpf.RichEdit.v24.1"
    xmlns:dxrecore="clr-namespace:DevExpress.XtraRichEdit.Commands;assembly=DevExpress.RichEdit.v24.1.Core"
    xmlns:dxremenu="clr-namespace:DevExpress.Xpf.RichEdit.Menu;assembly=DevExpress.Xpf.RichEdit.v24.1"
    xmlns:dxret="http://schemas.devexpress.com/winfx/2008/xaml/richedit/themekeys"
    xmlns:dxrg="clr-namespace:DevExpress.Xpf.Reports.UserDesigner.ReportGallery;assembly=DevExpress.Xpf.ReportDesigner.v24.1"
    xmlns:dxrgi="clr-namespace:DevExpress.Xpf.Reports.UserDesigner.ReportGallery.Native;assembly=DevExpress.Xpf.ReportDesigner.v24.1"
    xmlns:dxrud="clr-namespace:DevExpress.Xpf.Reports.UserDesigner;assembly=DevExpress.Xpf.ReportDesigner.v24.1"
    xmlns:dxrudcd="clr-namespace:DevExpress.Xpf.Reports.UserDesigner.ChartDesigner;assembly=DevExpress.Xpf.ReportDesigner.v24.1"
    xmlns:dxrudcdi="clr-namespace:DevExpress.Xpf.Reports.UserDesigner.ChartDesigner.Native;assembly=DevExpress.Xpf.ReportDesigner.v24.1"
    xmlns:dxrude="clr-namespace:DevExpress.Xpf.Reports.UserDesigner.Editors;assembly=DevExpress.Xpf.ReportDesigner.v24.1"
    xmlns:dxrudei="clr-namespace:DevExpress.Xpf.Reports.UserDesigner.Editors.Native;assembly=DevExpress.Xpf.ReportDesigner.v24.1"
    xmlns:dxrudep="clr-namespace:DevExpress.Xpf.Reports.UserDesigner.ErrorPanel;assembly=DevExpress.Xpf.ReportDesigner.v24.1"
    xmlns:dxrudex="clr-namespace:DevExpress.Xpf.Reports.UserDesigner.Extensions;assembly=DevExpress.Xpf.ReportDesigner.v24.1"
    xmlns:dxrudfl="clr-namespace:DevExpress.Xpf.Reports.UserDesigner.FieldList;assembly=DevExpress.Xpf.ReportDesigner.v24.1"
    xmlns:dxrudfli="clr-namespace:DevExpress.Xpf.Reports.UserDesigner.FieldList.Native;assembly=DevExpress.Xpf.ReportDesigner.v24.1"
    xmlns:dxrudgs="clr-namespace:DevExpress.Xpf.Reports.UserDesigner.GroupSort;assembly=DevExpress.Xpf.ReportDesigner.v24.1"
    xmlns:dxrudgsi="clr-namespace:DevExpress.Xpf.Reports.UserDesigner.GroupSort.Native;assembly=DevExpress.Xpf.ReportDesigner.v24.1"
    xmlns:dxrudi="clr-namespace:DevExpress.Xpf.Reports.UserDesigner.Native;assembly=DevExpress.Xpf.ReportDesigner.v24.1"
    xmlns:dxrudim="clr-namespace:DevExpress.Xpf.Reports.UserDesigner.Native.Metadata;assembly=DevExpress.Xpf.ReportDesigner.v24.1"
    xmlns:dxrudl="clr-namespace:DevExpress.Xpf.Reports.UserDesigner.Localization;assembly=DevExpress.Xpf.ReportDesigner.v24.1"
    xmlns:dxrudpgd="clr-namespace:DevExpress.Xpf.Reports.UserDesigner.PivotGridDesigner;assembly=DevExpress.Xpf.ReportDesigner.v24.1"
    xmlns:dxrudpgdi="clr-namespace:DevExpress.Xpf.Reports.UserDesigner.PivotGridDesigner.Native;assembly=DevExpress.Xpf.ReportDesigner.v24.1"
    xmlns:dxrudt="clr-namespace:DevExpress.Xpf.Reports.UserDesigner.Themes;assembly=DevExpress.Xpf.ReportDesigner.v24.1"
    xmlns:dxrudw="clr-namespace:DevExpress.Xpf.Reports.UserDesigner.ReportWizard;assembly=DevExpress.Xpf.ReportDesigner.v24.1"
    xmlns:dxrudwi="clr-namespace:DevExpress.Xpf.Reports.UserDesigner.ReportWizard.Native;assembly=DevExpress.Xpf.ReportDesigner.v24.1"
    xmlns:dxrudwp="clr-namespace:DevExpress.Xpf.Reports.UserDesigner.ReportWizard.Pages;assembly=DevExpress.Xpf.ReportDesigner.v24.1"
    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
    xmlns:forms="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"
    xmlns:gauges="clr-namespace:DevExpress.XtraGauges.Core.Customization;assembly=DevExpress.XtraGauges.v24.1.Core"
    xmlns:localization="clr-namespace:DevExpress.Xpf.DataAccess.Localization;assembly=DevExpress.Xpf.DataAccess.v24.1"
    xmlns:mongodb="clr-namespace:DevExpress.DataAccess.MongoDB;assembly=DevExpress.DataAccess.v24.1"
    xmlns:previewcontrolnative="clr-namespace:DevExpress.Xpf.Printing.PreviewControl.Native;assembly=DevExpress.Xpf.Printing.v24.1"
    xmlns:printingcorereportsui="clr-namespace:DevExpress.XtraReports.UI;assembly=DevExpress.Printing.v24.1.Core"
    xmlns:printingthemes="clr-namespace:DevExpress.Xpf.Printing.Themes;assembly=DevExpress.Xpf.Printing.v24.1"
    xmlns:propertyeditors="clr-namespace:DevExpress.Xpf.Reports.UserDesigner.Parts.PropertyEditors;assembly=DevExpress.Xpf.ReportDesigner.v24.1"
    xmlns:propertygrid="clr-namespace:DevExpress.Xpf.Reports.UserDesigner.PropertyGrid;assembly=DevExpress.Xpf.ReportDesigner.v24.1"
    xmlns:reportexplorer="clr-namespace:DevExpress.Xpf.Reports.UserDesigner.ReportExplorer;assembly=DevExpress.Xpf.ReportDesigner.v24.1"
    xmlns:reportexplorernative="clr-namespace:DevExpress.Xpf.Reports.UserDesigner.ReportExplorer.Native;assembly=DevExpress.Xpf.ReportDesigner.v24.1"
    xmlns:reportsdesign="clr-namespace:DevExpress.XtraReports.Design;assembly=DevExpress.XtraReports.v24.1"
    xmlns:reportsui="clr-namespace:DevExpress.XtraReports.UI;assembly=DevExpress.XtraReports.v24.1"
    xmlns:reportsuipivot="clr-namespace:DevExpress.XtraReports.UI.PivotGrid;assembly=DevExpress.XtraReports.v24.1"
    xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
    xmlns:smarttagsnative="clr-namespace:DevExpress.Xpf.Reports.UserDesigner.SmartTags.Native;assembly=DevExpress.Xpf.ReportDesigner.v24.1"
    xmlns:sql="clr-namespace:DevExpress.Xpf.DataAccess.Native.Sql;assembly=DevExpress.Xpf.DataAccess.v24.1"
    xmlns:sysdrawing="clr-namespace:System.Drawing;assembly=System.Drawing"
    xmlns:systemprinting="clr-namespace:System.Drawing.Printing;assembly=System.Drawing"
    xmlns:devexpressdrawingprinting="clr-namespace:DevExpress.Drawing.Printing;assembly=DevExpress.Drawing.v24.1"
    xmlns:udtb="clr-namespace:DevExpress.Xpf.Reports.UserDesigner.Toolbox;assembly=DevExpress.Xpf.ReportDesigner.v24.1"
    xmlns:udtbi="clr-namespace:DevExpress.Xpf.Reports.UserDesigner.Toolbox.Native;assembly=DevExpress.Xpf.ReportDesigner.v24.1"
    xmlns:utils="clr-namespace:DevExpress.Utils;assembly=DevExpress.Data.v24.1"
    xmlns:xpc="clr-namespace:DevExpress.XtraPrinting;assembly=DevExpress.Printing.v24.1.Core"
    xmlns:xpd="clr-namespace:DevExpress.XtraPrinting;assembly=DevExpress.Data.v24.1"
    xmlns:xpdr="clr-namespace:DevExpress.XtraPrinting.Drawing;assembly=DevExpress.Printing.v24.1.Core"
    xmlns:xrdiag="clr-namespace:DevExpress.Xpf.Reports.UserDesigner.XRDiagram;assembly=DevExpress.Xpf.ReportDesigner.v24.1"
    xmlns:xrp="clr-namespace:DevExpress.XtraReports.Parameters;assembly=DevExpress.Printing.v24.1.Core"
    xmlns:xtracharts="clr-namespace:DevExpress.XtraCharts;assembly=DevExpress.XtraCharts.v24.1"
    xmlns:native="http://schemas.devexpress.com/winfx/2008/xaml/reports/userdesigner/internal">

    <ResourceDictionary.MergedDictionaries>
        <dxi:ThemeResourceDictionary Path="ReportDesigner/Wizard.xaml" />
        <dxi:ThemeResourceDictionary Path="ReportDesigner/XRDiagram.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <dxei:HColorToZColorConverter x:Key="HColorToZColorConverter" />
    <dxei:ColorConverter x:Key="ColorConverter" />
    <dxei:ColorWithoutAlphaConverter x:Key="ColorWithoutAlphaConverter" />
    <dxei:ColorPickerColorModeTemplateSelector x:Key="ColorModeTemplateSelector" />
    <dx:EditorStringIdConverter x:Key="EditorStringIdConverter" />
    <dxrudi:SummaryPreviewDataToFormatDisplayTextConverter x:Key="summaryPreviewToTextConverter" />
    <dxrud:ReportDesignerDocumentViewKind x:Key="ReportDesignerDocumentViewKind_Designer">Designer</dxrud:ReportDesignerDocumentViewKind>
    <dxrud:ReportDesignerDocumentViewKind x:Key="ReportDesignerDocumentViewKind_ScriptEditor">ScriptEditor</dxrud:ReportDesignerDocumentViewKind>
    <dxrud:ReportDesignerDocumentViewKind x:Key="ReportDesignerDocumentViewKind_Preview">Preview</dxrud:ReportDesignerDocumentViewKind>
    <xrdiag:BandKindToHeaderColorConverter x:Key="BandKindToHeaderColorConverter" />
    <dxmvvm:ObjectToObjectConverter x:Key="tooltipVisibilityConverter" DefaultTarget="True">
        <dxmvvm:ObjectToObjectConverter.Map>
            <dxmvvm:MapItem Source="{x:Null}" Target="False" />
        </dxmvvm:ObjectToObjectConverter.Map>
    </dxmvvm:ObjectToObjectConverter>
    <dxmvvm:BooleanToObjectConverter x:Key="propertiesGlyphConverter" FalseValue="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PropertyGrid/Properties.svg'}" TrueValue="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PropertyGrid/FavoriteProperties.svg'}" />
    <DataTemplate x:Key="none">
        <dxei:TransparentBrushRectangle Height="21" Margin="1" />
    </DataTemplate>
    <ControlTemplate x:Key="colorChooserTemplate" TargetType="dxe:ColorChooser">
        <Grid Margin="{TemplateBinding Padding}" Background="Transparent">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <dx:DXBorder BorderBrush="#7F3C3C3C" BorderThickness="1">
                <Grid>
                    <Rectangle>
                        <Rectangle.Fill>
                            <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                <GradientStop Color="{Binding Path=HSBColor.H, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource HColorToZColorConverter}}" Offset="1" />
                                <GradientStop Color="#FFFFFFFF" Offset="0" />
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <Rectangle>
                        <Rectangle.Fill>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="Transparent" Offset="0" />
                                <GradientStop Color="Black" Offset="1" />
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <Canvas
                        x:Name="PART_ColorArea"
                        Background="Transparent"
                        VerticalAlignment="Stretch"
                        HorizontalAlignment="Stretch"
                        dx:FrameworkElementHelper.IsClipped="True">
                        <Canvas
                            x:Name="ColorCanvas"
                            Canvas.Left="{Binding Path=ActualXYThumbXOffset, RelativeSource={RelativeSource TemplatedParent}}"
                            Canvas.Top="{Binding Path=ActualXYThumbYOffset, RelativeSource={RelativeSource TemplatedParent}}"
                            Width="22"
                            Height="22">
                            <Rectangle
                                x:Name="RectangleColorCanvas"
                                Fill="Transparent"
                                Width="22"
                                Height="22" />
                            <Path
                                Canvas.Left="0"
                                Canvas.Top="9"
                                Stretch="Fill"
                                Fill="#FF000000"
                                Stroke="#FFFFFFFF"
                                Data="M0,9 L8,9"
                                Width="9"
                                Height="1" />
                            <Path
                                Canvas.Left="0"
                                Canvas.Top="10"
                                Stretch="Fill"
                                Fill="#FF000000"
                                Stroke="#FF000000"
                                Data="M0,10 L8,10"
                                Width="9"
                                Height="1" />
                            <Path
                                Canvas.Left="0"
                                Canvas.Top="11"
                                Stretch="Fill"
                                Fill="#FF000000"
                                Stroke="#FFFFFFFF"
                                Data="M0,11 L8,11"
                                Width="9"
                                Height="1" />
                            <Path
                                Canvas.Left="12"
                                Canvas.Top="9"
                                Stretch="Fill"
                                Fill="#FF000000"
                                Stroke="#FFFFFFFF"
                                Data="M0,9 L8,9"
                                Width="9"
                                Height="1" />
                            <Path
                                Canvas.Left="12"
                                Canvas.Top="10"
                                Stretch="Fill"
                                Fill="#FF000000"
                                Stroke="#FF000000"
                                Data="M0,10 L8,10"
                                Width="9"
                                Height="1" />
                            <Path
                                Canvas.Left="12"
                                Canvas.Top="11"
                                Stretch="Fill"
                                Fill="#FF000000"
                                Stroke="#FFFFFFFF"
                                Data="M0,11 L8,11"
                                Width="9"
                                Height="1" />
                            <Path
                                Canvas.Left="9"
                                Canvas.Top="0"
                                Stretch="Fill"
                                Fill="#FF000000"
                                Stroke="#FFFFFFFF"
                                Data="M9,0 L9,8"
                                Width="1"
                                Height="9" />
                            <Path
                                Canvas.Left="10"
                                Canvas.Top="0"
                                Stretch="Fill"
                                Fill="#FF000000"
                                Stroke="#FF000000"
                                Data="M10,0 L10,8"
                                Width="1"
                                Height="9" />
                            <Path
                                Canvas.Left="11"
                                Canvas.Top="0"
                                Stretch="Fill"
                                Fill="#FF000000"
                                Stroke="#FFFFFFFF"
                                Data="M11,0 L11,8"
                                Width="1"
                                Height="9" />
                            <Path
                                Canvas.Left="9"
                                Canvas.Top="12"
                                Stretch="Fill"
                                Fill="#FF000000"
                                Stroke="#FFFFFFFF"
                                Data="M9,0 L9,8"
                                Width="1"
                                Height="9" />
                            <Path
                                Canvas.Left="10"
                                Canvas.Top="12"
                                Stretch="Fill"
                                Fill="#FF000000"
                                Stroke="#FF000000"
                                Data="M10,0 L10,8"
                                Width="1"
                                Height="9" />
                            <Path
                                Canvas.Left="11"
                                Canvas.Top="12"
                                Stretch="Fill"
                                Fill="#FF000000"
                                Stroke="#FFFFFFFF"
                                Data="M11,0 L11,8"
                                Width="1"
                                Height="9" />
                        </Canvas>
                    </Canvas>
                </Grid>
            </dx:DXBorder>
            <dx:DXBorder
                Grid.Row="1"
                Grid.Column="0"
                Margin="0,3,0,0"
                Visibility="{Binding Path=ShowAlphaChannel, RelativeSource={RelativeSource TemplatedParent}, Converter={dx:BooleanToVisibilityConverter}}">
                <Grid Height="22">
                    <dxei:TransparentBrushRectangle
                        Grid.ColumnSpan="2"
                        HorizontalAlignment="Stretch"
                        dx:FocusHelper2.Focusable="False"
                        BlockWidth="4"
                        BlockHeight="4"
                        VerticalAlignment="Stretch" />
                    <Rectangle>
                        <Rectangle.Fill>
                            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                <GradientStop Color="{Binding Path=Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorWithoutAlphaConverter}}" Offset="0" />
                                <GradientStop Color="#00000000" Offset="1" />
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <Canvas x:Name="PART_AlphaChannelArea" Background="Transparent" dx:FrameworkElementHelper.IsClipped="True">
                        <Path
                            x:Name="PART_AlphaThumbTop"
                            Canvas.Left="{Binding Path=ActualAlphaThumbOffset, RelativeSource={RelativeSource TemplatedParent}}"
                            Data="M0,0 L10,0 5,5 z"
                            Fill="#FF000000"
                            Width="10"
                            Height="5"
                            IsHitTestVisible="False" />
                        <Path
                            x:Name="PART_AlphaThumbBottom"
                            Canvas.Left="{Binding Path=ActualAlphaThumbOffset, RelativeSource={RelativeSource TemplatedParent}}"
                            Canvas.Top="17"
                            Data="M0,5 L5,0 10,5 z"
                            Fill="#FF000000"
                            Width="10"
                            Height="5"
                            IsHitTestVisible="False" />
                    </Canvas>
                </Grid>
            </dx:DXBorder>

            <dx:DXBorder
                x:Name="Y"
                Grid.Row="0"
                Grid.Column="1"
                BorderBrush="#7F3C3C3C"
                BorderThickness="1"
                Margin="4,0,0,0"
                VerticalAlignment="Stretch">
                <Grid x:Name="YRoot" Width="22">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="3" />
                    </Grid.RowDefinitions>
                    <Rectangle x:Name="PART_ZColorAreaRect" Grid.RowSpan="2" StrokeThickness="0">
                        <Rectangle.Fill>
                            <LinearGradientBrush x:Name="zColor" EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop x:Name="zColor1" Color="#FFFF0000" Offset="0" />
                                <GradientStop x:Name="zColor2" Color="#FFFFFF00" Offset="0.166666" />
                                <GradientStop x:Name="zColor3" Color="#FF00FF00" Offset="0.333333" />
                                <GradientStop x:Name="zColor4" Color="#FF00FFFF" Offset="0.5" />
                                <GradientStop x:Name="zColor5" Color="#FF0000FF" Offset="0.666666" />
                                <GradientStop x:Name="zColor6" Color="#FFFF00FF" Offset="0.833333" />
                                <GradientStop x:Name="zColor7" Color="#FFFF0000" Offset="1" />
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <Canvas
                        x:Name="PART_ZColorArea"
                        Grid.Row="0"
                        Grid.RowSpan="2"
                        Background="Transparent"
                        dx:FrameworkElementHelper.IsClipped="True">
                        <Path
                            x:Name="PART_ZThumbLeft"
                            Canvas.Top="{Binding Path=ActualZThumbOffset, RelativeSource={RelativeSource TemplatedParent}}"
                            Data="M0,0 L5,5 0,10 z"
                            Fill="#FF000000"
                            Width="5"
                            Height="10"
                            IsHitTestVisible="False" />
                        <Path
                            x:Name="PART_ZThumbRight"
                            Canvas.Left="17"
                            Canvas.Top="{Binding Path=ActualZThumbOffset, RelativeSource={RelativeSource TemplatedParent}}"
                            Data="M 5,0 L0,5 5,10 z"
                            Fill="#FF000000"
                            Width="5"
                            Height="10"
                            IsHitTestVisible="False" />
                    </Canvas>
                </Grid>
            </dx:DXBorder>
            <Button
                Grid.Row="1"
                Grid.Column="1"
                Margin="4,4,0,1"
                Width="22"
                Height="22"
                Padding="0"
                HorizontalAlignment="Stretch"
                Command="{Binding Path=EnablePippetModeCommand, RelativeSource={RelativeSource TemplatedParent}}"
                VerticalAlignment="Stretch"
                Focusable="False">
                <Path
                    x:Name="Path"
                    Stretch="Fill"
                    Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}"
                    Data="F1 M 11.5,0C 12.8807,0 14,1.11929 14,2.5C 14,3.88071 12.8807,5 11.5,5C 11.1973,5 10.9071,4.94619 10.6386,4.84763C 10.8347,5.18696 11,5.59348 11,6C 11,7 10,7 10,7L 7,4C 7,4 7,3 8,3C 8.40652,3 8.81304,3.16526 9.15237,3.36141C 9.05381,3.09287 9,2.80272 9,2.5C 9,1.11929 10.1193,0 11.5,0 Z M 1,14C 1,14 1.58946e-007,14 1.58946e-007,13C 1.58946e-007,12 2,11 2,11L 2.06427,10.9357L 2,10.5C 2,9.83905 2.40643,9.19986 3,9L 7,5L 9,7L 5,11C 4.79414,11.5827 4.15319,12 3.5,12L 3.06427,11.9357L 3,12C 3,12 2,14 1,14 Z M 3.51888,11.1882C 3.70452,11.1882 3.87344,11.1166 4,11L 8,7L 7,6L 3.00041,10.0004C 2.88339,10.1266 2.81185,10.2955 2.81185,10.4811C 2.81185,10.8716 3.1284,11.1882 3.51888,11.1882 Z "
                    Width="14"
                    Height="14" />
            </Button>
            <StackPanel
                Grid.Row="0"
                Grid.Column="2"
                Visibility="{Binding Path=ActualShowEditors, RelativeSource={RelativeSource TemplatedParent}, Converter={dx:BooleanToVisibilityConverter}}"
                Orientation="Vertical"
                Margin="5,0,0,0"
                Width="85">
                <dxe:ComboBoxEdit
                    x:Name="PART_ColorModeComboBoxEdit"
                    ItemsSource="{dxei:ColorModeList}"
                    EditValue="{Binding Path=ColorMode, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    HorizontalAlignment="Stretch"
                    IsTextEditable="False"
                    ValueMember="Value"
                    DisplayMember="Text" />
                <dxei:ColorPickerDataContentPresenter
                    x:Name="PART_EditorsContentPresenter"
                    Content="{TemplateBinding ColorViewModel}"
                    HorizontalAlignment="Stretch"
                    ContentTemplateSelector="{StaticResource ColorModeTemplateSelector}" />
            </StackPanel>
            <dxe:TextEdit
                x:Name="PART_ResultColor"
                Grid.Row="1"
                Grid.Column="2"
                Visibility="{Binding Path=ActualShowEditors, RelativeSource={RelativeSource TemplatedParent}, Converter={dx:BooleanToVisibilityConverter}}"
                VerticalAlignment="Bottom"
                Width="85"
                ShowError="False"
                Margin="5,5,0,0"
                ValidateOnTextInput="False">
                <dxe:TextEdit.EditValue>
                    <MultiBinding Converter="{StaticResource ColorConverter}" UpdateSourceTrigger="PropertyChanged">
                        <Binding Path="Color" RelativeSource="{RelativeSource TemplatedParent}" Mode="TwoWay" />
                        <Binding Path="ShowAlphaChannel" RelativeSource="{RelativeSource TemplatedParent}" Mode="OneWay" />
                    </MultiBinding>
                </dxe:TextEdit.EditValue>
            </dxe:TextEdit>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter TargetName="ColorCanvas" Property="Width" Value="44" />
                <Setter TargetName="ColorCanvas" Property="Height" Value="44" />
                <Setter TargetName="YRoot" Property="Width" Value="44" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <DataTemplate x:Key="custom">
        <dxe:ColorChooser
            Padding="4"
            MinHeight="0"
            Height="140"
            Template="{StaticResource colorChooserTemplate}"
            Color="{Binding EditValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType=native:ColorUITypeEditor}}" />
        <!--<dxei:ColorPicker Padding="4" MinHeight="0" Height="140" ShowDefaultColor="False"
                      Color="{Binding Path=EditValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType=native:ColorUITypeEditor}}" />-->

    </DataTemplate>
    <DataTemplate x:Key="colors">
        <dxe:ListBoxEdit
            Margin="-1"
            ClipToBounds="True"
            ValueMember="Color"
            AllowNullInput="False"
            Background="Transparent"
            Height="142"
            ItemsSource="{x:Static native:ColorUITypeEditor.Colors}"
            EditValue="{Binding EditValue, RelativeSource={RelativeSource AncestorType=native:ColorUITypeEditor}}">
            <dxe:ListBoxEdit.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <dx:DXBorder
                            Width="30"
                            BorderBrush="DarkGray"
                            BorderThickness="1"
                            Margin="1,1,6,1"
                            Background="{Binding Color, Converter={native:ColorToSolidBrushConverter}}" />
                        <TextBlock Text="{Binding ColorName}" />
                    </StackPanel>
                </DataTemplate>
            </dxe:ListBoxEdit.ItemTemplate>
        </dxe:ListBoxEdit>
    </DataTemplate>
    <DataTemplate x:Key="systemcolors">
        <dxe:ListBoxEdit
            Margin="-1"
            ClipToBounds="True"
            ValueMember="Color"
            AllowNullInput="False"
            Background="Transparent"
            Height="142"
            ItemsSource="{x:Static native:ColorUITypeEditor.SystemColors}"
            EditValue="{Binding EditValue, RelativeSource={RelativeSource AncestorType=native:ColorUITypeEditor}}">
            <dxe:ListBoxEdit.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <dx:DXBorder
                            Width="30"
                            BorderBrush="DarkGray"
                            BorderThickness="1"
                            Margin="1,1,6,1"
                            Background="{Binding Color, Converter={native:ColorToSolidBrushConverter}}" />
                        <TextBlock Text="{Binding ColorName}" />
                    </StackPanel>
                </DataTemplate>
            </dxe:ListBoxEdit.ItemTemplate>
        </dxe:ListBoxEdit>
    </DataTemplate>
    <native:ColorTypeTemplateSelector
        x:Key="templateSelector"
        NoneTemplate="{StaticResource none}"
        CustomTemplate="{StaticResource custom}"
        ColorsTemplate="{StaticResource colors}"
        SystemColorsTemplate="{StaticResource systemcolors}" />
    <Style x:Key="ImageOpacityTrigger" TargetType="{x:Type Image}">
        <Setter Property="Image.Opacity" Value="0.5" />
        <Style.Triggers>
            <Trigger Property="Image.IsMouseOver" Value="True">
                <Setter Property="Image.Opacity" Value="1.0" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\BasicControls.xaml-->
    <ControlTemplate x:Key="flatbuttonTemplate" TargetType="dxrudi:FlatToggleButton">
        <Grid Background="Transparent">
            <dxb:ItemBorderControl
                x:Name="PART_Border"
                NormalTemplate="{DynamicResource {dxt:LWKey BarItemBorder.Normal}}"
                HoverTemplate="{DynamicResource {dxt:LWKey BarItemBorder.Hover}}"
                PressedTemplate="{DynamicResource {dxt:LWKey BarItemBorder.Pressed}}" />
            <ContentPresenter />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="PART_Border" Property="State" Value="{x:Static dxb:BorderState.Hover}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="PART_Border" Property="State" Value="{x:Static dxb:BorderState.Pressed}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\BasicControls.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\BindingsEditor.xaml-->
    <DataTemplate x:Key="expressionBindingTemplate">
        <dxe:ButtonEdit
            AllowDefaultButton="False"
            EditMode="InplaceActive"
            EditValue="{Binding Row.Expression, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            ValidateOnTextInput="False">
            <dxe:ButtonEdit.Buttons>
                <dxe:ButtonInfo Command="{Binding Path=(dxrude:BindingsEditor.Editor).RunExpressionEditorCommand, RelativeSource={RelativeSource Self}}" GlyphKind="Regular" />
            </dxe:ButtonEdit.Buttons>
        </dxe:ButtonEdit>
    </DataTemplate>

    <dxmvvm:ObjectToObjectConverter x:Key="colorTemplateSelector">
        <dxmvvm:ObjectToObjectConverter.DefaultTarget>
            <DataTemplate>
                <dxe:TextEdit EditValue="{Binding EditValue, UpdateSourceTrigger=PropertyChanged}" />
            </DataTemplate>
        </dxmvvm:ObjectToObjectConverter.DefaultTarget>
        <dxmvvm:MapItem Source="{x:Type sys:Int16}">
            <dxmvvm:MapItem.Target>
                <DataTemplate>
                    <dxe:SpinEdit
                        EditValue="{Binding EditValue, UpdateSourceTrigger=PropertyChanged}"
                        AllowDefaultButton="False"
                        IsFloatValue="False"
                        EditValueType="{Binding SelectedType}" />
                </DataTemplate>
            </dxmvvm:MapItem.Target>
        </dxmvvm:MapItem>
        <dxmvvm:MapItem Source="{x:Type sys:Int32}">
            <dxmvvm:MapItem.Target>
                <DataTemplate>
                    <dxe:SpinEdit
                        EditValue="{Binding EditValue, UpdateSourceTrigger=PropertyChanged}"
                        AllowDefaultButton="False"
                        IsFloatValue="False"
                        EditValueType="{Binding SelectedType}" />
                </DataTemplate>
            </dxmvvm:MapItem.Target>
        </dxmvvm:MapItem>
        <dxmvvm:MapItem Source="{x:Type sys:Int64}">
            <dxmvvm:MapItem.Target>
                <DataTemplate>
                    <dxe:SpinEdit
                        EditValue="{Binding EditValue, UpdateSourceTrigger=PropertyChanged}"
                        AllowDefaultButton="False"
                        IsFloatValue="False"
                        EditValueType="{Binding SelectedType}" />
                </DataTemplate>
            </dxmvvm:MapItem.Target>
        </dxmvvm:MapItem>
        <dxmvvm:MapItem Source="{x:Type sys:Single}">
            <dxmvvm:MapItem.Target>
                <DataTemplate>
                    <dxe:SpinEdit
                        EditValue="{Binding EditValue, UpdateSourceTrigger=PropertyChanged}"
                        AllowDefaultButton="False"
                        IsFloatValue="True"
                        EditValueType="{Binding SelectedType}" />
                </DataTemplate>
            </dxmvvm:MapItem.Target>
        </dxmvvm:MapItem>
        <dxmvvm:MapItem Source="{x:Type sys:Double}">
            <dxmvvm:MapItem.Target>
                <DataTemplate>
                    <dxe:SpinEdit
                        EditValue="{Binding EditValue, UpdateSourceTrigger=PropertyChanged}"
                        AllowDefaultButton="False"
                        IsFloatValue="True"
                        EditValueType="{Binding SelectedType}" />
                </DataTemplate>
            </dxmvvm:MapItem.Target>
        </dxmvvm:MapItem>
        <dxmvvm:MapItem Source="{x:Type sys:Byte}">
            <dxmvvm:MapItem.Target>
                <DataTemplate>
                    <dxe:SpinEdit
                        EditValue="{Binding EditValue, UpdateSourceTrigger=PropertyChanged}"
                        AllowDefaultButton="False"
                        IsFloatValue="False"
                        EditValueType="{Binding SelectedType}" />
                </DataTemplate>
            </dxmvvm:MapItem.Target>
        </dxmvvm:MapItem>
        <dxmvvm:MapItem Source="{x:Type sys:Decimal}">
            <dxmvvm:MapItem.Target>
                <DataTemplate>
                    <dxe:SpinEdit EditValue="{Binding EditValue, UpdateSourceTrigger=PropertyChanged}" AllowDefaultButton="False" />
                </DataTemplate>
            </dxmvvm:MapItem.Target>
        </dxmvvm:MapItem>
        <dxmvvm:MapItem Source="{x:Type sys:Char}">
            <dxmvvm:MapItem.Target>
                <DataTemplate>
                    <dxe:TextEdit EditValue="{Binding EditValue, UpdateSourceTrigger=PropertyChanged}" MaxLength="1" EditValueType="{Binding SelectedType}" />
                </DataTemplate>
            </dxmvvm:MapItem.Target>
        </dxmvvm:MapItem>
        <dxmvvm:MapItem Source="{x:Type sys:Boolean}">
            <dxmvvm:MapItem.Target>
                <DataTemplate>
                    <dxe:CheckEdit EditValue="{Binding EditValue, UpdateSourceTrigger=PropertyChanged}" />
                </DataTemplate>
            </dxmvvm:MapItem.Target>
        </dxmvvm:MapItem>
        <dxmvvm:MapItem Source="{x:Type sys:DateTime}">
            <dxmvvm:MapItem.Target>
                <DataTemplate>
                    <dxe:DateEdit EditValue="{Binding EditValue, UpdateSourceTrigger=PropertyChanged}" />
                </DataTemplate>
            </dxmvvm:MapItem.Target>
        </dxmvvm:MapItem>
    </dxmvvm:ObjectToObjectConverter>

    <DataTemplate x:Key="dataContainerBindingTemplate">
        <dxrude:PopupTreeListEdit
            ChildNodesSelector="{dxrude:DataMemberChildNodeSelector}"
            DisplayMember="FullDisplayName"
            EditMode="InplaceActive"
            EditValue="{Binding Row.DesignBinding, Converter={dxrudi:DesignBindingToBindingDataConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            HierarchicalPathProvider="{dxrude:BindingDataHierarchicalPathProvider}"
            ItemsSource="{Binding Path=(xrdiag:XtraReportDiagramItem.ReportModel).DataSources, RelativeSource={RelativeSource Self}}"
            PopupSelectionValidator="{dxrude:SimpleDataMemberPopupSelectionValidator}"
            Style="{StaticResource dataMemberPropertyEditorStyle}" />
    </DataTemplate>

    <DataTemplate x:Key="xrBindingTemplate">
        <dxrude:PopupTreeListEdit
            DisplayMember="FullDisplayName"
            EditMode="InplaceActive"
            EditValue="{Binding Row.DesignBinding, Converter={dxrudi:DesignBindingToBindingDataConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            Style="{DynamicResource {dxrudt:LWKey SmartTagEditors.DataBindingEditorStyle}}">
            <dxrude:PopupTreeListEdit.HierarchicalPathProvider>
                <MultiBinding Converter="{dxrudi:BindingModeToHierarchicalPathProviderConverter}">
                    <Binding Path="(xrdiag:XtraReportDiagramItem.ReportModel).DataBindingMode" RelativeSource="{RelativeSource Self}" />
                    <Binding Path="ItemsSource" RelativeSource="{RelativeSource Self}" />
                    <Binding Path="(xrdiag:XtraReportDiagramItem.ReportModel)" RelativeSource="{RelativeSource Self}" />
                </MultiBinding>
            </dxrude:PopupTreeListEdit.HierarchicalPathProvider>
        </dxrude:PopupTreeListEdit>
    </DataTemplate>

    <DataTemplate x:Key="crossTabFieldBindingTemplate">
        <dxrude:PopupTreeListEdit
            DisplayMember="DisplayName"
            EditMode="InplaceActive"
            PopupSelectionValidator="{dxrude:BindingDataPopupSelectionValidator CanSelectParameters=False}"
            Style="{DynamicResource {dxrudt:LWKey SmartTagEditors.DataBindingEditorStyle}}">
            <dxmvvm:Interaction.Behaviors>
                <dxrude:CrossTabFieldBindingEditorBehavior BindingMapInfo="{Binding Row}" />
            </dxmvvm:Interaction.Behaviors>
        </dxrude:PopupTreeListEdit>
    </DataTemplate>

    <dxrude:BindingEditorCellTemplateSelector
        x:Key="cellTemplateSelector"
        CrossTabFieldBinding="{StaticResource crossTabFieldBindingTemplate}"
        DataContainerBinding="{StaticResource dataContainerBindingTemplate}"
        ExpressionBinding="{StaticResource expressionBindingTemplate}"
        XRBinding="{StaticResource xrBindingTemplate}" />
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\BindingsEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\DataSourceParameterCollectionUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\DataSourceParameterCollectionUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\SingleSelectionCollectionEditor.xaml-->
    <DataTemplate x:Key="removeCollectionItemButtonTemplate">
        <Button
            Name="PART_RemoveButton"
            Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).RemoveCommand, RelativeSource={RelativeSource Self}}"
            CommandParameter="{Binding}"
            Style="{StaticResource collectionEditorListBoxItemRemoveButtonStyle}" />
    </DataTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\SingleSelectionCollectionEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\QueryCollectionEditorBase.xaml-->
    <Style x:Key="ItemsGridControlStyle" TargetType="dxg:GridControl">
        <Setter Property="ItemsSource" Value="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).EditableCollectionModel, RelativeSource={RelativeSource Self}}" />
        <Setter Property="SelectedItem" Value="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).SelectedItem, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxrudi:GridControlKeepFocusedRowOnUpdateBehavior />
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="_itemListTableViewStyle" TargetType="dxrudi:TableViewEx">
        <Setter Property="KeepViewportOnDataUpdate" Value="True" />
        <Setter Property="AutoWidth" Value="True" />
        <Setter Property="VerticalScrollbarVisibility" Value="Auto" />
        <Setter Property="ShowIndicator" Value="False" />
        <Setter Property="ShowGroupPanel" Value="False" />
        <Setter Property="ShowColumnHeaders" Value="False" />
        <Setter Property="AllowGrouping" Value="False" />
        <Setter Property="ShowVerticalLines" Value="False" />
        <Setter Property="ShowHorizontalLines" Value="False" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dxmvvm:EventToCommand Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).OnBeforeFocusRowCommand, RelativeSource={RelativeSource TemplatedParent}}" EventName="BeforeFocusRow" PassEventArgsToCommand="True" />
                        <dxrudi:TableViewDoubleClickEditingBehavior />
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <DataTemplate x:Key="gridColumnNameCellTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <dx:DXImage Width="16" Margin="4,0" Source="{Binding RowData.Row, Converter={dxrudi:QueryCollectionEditorItemIconConverter}}" />
            <dxe:TextEdit Name="PART_Editor" Grid.Column="1" />
            <Button
                Name="PART_CloneButton"
                Grid.Column="2"
                Margin="0,0,2,0"
                Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).CloneQueryCommand, RelativeSource={RelativeSource Self}}"
                Content="{dxrud:ReportDesignerResourceImage ResourceName=Images/SVG/EditGroup/Copy.svg}"
                Style="{StaticResource collectionEditorGridRowButtonStyle}" />
            <Button
                Name="PART_RemoveButton"
                Grid.Column="3"
                Margin="0,0,2,0"
                Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).RemoveCommand, RelativeSource={RelativeSource Self}}"
                Style="{StaticResource collectionEditorGridRowRemoveButtonStyle}" />
        </Grid>
    </DataTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\QueryCollectionEditorBase.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\XRControlParameterCollectionUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\XRControlParameterCollectionUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\ColorizerKeyCollectionUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\ColorizerKeyCollectionUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\FederatedQueryCollectionEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\FederatedQueryCollectionEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Extensions\ReportBehaviors\ReportServiceResources.xaml-->
    <DataTemplate x:Key="RenameDialogTemplate">
        <DockPanel>
            <StackPanel
                Margin="12"
                HorizontalAlignment="Right"
                DockPanel.Dock="Bottom"
                Orientation="Horizontal">
                <Button
                    MinWidth="65"
                    MinHeight="22"
                    Command="{Binding OKCommand}"
                    Content="{dx:DXMessageBoxStringId StringId=Ok}"
                    IsDefault="True"
                    IsEnabled="{Binding IsOKEnabled}" />
                <Button
                    MinWidth="65"
                    MinHeight="22"
                    Margin="6,0,0,0"
                    Command="{Binding CancelCommand}"
                    Content="{dx:DXMessageBoxStringId StringId=Cancel}"
                    IsCancel="True" />
            </StackPanel>
            <Grid Width="250" Height="25" Margin="10,10,10,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TextBlock Margin="0,0,10,0" VerticalAlignment="Center" Text="{dxp:PrintingStringId StringId=ReportBehavior_RenameDialogNameLabel}" />
                <dxe:TextEdit Grid.Column="1" VerticalAlignment="Center" EditValue="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <dxmvvm:Interaction.Behaviors>
                        <dxmvvm:FocusBehavior />
                    </dxmvvm:Interaction.Behaviors>
                </dxe:TextEdit>
            </Grid>
        </DockPanel>
    </DataTemplate>
    <DataTemplate x:Key="DeleteDialogTemplate">
        <DockPanel>
            <StackPanel
                Margin="12"
                HorizontalAlignment="Right"
                DockPanel.Dock="Bottom"
                Orientation="Horizontal">
                <Button
                    MinWidth="65"
                    MinHeight="22"
                    Command="{Binding OKCommand}"
                    Content="{dx:DXMessageBoxStringId StringId=Ok}"
                    IsDefault="True" />
                <Button
                    MinWidth="65"
                    MinHeight="22"
                    Margin="6,0,0,0"
                    Command="{Binding CancelCommand}"
                    Content="{dx:DXMessageBoxStringId StringId=Cancel}"
                    IsCancel="True" />
            </StackPanel>
            <StackPanel Margin="10,10,10,0" Orientation="Horizontal">
                <TextBlock Text="{Binding AreYouSureMessage}" />
            </StackPanel>
        </DockPanel>
    </DataTemplate>
    <Style x:Key="ReportServiceReportNameDialogWindowStyle" TargetType="dx:DXDialogWindow">
        <Setter Property="SizeToContent" Value="WidthAndHeight" />
        <Setter Property="ResizeMode" Value="NoResize" />
    </Style>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Extensions\ReportBehaviors\ReportServiceResources.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Extensions\ReportBehaviors\ReportThemeSelector.xaml-->
    <DataTemplate x:Key="PreviewTemplate">
        <Grid VerticalAlignment="Center" Background="White" UseLayoutRounding="True">
            <Grid.Resources>
                <DataTemplate x:Key="HeaderCellTemplate">
                    <dx:DXBorder BorderBrush="Black" BorderThickness="{Binding [BorderThickness]}">
                        <dx:DXBorder.Background>
                            <SolidColorBrush Color="{Binding DataContext.Shades.DarkColor2[1], RelativeSource={RelativeSource AncestorType=Grid}}" />
                        </dx:DXBorder.Background>
                        <TextBlock
                            Margin="3"
                            FontFamily="{Binding DataContext.Theme.Fonts.MajorFontSet.LatinTypeface, RelativeSource={RelativeSource AncestorType=Grid}}"
                            FontSize="16"
                            Text="{Binding [Text]}">
                            <TextBlock.Foreground>
                                <SolidColorBrush Color="{Binding DataContext.Shades.DarkColor2[0], RelativeSource={RelativeSource AncestorType=Grid}}" />
                            </TextBlock.Foreground>
                        </TextBlock>
                    </dx:DXBorder>
                </DataTemplate>
                <DataTemplate x:Key="EvenCellTemplate">
                    <dx:DXBorder BorderBrush="Black" BorderThickness="{Binding [BorderThickness]}">
                        <dx:DXBorder.Background>
                            <SolidColorBrush Color="{Binding DataContext.Shades.LightColor1[0], RelativeSource={RelativeSource AncestorType=Grid}}" />
                        </dx:DXBorder.Background>
                        <TextBlock
                            Margin="3"
                            FontFamily="{Binding DataContext.Theme.Fonts.MajorFontSet.LatinTypeface, RelativeSource={RelativeSource AncestorType=Grid}}"
                            FontSize="14"
                            Text="{Binding [Text]}">
                            <TextBlock.Foreground>
                                <SolidColorBrush Color="{Binding DataContext.Shades.DarkColor1[3], RelativeSource={RelativeSource AncestorType=Grid}}" />
                            </TextBlock.Foreground>
                        </TextBlock>
                    </dx:DXBorder>
                </DataTemplate>
                <DataTemplate x:Key="OddCellTemplate">
                    <dx:DXBorder BorderBrush="Black" BorderThickness="{Binding [BorderThickness]}">
                        <dx:DXBorder.Background>
                            <SolidColorBrush Color="{Binding DataContext.Shades.LightColor1[1], RelativeSource={RelativeSource AncestorType=Grid}}" />
                        </dx:DXBorder.Background>
                        <TextBlock
                            Margin="3"
                            FontFamily="{Binding DataContext.Theme.Fonts.MajorFontSet.LatinTypeface, RelativeSource={RelativeSource AncestorType=Grid}}"
                            FontSize="14"
                            Text="{Binding [Text]}">
                            <TextBlock.Foreground>
                                <SolidColorBrush Color="{Binding DataContext.Shades.DarkColor1[3], RelativeSource={RelativeSource AncestorType=Grid}}" />
                            </TextBlock.Foreground>
                        </TextBlock>
                    </dx:DXBorder>
                </DataTemplate>
                <DataTemplate x:Key="FooterCellTemplate">
                    <dx:DXBorder BorderBrush="Black" BorderThickness="{Binding [BorderThickness]}">
                        <dx:DXBorder.Background>
                            <SolidColorBrush Color="{Binding DataContext.Shades.DarkColor2[1], RelativeSource={RelativeSource AncestorType=Grid}}" />
                        </dx:DXBorder.Background>
                        <TextBlock
                            Margin="3"
                            FontFamily="{Binding DataContext.Theme.Fonts.MajorFontSet.LatinTypeface, RelativeSource={RelativeSource AncestorType=Grid}}"
                            FontSize="14"
                            Text="{Binding [Text]}">
                            <TextBlock.Foreground>
                                <SolidColorBrush Color="{Binding DataContext.Shades.DarkColor2[0], RelativeSource={RelativeSource AncestorType=Grid}}" />
                            </TextBlock.Foreground>
                        </TextBlock>
                    </dx:DXBorder>
                </DataTemplate>
            </Grid.Resources>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <ContentControl Grid.Row="0" Grid.Column="0" ContentTemplate="{StaticResource HeaderCellTemplate}">
                <ResourceDictionary>
                    <Thickness x:Key="BorderThickness">1,1,0,0</Thickness>
                </ResourceDictionary>
            </ContentControl>
            <ContentControl Grid.Row="0" Grid.Column="1" ContentTemplate="{StaticResource HeaderCellTemplate}">
                <ResourceDictionary>
                    <Thickness x:Key="BorderThickness">1,1,1,0</Thickness>
                    <sys:String x:Key="Text">City</sys:String>
                </ResourceDictionary>
            </ContentControl>

            <ContentControl Grid.Row="1" Grid.Column="0" ContentTemplate="{StaticResource EvenCellTemplate}">
                <ResourceDictionary>
                    <Thickness x:Key="BorderThickness">1,1,0,0</Thickness>
                </ResourceDictionary>
            </ContentControl>
            <ContentControl Grid.Row="1" Grid.Column="1" ContentTemplate="{StaticResource EvenCellTemplate}">
                <ResourceDictionary>
                    <Thickness x:Key="BorderThickness">1,1,1,0</Thickness>
                    <sys:String x:Key="Text">Los Angeles</sys:String>
                </ResourceDictionary>
            </ContentControl>

            <ContentControl Grid.Row="2" Grid.Column="0" ContentTemplate="{StaticResource OddCellTemplate}">
                <ResourceDictionary>
                    <Thickness x:Key="BorderThickness">1,1,0,0</Thickness>
                </ResourceDictionary>
            </ContentControl>
            <ContentControl Grid.Row="2" Grid.Column="1" ContentTemplate="{StaticResource OddCellTemplate}">
                <ResourceDictionary>
                    <Thickness x:Key="BorderThickness">1,1,1,0</Thickness>
                    <sys:String x:Key="Text">Arcadia</sys:String>
                </ResourceDictionary>
            </ContentControl>

            <ContentControl Grid.Row="5" Grid.Column="0" ContentTemplate="{StaticResource FooterCellTemplate}">
                <ResourceDictionary>
                    <Thickness x:Key="BorderThickness">0,1,0,1</Thickness>
                </ResourceDictionary>
            </ContentControl>
            <ContentControl Grid.Row="5" Grid.Column="1" ContentTemplate="{StaticResource FooterCellTemplate}">
                <ResourceDictionary>
                    <Thickness x:Key="BorderThickness">0,1,1,1</Thickness>
                    <sys:String x:Key="Text">Count 2</sys:String>
                </ResourceDictionary>
            </ContentControl>
        </Grid>
    </DataTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Extensions\ReportBehaviors\ReportThemeSelector.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\ImageResourcesCollectionUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\ImageResourcesCollectionUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\RangeStopsCollectionUIEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\RangeStopsCollectionUIEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\DataSourceQueryFilterStringEditor.xaml-->
    <ControlTemplate x:Key="legacyTemplate" TargetType="{x:Type dxrude:DataSourceQueryFilterStringEditor}">
        <Grid>
            <dxe:FilterControl
                x:Name="PART_FilterControl"
                FilterCriteria="{Binding FilterCriteria, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                ShowGroupCommandsIcon="{TemplateBinding ShowGroupCommandsIcon}"
                ShowOperandTypeIcon="{TemplateBinding ShowOperandTypeIcon}">
                <dxe:FilterControl.Resources>
                    <Style TargetType="{x:Type dxe:FilterControlClauseNode}">
                        <Setter Property="SecondOperandsOneTemplate" Value="{DynamicResource {dxdat:LWKey FilterStringEditor.QueryBuilderOneElementsInSecondOperandTemplate}}" />
                        <Setter Property="SecondOperandsTwoTemplate" Value="{DynamicResource {dxdat:LWKey FilterStringEditor.QueryBuilderTwoElementsInSecondOperandTemplate}}" />
                        <Setter Property="SecondOperandsSeveralTemplate" Value="{DynamicResource {dxdat:LWKey FilterStringEditor.QueryBuilderSeveralElementsInSecondOperandTemplate}}" />
                    </Style>
                </dxe:FilterControl.Resources>
                <dxmvvm:Interaction.Behaviors>
                    <dxe:FilterControlColumnsBehavior AdditionalProperties="{Binding AdditionalProperties, RelativeSource={RelativeSource TemplatedParent}}" HiddenProperties="{Binding HiddenProperties, RelativeSource={RelativeSource TemplatedParent}}" ObjectType="{Binding ObjectType, RelativeSource={RelativeSource TemplatedParent}}" />
                </dxmvvm:Interaction.Behaviors>
            </dxe:FilterControl>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="filterEditorTemplate" TargetType="{x:Type dxrude:DataSourceQueryFilterStringEditor}">
        <Grid>
            <dxfui:FilterEditorControl x:Name="PART_FilterControl" AddNewCriteriaToBottom="True" Context="{TemplateBinding FilterContext}">
                <dxfui:FilterEditorControl.Resources>
                    <DataTemplate x:Key="{dxgt:LWKey FilterEditor.CustomExpressionNodeBehaviorsTemplate}">
                        <ItemsControl>
                            <dxdai:FilterStringExpressionEditorDialogService DialogStyle="{StaticResource ExpressionEditorDialogStyle}" Parameters="{Binding Path=AssociatedObject.(dxdai:FilterStringUITypeEditorBase.Editor).FiltersView.ExistingParameters, RelativeSource={RelativeSource Self}}" />
                        </ItemsControl>
                    </DataTemplate>
                </dxfui:FilterEditorControl.Resources>
                <dxmvvm:Interaction.Behaviors>
                    <dxdai:FilterEditorControlCustomizationBehavior Parameters="{Binding Path=AssociatedObject.(dxdai:FilterStringUITypeEditorBase.Editor).FiltersView.ExistingParameters, RelativeSource={RelativeSource Self}}" />
                    <dxdai:FilterStringEditorGroupFieldsByTableBehavior />
                </dxmvvm:Interaction.Behaviors>
            </dxfui:FilterEditorControl>
        </Grid>
    </ControlTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\DataSourceQueryFilterStringEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\DialogEditorView.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\DialogEditorView.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\PdfSecurityOptionsUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\PdfSecurityOptionsUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\ReportFilterStringEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\ReportFilterStringEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\PivotGridPrefilterEditor.xaml-->
    <ControlTemplate x:Key="pivotPrefilterLegacy" TargetType="dxrude:PivotGridPrefilterEditor">
        <Grid>
            <dxe:FilterControl x:Name="PART_FilterControl" FilterCriteria="{Binding FilterCriteria, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SourceControl="{TemplateBinding SourceControl}" />
            <dx:DialogFooter>
                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                    <dx:DialogButton Command="{Binding ApplyFilterCommand, ElementName=PART_FilterControl}" DialogResult="OK" />
                    <dx:DialogButton DialogResult="Cancel" />
                </StackPanel>
            </dx:DialogFooter>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="template" TargetType="{x:Type dxrude:PivotGridPrefilterEditor}">
        <Grid>
            <dxfui:FilterEditorControl
                x:Name="PART_FilterControl"
                AddNewCriteriaToBottom="True"
                Context="{TemplateBinding FilterContext}"
                ShowCounts="False">
                <dxmvvm:Interaction.Behaviors>
                    <dxdai:FilterEditorControlCustomizationBehavior AllowColumnDataKind="False" AllowParameterDataKind="False" />
                </dxmvvm:Interaction.Behaviors>
            </dxfui:FilterEditorControl>
            <dx:DialogFooter>
                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                    <dx:DialogButton Command="{Binding Commands.ApplyFilter, ElementName=PART_FilterControl}" DialogResult="OK" />
                    <dx:DialogButton DialogResult="Cancel" />
                </StackPanel>
            </dx:DialogFooter>
        </Grid>
    </ControlTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\PivotGridPrefilterEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\ParametersFilterStringEditor.xaml-->
    <ControlTemplate x:Key="legacyFilterControlTemplate" TargetType="{x:Type dxrude:FilterStringEditorWithSourceControl}">
        <Grid>
            <dxe:FilterControl
                x:Name="PART_FilterControl"
                FilterCriteria="{Binding FilterCriteria, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                ShowGroupCommandsIcon="{TemplateBinding ShowGroupCommandsIcon}"
                ShowOperandTypeIcon="{TemplateBinding ShowOperandTypeIcon}"
                SourceControl="{TemplateBinding SourceControl}">
                <dxe:FilterControl.Resources>
                    <Style TargetType="{x:Type dxe1:FilterControlClauseNode}">
                        <Setter Property="SecondOperandsOneTemplate" Value="{DynamicResource {dxdat:LWKey FilterStringEditor.OneElementsInSecondOperandTemplate}}" />
                        <Setter Property="SecondOperandsTwoTemplate" Value="{DynamicResource {dxdat:LWKey FilterStringEditor.TwoElementsInSecondOperandTemplate}}" />
                        <Setter Property="SecondOperandsSeveralTemplate" Value="{DynamicResource {dxdat:LWKey FilterStringEditor.SeveralElementsInSecondOperandTemplate}}" />
                    </Style>
                </dxe:FilterControl.Resources>
            </dxe:FilterControl>
            <dx:DialogFooter>
                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                    <dx:DialogButton Command="{Binding ApplyFilterCommand, ElementName=PART_FilterControl}" DialogResult="OK" />
                    <dx:DialogButton DialogResult="Cancel" />
                </StackPanel>
            </dx:DialogFooter>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="filterControlTemplate" TargetType="{x:Type dxrude:FilterStringEditorWithSourceControl}">
        <Grid>
            <dxfui:FilterEditorControl
                x:Name="PART_FilterControl"
                AddNewCriteriaToBottom="True"
                Context="{TemplateBinding FilterContext}"
                ShowCounts="False">
                <dxfui:FilterEditorControl.Resources>
                    <DataTemplate x:Key="{dxgt:LWKey FilterEditor.CustomExpressionNodeBehaviorsTemplate}">
                        <ItemsControl>
                            <dxdai:FilterStringExpressionEditorDialogService DialogStyle="{StaticResource ExpressionEditorDialogStyle}" Parameters="{Binding Path=AssociatedObject.(dxdai:FilterStringUITypeEditorBase.Editor).Parameters, RelativeSource={RelativeSource Self}}" />
                        </ItemsControl>
                    </DataTemplate>
                </dxfui:FilterEditorControl.Resources>
                <dxmvvm:Interaction.Behaviors>
                    <dxdai:FilterEditorControlCustomizationBehavior Parameters="{Binding AssociatedObject.TemplatedParent.Parameters, RelativeSource={RelativeSource Self}}" SelectedParameter="{Binding AssociatedObject.TemplatedParent.SelectedParameter, RelativeSource={RelativeSource Self}}" />
                </dxmvvm:Interaction.Behaviors>
            </dxfui:FilterEditorControl>
            <dx:DialogFooter>
                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                    <dx:DialogButton Command="{Binding Commands.ApplyFilter, ElementName=PART_FilterControl}" DialogResult="OK" />
                    <dx:DialogButton DialogResult="Cancel" />
                </StackPanel>
            </dx:DialogFooter>
        </Grid>
    </ControlTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\ParametersFilterStringEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ExpressionEditorFieldListControl.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ExpressionEditorFieldListControl.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ReportDesignerDocumentationControl.xaml-->
    <Style x:Key="valuesItemStyle" TargetType="dxe:ListBoxEditItem">
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxmvvm:EventToCommand Command="{Binding ItemMouseDoubleClickCommand, RelativeSource={RelativeSource AncestorType=dxeei:DocumentationControl}}" EventName="MouseDoubleClick" />
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerExpressionEditor.Functions}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" MinWidth="150" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="*" MinWidth="150" />
            </Grid.ColumnDefinitions>
            <ContentControl Grid.Column="0" Content="{Binding Path=(dxeei:DocumentationControl.Editor).SelectedItem, RelativeSource={RelativeSource Self}}" ContentTemplate="{DynamicResource {dxeet:LWKey DocumentationControlTemplate.FieldsPlainDataTemplateKey}}" />
            <GridSplitter
                Grid.Column="1"
                Width="5"
                HorizontalAlignment="Center"
                VerticalAlignment="Stretch"
                Background="Transparent" />
            <ContentControl Grid.Column="2" Content="{x:Null}" ContentTemplate="{Binding Path=(dxeei:DocumentationControl.Editor).DescriptionBlockTemplate, RelativeSource={RelativeSource Self}}" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerExpressionEditor.Fields}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" MinWidth="150" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="*" MinWidth="150" />
            </Grid.ColumnDefinitions>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <dxrudfli:ExpressionEditorFieldListControl
                    x:Name="PART_FieldList"
                    Grid.Row="1"
                    ChildNodesSelector="{Binding Path=(dxrudei:ReportDesignerDocumentationControl.Editor).ChildNodesSelector, RelativeSource={RelativeSource Self}}"
                    Nodes="{Binding Path=(dxrudei:ReportDesignerDocumentationControl.Editor).FieldListNodes, RelativeSource={RelativeSource Self}}"
                    NodesClickCommand="{Binding Path=(dxrudei:ReportDesignerDocumentationControl.Editor).FieldListNodeClickCommand, RelativeSource={RelativeSource Self}}"
                    NodesDoubleClickCommand="{Binding Path=(dxrudei:ReportDesignerDocumentationControl.Editor).FieldListNodeDoubleClickCommand, RelativeSource={RelativeSource Self}}"
                    SelectedItem="{Binding Path=(dxrudei:ReportDesignerExpressionEditorControlBase.Editor).SelectedItem, RelativeSource={RelativeSource Self}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </Grid>

            <GridSplitter
                Grid.Column="1"
                Width="5"
                HorizontalAlignment="Center"
                VerticalAlignment="Stretch"
                Background="Transparent" />
            <ContentControl Grid.Column="2" Content="{x:Null}" ContentTemplate="{Binding Path=(dxeei:DocumentationControl.Editor).DescriptionBlockTemplate, RelativeSource={RelativeSource Self}}" />
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerExpressionEditor.ReportItems}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <dxg:GridSearchControl
                Name="PART_SearchControl"
                Margin="0,0,0,5"
                FindMode="Always"
                NullText="Enter text to search..."
                SearchTextPostDelay="0"
                ShowCloseButton="False"
                ShowFindButton="False"
                ShowMRUButton="False"
                ShowSearchPanelMode="Always"
                ShowSearchPanelNavigationButtons="False" />
            <dxg:TreeListControl Grid.Row="1" ItemsSource="{Binding Path=(dxrudei:ReportDesignerDocumentationControl.Editor).ReportItems, RelativeSource={RelativeSource Self}}" Style="{DynamicResource {dxrudt:LWKey ReportDesigner.FieldListStyle}}">
                <dxg:TreeListControl.View>
                    <dxg:TreeListView
                        Name="PART_TreeListView"
                        AllowDragDrop="False"
                        AllowEditing="False"
                        AutoWidth="True"
                        ChildNodesPath="ChildItems"
                        EnableDynamicLoading="False"
                        ExpandCollapseNodesOnNavigation="True"
                        NavigationStyle="Row"
                        SearchControl="{Binding ElementName=PART_SearchControl}"
                        ShowColumnHeaders="False"
                        ShowHorizontalLines="False"
                        ShowIndicator="False"
                        ShowSearchPanelMode="Never"
                        ShowVerticalLines="False"
                        Style="{StaticResource ReportDesignerFielsListControlStyleWithSearchPanel}"
                        TreeDerivationMode="ChildNodesSelector"
                        VerticalScrollbarVisibility="Auto">
                        <dxmvvm:Interaction.Behaviors>
                            <dxdai:ExpandTreeListNodeBehavior />
                        </dxmvvm:Interaction.Behaviors>
                    </dxg:TreeListView>
                </dxg:TreeListControl.View>
                <dxg:TreeListControl.Columns>
                    <dxg:TreeListColumn FieldName="Name">
                        <dxg:TreeListColumn.CellStyle>
                            <Style>
                                <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <ItemsControl>
                                                <dxrudfli:ExecuteCommandOnNodeClickBehavior DoubleClickCommand="{Binding ReportItemDoubleClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxrudei:ReportDesignerDocumentationControl}}}" Parameter="{Binding RowData.Row}" />
                                            </ItemsControl>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </dxg:TreeListColumn.CellStyle>
                        <dxg:TreeListColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Grid Margin="0,0,5,0" VerticalAlignment="Center">
                                        <dx:DXImage
                                            Width="{dxrudi:ThemeImageSize Size=16, TouchThemeSize=32}"
                                            Height="{dxrudi:ThemeImageSize Size=16, TouchThemeSize=32}"
                                            Source="{Binding RowData.Row.Icon}"
                                            Stretch="Fill" />
                                        <dx:DXImage
                                            Width="{dxrudi:ThemeImageSize Size=8, TouchThemeSize=16}"
                                            Height="{dxrudi:ThemeImageSize Size=10, TouchThemeSize=20}"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Bottom"
                                            Source="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/Misc/Bound.svg'}"
                                            Stretch="Fill"
                                            Visibility="{Binding Data.HasDataBindings, Converter={dxmvvm:BooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}" />
                                    </Grid>
                                    <TextBlock VerticalAlignment="Center" Text="{Binding Data.ControlName}" />
                                </StackPanel>
                            </DataTemplate>
                        </dxg:TreeListColumn.CellTemplate>
                    </dxg:TreeListColumn>
                </dxg:TreeListControl.Columns>
            </dxg:TreeListControl>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerExpressionEditor.Values}">
        <ContentControl
            Name="content"
            Grid.Column="0"
            Content="{Binding Path=(dxeei:DocumentationControl.Editor).SelectedItem, RelativeSource={RelativeSource Self}}"
            ContentTemplate="{DynamicResource {dxeet:LWKey DocumentationControlTemplate.FieldsPlainDataTemplateKey}}" />
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxee:ExpressionEditorControl.Editor).ResultType, RelativeSource={RelativeSource Self}}" Value="{x:Type sysdrawing:Color}">
                <Setter TargetName="content" Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <dxe:TextEdit
                                    x:Name="SearchBox"
                                    Margin="0,0,0,5"
                                    NullText="{Binding Source={StaticResource EditorStringIdConverter}, ConverterParameter=ExpressionEditor_FunctionsSearch_NullText, Converter={StaticResource EditorStringIdConverter}, Mode=OneTime}"
                                    ShowNullTextForEmptyValue="True" />
                                <dxeei:FunctionsListBox
                                    x:Name="PART_FunctionList"
                                    Grid.Row="1"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    dxmvvmi:InteractionHelper.EnableBehaviorsInDesignTime="True"
                                    AllowItemHighlighting="True"
                                    Focusable="False"
                                    ItemContainerStyle="{StaticResource valuesItemStyle}"
                                    ItemsSource="{Binding Path=(dxeei:DocumentationControl.Editor).OperatorsInfo, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                                    SelectedItem="{Binding Path=(dxeei:DocumentationControl.Editor).SelectedOperatorInfo, RelativeSource={RelativeSource Self}}"
                                    TextSearch.Text="{Binding ElementName=SearchBox, Path=Text}"
                                    TextSearch.TextPath="Name">
                                    <dxeei:FunctionsListBox.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <dx:DXBorder
                                                    Width="30"
                                                    Margin="1,1,6,1"
                                                    Background="{Binding Name, Converter={dxrudi:ExpressionColorNameToBrushConverter}}"
                                                    BorderBrush="DarkGray"
                                                    BorderThickness="1" />
                                                <TextBlock VerticalAlignment="Center" Text="{Binding}" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </dxeei:FunctionsListBox.ItemTemplate>
                                </dxeei:FunctionsListBox>
                            </Grid>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerExpressionEditor.Images}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <dxe:TextEdit
                x:Name="SearchBox"
                Margin="0,0,0,5"
                NullText="{Binding Source={StaticResource EditorStringIdConverter}, ConverterParameter=ExpressionEditor_FunctionsSearch_NullText, Converter={StaticResource EditorStringIdConverter}, Mode=OneTime}"
                ShowNullTextForEmptyValue="True" />
            <dxeei:FunctionsListBox
                x:Name="PART_FunctionList"
                Grid.Row="1"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                dxmvvmi:InteractionHelper.EnableBehaviorsInDesignTime="True"
                AllowItemHighlighting="True"
                Focusable="False"
                ItemContainerStyle="{StaticResource valuesItemStyle}"
                ItemsSource="{Binding Path=(dxeei:DocumentationControl.Editor).OperatorsInfo, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                SelectedItem="{Binding Path=(dxeei:DocumentationControl.Editor).SelectedOperatorInfo, RelativeSource={RelativeSource Self}}"
                TextSearch.Text="{Binding ElementName=SearchBox, Path=Text}"
                TextSearch.TextPath="Name">
                <dxeei:FunctionsListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <dx:DXImage Width="16" Source="{dx:SvgImageSource Uri={dx:ReportDesignerResource Images/Svg/Image.svg}}" />
                            <TextBlock VerticalAlignment="Center" Text="{Binding}" />
                        </StackPanel>
                    </DataTemplate>
                </dxeei:FunctionsListBox.ItemTemplate>
            </dxeei:FunctionsListBox>
            <dxrude:DesignerWinImageEdit
                Grid.RowSpan="2"
                Grid.Column="1"
                Margin="5,0,0,0"
                ImageSizeMode="{x:Static xpd:ImageSizeMode.Squeeze}"
                IsHitTestVisible="False"
                IsReadOnly="True">
                <dxrude:DesignerWinImageEdit.Source>
                    <MultiBinding Converter="{dxrudei:ColumnInfoToImageSourceConverter}">
                        <Binding ElementName="PART_FunctionList" Path="EditValue.Name" />
                        <Binding Path="ReportModel.XRObject" RelativeSource="{RelativeSource AncestorType={x:Type dxrudei:ReportExpressionEditorControl}}" />
                    </MultiBinding>
                </dxrude:DesignerWinImageEdit.Source>
            </dxrude:DesignerWinImageEdit>
        </Grid>
    </DataTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ReportDesignerDocumentationControl.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\ReportDesignerExpressionEditorControlBase.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\ReportDesignerExpressionEditorControlBase.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\FormatStringUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\FormatStringUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\BordersUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\BordersUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\TextEditOptionsEditorNameUITypeEditor.xaml-->
    <Style x:Key="TabItemStyle" TargetType="dx:DXTabItem">
        <Setter Property="Header" Value="{Binding Name}" />
        <Setter Property="Content" Value="{Binding}" />
    </Style>
    <DataTemplate x:Key="TabItemHeaderTemplate">
        <TextBlock FontWeight="Medium" Text="{Binding}" />
    </DataTemplate>
    <DataTemplate x:Key="TabItemContentTemplate">
        <dxe:ListBoxEdit
            AllowNullInput="True"
            DisplayMember="DisplayName"
            EditValue="{Binding Path=(dxrude:InplaceEditorPicker.Editor).CurrentInplaceEditorName, Mode=OneWay, RelativeSource={RelativeSource Self}}"
            ItemsSource="{Binding Items}"
            ValueMember="EditorName">
            <dxmvvm:Interaction.Behaviors>
                <dxmvvm:EventToCommand
                    Command="{Binding Path=AssociatedObject.(dxrude:InplaceEditorPicker.Editor).SelectEditorCommand, RelativeSource={RelativeSource Self}}"
                    EventArgsConverter="{dxrude:SelectionEventArgsToEditorNameConverter}"
                    EventName="EditValueChanged"
                    PassEventArgsToCommand="True" />
            </dxmvvm:Interaction.Behaviors>
        </dxe:ListBoxEdit>
    </DataTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\TextEditOptionsEditorNameUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\SubBandCollectionUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\SubBandCollectionUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\BandCollectionUITypeEditor.xaml-->
    <DataTemplate x:Key="BandDropDownTemplate">
        <ContentControl>
            <dxb:BarButtonItem Command="{Binding Command}" CommandParameter="{Binding BandKind}" Content="{Binding}">
                <dxb:BarButtonItem.ContentTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <dx:DXImage
                                Width="{dxrudi:ThemeImageSize Size=16, TouchThemeSize=32}"
                                Height="{dxrudi:ThemeImageSize Size=16, TouchThemeSize=32}"
                                Margin="0,0,5,0"
                                VerticalAlignment="Center"
                                Source="{Binding Icon}"
                                Stretch="Fill" />
                            <TextBlock Padding="0" VerticalAlignment="Center" Text="{Binding Name}" />
                        </StackPanel>
                    </DataTemplate>
                </dxb:BarButtonItem.ContentTemplate>
            </dxb:BarButtonItem>
        </ContentControl>
    </DataTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\BandCollectionUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\XRTableOfContentsLevelCollectionEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\XRTableOfContentsLevelCollectionEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\RecipientCollectionUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\RecipientCollectionUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\SeriesViewUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\SeriesViewUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\ChartTitleCollectionUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\ChartTitleCollectionUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\DataFilterCollectionUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\DataFilterCollectionUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\XRPivotGridFieldCollectionUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\XRPivotGridFieldCollectionUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\SeriesCollectionUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\SeriesCollectionUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\XRPivotGridCustomTotalCollectionEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\XRPivotGridCustomTotalCollectionEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\ParameterBindingCollectionUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\ParameterBindingCollectionUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\GroupFieldCollectionUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\GroupFieldCollectionUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\CalculatedFieldCollectionUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\CalculatedFieldCollectionUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\FormattingRulesUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\FormattingRulesUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\FormattingRuleSheetUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\FormattingRuleSheetUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\XRControlStyleSheetUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\XRControlStyleSheetUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\XYDiagramPaneCollectionUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\XYDiagramPaneCollectionUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\SecondaryAxesCollectionUITypeEditors.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\SecondaryAxesCollectionUITypeEditors.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\ScaleBreakCollectionUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\ScaleBreakCollectionUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\StripCollectionUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\StripCollectionUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\LegendCollectionUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\LegendCollectionUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\ConstantLineCollectionUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\ConstantLineCollectionUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\CustomAxisLabelCollectionUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\CustomAxisLabelCollectionUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\PaletteCollectionUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\PaletteCollectionUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\AnnotationCollectionUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\AnnotationCollectionUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\IndicatorTypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\IndicatorTypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\IndicatorCollectionUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\IndicatorCollectionUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\SeriesTitleCollectionUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\SeriesTitleCollectionUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\EFParameterCollectionUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\EFParameterCollectionUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\ReportExpressionCollectionEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\ReportExpressionCollectionEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\XRCrossTabEditors.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\XRCrossTabEditors.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\QueryParameterCollectionUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\QueryParameterCollectionUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\OLAPConnectionStringUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\OLAPConnectionStringUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\LookUpValuesEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\LookUpValuesEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\LocalizationCollectionEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\LocalizationCollectionEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\SqlQueryCollectionUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\SqlQueryCollectionUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\PivotGridFieldSortConditionEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\CollectionEditors\PivotGridFieldSortConditionEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\SummaryUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\SummaryUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\SummaryExpressionUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\SummaryExpressionUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\ItemPatternUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\ItemPatternUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\SortingSummaryUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\SortingSummaryUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\VisibilityInPanesUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\VisibilityInPanesUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\AnnotationItemKindUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\AnnotationItemKindUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ChartDesigner\ChartDesignerBaseStyles.xaml-->
    <Style x:Key="DXDialogWindowAddSeriesControlDialogStyle" BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="{x:Type dx:ThemedWindow}">
        <Setter Property="Width" Value="300" />
        <Setter Property="Height" Value="550" />
        <Setter Property="ResizeMode" Value="NoResize" />
    </Style>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ChartDesigner\ChartDesignerBaseStyles.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\AnnotationAnchorPointUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\AnnotationAnchorPointUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\SummaryFunctionUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\SummaryFunctionUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\StringCollectionEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\StringCollectionEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\SqlQueryUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\SqlQueryUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\QueryNodeUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\QueryNodeUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\SeriesPointUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\SeriesPointUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\TextAlignmentUITypeEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\TextAlignmentUITypeEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\Editors.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\Editors.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\ImageAlignmentEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\ImageAlignmentEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\ItemPatternEditors.xaml-->
    <DataTemplate x:Key="PatternEditorTemplate">
        <ContentControl>
            <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                <dxrudi:UITypeEditorDialogService.ViewTemplate>
                    <DataTemplate>
                        <propertyeditors:ItemPatternUITypeEditor EditValue="{Binding Value, Mode=TwoWay}" ItemPatternModel="{Binding Content}" />
                    </DataTemplate>
                </dxrudi:UITypeEditorDialogService.ViewTemplate>
                <dxrudi:UITypeEditorDialogService.DialogStyle>
                    <Style BasedOn="{StaticResource CustomFooterThemedWindowDialogStyle}" TargetType="{x:Type dx:ThemedWindow}">
                        <Setter Property="ResizeMode" Value="NoResize" />
                        <Setter Property="Width" Value="700" />
                        <Setter Property="Height" Value="450" />
                        <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=Chart_PatternEditor_Caption}" />
                    </Style>
                </dxrudi:UITypeEditorDialogService.DialogStyle>
            </dxrudi:UITypeEditorDialogService>
        </ContentControl>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.SeriesTextPattern}}">
        <dxprg:PropertyDefinition IsReadOnly="False" PostOnEditValueChanged="True">
            <dxprg:PropertyDefinition.CellTemplate>
                <DataTemplate>
                    <dxe:ButtonEdit x:Name="PART_Editor" AllowDefaultButton="False" IsTextEditable="True">
                        <dxe:ButtonEdit.Buttons>
                            <dxe:ButtonInfo GlyphKind="Regular">
                                <dxmvvm:Interaction.Behaviors>
                                    <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" DialogServiceTemplate="{StaticResource PatternEditorTemplate}">
                                        <dxe:DialogServiceEditorBehavior.Content>
                                            <MultiBinding Converter="{dxrudi:PropertyDataToPatternEditorModelConverter EditorKey={x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.SeriesTextPattern}}">
                                                <Binding Path="AssociatedObject.(dxrudi:PropertyGridHelper.SelectedObject)" RelativeSource="{RelativeSource Self}" />
                                                <Binding Path="AssociatedObject.(dxprg:PropertyGridHelper.RowData)" RelativeSource="{RelativeSource Self}" />
                                            </MultiBinding>
                                        </dxe:DialogServiceEditorBehavior.Content>
                                    </dxe:DialogServiceEditorBehavior>
                                </dxmvvm:Interaction.Behaviors>
                            </dxe:ButtonInfo>
                        </dxe:ButtonEdit.Buttons>
                    </dxe:ButtonEdit>
                </DataTemplate>
            </dxprg:PropertyDefinition.CellTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.SeriesLabelBaseTextPattern}}">
        <dxprg:PropertyDefinition IsReadOnly="False" PostOnEditValueChanged="True">
            <dxprg:PropertyDefinition.CellTemplate>
                <DataTemplate>
                    <dxe:ButtonEdit x:Name="PART_Editor" AllowDefaultButton="False" IsTextEditable="True">
                        <dxe:ButtonEdit.Buttons>
                            <dxe:ButtonInfo GlyphKind="Regular">
                                <dxmvvm:Interaction.Behaviors>
                                    <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" DialogServiceTemplate="{StaticResource PatternEditorTemplate}">
                                        <dxe:DialogServiceEditorBehavior.Content>
                                            <MultiBinding Converter="{dxrudi:PropertyDataToPatternEditorModelConverter EditorKey={x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.SeriesLabelBaseTextPattern}}">
                                                <Binding Path="AssociatedObject.(dxrudi:PropertyGridHelper.SelectedObject)" RelativeSource="{RelativeSource Self}" />
                                                <Binding Path="AssociatedObject.(dxprg:PropertyGridHelper.RowData)" RelativeSource="{RelativeSource Self}" />
                                            </MultiBinding>
                                        </dxe:DialogServiceEditorBehavior.Content>
                                    </dxe:DialogServiceEditorBehavior>
                                </dxmvvm:Interaction.Behaviors>
                            </dxe:ButtonInfo>
                        </dxe:ButtonEdit.Buttons>
                    </dxe:ButtonEdit>
                </DataTemplate>
            </dxprg:PropertyDefinition.CellTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.ColorizerTextPattern}}">
        <dxprg:PropertyDefinition IsReadOnly="False" PostOnEditValueChanged="True">
            <dxprg:PropertyDefinition.CellTemplate>
                <DataTemplate>
                    <dxe:ButtonEdit x:Name="PART_Editor" AllowDefaultButton="False" IsTextEditable="True">
                        <dxe:ButtonEdit.Buttons>
                            <dxe:ButtonInfo GlyphKind="Regular">
                                <dxmvvm:Interaction.Behaviors>
                                    <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" DialogServiceTemplate="{StaticResource PatternEditorTemplate}">
                                        <dxe:DialogServiceEditorBehavior.Content>
                                            <MultiBinding Converter="{dxrudi:PropertyDataToPatternEditorModelConverter EditorKey={x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.ColorizerTextPattern}}">
                                                <Binding Path="AssociatedObject.(dxprg:PropertyGridHelper.RowData).Parent.Value" RelativeSource="{RelativeSource Self}" />
                                                <Binding Path="AssociatedObject.(dxprg:PropertyGridHelper.RowData)" RelativeSource="{RelativeSource Self}" />
                                            </MultiBinding>
                                        </dxe:DialogServiceEditorBehavior.Content>
                                    </dxe:DialogServiceEditorBehavior>
                                </dxmvvm:Interaction.Behaviors>
                            </dxe:ButtonInfo>
                        </dxe:ButtonEdit.Buttons>
                    </dxe:ButtonEdit>
                </DataTemplate>
            </dxprg:PropertyDefinition.CellTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.CrossHairAxisLabelOptionsTextPattern}}">
        <dxprg:PropertyDefinition IsReadOnly="False" PostOnEditValueChanged="True">
            <dxprg:PropertyDefinition.CellTemplate>
                <DataTemplate>
                    <dxe:ButtonEdit x:Name="PART_Editor" AllowDefaultButton="False" IsTextEditable="True">
                        <dxe:ButtonEdit.Buttons>
                            <dxe:ButtonInfo GlyphKind="Regular">
                                <dxmvvm:Interaction.Behaviors>
                                    <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" DialogServiceTemplate="{StaticResource PatternEditorTemplate}">
                                        <dxe:DialogServiceEditorBehavior.Content>
                                            <MultiBinding Converter="{dxrudi:PropertyDataToPatternEditorModelConverter EditorKey={x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.CrossHairAxisLabelOptionsTextPattern}}">
                                                <Binding Path="AssociatedObject.(dxprg:PropertyGridHelper.RowData).Parent.Value" RelativeSource="{RelativeSource Self}" />
                                                <Binding Path="AssociatedObject.(dxprg:PropertyGridHelper.RowData)" RelativeSource="{RelativeSource Self}" />
                                            </MultiBinding>
                                        </dxe:DialogServiceEditorBehavior.Content>
                                    </dxe:DialogServiceEditorBehavior>
                                </dxmvvm:Interaction.Behaviors>
                            </dxe:ButtonInfo>
                        </dxe:ButtonEdit.Buttons>
                    </dxe:ButtonEdit>
                </DataTemplate>
            </dxprg:PropertyDefinition.CellTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.AxisLabelTextPattern}}">
        <dxprg:PropertyDefinition IsReadOnly="False" PostOnEditValueChanged="True">
            <dxprg:PropertyDefinition.CellTemplate>
                <DataTemplate>
                    <dxe:ButtonEdit x:Name="PART_Editor" AllowDefaultButton="False" IsTextEditable="True">
                        <dxe:ButtonEdit.Buttons>
                            <dxe:ButtonInfo GlyphKind="Regular">
                                <dxmvvm:Interaction.Behaviors>
                                    <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" DialogServiceTemplate="{StaticResource PatternEditorTemplate}">
                                        <dxe:DialogServiceEditorBehavior.Content>
                                            <MultiBinding Converter="{dxrudi:PropertyDataToPatternEditorModelConverter EditorKey={x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.AxisLabelTextPattern}}">
                                                <Binding Path="AssociatedObject.(dxprg:PropertyGridHelper.RowData).Parent.Value" RelativeSource="{RelativeSource Self}" />
                                                <Binding Path="AssociatedObject.(dxprg:PropertyGridHelper.RowData)" RelativeSource="{RelativeSource Self}" />
                                            </MultiBinding>
                                        </dxe:DialogServiceEditorBehavior.Content>
                                    </dxe:DialogServiceEditorBehavior>
                                </dxmvvm:Interaction.Behaviors>
                            </dxe:ButtonInfo>
                        </dxe:ButtonEdit.Buttons>
                    </dxe:ButtonEdit>
                </DataTemplate>
            </dxprg:PropertyDefinition.CellTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.CrossHairOptionsGroupHeaderTextPattern}}">
        <dxprg:PropertyDefinition IsReadOnly="False" PostOnEditValueChanged="True">
            <dxprg:PropertyDefinition.CellTemplate>
                <DataTemplate>
                    <dxe:ButtonEdit x:Name="PART_Editor" AllowDefaultButton="False" IsTextEditable="True">
                        <dxe:ButtonEdit.Buttons>
                            <dxe:ButtonInfo GlyphKind="Regular">
                                <dxmvvm:Interaction.Behaviors>
                                    <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" DialogServiceTemplate="{StaticResource PatternEditorTemplate}">
                                        <dxe:DialogServiceEditorBehavior.Content>
                                            <MultiBinding Converter="{dxrudi:PropertyDataToPatternEditorModelConverter EditorKey={x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.CrossHairOptionsGroupHeaderTextPattern}}">
                                                <Binding Path="AssociatedObject.(dxprg:PropertyGridHelper.RowData).Parent.Value" RelativeSource="{RelativeSource Self}" />
                                                <Binding Path="AssociatedObject.(dxprg:PropertyGridHelper.RowData)" RelativeSource="{RelativeSource Self}" />
                                            </MultiBinding>
                                        </dxe:DialogServiceEditorBehavior.Content>
                                    </dxe:DialogServiceEditorBehavior>
                                </dxmvvm:Interaction.Behaviors>
                            </dxe:ButtonInfo>
                        </dxe:ButtonEdit.Buttons>
                    </dxe:ButtonEdit>
                </DataTemplate>
            </dxprg:PropertyDefinition.CellTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.TotalLabelTextPattern}}">
        <dxprg:PropertyDefinition IsReadOnly="False" PostOnEditValueChanged="True">
            <dxprg:PropertyDefinition.CellTemplate>
                <DataTemplate>
                    <dxe:ButtonEdit x:Name="PART_Editor" AllowDefaultButton="False" IsTextEditable="True">
                        <dxe:ButtonEdit.Buttons>
                            <dxe:ButtonInfo GlyphKind="Regular">
                                <dxmvvm:Interaction.Behaviors>
                                    <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" DialogServiceTemplate="{StaticResource PatternEditorTemplate}">
                                        <dxe:DialogServiceEditorBehavior.Content>
                                            <MultiBinding Converter="{dxrudi:PropertyDataToPatternEditorModelConverter EditorKey={x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.TotalLabelTextPattern}}">
                                                <Binding Path="AssociatedObject.(dxprg:PropertyGridHelper.RowData).Parent.Value" RelativeSource="{RelativeSource Self}" />
                                                <Binding Path="AssociatedObject.(dxprg:PropertyGridHelper.RowData)" RelativeSource="{RelativeSource Self}" />
                                            </MultiBinding>
                                        </dxe:DialogServiceEditorBehavior.Content>
                                    </dxe:DialogServiceEditorBehavior>
                                </dxmvvm:Interaction.Behaviors>
                            </dxe:ButtonInfo>
                        </dxe:ButtonEdit.Buttons>
                    </dxe:ButtonEdit>
                </DataTemplate>
            </dxprg:PropertyDefinition.CellTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\ItemPatternEditors.xaml-->

    <!-- Winzard -->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ParameterEditor\ParameterEditorBaseStyles.xaml-->
    <Style x:Key="baseStyle" TargetType="FrameworkElement">
        <Setter Property="Margin" Value="4,4,0,4" />
    </Style>
    <Style x:Key="expressionEditorsStyle" TargetType="dxe:ButtonEdit">
        <Setter Property="InvalidValueBehavior" Value="WaitForValidValue" />
        <Setter Property="AllowDefaultButton" Value="False" />
        <Setter Property="ShowBorder" Value="True" />
        <Setter Property="ValidateOnEnterKeyPressed" Value="True" />
        <Setter Property="ValidateOnTextInput" Value="False" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dxmvvm:EventToCommand Command="{Binding ValidateExpressionCommand}" EventName="Validate" PassEventArgsToCommand="True" />
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="expressionModeToggleButton" TargetType="ToggleButton">
        <Setter Property="Grid.Column" Value="2" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Content" Value="{dxrud:ReportDesignerResourceImage ResourceName=Images/Expressions_gray.svg}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dx:DXImage Width="16" Source="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="expressionEditorButtonStyle" x:Shared="False" TargetType="{x:Type dxe:ButtonInfo}">
        <Setter Property="CommandParameter" Value="{Binding Path=(smarttagsnative:ExpressionDataExtensions.ExpressionPath), RelativeSource={RelativeSource Self}}" />
        <Setter Property="GlyphKind" Value="Regular" />
    </Style>
    <Style x:Key="labelColumn" TargetType="ColumnDefinition">
        <Setter Property="MaxWidth" Value="140" />
        <Setter Property="MinWidth" Value="100" />
        <Setter Property="SharedSizeGroup" Value="LabelSpace" />
        <Setter Property="Width" Value="auto" />
    </Style>



    <!-- begin Dynamic Values Resources -->
    <Style x:Key="dynamicListBaseStyle" TargetType="{x:Type dxrude:PopupTreeListEdit}">
        <Setter Property="ChildNodesPath" Value="Children" />
        <Setter Property="HierarchicalPathProvider" Value="{dxrude:BindingDataHierarchicalPathProvider}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Margin" Value="4,4,0,4" />
        <Setter Property="PopupDisplayMember" Value="DisplayName" />
        <Setter Property="PopupSelectionValidator" Value="{dxrude:BindingDataPopupSelectionValidator CanSelectParameters=True}" />
        <Setter Property="TreeListCellTemplate" Value="{DynamicResource {dxrudt:LWKey ReportDesigner.FieldListNodeTemplate}}" />
        <Setter Property="ValueMember" Value="BindingData" />
    </Style>

    <Style x:Key="ParameterDataSourceEditor" BasedOn="{StaticResource {x:Static xrdiag:XRDiagramControlBarItemNames.DataSource}}" TargetType="{x:Type dxrudi:ComboBoxEditEx}">
        <Setter Property="EditValue" Value="{Binding DataSource, UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="ItemsSource" Value="{Binding XtraReportDiagramItem.DataSources}" />
        <Setter Property="Margin" Value="0,4,0,4" />
        <Setter Property="Width" Value="NaN" />
        <Setter Property="PopupBottomAreaTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Grid x:Name="PART_Root" Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).PopupViewModel.FooterVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                        <ContentPresenter />
                        <ContentControl dx:FocusHelper2.Focusable="False" Template="{DynamicResource {dxt:LWKey PopupBaseEdit.FooterTemplate}}" />
                        <dx:UniformStackPanel
                            Width="Auto"
                            Margin="15,0,15,0"
                            HorizontalAlignment="Center"
                            ChildSpacing="0"
                            Orientation="Horizontal">
                            <Button
                                x:Name="PART_AddNewButton"
                                MinWidth="80"
                                Margin="3,6,3,6"
                                HorizontalAlignment="Left"
                                Style="{DynamicResource {dxt:LWKey PopupBaseEdit.AddNewButtonStyle}}">
                                <Button.Resources>
                                    <dx:EditorStringIdConverter x:Key="EditorStringIdConverter" />
                                </Button.Resources>
                                <dxmvvm:Interaction.Behaviors>
                                    <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" Content="{Binding Converter={dxrude:DynamicListViewToWizardDialogConverter}}" DialogServiceTemplate="{DynamicResource {dxrudt:LWKey ReportDesignerDialog.DataSourceWizardDialogTemplate}}" />
                                </dxmvvm:Interaction.Behaviors>
                            </Button>
                            <Button
                                MinWidth="80"
                                Margin="3,6,3,6"
                                HorizontalAlignment="Left"
                                Command="{Binding Path=(dxe:BaseEdit.OwnerEdit).SetNullValueCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{DynamicResource {dxt:LWKey PopupBaseEdit.NullValueButtonStyle}}" />
                        </dx:UniformStackPanel>
                        <dxe:PopupSizeGrip
                            x:Name="PART_SizeGrip"
                            Margin="2,3,2,2"
                            HorizontalAlignment="Right"
                            VerticalAlignment="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).ResizeGripViewModel.VerticalAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                            dx:FocusHelper2.Focusable="False"
                            Style="{DynamicResource {dxt:LWKey PopupBaseEdit.ResizeGripStyle}}"
                            Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).ResizeGripViewModel.Visibility, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ParameterFilterString" x:Shared="False" TargetType="{x:Type dxe:ButtonEdit}">
        <Setter Property="AllowDefaultButton" Value="False" />
        <Setter Property="Buttons">
            <Setter.Value>
                <dxe:ButtonInfoCollection>
                    <dxe:ButtonInfo GlyphKind="Regular" IsEnabled="{Binding CanEditFilterString}">
                        <dxmvvm:Interaction.Behaviors>
                            <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" Content="{Binding Converter={dxrude:DynamicListViewToPropertyEditorDataConverter}}" DialogServiceTemplate="{DynamicResource {dxrudt:LWKey ReportDesignerDialog.ParameterFilterStringEditorDialogTemplate}}" />
                        </dxmvvm:Interaction.Behaviors>
                    </dxe:ButtonInfo>
                </dxe:ButtonInfoCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="EditValue" Value="{Binding FilterString, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Margin" Value="0,0,0,8" />
    </Style>

    <!-- end -->

    <Style x:Key="labelStyles" BasedOn="{StaticResource baseStyle}" TargetType="TextBlock">
        <Setter Property="Padding" Value="0,4,4,0" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
        <Setter Property="VerticalAlignment" Value="Top" />
    </Style>

    <Style x:Key="groupLabelStyle" BasedOn="{StaticResource labelStyles}" TargetType="TextBlock">
        <Setter Property="Padding" Value="4,4,0,0" />
    </Style>

    <DataTemplate x:Key="staticListViewTemplate">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Style="{StaticResource labelColumn}" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <dxrudei:TextBlockEx Style="{StaticResource groupLabelStyle}" Text="{dxrudl:ReportDesignerStringId StringId=Properties_FilterString}" />
            <dxe:ButtonEdit Grid.Column="1" Margin="4,4,0,4" Style="{StaticResource ParameterFilterString}" />
            <dxg:GridControl
                Grid.Row="1"
                Grid.ColumnSpan="2"
                Height="212"
                Margin="8,4,0,0"
                ItemsSource="{Binding LookUpValueSource}"
                SelectedItem="{Binding SelectedLookUpValue, UpdateSourceTrigger=PropertyChanged}">
                <dxg:GridControl.Columns>
                    <dxg:GridColumn FieldName="Value" CellTemplate="{Binding ParameterType, Converter={dxrudei:ParameterTypeToCellEditorTemplateConverter}}" Header="{dxrudl:ReportDesignerStringId StringId=NewParameterEditor_Value}" />
                    <dxg:GridColumn FieldName="Description" Header="{dxrudl:ReportDesignerStringId StringId=NewParameterEditor_Description}">
                        <dxg:GridColumn.EditSettings>
                            <dxe:TextEditSettings />
                        </dxg:GridColumn.EditSettings>
                    </dxg:GridColumn>
                    <dxg:GridColumn Width="22" FixedWidth="True">
                        <dxg:GridColumn.CellTemplate>
                            <DataTemplate>
                                <Button Name="PART_RemoveButton" Command="{Binding View.DataContext.RemoveLookUpValueCommand}" Style="{StaticResource collectionEditorGridRowRemoveButtonStyle}" />
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding RowData.RowHandle.Value}" Value="{x:Static dxg:DataControlBase.NewItemRowHandle}">
                                        <Setter TargetName="PART_RemoveButton" Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </dxg:GridColumn.CellTemplate>
                    </dxg:GridColumn>
                </dxg:GridControl.Columns>
                <dxg:GridControl.View>
                    <dxg:TableView
                        AutoWidth="True"
                        NewItemRowPosition="Bottom"
                        ShowGroupPanel="False"
                        ShowIndicator="False"
                        VerticalScrollbarVisibility="Auto" />
                </dxg:GridControl.View>
            </dxg:GridControl>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="rangeBoundaryParameterTemplate">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Style="{StaticResource labelColumn}" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <TextBlock
                Grid.ColumnSpan="2"
                Margin="0,12,0,2"
                Padding="8,0,0,0"
                FontWeight="Bold"
                Opacity="0.5"
                Style="{StaticResource groupLabelStyle}"
                Text="Some text" />
            <dxrudei:TextBlockEx Grid.Row="1" Style="{StaticResource groupLabelStyle}" Text="{dxrudl:ReportDesignerStringId StringId=NewParameterEditor_Name}" />
            <dxrudei:TextBlockEx Grid.Row="2" Style="{StaticResource groupLabelStyle}" Text="{dxrudl:ReportDesignerStringId StringId=NewParameterEditor_Value}" />
            <dxe:TextEdit
                Grid.Row="1"
                Grid.Column="1"
                EditValue="{Binding Name, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                Style="{StaticResource baseStyle}">
                <dxmvvm:Interaction.Behaviors>
                    <dxmvvm:EventToCommand Command="{Binding ValidateParameterNameCommand}" EventName="Validate" PassEventArgsToCommand="True" />
                </dxmvvm:Interaction.Behaviors>
            </dxe:TextEdit>
            <Grid
                Name="valueEditorContainer"
                Grid.Row="5"
                Grid.Column="1"
                Margin="4,4,0,12">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="{Binding ActualHeight, ElementName=valueEditorContainer}" />
                </Grid.ColumnDefinitions>
                <ContentControl Visibility="{Binding ValueExpressionMode, Converter={dx:BooleanToVisibilityConverter Invert=True}}">
                    <ContentControl.Resources>
                        <sys:Boolean x:Key="falseValue">False</sys:Boolean>
                    </ContentControl.Resources>
                    <ContentControl.Content>
                        <MultiBinding Converter="{dxrudei:ParameterValueEditorSelector EditorValueProperty=Value}">
                            <Binding Path="Type" />
                            <Binding Source="{StaticResource falseValue}" />
                            <Binding Source="{StaticResource falseValue}" />
                        </MultiBinding>
                    </ContentControl.Content>
                </ContentControl>
                <dxe:ButtonEdit
                    smarttagsnative:ExpressionDataExtensions.ExpressionPath="Value"
                    AllowDefaultButton="False"
                    EditValue="{Binding Path=ValueExpression}"
                    InvalidValueBehavior="WaitForValidValue"
                    Style="{StaticResource expressionEditorsStyle}"
                    Visibility="{Binding ValueExpressionMode, Converter={dx:BooleanToVisibilityConverter}}">
                    <dxe:ButtonEdit.Buttons>
                        <dxe:ButtonInfo Command="{Binding ShowExpressionEditorCommand}" Style="{StaticResource expressionEditorButtonStyle}" />
                    </dxe:ButtonEdit.Buttons>
                </dxe:ButtonEdit>
                <ToggleButton IsChecked="{Binding ValueExpressionMode}" Style="{StaticResource expressionModeToggleButton}" />
            </Grid>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="rangeSourceViewTemplate">
        <dxlc:LayoutGroup VerticalAlignment="Top" Orientation="Vertical">
            <ContentControl Content="{Binding RangeStartParameterViewModel}" ContentTemplate="{StaticResource rangeBoundaryParameterTemplate}" />
            <ContentControl Content="{Binding RangeEndParameterViewModel}" ContentTemplate="{StaticResource rangeBoundaryParameterTemplate}" />
        </dxlc:LayoutGroup>
    </DataTemplate>

    <DataTemplate x:Key="dynamicListSourceViewTemplate">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Style="{StaticResource labelColumn}" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <dxrudei:TextBlockEx Style="{StaticResource groupLabelStyle}" Text="{dxrudl:ReportDesignerStringId StringId=Properties_DataSource}" />
            <dxrudei:TextBlockEx Grid.Row="1" Style="{StaticResource groupLabelStyle}" Text="{dxrudl:ReportDesignerStringId StringId=Properties_DataMember}" />
            <dxrudei:TextBlockEx Grid.Row="2" Style="{StaticResource groupLabelStyle}" Text="{dxrudl:ReportDesignerStringId StringId=Properties_ValueMember}" />
            <dxrudei:TextBlockEx Grid.Row="3" Style="{StaticResource groupLabelStyle}" Text="{dxrudl:ReportDesignerStringId StringId=Properties_DisplayMember}" />
            <dxrudei:TextBlockEx Grid.Row="4" Style="{StaticResource groupLabelStyle}" Text="{dxrudl:ReportDesignerStringId StringId=Properties_FilterString}" />
            <dxrudei:TextBlockEx Grid.Row="5" Style="{StaticResource groupLabelStyle}" Text="Sort Member" />
            <dxrudei:TextBlockEx Grid.Row="6" Style="{StaticResource groupLabelStyle}" Text="Sort Order" />
            <dxrudi:ComboBoxEditEx Grid.Column="1" Margin="4,4,0,4" Style="{StaticResource ParameterDataSourceEditor}" />
            <dxrude:PopupTreeListEdit
                Grid.Row="1"
                Grid.Column="1"
                DisplayMember="DataMember"
                EditValue="{Binding DataMember, UpdateSourceTrigger=PropertyChanged}"
                IsEnabled="{Binding CanEditDataProperties}"
                ItemsSource="{Binding DataMemberFieldListItemsSource}"
                PopupSelectionValidator="{Binding DataSource, Converter={dxrude:ObjectToNewParameterDataMemberPopupSelectionValidatorCovnerter}, UpdateSourceTrigger=PropertyChanged}"
                Style="{StaticResource dynamicListBaseStyle}" />
            <dxrude:PopupTreeListEdit
                Grid.Row="2"
                Grid.Column="1"
                DisplayMember="DisplayName"
                EditValue="{Binding ValueMember, UpdateSourceTrigger=PropertyChanged}"
                HierarchicalPathProvider="{Binding PathProvider}"
                IsEnabled="{Binding CanEditDataProperties}"
                ItemsSource="{Binding MemberFieldListItemsSource}"
                Style="{StaticResource dynamicListBaseStyle}" />
            <dxrude:PopupTreeListEdit
                Grid.Row="3"
                Grid.Column="1"
                DisplayMember="DisplayName"
                EditValue="{Binding DisplayMember, UpdateSourceTrigger=PropertyChanged}"
                HierarchicalPathProvider="{Binding PathProvider}"
                IsEnabled="{Binding CanEditDataProperties}"
                ItemsSource="{Binding MemberFieldListItemsSource}"
                Style="{StaticResource dynamicListBaseStyle}" />
            <dxe:ButtonEdit
                Grid.Row="4"
                Grid.Column="1"
                Margin="4,4,0,4"
                IsEnabled="{Binding CanEditDataProperties}"
                Style="{StaticResource ParameterFilterString}" />
            <dxrude:PopupTreeListEdit
                Grid.Row="5"
                Grid.Column="1"
                DisplayMember="DisplayName"
                EditValue="{Binding SortMember, UpdateSourceTrigger=PropertyChanged}"
                HierarchicalPathProvider="{Binding PathProvider}"
                IsEnabled="{Binding CanEditDataProperties}"
                ItemsSource="{Binding MemberFieldListItemsSource}"
                Style="{StaticResource dynamicListBaseStyle}" />
            <dxe:ComboBoxEdit
                Grid.Row="6"
                Grid.Column="1"
                Width="NaN"
                Margin="4,4,0,4"
                DisplayMember="Name"
                EditValue="{Binding SortOrder, UpdateSourceTrigger=PropertyChanged}"
                IsEnabled="{Binding CanEditDataProperties}"
                IsTextEditable="False"
                ItemsSource="{dxe:EnumItemsSource NameConverter={dxrudi:EnumToDisplayNameConverter}, EnumType={x:Type dxd:ColumnSortOrder}}"
                ValueMember="ID" />
        </Grid>
    </DataTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ParameterEditor\ParameterEditorBaseStyles.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ParameterEditor\ParameterEditorItemViewTemplate.xaml-->
    <dxrude:ValueSourceViewTemplateSelector
        x:Key="viewTemplateSelector"
        DynamicListSourceTemplate="{StaticResource dynamicListSourceViewTemplate}"
        RangeSourceTemplate="{StaticResource rangeSourceViewTemplate}"
        StaticListSourceTemplate="{StaticResource staticListViewTemplate}" />

    <DataTemplate x:Key="parameterItemViewTemplate">
        <Grid Grid.IsSharedSizeScope="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid Margin="0,0,12,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Style="{StaticResource labelColumn}" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <dxrudei:TextBlockEx Style="{StaticResource labelStyles}" Text="{dxrudl:ReportDesignerStringId StringId=NewParameterEditor_Name}" />
                <dxe:TextEdit
                    Name="part_nameEdit"
                    Grid.Column="1"
                    EditValue="{Binding Name, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                    Style="{StaticResource baseStyle}">
                    <dxmvvm:Interaction.Behaviors>
                        <dxmvvm:EventToCommand Command="{Binding ValidateParameterNameCommand}" EventName="Validate" PassEventArgsToCommand="True" />
                    </dxmvvm:Interaction.Behaviors>
                </dxe:TextEdit>


                <dxrudei:TextBlockEx Grid.Row="1" Style="{StaticResource labelStyles}" Text="{dxrudl:ReportDesignerStringId StringId=NewParameterEditor_Description}" />
                <dxe:TextEdit
                    Grid.Row="1"
                    Grid.Column="1"
                    Grid.ColumnSpan="2"
                    EditValue="{Binding Description}"
                    Style="{StaticResource baseStyle}" />


                <dxrudei:TextBlockEx
                    Grid.Row="2"
                    Style="{StaticResource labelStyles}"
                    Text="{dxrudl:ReportDesignerStringId StringId=NewParameterEditor_GroupOrientation}"
                    Visibility="{Binding AllowEditOrientation, Converter={dx:BooleanToVisibilityConverter}}" />
                <dxe:ComboBoxEdit
                    Grid.Row="2"
                    Grid.Column="1"
                    DisplayMember="DisplayText"
                    EditValue="{Binding LabelOrientation, UpdateSourceTrigger=PropertyChanged}"
                    IsTextEditable="False"
                    ItemsSource="{Binding OrientationValuesSource}"
                    Style="{StaticResource baseStyle}"
                    ValueMember="Value"
                    Visibility="{Binding AllowEditOrientation, Converter={dx:BooleanToVisibilityConverter}}" />


                <!-- begin Visible -->
                <dxrudei:TextBlockEx Grid.Row="3" Style="{StaticResource labelStyles}" Text="{dxrudi:XRPropertyDisplayName Type={x:Type xrp:Parameter}, PropertyName=Visible}" />
                <Grid
                    Name="visibleEditorContainer"
                    Grid.Row="3"
                    Grid.Column="1"
                    Margin="4,4,0,4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="4" />
                        <ColumnDefinition Width="{Binding ActualHeight, ElementName=visibleEditorContainer}" />
                    </Grid.ColumnDefinitions>
                    <dxe:ComboBoxEdit
                        DisplayMember="DisplayText"
                        EditValue="{Binding Visible}"
                        ItemsSource="{Binding VisibleValuesSource}"
                        ValueMember="Value"
                        Visibility="{Binding VisibleExpressionMode, Converter={dx:BooleanToVisibilityConverter Invert=True}}" />
                    <dxe:ButtonEdit
                        smarttagsnative:ExpressionDataExtensions.ExpressionPath="Visible"
                        EditValue="{Binding Path=VisibleExpression}"
                        Style="{StaticResource expressionEditorsStyle}"
                        Visibility="{Binding VisibleExpressionMode, Converter={dx:BooleanToVisibilityConverter}}">
                        <dxe:ButtonEdit.Buttons>
                            <dxe:ButtonInfo Command="{Binding ShowExpressionEditorCommand}" Style="{StaticResource expressionEditorButtonStyle}" />
                        </dxe:ButtonEdit.Buttons>
                    </dxe:ButtonEdit>
                    <ToggleButton IsChecked="{Binding VisibleExpressionMode}" Style="{StaticResource expressionModeToggleButton}" />
                </Grid>

                <!-- end -->

                <!-- begin Enabled -->
                <dxrudei:TextBlockEx Grid.Row="4" Style="{StaticResource labelStyles}" Text="{dxrudi:XRPropertyDisplayName Type={x:Type xrp:Parameter}, PropertyName=Enabled}" />
                <Grid
                    Name="enableEditorContainer"
                    Grid.Row="4"
                    Grid.Column="1"
                    Margin="4,4,0,12">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="4" />
                        <ColumnDefinition Width="{Binding ActualHeight, ElementName=enableEditorContainer}" />
                    </Grid.ColumnDefinitions>
                    <dxe:ComboBoxEdit
                        DisplayMember="DisplayText"
                        EditValue="{Binding Enabled}"
                        ItemsSource="{Binding EnabledValuesSource}"
                        ValueMember="Value"
                        Visibility="{Binding EnabledExpressionMode, Converter={dx:BooleanToVisibilityConverter Invert=True}}" />
                    <dxe:ButtonEdit
                        smarttagsnative:ExpressionDataExtensions.ExpressionPath="Enabled"
                        EditValue="{Binding Path=EnabledExpression}"
                        Style="{StaticResource expressionEditorsStyle}"
                        Visibility="{Binding EnabledExpressionMode, Converter={dx:BooleanToVisibilityConverter}}">
                        <dxe:ButtonEdit.Buttons>
                            <dxe:ButtonInfo Command="{Binding ShowExpressionEditorCommand}" Style="{StaticResource expressionEditorButtonStyle}" />
                        </dxe:ButtonEdit.Buttons>
                    </dxe:ButtonEdit>
                    <ToggleButton IsChecked="{Binding EnabledExpressionMode}" Style="{StaticResource expressionModeToggleButton}" />
                </Grid>
                <!-- end -->

                <dxrudei:TextBlockEx Grid.Row="5" Style="{StaticResource labelStyles}" Text="{dxrudl:ReportDesignerStringId StringId=NewParameterEditor_Type}" />
                <dxe:ComboBoxEdit
                    Grid.Row="5"
                    Grid.Column="1"
                    DisplayMember="DisplayText"
                    EditValue="{Binding Type, UpdateSourceTrigger=PropertyChanged}"
                    IsEnabled="{Binding AllowChangeTypeEnabled}"
                    IsTextEditable="False"
                    ItemsSource="{Binding TypeValuesSource}"
                    Style="{StaticResource baseStyle}"
                    ValueMember="Value" />

                <!-- begin Value -->
                <dxrudei:TextBlockEx Grid.Row="6" Style="{StaticResource labelStyles}" Text="{dxrudl:ReportDesignerStringId StringId=NewParameterEditor_DefaultValue}" />
                <Grid
                    Name="valueEditorContainer"
                    Grid.Row="6"
                    Grid.Column="1"
                    Margin="4,4,0,12"
                    IsEnabled="{Binding AllowEditValueEnabled}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="4" />
                        <ColumnDefinition Width="{Binding ActualHeight, ElementName=enableEditorContainer}" />
                    </Grid.ColumnDefinitions>
                    <ContentControl Visibility="{Binding ValueExpressionMode, Converter={dx:BooleanToVisibilityConverter Invert=True}}">
                        <ContentControl.Content>
                            <MultiBinding Converter="{dxrudei:ParameterValueEditorSelector EditorValueProperty=Value}">
                                <Binding Path="Type" />
                                <Binding Path="AllowMultipleValues" />
                                <Binding Path="AllowNullValue" />
                            </MultiBinding>
                        </ContentControl.Content>
                    </ContentControl>
                    <dxe:ButtonEdit
                        smarttagsnative:ExpressionDataExtensions.ExpressionPath="Value"
                        EditValue="{Binding Path=ValueExpression}"
                        Style="{StaticResource expressionEditorsStyle}"
                        Visibility="{Binding ValueExpressionMode, Converter={dx:BooleanToVisibilityConverter}}">
                        <dxe:ButtonEdit.Buttons>
                            <dxe:ButtonInfo Command="{Binding ShowExpressionEditorCommand}" Style="{StaticResource expressionEditorButtonStyle}" />
                        </dxe:ButtonEdit.Buttons>
                    </dxe:ButtonEdit>
                    <ToggleButton IsChecked="{Binding ValueExpressionMode}" Style="{StaticResource expressionModeToggleButton}" />
                </Grid>
                <!-- end -->

                <dxe:CheckEdit
                    Grid.Row="9"
                    Grid.Column="1"
                    Grid.ColumnSpan="2"
                    Margin="4,0,0,0"
                    Content="{dxrudl:ReportDesignerStringId StringId=NewParameterEditor_AllowNull}"
                    EditValue="{Binding AllowNullValue}"
                    IsEnabled="{Binding AllowNullValueValueEnabled}" />
                <dxe:CheckEdit
                    Grid.Row="7"
                    Grid.Column="1"
                    Grid.ColumnSpan="2"
                    Margin="4,0,0,0"
                    Content="{dxrudl:ReportDesignerStringId StringId=NewParameterEditor_AllowMultipleValues}"
                    EditValue="{Binding AllowMultipleValues}"
                    IsEnabled="{Binding AllowMultipleValueEnabled}" />
                <dxe:CheckEdit
                    Grid.Row="8"
                    Grid.Column="1"
                    Grid.ColumnSpan="2"
                    Margin="4,0,0,0"
                    Content="{dxrudl:ReportDesignerStringId StringId=NewParameterEditor_SelectAllValues}"
                    EditValue="{Binding SelectAllValues}"
                    IsEnabled="{Binding SelectAllValueEnabled}" />
            </Grid>
            <Grid Grid.Column="1" Margin="12,0,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Style="{StaticResource labelColumn}" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <dxrudei:TextBlockEx Style="{StaticResource groupLabelStyle}" Text="Value source" />
                <!-- TODO -->
                <dxe:ComboBoxEdit
                    Grid.Column="1"
                    Margin="4,4,0,4"
                    DisplayMember="DisplayText"
                    EditValue="{Binding ValueSource, UpdateSourceTrigger=PropertyChanged}"
                    IsTextEditable="False"
                    ItemsSource="{Binding ValueSourceSettingsTypeValuesSource}"
                    ShowNullTextForEmptyValue="True"
                    Style="{StaticResource baseStyle}"
                    ValueMember="Value" />
                <ContentControl
                    Grid.Row="1"
                    Grid.ColumnSpan="2"
                    Content="{Binding ValueSourceView}"
                    ContentTemplateSelector="{StaticResource viewTemplateSelector}"
                    IsEnabled="{Binding Visible}" />
            </Grid>
        </Grid>
    </DataTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ParameterEditor\ParameterEditorItemViewTemplate.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ParameterEditor\ReportParameterCollectionEditorControl.xaml-->
    <DataTemplate x:Key="placeHolderTemplate">
        <TextBlock Text="{Binding Text}" />
    </DataTemplate>


    <DataTemplate x:Key="groupItemViewTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid Margin="0,0,12,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Style="{StaticResource labelColumn}" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>

                <dxrudei:TextBlockEx Style="{StaticResource labelStyles}" Text="{dxrudl:ReportDesignerStringId StringId=NewParameterEditor_GroupTitle}" />
                <dxe:TextEdit
                    Grid.Column="1"
                    EditValue="{Binding Title, UpdateSourceTrigger=PropertyChanged}"
                    IsEnabled="{Binding TitleEnabled}"
                    Style="{StaticResource baseStyle}" />
                <dxrudei:TextBlockEx Grid.Row="1" Style="{StaticResource labelStyles}" Text="{dxrudl:ReportDesignerStringId StringId=NewParameterEditor_GroupOrientation}" />
                <dxe:ComboBoxEdit
                    Grid.Row="1"
                    Grid.Column="1"
                    DisplayMember="DisplayText"
                    EditValue="{Binding Orientation, UpdateSourceTrigger=PropertyChanged}"
                    IsTextEditable="False"
                    ItemsSource="{Binding OrientationValuesSource}"
                    Style="{StaticResource baseStyle}"
                    ValueMember="Value" />
                <dxe:CheckEdit
                    Grid.Row="3"
                    Grid.Column="1"
                    Grid.ColumnSpan="2"
                    Margin="4,0,0,0"
                    Content="{dxrudl:ReportDesignerStringId StringId=NewParameterEditor_GroupExpanded}"
                    EditValue="{Binding Expanded}"
                    IsEnabled="{Binding ExpandButtonEnabled}" />
                <dxe:CheckEdit
                    Grid.Row="2"
                    Grid.Column="1"
                    Grid.ColumnSpan="2"
                    Margin="4,0,0,0"
                    Content="{dxrudl:ReportDesignerStringId StringId=NewParameterEditor_GroupShowExpandButton}"
                    EditValue="{Binding ShowExpandButton}"
                    IsEnabled="{Binding ShowExpandButtonEnabled}" />
                <dxe:CheckEdit
                    Grid.Row="4"
                    Grid.Column="1"
                    Grid.ColumnSpan="2"
                    Margin="4,0,0,0"
                    Content="{dxrudl:ReportDesignerStringId StringId=NewParameterEditor_GroupTitleVisible}"
                    EditValue="{Binding TitleVisible}"
                    IsEnabled="{Binding TitleVisibleEnabled}" />
                <dxe:CheckEdit
                    Grid.Row="5"
                    Grid.Column="1"
                    Grid.ColumnSpan="2"
                    Margin="4,0,0,0"
                    Content="{dxrudl:ReportDesignerStringId StringId=NewParameterEditor_GroupBorderVisible}"
                    EditValue="{Binding BorderVisible}" />

            </Grid>
        </Grid>
    </DataTemplate>

    <dxrude:ViewTemplateSelector
        x:Key="viewContentTemplateSelector"
        GroupItemTemplate="{StaticResource groupItemViewTemplate}"
        ParameterItemTemplate="{StaticResource parameterItemViewTemplate}"
        PlaceHolderItemTemplate="{StaticResource placeHolderTemplate}"
        SeparatorItemTemplate="{StaticResource placeHolderTemplate}" />
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ParameterEditor\ReportParameterCollectionEditorControl.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ParameterEditor\ReportParameterEditorControl.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ParameterEditor\ReportParameterEditorControl.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ErrorPanelControl.xaml-->
    <DataTemplate x:Key="codeTextTemplate">
        <dxe:TextEdit Name="PART_Editor" />
    </DataTemplate>
    <DataTemplate x:Key="codeHyperlinkTemplate">
        <dxe:HyperlinkEdit Name="PART_Editor" Command="{Binding Path=(dxrudep:ErrorPanelControl.Editor).NavigateByCodeCommand, RelativeSource={RelativeSource Mode=Self}}" CommandParameter="{Binding RowData.Row}" />
    </DataTemplate>


    <dxmvvm:BooleanToObjectConverter x:Key="codeEditorTemplateConverter" FalseValue="{StaticResource codeTextTemplate}" TrueValue="{StaticResource codeHyperlinkTemplate}" />
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ErrorPanelControl.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\FavoritePropertiesEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\FavoritePropertiesEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\StyleGalleryItem.xaml-->
    <DataTemplate x:Key="ItemTemplate">
        <ContentControl>
            <dxb:GalleryItem Caption="{Binding}" />
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="ItemCaptionTemplate">
        <Grid Height="59" MaxWidth="80" VerticalAlignment="Stretch">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>
            <dx:DXBorder Margin="2" Background="{Binding BackColor}" BorderThickness="{Binding BorderThickness}">
                <dx:DXBorder.BorderBrush>
                    <VisualBrush>
                        <VisualBrush.Visual>
                            <Grid Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualWidth, FallbackValue=0}" Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualHeight, FallbackValue=0}">
                                <Rectangle Fill="{Binding BackColor}" />
                                <Rectangle Stroke="{Binding BorderColor}" StrokeDashArray="{Binding BorderDashStyle}" StrokeThickness="{Binding BorderWidth}" />
                            </Grid>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </dx:DXBorder.BorderBrush>
            </dx:DXBorder>
            <dx:DXBorder Margin="2">
                <TextBlock
                    Grid.Row="0"
                    Width="500"
                    Margin="{Binding Padding}"
                    HorizontalAlignment="{Binding HorizontalAlignment}"
                    VerticalAlignment="{Binding VerticalTextAlignment}"
                    Background="Transparent"
                    FontFamily="{Binding FontFamily}"
                    FontSize="{Binding FontSize}"
                    FontStyle="{Binding Italic}"
                    FontWeight="{Binding Bold}"
                    Foreground="{Binding ForeColor}"
                    Text="Aa Bb Cc Dd Ee Ff Gg Hh Ii"
                    TextAlignment="{Binding HorizontalTextAlignment}"
                    TextDecorations="{Binding TextDecorations}"
                    TextTrimming="CharacterEllipsis"
                    TextWrapping="NoWrap" />
            </dx:DXBorder>


            <TextBlock
                Grid.Row="1"
                HorizontalAlignment="Left"
                Foreground="Gray"
                Text="{Binding StyleName}"
                TextTrimming="CharacterEllipsis"
                TextWrapping="NoWrap" />
        </Grid>
    </DataTemplate>
    <ControlTemplate x:Key="styleItemGlyphBorderTemplate">
        <Grid Width="88" Height="{Binding Path=(dxb:GalleryControl.GalleryControl).Gallery.ItemGlyphSize.Height, RelativeSource={RelativeSource Self}}" Margin="0,0,0,0">
            <Grid.Resources>
                <DataTemplate x:Key="GalleryItemContextMenuTemplate">
                    <dxb:PopupMenu>
                        <dxb:PopupMenu.Items>
                            <dxb:BarButtonItem Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.CloneStyleCommand, RelativeSource={RelativeSource Self}}" CommandParameter="{Binding PlacementTarget.Item.Caption, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxb:PopupMenu}}" Content="{dxrudl:ReportDesignerStringId StringId=CloneStyle}" />
                            <dxb:BarButtonItem Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.RemoveStyleCommand, RelativeSource={RelativeSource Self}}" CommandParameter="{Binding PlacementTarget.Item.Caption, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxb:PopupMenu}}" Content="{dxrudl:ReportDesignerStringId StringId=Remove}" />
                            <dxb:BarButtonItem Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.SelectControlsWithStyleCommand, RelativeSource={RelativeSource Self}}" CommandParameter="{Binding PlacementTarget.Item.Caption, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxb:PopupMenu}}" Content="{dxrudl:ReportDesignerStringId StringId=SelectControlsWithStyle}" />
                        </dxb:PopupMenu.Items>
                    </dxb:PopupMenu>
                </DataTemplate>


            </Grid.Resources>
            <dx:DXBorder Background="{Binding DataContext.BackColor}" BorderThickness="{Binding DataContext.BorderThickness}">
                <dx:DXBorder.BorderBrush>
                    <VisualBrush>
                        <VisualBrush.Visual>
                            <Grid Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualWidth, FallbackValue=0}" Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualHeight, FallbackValue=0}">
                                <Rectangle Fill="{Binding DataContext.BackColor}" />
                                <Rectangle Stroke="{Binding DataContext.BorderColor}" StrokeDashArray="{Binding DataContext.BorderDashStyle}" StrokeThickness="{Binding DataContext.BorderWidth}" />
                            </Grid>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </dx:DXBorder.BorderBrush>
            </dx:DXBorder>
            <dx:DXBorder>
                <TextBlock
                    Margin="{Binding DataContext.Padding}"
                    HorizontalAlignment="{Binding DataContext.HorizontalAlignment}"
                    VerticalAlignment="{Binding DataContext.VerticalTextAlignment}"
                    Background="Transparent"
                    FontFamily="{Binding DataContext.FontFamily}"
                    FontSize="{Binding DataContext.FontSize}"
                    FontStyle="{Binding DataContext.Italic}"
                    FontWeight="{Binding DataContext.Bold}"
                    Foreground="{Binding DataContext.ForeColor}"
                    Text="AaBbCcDd"
                    TextAlignment="{Binding DataContext.HorizontalTextAlignment}"
                    TextDecorations="{Binding DataContext.TextDecorations}"
                    TextTrimming="None"
                    TextWrapping="NoWrap" />
            </dx:DXBorder>

            <dxmvvm:Interaction.Behaviors>
                <dxrudi:SetGalleryItemContextMenuBehavior />
            </dxmvvm:Interaction.Behaviors>

        </Grid>
    </ControlTemplate>
    <DataTemplate x:Key="styleItemTemplate">
        <ContentControl>
            <dxb:GalleryItem Caption="{Binding StyleName}" Command="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel.(xrdiag:StylesGalleryModel.StylesGallery).SetStyleCommand, RelativeSource={RelativeSource Self}}" CommandParameter="{Binding StyleName}">
                <dxb:GalleryItem.Glyph>
                    <DrawingImage />
                </dxb:GalleryItem.Glyph>
            </dxb:GalleryItem>
        </ContentControl>
    </DataTemplate>



    <Style x:Key="styleGalleryStyle" TargetType="{x:Type dxb:Gallery}">
        <Setter Property="ItemCheckMode" Value="Single" />
        <Setter Property="ItemContentVerticalAlignment" Value="Bottom" />
        <Setter Property="ItemGlyphLocation" Value="Top" />
        <Setter Property="ItemGlyphSize" Value="90,41" />
        <Setter Property="ItemAutoHeight" Value="True" />
        <Setter Property="MinColCount" Value="3" />
        <Setter Property="ColCount" Value="6" />
        <Setter Property="AllowFilter" Value="False" />
        <Setter Property="IsGroupCaptionVisible" Value="False" />
        <Setter Property="IsItemCaptionVisible" Value="True" />
        <Setter Property="IsItemDescriptionVisible" Value="False" />
        <Setter Property="ItemGlyphBorderTemplate" Value="{StaticResource styleItemGlyphBorderTemplate}" />
        <Setter Property="ItemCaptionTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock
                        MaxWidth="108"
                        Text="{Binding}"
                        TextAlignment="Center"
                        TextTrimming="CharacterEllipsis" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MinWidth" Value="203" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel.(xrdiag:StylesGalleryModel.StylesGallery).HasItems, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="MinWidth" Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\StyleGalleryItem.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\OfficeInspiredRibbonTemplate.xaml-->
    <DataTemplate x:Key="PageSizeContentTemplate">
        <StackPanel>
            <TextBlock FontWeight="Bold" Text="{Binding Name}" />
            <TextBlock FlowDirection="LeftToRight" Text="{Binding PaperSizeInfo.InchesSizeString}" />
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="PageMarginsContentTemplate">
        <StackPanel>
            <TextBlock FontWeight="Bold" Text="{Binding DisplayName}" />
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <TextBlock Margin="0,0,12,0" Text="Top: " />
                <TextBlock Grid.Column="1" Margin="0,0,24,0" Text="{Binding Top, Converter={dxrudi:RibbonMarginsSideValueConverter}}" />
                <TextBlock Grid.Column="2" Margin="0,0,12,0" Text="Bottom: " />
                <TextBlock Grid.Column="3" Margin="0,0,12,0" Text="{Binding Bottom, Converter={dxrudi:RibbonMarginsSideValueConverter}}" />
                <TextBlock Grid.Row="1" Margin="0,0,12,0" Text="Left: " />
                <TextBlock
                    Grid.Row="1"
                    Grid.Column="1"
                    Margin="0,0,24,0"
                    Text="{Binding Left, Converter={dxrudi:RibbonMarginsSideValueConverter}}" />
                <TextBlock
                    Grid.Row="1"
                    Grid.Column="2"
                    Margin="0,0,12,0"
                    Text="Right: " />
                <TextBlock
                    Grid.Row="1"
                    Grid.Column="3"
                    Margin="0,0,12,0"
                    Text="{Binding Right, Converter={dxrudi:RibbonMarginsSideValueConverter}}" />
            </Grid>
        </StackPanel>
    </DataTemplate>
    <DataTemplate x:Key="contextualBarButtonItemContentTemplate">
        <dx:DXBorder Margin="0,0,15,0">
            <ContentPresenter Content="{Binding}" />
        </dx:DXBorder>
    </DataTemplate>
    <DataTemplate x:Key="borderWidthContentTemplate">
        <Grid Grid.IsSharedSizeScope="True">
            <Grid Width="40">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" SharedSizeGroup="value" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <TextBlock Margin="0,0,6,0" Text="{Binding}" />
                <dx:DXBorder
                    Grid.Column="1"
                    Height="{Binding}"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    Background="Black"
                    BorderBrush="Black" />
            </Grid>
        </Grid>
    </DataTemplate>
    <Style x:Key="insertSeriesGalleryGroupStyle" TargetType="{x:Type dxb:GalleryItemGroup}">
        <Setter Property="Caption" Value="{Binding Caption}" />
        <Setter Property="ItemsSource" Value="{Binding Items}" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxb:GalleryItem
                            Caption="{Binding Caption}"
                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.AddChartSeriesCommand, RelativeSource={RelativeSource Self}}"
                            CommandParameter="{Binding Value}"
                            Glyph="{Binding Icon}" />
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="chartPaletteItemCaptionTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <TextBlock Margin="0,0,5,0" Text="{Binding Name}" />
            <ItemsControl Grid.Column="1" HorizontalAlignment="Right" ItemsSource="{Binding Colors}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Rectangle
                            Width="10"
                            Height="10"
                            Margin="1"
                            Fill="{Binding Converter={dxrudi:DrawingColorToMediaBrushConverter}}"
                            Stroke="Gray" />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="chartPaletteBarItemGlyphTemplate">
        <dx:DXBorder
            Width="32"
            Height="32"
            BorderBrush="Gray"
            BorderThickness="1">
            <dx:DXBorder.DataContext>
                <MultiBinding Converter="{dxrudi:PaletteNameToPreviewDataConverter}" Mode="OneWay">
                    <Binding Path="Item.(dxrud:ReportDesigner.Document).ReportModel.SelectedModel" RelativeSource="{RelativeSource AncestorType={x:Type dxb:BarItemLinkInfo}}" />
                    <Binding Path="Item.(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[PaletteName]" RelativeSource="{RelativeSource AncestorType={x:Type dxb:BarItemLinkInfo}}" />
                </MultiBinding>
            </dx:DXBorder.DataContext>
            <UniformGrid Columns="2" Rows="2">
                <dx:DXBorder Background="{Binding Colors[0], Converter={dxrudi:DrawingColorToMediaBrushConverter}}" />
                <dx:DXBorder Background="{Binding Colors[1], Converter={dxrudi:DrawingColorToMediaBrushConverter}}" />
                <dx:DXBorder Background="{Binding Colors[2], Converter={dxrudi:DrawingColorToMediaBrushConverter}}" />
                <dx:DXBorder Background="{Binding Colors[3], Converter={dxrudi:DrawingColorToMediaBrushConverter}}" />
            </UniformGrid>
        </dx:DXBorder>
    </DataTemplate>
    <DataTemplate x:Key="characterCombSizeSpinEditTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" SharedSizeGroup="cbSizeGroup" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <TextBlock Margin="0,0,3,0" VerticalAlignment="Center" Text="{Binding Item.Content, RelativeSource={RelativeSource AncestorType={x:Type dxb:BarItemLinkInfo}}, Mode=TwoWay}" />
            <dxe:SpinEdit
                Grid.Column="1"
                Width="50"
                EditValue="{Binding Item.EditValue, RelativeSource={RelativeSource AncestorType={x:Type dxb:BarItemLinkInfo}}, Mode=TwoWay}"
                EditValueType="{x:Type sys:Single}"
                MinValue="1" />
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="characterCombSpacingSpinEditTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" SharedSizeGroup="cbSpacingGroup" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <TextBlock Margin="0,0,3,0" VerticalAlignment="Center" Text="{Binding Item.Content, RelativeSource={RelativeSource AncestorType={x:Type dxb:BarItemLinkInfo}}, Mode=TwoWay}" />
            <dxe:SpinEdit
                Grid.Column="1"
                Width="50"
                EditValue="{Binding Item.EditValue, RelativeSource={RelativeSource AncestorType={x:Type dxb:BarItemLinkInfo}}, Mode=TwoWay}"
                EditValueType="{x:Type sys:Single}"
                MinValue="0" />
        </Grid>
    </DataTemplate>



    <Style x:Key="insertSeriesGalleryStyle" TargetType="{x:Type dxb:Gallery}">
        <Setter Property="AllowFilter" Value="False" />
        <Setter Property="ColCount" Value="3" />
        <Setter Property="ItemDescriptionHorizontalAlignment" Value="Left" />
        <Setter Property="IsItemCaptionVisible" Value="False" />
        <Setter Property="IsItemDescriptionVisible" Value="False" />
        <Setter Property="SizeMode" Value="None" />
        <Setter Property="GroupStyle" Value="{StaticResource insertSeriesGalleryGroupStyle}" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxrudi:RibbonInsertChartSeriesGalleryBehavior IsPageCategorySelected="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type dxr:RibbonPageCategory}}}" />
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="{dxrudt:LWKey ReportDesigner.OfficeInspiredRibbonTemplate}">
        <dxr:RibbonControl
            dxrudi:ReportDesignerRibbon.DocumentSelector="{Binding Path=(dxrud:ReportDesigner.DocumentSelector), RelativeSource={RelativeSource Self}}"
            AllowCustomization="False"
            Grid.IsSharedSizeScope="True"
            MinimizationButtonVisibility="Collapsed"
            RibbonHeaderVisibility="Visible"
            RibbonStyle="Office2010"
            ShowApplicationButton="False"
            ToolbarShowCustomizationButton="False"
            ToolbarShowMode="{Binding Path=(dxrud:ReportDesigner.DocumentSelector).PreviewPageIsSelected, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanToObjectConverter TrueValue='Hide', FalseValue='ShowAbove'}, Mode=OneWay}">
            <dxr:RibbonControl.ToolbarItems>
                <dxb:BarButtonItem
                    dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.Undo}"
                    Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.UndoCommand, RelativeSource={RelativeSource Self}}"
                    Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_Undo_Caption}"
                    Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/EditGroup/Undo.svg'}"
                    Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_Undo_STipContent}"
                    LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/EditGroup/Undo.svg'}"
                    RibbonStyle="SmallWithText" />
                <dxb:BarButtonItem
                    dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.Redo}"
                    Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.RedoCommand, RelativeSource={RelativeSource Self}}"
                    Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_Redo_Caption}"
                    Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/EditGroup/Redo.svg'}"
                    Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_Redo_STipContent}"
                    LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/EditGroup/Redo.svg'}"
                    RibbonStyle="SmallWithText" />
            </dxr:RibbonControl.ToolbarItems>

            <dxr:RibbonControl.PageHeaderItems>
                <dxb:BarItemSelector AllowEmptySelection="False" SelectedItem="{Binding Path=(dxrud:ReportDesigner.DocumentSelector).ViewKind, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <dxb:BarItemSelector.ItemLinksSource>
                        <col:ArrayList>
                            <dxrud:ReportDesignerDocumentViewKind>Designer</dxrud:ReportDesignerDocumentViewKind>
                            <dxrud:ReportDesignerDocumentViewKind>Preview</dxrud:ReportDesignerDocumentViewKind>
                            <dxrud:ReportDesignerDocumentViewKind>ScriptEditor</dxrud:ReportDesignerDocumentViewKind>
                        </col:ArrayList>
                    </dxb:BarItemSelector.ItemLinksSource>

                    <dxb:BarItemSelector.ItemTemplate>
                        <DataTemplate>
                            <ContentControl>
                                <dxb:BarCheckItem
                                    Content="{Binding Converter={dxrudi:ViewKindToTabDisplayNameConverter}}"
                                    Hint="{Binding Converter={dxrudi:ViewKindToTabSTipContentConverter}}"
                                    IsEnabled="{Binding Path=(dxrud:ReportDesigner.Document), RelativeSource={RelativeSource Self}, Converter={dxmvvm:ObjectToBooleanConverter}}"
                                    RibbonStyle="Large">
                                    <dxb:BarCheckItem.IsVisible>
                                        <MultiBinding Converter="{dxrudi:DocumentViewKindToIsRibbonPageVisibleConverter}">
                                            <Binding />
                                            <Binding Mode="OneWay" Path="(dxrud:ReportDesigner.Designer).ShowScriptsTab" RelativeSource="{RelativeSource Self}" />
                                            <Binding Mode="OneWay" Path="(dxrud:ReportDesigner.Designer).ShowPreviewTab" RelativeSource="{RelativeSource Self}" />
                                        </MultiBinding>
                                    </dxb:BarCheckItem.IsVisible>
                                </dxb:BarCheckItem>
                            </ContentControl>
                        </DataTemplate>
                    </dxb:BarItemSelector.ItemTemplate>
                </dxb:BarItemSelector>
            </dxr:RibbonControl.PageHeaderItems>


            <dxr:RibbonControl.Resources>
                <Style TargetType="dxr:RibbonPageHeaderControl">
                    <Setter Property="IsEnabled" Value="{Binding RelativeSource={RelativeSource Self}, Path=Page.IsEnabled}" />
                </Style>
            </dxr:RibbonControl.Resources>
            <dxr:RibbonPageCategory
                dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.SparklinePageCategory}"
                Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageCategory_Sparkline}"
                IsEnabled="{Binding Path=(dxrud:ReportDesigner.Designer).ActiveDocument, Mode=OneWay, Converter={dxmvvm:ObjectToBooleanConverter}, RelativeSource={RelativeSource Self}}"
                SelectedPageOnCategoryShowing="None"
                Color="#FF49a349">
                <dxr:RibbonPageCategory.IsVisible>
                    <MultiBinding Converter="{dxrudi:SelectedItemsToPageCategoryVisibilityConverter}" FallbackValue="False">
                        <Binding Path="(dxrud:ReportDesigner.DocumentSelector).ViewKind" RelativeSource="{RelativeSource TemplatedParent}" />
                        <Binding Path="(dxrud:ReportDesigner.Document).Diagram.SelectionModel" RelativeSource="{RelativeSource TemplatedParent}" />
                        <Binding>
                            <Binding.Source>
                                <x:Type TypeName="xrdiag:XRSparklineDiagramItem" />
                            </Binding.Source>
                        </Binding>
                    </MultiBinding>
                </dxr:RibbonPageCategory.IsVisible>

                <dxr:RibbonPage dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.SparklineDesignPage}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_ContextPage_Design}">
                    <dxr:RibbonPage.GroupCollectionTemplate>
                        <DataTemplate>
                            <ItemsControl>
                                <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.SparklineDesignDataGroup}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_Data}">
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.SparklineAddDataSource}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.SetDataSourceCommand, RelativeSource={RelativeSource Self}}"
                                        CommandParameter="{x:Type xrdiag:XRSparklineDiagramItem}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_SparklineAddDataSource_Caption}"
                                        Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/AddDataSource.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_SparklineAddDataSource_STipContent}"
                                        LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/AddDataSource.svg'}" />
                                </dxr:RibbonPageGroup>

                                <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.SparklineDesignViewGroup}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_View}">
                                    <dxr:RibbonGalleryBarItem dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.SparklineViewTypeGallery}" DropDownGalleryEnabled="False">
                                        <dxr:RibbonGalleryBarItem.Gallery>
                                            <dxb:Gallery
                                                AllowFilter="False"
                                                IsGroupCaptionVisible="False"
                                                IsItemCaptionVisible="False"
                                                IsItemDescriptionVisible="False"
                                                ItemCheckMode="Single"
                                                ItemGlyphSize="59,59"
                                                MinColCount="4">
                                                <dxb:GalleryItemGroup ItemsSource="{dxrudi:SparklineViewTypeSource}">
                                                    <dxb:GalleryItemGroup.ItemTemplate>
                                                        <DataTemplate>
                                                            <ContentControl>
                                                                <dxb:GalleryItem Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.SetSparklineViewTypeCommand, RelativeSource={RelativeSource Self}}" CommandParameter="{Binding View}" Glyph="{Binding Glyph}">
                                                                    <dxb:GalleryItem.IsChecked>
                                                                        <MultiBinding Converter="{dxrudi:ObjectEqualityConverter}" Mode="OneWay">
                                                                            <Binding Path="View" />
                                                                            <Binding Path="(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[EditableSparklineView].Type" RelativeSource="{RelativeSource Self}" />
                                                                        </MultiBinding>
                                                                    </dxb:GalleryItem.IsChecked>
                                                                    <dxb:GalleryItem.SuperTip>
                                                                        <dx:SuperTip>
                                                                            <dx:SuperTipHeaderItem Content="{Binding View}" />
                                                                        </dx:SuperTip>
                                                                    </dxb:GalleryItem.SuperTip>
                                                                </dxb:GalleryItem>
                                                            </ContentControl>
                                                        </DataTemplate>
                                                    </dxb:GalleryItemGroup.ItemTemplate>
                                                </dxb:GalleryItemGroup>
                                            </dxb:Gallery>
                                        </dxr:RibbonGalleryBarItem.Gallery>
                                    </dxr:RibbonGalleryBarItem>
                                </dxr:RibbonPageGroup>
                            </ItemsControl>
                        </DataTemplate>
                    </dxr:RibbonPage.GroupCollectionTemplate>
                </dxr:RibbonPage>
            </dxr:RibbonPageCategory>

            <dxr:RibbonPageCategory
                dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.GaugePageCategory}"
                Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageCategory_Gauge}"
                IsEnabled="{Binding Path=(dxrud:ReportDesigner.Designer).ActiveDocument, Mode=OneWay, Converter={dxmvvm:ObjectToBooleanConverter}, RelativeSource={RelativeSource Self}}"
                SelectedPageOnCategoryShowing="None"
                Color="#FFFF9D00">
                <dxr:RibbonPageCategory.IsVisible>
                    <MultiBinding Converter="{dxrudi:SelectedItemsToPageCategoryVisibilityConverter}" FallbackValue="False">
                        <Binding Path="(dxrud:ReportDesigner.DocumentSelector).ViewKind" RelativeSource="{RelativeSource TemplatedParent}" />
                        <Binding Path="(dxrud:ReportDesigner.Document).Diagram.SelectionModel" RelativeSource="{RelativeSource TemplatedParent}" />
                        <Binding>
                            <Binding.Source>
                                <x:Type TypeName="xrdiag:XRGaugeDiagramItem" />
                            </Binding.Source>
                        </Binding>
                    </MultiBinding>
                </dxr:RibbonPageCategory.IsVisible>

                <dxr:RibbonPage dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.GaugeDesignPage}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_Page_View}">
                    <dxr:RibbonPage.GroupCollectionTemplate>
                        <DataTemplate>
                            <ItemsControl>
                                <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.GaugeDesignViewGroup}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_View}">
                                    <dxr:RibbonGalleryBarItem dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.GaugeGallery}" DropDownGalleryEnabled="False">
                                        <dxr:RibbonGalleryBarItem.Gallery>
                                            <dxb:Gallery
                                                AllowFilter="False"
                                                ColCount="7"
                                                GroupsSource="{dxrudi:GaugeGalleryItemsSource}"
                                                IsGroupCaptionVisible="False"
                                                IsItemCaptionVisible="False"
                                                IsItemDescriptionVisible="False"
                                                ItemCheckMode="Single"
                                                ItemGlyphSize="59,59">
                                                <dxb:Gallery.GroupStyle>
                                                    <Style TargetType="dxb:GalleryItemGroup">
                                                        <Setter Property="ItemsSource" Value="{Binding Styles}" />
                                                        <Setter Property="ItemTemplate">
                                                            <Setter.Value>
                                                                <DataTemplate>
                                                                    <ContentControl>
                                                                        <dxb:GalleryItem Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.SetGaugeViewStyleCommand, RelativeSource={RelativeSource Self}}" CommandParameter="{Binding Style}" Glyph="{Binding Glyph}">
                                                                            <dxb:GalleryItem.IsChecked>
                                                                                <MultiBinding Converter="{dxrudi:ObjectEqualityConverter}" Mode="OneWay">
                                                                                    <Binding Path="Style" />
                                                                                    <Binding Path="(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[ViewStyle]" RelativeSource="{RelativeSource Self}" />
                                                                                </MultiBinding>
                                                                            </dxb:GalleryItem.IsChecked>
                                                                            <dxb:GalleryItem.SuperTip>
                                                                                <dx:SuperTip>
                                                                                    <dx:SuperTipHeaderItem Content="{Binding DisplayName}" />
                                                                                </dx:SuperTip>
                                                                            </dxb:GalleryItem.SuperTip>
                                                                        </dxb:GalleryItem>
                                                                    </ContentControl>
                                                                </DataTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </dxb:Gallery.GroupStyle>

                                            </dxb:Gallery>
                                        </dxr:RibbonGalleryBarItem.Gallery>
                                    </dxr:RibbonGalleryBarItem>
                                </dxr:RibbonPageGroup>
                                <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.GaugeDesignThemeGroup}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_Theme}">
                                    <dxr:BarButtonGroup>
                                        <dxb:BarCheckItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.GaugeLightTheme}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_GaugeViewThemeLight_Caption}"
                                            GroupIndex="72220"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_GaugeViewThemeLight_STipContent}"
                                            IsChecked="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[ViewTheme], RelativeSource={RelativeSource Self}, Mode=TwoWay, Converter={dxrudi:GaugeLightThemeIsCheckedConverter}}" />
                                    </dxr:BarButtonGroup>
                                    <dxr:BarButtonGroup>
                                        <dxb:BarCheckItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.GaugeDarkTheme}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_GaugeViewThemeDark_Caption}"
                                            GroupIndex="72220"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_GaugeViewThemeDark_STipContent}" />
                                    </dxr:BarButtonGroup>
                                </dxr:RibbonPageGroup>
                            </ItemsControl>
                        </DataTemplate>
                    </dxr:RibbonPage.GroupCollectionTemplate>
                </dxr:RibbonPage>
            </dxr:RibbonPageCategory>

            <dxr:RibbonPageCategory
                dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.TextPageCategory}"
                Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageCategory_Text}"
                IsEnabled="{Binding Path=(dxrud:ReportDesigner.Designer).ActiveDocument, Mode=OneWay, Converter={dxmvvm:ObjectToBooleanConverter}, RelativeSource={RelativeSource Self}}"
                SelectedPageOnCategoryShowing="None">
                <dxr:RibbonPageCategory.IsVisible>
                    <MultiBinding Converter="{dxrudi:SelectedTextItemsToPageCategoryVisibilityConverter}" FallbackValue="False">
                        <Binding Path="(dxrud:ReportDesigner.DocumentSelector).ViewKind" RelativeSource="{RelativeSource TemplatedParent}" />
                        <Binding Path="(dxrud:ReportDesigner.Document).Diagram.SelectionModel" RelativeSource="{RelativeSource TemplatedParent}" />
                    </MultiBinding>
                </dxr:RibbonPageCategory.IsVisible>

                <dxr:RibbonPage dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.TextPage}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_ContextPage_Text}">
                    <dxr:RibbonPage.GroupCollectionTemplate>
                        <DataTemplate>
                            <ItemsControl>
                                <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.TextDesignGroup}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_Design}">
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.FitTextToBounds}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.XRCommands.FitTextToBounds, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_FitTextToBounds_Caption}"
                                        Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/FitTextToBounds.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_FitTextToBounds_STipContent}"
                                        IsEnabled="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionModel, RelativeSource={RelativeSource Self}, Converter={dxrudi:ControlToFitTextToBoundsVisibilityConverter}}"
                                        LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/FitTextToBounds.svg'}"
                                        RibbonStyle="Large" />

                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.FitBoundsToText}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.XRCommands.FitBoundsToText, RelativeSource={RelativeSource Self}}"
                                        CommandParameter="All"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_FitBoundsToText_Caption}"
                                        Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/FitBoundsToText.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_FitBoundsToText_STipContent}"
                                        IsEnabled="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionModel, RelativeSource={RelativeSource Self}, Converter={dxrudi:ControlToFitBoundsToTextVisibilityConverter}}"
                                        LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/FitBoundsToText.svg'}"
                                        RibbonStyle="Large" />
                                </dxr:RibbonPageGroup>

                                <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.TextBehaviorGroup}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_Behavior}">
                                    <dxr:BarButtonGroup>
                                        <dxb:BarEditItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.LabelAutoWidth}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_LabelAutoWidth_Caption}"
                                            EditHorizontalAlignment="Left"
                                            EditSettings="{dxe:CheckSettings Content='{dxrudl:ReportStringId StringId=RibbonXRDesign_LabelAutoWidth_Caption}'}"
                                            EditValue="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[AutoWidth], RelativeSource={RelativeSource Self}, Mode=TwoWay}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_LabelAutoWidth_STipContent}"
                                            IsEnabled="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionModel, RelativeSource={RelativeSource Self}, Converter={dxrudi:ControlToFitBoundsToTextVisibilityConverter}}" />
                                    </dxr:BarButtonGroup>

                                    <dxr:BarButtonGroup>
                                        <dxb:BarEditItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.LabelWordWrap}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_LabelWordWrap_Caption}"
                                            EditHorizontalAlignment="Left"
                                            EditSettings="{dxe:CheckSettings Content='{dxrudl:ReportStringId StringId=RibbonXRDesign_LabelWordWrap_Caption}'}"
                                            EditValue="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[WordWrap], RelativeSource={RelativeSource Self}, Mode=TwoWay}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_LabelWordWrap_STipContent}" />
                                    </dxr:BarButtonGroup>

                                    <dxb:BarItemSeparator />

                                    <dxr:BarButtonGroup>
                                        <dxb:BarEditItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.LabelCanShrink}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_LabelCanShrink_Caption}"
                                            EditHorizontalAlignment="Left"
                                            EditSettings="{dxe:CheckSettings Content='{dxrudl:ReportStringId StringId=RibbonXRDesign_LabelCanShrink_Caption}'}"
                                            EditValue="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[CanShrink], RelativeSource={RelativeSource Self}, Mode=TwoWay}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_LabelCanShrink_STipContent}" />
                                    </dxr:BarButtonGroup>
                                    <dxr:BarButtonGroup>
                                        <dxb:BarEditItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.LabelCanGrow}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_LabelCanGrow_Caption}"
                                            EditHorizontalAlignment="Left"
                                            EditSettings="{dxe:CheckSettings Content='{dxrudl:ReportStringId StringId=RibbonXRDesign_LabelCanGrow_Caption}'}"
                                            EditValue="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[CanGrow], RelativeSource={RelativeSource Self}, Mode=TwoWay}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_LabelCanGrow_STipContent}" />
                                    </dxr:BarButtonGroup>
                                </dxr:RibbonPageGroup>
                            </ItemsControl>
                        </DataTemplate>
                    </dxr:RibbonPage.GroupCollectionTemplate>
                </dxr:RibbonPage>
            </dxr:RibbonPageCategory>

            <dxr:RibbonPageCategory
                dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.CharacterCombPageCategory}"
                Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageCategory_CharacterComb}"
                IsEnabled="{Binding Path=(dxrud:ReportDesigner.Designer).ActiveDocument, Mode=OneWay, Converter={dxmvvm:ObjectToBooleanConverter}, RelativeSource={RelativeSource Self}}"
                SelectedPageOnCategoryShowing="None"
                Color="#FF935ED3">
                <dxr:RibbonPageCategory.IsVisible>
                    <MultiBinding Converter="{dxrudi:SelectedItemsToPageCategoryVisibilityConverter}" FallbackValue="False">
                        <Binding Path="(dxrud:ReportDesigner.DocumentSelector).ViewKind" RelativeSource="{RelativeSource TemplatedParent}" />
                        <Binding Path="(dxrud:ReportDesigner.Document).Diagram.SelectionModel" RelativeSource="{RelativeSource TemplatedParent}" />
                        <Binding>
                            <Binding.Source>
                                <x:Type TypeName="xrdiag:XRCharacterCombDiagramItem" />
                            </Binding.Source>
                        </Binding>
                    </MultiBinding>
                </dxr:RibbonPageCategory.IsVisible>

                <dxr:RibbonPage dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.CharacterCombDesignPage}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_ContextPage_Design}">
                    <dxr:RibbonPage.GroupCollectionTemplate>
                        <DataTemplate>
                            <ItemsControl>
                                <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.CharacterCombDesignSizeGroup}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_CellSize}">
                                    <dxmvvm:Interaction.Behaviors>
                                        <dxrudi:RibbonPageGroupSharedSizeScopeBehavior />
                                    </dxmvvm:Interaction.Behaviors>
                                    <dxr:BarButtonGroup>
                                        <dxb:BarEditItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.CharacterCombAutoWidth}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_CharacterCombCellAutoWidth_Caption}"
                                            EditHorizontalAlignment="Stretch"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_CharacterCombCellAutoWidth_STipContent}"
                                            IsEnabled="{Binding Path=(dxrud:ReportDesigner.Document), RelativeSource={RelativeSource Self}, Converter={dxmvvm:ObjectToBooleanConverter}}">
                                            <dxb:BarEditItem.EditTemplate>
                                                <DataTemplate>
                                                    <dxe:CheckEdit Command="{Binding Path=Item.(dxrud:ReportDesigner.Designer).ActualCommands.ToggleCharacterCombAutoWidthCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxb:BarItemLinkInfo}}}" Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_CharacterCombCellAutoWidth_Caption}" EditValue="{Binding Path=Item.(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[CellSizeMode], Converter={dxrudi:CharacterCombAutoSizeToBooleanConverter Mode={x:Static xpc:SizeMode.AutoWidth}}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxb:BarItemLinkInfo}}, Mode=OneWay}" />
                                                </DataTemplate>
                                            </dxb:BarEditItem.EditTemplate>
                                        </dxb:BarEditItem>
                                    </dxr:BarButtonGroup>
                                    <dxr:BarButtonGroup>
                                        <dxb:BarEditItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.CharacterCombAutoHeight}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_CharacterCombCellAutoHeight_Caption}"
                                            EditHorizontalAlignment="Stretch"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_CharacterCombCellAutoHeight_STipContent}"
                                            IsEnabled="{Binding Path=(dxrud:ReportDesigner.Document), RelativeSource={RelativeSource Self}, Converter={dxmvvm:ObjectToBooleanConverter}}">
                                            <dxb:BarEditItem.EditTemplate>
                                                <DataTemplate>
                                                    <dxe:CheckEdit Command="{Binding Path=Item.(dxrud:ReportDesigner.Designer).ActualCommands.ToggleCharacterCombAutoHeightCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxb:BarItemLinkInfo}}}" Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_CharacterCombCellAutoHeight_Caption}" EditValue="{Binding Path=Item.(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[CellSizeMode], Converter={dxrudi:CharacterCombAutoSizeToBooleanConverter Mode={x:Static xpc:SizeMode.AutoHeight}}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxb:BarItemLinkInfo}}, Mode=OneWay}" />
                                                </DataTemplate>
                                            </dxb:BarEditItem.EditTemplate>
                                        </dxb:BarEditItem>
                                    </dxr:BarButtonGroup>
                                    <dxb:BarItemSeparator />

                                    <dxr:BarButtonGroup>
                                        <dxb:BarEditItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.CharacterCombCellHorzSpacing}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_CharacterCombCellHorizontalSpacing_Caption}"
                                            EditHorizontalAlignment="Right"
                                            EditTemplate="{StaticResource characterCombSpacingSpinEditTemplate}"
                                            EditValue="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[CellHorizontalSpacing], RelativeSource={RelativeSource Self}, Mode=TwoWay}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_CharacterCombCellHorizontalSpacing_STipContent}" />
                                    </dxr:BarButtonGroup>
                                    <dxr:BarButtonGroup>
                                        <dxb:BarEditItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.CharacterCombCellVerticalSpacing}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_CharacterCombCellVerticalSpacing_Caption}"
                                            EditHorizontalAlignment="Right"
                                            EditTemplate="{StaticResource characterCombSpacingSpinEditTemplate}"
                                            EditValue="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[CellVerticalSpacing], RelativeSource={RelativeSource Self}, Mode=TwoWay}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_CharacterCombCellVerticalSpacing_STipContent}" />
                                    </dxr:BarButtonGroup>
                                    <dxb:BarItemSeparator />
                                    <dxr:BarButtonGroup>
                                        <dxb:BarEditItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.CharacterCombCellWidth}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_CharacterCombCellWidth_Caption}"
                                            EditHorizontalAlignment="Right"
                                            EditTemplate="{StaticResource characterCombSizeSpinEditTemplate}"
                                            EditValue="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[CellWidth], RelativeSource={RelativeSource Self}, Mode=TwoWay}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_CharacterCombCellWidth_STipContent}" />
                                    </dxr:BarButtonGroup>
                                    <dxr:BarButtonGroup>
                                        <dxb:BarEditItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.CharacterCombCellHeight}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_CharacterCombCellHeight_Caption}"
                                            EditHorizontalAlignment="Right"
                                            EditTemplate="{StaticResource characterCombSizeSpinEditTemplate}"
                                            EditValue="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[CellHeight], RelativeSource={RelativeSource Self}, Mode=TwoWay}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_CharacterCombCellHeight_STipContent}" />
                                    </dxr:BarButtonGroup>
                                </dxr:RibbonPageGroup>
                            </ItemsControl>
                        </DataTemplate>
                    </dxr:RibbonPage.GroupCollectionTemplate>
                </dxr:RibbonPage>
            </dxr:RibbonPageCategory>

            <dxr:RibbonPageCategory
                dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.TablePageCategory}"
                Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageCategory_Table}"
                IsEnabled="{Binding Path=(dxrud:ReportDesigner.Designer).ActiveDocument, Mode=OneWay, Converter={dxmvvm:ObjectToBooleanConverter}, RelativeSource={RelativeSource Self}}"
                SelectedPageOnCategoryShowing="None"
                Color="#FFF2CB1D">
                <dxr:RibbonPageCategory.IsVisible>
                    <MultiBinding Converter="{dxrudi:SelectedTableItemsToPageCategoryVisibilityConverter}" FallbackValue="False">
                        <Binding Path="(dxrud:ReportDesigner.DocumentSelector).ViewKind" RelativeSource="{RelativeSource TemplatedParent}" />
                        <Binding Path="(dxrud:ReportDesigner.Document).Diagram.SelectionModel" RelativeSource="{RelativeSource TemplatedParent}" />
                    </MultiBinding>
                </dxr:RibbonPageCategory.IsVisible>
                <dxr:RibbonPage dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.TableLayoutPage}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_ContextPage_Layout}">
                    <dxr:RibbonPage.GroupCollectionTemplate>
                        <DataTemplate>
                            <ItemsControl>
                                <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.TableLayoutSelectGroup}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_Select}">
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.TableSelectRow}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.XRCommands.SelectTableRow, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_TableSelectRow_Caption}"
                                        Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/Table/SelectRow.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_TableSelectRow_STipContent}"
                                        LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/Table/SelectRow.svg'}"
                                        RibbonStyle="Large" />
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.TableSelectColumn}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.XRCommands.SelectTableColumn, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_TableSelectColumn_Caption}"
                                        Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/Table/SelectColumn.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_TableSelectColumn_STipContent}"
                                        LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/Table/SelectColumn.svg'}"
                                        RibbonStyle="Large" />
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.TableSelectTable}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.XRCommands.SelectTable, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_TableSelectTable_Caption}"
                                        Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/Table/SelectTable.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_TableSelectTable_STipContent}"
                                        LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/Table/SelectTable.svg'}"
                                        RibbonStyle="Large" />
                                </dxr:RibbonPageGroup>
                                <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.TableLayoutInsertGroup}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_Insert}">
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.TableInsertRowAbove}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.XRCommands.InsertTableRow, RelativeSource={RelativeSource Self}}"
                                        CommandParameter="Above"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_TableInsertRowAbove_Caption}"
                                        Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/Table/InsertRowAbove.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_TableInsertRowAbove_STipContent}"
                                        LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/Table/InsertRowAbove.svg'}"
                                        RibbonStyle="Large" />
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.TableInsertRowBelow}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.XRCommands.InsertTableRow, RelativeSource={RelativeSource Self}}"
                                        CommandParameter="Below"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_TableInsertRowBelow_Caption}"
                                        Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/Table/InsertRowBelow.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_TableInsertRowBelow_STipContent}"
                                        LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/Table/InsertRowBelow.svg'}"
                                        RibbonStyle="Large" />
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.TableInsertColumnToLeft}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.XRCommands.InsertTableColumn, RelativeSource={RelativeSource Self}}"
                                        CommandParameter="Left"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_TableInsertColumnToLeft_Caption}"
                                        Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/Table/InsertColumnToLeft.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_TableInsertColumnToLeft_STipContent}"
                                        LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/Table/InsertColumnToLeft.svg'}"
                                        RibbonStyle="Large" />
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.TableInsertColumnToRight}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.XRCommands.InsertTableColumn, RelativeSource={RelativeSource Self}}"
                                        CommandParameter="Right"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_TableInsertColumnToRight_Caption}"
                                        Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/Table/InsertColumnToRight.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_TableInsertColumnToRight_STipContent}"
                                        LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/Table/InsertColumnToRight.svg'}"
                                        RibbonStyle="Large" />
                                </dxr:RibbonPageGroup>
                                <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.TableLayoutDeleteGroup}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_Delete}">
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.TableDeleteCell}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.DeleteCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_TableDeleteCell_Caption}"
                                        Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/Table/DeleteCell.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_TableDeleteCell_STipContent}"
                                        LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/Table/DeleteCell.svg'}"
                                        RibbonStyle="Large">

                                        <dxb:BarButtonItem.IsEnabled>
                                            <MultiBinding Converter="{dxrudi:SelectedItemsToPageCategoryVisibilityConverter}" FallbackValue="False">
                                                <Binding Path="(dxrud:ReportDesigner.DocumentSelector).ViewKind" RelativeSource="{RelativeSource TemplatedParent}" />
                                                <Binding Path="(dxrud:ReportDesigner.Document).Diagram.SelectionModel" RelativeSource="{RelativeSource TemplatedParent}" />
                                                <Binding>
                                                    <Binding.Source>
                                                        <x:Type TypeName="xrdiag:XRTableCellDiagramItem" />
                                                    </Binding.Source>
                                                </Binding>
                                            </MultiBinding>
                                        </dxb:BarButtonItem.IsEnabled>

                                    </dxb:BarButtonItem>
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.TableDeleteRow}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.XRCommands.DeleteTableRow, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_TableDeleteRow_Caption}"
                                        Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/Table/DeleteRow.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_TableDeleteRow_STipContent}"
                                        LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/Table/DeleteRow.svg'}"
                                        RibbonStyle="Large" />
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.TableDeleteColumn}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.XRCommands.DeleteTableColumn, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_TableDeleteColumn_Caption}"
                                        Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/Table/DeleteColumn.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_TableDeleteColumn_STipContent}"
                                        LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/Table/DeleteColumn.svg'}"
                                        RibbonStyle="Large" />
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.TableDeleteTable}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.XRCommands.DeleteTable, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_TableDeleteTable_Caption}"
                                        Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/Table/DeleteTable.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_TableDeleteTable_STipContent}"
                                        LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/Table/DeleteTable.svg'}"
                                        RibbonStyle="Large" />
                                </dxr:RibbonPageGroup>
                                <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.TableLayoutCellSizeGroup}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_Distribute}">
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.TableDistributeColumnsEvenly}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.XRCommands.DistributeColumnsEvenly, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_TableDistributeColumnsEvenly_Caption}"
                                        Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/Table/DistributeColumnsEvenly.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_TableDistributeColumnsEvenly_STipContent}"
                                        LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/Table/DistributeColumnsEvenly.svg'}" />
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.TableDistributeRowsEvenly}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.XRCommands.DistributeRowsEvenly, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_TableDistributeRowsEvenly_Caption}"
                                        Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/Table/DistributeRowsEvenly.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_TableDistributeRowsEvenly_STipContent}"
                                        LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/Table/DistributeRowsEvenly.svg'}" />
                                </dxr:RibbonPageGroup>
                                <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.TableLayoutMergeGroup}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_Merge}">
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.TableSplitCells}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.XREditorCommands.SplitCells, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_TableSplitCells_Caption}"
                                        Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/Table/TableSplitCells.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_TableSplitCells_STipContent}"
                                        LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/Table/TableSplitCells.svg'}"
                                        RibbonStyle="Large" />
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.TableMergeCells}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.XRCommands.MergeCells, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_TableMergeCells_Caption}"
                                        Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/Table/TableMergeCells.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_TableMergeCells_STipContent}"
                                        LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/Table/TableMergeCells.svg'}"
                                        RibbonStyle="Large" />
                                </dxr:RibbonPageGroup>
                            </ItemsControl>
                        </DataTemplate>
                    </dxr:RibbonPage.GroupCollectionTemplate>
                </dxr:RibbonPage>
            </dxr:RibbonPageCategory>

            <dxr:RibbonPageCategory
                dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ChartPageCategory}"
                Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageCategory_Chart}"
                IsEnabled="{Binding Path=(dxrud:ReportDesigner.Designer).ActiveDocument, Mode=OneWay, Converter={dxmvvm:ObjectToBooleanConverter}, RelativeSource={RelativeSource Self}}"
                SelectedPageOnCategoryShowing="None"
                Color="#FF49A349">
                <dxr:RibbonPageCategory.IsVisible>
                    <MultiBinding Converter="{dxrudi:SelectedChartItemsToPageCategoryVisibilityConverter}" FallbackValue="False">
                        <Binding Path="(dxrud:ReportDesigner.DocumentSelector).ViewKind" RelativeSource="{RelativeSource TemplatedParent}" />
                        <Binding Path="(dxrud:ReportDesigner.Document).Diagram.SelectionModel" RelativeSource="{RelativeSource TemplatedParent}" />
                    </MultiBinding>
                </dxr:RibbonPageCategory.IsVisible>
                <dxr:RibbonPage dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ChartDesignPage}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_ContextPage_Design}">
                    <dxr:RibbonPage.GroupCollectionTemplate>
                        <DataTemplate>
                            <ItemsControl>
                                <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ChartDesignLayoutGroup}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_Layout}">
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ChartRunDesigner}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel.Diagram.XREditorCommands.RunChartDesignerCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_ChartRunDesigner_Caption}"
                                        Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/Charts/ChartDesigner.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_ChartRunDesigner_STipContent}"
                                        LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/Charts/ChartDesigner.svg'}" />
                                    <dxb:BarItemSeparator />

                                    <dxr:BarButtonGroup>
                                        <dxrudi:GroupedBarButtonItemWithContent
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ChartLoad}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel.ReportModel.Diagram.XREditorCommands.LoadChartLayout, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_ChartLoad_Caption}"
                                            Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/ReportGroup/OpenFile.svg'}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_ChartLoad_STipContent}"
                                            LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/ReportGroup/OpenFile.svg'}"
                                            RibbonStyle="SmallWithText" />
                                    </dxr:BarButtonGroup>


                                    <dxr:BarButtonGroup>
                                        <dxrudi:GroupedBarButtonItemWithContent
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ChartSave}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel.Diagram.XREditorCommands.SaveChartLayout, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_ChartSave_Caption}"
                                            Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/ReportGroup/SaveFile.svg'}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_ChartSave_STipContent}"
                                            LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/ReportGroup/SaveFile.svg'}"
                                            RibbonStyle="SmallWithText" />
                                    </dxr:BarButtonGroup>
                                </dxr:RibbonPageGroup>
                                <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ChartDesignDataGroup}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_Data}">
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ChartAddNewDataSource}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.SetDataSourceCommand, RelativeSource={RelativeSource Self}}"
                                        CommandParameter="{x:Type xrdiag:XRChartDiagramItem}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_ChartAddDataSource_Caption}"
                                        Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/AddDataSource.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_ChartAddDataSource_STipContent}"
                                        LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/AddDataSource.svg'}" />
                                </dxr:RibbonPageGroup>
                                <dxr:RibbonPageGroup
                                    dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ChartDesignSeriesGroup}"
                                    Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_Series}"
                                    CaptionButtonCommand="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.EditChartSeriesCommand, RelativeSource={RelativeSource Self}}"
                                    ShowCaptionButton="True">
                                    <dxb:BarSplitButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ChartAddSeriesViewBar}"
                                        ActAsDropDown="True"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_ChartAddSeriesViewBar_Caption}"
                                        Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/Charts/ChartGroupBar.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_ChartAddSeriesViewBar_STipContent}"
                                        LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/Charts/ChartGroupBar.svg'}">
                                        <dxr:GalleryDropDownPopupMenu>
                                            <dxr:GalleryDropDownPopupMenu.Gallery>
                                                <dxb:Gallery dxrudi:RibbonInsertChartSeriesGalleryBehavior.SeriesType="Bar" Style="{StaticResource insertSeriesGalleryStyle}" />
                                            </dxr:GalleryDropDownPopupMenu.Gallery>
                                        </dxr:GalleryDropDownPopupMenu>
                                    </dxb:BarSplitButtonItem>
                                    <dxb:BarSplitButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ChartAddSeriesViewLine}"
                                        ActAsDropDown="True"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_ChartAddSeriesViewLine_Caption}"
                                        Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/Charts/ChartGroupLine.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_ChartAddSeriesViewLine_STipContent}"
                                        LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/Charts/ChartGroupLine.svg'}">
                                        <dxr:GalleryDropDownPopupMenu>
                                            <dxr:GalleryDropDownPopupMenu.Gallery>
                                                <dxb:Gallery dxrudi:RibbonInsertChartSeriesGalleryBehavior.SeriesType="Line" Style="{StaticResource insertSeriesGalleryStyle}" />
                                            </dxr:GalleryDropDownPopupMenu.Gallery>
                                        </dxr:GalleryDropDownPopupMenu>
                                    </dxb:BarSplitButtonItem>
                                    <dxb:BarSplitButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ChartAddSeriesViewArea}"
                                        ActAsDropDown="True"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_ChartAddSeriesViewArea_Caption}"
                                        Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/Charts/ChartGroupArea.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_ChartAddSeriesViewArea_STipContent}"
                                        LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/Charts/ChartGroupArea.svg'}">
                                        <dxr:GalleryDropDownPopupMenu>
                                            <dxr:GalleryDropDownPopupMenu.Gallery>
                                                <dxb:Gallery dxrudi:RibbonInsertChartSeriesGalleryBehavior.SeriesType="Area" Style="{StaticResource insertSeriesGalleryStyle}" />
                                            </dxr:GalleryDropDownPopupMenu.Gallery>
                                        </dxr:GalleryDropDownPopupMenu>
                                    </dxb:BarSplitButtonItem>
                                    <dxb:BarSplitButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ChartAddSeriesViewRange}"
                                        ActAsDropDown="True"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_ChartAddSeriesViewRange_Caption}"
                                        Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/Charts/ChartGroupRange.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_ChartAddSeriesViewRange_STipContent}"
                                        LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/Charts/ChartGroupRange.svg'}">
                                        <dxr:GalleryDropDownPopupMenu>
                                            <dxr:GalleryDropDownPopupMenu.Gallery>
                                                <dxb:Gallery dxrudi:RibbonInsertChartSeriesGalleryBehavior.SeriesType="Range" Style="{StaticResource insertSeriesGalleryStyle}" />
                                            </dxr:GalleryDropDownPopupMenu.Gallery>
                                        </dxr:GalleryDropDownPopupMenu>
                                    </dxb:BarSplitButtonItem>
                                    <dxb:BarSplitButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ChartAddSeriesViewPieAndDoughnut}"
                                        ActAsDropDown="True"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_ChartAddSeriesViewPieAndDoughnut_Caption}"
                                        Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/Charts/ChartGroupPie.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_ChartAddSeriesViewPieAndDoughnut_STipContent}"
                                        LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/Charts/ChartGroupPie.svg'}">
                                        <dxr:GalleryDropDownPopupMenu>
                                            <dxr:GalleryDropDownPopupMenu.Gallery>
                                                <dxb:Gallery dxrudi:RibbonInsertChartSeriesGalleryBehavior.SeriesType="PieAndDoughnut" Style="{StaticResource insertSeriesGalleryStyle}" />
                                            </dxr:GalleryDropDownPopupMenu.Gallery>
                                        </dxr:GalleryDropDownPopupMenu>
                                    </dxb:BarSplitButtonItem>
                                    <dxb:BarSplitButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ChartAddSeriesViewRadarAndPolar}"
                                        ActAsDropDown="True"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_ChartAddSeriesViewRadarAndPolar_Caption}"
                                        Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/Charts/CreateRadarLineChart.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_ChartAddSeriesViewRadarAndPolar_STipContent}"
                                        LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/Charts/CreateRadarLineChart.svg'}">
                                        <dxr:GalleryDropDownPopupMenu>
                                            <dxr:GalleryDropDownPopupMenu.Gallery>
                                                <dxb:Gallery dxrudi:RibbonInsertChartSeriesGalleryBehavior.SeriesType="RadarAndPolar" Style="{StaticResource insertSeriesGalleryStyle}" />
                                            </dxr:GalleryDropDownPopupMenu.Gallery>
                                        </dxr:GalleryDropDownPopupMenu>
                                    </dxb:BarSplitButtonItem>
                                    <dxb:BarSplitButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ChartAddSeriesViewOther}"
                                        ActAsDropDown="True"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_ChartAddSeriesViewOther_Caption}"
                                        Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/Charts/ChartGroupOther.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_ChartAddSeriesViewOther_STipContent}"
                                        LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/Charts/ChartGroupOther.svg'}">
                                        <dxr:GalleryDropDownPopupMenu>
                                            <dxr:GalleryDropDownPopupMenu.Gallery>
                                                <dxb:Gallery dxrudi:RibbonInsertChartSeriesGalleryBehavior.SeriesType="Other" ColCount="2" Style="{StaticResource insertSeriesGalleryStyle}" />
                                            </dxr:GalleryDropDownPopupMenu.Gallery>
                                        </dxr:GalleryDropDownPopupMenu>
                                    </dxb:BarSplitButtonItem>
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ChartRemoveSeries}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.RemoveChartSeriesCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_ChartRemoveSeries_Caption}"
                                        Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/EditGroup/Delete.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_ChartRemoveSeries_STipContent}"
                                        LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/EditGroup/Delete.svg'}" />
                                </dxr:RibbonPageGroup>
                                <dxr:RibbonPageGroup
                                    dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ChartDesignAnnotationsGroup}"
                                    Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_Annotations}"
                                    CaptionButtonCommand="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.EditChartAnnotationsCommand, RelativeSource={RelativeSource Self}}"
                                    ShowCaptionButton="True">
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ChartAddTextAnnotation}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.AddChartTextAnnotationCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_ChartAddTextAnnotation_Caption}"
                                        Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/Charts/CreateAnnotation.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_ChartAddTextAnnotation_STipContent}"
                                        LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/Charts/CreateAnnotation.svg'}" />
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ChartAddImageAnnotation}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.AddChartImageAnnotationCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_ChartAddImageAnnotation_Caption}"
                                        Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/Charts/CreateImageAnnotation.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_ChartAddImageAnnotation_STipContent}"
                                        LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/Charts/CreateImageAnnotation.svg'}" />
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ChartRemoveAnnotation}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.RemoveChartAnnotationCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_ChartRemoveAnnotation_Caption}"
                                        Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/EditGroup/Delete.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_ChartRemoveAnnotation_STipContent}"
                                        LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/EditGroup/Delete.svg'}" />
                                </dxr:RibbonPageGroup>
                                <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ChartDesignAppearanceGroup}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_Appearance}">
                                    <dxrudi:ChartPaletteBarItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.SetChartPalette}"
                                        ActAsDropDown="True"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_ChartPaletteName_Caption}"
                                        GlyphTemplate="{StaticResource chartPaletteBarItemGlyphTemplate}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_ChartPaletteName_STipContent}"
                                        ItemCaptionTemplate="{StaticResource chartPaletteItemCaptionTemplate}"
                                        ItemClickCommand="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.SetChartPaletteCommand, RelativeSource={RelativeSource Self}}"
                                        RibbonStyle="Large">
                                        <dxrudi:ChartPaletteBarItem.IsVisible>
                                            <MultiBinding Converter="{dxrudi:SelectedChartItemsToPageCategoryVisibilityConverter}" FallbackValue="False">
                                                <Binding Path="(dxrud:ReportDesigner.DocumentSelector).ViewKind" RelativeSource="{RelativeSource Self}" />
                                                <Binding Path="(dxrud:ReportDesigner.Document).Diagram.SelectionModel" RelativeSource="{RelativeSource Self}" />
                                            </MultiBinding>
                                        </dxrudi:ChartPaletteBarItem.IsVisible>
                                    </dxrudi:ChartPaletteBarItem>
                                    <dxb:BarItemSeparator />
                                    <dxrudi:ChartAppearanceGalleryItem dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ChartAppearanceGalleryItem}">
                                        <dxrudi:ChartAppearanceGalleryItem.IsVisible>
                                            <MultiBinding Converter="{dxrudi:SelectedChartItemsToPageCategoryVisibilityConverter}" FallbackValue="False">
                                                <Binding Path="(dxrud:ReportDesigner.DocumentSelector).ViewKind" RelativeSource="{RelativeSource Self}" />
                                                <Binding Path="(dxrud:ReportDesigner.Document).Diagram.SelectionModel" RelativeSource="{RelativeSource Self}" />
                                            </MultiBinding>
                                        </dxrudi:ChartAppearanceGalleryItem.IsVisible>
                                        <dxrudi:ChartAppearanceGalleryItem.ItemGlyphTemplate>
                                            <ControlTemplate>
                                                <Grid Height="59">
                                                    <dx:DXImage VerticalAlignment="Center" Source="{Binding Caption.Image}" Stretch="None" />
                                                </Grid>
                                            </ControlTemplate>
                                        </dxrudi:ChartAppearanceGalleryItem.ItemGlyphTemplate>
                                        <dxrudi:ChartAppearanceGalleryItem.ItemTemplate>
                                            <DataTemplate>
                                                <ContentControl>
                                                    <dxb:GalleryItem
                                                        Caption="{Binding}"
                                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.SetChartAppearanceCommand, RelativeSource={RelativeSource Self}}"
                                                        CommandParameter="{Binding AppearanceAndColor}"
                                                        IsChecked="{Binding IsChecked}">
                                                        <dxb:GalleryItem.Glyph>
                                                            <DrawingImage />
                                                        </dxb:GalleryItem.Glyph>
                                                        <dxb:GalleryItem.SuperTip>
                                                            <dx:SuperTip>
                                                                <dx:SuperTipHeaderItem Content="{Binding DisplayName}" />
                                                            </dx:SuperTip>
                                                        </dxb:GalleryItem.SuperTip>
                                                    </dxb:GalleryItem>
                                                </ContentControl>
                                            </DataTemplate>
                                        </dxrudi:ChartAppearanceGalleryItem.ItemTemplate>
                                    </dxrudi:ChartAppearanceGalleryItem>
                                </dxr:RibbonPageGroup>
                            </ItemsControl>
                        </DataTemplate>
                    </dxr:RibbonPage.GroupCollectionTemplate>
                </dxr:RibbonPage>
            </dxr:RibbonPageCategory>

            <dxr:RibbonPageCategory
                dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.PivotGridPageCategory}"
                Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageCategory_PivotGrid}"
                IsEnabled="{Binding Path=(dxrud:ReportDesigner.Designer).ActiveDocument, Mode=OneWay, Converter={dxmvvm:ObjectToBooleanConverter}, RelativeSource={RelativeSource Self}}"
                SelectedPageOnCategoryShowing="None"
                Color="#FFC9599C">
                <dxr:RibbonPageCategory.IsVisible>
                    <MultiBinding Converter="{dxrudi:SelectedPivotGridItemsToPageCategoryVisibilityConverter}" FallbackValue="False">
                        <Binding Path="(dxrud:ReportDesigner.DocumentSelector).ViewKind" RelativeSource="{RelativeSource TemplatedParent}" />
                        <Binding Path="(dxrud:ReportDesigner.Document).Diagram.SelectionModel" RelativeSource="{RelativeSource TemplatedParent}" />
                    </MultiBinding>
                </dxr:RibbonPageCategory.IsVisible>
                <dxr:RibbonPage dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.PivotGridDesignPage}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_ContextPage_Design}">
                    <dxr:RibbonPage.GroupCollectionTemplate>
                        <DataTemplate>
                            <ItemsControl>
                                <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.PivotGridDesignLayoutGroup}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_Layout}">
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.PivotGridRunDesigner}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.XREditorCommands.RunPivotGridDesignerCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_PivotGridRunDesigner_Caption}"
                                        Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PivotGrid/PivotGridDesigner.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_PivotGridRunDesigner_STipContent}"
                                        LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PivotGrid/PivotGridDesigner.svg'}" />

                                </dxr:RibbonPageGroup>
                                <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.PivotGridDesignDataGroup}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_Data}">
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.PivotGridAddNewDataSource}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.SetDataSourceCommand, RelativeSource={RelativeSource Self}}"
                                        CommandParameter="{x:Type xrdiag:XRPivotGridDiagramItem}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_PivotGridAddDataSource_Caption}"
                                        Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/AddDataSource.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_PivotGridAddDataSource_STipContent}"
                                        LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/AddDataSource.svg'}" />
                                </dxr:RibbonPageGroup>
                                <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.PivotGridDesignFieldsGroup}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_PivotFields}">
                                    <dxb:BarSubItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.PivotGridAddField}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_PivotGridAddField_Caption}"
                                        Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PivotGrid/AddField.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_PivotGridAddField_STipContent}"
                                        ItemLinksSource="{dxe:EnumItemsSource EnumType={x:Type dxpivotgrid:PivotArea}, NameConverter={dxrudi:EnumNameConverter}}"
                                        LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PivotGrid/AddField.svg'}">

                                        <dxb:BarSubItem.ItemTemplate>
                                            <DataTemplate>
                                                <ContentControl>
                                                    <dxb:BarButtonItem
                                                        dx:XamlHelper.Name="{Binding Id, Converter={dxrudi:PivotAreaToBarItemNameConverter}}"
                                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.AddPivotGridFieldCommand, RelativeSource={RelativeSource Self}}"
                                                        CommandParameter="{Binding Id}"
                                                        Content="{Binding}"
                                                        Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PivotGrid/AddField.svg'}"
                                                        LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PivotGrid/AddField.svg'}" />
                                                </ContentControl>
                                            </DataTemplate>
                                        </dxb:BarSubItem.ItemTemplate>
                                    </dxb:BarSubItem>
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.PivotGridRemoveField}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.RemovePivotGridFieldCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_PivotGridRemoveField_Caption}"
                                        Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/EditGroup/Delete.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_PivotGridRemoveField_STipContent}"
                                        LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/EditGroup/Delete.svg'}" />
                                </dxr:RibbonPageGroup>
                                <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.PivotGridDesignPrintOptionsGroup}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_PivotPrintOptions}">
                                    <dxb:BarCheckItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.PivotGridHorizontalLines}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.TogglePivotGridPrintHorizontalLinesCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_PivotGridHorizontalLines_Caption}"
                                        Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PivotGrid/HorizontalLines.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_PivotGridHorizontalLines_STipContent}"
                                        LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PivotGrid/HorizontalLines.svg'}">
                                        <dxmvvm:Interaction.Behaviors>
                                            <dxrudi:PivotGridPrintOptionsPropertyUpdater PropertyName="PrintHorzLines" SelectionModel="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Document).Diagram.SelectionModel, RelativeSource={RelativeSource Self}}" />
                                        </dxmvvm:Interaction.Behaviors>
                                    </dxb:BarCheckItem>
                                    <dxb:BarCheckItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.PivotGridVerticalLines}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.TogglePivotGridPrintVerticalLinesCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_PivotGridVerticalLines_Caption}"
                                        Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PivotGrid/VerticalLines.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_PivotGridVerticalLines_STipContent}"
                                        LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PivotGrid/VerticalLines.svg'}">
                                        <dxmvvm:Interaction.Behaviors>
                                            <dxrudi:PivotGridPrintOptionsPropertyUpdater PropertyName="PrintVertLines" SelectionModel="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Document).Diagram.SelectionModel, RelativeSource={RelativeSource Self}}" />
                                        </dxmvvm:Interaction.Behaviors>
                                    </dxb:BarCheckItem>
                                    <dxb:BarItemSeparator />
                                    <dxb:BarCheckItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.PivotGridPrintRowHeaders}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.TogglePivotGridPrintRowHeadersCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_PivotGridRowHeaders_Caption}"
                                        Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PivotGrid/RowHeaders.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_PivotGridRowHeaders_STipContent}"
                                        LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PivotGrid/RowHeaders.svg'}">
                                        <dxmvvm:Interaction.Behaviors>
                                            <dxrudi:PivotGridPrintOptionsPropertyUpdater PropertyName="PrintRowHeaders" SelectionModel="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Document).Diagram.SelectionModel, RelativeSource={RelativeSource Self}}" />
                                        </dxmvvm:Interaction.Behaviors>
                                    </dxb:BarCheckItem>
                                    <dxb:BarCheckItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.PivotGridPrintColumnHeaders}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.TogglePivotGridPrintColumnHeadersCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_PivotGridColumnHeaders_Caption}"
                                        Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PivotGrid/ColumnHeaders.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_PivotGridColumnHeaders_STipContent}"
                                        LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PivotGrid/ColumnHeaders.svg'}">
                                        <dxmvvm:Interaction.Behaviors>
                                            <dxrudi:PivotGridPrintOptionsPropertyUpdater PropertyName="PrintColumnHeaders" SelectionModel="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Document).Diagram.SelectionModel, RelativeSource={RelativeSource Self}}" />
                                        </dxmvvm:Interaction.Behaviors>
                                    </dxb:BarCheckItem>
                                    <dxb:BarCheckItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.PivotGridPrintDataHeaders}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.TogglePivotGridPrintDataHeadersCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_PivotGridDataHeaders_Caption}"
                                        Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PivotGrid/DataHeaders.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_PivotGridDataHeaders_STipContent}"
                                        LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PivotGrid/DataHeaders.svg'}">
                                        <dxmvvm:Interaction.Behaviors>
                                            <dxrudi:PivotGridPrintOptionsPropertyUpdater PropertyName="PrintDataHeaders" SelectionModel="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Document).Diagram.SelectionModel, RelativeSource={RelativeSource Self}}" />
                                        </dxmvvm:Interaction.Behaviors>
                                    </dxb:BarCheckItem>
                                    <dxb:BarItemSeparator />

                                    <dxr:BarButtonGroup>
                                        <dxrudi:GroupedBarButtonItemWithContent
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.PivotGridColumnAreaOnEveryPage}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.TogglePivotGridPrintRepeatColumnsCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_PivotGridColumnAreaOnEveryPage_Caption}"
                                            Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PivotGrid/PrintColumnArea.svg'}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_PivotGridColumnAreaOnEveryPage_STipContent}"
                                            LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PivotGrid/PrintColumnArea.svg'}"
                                            RibbonStyle="SmallWithText">
                                            <dxmvvm:Interaction.Behaviors>
                                                <dxrudi:PivotGridPrintOptionsPropertyUpdater PropertyName="PrintColumnAreaOnEveryPage" SelectionModel="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Document).Diagram.SelectionModel, RelativeSource={RelativeSource Self}}" />
                                            </dxmvvm:Interaction.Behaviors>
                                        </dxrudi:GroupedBarButtonItemWithContent>
                                    </dxr:BarButtonGroup>

                                    <dxr:BarButtonGroup>
                                        <dxrudi:GroupedBarButtonItemWithContent
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.PivotGridRowAreaOnEveryPage}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.TogglePivotGridPrintRepeatRowsCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_PivotGridRowAreaOnEveryPage_Caption}"
                                            Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PivotGrid/PrintRowArea.svg'}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_PivotGridRowAreaOnEveryPage_STipContent}"
                                            LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PivotGrid/PrintRowArea.svg'}"
                                            RibbonStyle="SmallWithText">
                                            <dxmvvm:Interaction.Behaviors>
                                                <dxrudi:PivotGridPrintOptionsPropertyUpdater PropertyName="PrintRowAreaOnEveryPage" SelectionModel="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Document).Diagram.SelectionModel, RelativeSource={RelativeSource Self}}" />
                                            </dxmvvm:Interaction.Behaviors>
                                        </dxrudi:GroupedBarButtonItemWithContent>
                                    </dxr:BarButtonGroup>
                                </dxr:RibbonPageGroup>
                            </ItemsControl>
                        </DataTemplate>
                    </dxr:RibbonPage.GroupCollectionTemplate>
                </dxr:RibbonPage>
            </dxr:RibbonPageCategory>

            <dxr:RibbonPageCategory
                dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ShapePageCategory}"
                Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageCategory_Shape}"
                IsEnabled="{Binding Path=(dxrud:ReportDesigner.Designer).ActiveDocument, Mode=OneWay, Converter={dxmvvm:ObjectToBooleanConverter}, RelativeSource={RelativeSource Self}}"
                SelectedPageOnCategoryShowing="None"
                Color="#FFFF9D00">
                <dxr:RibbonPageCategory.IsVisible>
                    <MultiBinding Converter="{dxrudi:SelectedItemsToPageCategoryVisibilityConverter}" FallbackValue="False">
                        <Binding Path="(dxrud:ReportDesigner.DocumentSelector).ViewKind" RelativeSource="{RelativeSource TemplatedParent}" />
                        <Binding Path="(dxrud:ReportDesigner.Document).Diagram.SelectionModel" RelativeSource="{RelativeSource TemplatedParent}" />
                        <Binding>
                            <Binding.Source>
                                <x:Type TypeName="xrdiag:XRShapeDiagramItem" />
                            </Binding.Source>
                        </Binding>
                    </MultiBinding>
                </dxr:RibbonPageCategory.IsVisible>

                <dxr:RibbonPage dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ShapeDesignPage}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_ContextPage_Design}">
                    <dxr:RibbonPage.GroupCollectionTemplate>
                        <DataTemplate>
                            <ItemsControl>
                                <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ShapeDesignViewGroup}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_View}">
                                    <dxb:BarCheckItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ShapeStretch}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_ShapeStretch_Caption}"
                                        Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/Shapes/ShapeStretch.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_ShapeStretch_STipContent}"
                                        IsChecked="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[Stretch], RelativeSource={RelativeSource Self}}"
                                        LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/Shapes/ShapeStretch.svg'}" />
                                    <dxb:BarItemSeparator />
                                    <dxr:RibbonGalleryBarItem dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ShapeGallery}" RibbonStyle="SmallWithText">
                                        <dxr:RibbonGalleryBarItem.Gallery>
                                            <dxb:Gallery
                                                AllowFilter="False"
                                                ColCount="23"
                                                IsGroupCaptionVisible="False"
                                                ItemMargin="7,14"
                                                SizeMode="None">
                                                <dxb:Gallery.ItemCaptionTemplate>
                                                    <DataTemplate>
                                                        <Grid VerticalAlignment="Stretch">
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition />
                                                                <RowDefinition />
                                                            </Grid.RowDefinitions>
                                                            <dx:DXImage
                                                                Grid.Row="0"
                                                                Width="32"
                                                                Height="32"
                                                                Source="{Binding Icon}" />
                                                            <!--<TextBlock Grid.Row="1" Text="{Binding DisplayName}" HorizontalAlignment="Center" VerticalAlignment="Center" />-->
                                                        </Grid>
                                                    </DataTemplate>
                                                </dxb:Gallery.ItemCaptionTemplate>

                                                <dxb:GalleryItemGroup IsCaptionVisible="False" ItemsSource="{x:Static dxrudi:RotatedShapeViewModelHelper.Shapes}">
                                                    <dxb:GalleryItemGroup.ItemTemplate>
                                                        <DataTemplate>
                                                            <ContentControl Margin="5,3">
                                                                <dxb:GalleryItem Caption="{Binding Converter={dxrudi:RotatedShapeViewModelConverter}}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.XRCommands.SetShape, RelativeSource={RelativeSource Self}}" CommandParameter="{Binding}" />
                                                            </ContentControl>
                                                        </DataTemplate>
                                                    </dxb:GalleryItemGroup.ItemTemplate>
                                                </dxb:GalleryItemGroup>
                                            </dxb:Gallery>
                                        </dxr:RibbonGalleryBarItem.Gallery>
                                    </dxr:RibbonGalleryBarItem>
                                </dxr:RibbonPageGroup>
                            </ItemsControl>
                        </DataTemplate>
                    </dxr:RibbonPage.GroupCollectionTemplate>
                </dxr:RibbonPage>
            </dxr:RibbonPageCategory>

            <dxr:RibbonPageCategory
                dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.BarCodePageCategory}"
                Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageCategory_BarCode}"
                IsEnabled="{Binding Path=(dxrud:ReportDesigner.Designer).ActiveDocument, Mode=OneWay, Converter={dxmvvm:ObjectToBooleanConverter}, RelativeSource={RelativeSource Self}}"
                SelectedPageOnCategoryShowing="None"
                Color="#FF935ED3">
                <dxr:RibbonPageCategory.IsVisible>
                    <MultiBinding Converter="{dxrudi:SelectedItemsToPageCategoryVisibilityConverter}" FallbackValue="False">
                        <Binding Path="(dxrud:ReportDesigner.DocumentSelector).ViewKind" RelativeSource="{RelativeSource TemplatedParent}" />
                        <Binding Path="(dxrud:ReportDesigner.Document).Diagram.SelectionModel" RelativeSource="{RelativeSource TemplatedParent}" />
                        <Binding>
                            <Binding.Source>
                                <x:Type TypeName="xrdiag:XRBarCodeDiagramItem" />
                            </Binding.Source>
                        </Binding>
                    </MultiBinding>
                </dxr:RibbonPageCategory.IsVisible>
                <dxr:RibbonPage dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.BarCodeDesignPage}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_ContextPage_Design}">
                    <dxr:RibbonPage.GroupCollectionTemplate>
                        <DataTemplate>
                            <ItemsControl>
                                <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.BarCodeDesignViewGroup}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_View}">
                                    <dxb:BarCheckItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.BarCodeAutoModule}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_BarCodeAutoModule_Caption}"
                                        Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/BarCodeAutoModule.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_BarCodeAutoModule_STipContent}"
                                        IsChecked="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[AutoModule], RelativeSource={RelativeSource Self}}"
                                        LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/BarCodeAutoModule.svg'}" />
                                    <dxb:BarCheckItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.BarCodeShowText}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_BarCodeShowText_Caption}"
                                        Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/BarCodeShowText.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_BarCodeShowText_STipContent}"
                                        IsChecked="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[ShowText], RelativeSource={RelativeSource Self}}"
                                        LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/BarCodeShowText.svg'}" />
                                </dxr:RibbonPageGroup>
                                <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.BarCodeDesignSymbologyGroup}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_Symbology}">
                                    <dxr:RibbonGalleryBarItem dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.BarCodeGallery}">
                                        <dxr:RibbonGalleryBarItem.Gallery>
                                            <dxb:Gallery ColCount="8">
                                                <dxb:Gallery.ItemCaptionTemplate>
                                                    <DataTemplate>
                                                        <Grid Height="59" MaxWidth="80" VerticalAlignment="Stretch">
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition />
                                                                <RowDefinition />
                                                            </Grid.RowDefinitions>
                                                            <dxe:BarCodeEdit
                                                                Grid.Row="0"
                                                                Width="80"
                                                                Height="50"
                                                                HorizontalContentAlignment="Center"
                                                                ShowText="False"
                                                                StyleSettings="{Binding SymbologyCode, Converter={dxrudi:BarCodeSymbologyConverter}}" />
                                                            <TextBlock
                                                                Grid.Row="1"
                                                                HorizontalAlignment="Center"
                                                                Text="{Binding Name}"
                                                                TextTrimming="CharacterEllipsis" />
                                                        </Grid>
                                                    </DataTemplate>
                                                </dxb:Gallery.ItemCaptionTemplate>

                                                <dxb:GalleryItemGroup ItemsSource="{dxrudi:FilteredBarCodeSymbologyItemsSource}">
                                                    <dxb:GalleryItemGroup.ItemTemplate>
                                                        <DataTemplate>
                                                            <ContentControl>
                                                                <dxb:GalleryItem Caption="{Binding}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.XRCommands.SetSymbology, RelativeSource={RelativeSource Self}}" CommandParameter="{Binding}" />
                                                            </ContentControl>
                                                        </DataTemplate>
                                                    </dxb:GalleryItemGroup.ItemTemplate>
                                                </dxb:GalleryItemGroup>
                                            </dxb:Gallery>
                                        </dxr:RibbonGalleryBarItem.Gallery>
                                    </dxr:RibbonGalleryBarItem>
                                </dxr:RibbonPageGroup>
                            </ItemsControl>
                        </DataTemplate>
                    </dxr:RibbonPage.GroupCollectionTemplate>
                </dxr:RibbonPage>
            </dxr:RibbonPageCategory>
            <dxr:RibbonDefaultPageCategory dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.DesignerPageCategory}">
                <dxr:RibbonPage
                    dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.DesignerHomePage}"
                    Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_Page_Home}"
                    IsSelected="{Binding Path=(dxrud:ReportDesigner.DocumentSelector).DesignerPageIsSelected, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                    IsVisible="{Binding Path=(dxrud:ReportDesigner.DocumentSelector).DesignerPageIsSelected, RelativeSource={RelativeSource Self}, Mode=OneWay}">
                    <dxr:RibbonPage.GroupCollectionTemplate>
                        <DataTemplate>
                            <ItemsControl>

                                <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ReportGroup}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_Report}">
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.New}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.NewDocumentCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_NewReport_Caption}"
                                        Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/ReportGroup/NewReport.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_NewReportWizard_STipContent}"
                                        LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/ReportGroup/NewReport.svg'}"
                                        RibbonStyle="Large">
                                        <dxb:BarButtonItem.IsVisible>
                                            <MultiBinding Converter="{dxrudi:AndMultiConverter}">
                                                <Binding Converter="{dxrudi:ReportStorageToCanCreateNewConverter}" Path="(dxrud:ReportDesigner.Designer).ReportStorage" RelativeSource="{RelativeSource Self}" />
                                                <Binding Converter="{dxrudi:ReportDesignerViewToBooleanConverter}" Path="(dxrud:ReportDesigner.Designer).View" RelativeSource="{RelativeSource Self}" />
                                            </MultiBinding>
                                        </dxb:BarButtonItem.IsVisible>
                                    </dxb:BarButtonItem>
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.Open}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.OpenDocumentCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_OpenFile_Caption}"
                                        Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/ReportGroup/OpenFile.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_OpenFile_STipContent}"
                                        IsVisible="{Binding Path=(dxrud:ReportDesigner.Designer).ReportStorage, RelativeSource={RelativeSource Self}, Converter={dxrudi:ReportStorageToCanOpenConverter}}"
                                        LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/ReportGroup/OpenFile.svg'}"
                                        RibbonStyle="Large" />
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.Save}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.SaveDocumentCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_SaveFile_Caption}"
                                        Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/ReportGroup/SaveFile.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_SaveFile_STipContent}"
                                        LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/ReportGroup/SaveFile.svg'}"
                                        RibbonStyle="Large" />
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.SaveAs}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.SaveDocumentAsCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_SaveFileAs_Caption}"
                                        Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/ReportGroup/SaveFileAs.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_SaveFileAs_STipContent}"
                                        LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/ReportGroup/SaveFileAs.svg'}"
                                        RibbonStyle="Large" />
                                </dxr:RibbonPageGroup>
                                <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.DataGroup}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_Data}">
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.AddNewDataSource}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.RunDataSourceWizardCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_AddNewDataSource_Caption}"
                                        Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/AddDataSource.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_AddNewDataSource_STipContent}"
                                        LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/AddDataSource.svg'}" />
                                    <dxb:BarItemSeparator />
                                    <dxr:BarButtonGroup>
                                        <dxrudi:GroupedBarButtonItemWithContent
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.AddCalculatedFields}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.AddNewCalculatedFieldCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_AddCalculatedField_Caption}"
                                            Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/AddCalculatedField.svg'}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_AddCalculatedField_STipContent}"
                                            LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/AddCalculatedField.svg'}"
                                            RibbonStyle="SmallWithText" />
                                    </dxr:BarButtonGroup>
                                    <dxr:BarButtonGroup>
                                        <dxrudi:GroupedBarButtonItemWithContent
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.AddParameter}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.AddNewParameterCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_AddParameter_Caption}"
                                            Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/AddParameter.svg'}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_AddParameter_STipContent}"
                                            LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/AddParameter.svg'}"
                                            RibbonStyle="SmallWithText" />
                                    </dxr:BarButtonGroup>
                                </dxr:RibbonPageGroup>
                                <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.EditGroup}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_Clipboard}" IsEnabled="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionModel, RelativeSource={RelativeSource Self}, Converter={dxrudi:SelectedItemToIsEnabledConverter}, FallbackValue=False}">
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.Paste}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.PasteCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_Paste_Caption}"
                                        Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/EditGroup/Paste.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_Paste_STipContent}"
                                        LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/EditGroup/Paste.svg'}"
                                        RibbonStyle="Large" />
                                    <dxr:BarButtonGroup>
                                        <dxrudi:GroupedBarButtonItemWithContent
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.Cut}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.CutCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_Cut_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/EditGroup/Cut.svg'}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_Cut_STipContent}"
                                            LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/EditGroup/Cut.svg'}"
                                            RibbonStyle="SmallWithText" />
                                    </dxr:BarButtonGroup>
                                    <dxr:BarButtonGroup>
                                        <dxrudi:GroupedBarButtonItemWithContent
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.Copy}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.CopyCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_Copy_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/EditGroup/Copy.svg'}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_Copy_STipContent}"
                                            LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/EditGroup/Copy.svg'}"
                                            RibbonStyle="SmallWithText" />
                                    </dxr:BarButtonGroup>
                                </dxr:RibbonPageGroup>
                                <dxr:RibbonPageGroup
                                    dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.FontGroup}"
                                    Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_Font}"
                                    Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/FontGroup/Font.svg'}"
                                    IsEnabled="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionModel, RelativeSource={RelativeSource Self}, Converter={dxrudi:SelectedItemToIsEnabledConverter}, FallbackValue=False}">
                                    <dxr:BarButtonGroup>
                                        <dxb:BarEditItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.FontName}"
                                            ClosePopupOnChangingEditValue="True"
                                            EditValue="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[FontFamily], RelativeSource={RelativeSource Self}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_FontName_STipContent}"
                                            IsEnabled="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.CanSetTextProperties, RelativeSource={RelativeSource Self}}"
                                            Style="{StaticResource RibbonFontNameSelectorStyle}">
                                            <dxb:BarEditItem.EditSettings>
                                                <dxe:FontEditSettings />
                                            </dxb:BarEditItem.EditSettings>
                                        </dxb:BarEditItem>
                                        <dxb:BarEditItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.FontSize}"
                                            EditValue="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[FontSize], RelativeSource={RelativeSource Self}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_FontSize_STipContent}"
                                            IsEnabled="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.CanSetTextProperties, RelativeSource={RelativeSource Self}}"
                                            Style="{StaticResource RibbonFontSizeSelectorStyle}">
                                            <dxb:BarEditItem.EditSettings>
                                                <dxe:ComboBoxEditSettings MaskType="Numeric">
                                                    <dxe:ComboBoxEditSettings.ItemsSource>
                                                        <dxrudi:PredefinedFontSizeFCollection />
                                                    </dxe:ComboBoxEditSettings.ItemsSource>
                                                </dxe:ComboBoxEditSettings>
                                            </dxb:BarEditItem.EditSettings>
                                        </dxb:BarEditItem>
                                    </dxr:BarButtonGroup>
                                    <dxr:BarButtonGroup>
                                        <dxb:BarCheckItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.FontBold}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.ToggleFontBoldCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_FontBold_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/FontGroup/FontBold.svg'}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_FontBold_STipContent}"
                                            IsChecked="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[IsFontBold], RelativeSource={RelativeSource Self}, Mode=OneWay}" />
                                        <dxb:BarCheckItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.FontItalic}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.ToggleFontItalicCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_FontItalic_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/FontGroup/FontItalic.svg'}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_FontItalic_STipContent}"
                                            IsChecked="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[IsFontItalic], RelativeSource={RelativeSource Self}, Mode=OneWay}" />
                                        <dxb:BarCheckItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.FontUnderline}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.ToggleFontUnderlineCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_FontUnderline_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/FontGroup/FontUnderline.svg'}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_FontUnderline_STipContent}"
                                            IsChecked="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[IsFontUnderline], RelativeSource={RelativeSource Self}, Mode=OneWay}" />
                                        <dxb:BarCheckItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.FontStrikeOut}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.ToggleFontStrikethroughCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_FontStrikeout_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/FontGroup/FontStrikethrough.svg'}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_FontStrikeout_STipContent}"
                                            IsChecked="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[IsFontStrikethrough], RelativeSource={RelativeSource Self}, Mode=OneWay}" />
                                        <dxb:BarItemLinkSeparator />
                                        <dxb:BarSplitButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.Foreground}"
                                            ActAsDropDown="True"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_ForeColor_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/FontGroup/ForeColor.svg'}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_ForeColor_STipContent}"
                                            IsEnabled="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.CanSetForegroundColor, RelativeSource={RelativeSource Self}}">
                                            <dxb:BarSplitButtonItem.PopupControl>
                                                <dxb:PopupControlContainer>
                                                    <dxe:ColorEdit CloseOwnerPopupOnClick="True" EditValue="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[ForeColor], RelativeSource={RelativeSource Self}}" ShowBorder="False" />
                                                </dxb:PopupControlContainer>
                                            </dxb:BarSplitButtonItem.PopupControl>
                                        </dxb:BarSplitButtonItem>
                                        <dxb:BarSplitButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.Background}"
                                            ActAsDropDown="True"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_BackColor_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/FontGroup/BackColor.svg'}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_BackColor_STipContent}"
                                            IsEnabled="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.CanSetBackgroundColor, RelativeSource={RelativeSource Self}}">
                                            <dxb:BarSplitButtonItem.PopupControl>
                                                <dxb:PopupControlContainer>
                                                    <dxe:ColorEdit
                                                        CloseOwnerPopupOnClick="True"
                                                        DefaultColor="White"
                                                        EditValue="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[BackColor], RelativeSource={RelativeSource Self}}"
                                                        ShowBorder="False" />
                                                </dxb:PopupControlContainer>
                                            </dxb:BarSplitButtonItem.PopupControl>
                                        </dxb:BarSplitButtonItem>
                                    </dxr:BarButtonGroup>
                                </dxr:RibbonPageGroup>
                                <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.TextAlignmentGroup}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_TextAlignment}" IsEnabled="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionModel, RelativeSource={RelativeSource Self}, Converter={dxrudi:SelectedItemToIsEnabledConverter}, FallbackValue=False}">
                                    <dxr:BarButtonGroup>
                                        <dxb:BarItemSelector dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.TextVertAlignmentSelector}" AllowEmptySelection="False" SelectedItem="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[TextAlignment], Converter={dxrudi:TextAlignmentToVerticalAlignmentConverter}, RelativeSource={RelativeSource Self}, Mode=OneWay}">
                                            <dxb:BarItemSelector.ItemLinksSource>
                                                <col:ArrayList>
                                                    <VerticalAlignment>Top</VerticalAlignment>
                                                    <VerticalAlignment>Center</VerticalAlignment>
                                                    <VerticalAlignment>Bottom</VerticalAlignment>
                                                </col:ArrayList>
                                            </dxb:BarItemSelector.ItemLinksSource>
                                            <dxb:BarItemSelector.ItemTemplate>
                                                <DataTemplate>
                                                    <ContentControl>
                                                        <dxb:BarCheckItem
                                                            dx:XamlHelper.Name="{Binding Converter={dxrudi:TextAlignmentToBarItemNameConverter}}"
                                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.SetVerticalAlignmentCommand, RelativeSource={RelativeSource Self}}"
                                                            CommandParameter="{Binding}"
                                                            Content="{Binding Converter={dxrudi:TextAlignmentToCaptionConverter}}"
                                                            Hint="{Binding Converter={dxrudi:TextAlignmentToHintConverter}}">
                                                            <dxb:BarCheckItem.Glyph>
                                                                <Binding Converter="{dxrudi:VerticalAlignmentToGlyphConverter}" />
                                                            </dxb:BarCheckItem.Glyph>
                                                        </dxb:BarCheckItem>
                                                    </ContentControl>
                                                </DataTemplate>
                                            </dxb:BarItemSelector.ItemTemplate>
                                        </dxb:BarItemSelector>
                                    </dxr:BarButtonGroup>
                                    <dxr:BarButtonGroup>
                                        <dxb:BarItemSelector dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.TextHorAlignmentSelector}" AllowEmptySelection="False" SelectedItem="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[TextAlignment], Converter={dxrudi:TextAlignmentToWpfTextAlignmentConverter}, RelativeSource={RelativeSource Self}, Mode=OneWay}">
                                            <dxb:BarItemSelector.ItemLinksSource>
                                                <col:ArrayList>
                                                    <TextAlignment>Left</TextAlignment>
                                                    <TextAlignment>Center</TextAlignment>
                                                    <TextAlignment>Right</TextAlignment>
                                                    <TextAlignment>Justify</TextAlignment>
                                                </col:ArrayList>
                                            </dxb:BarItemSelector.ItemLinksSource>
                                            <dxb:BarItemSelector.ItemTemplate>
                                                <DataTemplate>
                                                    <ContentControl>
                                                        <dxb:BarCheckItem
                                                            dx:XamlHelper.Name="{Binding Converter={dxrudi:TextAlignmentToBarItemNameConverter}}"
                                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.SetHorizontalAlignmentCommand, RelativeSource={RelativeSource Self}}"
                                                            CommandParameter="{Binding}"
                                                            Content="{Binding Converter={dxrudi:TextAlignmentToCaptionConverter}}"
                                                            Glyph="{Binding Converter={dxrudi:TextAlignmentToGlyphConverter}}"
                                                            Hint="{Binding Converter={dxrudi:TextAlignmentToHintConverter}}" />
                                                    </ContentControl>
                                                </DataTemplate>
                                            </dxb:BarItemSelector.ItemTemplate>
                                        </dxb:BarItemSelector>
                                    </dxr:BarButtonGroup>
                                </dxr:RibbonPageGroup>
                                <dxr:RibbonPageGroup
                                    dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.BordersGroup}"
                                    Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_Borders}"
                                    IsEnabled="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionModel, RelativeSource={RelativeSource Self}, Converter={dxrudi:SelectedItemToIsEnabledConverter}, FallbackValue=False}"
                                    ShowCaptionButton="False">
                                    <dxr:BarButtonGroup>
                                        <dxb:BarCheckItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.BordersAll}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_BordersAll_Caption}"
                                            Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/BorderAll.svg'}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_BordersAll_STipContent}"
                                            IsChecked="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[Borders], Converter={dxrudi:BorderSideToBooleanConverter Border={x:Static xpd:BorderSide.All}}, RelativeSource={RelativeSource Self}, Mode=TwoWay}" />
                                        <dxb:BarCheckItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.BordersNone}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_BordersNone_Caption}"
                                            Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/BorderNone.svg'}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_BordersNone_STipContent}"
                                            IsChecked="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[Borders], Converter={dxrudi:BorderSideToBooleanConverter Border={x:Static xpd:BorderSide.None}}, RelativeSource={RelativeSource Self}, Mode=TwoWay}" />
                                        <dxb:BarItemLinkSeparator />
                                        <dxb:BarCheckItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.BorderLeft}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_BorderLeft_Caption}"
                                            Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/BorderLeft.svg'}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_BorderLeft_STipContent}"
                                            IsChecked="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[Borders], Converter={dxrudi:BorderSideToBooleanConverter Border={x:Static xpd:BorderSide.Left}}, RelativeSource={RelativeSource Self}, Mode=TwoWay}" />
                                        <dxb:BarCheckItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.BorderTop}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_BorderTop_Caption}"
                                            Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/BorderTop.svg'}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_BorderTop_STipContent}"
                                            IsChecked="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[Borders], Converter={dxrudi:BorderSideToBooleanConverter Border={x:Static xpd:BorderSide.Top}}, RelativeSource={RelativeSource Self}, Mode=TwoWay}" />
                                        <dxb:BarCheckItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.BorderRight}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_BorderRight_Caption}"
                                            Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/BorderRight.svg'}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_BorderRight_STipContent}"
                                            IsChecked="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[Borders], Converter={dxrudi:BorderSideToBooleanConverter Border={x:Static xpd:BorderSide.Right}}, RelativeSource={RelativeSource Self}, Mode=TwoWay}" />
                                        <dxb:BarCheckItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.BorderBottom}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_BorderBottom_Caption}"
                                            Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/BorderBottom.svg'}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_BorderBottom_STipContent}"
                                            IsChecked="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[Borders], Converter={dxrudi:BorderSideToBooleanConverter Border={x:Static xpd:BorderSide.Bottom}}, RelativeSource={RelativeSource Self}, Mode=TwoWay}" />
                                    </dxr:BarButtonGroup>
                                    <dxr:BarButtonGroup>
                                        <dxb:BarSplitButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.BorderColor}"
                                            ActAsDropDown="True"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_BorderColor_Caption}"
                                            Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/BorderColor.svg'}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_BorderColor_STipContent}"
                                            IsEnabled="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.CanSetBorderColor, RelativeSource={RelativeSource Self}}">
                                            <dxb:BarSplitButtonItem.PopupControl>
                                                <dxb:PopupControlContainer>
                                                    <dxe:ColorEdit
                                                        CloseOwnerPopupOnClick="True"
                                                        DefaultColor="White"
                                                        EditValue="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[BorderColor], RelativeSource={RelativeSource Self}}"
                                                        ShowBorder="False" />
                                                </dxb:PopupControlContainer>
                                            </dxb:BarSplitButtonItem.PopupControl>
                                        </dxb:BarSplitButtonItem>
                                        <dxb:BarSubItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.BorderWidth}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_BorderWidth_Caption}"
                                            Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/BorderWidth.svg'}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_BorderWidth_STipContent}"
                                            LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/BorderWidth.svg'}">
                                            <dxb:BarCheckItem Content="0" ContentTemplate="{StaticResource borderWidthContentTemplate}" IsChecked="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[BorderWidth], RelativeSource={RelativeSource Self}, Converter={dxrudi:BorderWidthToBooleanConverter Expected=0}}" />
                                            <dxb:BarCheckItem Content="1" ContentTemplate="{StaticResource borderWidthContentTemplate}" IsChecked="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[BorderWidth], RelativeSource={RelativeSource Self}, Converter={dxrudi:BorderWidthToBooleanConverter Expected=1}}" />
                                            <dxb:BarCheckItem Content="2" ContentTemplate="{StaticResource borderWidthContentTemplate}" IsChecked="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[BorderWidth], RelativeSource={RelativeSource Self}, Converter={dxrudi:BorderWidthToBooleanConverter Expected=2}}" />
                                            <dxb:BarCheckItem Content="3" ContentTemplate="{StaticResource borderWidthContentTemplate}" IsChecked="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[BorderWidth], RelativeSource={RelativeSource Self}, Converter={dxrudi:BorderWidthToBooleanConverter Expected=3}}" />
                                            <dxb:BarCheckItem Content="4" ContentTemplate="{StaticResource borderWidthContentTemplate}" IsChecked="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[BorderWidth], RelativeSource={RelativeSource Self}, Converter={dxrudi:BorderWidthToBooleanConverter Expected=4}}" />
                                            <dxb:BarCheckItem Content="5" ContentTemplate="{StaticResource borderWidthContentTemplate}" IsChecked="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[BorderWidth], RelativeSource={RelativeSource Self}, Converter={dxrudi:BorderWidthToBooleanConverter Expected=5}}" />
                                            <dxb:BarCheckItem Content="6" ContentTemplate="{StaticResource borderWidthContentTemplate}" IsChecked="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[BorderWidth], RelativeSource={RelativeSource Self}, Converter={dxrudi:BorderWidthToBooleanConverter Expected=6}}" />
                                            <dxb:BarCheckItem Content="8" ContentTemplate="{StaticResource borderWidthContentTemplate}" IsChecked="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[BorderWidth], RelativeSource={RelativeSource Self}, Converter={dxrudi:BorderWidthToBooleanConverter Expected=8}}" />
                                            <dxb:BarCheckItem Content="10" ContentTemplate="{StaticResource borderWidthContentTemplate}" IsChecked="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[BorderWidth], RelativeSource={RelativeSource Self}, Converter={dxrudi:BorderWidthToBooleanConverter Expected=10}}" />
                                        </dxb:BarSubItem>
                                        <dxb:BarEditItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.BorderDashStyle}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_BorderDashStyle_Caption}"
                                            EditHorizontalAlignment="Stretch"
                                            EditSettings="{dxe:ComboBoxSettings ApplyItemTemplateToSelectedItem=True, HorizontalContentAlignment=Stretch, IsTextEditable=False, ValueMember=Style, ItemsSource={dxrudi:BorderDashStylesProvider}, ItemTemplate={StaticResource borderDashStyleContentTemplate}}"
                                            EditValue="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[BorderDashStyle], RelativeSource={RelativeSource Self}, Mode=TwoWay}"
                                            EditWidth="70"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_BorderDashStyle_STipContent}" />
                                    </dxr:BarButtonGroup>
                                </dxr:RibbonPageGroup>
                                <dxr:RibbonPageGroup
                                    dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.StylesGroup}"
                                    Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_Styles}"
                                    CaptionButtonCommand="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.XREditorCommands.RunStyleSheetEditorCommand, RelativeSource={RelativeSource Self}, FallbackValue={x:Null}}"
                                    IsEnabled="{Binding Path=(dxrud:ReportDesigner.Designer).ActiveDocument, Mode=OneWay, Converter={dxmvvm:ObjectToBooleanConverter}, RelativeSource={RelativeSource Self}}"
                                    ShowCaptionButton="True">
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ExtractStyle}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.ExtractStyleCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_ExtractStyle_Caption}"
                                        Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/ExtractStyle.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_ExtractStyle_STipContent}"
                                        LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/ExtractStyle.svg'}" />
                                    <dxr:RibbonGalleryBarItem dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.StyleGallery}" Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_Styles}">
                                        <dxr:RibbonGalleryBarItem.Gallery>
                                            <dxb:Gallery Style="{StaticResource styleGalleryStyle}">
                                                <dxb:Gallery.Groups>
                                                    <dxb:GalleryItemGroup ItemTemplate="{StaticResource styleItemTemplate}" ItemsSource="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel.(xrdiag:StylesGalleryModel.StylesGallery).Styles, RelativeSource={RelativeSource Self}}">
                                                        <dxmvvm:Interaction.Behaviors>
                                                            <xrdiag:SelectedStyleSyncBehavior StyleName="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Document).ReportModel.(xrdiag:StylesGalleryModel.StylesGallery).SelectedStyleName, RelativeSource={RelativeSource Self}}" />
                                                        </dxmvvm:Interaction.Behaviors>
                                                    </dxb:GalleryItemGroup>
                                                </dxb:Gallery.Groups>
                                            </dxb:Gallery>
                                        </dxr:RibbonGalleryBarItem.Gallery>
                                        <dxr:RibbonGalleryBarItem.DropDownGallery>
                                            <dxb:Gallery Style="{StaticResource styleGalleryStyle}">
                                                <dxb:Gallery.Groups>
                                                    <dxb:GalleryItemGroup ItemTemplate="{StaticResource styleItemTemplate}" ItemsSource="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel.(xrdiag:StylesGalleryModel.StylesGallery).Styles, RelativeSource={RelativeSource Self}}">
                                                        <dxmvvm:Interaction.Behaviors>
                                                            <xrdiag:SelectedStyleSyncBehavior StyleName="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Document).ReportModel.(xrdiag:StylesGalleryModel.StylesGallery).SelectedStyleName, RelativeSource={RelativeSource Self}}" />
                                                        </dxmvvm:Interaction.Behaviors>
                                                    </dxb:GalleryItemGroup>
                                                </dxb:Gallery.Groups>
                                            </dxb:Gallery>
                                        </dxr:RibbonGalleryBarItem.DropDownGallery>

                                        <dxr:RibbonGalleryBarItem.DropDownMenuItems>
                                            <dxb:BarButtonItem Command="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.XRCommands.AddStyle, RelativeSource={RelativeSource Self}}" Content="Add Style" />
                                            <dxb:BarButtonItem Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.ClearFormattingCommand, RelativeSource={RelativeSource Self}}" Content="Clear Formatting" />
                                            <dxb:BarButtonItem Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.RemoveDuplicateStylesCommand, RelativeSource={RelativeSource Self}}" Content="Remove Duplicates" />
                                        </dxr:RibbonGalleryBarItem.DropDownMenuItems>
                                    </dxr:RibbonGalleryBarItem>

                                </dxr:RibbonPageGroup>
                            </ItemsControl>
                        </DataTemplate>
                    </dxr:RibbonPage.GroupCollectionTemplate>
                </dxr:RibbonPage>
                <dxr:RibbonPage
                    dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.LayoutPage}"
                    Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_ContextPage_Layout}"
                    IsEnabled="{Binding Path=(dxrud:ReportDesigner.Document), RelativeSource={RelativeSource Self}, Converter={dxmvvm:ObjectToBooleanConverter}}"
                    IsVisible="{Binding Path=(dxrud:ReportDesigner.DocumentSelector).DesignerPageIsSelected, RelativeSource={RelativeSource Self}, Mode=OneWay}">
                    <dxr:RibbonPage.GroupCollectionTemplate>
                        <DataTemplate>
                            <ItemsControl>

                                <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.AlignmentGroup}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_Alignment}">
                                    <dxr:BarButtonGroup>
                                        <dxb:BarButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.AlignLeft}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.AlignLeftCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_AlignLeft_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/AlignmentGroup/AlignLeft.svg'}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_AlignLeft_STipContent}" />
                                        <dxb:BarButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.AlignVerticalCenters}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.AlignVerticalCentersCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_AlignVerticalCenters_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/AlignmentGroup/AlignVerticalCenters.svg'}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_AlignVerticalCenters_STipContent}" />
                                        <dxb:BarButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.AlignRight}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.AlignRightCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_AlignRight_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/AlignmentGroup/AlignRight.svg'}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_AlignRight_STipContent}" />
                                    </dxr:BarButtonGroup>
                                    <dxr:BarButtonGroup>
                                        <dxb:BarButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.AlignTop}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.AlignTopCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_AlignTop_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/AlignmentGroup/AlignTop.svg'}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_AlignTop_STipContent}" />
                                        <dxb:BarButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.AlignHorizontalCenters}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.AlignHorizontalCentersCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_AlignHorizontalCenters_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/AlignmentGroup/AlignHorizontalCenters.svg'}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_AlignHorizontalCenters_STipContent}" />
                                        <dxb:BarButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.AlignBottom}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.AlignBottomCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_AlignBottom_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/AlignmentGroup/AlignBottom.svg'}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_AlignBottom_STipContent}" />
                                    </dxr:BarButtonGroup>
                                </dxr:RibbonPageGroup>
                                <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.LayoutGroup}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_SizeAndLayout}">

                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.AlignToGrid}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.AlignToGridCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_AlignToGrid_Caption}"
                                        Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/AlignmentGroup/AlignToGrid.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_AlignToGrid_STipContent}"
                                        RibbonStyle="Large" />
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.SizeToGrid}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.SizeToGridCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_SizeToGrid_Caption}"
                                        Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/LayoutGroup/SizeToGrid.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_SizeToGrid_STipContent}"
                                        RibbonStyle="Large" />
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.FitBoundsToContainer}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.FitBoundsToContainerCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_FitBoundsToContainer_Caption}"
                                        Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/LayoutGroup/FitBoundsToContainer.svg'}"
                                        LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/LayoutGroup/FitBoundsToContainer.svg'}"
                                        RibbonStyle="Large" />
                                    <dxr:BarButtonGroup>
                                        <dxb:BarButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.HorizontalSpaceMakeEqual}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.HorizontalSpaceMakeEqualCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_HorizSpaceMakeEqual_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/LayoutGroup/HorizontalSpaceMakeEqual.svg'}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_HorizSpaceMakeEqual_STipContent}" />
                                        <dxb:BarButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.HorizontalSpaceIncrease}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.HorizontalSpaceIncreaseCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_HorizSpaceIncrease_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/LayoutGroup/HorizontalSpaceIncrease.svg'}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_HorizSpaceIncrease_STipContent}" />
                                        <dxb:BarButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.HorizontalSpaceDecrease}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.HorizontalSpaceDecreaseCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_HorizSpaceDecrease_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/LayoutGroup/HorizontalSpaceDecrease.svg'}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_HorizSpaceDecrease_STipContent}" />
                                        <dxb:BarButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.HorizontalSpaceConcatenate}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.HorizontalSpaceConcatenateCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_HorizSpaceConcatenate_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/LayoutGroup/HorizontalSpaceConcatenate.svg'}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_HorizSpaceConcatenate_STipContent}" />
                                    </dxr:BarButtonGroup>
                                    <dxr:BarButtonGroup>
                                        <dxb:BarButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.SizeToControlWidth}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.SizeToControlWidthCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_SizeToControlWidth_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/LayoutGroup/SizeToControlWidth.svg'}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_SizeToControlWidth_STipContent}" />
                                        <dxb:BarButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.SizeToControlHeight}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.SizeToControlHeightCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_SizeToControlHeight_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/LayoutGroup/SizeToControlHeight.svg'}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_SizeToControlHeight_STipContent}" />
                                        <dxb:BarButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.SizeToControl}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.SizeToControlCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_SizeToControl_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/LayoutGroup/SizeToControl.svg'}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_SizeToControl_STipContent}" />
                                    </dxr:BarButtonGroup>
                                    <dxr:BarButtonGroup>
                                        <dxb:BarButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.VerticalSpaceMakeEqual}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.VerticalSpaceMakeEqualCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_VertSpaceMakeEqual_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/LayoutGroup/VerticalSpaceMakeEqual.svg'}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_VertSpaceMakeEqual_STipContent}" />
                                        <dxb:BarButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.VerticalSpaceIncrease}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.VerticalSpaceIncreaseCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_VertSpaceIncrease_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/LayoutGroup/VerticalSpaceIncrease.svg'}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_VertSpaceIncrease_STipContent}" />
                                        <dxb:BarButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.VerticalSpaceDecrease}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.VerticalSpaceDecreaseCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_VertSpaceDecrease_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/LayoutGroup/VerticalSpaceDecrease.svg'}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_VertSpaceDecrease_STipContent}" />
                                        <dxb:BarButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.VerticalSpaceConcatenate}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.VerticalSpaceConcatenateCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_VertSpaceConcatenate_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/LayoutGroup/VerticalSpaceConcatenate.svg'}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_VertSpaceConcatenate_STipContent}" />
                                    </dxr:BarButtonGroup>
                                    <dxr:BarButtonGroup>
                                        <dxb:BarButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.CenterHorizontally}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.CenterHorizontallyCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_CenterHorizontally_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/LayoutGroup/CenterHorizontally.svg'}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_CenterHorizontally_STipContent}" />
                                        <dxb:BarButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.CenterVertically}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.CenterVerticallyCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_CenterVertically_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/LayoutGroup/CenterVertically.svg'}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_CenterVertically_STipContent}" />
                                    </dxr:BarButtonGroup>
                                </dxr:RibbonPageGroup>
                                <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ArrangeGroup}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_Arranging}">
                                    <dxb:BarSplitButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.BringToFrontSelector}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.BringToFrontCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_BringToFront_Caption}"
                                        Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/ArrangeGroup/BringToFront.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_BringToFront_STipContent}"
                                        LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/ArrangeGroup/BringToFront.svg'}"
                                        RibbonStyle="Large">
                                        <dxb:BarSplitButtonItem.PopupControl>
                                            <dxb:PopupMenu>
                                                <dxb:BarButtonItem
                                                    dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.BringForward}"
                                                    Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.BringForwardCommand, RelativeSource={RelativeSource Self}}"
                                                    Content="{dxrudl:ReportDesignerStringId StringId=BringForward_Caption}"
                                                    Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/ArrangeGroup/BringForward.svg'}"
                                                    LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/ArrangeGroup/BringForward.svg'}" />
                                                <dxb:BarButtonItem
                                                    dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.BringToFront}"
                                                    Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.BringToFrontCommand, RelativeSource={RelativeSource Self}}"
                                                    Content="{dxrudl:ReportDesignerStringId StringId=BringToFront_Caption}"
                                                    Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/ArrangeGroup/BringToFront.svg'}"
                                                    LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/ArrangeGroup/BringToFront.svg'}" />
                                            </dxb:PopupMenu>
                                        </dxb:BarSplitButtonItem.PopupControl>
                                    </dxb:BarSplitButtonItem>
                                    <dxb:BarSplitButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.SendToBackSelector}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.SendToBackCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_SendToBack_Caption}"
                                        Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/ArrangeGroup/SendToBack.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_SendToBack_STipContent}"
                                        LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/ArrangeGroup/SendToBack.svg'}"
                                        RibbonStyle="Large">
                                        <dxb:BarSplitButtonItem.PopupControl>
                                            <dxb:PopupMenu>
                                                <dxb:BarButtonItem
                                                    dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.SendBackward}"
                                                    Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.SendBackwardCommand, RelativeSource={RelativeSource Self}}"
                                                    Content="{dxrudl:ReportDesignerStringId StringId=SentBackward_Caption}"
                                                    Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/ArrangeGroup/SendBackward.svg'}"
                                                    LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/ArrangeGroup/SendBackward.svg'}" />
                                                <dxb:BarButtonItem
                                                    dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.SendToBack}"
                                                    Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.SendToBackCommand, RelativeSource={RelativeSource Self}}"
                                                    Content="{dxrudl:ReportDesignerStringId StringId=SentToBack_Caption}"
                                                    Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/ArrangeGroup/SendToBack.svg'}"
                                                    LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/ArrangeGroup/SendToBack.svg'}" />
                                            </dxb:PopupMenu>
                                        </dxb:BarSplitButtonItem.PopupControl>
                                    </dxb:BarSplitButtonItem>
                                </dxr:RibbonPageGroup>
                                <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.LayoutSnappingGroup}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_Snapping}">
                                    <dxr:BarButtonGroup>
                                        <dxb:BarEditItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.SnapToGrid}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_SnapToGrid_Caption}"
                                            EditHorizontalAlignment="Stretch"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_SnapToGrid_STipContent}"
                                            IsEnabled="{Binding Path=(dxrud:ReportDesigner.Document), RelativeSource={RelativeSource Self}, Converter={dxmvvm:ObjectToBooleanConverter}}">
                                            <dxb:BarEditItem.EditTemplate>
                                                <DataTemplate>
                                                    <dxe:CheckEdit Command="{Binding Path=Item.(dxrud:ReportDesigner.Designer).ActualCommands.ToggleSnapToGridCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxb:BarItemLinkInfo}}}" Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_SnapToGrid_Caption}" EditValue="{Binding Path=Item.(dxrud:ReportDesigner.Document).ReportModel.PropertiesModel[SnappingMode], Converter={dxrudi:SnappingModeToBooleanConverter Mode={x:Static reportsui:SnappingMode.SnapToGrid}}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxb:BarItemLinkInfo}}, Mode=OneWay}" />
                                                </DataTemplate>
                                            </dxb:BarEditItem.EditTemplate>
                                        </dxb:BarEditItem>
                                    </dxr:BarButtonGroup>
                                    <dxr:BarButtonGroup>
                                        <dxb:BarEditItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.SnapLines}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_SnapLines_Caption}"
                                            EditHorizontalAlignment="Left"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_SnapLines_STipContent}"
                                            IsEnabled="{Binding Path=(dxrud:ReportDesigner.Document), RelativeSource={RelativeSource Self}, Converter={dxmvvm:ObjectToBooleanConverter}}">
                                            <dxb:BarEditItem.EditTemplate>
                                                <DataTemplate>
                                                    <dxe:CheckEdit Command="{Binding Path=Item.(dxrud:ReportDesigner.Designer).ActualCommands.ToggleSnapToLinesCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxb:BarItemLinkInfo}}}" Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_SnapLines_Caption}" EditValue="{Binding Path=Item.(dxrud:ReportDesigner.Document).ReportModel.PropertiesModel[SnappingMode], Converter={dxrudi:SnappingModeToBooleanConverter Mode={x:Static reportsui:SnappingMode.SnapLines}}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxb:BarItemLinkInfo}}, Mode=OneWay}" />
                                                </DataTemplate>
                                            </dxb:BarEditItem.EditTemplate>
                                        </dxb:BarEditItem>
                                    </dxr:BarButtonGroup>
                                </dxr:RibbonPageGroup>
                            </ItemsControl>
                        </DataTemplate>
                    </dxr:RibbonPage.GroupCollectionTemplate>
                </dxr:RibbonPage>
                <dxr:RibbonPage
                    dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.PageRibbonPage}"
                    Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_Page_Page}"
                    IsEnabled="{Binding Path=(dxrud:ReportDesigner.Document), RelativeSource={RelativeSource Self}, Converter={dxmvvm:ObjectToBooleanConverter}}"
                    IsVisible="{Binding Path=(dxrud:ReportDesigner.DocumentSelector).DesignerPageIsSelected, RelativeSource={RelativeSource Self}, Mode=OneWay}">
                    <dxr:RibbonPage.GroupCollectionTemplate>
                        <DataTemplate>
                            <ItemsControl>

                                <dxr:RibbonPageGroup
                                    dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.PageSetupGroup}"
                                    Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_PageSetup}"
                                    CaptionButtonCommand="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.PageSetupCommand, RelativeSource={RelativeSource Self}}"
                                    ShowCaptionButton="True">
                                    <dxb:BarSubItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.PageMargins}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageMargins_Caption}"
                                        Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/EditorsGroup/PageSetup.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageMargins_STipContent}"
                                        LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/EditorsGroup/PageSetup.svg'}"
                                        SubItemsGlyphSize="Large">
                                        <dxb:BarButtonItem
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.PageMarginsNormalCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudi:RibbonPageMarginContentProvider Margins=Normal}"
                                            ContentTemplate="{StaticResource PageMarginsContentTemplate}"
                                            Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PageMarginsNormal.svg'}"
                                            LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PageMarginsNormal.svg'}" />
                                        <dxb:BarButtonItem
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.PageMarginsNarrowCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudi:RibbonPageMarginContentProvider Margins=Narrow}"
                                            ContentTemplate="{StaticResource PageMarginsContentTemplate}"
                                            Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PageMarginsNarrow.svg'}"
                                            LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PageMarginsNarrow.svg'}" />
                                        <dxb:BarButtonItem
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.PageMarginsModerateCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudi:RibbonPageMarginContentProvider Margins=Moderate}"
                                            ContentTemplate="{StaticResource PageMarginsContentTemplate}"
                                            Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PageMarginsModerate.svg'}"
                                            LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PageMarginsModerate.svg'}" />
                                        <dxb:BarButtonItem
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.PageMarginsWideCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudi:RibbonPageMarginContentProvider Margins=Wide}"
                                            ContentTemplate="{StaticResource PageMarginsContentTemplate}"
                                            Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PageMarginsWide.svg'}"
                                            LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PageMarginsWide.svg'}" />
                                        <dxb:BarItemLinkSeparator />
                                        <dxb:BarButtonItem
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.PageSetupCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_CustomMargins_Caption}"
                                            ContentTemplate="{StaticResource contextualBarButtonItemContentTemplate}"
                                            RibbonStyle="SmallWithText" />
                                    </dxb:BarSubItem>
                                    <dxb:BarSubItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.PageOrientation}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageOrientation_Caption}"
                                        Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PageOrientation.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageOrientation_STipContent}"
                                        LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PageOrientation.svg'}"
                                        SubItemsGlyphSize="Large">
                                        <dxb:BarCheckItem
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.PageOrientationPortraitCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportDesignerStringId StringId=PageOrientation_Portrait}"
                                            Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PageOrientationPortrait.svg'}"
                                            IsChecked="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel.PropertiesModel[Landscape], Converter={dxmvvm:BooleanNegationConverter}, RelativeSource={RelativeSource Self}}"
                                            LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PageOrientationPortrait.svg'}" />
                                        <dxb:BarCheckItem
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.PageOrientationLandscapeCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportDesignerStringId StringId=PageOrientation_Landscape}"
                                            Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PageOrientationLandscape.svg'}"
                                            IsChecked="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel.PropertiesModel[Landscape], RelativeSource={RelativeSource Self}}"
                                            LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PageOrientationLandscape.svg'}" />
                                    </dxb:BarSubItem>
                                    <dxb:BarSubItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.PaperKind}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageSize_Caption}"
                                        Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PaperSize.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageSize_STipContent}"
                                        LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PaperSize.svg'}"
                                        SubItemsGlyphSize="Large">
                                        <dxb:BarCheckItem
                                            Content="{dxdiagi:RibbonPageSizeContentProvider PaperKind=Letter}"
                                            ContentTemplate="{StaticResource PageSizeContentTemplate}"
                                            Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PaperKind_Letter.svg'}"
                                            IsChecked="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel.PropertiesModel[PaperKind], Converter={dxrudi:SelectedPaperKindConverter}, ConverterParameter=Letter, Mode=TwoWay, RelativeSource={RelativeSource Self}}"
                                            LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PaperKind_Letter.svg'}" />
                                        <dxb:BarCheckItem
                                            Content="{dxdiagi:RibbonPageSizeContentProvider PaperKind=Tabloid}"
                                            ContentTemplate="{StaticResource PageSizeContentTemplate}"
                                            Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PaperKind_Tabloid.svg'}"
                                            IsChecked="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel.PropertiesModel[PaperKind], Converter={dxrudi:SelectedPaperKindConverter}, ConverterParameter=Tabloid, Mode=TwoWay, RelativeSource={RelativeSource Self}}"
                                            LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PaperKind_Tabloid.svg'}" />
                                        <dxb:BarCheckItem
                                            Content="{dxdiagi:RibbonPageSizeContentProvider PaperKind=Legal}"
                                            ContentTemplate="{StaticResource PageSizeContentTemplate}"
                                            Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PaperKind_Legal.svg'}"
                                            IsChecked="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel.PropertiesModel[PaperKind], Converter={dxrudi:SelectedPaperKindConverter}, ConverterParameter=Legal, Mode=TwoWay, RelativeSource={RelativeSource Self}}"
                                            LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PaperKind_Legal.svg'}" />
                                        <dxb:BarCheckItem
                                            Content="{dxdiagi:RibbonPageSizeContentProvider PaperKind=Executive}"
                                            ContentTemplate="{StaticResource PageSizeContentTemplate}"
                                            Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PaperKind_Executive.svg'}"
                                            IsChecked="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel.PropertiesModel[PaperKind], Converter={dxrudi:SelectedPaperKindConverter}, ConverterParameter=Executive, Mode=TwoWay, RelativeSource={RelativeSource Self}}"
                                            LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PaperKind_Executive.svg'}" />
                                        <dxb:BarCheckItem
                                            Content="{dxdiagi:RibbonPageSizeContentProvider PaperKind=A3}"
                                            ContentTemplate="{StaticResource PageSizeContentTemplate}"
                                            Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PaperKind_A3.svg'}"
                                            IsChecked="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel.PropertiesModel[PaperKind], Converter={dxrudi:SelectedPaperKindConverter}, ConverterParameter=A3, Mode=TwoWay, RelativeSource={RelativeSource Self}}"
                                            LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PaperKind_A3.svg'}" />
                                        <dxb:BarCheckItem
                                            Content="{dxdiagi:RibbonPageSizeContentProvider PaperKind=A4}"
                                            ContentTemplate="{StaticResource PageSizeContentTemplate}"
                                            Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PaperKind_A4.svg'}"
                                            IsChecked="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel.PropertiesModel[PaperKind], Converter={dxrudi:SelectedPaperKindConverter}, ConverterParameter=A4, Mode=TwoWay, RelativeSource={RelativeSource Self}}"
                                            LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PaperKind_A4.svg'}" />
                                        <dxb:BarCheckItem
                                            Content="{dxdiagi:RibbonPageSizeContentProvider PaperKind=A5}"
                                            ContentTemplate="{StaticResource PageSizeContentTemplate}"
                                            Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PaperKind_A5.svg'}"
                                            IsChecked="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel.PropertiesModel[PaperKind], Converter={dxrudi:SelectedPaperKindConverter}, ConverterParameter=A5, Mode=TwoWay, RelativeSource={RelativeSource Self}}"
                                            LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PaperKind_A5.svg'}" />
                                        <dxb:BarItemLinkSeparator />
                                        <dxb:BarButtonItem
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.PageSetupCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_MorePaperSizes_Caption}"
                                            ContentTemplate="{StaticResource contextualBarButtonItemContentTemplate}"
                                            RibbonStyle="SmallWithText" />

                                    </dxb:BarSubItem>

                                </dxr:RibbonPageGroup>
                                <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.PageAppearanceGroup}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_Appearance}">
                                    <dxb:BarSplitButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.PageColor}"
                                        ActAsDropDown="True"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageColor_Caption}"
                                        Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PageColor.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageColor_STipContent}"
                                        RibbonStyle="Large">
                                        <dxb:BarSplitButtonItem.GlyphTemplate>
                                            <DataTemplate>
                                                <Grid>
                                                    <Path Margin="1,1,1,2" Data="M32,3v26c0,0.5-0.5,1-1,1H9c-0.5,0-1-0.5-1-1v-3.1C8.2,26,8.5,26,8.7,26c1.5,0,2.9-0.6,4-1.6l6.2-6.1                                                                               c0.2,1,0.3,2.1,0.3,3.3c0,2.4,2,4.4,4.4,4.4s4.4-2,4.4-4.4c0-5.8-4.3-10.6-9.9-11.5L19,9.3c1.2-1.2,1.2-3.1,0-4.2                                                                               c-0.6-0.6-1.3-0.9-2.1-0.9c-0.8,0-1.6,0.3-2.1,0.9l-2.6,2.6L8,3.4V3c0-0.5,0.5-1,1-1h22C31.5,2,32,2.5,32,3z M16.4,12                                                                               c2.6,0,4.8,4.3,4.8,9.6c0,1.3,1.1,2.4,2.4,2.4c1.3,0,2.4-1.1,2.4-2.4C26,16.3,21.7,12,16.4,12z">
                                                        <Path.Stroke>
                                                            <SolidColorBrush Color="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel.PropertiesModel[PageColor], RelativeSource={RelativeSource Self}}" />
                                                        </Path.Stroke>
                                                        <Path.Fill>
                                                            <SolidColorBrush Color="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel.PropertiesModel[PageColor], RelativeSource={RelativeSource Self}}" />
                                                        </Path.Fill>
                                                    </Path>
                                                    <dx:DXImage
                                                        Name="glyph"
                                                        Width="16"
                                                        Height="16"
                                                        Source="{Binding Item.Glyph, RelativeSource={RelativeSource AncestorType={x:Type dxb:BarItemLinkInfo}}}" />
                                                </Grid>
                                                <DataTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding Path=Item.RibbonStyle, RelativeSource={RelativeSource AncestorType={x:Type dxb:BarItemLinkInfo}}}" Value="Large">
                                                        <!--<Setter TargetName="color" Property="Width" Value="32"/>
                                                        <Setter TargetName="color" Property="Height" Value="32"/>-->
                                                        <Setter TargetName="glyph" Property="Width" Value="32" />
                                                        <Setter TargetName="glyph" Property="Height" Value="32" />
                                                    </DataTrigger>
                                                </DataTemplate.Triggers>
                                            </DataTemplate>
                                        </dxb:BarSplitButtonItem.GlyphTemplate>
                                        <dxb:BarSplitButtonItem.PopupControl>
                                            <dxb:PopupControlContainer>
                                                <dxe:ColorEdit
                                                    CloseOwnerPopupOnClick="True"
                                                    DefaultColor="White"
                                                    EditValue="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel.PropertiesModel[PageColor], RelativeSource={RelativeSource Self}, Mode=TwoWay}"
                                                    ShowBorder="False" />
                                            </dxb:PopupControlContainer>
                                        </dxb:BarSplitButtonItem.PopupControl>
                                    </dxb:BarSplitButtonItem>
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.Watermark}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.XREditorCommands.RunWatermarkEditorCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageWatermark_Caption}"
                                        Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/EditorsGroup/Watermark.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageWatermark_STipContent}"
                                        LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/EditorsGroup/Watermark.svg'}" />
                                </dxr:RibbonPageGroup>
                            </ItemsControl>
                        </DataTemplate>
                    </dxr:RibbonPage.GroupCollectionTemplate>
                </dxr:RibbonPage>
                <dxr:RibbonPage
                    dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ViewPage}"
                    Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_View}"
                    IsEnabled="{Binding Path=(dxrud:ReportDesigner.Document), RelativeSource={RelativeSource Self}, Converter={dxmvvm:ObjectToBooleanConverter}}"
                    IsVisible="{Binding Path=(dxrud:ReportDesigner.DocumentSelector).DesignerPageIsSelected, RelativeSource={RelativeSource Self}, Mode=OneWay}">
                    <dxr:RibbonPage.GroupCollectionTemplate>
                        <DataTemplate>
                            <ItemsControl>

                                <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ViewShowGroup}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_Show}">
                                    <dxb:BarCheckItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ShowExportWarnings}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.ToggleShowExportWarningsCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_ShowExportWarnings_Caption}"
                                        Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/ShowExportWarnings.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_ShowExportWarnings_STipContent}"
                                        IsChecked="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel.PropertiesModel[DesignerOptions][ShowExportWarnings], RelativeSource={RelativeSource Self}, Mode=OneWay}"
                                        LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/ShowExportWarnings.svg'}" />
                                    <dxb:BarCheckItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ShowPrintingWarnings}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.ToggleShowPrintingWarningsCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_ShowPrintingWarnings_Caption}"
                                        Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/ShowPrintingWarnings.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_ShowPrintingWarnings_STipContent}"
                                        IsChecked="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel.PropertiesModel[DesignerOptions][ShowPrintingWarnings], RelativeSource={RelativeSource Self}, Mode=OneWay}"
                                        LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/ShowPrintingWarnings.svg'}" />
                                    <dxb:BarItemSeparator />
                                    <dxr:BarButtonGroup>
                                        <dxrudi:GroupedBarCheckItemWithContent
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.DrawWatermark}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_DrawWatermark_Caption}"
                                            Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/ShowWatermark.svg'}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_DrawWatermark_STipContent}"
                                            IsChecked="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel.PropertiesModel[DrawWatermark], RelativeSource={RelativeSource Self}, Mode=TwoWay}"
                                            LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/ShowWatermark.svg'}"
                                            RibbonStyle="SmallWithText" />
                                    </dxr:BarButtonGroup>
                                    <dxr:BarButtonGroup>
                                        <dxrudi:GroupedBarCheckItemWithContent
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.DrawGridLines}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_DrawGridLines_Caption}"
                                            Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/ShowGridLines.svg'}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_DrawGridLines_STipContent}"
                                            IsChecked="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel.PropertiesModel[DrawGrid], RelativeSource={RelativeSource Self}, Mode=TwoWay}"
                                            LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/ShowGridLines.svg'}"
                                            RibbonStyle="SmallWithText" />
                                    </dxr:BarButtonGroup>
                                </dxr:RibbonPageGroup>
                                <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ViewBandsGroup}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_Bands}">
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ExpandAllBands}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.ExpandAllBandsCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_BandExpandAll_Caption}"
                                        Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/BandExpandAll.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_BandExpandAll_STipTitle}"
                                        LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/BandExpandAll.svg'}" />
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.CollapseAllBands}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.CollapseAllBandsCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_BandCollapseAll_Caption}"
                                        Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/BandCollapseAll.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_BandCollapseAll_STipTitle}"
                                        LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/BandCollapseAll.svg'}" />
                                </dxr:RibbonPageGroup>



                                <dxr:RibbonPageGroup
                                    dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ViewLocalizationGroup}"
                                    Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_Localization}"
                                    CaptionButtonCommand="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.RunLocalizationEditorCommand, RelativeSource={RelativeSource Self}, FallbackValue={x:Null}}"
                                    ShowCaptionButton="True">
                                    <dxr:BarButtonGroup>

                                        <dxb:BarStaticItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ReportLanguages}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_Language_STipTitle}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_Language_STipContent}"
                                            RibbonStyle="SmallWithText">
                                            <dxb:BarStaticItem.ContentTemplate>
                                                <DataTemplate>
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto" />
                                                            <ColumnDefinition Width="150" />
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock Margin="0,0,4,0" VerticalAlignment="Center" Text="{dxrudl:ReportStringId StringId=RibbonXRDesign_Language_STipTitle}" />
                                                        <dxe:ComboBoxEdit
                                                            Grid.Column="1"
                                                            AllowItemHighlighting="False"
                                                            AutoComplete="True"
                                                            DisplayMember="DisplayName"
                                                            EditValue="{Binding Path=Item.(dxrud:ReportDesigner.Document).ReportModel.PropertiesModel[XRLanguage], RelativeSource={RelativeSource AncestorType={x:Type dxb:BarItemLinkInfo}}, UpdateSourceTrigger=Explicit, Mode=TwoWay}"
                                                            FilterCondition="StartsWith"
                                                            IncrementalFiltering="True"
                                                            IncrementalSearch="True"
                                                            IsCaseSensitiveFilter="False"
                                                            IsTextEditable="True"
                                                            ItemsSource="{dxrudei:LanguagesItemsSource}"
                                                            ValueMember="Name">
                                                            <dxe:ComboBoxEdit.ItemTemplate>
                                                                <DataTemplate>
                                                                    <DataTemplate.Resources>
                                                                        <Style TargetType="{x:Type TextBlock}">
                                                                            <Style.Triggers>
                                                                                <DataTrigger Binding="{Binding IsLocalized}" Value="True">
                                                                                    <Setter Property="FontWeight" Value="Bold" />
                                                                                </DataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </DataTemplate.Resources>
                                                                    <TextBlock Text="{Binding DisplayName}" />
                                                                </DataTemplate>
                                                            </dxe:ComboBoxEdit.ItemTemplate>
                                                            <dxmvvm:Interaction.Behaviors>
                                                                <dxrudei:LanguageComboboxEditorBehavior ReportModel="{Binding Path=Item.(dxrud:ReportDesigner.Designer).ActiveDocument.ReportModel, RelativeSource={RelativeSource AncestorType=dxb:BarItemLinkInfo}}" />
                                                            </dxmvvm:Interaction.Behaviors>
                                                        </dxe:ComboBoxEdit>
                                                    </Grid>
                                                </DataTemplate>
                                            </dxb:BarStaticItem.ContentTemplate>
                                        </dxb:BarStaticItem>
                                    </dxr:BarButtonGroup>

                                    <dxr:BarButtonGroup>
                                        <dxb:BarEditItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ShowLocalizableProperties}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_ShowLocalizableProperties_Caption}"
                                            EditHorizontalAlignment="Stretch"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_ShowLocalizableProperties_STipContent}">
                                            <dxb:BarEditItem.EditTemplate>
                                                <DataTemplate>
                                                    <dxe:CheckEdit
                                                        Command="{Binding Path=Item.(dxrud:ReportDesigner.Designer).ActualCommands.ToggleShowLocalizedPropertiesCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxb:BarItemLinkInfo}}}"
                                                        CommandParameter="{Binding EditValue, RelativeSource={RelativeSource Mode=Self}}"
                                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_ShowLocalizableProperties_Caption}"
                                                        EditValue="{Binding Path=Item.(dxrud:ReportDesigner.Document).Diagram.ShowLocalizedProperties, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxb:BarItemLinkInfo}}}" />
                                                </DataTemplate>
                                            </dxb:BarEditItem.EditTemplate>
                                        </dxb:BarEditItem>
                                    </dxr:BarButtonGroup>

                                </dxr:RibbonPageGroup>
                                <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ViewZoomGroup}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_Zoom}">
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ZoomOut}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.Commands.ZoomOut, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_ZoomOut_Caption}"
                                        Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/Zoom/ZoomOut.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_ZoomOut_STipContent}"
                                        LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/Zoom/ZoomOut.svg'}" />
                                    <dxb:BarSubItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.Zoom}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_Zoom_Caption}"
                                        Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/Zoom/Zoom.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_Zoom_STipContent}"
                                        ItemLinksSource="{dxrudi:ZoomStaticValuesProvider}"
                                        LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/Zoom/Zoom.svg'}">
                                        <dxb:BarSubItem.ItemTemplate>
                                            <DataTemplate>
                                                <ContentControl>
                                                    <dxb:BarCheckItem Command="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.Commands.SetZoom, RelativeSource={RelativeSource Self}}" CommandParameter="{Binding}" Content="{Binding}">
                                                        <dxb:BarCheckItem.ContentTemplate>
                                                            <DataTemplate>
                                                                <TextBlock Margin="0,0,12,0" VerticalAlignment="Center" Text="{Binding StringFormat={}{0:P0}}" />
                                                            </DataTemplate>
                                                        </dxb:BarCheckItem.ContentTemplate>
                                                        <dxb:BarCheckItem.IsChecked>
                                                            <MultiBinding Converter="{dxrudi:DoubleValueEqualityConverter}" FallbackValue="False" Mode="OneWay">
                                                                <Binding Path="(dxrud:ReportDesigner.Document).Diagram.ZoomFactor" RelativeSource="{RelativeSource Self}" />
                                                                <Binding />
                                                            </MultiBinding>
                                                        </dxb:BarCheckItem.IsChecked>
                                                    </dxb:BarCheckItem>
                                                </ContentControl>
                                            </DataTemplate>
                                        </dxb:BarSubItem.ItemTemplate>
                                    </dxb:BarSubItem>
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ZoomIn}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.Commands.ZoomIn, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_ZoomIn_Caption}"
                                        Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/Zoom/ZoomIn.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_ZoomIn_STipContent}"
                                        LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/Zoom/ZoomIn.svg'}" />

                                </dxr:RibbonPageGroup>

                                <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ViewViewGroup}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_View}">
                                    <dxb:BarSubItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.Windows}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_Windows_Caption}"
                                        Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/Windows.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_Windows_STipContent}"
                                        ItemLinksSource="{Binding Path=(dxrud:ReportDesigner.Designer), Converter={dxrudi:DesignerToDesignerPanelsConverter}, RelativeSource={RelativeSource Self}}"
                                        LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/Windows.svg'}">
                                        <dxb:BarSubItem.ItemTemplate>
                                            <DataTemplate>
                                                <ContentControl>
                                                    <dxb:BarCheckItem
                                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.ToggleShowPanelCommand, RelativeSource={RelativeSource Self}}"
                                                        CommandParameter="{Binding}"
                                                        Content="{Binding Converter={dxrudi:DesignerPartsOptionsBaseToDisplayNameConverter}}"
                                                        Glyph="{Binding Converter={dxrudi:DesignerPartsToGlyphConverter}}"
                                                        IsChecked="{Binding Visibility, Converter={dxrudi:PanelStateToIsCheckedConverter}, Mode=OneWay}"
                                                        LargeGlyph="{Binding Converter={dxrudi:DesignerPartsToGlyphConverter}}" />
                                                </ContentControl>
                                            </DataTemplate>
                                        </dxb:BarSubItem.ItemTemplate>
                                    </dxb:BarSubItem>
                                </dxr:RibbonPageGroup>
                            </ItemsControl>
                        </DataTemplate>
                    </dxr:RibbonPage.GroupCollectionTemplate>
                </dxr:RibbonPage>
                <dxr:RibbonPage
                    dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.PreviewPage}"
                    Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_ShowPreviewTab_Caption}"
                    IsEnabled="{Binding Path=(dxrud:ReportDesigner.Document), RelativeSource={RelativeSource Self}, Converter={dxmvvm:ObjectToBooleanConverter}}"
                    IsSelected="{Binding Path=(dxrud:ReportDesigner.DocumentSelector).PreviewPageIsSelected, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                    IsVisible="{Binding Path=(dxrud:ReportDesigner.DocumentSelector).PreviewPageIsSelected, RelativeSource={RelativeSource Self}, Mode=OneWay}">
                    <dxr:RibbonPage.Resources>
                        <sys:Boolean x:Key="TrueBoolean">True</sys:Boolean>
                    </dxr:RibbonPage.Resources>
                    <dxr:RibbonPage.GroupCollectionTemplate>
                        <DataTemplate>
                            <ItemsControl>

                                <dxr:RibbonPageGroup dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.FileGroup}" Caption="{dxp:PrintingStringId StringId=RibbonPageGroup_File}">
                                    <bars:SaveBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.Save}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.SaveCommand, RelativeSource={RelativeSource Self}}" KeyGesture="{Binding Path=(dxrud:ReportDesigner.Document).ViewKind, RelativeSource={RelativeSource Self}, Converter={dxrudi:DesignerViewKindToKeyGestureConverter KeyGesture=CTRL+S, ExpectedViewKind=Preview}}" />
                                </dxr:RibbonPageGroup>

                                <dxr:RibbonPageGroup dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.PrintGroup}" Caption="{dxp:PrintingStringId StringId=RibbonPageGroup_Print}">
                                    <bars:PrintBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.Print}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.PrintCommand, RelativeSource={RelativeSource Self}}" KeyGesture="{Binding Path=(dxrud:ReportDesigner.Document).ViewKind, RelativeSource={RelativeSource Self}, Converter={dxrudi:DesignerViewKindToKeyGestureConverter KeyGesture=CTRL+P, ExpectedViewKind=Preview}}" />
                                    <bars:PrintDirectBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.PrintDirect}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.PrintDirectCommand, RelativeSource={RelativeSource Self}}" />
                                    <bars:PageSetupBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.PageSetup}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.PageSetupCommand, RelativeSource={RelativeSource Self}}" />
                                    <bars:ScaleBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.Scale}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.ScaleCommand, RelativeSource={RelativeSource Self}}" />
                                </dxr:RibbonPageGroup>

                                <dxr:RibbonPageGroup dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.NavigationGroup}" Caption="{dxp:PrintingStringId StringId=RibbonPageGroup_Navigation}">
                                    <bars:FirstPageBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.FirstPage}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.FirstPageCommand, RelativeSource={RelativeSource Self}}" />
                                    <dxdv:PreviousPageBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.PreviousPage}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.PreviousPageCommand, RelativeSource={RelativeSource Self}}" />
                                    <dxdv:NextPageBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.NextPage}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.NextPageCommand, RelativeSource={RelativeSource Self}}" />
                                    <bars:LastPageBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.LastPage}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.LastPageCommand, RelativeSource={RelativeSource Self}}" />
                                    <bars:NavigationPaneBarCheckItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.NavigationPane}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.ToggleNavigationPaneCommand, RelativeSource={RelativeSource Self}}" IsVisible="{Binding Path=(dxrud:ReportDesigner.Document).Preview.UseOfficeInspiredNavigationPane, RelativeSource={RelativeSource Self}}" />
                                </dxr:RibbonPageGroup>

                                <dxr:RibbonPageGroup dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.ZoomGroup}" Caption="{dxp:PrintingStringId StringId=RibbonPageGroup_Zoom}">
                                    <dxdv:ZoomOutBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.ZoomOut}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.ZoomOutCommand, RelativeSource={RelativeSource Self}}" />
                                    <dxdv:ZoomBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.Zoom}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.ZoomCommand, RelativeSource={RelativeSource Self}}" />
                                    <dxdv:ZoomInBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.ZoomIn}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.ZoomInCommand, RelativeSource={RelativeSource Self}}" />
                                </dxr:RibbonPageGroup>

                                <dxr:RibbonPageGroup dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.ViewGroup}" Caption="{dxp:PrintingStringId StringId=RibbonPageGroup_View}">
                                    <bars:PageLayoutBarSubItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.PageLayoutSplit}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.SetPageLayoutSplitCommand, RelativeSource={RelativeSource Self}}" />
                                    <dxb:BarItemSeparator />
                                    <bars:ContinuousScrollingBarCheckItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.ContinuousScrolling}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.ToggleEnableContinuousScrollingCommand, RelativeSource={RelativeSource Self}}" />
                                    <bars:CoverPageBarCheckItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.ShowCoverPage}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.ToggleShowCoverPageCommand, RelativeSource={RelativeSource Self}}" />
                                </dxr:RibbonPageGroup>

                                <dxr:RibbonPageGroup dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.ExportGroup}" Caption="{dxp:PrintingStringId StringId=RibbonPageGroup_Export}">
                                    <bars:ExportSplitItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.Export}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.ExportSplitCommand, RelativeSource={RelativeSource Self}}" />
                                    <bars:SendSplitItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.Send}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.SendSplitCommand, RelativeSource={RelativeSource Self}}" />
                                </dxr:RibbonPageGroup>

                                <dxr:RibbonPageGroup dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.DocumentGroup}" Caption="{dxp:PrintingStringId StringId=RibbonPageGroup_Document}">
                                    <bars:ParametersBarCheckItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.Parameters}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.ToggleParametersPanelCommand, RelativeSource={RelativeSource Self}}" />
                                    <bars:DocumentMapBarCheckItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.DocumentMap}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.ToggleDocumentMapCommand, RelativeSource={RelativeSource Self}}" IsVisible="{Binding Path=(dxrud:ReportDesigner.Document).Preview.UseOfficeInspiredNavigationPane, RelativeSource={RelativeSource Self}, Converter={dxmvvm:BooleanNegationConverter}, FallbackValue=False}" />
                                    <bars:ThumbnailsBarCheckItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.Thumbnails}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.ToggleThumbnailsCommand, RelativeSource={RelativeSource Self}}" IsVisible="{Binding Path=(dxrud:ReportDesigner.Document).Preview.UseOfficeInspiredNavigationPane, RelativeSource={RelativeSource Self}, Converter={dxmvvm:BooleanNegationConverter}, FallbackValue=False}" />
                                    <bars:EditingFieldsBarCheckItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.EditingFields}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.ToggleEditingFieldsCommand, RelativeSource={RelativeSource Self}}" />
                                    <bars:FindTextBarItem
                                        dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.Find}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.ShowFindTextCommand, RelativeSource={RelativeSource Self}}"
                                        CommandParameter="{StaticResource TrueBoolean}"
                                        KeyGesture="{Binding Path=(dxrud:ReportDesigner.Document).ViewKind, RelativeSource={RelativeSource Self}, Converter={dxrudi:DesignerViewKindToKeyGestureConverter KeyGesture=CTRL+F, ExpectedViewKind=Preview}}" />
                                    <bars:WatermarkBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.Watermark}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.SetWatermarkCommand, RelativeSource={RelativeSource Self}}" />

                                </dxr:RibbonPageGroup>
                            </ItemsControl>
                        </DataTemplate>
                    </dxr:RibbonPage.GroupCollectionTemplate>
                </dxr:RibbonPage>

                <dxr:RibbonPage
                    dx:XamlHelper.Name="{dxrudl:ReportStringId StringId=RibbonXRDesign_Page_Scripts}"
                    Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_Page_Scripts}"
                    IsEnabled="{Binding Path=(dxrud:ReportDesigner.Designer).ActiveDocument, Mode=OneWay, Converter={dxmvvm:ObjectToBooleanConverter}, RelativeSource={RelativeSource Self}}"
                    IsSelected="{Binding Path=(dxrud:ReportDesigner.DocumentSelector).ScriptEditorIsShown, RelativeSource={RelativeSource Self}, Mode=OneWay}">
                    <dxr:RibbonPage.IsVisible>
                        <MultiBinding Converter="{dxdai:BooleanAndConverter}">
                            <Binding Mode="OneWay" Path="(dxrud:ReportDesigner.DocumentSelector).ScriptEditorIsShown" RelativeSource="{RelativeSource TemplatedParent}" />
                            <Binding Converter="{dxrudi:IsScriptsEditableMarkup}" />
                        </MultiBinding>
                    </dxr:RibbonPage.IsVisible>
                    <dxr:RibbonPage.GroupCollectionTemplate>
                        <DataTemplate>
                            <ItemsControl>

                                <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ScriptEditGroup}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_Clipboard}" ItemLinksSource="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel.(dxrudi:ReportModelPropertiesExtensions.ScriptsCommandBindingProvider), Converter={dxrudi:SelectiveInputMultiBindingCommandInfoConverter}, RelativeSource={RelativeSource Self}}">
                                    <dxr:RibbonPageGroup.ItemTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxb:BarButtonItem
                                                    Command="{Binding Command}"
                                                    Content="{Binding Caption}"
                                                    Glyph="{Binding Name, Converter={dxrudi:CodeViewCommandToGlyphConverter}}"
                                                    KeyGesture="{Binding KeyGesture}"
                                                    RibbonStyle="Large" />
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxr:RibbonPageGroup.ItemTemplate>
                                </dxr:RibbonPageGroup>



                                <dxr:RibbonPageGroup dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.SelectScriptsGroup}" Caption="{dxrudl:ReportStringId StringId=RibbonXRDesign_PageGroup_Scripts}">
                                    <dxmvvm:Interaction.Behaviors>
                                        <dxrudi:RibbonPageGroupSharedSizeScopeBehavior />
                                    </dxmvvm:Interaction.Behaviors>

                                    <dxr:BarButtonGroup>
                                        <dxb:BarEditItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ScriptingComponents}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_ScriptsSelectControl_Caption}"
                                            EditValue="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel.ScriptingModel.SelectedComponentModel, RelativeSource={RelativeSource Self}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_ScriptsSelectControl_STipContent}"
                                            RibbonStyle="SmallWithText">
                                            <dxb:BarEditItem.EditTemplate>
                                                <DataTemplate>
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto" SharedSizeGroup="contentgroup" />
                                                            <ColumnDefinition Width="250" />
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock Margin="0,0,3,0" VerticalAlignment="Center" Text="{dxrudl:ReportStringId StringId=RibbonXRDesign_ScriptsSelectControl_Caption}" />
                                                        <dxe:ComboBoxEdit
                                                            Grid.Column="1"
                                                            AutoComplete="True"
                                                            DisplayMember="Name"
                                                            EditValue="{Binding Item.EditValue, RelativeSource={RelativeSource AncestorType={x:Type dxb:BarItemLinkInfo}}, Mode=TwoWay}"
                                                            IsTextEditable="False"
                                                            ItemsSource="{Binding Path=Item.(dxrud:ReportDesigner.Document).ReportModel.ScriptingModel.ComponentModels, RelativeSource={RelativeSource AncestorType={x:Type dxb:BarItemLinkInfo}}}">
                                                            <dxe:ComboBoxEdit.ItemTemplate>
                                                                <DataTemplate>
                                                                    <Grid HorizontalAlignment="Stretch">
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="Auto" SharedSizeGroup="scripting-components" />
                                                                            <ColumnDefinition Width="*" />
                                                                        </Grid.ColumnDefinitions>
                                                                        <TextBlock Text="{Binding Name}" />
                                                                        <TextBlock
                                                                            Grid.Column="1"
                                                                            Margin="72,0"
                                                                            FontStyle="Italic"
                                                                            Text="{Binding TypeName}" />
                                                                    </Grid>
                                                                </DataTemplate>
                                                            </dxe:ComboBoxEdit.ItemTemplate>
                                                        </dxe:ComboBoxEdit>
                                                    </Grid>
                                                </DataTemplate>
                                            </dxb:BarEditItem.EditTemplate>
                                        </dxb:BarEditItem>
                                    </dxr:BarButtonGroup>


                                    <dxr:BarButtonGroup>
                                        <dxb:BarEditItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ScriptingEvents}"
                                            Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_ScriptsSelectEvent_Caption}"
                                            EditValue="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel.ScriptingModel.SelectedComponentEventModel, RelativeSource={RelativeSource Self}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_ScriptsSelectEvent_STipContent}"
                                            RibbonStyle="SmallWithText">
                                            <dxb:BarEditItem.EditTemplate>
                                                <DataTemplate>
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto" SharedSizeGroup="contentgroup" />
                                                            <ColumnDefinition Width="250" />
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock Margin="0,0,3,0" VerticalAlignment="Center" Text="{dxrudl:ReportStringId StringId=RibbonXRDesign_ScriptsSelectEvent_Caption}" />
                                                        <dxe:ComboBoxEdit
                                                            Grid.Column="1"
                                                            AutoComplete="True"
                                                            DisplayMember="EventName"
                                                            EditValue="{Binding Item.EditValue, RelativeSource={RelativeSource AncestorType={x:Type dxb:BarItemLinkInfo}}, Mode=TwoWay}"
                                                            IsTextEditable="False"
                                                            ItemsSource="{Binding Path=Item.(dxrud:ReportDesigner.Document).ReportModel.ScriptingModel.SelectedComponentEventModels, RelativeSource={RelativeSource AncestorType={x:Type dxb:BarItemLinkInfo}}}">
                                                            <dxe:ComboBoxEdit.ItemTemplate>
                                                                <DataTemplate>
                                                                    <Grid HorizontalAlignment="Stretch">
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="Auto" SharedSizeGroup="scripting-events" />
                                                                            <ColumnDefinition Width="*" />
                                                                        </Grid.ColumnDefinitions>
                                                                        <TextBlock Text="{Binding DisplayName}" />
                                                                        <TextBlock
                                                                            Grid.Column="1"
                                                                            Margin="72,0"
                                                                            FontStyle="Italic"
                                                                            Text="{Binding DefaultSuffix}" />
                                                                    </Grid>
                                                                </DataTemplate>
                                                            </dxe:ComboBoxEdit.ItemTemplate>
                                                        </dxe:ComboBoxEdit>
                                                    </Grid>
                                                </DataTemplate>
                                            </dxb:BarEditItem.EditTemplate>
                                        </dxb:BarEditItem>
                                    </dxr:BarButtonGroup>

                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ValidateScript}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel.ScriptingModel.ValidateCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportStringId StringId=RibbonXRDesign_ValidateScripts_Caption}"
                                        Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/ValidateScripts.svg'}"
                                        Hint="{dxrudl:ReportStringId StringId=RibbonXRDesign_ScriptsValidate_STipContent}"
                                        LargeGlyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/ValidateScripts.svg'}"
                                        RibbonStyle="Large" />


                                </dxr:RibbonPageGroup>
                            </ItemsControl>
                        </DataTemplate>
                    </dxr:RibbonPage.GroupCollectionTemplate>
                </dxr:RibbonPage>
            </dxr:RibbonDefaultPageCategory>
        </dxr:RibbonControl>
    </DataTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\OfficeInspiredRibbonTemplate.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ChartDesigner\AddChartElementGallery.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ChartDesigner\AddChartElementGallery.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ChartDesigner\DataMemberDropTargetControl.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ChartDesigner\DataMemberDropTargetControl.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ChartDesigner\ChartDataBindingControl.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ChartDesigner\ChartDataBindingControl.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ChartDesigner\ChartStructureControl.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ChartDesigner\ChartStructureControl.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ChartDesigner\ChartDesignerGalleryControlBase.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ChartDesigner\ChartDesignerGalleryControlBase.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ChartDesigner\MenuTemplates.xaml-->
    <DataTemplate x:Key="{dxrudt:LWKey ChartDesigner.PopupAddAnnotationTemplate}">
        <dxb:PopupControlContainer>
            <dxb:PopupControlContainer.Content>
                <dxrudcdi:AddAnnotationControl SelectItemCommand="{Binding DataContext.RowData.Row.AddCommand}" />
            </dxb:PopupControlContainer.Content>
        </dxb:PopupControlContainer>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:LWKey ChartDesigner.PopupAddIndicatorTemplate}">
        <dxb:PopupControlContainer Width="260" Height="540">
            <dxb:PopupControlContainer.Content>
                <dxrudcdi:AddIndicatorControl SelectItemCommand="{Binding DataContext.RowData.Row.AddCommand}" />
            </dxb:PopupControlContainer.Content>
        </dxb:PopupControlContainer>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:LWKey ChartDesigner.PopupAddSeriesTemplate}">
        <dxb:PopupControlContainer Width="260" Height="540">
            <dxb:PopupControlContainer.Content>
                <dxrudcdi:AddSeriesControl SelectItemCommand="{Binding DataContext.RowData.Row.AddCommand}" />
            </dxb:PopupControlContainer.Content>
        </dxb:PopupControlContainer>
    </DataTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ChartDesigner\MenuTemplates.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ChartDesigner\SeriesPointsEditor.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ChartDesigner\SeriesPointsEditor.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ChartDesigner\ChartDesigner.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ChartDesigner\ChartDesigner.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\PGToggleButton.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\PGToggleButton.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ReportDesignerViewBase.xaml-->
    <Style x:Key="{dxrudt:LWKey ReportDesigner.ReportDesignerWindowStyle}" TargetType="dx:DXWindow">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Width" Value="1280" />
        <Setter Property="Height" Value="860" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dxmvvm:EventToCommand Command="{Binding OnWindowClosedCommand}" EventName="Closed" />
                        <dx:DXSplashScreenService ShowSplashScreenOnLoading="True">
                            <dx:DXSplashScreenService.ViewTemplate>
                                <DataTemplate>
                                    <dx:WaitIndicator DeferedVisibility="True" />
                                </DataTemplate>
                            </dx:DXSplashScreenService.ViewTemplate>
                        </dx:DXSplashScreenService>
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FlowDirection" Value="{Binding Designer.FlowDirection}" />
    </Style>

    <DataTemplate x:Key="{dxrudt:LWKey ReportDesigner.ReportDesignerWindowViewTemplate}">
        <ContentControl
            HorizontalContentAlignment="Stretch"
            VerticalContentAlignment="Stretch"
            Content="{Binding Designer}"
            Focusable="False"
            IsTabStop="False" />
    </DataTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ReportDesignerViewBase.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ReportDesignerBrowserView.xaml-->



    <Style x:Key="{dxrudt:LWKey ReportDesigner.ReportDesignerTabbedWindowStyle}" BasedOn="{StaticResource {dxrudt:LWKey ReportDesigner.ReportDesignerWindowStyle}}" TargetType="dx:DXTabbedWindow">
        <Setter Property="ShowTitle" Value="False" />
        <Setter Property="ShowIcon" Value="False" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dxmvvm:EventToCommand Command="{Binding OnWindowClosedCommand}" EventName="Closed" />
                        <dx:DXSplashScreenService ShowSplashScreenOnLoading="True">
                            <dx:DXSplashScreenService.ViewTemplate>
                                <DataTemplate>
                                    <dx:WaitIndicator DeferedVisibility="True" />
                                </DataTemplate>
                            </dx:DXSplashScreenService.ViewTemplate>
                        </dx:DXSplashScreenService>
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ReportDesignerBrowserView.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ReportDesignerClassicView.xaml-->



    <Style x:Key="{dxrudt:LWKey ReportDesigner.ReportDesignerClassicWindowStyle}" BasedOn="{StaticResource {dxrudt:LWKey ReportDesigner.ReportDesignerWindowStyle}}" TargetType="dxr:DXRibbonWindow">
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dxmvvm:EventToCommand Command="{Binding OnWindowClosedCommand}" EventName="Closed" />
                        <dx:DXSplashScreenService ShowSplashScreenOnLoading="True">
                            <dx:DXSplashScreenService.ViewTemplate>
                                <DataTemplate>
                                    <dx:WaitIndicator DeferedVisibility="True" />
                                </DataTemplate>
                            </dx:DXSplashScreenService.ViewTemplate>
                        </dx:DXSplashScreenService>
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ReportDesignerClassicView.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ReportDesignerBase.xaml-->
    <DataTemplate x:Key="{dxrudt:LWKey ReportDesigner.DefaultMessageBoxServiceTemplate}">
        <ContentControl>
            <dx:DXMessageBoxService />
        </ContentControl>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:LWKey ReportDesigner.DefaultSplashScreenServiceTemplate}">
        <ContentControl>
            <dx:DXSplashScreenService SplashScreenStartupLocation="CenterOwner">
                <dx:DXSplashScreenService.ViewTemplate>
                    <DataTemplate>
                        <dx:WaitIndicator DeferedVisibility="True" />
                    </DataTemplate>
                </dx:DXSplashScreenService.ViewTemplate>
            </dx:DXSplashScreenService>
        </ContentControl>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:LWKey ReportDesigner.DefaultSaveFileDialogServiceTemplate}">
        <ContentControl>
            <dxmvvm:SaveFileDialogService />
        </ContentControl>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:LWKey ReportDesigner.DefaultOpenFileDialogServiceTemplate}">
        <ContentControl>
            <dxmvvm:OpenFileDialogService />
        </ContentControl>
    </DataTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ReportDesignerBase.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\RibbonTemplate.xaml-->
    <DataTemplate x:Key="{dxrudt:LWKey ReportDesigner.RibbonTemplate}">
        <dxr:RibbonControl
            dxrudi:ReportDesignerRibbon.DocumentSelector="{Binding Path=(dxrud:ReportDesigner.DocumentSelector), RelativeSource={RelativeSource Self}}"
            AllowCustomization="False"
            MinimizationButtonVisibility="Collapsed"
            RibbonHeaderVisibility="{Binding Path=(dxrud:ReportDesigner.Designer).View, RelativeSource={RelativeSource Self}, Converter={dxrudi:ReportDesignerViewToRibbonHeaderVisibilityConverter}}"
            RibbonStyle="Office2010"
            ShowApplicationButton="False"
            ToolbarShowMode="Hide">

            <dxr:RibbonDefaultPageCategory>
                <dxr:RibbonPage
                    dx:DXSerializer.SerializationID="Report Designer"
                    dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.DesignerPage}"
                    Caption="{dxrudl:ReportDesignerStringId StringId=Ribbon_DesignerPage}"
                    IsSelected="{Binding Path=(dxrud:ReportDesigner.DocumentSelector).DesignerPageIsSelected, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
                    <dxr:RibbonPage.GroupCollectionTemplate>
                        <DataTemplate>
                            <ItemsControl>
                                <dxr:RibbonPageGroup dx:DXSerializer.SerializationID="Report" dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ReportGroup}" Caption="{dxrudl:ReportDesignerStringId StringId=Ribbon_ReportGroup}">
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.New}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.NewDocumentCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportDesignerStringId StringId=NewReport_Caption}"
                                        Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/ReportGroup/NewReport.svg'}"
                                        Hint="{dxrudl:ReportDesignerStringId StringId=NewReport_Hint}"
                                        LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/ReportGroup/NewReport.svg'}"
                                        RibbonStyle="Large">
                                        <dxb:BarButtonItem.IsVisible>
                                            <MultiBinding Converter="{dxrudi:AndMultiConverter}">
                                                <Binding Converter="{dxrudi:ReportStorageToCanCreateNewConverter}" Path="(dxrud:ReportDesigner.Designer).ReportStorage" RelativeSource="{RelativeSource Self}" />
                                                <Binding Converter="{dxrudi:ReportDesignerViewToBooleanConverter}" Path="(dxrud:ReportDesigner.Designer).View" RelativeSource="{RelativeSource Self}" />
                                            </MultiBinding>
                                        </dxb:BarButtonItem.IsVisible>
                                    </dxb:BarButtonItem>
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.Open}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.OpenDocumentCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportDesignerStringId StringId=OpenReport_Caption}"
                                        Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/ReportGroup/OpenFile.svg'}"
                                        Hint="{dxrudl:ReportDesignerStringId StringId=OpenReport_Hint}"
                                        IsVisible="{Binding Path=(dxrud:ReportDesigner.Designer).ReportStorage, RelativeSource={RelativeSource Self}, Converter={dxrudi:ReportStorageToCanOpenConverter}}"
                                        LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/ReportGroup/OpenFile.svg'}"
                                        RibbonStyle="Large" />
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.Save}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.SaveDocumentCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportDesignerStringId StringId=SaveReport_Caption}"
                                        Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/ReportGroup/SaveFile.svg'}"
                                        Hint="{dxrudl:ReportDesignerStringId StringId=SaveReport_Hint}"
                                        LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/ReportGroup/SaveFile.svg'}"
                                        RibbonStyle="Large" />
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.SaveAs}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.SaveDocumentAsCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportDesignerStringId StringId=SaveReportAs_Caption}"
                                        Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/ReportGroup/SaveFileAs.svg'}"
                                        Hint="{dxrudl:ReportDesignerStringId StringId=SaveReportAs_Hint}"
                                        LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/ReportGroup/SaveFileAs.svg'}"
                                        RibbonStyle="Large" />
                                </dxr:RibbonPageGroup>

                                <dxr:RibbonPageGroup dx:DXSerializer.SerializationID="Edit" dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.EditGroup}" Caption="{dxrudl:ReportDesignerStringId StringId=Ribbon_EditGroup}">
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.Delete}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.DeleteCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportDesignerStringId StringId=Delete_Caption}"
                                        Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/EditGroup/Delete.svg'}"
                                        LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/EditGroup/Delete.svg'}"
                                        RibbonStyle="Large" />
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.Cut}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.CutCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportDesignerStringId StringId=Cut_Caption}"
                                        Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/EditGroup/Cut.svg'}"
                                        Hint="{dxrudl:ReportDesignerStringId StringId=Cut_Hint}"
                                        LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/EditGroup/Cut.svg'}"
                                        RibbonStyle="Large" />
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.Copy}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.CopyCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportDesignerStringId StringId=Copy_Caption}"
                                        Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/EditGroup/Copy.svg'}"
                                        Hint="{dxrudl:ReportDesignerStringId StringId=Copy_Hint}"
                                        LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/EditGroup/Copy.svg'}"
                                        RibbonStyle="Large" />
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.Paste}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.PasteCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportDesignerStringId StringId=Paste_Caption}"
                                        Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/EditGroup/Paste.svg'}"
                                        Hint="{dxrudl:ReportDesignerStringId StringId=Paste_Hint}"
                                        LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/EditGroup/Paste.svg'}"
                                        RibbonStyle="Large" />
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.Undo}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.UndoCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportDesignerStringId StringId=Undo_Caption}"
                                        Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/EditGroup/Undo.svg'}"
                                        Hint="{dxrudl:ReportDesignerStringId StringId=Undo_Hint}"
                                        LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/EditGroup/Undo.svg'}"
                                        RibbonStyle="Large" />
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.Redo}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.RedoCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportDesignerStringId StringId=Redo_Caption}"
                                        Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/EditGroup/Redo.svg'}"
                                        Hint="{dxrudl:ReportDesignerStringId StringId=Redo_Hint}"
                                        LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/EditGroup/Redo.svg'}"
                                        RibbonStyle="Large" />
                                </dxr:RibbonPageGroup>

                                <dxr:RibbonPageGroup
                                    dx:DXSerializer.SerializationID="Font"
                                    dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.FontGroup}"
                                    Caption="{dxrudl:ReportDesignerStringId StringId=Ribbon_FontGroup}"
                                    Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/FontGroup/Font.svg'}">
                                    <dxr:BarButtonGroup>
                                        <dxb:BarEditItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.FontName}"
                                            ClosePopupOnChangingEditValue="True"
                                            EditValue="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[FontFamily], RelativeSource={RelativeSource Self}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            Hint="{dxrudl:ReportDesignerStringId StringId=FontName_Hint}"
                                            IsEnabled="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.CanSetTextProperties, RelativeSource={RelativeSource Self}}"
                                            Style="{StaticResource RibbonFontNameSelectorStyle}">
                                            <dxb:BarEditItem.EditSettings>
                                                <dxe:FontEditSettings />
                                            </dxb:BarEditItem.EditSettings>
                                        </dxb:BarEditItem>
                                        <dxb:BarEditItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.FontSize}"
                                            EditValue="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[FontSize], RelativeSource={RelativeSource Self}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            Hint="{dxrudl:ReportDesignerStringId StringId=FontSize_Hint}"
                                            IsEnabled="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.CanSetTextProperties, RelativeSource={RelativeSource Self}}"
                                            Style="{StaticResource RibbonFontSizeSelectorStyle}">
                                            <dxb:BarEditItem.EditSettings>
                                                <dxe:ComboBoxEditSettings MaskType="Numeric">
                                                    <dxe:ComboBoxEditSettings.ItemsSource>
                                                        <dxrudi:PredefinedFontSizeFCollection />
                                                    </dxe:ComboBoxEditSettings.ItemsSource>
                                                </dxe:ComboBoxEditSettings>
                                            </dxb:BarEditItem.EditSettings>
                                        </dxb:BarEditItem>
                                        <dxb:BarSplitButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.Foreground}"
                                            ActAsDropDown="True"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/FontGroup/ForeColor.svg'}"
                                            Hint="{dxrudl:ReportDesignerStringId StringId=Foreground_Hint}"
                                            IsEnabled="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.CanSetForegroundColor, RelativeSource={RelativeSource Self}}">
                                            <dxb:BarSplitButtonItem.PopupControl>
                                                <dxb:PopupControlContainer>
                                                    <dxe:ColorEdit CloseOwnerPopupOnClick="True" EditValue="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[ForeColor], RelativeSource={RelativeSource Self}}" ShowBorder="False" />
                                                </dxb:PopupControlContainer>
                                            </dxb:BarSplitButtonItem.PopupControl>
                                        </dxb:BarSplitButtonItem>
                                        <dxb:BarSplitButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.Background}"
                                            ActAsDropDown="True"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/FontGroup/BackColor.svg'}"
                                            Hint="{dxrudl:ReportDesignerStringId StringId=BackGround_Hint}"
                                            IsEnabled="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.CanSetBackgroundColor, RelativeSource={RelativeSource Self}}">
                                            <dxb:BarSplitButtonItem.PopupControl>
                                                <dxb:PopupControlContainer>
                                                    <dxe:ColorEdit
                                                        CloseOwnerPopupOnClick="True"
                                                        DefaultColor="White"
                                                        EditValue="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[BackColor], RelativeSource={RelativeSource TemplatedParent}}"
                                                        ShowBorder="False" />
                                                </dxb:PopupControlContainer>
                                            </dxb:BarSplitButtonItem.PopupControl>
                                        </dxb:BarSplitButtonItem>
                                    </dxr:BarButtonGroup>
                                    <dxr:BarButtonGroup>
                                        <dxb:BarCheckItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.FontBold}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.ToggleFontBoldCommand, RelativeSource={RelativeSource Self}}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/FontGroup/FontBold.svg'}"
                                            Hint="{dxrudl:ReportDesignerStringId StringId=FontBold_Hint}"
                                            IsChecked="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[IsFontBold], RelativeSource={RelativeSource Self}, Mode=OneWay}" />
                                        <dxb:BarCheckItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.FontItalic}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.ToggleFontItalicCommand, RelativeSource={RelativeSource Self}}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/FontGroup/FontItalic.svg'}"
                                            Hint="{dxrudl:ReportDesignerStringId StringId=FontItalic_Hint}"
                                            IsChecked="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[IsFontItalic], RelativeSource={RelativeSource Self}, Mode=OneWay}" />
                                        <dxb:BarCheckItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.FontUnderline}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.ToggleFontUnderlineCommand, RelativeSource={RelativeSource Self}}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/FontGroup/FontUnderline.svg'}"
                                            Hint="{dxrudl:ReportDesignerStringId StringId=FontUnderline_Hint}"
                                            IsChecked="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[IsFontUnderline], RelativeSource={RelativeSource Self}, Mode=OneWay}" />
                                        <dxb:BarCheckItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.FontStrikeOut}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.ToggleFontStrikethroughCommand, RelativeSource={RelativeSource Self}}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/FontGroup/FontStrikethrough.svg'}"
                                            Hint="{dxrudl:ReportDesignerStringId StringId=FontStrikeOut_Hint}"
                                            IsChecked="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[IsFontStrikethrough], RelativeSource={RelativeSource Self}, Mode=OneWay}" />

                                        <dxb:BarItemSelector dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.TextHorAlignmentSelector}" SelectedItem="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[TextHorizontalAlignment], RelativeSource={RelativeSource Self}, Mode=OneWay}">
                                            <dxb:BarItemSelector.ItemLinksSource>
                                                <col:ArrayList>
                                                    <TextAlignment>Left</TextAlignment>
                                                    <TextAlignment>Center</TextAlignment>
                                                    <TextAlignment>Right</TextAlignment>
                                                    <TextAlignment>Justify</TextAlignment>
                                                </col:ArrayList>
                                            </dxb:BarItemSelector.ItemLinksSource>
                                            <dxb:BarItemSelector.ItemTemplate>
                                                <DataTemplate>
                                                    <ContentControl>
                                                        <dxb:BarCheckItem
                                                            dx:XamlHelper.Name="{Binding Converter={dxrudi:TextAlignmentToBarItemNameConverter}}"
                                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.SetHorizontalAlignmentCommand, RelativeSource={RelativeSource Self}}"
                                                            CommandParameter="{Binding}"
                                                            Glyph="{Binding Converter={dxrudi:TextAlignmentToGlyphConverter}}"
                                                            Hint="{Binding Converter={dxrudi:TextAlignmentToHintConverter}}" />
                                                    </ContentControl>
                                                </DataTemplate>
                                            </dxb:BarItemSelector.ItemTemplate>
                                        </dxb:BarItemSelector>

                                        <dxb:BarItemSelector dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.TextVertAlignmentSelector}" SelectedItem="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[VerticalContentAlignment], RelativeSource={RelativeSource Self}, Mode=OneWay}">
                                            <dxb:BarItemSelector.ItemLinksSource>
                                                <col:ArrayList>
                                                    <VerticalAlignment>Top</VerticalAlignment>
                                                    <VerticalAlignment>Center</VerticalAlignment>
                                                    <VerticalAlignment>Bottom</VerticalAlignment>
                                                </col:ArrayList>
                                            </dxb:BarItemSelector.ItemLinksSource>
                                            <dxb:BarItemSelector.ItemTemplate>
                                                <DataTemplate>
                                                    <ContentControl>
                                                        <dxb:BarCheckItem
                                                            dx:XamlHelper.Name="{Binding Converter={dxrudi:TextAlignmentToBarItemNameConverter}}"
                                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.SetVerticalAlignmentCommand, RelativeSource={RelativeSource Self}}"
                                                            CommandParameter="{Binding}"
                                                            Hint="{Binding Converter={dxrudi:TextAlignmentToHintConverter}}">
                                                            <dxb:BarCheckItem.Glyph>
                                                                <Binding Converter="{dxrudi:VerticalAlignmentToGlyphConverter}" />
                                                            </dxb:BarCheckItem.Glyph>
                                                        </dxb:BarCheckItem>
                                                    </ContentControl>
                                                </DataTemplate>
                                            </dxb:BarItemSelector.ItemTemplate>
                                        </dxb:BarItemSelector>
                                    </dxr:BarButtonGroup>
                                </dxr:RibbonPageGroup>

                                <dxr:RibbonPageGroup dx:DXSerializer.SerializationID="Alignment" dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.AlignmentGroup}" Caption="{dxrudl:ReportDesignerStringId StringId=Ribbon_AlignmentGroup}">
                                    <dxr:BarButtonGroup>
                                        <dxb:BarButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.AlignToGrid}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.AlignToGridCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportDesignerStringId StringId=AlignToGrid_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/AlignmentGroup/AlignToGrid.svg'}"
                                            Hint="{dxrudl:ReportDesignerStringId StringId=AlignToGrid_Hint}" />
                                        <dxb:BarButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.AlignLeft}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.AlignLeftCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportDesignerStringId StringId=AlignLeft_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/AlignmentGroup/AlignLeft.svg'}"
                                            Hint="{dxrudl:ReportDesignerStringId StringId=AlignLeft_Hint}" />
                                        <dxb:BarButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.AlignVerticalCenters}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.AlignVerticalCentersCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportDesignerStringId StringId=AlignVerticalCenters_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/AlignmentGroup/AlignVerticalCenters.svg'}"
                                            Hint="{dxrudl:ReportDesignerStringId StringId=AlignVerticalCenters_Hint}" />
                                        <dxb:BarButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.AlignRight}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.AlignRightCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportDesignerStringId StringId=AlignRight_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/AlignmentGroup/AlignRight.svg'}"
                                            Hint="{dxrudl:ReportDesignerStringId StringId=AlignRight_Hint}" />
                                    </dxr:BarButtonGroup>
                                    <dxr:BarButtonGroup>
                                        <dxb:BarButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.AlignTop}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.AlignTopCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportDesignerStringId StringId=AlignTop_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/AlignmentGroup/AlignTop.svg'}"
                                            Hint="{dxrudl:ReportDesignerStringId StringId=AlignTop_Hint}" />
                                        <dxb:BarButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.AlignHorizontalCenters}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.AlignHorizontalCentersCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportDesignerStringId StringId=AlignHorizontalCenters_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/AlignmentGroup/AlignHorizontalCenters.svg'}"
                                            Hint="{dxrudl:ReportDesignerStringId StringId=AlignHorizontalCenters_Hint}" />
                                        <dxb:BarButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.AlignBottom}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.AlignBottomCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportDesignerStringId StringId=AlignBottom_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/AlignmentGroup/AlignBottom.svg'}"
                                            Hint="{dxrudl:ReportDesignerStringId StringId=AlignBottom_Hint}" />
                                    </dxr:BarButtonGroup>
                                </dxr:RibbonPageGroup>
                                <dxr:RibbonPageGroup dx:DXSerializer.SerializationID="Layout" dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.LayoutGroup}" Caption="{dxrudl:ReportDesignerStringId StringId=Ribbon_LayoutGroup}">
                                    <dxr:BarButtonGroup>
                                        <dxb:BarButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.SizeToGrid}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.SizeToGridCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportDesignerStringId StringId=SizeToGrid_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/LayoutGroup/SizeToGrid.svg'}"
                                            Hint="{dxrudl:ReportDesignerStringId StringId=SizeToGrid_Hint}" />
                                        <dxb:BarButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.SizeToControlWidth}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.SizeToControlWidthCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportDesignerStringId StringId=SizeToControlWidth_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/LayoutGroup/SizeToControlWidth.svg'}"
                                            Hint="{dxrudl:ReportDesignerStringId StringId=SizeToControlWidth_Hint}" />
                                        <dxb:BarButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.SizeToControlHeight}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.SizeToControlHeightCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportDesignerStringId StringId=SizeToControlHeight_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/LayoutGroup/SizeToControlHeight.svg'}"
                                            Hint="{dxrudl:ReportDesignerStringId StringId=SizeToControlHeight_Hint}" />
                                        <dxb:BarButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.SizeToControl}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.SizeToControlCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportDesignerStringId StringId=SizeToControl_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/LayoutGroup/SizeToControl.svg'}"
                                            Hint="{dxrudl:ReportDesignerStringId StringId=SizeToControl_Hint}" />
                                    </dxr:BarButtonGroup>
                                    <dxr:BarButtonGroup>
                                        <dxb:BarButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.HorizontalSpaceMakeEqual}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.HorizontalSpaceMakeEqualCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportDesignerStringId StringId=HorizontalSpaceMakeEqual_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/LayoutGroup/HorizontalSpaceMakeEqual.svg'}"
                                            Hint="{dxrudl:ReportDesignerStringId StringId=HorizontalSpaceMakeEqual_Hint}" />
                                        <dxb:BarButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.HorizontalSpaceIncrease}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.HorizontalSpaceIncreaseCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportDesignerStringId StringId=HorizontalSpaceIncrease_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/LayoutGroup/HorizontalSpaceIncrease.svg'}"
                                            Hint="{dxrudl:ReportDesignerStringId StringId=HorizontalSpaceIncrease_Hint}" />
                                        <dxb:BarButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.HorizontalSpaceDecrease}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.HorizontalSpaceDecreaseCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportDesignerStringId StringId=HorizontalSpaceDecrease_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/LayoutGroup/HorizontalSpaceDecrease.svg'}"
                                            Hint="{dxrudl:ReportDesignerStringId StringId=HorizontalSpaceDecrease_Hint}" />
                                        <dxb:BarButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.HorizontalSpaceConcatenate}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.HorizontalSpaceConcatenateCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportDesignerStringId StringId=HorizontalSpaceConcatenate_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/LayoutGroup/HorizontalSpaceConcatenate.svg'}"
                                            Hint="{dxrudl:ReportDesignerStringId StringId=HorizontalSpaceConcatenate_Hint}" />
                                    </dxr:BarButtonGroup>
                                    <dxr:BarButtonGroup>
                                        <dxb:BarButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.VerticalSpaceMakeEqual}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.VerticalSpaceMakeEqualCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportDesignerStringId StringId=VerticalSpaceMakeEqual_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/LayoutGroup/VerticalSpaceMakeEqual.svg'}"
                                            Hint="{dxrudl:ReportDesignerStringId StringId=VerticalSpaceMakeEqual_Hint}" />
                                        <dxb:BarButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.VerticalSpaceIncrease}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.VerticalSpaceIncreaseCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportDesignerStringId StringId=VerticalSpaceIncrease_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/LayoutGroup/VerticalSpaceIncrease.svg'}"
                                            Hint="{dxrudl:ReportDesignerStringId StringId=VerticalSpaceIncrease_Hint}" />
                                        <dxb:BarButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.VerticalSpaceDecrease}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.VerticalSpaceDecreaseCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportDesignerStringId StringId=VerticalSpaceDecrease_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/LayoutGroup/VerticalSpaceDecrease.svg'}"
                                            Hint="{dxrudl:ReportDesignerStringId StringId=VerticalSpaceDecrease_Hint}" />
                                        <dxb:BarButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.VerticalSpaceConcatenate}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.VerticalSpaceConcatenateCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportDesignerStringId StringId=VerticalSpaceConcatenate_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/LayoutGroup/VerticalSpaceConcatenate.svg'}"
                                            Hint="{dxrudl:ReportDesignerStringId StringId=VerticalSpaceConcatenate_Hint}" />
                                    </dxr:BarButtonGroup>
                                    <dxr:BarButtonGroup>
                                        <dxb:BarButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.CenterHorizontally}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.CenterHorizontallyCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportDesignerStringId StringId=CenterHorizontally_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/LayoutGroup/CenterHorizontally.svg'}"
                                            Hint="{dxrudl:ReportDesignerStringId StringId=CenterHorizontally_Hint}" />
                                        <dxb:BarButtonItem
                                            dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.CenterVertically}"
                                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.CenterVerticallyCommand, RelativeSource={RelativeSource Self}}"
                                            Content="{dxrudl:ReportDesignerStringId StringId=CenterVertically_Caption}"
                                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/LayoutGroup/CenterVertically.svg'}"
                                            Hint="{dxrudl:ReportDesignerStringId StringId=CenterVertically_Hint}" />
                                    </dxr:BarButtonGroup>
                                </dxr:RibbonPageGroup>

                                <dxr:RibbonPageGroup dx:DXSerializer.SerializationID="Arrange" dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ArrangeGroup}" Caption="{dxrudl:ReportDesignerStringId StringId=Ribbon_ArrangeGroup}">
                                    <dxb:BarSplitButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.BringToFrontSelector}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.BringToFrontCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportDesignerStringId StringId=BringToFront_Caption}"
                                        Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/ArrangeGroup/BringToFront.svg'}"
                                        Hint="{dxrudl:ReportDesignerStringId StringId=BringToFront_Hint}"
                                        LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/ArrangeGroup/BringToFront.svg'}"
                                        RibbonStyle="Large">
                                        <dxb:BarSplitButtonItem.PopupControl>
                                            <dxb:PopupMenu>
                                                <dxb:BarButtonItem
                                                    dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.BringForward}"
                                                    Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.BringForwardCommand, RelativeSource={RelativeSource Self}}"
                                                    Content="{dxrudl:ReportDesignerStringId StringId=BringForward_Caption}"
                                                    Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/ArrangeGroup/BringForward.svg'}"
                                                    LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/ArrangeGroup/BringForward.svg'}" />
                                                <dxb:BarButtonItem
                                                    dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.BringToFront}"
                                                    Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.BringToFrontCommand, RelativeSource={RelativeSource Self}}"
                                                    Content="{dxrudl:ReportDesignerStringId StringId=BringToFront_Caption}"
                                                    Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/ArrangeGroup/BringToFront.svg'}"
                                                    LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/ArrangeGroup/BringToFront.svg'}" />
                                            </dxb:PopupMenu>
                                        </dxb:BarSplitButtonItem.PopupControl>
                                    </dxb:BarSplitButtonItem>
                                    <dxb:BarSplitButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.SendToBackSelector}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.SendToBackCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportDesignerStringId StringId=SentToBack_Caption}"
                                        Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/ArrangeGroup/SendToBack.svg'}"
                                        Hint="{dxrudl:ReportDesignerStringId StringId=SentToBack_Hint}"
                                        LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/ArrangeGroup/SendToBack.svg'}"
                                        RibbonStyle="Large">
                                        <dxb:BarSplitButtonItem.PopupControl>
                                            <dxb:PopupMenu>
                                                <dxb:BarButtonItem
                                                    dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.SendBackward}"
                                                    Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.SendBackwardCommand, RelativeSource={RelativeSource Self}}"
                                                    Content="{dxrudl:ReportDesignerStringId StringId=SentBackward_Caption}"
                                                    Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/ArrangeGroup/SendBackward.svg'}"
                                                    LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/ArrangeGroup/SendBackward.svg'}" />
                                                <dxb:BarButtonItem
                                                    dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.SendToBack}"
                                                    Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.SendToBackCommand, RelativeSource={RelativeSource Self}}"
                                                    Content="{dxrudl:ReportDesignerStringId StringId=SentToBack_Caption}"
                                                    Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/ArrangeGroup/SendToBack.svg'}"
                                                    LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/ArrangeGroup/SendToBack.svg'}" />
                                            </dxb:PopupMenu>
                                        </dxb:BarSplitButtonItem.PopupControl>
                                    </dxb:BarSplitButtonItem>
                                </dxr:RibbonPageGroup>

                                <dxr:RibbonPageGroup
                                    dx:DXSerializer.SerializationID="Editors"
                                    dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.EditorsGroup}"
                                    Caption="{dxrudl:ReportDesignerStringId StringId=Ribbon_EditorsGroup}"
                                    IsEnabled="{Binding Path=(dxrud:ReportDesigner.Designer).ActiveDocument, Mode=OneWay, Converter={dxmvvm:ObjectToBooleanConverter}, RelativeSource={RelativeSource Self}}">
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.Watermark}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel.ReportModel.Diagram.XREditorCommands.RunWatermarkEditorCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportDesignerStringId StringId=Watermark_Caption}"
                                        Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/EditorsGroup/Watermark.svg'}"
                                        Hint="{dxrudl:ReportDesignerStringId StringId=Watermark_Hint}"
                                        LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/EditorsGroup/Watermark.svg'}"
                                        RibbonStyle="Large" />
                                    <dxb:BarButtonItem
                                        dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.PageSetup}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.PageSetupCommand, RelativeSource={RelativeSource Self}}"
                                        Content="{dxrudl:ReportDesignerStringId StringId=PageSetup_Caption}"
                                        Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/EditorsGroup/PageSetup.svg'}"
                                        Hint="{dxrudl:ReportDesignerStringId StringId=PageSetup_Hint}"
                                        LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/EditorsGroup/PageSetup.svg'}"
                                        RibbonStyle="Large" />
                                </dxr:RibbonPageGroup>
                            </ItemsControl>
                        </DataTemplate>
                    </dxr:RibbonPage.GroupCollectionTemplate>
                </dxr:RibbonPage>

                <dxr:RibbonPage
                    dx:DXSerializer.SerializationID="Print Preview"
                    dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.PreviewPage}"
                    Caption="{dxrudl:ReportDesignerStringId StringId=Ribbon_PreviewPage}"
                    IsEnabled="{Binding Path=(dxrud:ReportDesigner.Document), RelativeSource={RelativeSource Self}, Converter={dxmvvm:ObjectToBooleanConverter}}"
                    IsSelected="{Binding Path=(dxrud:ReportDesigner.DocumentSelector).PreviewPageIsSelected, RelativeSource={RelativeSource Self}, Mode=TwoWay}"
                    IsVisible="{Binding Path=(dxrud:ReportDesigner.Designer).ShowPreviewTab, RelativeSource={RelativeSource Self}}">
                    <dxr:RibbonPage.Resources>
                        <sys:Boolean x:Key="TrueBoolean">True</sys:Boolean>
                    </dxr:RibbonPage.Resources>
                    <dxr:RibbonPage.GroupCollectionTemplate>
                        <DataTemplate>
                            <ItemsControl>
                                <dxr:RibbonPageGroup dx:DXSerializer.SerializationID="{dxp:PrintingStringId StringId=RibbonPageGroup_File}" dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.FileGroup}" Caption="{dxp:PrintingStringId StringId=RibbonPageGroup_File}">
                                    <bars:SaveBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.Save}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.SaveCommand, RelativeSource={RelativeSource Self}}" KeyGesture="{Binding Path=(dxrud:ReportDesigner.Document).ViewKind, RelativeSource={RelativeSource Self}, Converter={dxrudi:DesignerViewKindToKeyGestureConverter KeyGesture=CTRL+S, ExpectedViewKind=Preview}}" />
                                </dxr:RibbonPageGroup>

                                <dxr:RibbonPageGroup dx:DXSerializer.SerializationID="{dxp:PrintingStringId StringId=RibbonPageGroup_Print}" dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.PrintGroup}" Caption="{dxp:PrintingStringId StringId=RibbonPageGroup_Print}">
                                    <bars:PrintBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.Print}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.PrintCommand, RelativeSource={RelativeSource Self}}" KeyGesture="{Binding Path=(dxrud:ReportDesigner.Document).ViewKind, RelativeSource={RelativeSource Self}, Converter={dxrudi:DesignerViewKindToKeyGestureConverter KeyGesture=CTRL+P, ExpectedViewKind=Preview}}" />
                                    <bars:PrintDirectBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.PrintDirect}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.PrintDirectCommand, RelativeSource={RelativeSource Self}}" />
                                    <bars:PageSetupBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.PageSetup}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.PageSetupCommand, RelativeSource={RelativeSource Self}}" />
                                    <bars:ScaleBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.Scale}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.ScaleCommand, RelativeSource={RelativeSource Self}}" />
                                </dxr:RibbonPageGroup>

                                <dxr:RibbonPageGroup dx:DXSerializer.SerializationID="{dxp:PrintingStringId StringId=RibbonPageGroup_Navigation}" dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.NavigationGroup}" Caption="{dxp:PrintingStringId StringId=RibbonPageGroup_Navigation}">
                                    <bars:FirstPageBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.FirstPage}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.FirstPageCommand, RelativeSource={RelativeSource Self}}" />
                                    <dxdv:PreviousPageBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.PreviousPage}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.PreviousPageCommand, RelativeSource={RelativeSource Self}}" />
                                    <dxdv:NextPageBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.NextPage}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.NextPageCommand, RelativeSource={RelativeSource Self}}" />
                                    <bars:LastPageBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.LastPage}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.LastPageCommand, RelativeSource={RelativeSource Self}}" />
                                    <bars:NavigationPaneBarCheckItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.NavigationPane}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.ToggleNavigationPaneCommand, RelativeSource={RelativeSource Self}}" IsVisible="{Binding Path=(dxrud:ReportDesigner.Document).Preview.UseOfficeInspiredNavigationPane, RelativeSource={RelativeSource Self}}" />
                                </dxr:RibbonPageGroup>

                                <dxr:RibbonPageGroup dx:DXSerializer.SerializationID="{dxp:PrintingStringId StringId=RibbonPageGroup_Zoom}" dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.ZoomGroup}" Caption="{dxp:PrintingStringId StringId=RibbonPageGroup_Zoom}">
                                    <dxdv:ZoomOutBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.ZoomOut}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.ZoomOutCommand, RelativeSource={RelativeSource Self}}" />
                                    <dxdv:ZoomBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.Zoom}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.ZoomCommand, RelativeSource={RelativeSource Self}}" />
                                    <dxdv:ZoomInBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.ZoomIn}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.ZoomInCommand, RelativeSource={RelativeSource Self}}" />
                                </dxr:RibbonPageGroup>

                                <dxr:RibbonPageGroup dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.ViewGroup}" Caption="{dxp:PrintingStringId StringId=RibbonPageGroup_View}">
                                    <bars:PageLayoutBarSubItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.PageLayoutSplit}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.SetPageLayoutSplitCommand, RelativeSource={RelativeSource Self}}" />
                                    <dxb:BarItemSeparator />
                                    <bars:ContinuousScrollingBarCheckItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.ContinuousScrolling}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.ToggleEnableContinuousScrollingCommand, RelativeSource={RelativeSource Self}}" />
                                    <bars:CoverPageBarCheckItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.ShowCoverPage}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.ToggleShowCoverPageCommand, RelativeSource={RelativeSource Self}}" />
                                </dxr:RibbonPageGroup>

                                <dxr:RibbonPageGroup dx:DXSerializer.SerializationID="{dxp:PrintingStringId StringId=RibbonPageGroup_Export}" dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.ExportGroup}" Caption="{dxp:PrintingStringId StringId=RibbonPageGroup_Export}">
                                    <bars:ExportSplitItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.Export}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.ExportSplitCommand, RelativeSource={RelativeSource Self}}" />
                                    <bars:SendSplitItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.Send}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.SendSplitCommand, RelativeSource={RelativeSource Self}}" />
                                </dxr:RibbonPageGroup>

                                <dxr:RibbonPageGroup dx:DXSerializer.SerializationID="{dxp:PrintingStringId StringId=RibbonPageGroup_Document}" dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.DocumentGroup}" Caption="{dxp:PrintingStringId StringId=RibbonPageGroup_Document}">
                                    <bars:ParametersBarCheckItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.Parameters}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.ToggleParametersPanelCommand, RelativeSource={RelativeSource Self}}" />
                                    <bars:DocumentMapBarCheckItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.DocumentMap}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.ToggleDocumentMapCommand, RelativeSource={RelativeSource Self}}" IsVisible="{Binding Path=(dxrud:ReportDesigner.Document).Preview.UseOfficeInspiredNavigationPane, RelativeSource={RelativeSource Self}, Converter={dxmvvm:BooleanNegationConverter}, FallbackValue=False}" />
                                    <bars:ThumbnailsBarCheckItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.Thumbnails}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.ToggleThumbnailsCommand, RelativeSource={RelativeSource Self}}" IsVisible="{Binding Path=(dxrud:ReportDesigner.Document).Preview.UseOfficeInspiredNavigationPane, RelativeSource={RelativeSource Self}, Converter={dxmvvm:BooleanNegationConverter}, FallbackValue=False}" />
                                    <bars:EditingFieldsBarCheckItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.EditingFields}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.ToggleEditingFieldsCommand, RelativeSource={RelativeSource Self}}" />
                                    <bars:FindTextBarItem
                                        dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.Find}"
                                        Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.ShowFindTextCommand, RelativeSource={RelativeSource Self}}"
                                        CommandParameter="{StaticResource TrueBoolean}"
                                        KeyGesture="{Binding Path=(dxrud:ReportDesigner.Document).ViewKind, RelativeSource={RelativeSource TemplatedParent}, Converter={dxrudi:DesignerViewKindToKeyGestureConverter KeyGesture=CTRL+F, ExpectedViewKind=Preview}}" />
                                    <bars:WatermarkBarItem dxp:DocumentPreviewControl.BarItemName="{x:Static bars:DefaultPreviewBarItemNames.Watermark}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.SetWatermarkCommand, RelativeSource={RelativeSource Self}}" />
                                </dxr:RibbonPageGroup>
                            </ItemsControl>
                        </DataTemplate>
                    </dxr:RibbonPage.GroupCollectionTemplate>
                </dxr:RibbonPage>

                <dxr:RibbonPage
                    dx:DXSerializer.SerializationID="Script Editor"
                    dx:XamlHelper.Name="{dxrudl:ReportDesignerStringId StringId=Scripts_Caption}"
                    Caption="{dxrudl:ReportDesignerStringId StringId=Scripts_Caption}"
                    IsEnabled="{Binding Path=(dxrud:ReportDesigner.Designer).ActiveDocument, Mode=OneWay, Converter={dxmvvm:ObjectToBooleanConverter}, RelativeSource={RelativeSource Self}}"
                    IsSelected="{Binding Path=(dxrud:ReportDesigner.DocumentSelector).ScriptEditorIsShown, RelativeSource={RelativeSource Self}, Mode=TwoWay}">
                    <dxr:RibbonPage.IsVisible>
                        <MultiBinding Converter="{dxrudi:ScriptPermissionsVisibilityConverter}">
                            <Binding Path="IsEnabled" RelativeSource="{RelativeSource Self}" />
                            <Binding Mode="OneWay" Path="(dxrud:ReportDesigner.Designer).ShowScriptsTab" RelativeSource="{RelativeSource TemplatedParent}" />
                        </MultiBinding>
                    </dxr:RibbonPage.IsVisible>
                    <dxr:RibbonPage.GroupCollectionTemplate>
                        <DataTemplate>
                            <ItemsControl>
                                <dxr:RibbonPageGroup dx:DXSerializer.SerializationID="ScriptUndoActions" dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ScriptUndoRedoGroup}">
                                    <dxb:BarButtonItemLink dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ScriptUndo}" BarItemName="{x:Static dxrud:DefaultBarItemNames.Undo}" />
                                    <dxb:BarButtonItemLink dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ScriptRedo}" BarItemName="{x:Static dxrud:DefaultBarItemNames.Redo}" />
                                    <!--<dxb:BarButtonItem
                                                dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ValidateScript}"
                                                Content="Validate"
                                                Hint="Validate"
                                                RibbonStyle="Large"
                                                Glyph="{dxrudi:ReportDesignerImageLoader Path=Validate_16x16}"
                                                LargeGlyph="{dxrudi:ReportDesignerImageLoader Path=Validate_16x16}"
                                                Command="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel.ScriptingModel.ValidateCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                    />-->
                                </dxr:RibbonPageGroup>

                                <dxr:RibbonPageGroup
                                    dx:DXSerializer.SerializationID="Edit"
                                    dx:XamlHelper.Name="{x:Static dxrud:DefaultBarItemNames.ScriptEditGroup}"
                                    Caption="{dxrudl:ReportDesignerStringId StringId=Ribbon_EditGroup}"
                                    ItemLinksSource="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel.(dxrudi:ReportModelPropertiesExtensions.ScriptsCommandBindingProvider), Converter={dxrudi:SelectiveInputMultiBindingCommandInfoConverter}, RelativeSource={RelativeSource Self}}">
                                    <dxr:RibbonPageGroup.Resources>
                                        <sys:Boolean x:Key="UseLargeIconsKey">True</sys:Boolean>
                                    </dxr:RibbonPageGroup.Resources>
                                    <dxr:RibbonPageGroup.ItemTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxb:BarButtonItem
                                                    Command="{Binding Command}"
                                                    Content="{Binding Caption}"
                                                    Glyph="{Binding Name, Converter={dxrudi:CodeViewCommandToGlyphConverter}, ConverterParameter={StaticResource UseLargeIconsKey}}"
                                                    KeyGesture="{Binding KeyGesture}"
                                                    RibbonStyle="Large" />
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxr:RibbonPageGroup.ItemTemplate>
                                </dxr:RibbonPageGroup>
                            </ItemsControl>
                        </DataTemplate>
                    </dxr:RibbonPage.GroupCollectionTemplate>
                </dxr:RibbonPage>
            </dxr:RibbonDefaultPageCategory>
        </dxr:RibbonControl>
    </DataTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\RibbonTemplate.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\RibbonStatusBarTemplate.xaml-->
    <DataTemplate x:Key="{dxrudt:LWKey ReportDesigner.RibbonStatusBarTemplate}">
        <Grid>
            <dxe:FlyoutControl
                x:Name="PART_NotificationFlyoutControl"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                OpenOnHover="False">
                <dxe:FlyoutControl.Settings>
                    <dxe:FlyoutSettings IndicatorHorizontalAlignment="Center" Placement="Top" ShowIndicator="True" />
                </dxe:FlyoutControl.Settings>
                <dxe:FlyoutControl.ContentTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <dx:DXImage
                                Width="16"
                                Height="16"
                                Margin="0,0,4,4"
                                VerticalAlignment="Center"
                                SnapsToDevicePixels="True"
                                Source="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/ErrorPanel/Error.svg'}"
                                Stretch="UniformToFill" />
                            <TextBlock Grid.Column="1" Margin="0,0,0,4" Text="{Binding Path=DataContext.Errors, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxe:FlyoutContainerControl}}}" />
                            <dx:DXImage
                                Grid.Row="1"
                                Width="16"
                                Height="16"
                                Margin="0,0,4,4"
                                VerticalAlignment="Center"
                                SnapsToDevicePixels="True"
                                Source="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/ErrorPanel/Warning.svg'}"
                                Stretch="UniformToFill" />
                            <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding Path=DataContext.Warnings, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxe:FlyoutContainerControl}}}" />
                        </Grid>
                    </DataTemplate>
                </dxe:FlyoutControl.ContentTemplate>
            </dxe:FlyoutControl>
            <dxr:RibbonStatusBarControl x:Name="PART_RibbonStatusBar" DataContext="{Binding Path=(dxrud:ReportDesigner.Document), RelativeSource={RelativeSource TemplatedParent}}" DockPanel.Dock="Bottom">
                <dxr:RibbonStatusBarControl.Resources>
                    <dxmvvm:ObjectToObjectConverter x:Key="ReportDesignerDocumentViewKindToStyleConverter">
                        <dxmvvm:ObjectToObjectConverter.DefaultTarget>
                            <Style TargetType="{x:Type dxb:BarEditItem}">
                                <Setter Property="IsEnabled" Value="False" />
                            </Style>
                        </dxmvvm:ObjectToObjectConverter.DefaultTarget>
                        <dxmvvm:MapItem>
                            <dxmvvm:MapItem.Source>
                                <dxrud:ReportDesignerDocumentViewKind>Designer</dxrud:ReportDesignerDocumentViewKind>
                            </dxmvvm:MapItem.Source>
                            <dxmvvm:MapItem.Target>
                                <Style TargetType="{x:Type dxb:BarEditItem}">
                                    <Setter Property="Content" Value="{Binding Diagram.ZoomFactor, Converter={dxmvvm:FormatStringConverter FormatString=P0}}" />
                                    <Setter Property="EditValue" Value="{Binding Diagram.ZoomFactor, Converter={dxdiagi:NonlinearZoomConverter ZoomHelper={x:Static dxdiagci:ZoomHelper.ReportDesigner}}}" />
                                    <Setter Property="EditSettings">
                                        <Setter.Value>
                                            <dxe:TrackBarEditSettings
                                                LargeStep="240"
                                                Maximum="3240"
                                                Minimum="-3240"
                                                SmallStep="120"
                                                TickFrequency="3240">
                                                <dxe:TrackBarEditSettings.StyleSettings>
                                                    <dxe:TrackBarZoomStyleSettings />
                                                </dxe:TrackBarEditSettings.StyleSettings>
                                            </dxe:TrackBarEditSettings>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </dxmvvm:MapItem.Target>
                        </dxmvvm:MapItem>
                        <dxmvvm:MapItem>
                            <dxmvvm:MapItem.Source>
                                <dxrud:ReportDesignerDocumentViewKind>Preview</dxrud:ReportDesignerDocumentViewKind>
                            </dxmvvm:MapItem.Source>
                            <dxmvvm:MapItem.Target>
                                <Style TargetType="{x:Type dxb:BarEditItem}">
                                    <Setter Property="Content" Value="{Binding Preview.ZoomFactor, Converter={dxmvvm:FormatStringConverter FormatString=P0}}" />
                                    <Setter Property="EditValue" Value="{Binding Preview.ZoomFactor, Converter={previewcontrolnative:TrackBarZoomValueConverter MinZoomValue=0.1, MaxZoomValue=5}}" />
                                    <Setter Property="EditSettings">
                                        <Setter.Value>
                                            <dxe:TrackBarEditSettings
                                                LargeStep="0.1"
                                                Maximum="2"
                                                Minimum="0"
                                                SmallStep="0.05"
                                                TickFrequency="2">
                                                <dxe:TrackBarEditSettings.StyleSettings>
                                                    <dxe:TrackBarZoomStyleSettings />
                                                </dxe:TrackBarEditSettings.StyleSettings>
                                            </dxe:TrackBarEditSettings>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </dxmvvm:MapItem.Target>
                        </dxmvvm:MapItem>
                    </dxmvvm:ObjectToObjectConverter>
                    <dx:BoolInverseConverter x:Key="booleanInverseConverter" />
                    <dx:FormatStringConverter x:Key="pageCountFormatStringConverter" FormatString="/ {0}" />
                </dxr:RibbonStatusBarControl.Resources>

                <dxr:RibbonStatusBarControl.LeftItems>
                    <dxb:BarStaticItem Content="{Binding Diagram.StatusInfo}" IsVisible="{Binding Path=(dxrud:ReportDesigner.DocumentSelector).PreviewPageIsSelected, Converter={StaticResource booleanInverseConverter}, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                    <dxpbars:PageNumberEditItem dxp:DocumentPreviewControl.BarItemName="{x:Static dxpbars:DefaultPreviewBarItemNames.PageNumber}" IsVisible="{Binding Path=(dxrud:ReportDesigner.DocumentSelector).PreviewPageIsSelected, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" SettingsSource="{Binding Path=(dxrud:ReportDesigner.Document).Preview, RelativeSource={RelativeSource TemplatedParent}}" />

                    <dxpbars:ProgressEditItem dxp:DocumentPreviewControl.BarItemName="{x:Static dxpbars:DefaultPreviewBarItemNames.Progress}" ProgressSettings="{Binding Path=(dxrud:ReportDesigner.Document).Preview.Document, RelativeSource={RelativeSource TemplatedParent}, FallbackValue={x:Null}}">
                        <dxpbars:ProgressEditItem.IsVisible>
                            <MultiBinding Converter="{dxdai:BooleanAndConverter}">
                                <Binding Mode="OneWay" Path="(dxrud:ReportDesigner.DocumentSelector).PreviewPageIsSelected" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding FallbackValue="False" Path="ProgressSettings.InProgress" RelativeSource="{RelativeSource Self}" />
                            </MultiBinding>
                        </dxpbars:ProgressEditItem.IsVisible>
                    </dxpbars:ProgressEditItem>
                    <dxpbars:StopPageBuildItem dxp:DocumentPreviewControl.BarItemName="{x:Static dxpbars:DefaultPreviewBarItemNames.StopBuilding}" Glyph="{dxp:PrintingResourceImage ResourceName=Images/BarItems/Stop.svg}" Command="{Binding Path=(dxrud:ReportDesigner.Document).Preview.ActualCommandProvider.StopPageBuildingCommand, RelativeSource={RelativeSource TemplatedParent}}">
                        <dxpbars:StopPageBuildItem.IsVisible>
                            <MultiBinding Converter="{dxdai:BooleanAndConverter}">
                                <Binding Mode="OneWay" Path="(dxrud:ReportDesigner.DocumentSelector).PreviewPageIsSelected" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="IsEnabled" RelativeSource="{RelativeSource Self}" />
                            </MultiBinding>
                        </dxpbars:StopPageBuildItem.IsVisible>
                    </dxpbars:StopPageBuildItem>
                </dxr:RibbonStatusBarControl.LeftItems>
                <dxr:RibbonStatusBarControl.RightItems>
                    <dxb:BarButtonItem
                        Name="PART_ErrorNotificationBarItem"
                        Content="{Binding Content, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                        Glyph="{Binding HasErrors, Converter={dxrudep:HasWarningsToImageSourceConverter}}"
                        RibbonStyle="SmallWithText">
                        <dxmvvm:Interaction.Behaviors>
                            <dxrudep:BarButtonItemNavigationBehavior ReportDesignerDocument="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Document), RelativeSource={RelativeSource Mode=Self}}" RibbonStatusBar="{Binding ElementName=PART_RibbonStatusBar}" ViewKind="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.DocumentSelector).ViewKind, RelativeSource={RelativeSource Mode=Self}}" />
                        </dxmvvm:Interaction.Behaviors>
                    </dxb:BarButtonItem>
                    <dxb:BarItemSeparator />
                    <dxb:BarEditItem EditWidth="150" Style="{Binding ViewKind, Converter={StaticResource ReportDesignerDocumentViewKindToStyleConverter}}" />
                </dxr:RibbonStatusBarControl.RightItems>
            </dxr:RibbonStatusBarControl>
        </Grid>
    </DataTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\RibbonStatusBarTemplate.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ReportDesigner.xaml-->
    <DataTemplate x:Key="{dxrudt:LWKey ReportDesigner.DesignerPaneTemplate}">
        <ContentControl
            HorizontalContentAlignment="Stretch"
            VerticalContentAlignment="Stretch"
            Content="{Binding Document.Diagram}"
            Focusable="False"
            IsTabStop="False" />
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:LWKey ReportDesigner.PreviewTemplate}">
        <dxp:DocumentPreviewControl
            dxrudi:ReportDesignerPreview.Document="{Binding Document}"
            CommandBarStyle="None"
            DocumentSource="{Binding Document.PreviewReport}"
            Focusable="False"
            RequestDocumentCreation="True" />
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:LWKey ReportDesigner.ScriptEditorTemplate}">
        <dxrud:ScriptingControl ReportModel="{Binding Document.ReportModel}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:LWKey ReportDesigner.DocumentTemplate}">
        <Grid>
            <Grid.Resources>
                <dxrud:ReportDesignerDocumentViewKind x:Key="ReportDesignerDocumentViewKind_Designer">Designer</dxrud:ReportDesignerDocumentViewKind>
                <dxrud:ReportDesignerDocumentViewKind x:Key="ReportDesignerDocumentViewKind_ScriptEditor">ScriptEditor</dxrud:ReportDesignerDocumentViewKind>
                <dxrud:ReportDesignerDocumentViewKind x:Key="ReportDesignerDocumentViewKind_Preview">Preview</dxrud:ReportDesignerDocumentViewKind>
            </Grid.Resources>

            <ContentControl
                HorizontalAlignment="Stretch"
                VerticalContentAlignment="Stretch"
                Content="{Binding}"
                ContentTemplate="{Binding Path=(dxrud:ReportDesigner.Designer).DesignerPaneTemplate, RelativeSource={RelativeSource Self}}"
                Visibility="{Binding Path=Document.ViewKind, Converter={dxrudi:ViewKindToVisibilityConverter}, ConverterParameter={StaticResource ReportDesignerDocumentViewKind_Designer}}" />
            <ContentControl
                HorizontalAlignment="Stretch"
                VerticalContentAlignment="Stretch"
                Content="{Binding}"
                ContentTemplate="{Binding Path=(dxrud:ReportDesigner.Designer).ScriptEditorTemplate, RelativeSource={RelativeSource Self}}"
                Visibility="{Binding Path=Document.ViewKind, Converter={dxrudi:ViewKindToVisibilityConverter}, ConverterParameter={StaticResource ReportDesignerDocumentViewKind_ScriptEditor}}" />
            <ContentControl
                HorizontalAlignment="Stretch"
                VerticalContentAlignment="Stretch"
                Content="{Binding}"
                ContentTemplate="{Binding Path=(dxrud:ReportDesigner.Designer).PreviewTemplate, RelativeSource={RelativeSource Self}}"
                Visibility="{Binding Path=Document.ViewKind, Converter={dxrudi:ViewKindToVisibilityConverter}, ConverterParameter={StaticResource ReportDesignerDocumentViewKind_Preview}}" />
        </Grid>
    </DataTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ReportDesigner.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ReportDesignerPane.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ReportDesignerPane.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ReportDesignerToolboxControl.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ReportDesignerToolboxControl.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ReportExplorerControl.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ReportExplorerControl.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ReportGalleryControl.xaml-->
    <Style x:Key="InteractiveBarItem" TargetType="dxb:BarButtonItem">
        <Setter Property="CommandParameter" Value="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
        <Setter Property="IsVisible" Value="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dx:DXBorder Margin="0,0,15,0">
                        <ContentPresenter Content="{Binding}" />
                    </dx:DXBorder>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ReportGalleryControl.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\RibbonPageSelector.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\RibbonPageSelector.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ScriptingControl.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ScriptingControl.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ReportDesignerFieldListControl.xaml-->
    <DataTemplate x:Key="{dxrudt:LWKey ReportDesigner.FieldListNodeTemplate}">
        <StackPanel Orientation="Horizontal">
            <dx:DXImage VerticalAlignment="Center" Source="{Binding RowData.Row, Converter={dxrudi:TypeSpecificsToImageSourceConverter}}" />
            <dxe:TextEdit x:Name="PART_Editor" VerticalAlignment="Center" IsHitTestVisible="False" />
        </StackPanel>
    </DataTemplate>

    <Style x:Key="{dxrudt:LWKey ReportDesigner.FieldListViewStyle}" BasedOn="{StaticResource ReportDesignerFielsListControlStyleBase}" TargetType="{x:Type dxg:TreeListView}">
        <Setter Property="ChildNodesPath" Value="Children" />
    </Style>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ReportDesignerFieldListControl.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\InteractiveReportDesignerFieldListControl.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\InteractiveReportDesignerFieldListControl.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\PropertyGrid\PropertyGridCustomizations.xaml-->
    <Style x:Key="TrackBarEditItemStyle" TargetType="{x:Type dxe:TrackBarEdit}">
        <Setter Property="Minimum" Value="0" />
        <Setter Property="Maximum" Value="100" />
        <Setter Property="EditValueType" Value="{x:Type sys:Int32}" />
    </Style>
    <!--<Style x:Key="ShapeBaseEditItem" TargetType="{x:Type dxe:SpinEdit}">
        <Setter Property="MinValue" Value="0" />
        <Setter Property="MaxValue" Value="100" />
        <Setter Property="IsFloatValue" Value="False" />
        <Setter Property="EditValueType" Value="{x:Type sys:Int32}" />
    </Style>-->
    <DataTemplate x:Key="simpleHeaderTemplate">
        <TextBlock VerticalAlignment="Center" Text="{Binding}" TextTrimming="CharacterEllipsis" />
    </DataTemplate>
    <DataTemplate x:Key="menuBarItemContentTemplate">
        <dx:DXBorder Margin="0,0,15,0">
            <TextBlock FontWeight="{DXBinding '@a($dxb:BarItemLinkInfo).Item.($TextElement.FontWeight)'}" Text="{Binding}" />
        </dx:DXBorder>
    </DataTemplate>
    <DataTemplate x:Key="popupMenuItemContentTemplate">
        <TextBlock Margin="0,0,18,0" VerticalAlignment="Center" Text="{Binding}" />
    </DataTemplate>
    <ControlTemplate x:Key="emptyButtonTemplate" TargetType="ToggleButton">
        <Grid>
            <dx:DXBorder Name="background" Background="Gray" Opacity="0" />
            <ContentPresenter
                Name="glyphPresenter"
                Margin="{TemplateBinding Padding}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Content="{TemplateBinding Content}"
                Opacity="0.5" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="glyphPresenter" Property="Opacity" Value="1" />
                <Setter TargetName="background" Property="Opacity" Value="0.1" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <DataTemplate x:Key="commonCategoryTab">
        <Grid MaxWidth="65" ToolTip="{Binding Header}">
            <dx:DXImage
                Name="glyph"
                Width="22"
                Height="22"
                Source="{Binding Header, Converter={dxrudi:CategoryNameToIconConverter}}"
                Visibility="{Binding Source, Converter={dxrudi:ObjectToVisibilityConverter}, RelativeSource={RelativeSource Self}}" />
            <TextBlock
                VerticalAlignment="Center"
                Text="{Binding Header}"
                TextTrimming="CharacterEllipsis"
                Visibility="{Binding Source, ElementName=glyph, Converter={dxrudi:ObjectToVisibilityConverter Inverse=True}}" />
        </Grid>
    </DataTemplate>



    <DataTemplate x:Key="expressionMenuButtonTemplate">
        <ContentControl>
            <dxb:BarButtonItem
                Command="{Binding Command}"
                CommandParameter="{Binding CommandParameter}"
                Content="{Binding Caption}"
                ContentTemplate="{StaticResource menuBarItemContentTemplate}"
                IsEnabled="{Binding IsDisabled, Converter={dxmvvm:BooleanNegationConverter}}"
                TextElement.FontWeight="{Binding HasValue, Converter={dxmvvm:BooleanToObjectConverter TrueValue={x:Static FontWeights.Bold}, FalseValue={x:Static FontWeights.Normal}}}" />
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="expressionMenuSplitButtonTemplate">
        <ContentControl>
            <dxb:BarSubItem
                Content="{Binding Caption}"
                ContentTemplate="{StaticResource menuBarItemContentTemplate}"
                ItemLinksSource="{Binding Commands}"
                ItemTemplate="{StaticResource expressionMenuButtonTemplate}"
                TextElement.FontWeight="{Binding HasValue, Converter={dxmvvm:BooleanToObjectConverter TrueValue={x:Static FontWeights.Bold}, FalseValue={x:Static FontWeights.Normal}}}" />
        </ContentControl>
    </DataTemplate>

    <DataTemplate x:Key="commonPanelTemplate">
        <dxb:ToolBarControl
            AllowCustomizationMenu="False"
            AllowHide="False"
            AllowQuickCustomization="False"
            ShowBackground="False"
            ShowDragWidget="False"
            Visibility="{Binding Path=(dxprg:PropertyGridHelper.PropertyGrid).ShowToolPanel, RelativeSource={RelativeSource Self}, Converter={dx:BooleanToVisibilityConverter}}">
            <dxb:BarCheckItem GroupIndex="3120" Hint="{dxrudl:ReportDesignerStringId StringId=PropertyGrid_BarControl_BarItem_Categorized}" IsChecked="{Binding Path=(dxprg:PropertyGridHelper.PropertyGrid).ShowCategories, Converter={dxrudi:ShowCategoriesToIsCheckedConverter ShowCategories=Visible}, Mode=TwoWay, RelativeSource={RelativeSource Self}}">
                <dxb:BarCheckItem.GlyphTemplate>
                    <DataTemplate>
                        <Path
                            x:Name="PART_GroupView"
                            Width="12"
                            Height="12"
                            Data="F1 M 2,2L 7,2L 7,7L 2,7L 2,2 Z M 2,9.00001L 6.99999,9.00001L 6.99999,14L 2,14L 2,9.00001 Z M 8,4.00001L 14,4.00001L 14,5.00001L 8,5.00001L 8,4.00001 Z M 8,11L 14,11L 14,12L 8,12L 8,11 Z M 4,3L 4,4L 3,4L 3,5L 4,5L 4,6L 5,6L 5,5L 6,5L 6,4L 5,4L 5,3L 4,3 Z M 4,10L 4,11L 3,11L 3,12L 4,12L 4,13L 5,13L 5,12L 6,12L 6,11L 5,11L 5,10L 4,10 Z "
                            Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}"
                            Stretch="Fill" />
                    </DataTemplate>
                </dxb:BarCheckItem.GlyphTemplate>
            </dxb:BarCheckItem>
            <dxb:BarCheckItem GroupIndex="3120" Hint="{dxrudl:ReportDesignerStringId StringId=PropertyGrid_BarControl_BarItem_Alphabetical}" IsChecked="{Binding Path=(dxprg:PropertyGridHelper.PropertyGrid).ShowCategories, Converter={dxrudi:ShowCategoriesToIsCheckedConverter ShowCategories=Hidden}, Mode=TwoWay, RelativeSource={RelativeSource Self}}">
                <dxb:BarCheckItem.GlyphTemplate>
                    <DataTemplate>
                        <Path
                            x:Name="PART_ListView"
                            Width="12"
                            Height="10"
                            Data="F1 M 2,3L 14,3L 14,4L 2,4L 2,3 Z M 2,6L 14,6L 14,7L 2,7L 2,6 Z M 2,9L 14,9L 14,10L 2,10L 2,9 Z M 2,12L 14,12L 14,13L 2,13L 2,12 Z "
                            Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}"
                            Stretch="Fill" />
                    </DataTemplate>
                </dxb:BarCheckItem.GlyphTemplate>
            </dxb:BarCheckItem>
            <dxb:BarItemSeparator />
            <dxb:BarSplitCheckItem
                Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PropertyGrid/FavoriteProperties.svg'}"
                Hint="Show Favorite Properties"
                IsChecked="{Binding Path=(dxprg:PropertyGridHelper.PropertyGrid).ShowFavoriteProperties, RelativeSource={RelativeSource Self}}"
                IsVisible="{Binding Path=(xrdiag:XtraReportDiagramItem.ReportModel).DataBindingMode, RelativeSource={RelativeSource Self}, Converter={dxrudi:BindingModeAndExpressionsToBooleanConverter Inverse=True}, FallbackValue=False}">
                <dxb:BarSplitCheckItem.PopupControl>
                    <dxb:PopupMenu>
                        <dxb:BarButtonItem Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.EditFavoritePropertiesCommand, RelativeSource={RelativeSource Self}}" Content="Edit Favorite Properties..." ContentTemplate="{StaticResource popupMenuItemContentTemplate}" />
                    </dxb:PopupMenu>
                </dxb:BarSplitCheckItem.PopupControl>
            </dxb:BarSplitCheckItem>
            <dxb:BarSplitCheckItem
                Glyph="{Binding Path=(dxprg:PropertyGridHelper.PropertyGrid).ShowFavoriteProperties, RelativeSource={RelativeSource Self}, Converter={StaticResource propertiesGlyphConverter}}"
                GroupIndex="52416"
                Hint="{dxrudl:ReportDesignerStringId StringId=Properties}"
                IsChecked="{Binding Path=(dxprg:PropertyGridHelper.PropertyGrid).ExpressionTabIsActive, RelativeSource={RelativeSource Self}, FallbackValue=False, Converter={dxmvvm:BooleanNegationConverter}}"
                IsVisible="{Binding Path=(xrdiag:XtraReportDiagramItem.ReportModel).DataBindingMode, RelativeSource={RelativeSource Self}, Converter={dxrudi:BindingModeAndExpressionsToBooleanConverter}}">
                <dxb:BarSplitCheckItem.PopupControl>
                    <dxb:PopupMenu>
                        <dxb:BarCheckItem
                            Content="Show Favorite Properties"
                            ContentTemplate="{StaticResource popupMenuItemContentTemplate}"
                            Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PropertyGrid/FavoriteProperties.svg'}"
                            IsChecked="{Binding Path=(dxprg:PropertyGridHelper.PropertyGrid).ShowFavoriteProperties, RelativeSource={RelativeSource Self}}" />
                        <dxb:BarButtonItem Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.EditFavoritePropertiesCommand, RelativeSource={RelativeSource Self}}" Content="Edit Favorite Properties..." ContentTemplate="{StaticResource popupMenuItemContentTemplate}" />
                    </dxb:PopupMenu>
                </dxb:BarSplitCheckItem.PopupControl>
            </dxb:BarSplitCheckItem>
            <dxb:BarCheckItem Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/PropertyGrid/Expressions.svg'}" GroupIndex="52416" Hint="{dxrudl:ReportDesignerStringId StringId=PropertyGrid_TabExpressions}">
                <dxb:BarCheckItem.IsVisible>
                    <MultiBinding Converter="{dxrudi:BindingModeAndExpressionsToBooleanConverter}">
                        <Binding Path="(xrdiag:XtraReportDiagramItem.ReportModel).DataBindingMode" RelativeSource="{RelativeSource Self}" />
                        <Binding Path="(dxprg:PropertyGridHelper.PropertyGrid).ShowExpressionsInSeparateTab" RelativeSource="{RelativeSource Self}" />
                    </MultiBinding>
                </dxb:BarCheckItem.IsVisible>
            </dxb:BarCheckItem>
            <dxb:BarItemSeparator />
        </dxb:ToolBarControl>
    </DataTemplate>
    <DataTemplate x:Key="favoritesCategoryTab">
        <StackPanel Orientation="Horizontal">
            <ContentControl Content="{Binding}" ContentTemplate="{StaticResource commonCategoryTab}" />
            <ToggleButton
                x:Name="PART_Item"
                Padding="1,0"
                VerticalContentAlignment="Center"
                BorderThickness="0"
                Template="{StaticResource emptyButtonTemplate}">
                <dxb:BarManager.DXContextMenu>
                    <dxb:PopupMenu DataContext="{Binding Path=PlacementTarget.(dxrud:ReportDesigner.Designer).ActualCommands, RelativeSource={RelativeSource Self}}" IsOpen="{Binding PlacementTarget.IsChecked, RelativeSource={RelativeSource Self}}">
                        <dxb:BarButtonItem Command="{Binding EditFavoritePropertiesCommand}" Content="Edit Favorite Properties..." />
                    </dxb:PopupMenu>
                </dxb:BarManager.DXContextMenu>
                <Path Data="F1M0,0L8,0 4,4 0,0z" Fill="{Binding (TextElement.Foreground), RelativeSource={RelativeSource Self}}" />
            </ToggleButton>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="categorizedPanelTemplate">
        <dxe:ListBoxEdit
            Name="PART_CategoriesSelector"
            AllowCollectionView="True"
            AllowItemHighlighting="True"
            Focusable="False"
            IsSynchronizedWithCurrentItem="True"
            ItemsSource="{Binding Path=(dxprg:PropertyGridHelper.PropertyGrid).View.CategoriesSource, RelativeSource={RelativeSource TemplatedParent}}"
            ShowBorder="False">
            <dxe:ListBoxEdit.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </dxe:ListBoxEdit.ItemsPanel>
            <dxe:ListBoxEdit.ItemTemplate>
                <DataTemplate>
                    <ContentControl Content="{Binding}" ContentTemplate="{Binding Header, Converter={dxrudi:StringEqualsToDataTemplateConverter ExpectedString={dxrudl:ReportStringId StringId=UD_PropertyGrid_TabFavorites}, TrueValue={StaticResource favoritesCategoryTab}, FalseValue={StaticResource commonCategoryTab}}}" />
                </DataTemplate>
            </dxe:ListBoxEdit.ItemTemplate>
        </dxe:ListBoxEdit>
    </DataTemplate>


    <DataTemplate x:Key="PropertyGridTopPanelTemplate">
        <ContentControl Name="PART_SelectorContainer" Content="{Binding}" ContentTemplate="{StaticResource commonPanelTemplate}" />
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxprg:PropertyGridHelper.PropertyGrid).ShowCategories, RelativeSource={RelativeSource TemplatedParent}}" Value="Tabbed">
                <Setter TargetName="PART_SelectorContainer" Property="ContentTemplate" Value="{StaticResource categorizedPanelTemplate}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxprg:PropertyGridHelper.PropertyGrid).UserFilterCriteria, Converter={dxrudi:CriteriaToBooleanConverter}, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                <Setter TargetName="PART_SelectorContainer" Property="IsEnabled" Value="False" />
                <Setter TargetName="PART_SelectorContainer" Property="Opacity" Value="0.4" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <ControlTemplate x:Key="propertyGridTemplate" TargetType="propertygrid:ReportDesignerPropertyGrid">
        <dx:DXBorder Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <dx:DXBorder Padding="4,0,4,2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,0,1">
                    <ContentControl x:Name="PART_TopPanel" Grid.Row="0" Focusable="False">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <ContentControl Content="{x:Null}" ContentTemplate="{StaticResource PropertyGridTopPanelTemplate}" />
                            <dx:DXBorder
                                x:Name="PART_SelectorAndSearchSeparator"
                                Grid.Column="1"
                                Width="{DynamicResource {dxprgt:LWKey PropertyGridControl.SelectorAndSearchSeparatorWidth}}"
                                Background="Transparent"
                                IsHitTestVisible="False" />
                            <dxprg:FilterColumnProvider
                                x:Name="PART_ColumnProvider"
                                Width="0"
                                Height="0"
                                IsHitTestVisible="False"
                                Opacity="0"
                                Owner="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
                            <dxprg:PropertyGridSearchControl
                                x:Name="PART_SearchControl"
                                Grid.Row="0"
                                Grid.Column="2"
                                VerticalAlignment="Center"
                                ColumnProvider="{Binding ElementName=PART_ColumnProvider}"
                                FilterByColumnsMode="Default"
                                FilterCondition="Contains"
                                FindMode="Always"
                                Focusable="False"
                                ImmediateMRUPopup="False"
                                KeyboardNavigation.ControlTabNavigation="Continue"
                                KeyboardNavigation.DirectionalNavigation="Continue"
                                KeyboardNavigation.TabNavigation="Continue"
                                MRULength="10"
                                PostMode="Delayed"
                                SearchTextPostDelay="1000"
                                ShowFindButton="True"
                                ShowMRUButton="False"
                                Style="{DynamicResource {dxprgt:LWKey PropertyGridControl.SearchControlStyle}}"
                                Visibility="{Binding ShowSearchBox, RelativeSource={RelativeSource TemplatedParent}, Converter={dx:BooleanToVisibilityConverter}}" />
                        </Grid>
                    </ContentControl>
                </dx:DXBorder>
                <ContentPresenter
                    x:Name="PART_ViewPresenter"
                    Grid.Row="1"
                    Grid.Column="0"
                    Grid.ColumnSpan="2" />
                <dxprg:PropertyDescriptionPresenterControl
                    x:Name="PART_DescriptionPresenter"
                    Grid.Row="2"
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    Focusable="False"
                    SelectedRow="{Binding ElementName=PART_ViewPresenter, Path=Content.SelectedItem}"
                    Style="{TemplateBinding ActualDescriptionContainerStyle}">
                    <dxprg:PropertyDescriptionPresenterControl.Visibility>
                        <Binding Path="ShowDescriptionIn" RelativeSource="{RelativeSource TemplatedParent}">
                            <Binding.Converter>
                                <dxprg:DescriptionLocationConverter>
                                    <dxprg:DescriptionLocationConverter.TrueValue>
                                        <Visibility>Visible</Visibility>
                                    </dxprg:DescriptionLocationConverter.TrueValue>
                                    <dxprg:DescriptionLocationConverter.FalseValue>
                                        <Visibility>Collapsed</Visibility>
                                    </dxprg:DescriptionLocationConverter.FalseValue>
                                </dxprg:DescriptionLocationConverter>
                            </Binding.Converter>
                            <Binding.ConverterParameter>
                                <dxprg:DescriptionLocation>Panel</dxprg:DescriptionLocation>
                            </Binding.ConverterParameter>
                        </Binding>
                    </dxprg:PropertyDescriptionPresenterControl.Visibility>
                </dxprg:PropertyDescriptionPresenterControl>
            </Grid>
        </dx:DXBorder>
        <ControlTemplate.Triggers>
            <Trigger Property="ShowToolPanel" Value="False">
                <Setter TargetName="PART_SelectorAndSearchSeparator" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="ShowSearchBox" Value="False">
                <Setter TargetName="PART_SelectorAndSearchSeparator" Property="Visibility" Value="Collapsed" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="propertyGridStyle" TargetType="propertygrid:ReportDesignerPropertyGrid">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(dxrud:ReportDesigner.Designer).PropertyGridOptions.UseOfficeInspiredPropertyGrid, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="ShowGridLines" Value="False" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="RowPadding" Value="3" />
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="Template" Value="{StaticResource propertyGridTemplate}" />
        <Setter Property="ShowSearchBox" Value="True" />
        <Setter Property="ShowToolPanel" Value="True" />
        <Setter Property="ShowMenuButtonInRows" Value="True" />
        <Setter Property="ShowMenu" Value="Always" />
        <Setter Property="HighlightingMode" Value="None" />
        <Setter Property="ExpandCategoriesWhenSelectedObjectChanged" Value="True" />
        <Setter Property="SortMode" Value="Ascending" />
        <Setter Property="UseCollectionEditor" Value="False" />
    </Style>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\PropertyGrid\PropertyGridCustomizations.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ReportDesignerPropertyGridControl.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ReportDesignerPropertyGridControl.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\PopupTreeListEdit.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\PopupTreeListEdit.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ReportDesignerRichEditControl.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ReportDesignerRichEditControl.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\GroupSortControl.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\GroupSortControl.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\PivotGridDesigner\Styles.xaml-->

    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\PivotGridDesigner\Styles.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\PivotGridDesigner\FieldsPage.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\PivotGridDesigner\FieldsPage.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\PivotGridDesigner\LayoutPage.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\PivotGridDesigner\LayoutPage.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\PivotGridDesigner\AppearancesPage.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\PivotGridDesigner\AppearancesPage.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\PivotGridDesigner\PrintingSettingsPage.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\PivotGridDesigner\PrintingSettingsPage.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\PivotGridDesigner\Designer.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\PivotGridDesigner\Designer.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\XRDiagram\ContextMenuTemplates.xaml-->
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:XRBarCode}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.BarCodeContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.NavigateToControl}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem IsVisible="{Binding Diagram.RootItem.DataBindingMode, Converter={dxrudi:DataBindingModeToIsVisibleConverter}}" Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.FormattingRules}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Cut}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Copy}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Paste}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddToGallery}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:XRChart}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.ChartContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.NavigateToControl}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.RunChartDesigner}}" />
            <dxb:BarButtonItem IsVisible="{Binding Diagram.RootItem.DataBindingMode, Converter={dxrudi:DataBindingModeToIsVisibleConverter}}" Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.FormattingRules}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Series}}" />
            <!--<dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Annotations}}" />-->
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Palettes}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.SaveChartLayout}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.LoadChartLayout}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Cut}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Copy}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Paste}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddToGallery}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:XRCheckBox}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.CheckBoxContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.NavigateToControl}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem IsVisible="{Binding Diagram.RootItem.DataBindingMode, Converter={dxrudi:DataBindingModeToIsVisibleConverter}}" Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.FormattingRules}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Cut}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Copy}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Paste}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddToGallery}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:XRCrossBandBox}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.CrossBandBoxContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.NavigateToControl}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Cut}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Copy}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Paste}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:XRCrossBandLine}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.CrossBandLineContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.NavigateToControl}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Cut}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Copy}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Paste}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:XtraReport}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.ReportContextMenu}">
            <!--<dxb:BarButtonItem Style="{StaticResource {x:Static xrdiag:XRDiagramControlBarItemNames.EditAndReorderBands}}" />-->
            <!--<dxb:BarButtonItem Style="{StaticResource {x:Static xrdiag:XRDiagramControlBarItemNames.EditBindings}}" />-->
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.NavigateToControl}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem IsVisible="{Binding Diagram.RootItem.DataBindingMode, Converter={dxrudi:DataBindingModeToIsVisibleConverter}}" Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.FormattingRules}}" />
            <dxb:BarButtonItem IsVisible="{Binding Diagram.RootItem.DataBindingMode, Converter={dxrudi:DataBindingModeToIsVisibleConverter}}" Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.FormattingRuleSheet}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.StyleSheet}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Watermark}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Paste}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarSubItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.InsertBand}}" />
            <dxb:BarSubItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.InsertVerticalBand}}" />
            <dxb:BarSubItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.InsertDetailReport}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.ExpandAllBands}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.CollapseAllBands}}" />
            <dxb:BarItemSeparator />

            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddToGallery}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:XRGauge}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.GaugeContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.NavigateToControl}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Cut}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Copy}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Paste}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddToGallery}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:XRLabel}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.LabelContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.NavigateToControl}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem IsVisible="{Binding Diagram.RootItem.DataBindingMode, Converter={dxrudi:DataBindingModeToIsVisibleConverter}}" Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.FormattingRules}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.FitTextToBounds}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.FitBoundsToText}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.ConvertLabelsToTable}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Cut}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Copy}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Paste}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddToGallery}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:XRLine}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.LineContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.NavigateToControl}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem IsVisible="{Binding Diagram.RootItem.DataBindingMode, Converter={dxrudi:DataBindingModeToIsVisibleConverter}}" Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.FormattingRules}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Cut}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Copy}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Paste}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddToGallery}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:XRPageBreak}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.PageBreakContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.NavigateToControl}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Cut}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Copy}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Paste}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:XRPageInfo}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.PageInfoContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.NavigateToControl}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem IsVisible="{Binding Diagram.RootItem.DataBindingMode, Converter={dxrudi:DataBindingModeToIsVisibleConverter}}" Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.FormattingRules}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Cut}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Copy}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Paste}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddToGallery}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:XRPanel}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.PanelContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.NavigateToControl}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Cut}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Copy}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Paste}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddToGallery}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:XRPictureBox}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.PictureBoxContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.NavigateToControl}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem IsVisible="{Binding Diagram.RootItem.DataBindingMode, Converter={dxrudi:DataBindingModeToIsVisibleConverter}}" Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.FormattingRules}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Cut}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Copy}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Paste}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddToGallery}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:XRPivotGrid}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.PivotGridContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.NavigateToControl}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem IsVisible="{Binding Diagram.RootItem.DataBindingMode, Converter={dxrudi:DataBindingModeToIsVisibleConverter}}" Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.FormattingRules}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.RunPivotGridDesigner}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Cut}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Copy}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Paste}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddToGallery}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:XRRichText}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.RichTextContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.NavigateToControl}}" />
            <dxb:BarItemSeparator />
            <!--<dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Clear}}" />-->
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.LoadFile}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem IsVisible="{Binding Diagram.RootItem.DataBindingMode, Converter={dxrudi:DataBindingModeToIsVisibleConverter}}" Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.FormattingRules}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Cut}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Copy}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Paste}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddToGallery}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:XRShape}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.ShapeContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.NavigateToControl}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem IsVisible="{Binding Diagram.RootItem.DataBindingMode, Converter={dxrudi:DataBindingModeToIsVisibleConverter}}" Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.FormattingRules}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Cut}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Copy}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Paste}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddToGallery}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:XRSparkline}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.SparklineContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.NavigateToControl}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Cut}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Copy}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Paste}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddToGallery}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:XRSubreport}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.SubReportContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.NavigateToControl}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.EditParameterBindings}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem IsVisible="{Binding Diagram.RootItem.DataBindingMode, Converter={dxrudi:DataBindingModeToIsVisibleConverter}}" Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.FormattingRules}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Cut}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Copy}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Paste}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddToGallery}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:XRPdfContent}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.PdfContentContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.NavigateToControl}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Cut}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Copy}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Paste}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddToGallery}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:XRTableCell}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.TableCellContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.NavigateToControl}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem IsVisible="{Binding Diagram.RootItem.DataBindingMode, Converter={dxrudi:DataBindingModeToIsVisibleConverter}}" Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.FormattingRules}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.FitTextToBounds}}" />
            <dxb:BarItemSeparator />
            <dxb:BarSubItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.InsertTableCell}}" />
            <dxb:BarSubItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.DeleteTableItem}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.ConvertToLabels}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Paste}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:XRTable}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.TableContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.NavigateToControl}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.ConvertToLabels}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Cut}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Copy}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Paste}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddToGallery}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:XRTableOfContents}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.TableOfContentsContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.NavigateToControl}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Levels}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Cut}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Copy}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Paste}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:XRTableOfContentsLevelBase}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.TableOfContentsLevelContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource DevExpress_Xpf_Reports_ContextMenu_Level_Levels}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:XRTableRow}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.TableRowContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.NavigateToControl}}" />
            <dxb:BarItemSeparator />
            <dxb:BarSubItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.InsertTableRow}}" />
            <dxb:BarSubItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.DeleteTableRow}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.ConvertToLabels}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Paste}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:XRZipCode}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.ZipCodeContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.NavigateToControl}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem IsVisible="{Binding Diagram.RootItem.DataBindingMode, Converter={dxrudi:DataBindingModeToIsVisibleConverter}}" Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.FormattingRules}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Cut}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Copy}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Paste}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:XRCrossTab}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.CrossTabContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.NavigateToControl}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Cut}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Copy}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Paste}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddToGallery}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:XRPdfSignature}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.PdfSignatureContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.NavigateToControl}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Cut}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Copy}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Paste}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddToGallery}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:XRControlStyle}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.StyleContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddStyle}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.EditStyles}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.CloneStyle}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.SelectControlsWithStyle}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddToGallery}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:FormattingRule}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.FormattingRuleContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddFormattingRule}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.EditFormattingRules}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.CloneFormattingRule}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.SelectControlsWithFormattingRule}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />

            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type dxdasql:SqlDataSource}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.SqlDataSourceContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.ConfigureConnection}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.ManageQueries}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.ManageRelations}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.RebuildSchema}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.RequestDatabaseSchema}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Cut}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Copy}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddToGallery}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type mongodb:MongoDBDataSource}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.MongoDBDataSourceContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.ConfigureConnection}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.ManageMongoDBQueries}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.RebuildSchema}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Cut}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Copy}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddToGallery}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>


    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type dxdaf:FederationDataSource}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.FederationDataSourceContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.ManageFederatedQueries}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.ManageRelations}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.RebuildFederationDataSourceSchema}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>


    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type dxdaef:EFDataSource}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.EFDataSourceContextMenu}">
            <!--<dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.EditEFDataSource}}" />
            <dxb:BarItemSeparator />-->
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Cut}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Copy}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddToGallery}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type dxdaob:ObjectDataSource}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.ObjectDataSourceContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Cut}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Copy}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddToGallery}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type dxdajson:JsonDataSource}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.JsonDataSourceContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.EditJsonDataSource}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Cut}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Copy}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddToGallery}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type dae:ExcelDataSource}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.ExcelDataSourceContextMenu}">
            <!--<dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.EditExcelDataSource}}" />-->
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.EditSchema}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.UpdateSchema}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Cut}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Copy}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddToGallery}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:XRControlStyleSheet}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.StyleSheetContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddStyle}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.EditStyles}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.PurgeStyles}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.ClearStyles}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:FormattingRuleSheet}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.FormattingRuleSheetContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddFormattingRule}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.EditFormattingRules}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.PurgeFormattingRules}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.ClearFormattingRules}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type componentModel:ComponentCollection}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.ComponentCollectionContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddDataSource}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Paste}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:TopMarginBand}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.TopMarginBandContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.NavigateToControl}}" />
            <dxb:BarItemSeparator />
            <!--<dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.EditAndReorderBands}}" />
            <dxb:BarItemSeparator />-->
            <dxb:BarButtonItem IsVisible="{Binding Diagram.RootItem.DataBindingMode, Converter={dxrudi:DataBindingModeToIsVisibleConverter}}" Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.FormattingRules}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Paste}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarSubItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.InsertBand}}" />
            <dxb:BarSubItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.InsertVerticalBand}}" />
            <dxb:BarSubItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.InsertDetailReport}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.CollapseAllBandsButSelected}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddToGallery}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:PageHeaderBand}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.PageHeaderBandContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.NavigateToControl}}" />
            <dxb:BarItemSeparator />
            <!--<dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.EditAndReorderBands}}" />
            <dxb:BarItemSeparator />-->
            <dxb:BarButtonItem IsVisible="{Binding Diagram.RootItem.DataBindingMode, Converter={dxrudi:DataBindingModeToIsVisibleConverter}}" Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.FormattingRules}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Paste}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddSubBand}}" />
            <dxb:BarSubItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.InsertBand}}" />
            <dxb:BarSubItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.InsertVerticalBand}}" />
            <dxb:BarSubItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.InsertDetailReport}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.CollapseAllBandsButSelected}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddToGallery}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:ReportHeaderBand}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.ReportHeaderBandContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.NavigateToControl}}" />
            <dxb:BarItemSeparator />
            <!--<dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.EditAndReorderBands}}" />
            <dxb:BarItemSeparator />-->
            <dxb:BarButtonItem IsVisible="{Binding Diagram.RootItem.DataBindingMode, Converter={dxrudi:DataBindingModeToIsVisibleConverter}}" Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.FormattingRules}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Paste}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddSubBand}}" />
            <dxb:BarSubItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.InsertBand}}" />
            <dxb:BarSubItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.InsertVerticalBand}}" />
            <dxb:BarSubItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.InsertDetailReport}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.CollapseAllBandsButSelected}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddToGallery}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:GroupHeaderBand}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.GroupHeaderBandContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.NavigateToControl}}" />
            <dxb:BarItemSeparator />
            <!--<dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.EditAndReorderBands}}" />
            <dxb:BarItemSeparator />-->
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.GroupFields}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem IsVisible="{Binding Diagram.RootItem.DataBindingMode, Converter={dxrudi:DataBindingModeToIsVisibleConverter}}" Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.FormattingRules}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Paste}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddSubBand}}" />
            <dxb:BarSubItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.InsertBand}}" />
            <dxb:BarSubItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.InsertVerticalBand}}" />
            <dxb:BarSubItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.InsertDetailReport}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.MoveUp}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.MoveDown}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.CollapseAllBandsButSelected}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddToGallery}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:DetailBand}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.DetailBandContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.NavigateToControl}}" />
            <dxb:BarItemSeparator />
            <!--<dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.EditAndReorderBands}}" />
            <dxb:BarItemSeparator />-->
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.SortFields}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem IsVisible="{Binding Diagram.RootItem.DataBindingMode, Converter={dxrudi:DataBindingModeToIsVisibleConverter}}" Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.FormattingRules}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Paste}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddSubBand}}" />
            <dxb:BarSubItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.InsertBand}}" />
            <dxb:BarSubItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.InsertVerticalBand}}" />
            <dxb:BarSubItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.InsertDetailReport}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.CollapseAllBandsButSelected}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddToGallery}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:DetailReportBand}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.DetailReportBandContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.NavigateToControl}}" />
            <dxb:BarItemSeparator />
            <!--<dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.EditAndReorderBands}}" />
            <dxb:BarItemSeparator />-->
            <dxb:BarButtonItem IsVisible="{Binding Diagram.RootItem.DataBindingMode, Converter={dxrudi:DataBindingModeToIsVisibleConverter}}" Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.FormattingRules}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Paste}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddSubBand}}" />
            <dxb:BarSubItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.InsertBand}}" />
            <dxb:BarSubItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.InsertVerticalBand}}" />
            <dxb:BarSubItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.InsertDetailReport}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.MoveUp}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.MoveDown}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.ExpandAllBands}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.CollapseAllBands}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddToGallery}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:GroupFooterBand}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.GroupFooterBandContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.NavigateToControl}}" />
            <dxb:BarItemSeparator />
            <!--<dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.EditAndReorderBands}}" />
            <dxb:BarItemSeparator />-->
            <dxb:BarButtonItem IsVisible="{Binding Diagram.RootItem.DataBindingMode, Converter={dxrudi:DataBindingModeToIsVisibleConverter}}" Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.FormattingRules}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Paste}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddSubBand}}" />
            <dxb:BarSubItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.InsertBand}}" />
            <dxb:BarSubItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.InsertVerticalBand}}" />
            <dxb:BarSubItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.InsertDetailReport}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.MoveUp}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.MoveDown}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.CollapseAllBandsButSelected}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddToGallery}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:VerticalBand}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.VerticalBandContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.NavigateToControl}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem IsVisible="{Binding Diagram.RootItem.DataBindingMode, Converter={dxrudi:DataBindingModeToIsVisibleConverter}}" Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.FormattingRules}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Paste}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <!--<dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddSubBand}}" />-->
            <dxb:BarSubItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.InsertBand}}" />
            <dxb:BarSubItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.InsertVerticalBand}}" />
            <dxb:BarSubItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.InsertDetailReport}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.CollapseAllBandsButSelected}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddToGallery}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:ReportFooterBand}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.ReportFooterBandContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.NavigateToControl}}" />
            <dxb:BarItemSeparator />
            <!--<dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.EditAndReorderBands}}" />
            <dxb:BarItemSeparator />-->
            <dxb:BarButtonItem IsVisible="{Binding Diagram.RootItem.DataBindingMode, Converter={dxrudi:DataBindingModeToIsVisibleConverter}}" Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.FormattingRules}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Paste}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddSubBand}}" />
            <dxb:BarSubItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.InsertBand}}" />
            <dxb:BarSubItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.InsertVerticalBand}}" />
            <dxb:BarSubItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.InsertDetailReport}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.CollapseAllBandsButSelected}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddToGallery}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:PageFooterBand}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.PageFooterBandContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.NavigateToControl}}" />
            <dxb:BarItemSeparator />
            <!--<dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.EditAndReorderBands}}" />
            <dxb:BarItemSeparator />-->
            <dxb:BarButtonItem IsVisible="{Binding Diagram.RootItem.DataBindingMode, Converter={dxrudi:DataBindingModeToIsVisibleConverter}}" Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.FormattingRules}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Paste}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddSubBand}}" />
            <dxb:BarSubItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.InsertBand}}" />
            <dxb:BarSubItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.InsertVerticalBand}}" />
            <dxb:BarSubItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.InsertDetailReport}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.CollapseAllBandsButSelected}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddToGallery}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:BottomMarginBand}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.BottomMarginBandContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.NavigateToControl}}" />
            <dxb:BarItemSeparator />
            <!--<dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.EditAndReorderBands}}" />
            <dxb:BarItemSeparator />-->
            <dxb:BarButtonItem IsVisible="{Binding Diagram.RootItem.DataBindingMode, Converter={dxrudi:DataBindingModeToIsVisibleConverter}}" Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.FormattingRules}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Paste}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarSubItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.InsertBand}}" />
            <dxb:BarSubItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.InsertVerticalBand}}" />
            <dxb:BarSubItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.InsertDetailReport}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.CollapseAllBandsButSelected}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddToGallery}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:SubBand}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.SubBandContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.NavigateToControl}}" />
            <dxb:BarItemSeparator />
            <!--<dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.EditAndReorderBands}}" />
            <dxb:BarItemSeparator />-->
            <dxb:BarButtonItem IsVisible="{Binding Diagram.RootItem.DataBindingMode, Converter={dxrudi:DataBindingModeToIsVisibleConverter}}" Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.FormattingRules}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Paste}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarSubItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.InsertBand}}" />
            <dxb:BarSubItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.InsertVerticalBand}}" />
            <dxb:BarSubItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.InsertDetailReport}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.CollapseAllBandsButSelected}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsuipivot:XRPivotGridField}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.PivotGridFieldContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.NavigateToControl}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:XRControl}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.ControlContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.NavigateToControl}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Cut}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Copy}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Paste}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type componentModel:IComponent}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.ComponentContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:ContextMenuTemplateKey {x:Type reportsui:XRCharacterComb}}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.CharacterCombContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.NavigateToControl}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem IsVisible="{Binding Diagram.RootItem.DataBindingMode, Converter={dxrudi:DataBindingModeToIsVisibleConverter}}" Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.FormattingRules}}" />
            <dxb:BarItemSeparator />

            <dxb:BarItemSeparator />
            <dxb:BarSubItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.FitBoundsToText}}" />
            <dxb:BarItemSeparator />

            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Cut}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Copy}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Paste}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddToGallery}}" />
            <dxb:BarItemSeparator />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Properties}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <!-- begin Field List -->
    <DataTemplate x:Key="{dxrudt:LWKey ReportDesigner.DefaultFieldContextMenuTemplate}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.CalculatedFieldContainerContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddCalculatedField}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.EditCalculatedFields}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.RemoveAllCalculatedFields}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:LWKey ReportDesigner.DefaultCalculatedFieldContextMenuTemplate}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.CalculatedFieldContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddCalculatedField}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.EditCalculatedFields}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.EditExpression}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:LWKey ReportDesigner.DefaultParameterFieldContextMenuTemplate}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.ParameterContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddParameter}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.EditParameters}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Delete}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerFieldList.ListOfParameters}">
        <dxb:PopupMenu dx:XamlHelper.Name="{x:Static dxrud:DefaultContextMenuItemNames.ParametersCollectionContextMenu}">
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.AddParameter}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.EditParameters}}" />
            <dxb:BarButtonItem Style="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.RemoveAllParameters}}" />
        </dxb:PopupMenu>
    </DataTemplate>
    <!-- end -->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\XRDiagram\ContextMenuTemplates.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ParameterEditorTemplates.xaml-->
    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerParameterEditorKind.String}">
        <DataTemplate.Resources>
            <dxrudi:ParameterValueTypeInfo x:Key="PatchedTypeInfo" Type="{x:Type sys:String}" />
        </DataTemplate.Resources>
        <dxe:TextEdit
            x:Name="PART_Editor"
            AllowNullInput="{Binding Source={StaticResource PatchedTypeInfo}, Path=AllowNull}"
            NullText="{dxe:EditorStringId EmptyItem}"
            ShowNullText="{Binding AllowNullInput, RelativeSource={RelativeSource Self}}"
            ShowNullTextForEmptyValue="{Binding AllowNullInput, RelativeSource={RelativeSource Self}}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerParameterEditorKind.Boolean}">
        <DataTemplate.Resources>
            <dxrudi:ParameterValueTypeInfo x:Key="PatchedTypeInfo" Type="{x:Type sys:Boolean}" />
        </DataTemplate.Resources>
        <dxe:ComboBoxEdit
            x:Name="PART_Editor"
            AllowNullInput="{Binding Source={StaticResource PatchedTypeInfo}, Path=AllowNull}"
            DisplayMember="Key"
            IsTextEditable="False"
            ItemsSource="{x:Static dxpp:BooleanValuesHelper.BooleanValues}"
            NullText="{dxe:EditorStringId EmptyItem}"
            ShowCustomItems="{Binding AllowNullInput, RelativeSource={RelativeSource Self}}"
            ShowNullText="{Binding AllowNullInput, RelativeSource={RelativeSource Self}}"
            ShowNullTextForEmptyValue="{Binding AllowNullInput, RelativeSource={RelativeSource Self}}"
            ValueMember="Value" />
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerParameterEditorKind.DateTime}">
        <DataTemplate.Resources>
            <dxrudi:ParameterValueTypeInfo x:Key="PatchedTypeInfo" Type="{x:Type sys:DateTime}" />
        </DataTemplate.Resources>
        <dxe:DateEdit
            x:Name="PART_Editor"
            AllowNullInput="{Binding Source={StaticResource PatchedTypeInfo}, Path=AllowNull}"
            NullText="{dxe:EditorStringId EmptyItem}"
            ShowNullText="{Binding AllowNullInput, RelativeSource={RelativeSource Self}}"
            ShowNullTextForEmptyValue="{Binding AllowNullInput, RelativeSource={RelativeSource Self}}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerParameterEditorKind.Guid}">
        <DataTemplate.Resources>
            <dxrudi:ParameterValueTypeInfo x:Key="PatchedTypeInfo" Type="{x:Type sys:Guid}" />
        </DataTemplate.Resources>
        <dxe:TextEdit
            x:Name="PART_Editor"
            AllowNullInput="{Binding Source={StaticResource PatchedTypeInfo}, Path=AllowNull}"
            Mask="[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}"
            MaskType="RegEx"
            MaskUseAsDisplayFormat="True"
            NullText="{dxe:EditorStringId EmptyItem}"
            ShowNullText="{Binding AllowNullInput, RelativeSource={RelativeSource Self}}"
            ShowNullTextForEmptyValue="{Binding AllowNullInput, RelativeSource={RelativeSource Self}}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerParameterEditorKind.Enum}">
        <DataTemplate.Resources>
            <dxrudi:ParameterValueTypeInfo x:Key="PatchedTypeInfo" Type="{x:Type sys:Object}" />
        </DataTemplate.Resources>
        <dxe:ComboBoxEdit
            x:Name="PART_Editor"
            AllowNullInput="{Binding Source={StaticResource PatchedTypeInfo}, Path=AllowNull}"
            IsTextEditable="False"
            NullText="{dxe:EditorStringId EmptyItem}"
            ShowCustomItems="{Binding AllowNullInput, RelativeSource={RelativeSource Self}}"
            ShowNullText="{Binding AllowNullInput, RelativeSource={RelativeSource Self}}"
            ShowNullTextForEmptyValue="{Binding AllowNullInput, RelativeSource={RelativeSource Self}}">
            <dxe:ComboBoxEdit.ItemsSource>
                <PriorityBinding>
                    <Binding Converter="{dxrudi:NullValueToEnumConverter}" FallbackValue="{x:Static DependencyProperty.UnsetValue}" Path="Type" />
                    <Binding
                        Converter="{dxrudi:NullValueToEnumConverter}"
                        FallbackValue="{x:Null}"
                        Path="(dxrudi:PropertyGridHelper.SelectedObject).Type"
                        RelativeSource="{RelativeSource Self}" />
                </PriorityBinding>
            </dxe:ComboBoxEdit.ItemsSource>
        </dxe:ComboBoxEdit>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerParameterEditorKind.NumericIntegral}">
        <DataTemplate.Resources>
            <dxrudi:ParameterValueTypeInfo x:Key="PatchedTypeInfo" Type="{x:Type sys:Int32}" />
        </DataTemplate.Resources>
        <dxpn:SpinEditEx
            x:Name="PART_Editor"
            AllowNullInput="{Binding Source={StaticResource PatchedTypeInfo}, Path=AllowNull}"
            EditValueType="{Binding Source={StaticResource PatchedTypeInfo}, Path=ResultType}"
            IsFloatValue="False"
            NullText="{dxe:EditorStringId EmptyItem}"
            ShowNullText="{Binding AllowNullInput, RelativeSource={RelativeSource Self}}"
            ShowNullTextForEmptyValue="{Binding AllowNullInput, RelativeSource={RelativeSource Self}}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerParameterEditorKind.NumericFloat}">
        <DataTemplate.Resources>
            <dxrudi:ParameterValueTypeInfo x:Key="PatchedTypeInfo" Type="{x:Type sys:Single}" />
        </DataTemplate.Resources>
        <dxpn:SpinEditEx
            x:Name="PART_Editor"
            AllowNullInput="{Binding Source={StaticResource PatchedTypeInfo}, Path=AllowNull}"
            EditValueType="{Binding Source={StaticResource PatchedTypeInfo}, Path=ResultType}"
            IsFloatValue="True"
            NullText="{dxe:EditorStringId EmptyItem}"
            ShowNullText="{Binding AllowNullInput, RelativeSource={RelativeSource Self}}"
            ShowNullTextForEmptyValue="{Binding AllowNullInput, RelativeSource={RelativeSource Self}}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerParameterEditorKind.MultiValue}">
        <dxe:ComboBoxEdit x:Name="PART_Editor" AllowDefaultButton="False" EditValue="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <dxe:ComboBoxEdit.StyleSettings>
                <dxe:TokenComboBoxStyleSettings EnableTokenWrapping="False" NewTokenPosition="Far" />
            </dxe:ComboBoxEdit.StyleSettings>
        </dxe:ComboBoxEdit>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerParameterEditorKind.DateRange}">
        <dxpn:DateRangeEdit x:Name="PART_Editor" NullText="{dxe:EditorStringId EmptyItem}" />
    </DataTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\ParameterEditorTemplates.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\PropertyGrid\PropertyGridEditors.xaml-->
    <DataTemplate x:Key="PropertyDefinitionContentTemplate">
        <dxprg:CellEditorPresenter IsEnabled="{Binding Converter={dxrude:EditableDataObjectValueToBooleanConverter}}" />
    </DataTemplate>
    <DataTemplate x:Key="horizontalTextAlignmentItemTemplate">
        <ContentControl>
            <dxdiag:BarMouseCheckOnlyItem Glyph="{Binding Converter={dxrudi:TextAlignmentToGlyphConverter}}" Hint="{Binding Converter={dxrudi:TextAlignmentToHintConverter}}" />
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="verticalTextAlignmentItemTemplate">
        <ContentControl>
            <dxdiag:BarMouseCheckOnlyItem Glyph="{Binding Converter={dxrudi:VerticalAlignmentToGlyphConverter}}" Hint="{Binding Converter={dxrudi:TextAlignmentToHintConverter}}" />
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="subCategoryHeaderTemplate">
        <TextBlock
            HorizontalAlignment="Left"
            VerticalAlignment="Center"
            Text="{Binding Header}"
            TextAlignment="Left"
            TextTrimming="CharacterEllipsis" />
    </DataTemplate>
    <ControlTemplate x:Key="colorEditDisplayTemplate">
        <Grid>
            <dxei:TransparentBrushRectangle />
            <dx:DXBorder Background="{Binding Value, Converter={dxrudi:ColorToSolidBrushConverter}}" />
        </Grid>
    </ControlTemplate>
    <DataTemplate x:Key="trackBarPropertyTemplate">
        <dxb:ToolBarControl
            AllowCustomizationMenu="False"
            AllowQuickCustomization="False"
            ShowBackground="False"
            ShowDragWidget="False"
            UseWholeRow="True">
            <dxmvvm:Interaction.Behaviors>
                <dxrudi:BarItemLayoutPanelReducer />
            </dxmvvm:Interaction.Behaviors>
            <dxb:BarStaticItem AutoSizeMode="Fill" Content="{Binding}" ContentAlignment="Stretch">
                <dxb:BarStaticItem.ContentTemplate>
                    <DataTemplate>
                        <dxe:TrackBarEdit
                            AllowUpdateTwoWayBoundPropertiesOnSynchronization="True"
                            EditValue="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            EditValueType="{x:Type sys:Single}"
                            LargeStep="{Binding ValueType, Converter={dxrudi:TrackBarValueTypeToIncrementConverter IsLargeStep=True}}"
                            Minimum="0"
                            SmallStep="{Binding ValueType, Converter={dxrudi:TrackBarValueTypeToIncrementConverter}}"
                            TickPlacement="None" />
                    </DataTemplate>
                </dxb:BarStaticItem.ContentTemplate>
            </dxb:BarStaticItem>
            <dxb:BarStaticItem Alignment="Far" Content="{Binding}">
                <dxb:BarStaticItem.ContentTemplate>
                    <DataTemplate>
                        <dxprg:CellEditorPresenter Width="60" />
                    </DataTemplate>
                </dxb:BarStaticItem.ContentTemplate>
            </dxb:BarStaticItem>
        </dxb:ToolBarControl>
    </DataTemplate>
    <DataTemplate x:Key="dialogServiceEditorBehaviorTemplate">
        <ItemsControl>
            <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" Content="{Binding Path=AssociatedObject.(dxrudi:PropertyGridDialogEditorExtension.Content), RelativeSource={RelativeSource Self}}" DialogServiceTemplate="{Binding Path=AssociatedObject.(dxrudi:PropertyGridDialogEditorExtension.DialogServiceTemplate), RelativeSource={RelativeSource Self}}" />
        </ItemsControl>
    </DataTemplate>


    <Style x:Key="subCategoryStyle" TargetType="{x:Type dxprg:PropertyDefinition}">
        <Setter Property="UseTypeConverterToStringConversion" Value="True" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(dxrud:ReportDesigner.Designer).PropertyGridOptions.UseOfficeInspiredPropertyGrid, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="HeaderShowMode" Value="OnlyExpander" />
                <Setter Property="CellTemplate" Value="{StaticResource subCategoryHeaderTemplate}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="textAlignmentTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <TextBlock Margin="0,6,6,6" Text="Vertical" />
            <dxb:ToolBarControl
                Grid.Column="1"
                HorizontalAlignment="Left"
                AllowCustomizationMenu="False"
                AllowQuickCustomization="False"
                GlyphSize="Small"
                ShowBackground="False">
                <dxrudi:VerticalTextAlignmentBarItemSelector
                    ActualValue="{Binding Value, Mode=TwoWay}"
                    ItemLinksSource="{dxrudi:VerticalAlignmentItemsSource}"
                    ItemTemplate="{StaticResource verticalTextAlignmentItemTemplate}"
                    SelectedItem="{Binding Value, Converter={dxrudi:TextAlignmentToVerticalAlignmentConverter}, Mode=OneWay}" />
            </dxb:ToolBarControl>
            <TextBlock Grid.Row="1" Margin="0,6,6,6" Text="Horizontal" />
            <dxb:ToolBarControl
                Grid.Row="1"
                Grid.Column="1"
                HorizontalAlignment="Left"
                AllowCustomizationMenu="False"
                AllowQuickCustomization="False"
                GlyphSize="Small"
                ShowBackground="False">
                <dxrudi:HorizontalTextAlignmentBarItemSelector
                    ActualValue="{Binding Value, Mode=TwoWay}"
                    ItemLinksSource="{dxrudi:TextAlignmentItemsSource AllowJustify=True}"
                    ItemTemplate="{StaticResource horizontalTextAlignmentItemTemplate}"
                    SelectedItem="{Binding Value, Converter={dxrudi:TextAlignmentToWpfTextAlignmentConverter}, Mode=OneWay}" />
            </dxb:ToolBarControl>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="simpleTextAlignmentTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <TextBlock Margin="0,6,6,6" Text="Vertical" />
            <dxb:ToolBarControl
                Grid.Column="1"
                HorizontalAlignment="Left"
                AllowCustomizationMenu="False"
                AllowQuickCustomization="False"
                GlyphSize="Small"
                ShowBackground="False">
                <dxrudi:VerticalTextAlignmentBarItemSelector
                    ActualValue="{Binding Value, Mode=TwoWay}"
                    ItemLinksSource="{dxrudi:VerticalAlignmentItemsSource}"
                    ItemTemplate="{StaticResource verticalTextAlignmentItemTemplate}"
                    SelectedItem="{Binding Value, Converter={dxrudi:TextAlignmentToVerticalAlignmentConverter}, Mode=OneWay}" />
            </dxb:ToolBarControl>
            <TextBlock Grid.Row="1" Margin="0,6,6,6" Text="Horizontal" />
            <dxb:ToolBarControl
                Grid.Row="1"
                Grid.Column="1"
                HorizontalAlignment="Left"
                AllowCustomizationMenu="False"
                AllowQuickCustomization="False"
                GlyphSize="Small"
                ShowBackground="False">
                <dxrudi:HorizontalTextAlignmentBarItemSelector
                    ActualValue="{Binding Value, Mode=TwoWay}"
                    ItemLinksSource="{dxrudi:TextAlignmentItemsSource AllowJustify=False}"
                    ItemTemplate="{StaticResource horizontalTextAlignmentItemTemplate}"
                    SelectedItem="{Binding Value, Converter={dxrudi:TextAlignmentToWpfTextAlignmentConverter}, Mode=OneWay}" />
            </dxb:ToolBarControl>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="thicknessEditor">
        <StackPanel>
            <dxprg:CellEditorPresenter />
            <Grid
                Grid.Row="1"
                Margin="0,4,0,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                Visibility="{Binding Value, Converter={StaticResource objectToVisibilityConverter}}">
                <Grid.Resources>
                    <dx:ObjectToVisibilityConverter x:Key="objectToVisibilityConverter" HandleList="False" />
                </Grid.Resources>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>
                    <dx:DXImage Width="16" Source="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/ArrowLeft.svg'}" />
                    <dx:DXImage
                        Grid.Column="2"
                        Width="16"
                        Margin="4,0,0,0"
                        Source="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/ArrowRight.svg'}" />
                    <dx:DXImage Grid.Row="1" Width="16" Source="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/ArrowUp.svg'}" />
                    <dx:DXImage
                        Grid.Row="1"
                        Grid.Column="2"
                        Width="16"
                        Margin="4,0,0,0"
                        Source="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/ArrowDown.svg'}" />
                    <dxprg:CellEditorPresenter
                        Grid.Column="1"
                        Margin="4,0,0,4"
                        Path="Left"
                        PathMode="Relative" />
                    <dxprg:CellEditorPresenter
                        Grid.Column="3"
                        Margin="4,0,0,4"
                        Path="Right"
                        PathMode="Relative" />
                    <dxprg:CellEditorPresenter
                        Grid.Row="1"
                        Grid.Column="1"
                        Margin="4,0,0,0"
                        Path="Top"
                        PathMode="Relative" />
                    <dxprg:CellEditorPresenter
                        Grid.Row="1"
                        Grid.Column="3"
                        Margin="4,0,0,0"
                        Path="Bottom"
                        PathMode="Relative" />
                </Grid>
            </Grid>
        </StackPanel>
    </DataTemplate>
    <Style x:Key="marginsDefinitionEditorStyle" TargetType="{x:Type dxprg:PropertyDefinition}">
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="UseTypeConverterToStringConversion" Value="True" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(dxrud:ReportDesigner.Designer).PropertyGridOptions.UseOfficeInspiredPropertyGrid, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="HeaderTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" Text="{Binding Header}" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ShowChildren" Value="False" />

                <Setter Property="ContentTemplate" Value="{StaticResource thicknessEditor}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <dx:SvgImageSource x:Key="{dxrudt:PropertyGridCategoryIconThemeKey {x:Static dxrudt:DefaultPropertyGridCategoryNames.Properties}}" Uri="{dx:ReportDesignerResource Images/SVG/PropertyGrid/TabOptions.svg}" />
    <dx:SvgImageSource x:Key="{dxrudt:PropertyGridCategoryIconThemeKey {x:Static dxrudt:DefaultPropertyGridCategoryNames.Miscellaneous}}" Uri="{dx:ReportDesignerResource /Images/SVG/PropertyGrid/TabOptions.svg}" />
    <dx:SvgImageSource x:Key="{dxrudt:PropertyGridCategoryIconThemeKey {x:Static dxrudt:DefaultPropertyGridCategoryNames.Appearance}}" Uri="{dx:ReportDesignerResource Images/SVG/PropertyGrid/TabAppearance.svg}" />
    <dx:SvgImageSource x:Key="{dxrudt:PropertyGridCategoryIconThemeKey {x:Static dxrudt:DefaultPropertyGridCategoryNames.Behavior}}" Uri="{dx:ReportDesignerResource Images/SVG/PropertyGrid/TabBehavior.svg}" />
    <dx:SvgImageSource x:Key="{dxrudt:PropertyGridCategoryIconThemeKey {x:Static dxrudt:DefaultPropertyGridCategoryNames.Data}}" Uri="{dx:ReportDesignerResource Images/SVG/PropertyGrid/TabData.svg}" />
    <dx:SvgImageSource x:Key="{dxrudt:PropertyGridCategoryIconThemeKey {x:Static dxrudt:DefaultPropertyGridCategoryNames.PageSettings}}" Uri="{dx:ReportDesignerResource Images/SVG/PropertyGrid/TabPageSettings.svg}" />
    <dx:SvgImageSource x:Key="{dxrudt:PropertyGridCategoryIconThemeKey {x:Static dxrudt:DefaultPropertyGridCategoryNames.Favorites}}" Uri="{dx:ReportDesignerResource Images/SVG/PropertyGrid/TabFavorites.svg}" />
    <dx:SvgImageSource x:Key="{dxrudt:PropertyGridCategoryIconThemeKey {x:Static dxrudt:DefaultPropertyGridCategoryNames.Expressions}}" Uri="{dx:ReportDesignerResource Images/SVG/PropertyGrid/Expressions.svg}" />

    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.Image}}">
        <dxprg:PropertyDefinition IsReadOnly="False" PostOnEditValueChanged="True">
            <dxprg:PropertyDefinition.CellTemplate>
                <DataTemplate>
                    <dxrude:DesignerPopupWinImageEdit EditValue="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsImageSource="False" ShowBorder="False" />
                </DataTemplate>
            </dxprg:PropertyDefinition.CellTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.ImageSource}}">
        <dxprg:PropertyDefinition IsReadOnly="False" PostOnEditValueChanged="True">
            <dxprg:PropertyDefinition.CellTemplate>
                <DataTemplate>
                    <dxrude:DesignerPopupWinImageEdit EditValue="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ShowBorder="False" />
                </DataTemplate>
            </dxprg:PropertyDefinition.CellTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.ImageUrl}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:CustomDialogServiceEditorBehavior Content="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer), RelativeSource={RelativeSource Self}}">
                                    <dxe:CustomDialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrude:ImageUrlDialogService />
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:CustomDialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:CustomDialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.EditablePivotGridFieldSortConditionField}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.EditSettings>
                <dxrudi:ComboBoxEditSettingsEx
                    AllowNullInput="True"
                    IsTextEditable="False"
                    ItemsSource="{Binding Path=(xrdiag:XtraReportDiagramItem.ReportModel).XRObjectBase, Converter={dxrudi:AvailablePivotGridFieldsConverter}, RelativeSource={RelativeSource Self}}"
                    NullText="{dxrudl:ReportDesignerStringId StringId=Editors_NullValue_Text}"
                    NullValueButtonPlacement="Popup"
                    ShowNullText="True"
                    ShowNullTextForEmptyValue="False"
                    ShowPopupOnEmptyItemsSource="True" />
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.ParameterName}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ComboBoxEditSettings IsTextEditable="False">
                    <dxe:ComboBoxEditSettings.ItemsSource>
                        <MultiBinding Converter="{dxrudi:AvailableSubreportParametersConverter}">
                            <Binding Path="(xrdiag:XtraReportDiagramItem.ReportModel).(dxrud:ReportDesigner.Designer)" RelativeSource="{RelativeSource Self}" />
                            <Binding Path="(dxrudi:PropertyGridHelper.SelectedObject)" RelativeSource="{RelativeSource Self}" />
                        </MultiBinding>
                    </dxe:ComboBoxEditSettings.ItemsSource>
                </dxe:ComboBoxEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.StartBand}}">
        <dxprg:PropertyDefinition IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ComboBoxEditSettings IsTextEditable="False">
                    <dxe:ComboBoxEditSettings.ItemsSource>
                        <MultiBinding Converter="{dxrudi:AvailableStartBandConverter}">
                            <Binding Path="(xrdiag:XtraReportDiagramItem.ReportModel)" RelativeSource="{RelativeSource Self}" />
                            <Binding Path="(dxrudi:PropertyGridHelper.SelectedObject)" RelativeSource="{RelativeSource Self}" />
                        </MultiBinding>
                    </dxe:ComboBoxEditSettings.ItemsSource>
                </dxe:ComboBoxEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.EndBand}}">
        <dxprg:PropertyDefinition IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ComboBoxEditSettings IsTextEditable="False">
                    <dxe:ComboBoxEditSettings.ItemsSource>
                        <MultiBinding Converter="{dxrudi:AvailableEndBandConverter}">
                            <Binding Path="(xrdiag:XtraReportDiagramItem.ReportModel)" RelativeSource="{RelativeSource Self}" />
                            <Binding Path="(dxrudi:PropertyGridHelper.SelectedObject)" RelativeSource="{RelativeSource Self}" />
                        </MultiBinding>
                    </dxe:ComboBoxEditSettings.ItemsSource>
                </dxe:ComboBoxEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.PivotGridFieldSortConditionField}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.ContentTemplate>
                <DataTemplate>
                    <dxprg:CellEditorPresenter Path="EditablePivotGridFieldSortConditionField" PathMode="Absolute" />
                </DataTemplate>
            </dxprg:PropertyDefinition.ContentTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.PivotGridFieldSortBySummaryInfo}}">
        <dxprg:PropertyDefinition IsReadOnly="False" PostOnEditValueChanged="True">
            <dxprg:PropertyDefinition.EditSettings>
                <!-- TODO -->
                <dxe:TextEditSettings />
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.BorderSide}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.Style>
                <Style TargetType="dxprg:PropertyDefinition">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=(dxrud:ReportDesigner.Designer).PropertyGridOptions.UseOfficeInspiredPropertyGrid, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter Property="EditSettings" Value="{x:Null}" />

                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <dxb:ToolBarControl
                                            AllowCustomizationMenu="False"
                                            AllowQuickCustomization="False"
                                            GlyphSize="Small"
                                            ShowBackground="False"
                                            ShowDragWidget="False">
                                            <dxb:BarCheckItem
                                                Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.ToggleBorderSideCommand, RelativeSource={RelativeSource Self}}"
                                                CommandParameter="{x:Static xpd:BorderSide.All}"
                                                Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/BorderAll.svg'}"
                                                IsChecked="{Binding Value, Mode=OneWay, Converter={dxrudi:BorderSideToBooleanConverter Border={x:Static xpd:BorderSide.All}}}" />
                                            <dxb:BarCheckItem
                                                Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.ToggleBorderSideCommand, RelativeSource={RelativeSource Self}}"
                                                CommandParameter="{x:Static xpd:BorderSide.None}"
                                                Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/BorderNone.svg'}"
                                                IsChecked="{Binding Value, Mode=OneWay, Converter={dxrudi:BorderSideToBooleanConverter Border={x:Static xpd:BorderSide.None}}}" />
                                            <dxb:BarItemLinkSeparator />
                                            <dxb:BarCheckItem
                                                Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.ToggleBorderSideCommand, RelativeSource={RelativeSource Self}}"
                                                CommandParameter="{x:Static xpd:BorderSide.Left}"
                                                Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/BorderLeft.svg'}"
                                                IsChecked="{Binding Value, Mode=OneWay, Converter={dxrudi:BorderSideToBooleanConverter Border={x:Static xpd:BorderSide.Left}}}" />
                                            <dxb:BarCheckItem
                                                Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.ToggleBorderSideCommand, RelativeSource={RelativeSource Self}}"
                                                CommandParameter="{x:Static xpd:BorderSide.Top}"
                                                Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/BorderTop.svg'}"
                                                IsChecked="{Binding Value, Mode=OneWay, Converter={dxrudi:BorderSideToBooleanConverter Border={x:Static xpd:BorderSide.Top}}}" />
                                            <dxb:BarCheckItem
                                                Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.ToggleBorderSideCommand, RelativeSource={RelativeSource Self}}"
                                                CommandParameter="{x:Static xpd:BorderSide.Right}"
                                                Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/BorderRight.svg'}"
                                                IsChecked="{Binding Value, Mode=OneWay, Converter={dxrudi:BorderSideToBooleanConverter Border={x:Static xpd:BorderSide.Right}}}" />
                                            <dxb:BarCheckItem
                                                Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.ToggleBorderSideCommand, RelativeSource={RelativeSource Self}}"
                                                CommandParameter="{x:Static xpd:BorderSide.Bottom}"
                                                Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/BorderBottom.svg'}"
                                                IsChecked="{Binding Value, Mode=OneWay, Converter={dxrudi:BorderSideToBooleanConverter Border={x:Static xpd:BorderSide.Bottom}}}" />
                                        </dxb:ToolBarControl>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </dxprg:PropertyDefinition.Style>

            <dxprg:PropertyDefinition.EditSettings>
                <dxe:PopupBaseEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:PopupBaseEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="DropDown" IsDefaultButton="True">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:PopupEditorBehavior>
                                    <dxe:PopupEditorBehavior.ContentTemplate>
                                        <DataTemplate>
                                            <dxrude:BordersUITypeEditor EditValue="{Binding Value}" />
                                        </DataTemplate>
                                    </dxe:PopupEditorBehavior.ContentTemplate>
                                </dxe:PopupEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:PopupBaseEditSettings.Buttons>
                </dxe:PopupBaseEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.Style}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.ContentTemplate>
                <DataTemplate>
                    <dxprg:CellEditorPresenter Path="{Binding FullPath, Converter={dxrudi:EditablePropertyNameConverter}}" PathMode="Absolute" />
                </DataTemplate>
            </dxprg:PropertyDefinition.ContentTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.EditableStyle}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.CellTemplate>
                <DataTemplate>
                    <dxe:ComboBoxEdit
                        DisplayMember="ControlName"
                        EditValue="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        IsTextEditable="False"
                        ItemsSource="{Binding Path=(xrdiag:XtraReportDiagramItem.ReportModel).Styles, RelativeSource={RelativeSource Self}}"
                        ValueMember="XRObjectBase">
                        <dxe:ComboBoxEdit.Buttons>
                            <dxe:ButtonInfo Command="{Binding Path=(xrdiag:XtraReportDiagramItem.ReportModel).Diagram.XRCommands.AddAndSetStyleCommand, RelativeSource={RelativeSource Self}}" CommandParameter="{Binding Path=(dxprg:PropertyGridHelper.RowData).FullPath, RelativeSource={RelativeSource Self}}" GlyphKind="Plus" />
                        </dxe:ComboBoxEdit.Buttons>
                    </dxe:ComboBoxEdit>
                </DataTemplate>
            </dxprg:PropertyDefinition.CellTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.Formatting}}">
        <dxprg:PropertyDefinition UseTypeConverterToStringConversion="True" />
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.Color}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.Style>
                <Style TargetType="dxprg:PropertyDefinition">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=(dxrud:ReportDesigner.Designer).PropertyGridOptions.UseOfficeInspiredPropertyGrid, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter Property="EditSettings" Value="{x:Null}" />
                            <Setter Property="CellTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <dxe:ButtonEdit
                                            Name="PART_Editor"
                                            Grid.Column="1"
                                            AllowDefaultButton="False"
                                            DisplayTemplate="{StaticResource colorEditDisplayTemplate}"
                                            EditNonEditableTemplate="{StaticResource colorEditDisplayTemplate}"
                                            IsTextEditable="False" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="{x:Static dxrudi:PropertyGridHelper.AdditionalPropertyDefinitionContentTemplateProperty}">
                                <Setter.Value>
                                    <DataTemplate>
                                        <dx:DXExpander HorizontalExpand="None" IsExpanded="{Binding IsSelected}" VerticalExpand="FromTopToBottom">
                                            <dx:DXExpander.Margin>
                                                <MultiBinding Converter="{dxrudi:DoubleToMarginConverter Side={x:Static xpd:BorderSide.Left}}" Mode="OneWay">
                                                    <Binding Path="ExpandButtonWidth" RelativeSource="{RelativeSource AncestorType=dxprg:RowControl}" />
                                                    <Binding>
                                                        <Binding.Source>
                                                            <sys:Int32>1</sys:Int32>
                                                        </Binding.Source>
                                                    </Binding>
                                                    <Binding Path="ShowCategories" RelativeSource="{RelativeSource AncestorType=dxprg:PropertyGridControl}" />
                                                </MultiBinding>
                                            </dx:DXExpander.Margin>
                                            <dxrude:ColorUITypeEditor Margin="0,0,0,2" EditValue="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding IsSelected, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
                                        </dx:DXExpander>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </dxprg:PropertyDefinition.Style>
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:PopupColorEditSettings />
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.ForUseTypeConverterToStringConversion}}">
        <dxprg:PropertyDefinition UseTypeConverterToStringConversion="True" />
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.FilterCriteria}}">
        <dxprg:PropertyDefinition IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}">
                                    <dxe:DialogServiceEditorBehavior.Content>
                                        <MultiBinding Converter="{dxrude:PropertyEditorDataConverter}">
                                            <Binding Path="AssociatedObject.(xrdiag:XtraReportDiagramItem.ReportModel)" RelativeSource="{RelativeSource Self}" />
                                            <Binding Path="AssociatedObject.(dxrudi:PropertyGridHelper.SelectedObject)" RelativeSource="{RelativeSource Self}" />
                                        </MultiBinding>
                                    </dxe:DialogServiceEditorBehavior.Content>
                                    <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                    <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                                                            <Setter Property="Width" Value="400" />
                                                            <Setter Property="Height" Value="300" />
                                                            <Setter Property="MinWidth" Value="300" />
                                                            <Setter Property="MinHeight" Value="200" />
                                                            <Setter Property="Title" Value="{dxrudl:PivotGridStringId StringId=PrefilterFormCaption}" />
                                                        </Style>
                                                    </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                    <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                        <DataTemplate>
                                                            <dxrude:PivotGridPrefilterEditor
                                                                x:Name="filterControl"
                                                                DataContainer="{Binding Content.SelectedComponent}"
                                                                FilterCriteria="{Binding Value, Mode=TwoWay}"
                                                                ReportModel="{Binding Content.ReportModel}" />
                                                        </DataTemplate>
                                                    </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                </dxrudi:UITypeEditorDialogService>
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:DialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>


    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.Font}}">
        <dxprg:PropertyDefinition IsReadOnly="False" ShowChildren="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.Style>
                <Style TargetType="dxprg:PropertyDefinition">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=(dxrud:ReportDesigner.Designer).PropertyGridOptions.UseOfficeInspiredPropertyGrid, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter Property="ShowChildren" Value="False" />
                            <Setter Property="AllowExpanding" Value="Never" />
                            <Setter Property="HeaderTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" Text="{Binding Header}" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="EditSettings" Value="{x:Null}" />
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Grid>
                                            <StackPanel Name="root">
                                                <dxprg:CellEditorPresenter Margin="0,0,0,4" Path="Name" PathMode="Relative" />
                                                <Grid Visibility="Collapsed">
                                                    <dxprg:CellEditorPresenter
                                                        Name="bPresenter"
                                                        Grid.Row="1"
                                                        Path="Bold"
                                                        PathMode="Relative" />
                                                    <dxprg:CellEditorPresenter
                                                        Name="iPresenter"
                                                        Grid.Row="1"
                                                        Path="Italic"
                                                        PathMode="Relative" />
                                                    <dxprg:CellEditorPresenter
                                                        Name="uPresenter"
                                                        Grid.Row="1"
                                                        Path="Underline"
                                                        PathMode="Relative" />
                                                    <dxprg:CellEditorPresenter
                                                        Name="sPresenter"
                                                        Grid.Row="1"
                                                        Path="Strikeout"
                                                        PathMode="Relative" />
                                                </Grid>
                                                <StackPanel Orientation="Horizontal">
                                                    <dxprg:CellEditorPresenter MinWidth="40" Path="Size" PathMode="Relative" />
                                                    <dxb:ToolBarControl
                                                        AllowCollapse="False"
                                                        AllowCustomizationMenu="False"
                                                        AllowQuickCustomization="False"
                                                        GlyphSize="Small"
                                                        ShowBackground="False"
                                                        ShowDragWidget="False">
                                                        <dxmvvm:Interaction.Behaviors>
                                                            <dxrudi:BarItemLayoutPanelReducer />
                                                        </dxmvvm:Interaction.Behaviors>
                                                        <dxb:BarCheckItem Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/FontGroup/FontBold.svg'}" Hint="{dxrudl:ReportDesignerStringId StringId=FontBold_Hint}" IsChecked="{Binding Path=ActualRowData.Value, Mode=TwoWay, ElementName=bPresenter}" />
                                                        <dxb:BarCheckItem Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/FontGroup/FontItalic.svg'}" Hint="{dxrudl:ReportDesignerStringId StringId=FontItalic_Hint}" IsChecked="{Binding Path=ActualRowData.Value, Mode=TwoWay, ElementName=iPresenter}" />
                                                        <dxb:BarCheckItem Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/FontGroup/FontUnderline.svg'}" Hint="{dxrudl:ReportDesignerStringId StringId=FontUnderline_Hint}" IsChecked="{Binding Path=ActualRowData.Value, Mode=TwoWay, ElementName=uPresenter}" />
                                                        <dxb:BarCheckItem Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/FontGroup/FontStrikethrough.svg'}" Hint="{dxrudl:ReportDesignerStringId StringId=FontStrikeOut_Hint}" IsChecked="{Binding Path=ActualRowData.Value, Mode=TwoWay, ElementName=sPresenter}" />
                                                    </dxb:ToolBarControl>
                                                </StackPanel>

                                            </StackPanel>
                                            <dxe:ButtonEdit
                                                Name="defaultEditor"
                                                AllowDefaultButton="False"
                                                IsTextEditable="False"
                                                Visibility="Collapsed">
                                                <dxe:ButtonEdit.Buttons>
                                                    <dxe:ButtonInfo GlyphKind="Regular">
                                                        <dxmvvm:Interaction.Behaviors>
                                                            <dxe:CustomDialogServiceEditorBehavior>
                                                                <dxe:CustomDialogServiceEditorBehavior.DialogServiceTemplate>
                                                                    <DataTemplate>
                                                                        <ContentControl>
                                                                            <dxrude:FontDialogService />
                                                                        </ContentControl>
                                                                    </DataTemplate>
                                                                </dxe:CustomDialogServiceEditorBehavior.DialogServiceTemplate>
                                                            </dxe:CustomDialogServiceEditorBehavior>
                                                        </dxmvvm:Interaction.Behaviors>
                                                    </dxe:ButtonInfo>
                                                </dxe:ButtonEdit.Buttons>
                                            </dxe:ButtonEdit>
                                        </Grid>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding Value}" Value="{x:Null}">
                                                <Setter TargetName="root" Property="Visibility" Value="Collapsed" />
                                                <Setter TargetName="defaultEditor" Property="Visibility" Value="Visible" />
                                                <Setter TargetName="defaultEditor" Property="EditValue" Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </dxprg:PropertyDefinition.Style>


            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:CustomDialogServiceEditorBehavior>
                                    <dxe:CustomDialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrude:FontDialogService />
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:CustomDialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:CustomDialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.Legend}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ComboBoxEditSettings
                    IsTextEditable="False"
                    ItemsSource="{Binding Path=(dxrudi:PropertyGridHelper.SelectedObject), RelativeSource={RelativeSource Self}, Converter={dxrudi:LegendCollectionConverter}}"
                    NullText="{Binding Path=(dxrudi:PropertyGridHelper.SelectedObject), RelativeSource={RelativeSource Self}, Converter={dxrudi:LegendNullTextConverter}}"
                    ValueMember="Legend" />
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.Scripts}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ComboBoxEditSettings IsTextEditable="True">
                    <dxe:ComboBoxEditSettings.ItemsSource>
                        <MultiBinding Converter="{dxrudi:AvailableScriptMethodsItemsSourceConverter}">
                            <Binding Path="(xrdiag:XtraReportDiagramItem.ReportModel).ScriptingModel" RelativeSource="{RelativeSource Self}" />
                            <Binding Path="(dxrudi:PropertyGridHelper.SelectedObject)" RelativeSource="{RelativeSource Self}" />
                            <Binding Path="Path" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type dxprg:PropertyDefinition}}" />
                        </MultiBinding>
                    </dxe:ComboBoxEditSettings.ItemsSource>
                    <dxe:ComboBoxEditSettings.Buttons>
                        <dxe:ButtonInfo Command="{Binding Path=(xrdiag:XtraReportDiagramItem.ReportModel).ScriptingModel.AddMethodCommand, RelativeSource={RelativeSource Self}}" GlyphKind="Plus">
                            <dxe:ButtonInfo.CommandParameter>
                                <MultiBinding Converter="{dxrudi:AddMethodCommandArgumentConverter}">
                                    <Binding Path="(dxrudi:PropertyGridHelper.SelectedObject)" RelativeSource="{RelativeSource Self}" />
                                    <Binding Path="Path" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type dxprg:PropertyDefinition}}" />
                                </MultiBinding>
                            </dxe:ButtonInfo.CommandParameter>
                        </dxe:ButtonInfo>
                    </dxe:ComboBoxEditSettings.Buttons>
                </dxe:ComboBoxEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.DataSource}}">
        <dxprg:PropertyDefinition IsReadOnly="False" PostOnEditValueChanged="True">
            <dxprg:PropertyDefinition.MenuCustomizations>
                <dxb:RemoveAction ElementName="{x:Static dxprg:BarItemNames.Reset}" />
            </dxprg:PropertyDefinition.MenuCustomizations>
            <dxprg:PropertyDefinition.CellTemplate>
                <DataTemplate>
                    <dxrudi:ComboBoxEditEx
                        x:Name="PART_Editor"
                        AddNewButtonPlacement="Popup"
                        DisplayMember="DisplayName"
                        EditValue="{Binding Value, UpdateSourceTrigger=PropertyChanged}"
                        IsTextEditable="False"
                        NullValueButtonPlacement="Popup"
                        PopupMinHeight="100"
                        ShowNullText="False"
                        ShowPopupOnEmptyItemsSource="True"
                        ValueMember="DataSource">
                        <dxmvvm:Interaction.Behaviors>
                            <dxrudei:PropertyGridDataSourceEditorItemsProvider ReportModel="{Binding Path=AssociatedObject.(xrdiag:XtraReportDiagramItem.ReportModel), RelativeSource={RelativeSource Self}}" SelectedObject="{Binding Path=AssociatedObject.(dxprg:PropertyGridHelper.PropertyGrid).(dxrudi:PropertyGridHelper.SelectedObjectInvalidated), RelativeSource={RelativeSource Self}}" />
                        </dxmvvm:Interaction.Behaviors>
                        <dxrudi:ComboBoxEditEx.PopupBottomAreaTemplate>
                            <ControlTemplate TargetType="{x:Type ContentControl}">
                                <Grid x:Name="PART_Root" Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).PopupViewModel.FooterVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ContentPresenter />
                                    <ContentControl dx:FocusHelper2.Focusable="False" Template="{DynamicResource {dxt:LWKey PopupBaseEdit.FooterTemplate}}" />
                                    <dx:UniformStackPanel
                                        Width="Auto"
                                        Margin="15,0,15,0"
                                        HorizontalAlignment="Center"
                                        ChildSpacing="0"
                                        Orientation="Horizontal">
                                        <Button
                                            x:Name="PART_AddNewButton"
                                            MinWidth="80"
                                            Margin="3,6,3,6"
                                            HorizontalAlignment="Left"
                                            Style="{DynamicResource {dxt:LWKey PopupBaseEdit.AddNewButtonStyle}}"
                                            Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).PopupViewModel.AddNewButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                                            <dxmvvm:Interaction.Behaviors>
                                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" DialogServiceTemplate="{DynamicResource {dxrudt:LWKey ReportDesignerDialog.DataSourceWizardDialogTemplate}}">
                                                    <dxe:DialogServiceEditorBehavior.Content>
                                                        <MultiBinding Converter="{dxrudei:DataSourcePropertyEditorViewModelConverter}">
                                                            <Binding Path="AssociatedObject.(xrdiag:XtraReportDiagramItem.ReportModel)" RelativeSource="{RelativeSource Self}" />
                                                            <Binding Path="AssociatedObject.(dxrudi:PropertyGridHelper.SelectedObject)" RelativeSource="{RelativeSource Self}" />

                                                        </MultiBinding>
                                                    </dxe:DialogServiceEditorBehavior.Content>
                                                </dxe:DialogServiceEditorBehavior>
                                            </dxmvvm:Interaction.Behaviors>
                                        </Button>
                                        <Button
                                            x:Name="PART_NullValueButton"
                                            MinWidth="80"
                                            Margin="3,6,3,6"
                                            HorizontalAlignment="Left"
                                            Command="{Binding Path=(dxe:BaseEdit.OwnerEdit).SetNullValueCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                            Style="{DynamicResource {dxt:LWKey PopupBaseEdit.NullValueButtonStyle}}"
                                            Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).PopupViewModel.NullValueButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </dx:UniformStackPanel>
                                    <dxe:PopupSizeGrip
                                        x:Name="PART_SizeGrip"
                                        Margin="2,3,2,2"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).ResizeGripViewModel.VerticalAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                                        dx:FocusHelper2.Focusable="False"
                                        Style="{DynamicResource {dxt:LWKey PopupBaseEdit.ResizeGripStyle}}"
                                        Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).ResizeGripViewModel.Visibility, RelativeSource={RelativeSource TemplatedParent}}" />
                                </Grid>
                            </ControlTemplate>
                        </dxrudi:ComboBoxEditEx.PopupBottomAreaTemplate>
                    </dxrudi:ComboBoxEditEx>
                </DataTemplate>
            </dxprg:PropertyDefinition.CellTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.BindingDataWithoutParameters}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.CellTemplateSelector>
                <dxrudi:GroupFieldNameEditorTemplateSelector>
                    <dxrudi:GroupFieldNameEditorTemplateSelector.TreeListTemplate>
                        <DataTemplate>
                            <dxrude:PopupTreeListEdit
                                x:Name="PART_Editor"
                                ChildNodesPath="Children"
                                DisplayMember="DisplayName"
                                EditValue="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                HierarchicalPathProvider="{dxrude:BindingDataHierarchicalPathProvider}"
                                ItemsSource="{Binding Path=(xrdiag:XtraReportDiagramItem.ReportModel).DataSources, RelativeSource={RelativeSource Self}}"
                                PopupDisplayMember="DisplayName"
                                PopupSelectionValidator="{dxrude:BindingDataPopupSelectionValidator CanSelectParameters=False}"
                                TreeListCellTemplate="{DynamicResource {dxrudt:LWKey ReportDesigner.FieldListNodeTemplate}}"
                                ValueMember="BindingData">
                                <dxmvvm:Interaction.Behaviors>
                                    <dxrudi:UpdateBindingsOnPropertyChangedBehavior Source="{Binding Path=AssociatedObject.(dxrudi:PropertyGridHelper.SelectedObject), RelativeSource={RelativeSource Self}}" />
                                </dxmvvm:Interaction.Behaviors>
                            </dxrude:PopupTreeListEdit>
                        </DataTemplate>
                    </dxrudi:GroupFieldNameEditorTemplateSelector.TreeListTemplate>
                    <dxrudi:GroupFieldNameEditorTemplateSelector.TextTemplate>
                        <DataTemplate>
                            <dxe:TextEdit x:Name="PART_Editor" EditValue="{Binding Value, Mode=TwoWay}" />
                        </DataTemplate>
                    </dxrudi:GroupFieldNameEditorTemplateSelector.TextTemplate>
                </dxrudi:GroupFieldNameEditorTemplateSelector>
            </dxprg:PropertyDefinition.CellTemplateSelector>
        </dxprg:PropertyDefinition>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.SeriesColorizerDataMember}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.CellTemplateSelector>
                <dxrudi:GroupFieldNameEditorTemplateSelector>
                    <dxrudi:GroupFieldNameEditorTemplateSelector.TreeListTemplate>
                        <DataTemplate>
                            <dxrude:PopupTreeListEdit
                                x:Name="PART_Editor"
                                ChildNodesPath="Children"
                                DisplayMember="FullDisplayName"
                                EditValue="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                HierarchicalPathProvider="{dxrude:BindingDataHierarchicalPathProvider}"
                                ItemsSource="{Binding Path=(xrdiag:XtraReportDiagramItem.ReportModel).DataSources, RelativeSource={RelativeSource Self}}"
                                PopupDisplayMember="DisplayName"
                                PopupSelectionValidator="{dxrude:BindingDataPopupSelectionValidator CanSelectParameters=False, CanSelectComplexFields=true}"
                                TreeListCellTemplate="{DynamicResource {dxrudt:LWKey ReportDesigner.FieldListNodeTemplate}}"
                                ValueMember="BindingData">
                                <dxmvvm:Interaction.Behaviors>
                                    <dxrudi:UpdateBindingsOnPropertyChangedBehavior Source="{Binding Path=AssociatedObject.(dxrudi:PropertyGridHelper.SelectedObject), RelativeSource={RelativeSource Self}}" />
                                </dxmvvm:Interaction.Behaviors>
                            </dxrude:PopupTreeListEdit>
                        </DataTemplate>
                    </dxrudi:GroupFieldNameEditorTemplateSelector.TreeListTemplate>
                    <dxrudi:GroupFieldNameEditorTemplateSelector.TextTemplate>
                        <DataTemplate>
                            <dxe:TextEdit x:Name="PART_Editor" EditValue="{Binding Value, Mode=TwoWay}" />
                        </DataTemplate>
                    </dxrudi:GroupFieldNameEditorTemplateSelector.TextTemplate>
                </dxrudi:GroupFieldNameEditorTemplateSelector>
            </dxprg:PropertyDefinition.CellTemplateSelector>
        </dxprg:PropertyDefinition>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.BindingData}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.CellTemplate>
                <DataTemplate>
                    <dxrude:PopupTreeListEdit
                        x:Name="PART_Editor"
                        ChildNodesPath="Children"
                        DisplayMember="FullPath"
                        ItemsSource="{Binding Path=(xrdiag:XtraReportDiagramItem.ReportModel), Converter={dxrudi:ReportModelToDataBindingNodesConverter}, RelativeSource={RelativeSource Self}}"
                        PopupDisplayMember="DisplayName"
                        PopupSelectionValidator="{dxrude:BindingDataPopupSelectionValidator CanSelectParameters=True}"
                        TreeListCellTemplate="{DynamicResource {dxrudt:LWKey ReportDesigner.FieldListNodeTemplate}}"
                        ValueMember="BindingData">
                        <dxmvvm:Interaction.Behaviors>
                            <dxrudi:UpdateBindingsOnPropertyChangedBehavior Source="{Binding Path=AssociatedObject.(dxrudi:PropertyGridHelper.SelectedObject), RelativeSource={RelativeSource Self}}" />
                        </dxmvvm:Interaction.Behaviors>
                        <dxrude:PopupTreeListEdit.HierarchicalPathProvider>
                            <MultiBinding Converter="{dxrudi:BindingModeToHierarchicalPathProviderConverter}">
                                <Binding Path="(xrdiag:XtraReportDiagramItem.ReportModel).DataBindingMode" RelativeSource="{RelativeSource Self}" />
                                <Binding Path="ItemsSource" RelativeSource="{RelativeSource Self}" />
                                <Binding Path="(xrdiag:XtraReportDiagramItem.ReportModel)" RelativeSource="{RelativeSource Self}" />
                                <Binding Path="(dxprg:PropertyGridHelper.RowData)" RelativeSource="{RelativeSource Self}" />
                            </MultiBinding>
                        </dxrude:PopupTreeListEdit.HierarchicalPathProvider>
                    </dxrude:PopupTreeListEdit>
                </DataTemplate>
            </dxprg:PropertyDefinition.CellTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.DataMember}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.MenuCustomizations>
                <dxb:RemoveAction ElementName="{x:Static dxprg:BarItemNames.Reset}" />
            </dxprg:PropertyDefinition.MenuCustomizations>
            <dxprg:PropertyDefinition.CellTemplate>
                <DataTemplate>
                    <dxrude:PopupTreeListEdit
                        x:Name="PART_Editor"
                        ChildNodesPath="Children"
                        DisplayMember="DisplayName"
                        EditValue="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        HierarchicalPathProvider="{dxrude:BindingDataHierarchicalPathProvider}"
                        PopupDisplayMember="DisplayName"
                        TreeListCellTemplate="{DynamicResource {dxrudt:LWKey ReportDesigner.FieldListNodeTemplate}}"
                        ValueMember="BindingData">
                        <dxmvvm:Interaction.Behaviors>
                            <dxrudi:SetDataMemberSelectionValidatorBehavior SelectedItem="{Binding Path=AssociatedObject.(dxrudi:PropertyGridHelper.SelectedObject), RelativeSource={RelativeSource Self}}" />
                            <dxrudi:UpdateBindingsOnPropertyChangedBehavior Source="{Binding Path=AssociatedObject.(dxrudi:PropertyGridHelper.SelectedObject), RelativeSource={RelativeSource Self}}" />
                        </dxmvvm:Interaction.Behaviors>
                        <dxrude:PopupTreeListEdit.ItemsSource>
                            <MultiBinding Converter="{dxrudi:ReportModelToDataMemberNodesConverter}">
                                <Binding Path="(xrdiag:XtraReportDiagramItem.ReportModel)" RelativeSource="{RelativeSource Mode=Self}" />
                                <Binding Path="(dxrudi:PropertyGridHelper.SelectedObject)" RelativeSource="{RelativeSource Mode=Self}" />
                            </MultiBinding>
                        </dxrude:PopupTreeListEdit.ItemsSource>
                    </dxrude:PopupTreeListEdit>
                </DataTemplate>
            </dxprg:PropertyDefinition.CellTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.DrillDownControl}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.EditSettings>
                <dxrude:PopupTreeListEditSettings
                    ChildNodesPath="ChildItems"
                    DisplayMember="ControlName"
                    HierarchicalPathProvider="{Binding Path=(dxrudi:PropertyGridHelper.SelectedObject), RelativeSource={RelativeSource Self}, Converter={dxrudi:DrillDownControlHierarchicalPathProviderConverter}}"
                    IsTextEditable="False"
                    ItemsSource="{Binding Path=(dxrudi:PropertyGridHelper.SelectedObject), RelativeSource={RelativeSource Self}, Converter={dxrudi:SelectionModelToRootDrillDownControlConverter}}"
                    PopupDisplayMember="ControlName"
                    PopupSelectionValidator="{dxrude:DrillDownControlSelectionValidator}"
                    ShowNullText="False"
                    TreeListAutoExpandDepth="2"
                    ValueMember="XRObjectBase">
                    <dxrude:PopupTreeListEditSettings.TreeListCellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <dx:DXImage
                                    Width="{dxrudi:ThemeImageSize Size=16, TouchThemeSize=32}"
                                    Height="{dxrudi:ThemeImageSize Size=16, TouchThemeSize=32}"
                                    Margin="0,0,5,0"
                                    VerticalAlignment="Center"
                                    Source="{Binding RowData.Row.Icon}"
                                    Stretch="Fill" />
                                <TextBlock VerticalAlignment="Center" Text="{Binding RowData.Row.ControlName}" />
                            </StackPanel>
                        </DataTemplate>
                    </dxrude:PopupTreeListEditSettings.TreeListCellTemplate>
                </dxrude:PopupTreeListEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.DataFilterCollection}}">
        <dxprg:PropertyDefinition ContentTemplate="{StaticResource PropertyDefinitionContentTemplate}" IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" Content="{Binding Path=AssociatedObject.(xrdiag:XtraReportDiagramItem.ReportModel), RelativeSource={RelativeSource Self}}">
                                    <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                    <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                                                            <Setter Property="Width" Value="600" />
                                                            <Setter Property="Height" Value="350" />
                                                            <Setter Property="MinWidth" Value="420" />
                                                            <Setter Property="MinHeight" Value="240" />
                                                            <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=Chart_DataFiltersEditor_Title}" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Path=(dx:ThemeManager.IsTouchlineTheme), RelativeSource={RelativeSource Self}}" Value="True">
                                                                    <Setter Property="Width" Value="900" />
                                                                    <Setter Property="MinWidth" Value="650" />
                                                                    <Setter Property="Height" Value="500" />
                                                                    <Setter Property="MinHeight" Value="413" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Path=(dx:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource Self}}" Value="True">
                                                                    <Setter Property="Width" Value="900" />
                                                                    <Setter Property="MinWidth" Value="650" />
                                                                    <Setter Property="Height" Value="500" />
                                                                    <Setter Property="MinHeight" Value="413" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                    <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                        <DataTemplate>
                                                            <dxrude:DataFilterCollectionUITypeEditor EditValue="{Binding Value}" ReportModel="{Binding Content}" />
                                                        </DataTemplate>
                                                    </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                </dxrudi:UITypeEditorDialogService>
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:DialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.ViewType}}">
        <dxprg:PropertyDefinition IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" Content="{Binding Path=AssociatedObject.(dxrudi:PropertyGridHelper.SelectedObject), Converter={dxrudi:SeriesViewSelectionModelConverter}, RelativeSource={RelativeSource Self}}">
                                    <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                    <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <Style BasedOn="{StaticResource CustomFooterThemedWindowDialogStyle}" TargetType="dx:ThemedWindow">
                                                            <Setter Property="SizeToContent" Value="WidthAndHeight" />
                                                            <Setter Property="ResizeMode" Value="CanMinimize" />
                                                            <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=Chart_SeriesViewEditor_Title}" />
                                                        </Style>
                                                    </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                    <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                        <DataTemplate>
                                                            <dxrude:SeriesViewUITypeEditor EditValue="{Binding Content.EditableView}" EditValueOwner="{Binding Content}" />
                                                        </DataTemplate>
                                                    </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                </dxrudi:UITypeEditorDialogService>
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:DialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.ImageAlignment}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.HeaderTemplate>
                <DataTemplate>
                    <TextBlock
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        Text="{Binding Header}"
                        TextTrimming="CharacterEllipsis" />
                </DataTemplate>
            </dxprg:PropertyDefinition.HeaderTemplate>
            <dxprg:PropertyDefinition.CellTemplate>
                <DataTemplate>
                    <dxrude:ImageAlignmentEditor SelectedAlignment="{Binding Value}" />
                </DataTemplate>
            </dxprg:PropertyDefinition.CellTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.ChartDesignerLabelsVisibility}}">
        <dxprg:PropertyDefinition IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.CellTemplate>
                <DataTemplate>
                    <dxe:CheckEdit HorizontalAlignment="Center" EditValue="{Binding Value, Converter={dxrudcdi:DefaultBooleanToBooleanConverter}}" IsThreeState="True" />
                </DataTemplate>
            </dxprg:PropertyDefinition.CellTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.ConstantLineCollection}}">
        <dxprg:PropertyDefinition ContentTemplate="{StaticResource PropertyDefinitionContentTemplate}" IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}">
                                    <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                    <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                                                            <Setter Property="Width" Value="600" />
                                                            <Setter Property="Height" Value="350" />
                                                            <Setter Property="MinWidth" Value="420" />
                                                            <Setter Property="MinHeight" Value="240" />
                                                            <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=Chart_ConstantLinesEditor_Title}" />
                                                        </Style>
                                                    </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                    <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                        <DataTemplate>
                                                            <dxrude:ConstantLineCollectionUITypeEditor EditValue="{Binding Value}" />
                                                        </DataTemplate>
                                                    </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                </dxrudi:UITypeEditorDialogService>
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:DialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.CustomAxisLabelCollection}}">
        <dxprg:PropertyDefinition ContentTemplate="{StaticResource PropertyDefinitionContentTemplate}" IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}">
                                    <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                    <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                                                            <Setter Property="Width" Value="600" />
                                                            <Setter Property="Height" Value="350" />
                                                            <Setter Property="MinWidth" Value="420" />
                                                            <Setter Property="MinHeight" Value="240" />
                                                            <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=Chart_CustomLabelsEditor_Title}" />
                                                        </Style>
                                                    </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                    <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                        <DataTemplate>
                                                            <dxrude:CustomAxisLabelCollectionUITypeEditor EditValue="{Binding Value}" />
                                                        </DataTemplate>
                                                    </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                </dxrudi:UITypeEditorDialogService>
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:DialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.StripCollection}}">
        <dxprg:PropertyDefinition ContentTemplate="{StaticResource PropertyDefinitionContentTemplate}" IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}">
                                    <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                    <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                                                            <Setter Property="Width" Value="600" />
                                                            <Setter Property="Height" Value="350" />
                                                            <Setter Property="MinWidth" Value="420" />
                                                            <Setter Property="MinHeight" Value="240" />
                                                            <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=Chart_StripsEditor_Title}" />
                                                        </Style>
                                                    </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                    <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                        <DataTemplate>
                                                            <dxrude:StripCollectionUITypeEditor EditValue="{Binding Value}" />
                                                        </DataTemplate>
                                                    </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                </dxrudi:UITypeEditorDialogService>
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:DialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.SeriesTitleCollection}}">
        <dxprg:PropertyDefinition ContentTemplate="{StaticResource PropertyDefinitionContentTemplate}" IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}">
                                    <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                    <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                                                            <Setter Property="Width" Value="500" />
                                                            <Setter Property="Height" Value="380" />
                                                            <Setter Property="MinWidth" Value="230" />
                                                            <Setter Property="MinHeight" Value="235" />
                                                            <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=Chart_SeriesTitleCollectionEditor_Title}" />
                                                        </Style>
                                                    </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                    <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                        <DataTemplate>
                                                            <dxrude:SeriesTitleCollectionUITypeEditor EditValue="{Binding Value}" />
                                                        </DataTemplate>
                                                    </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                </dxrudi:UITypeEditorDialogService>
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:DialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.LegendCollection}}">
        <dxprg:PropertyDefinition ContentTemplate="{StaticResource PropertyDefinitionContentTemplate}" IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}">
                                    <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                    <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                                                            <Setter Property="Width" Value="600" />
                                                            <Setter Property="Height" Value="350" />
                                                            <Setter Property="MinWidth" Value="420" />
                                                            <Setter Property="MinHeight" Value="240" />
                                                            <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=Chart_LegendCollectionEditor_Title}" />
                                                        </Style>
                                                    </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                    <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                        <DataTemplate>
                                                            <dxrude:LegendCollectionUITypeEditor EditValue="{Binding Value}" />
                                                        </DataTemplate>
                                                    </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                </dxrudi:UITypeEditorDialogService>
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:DialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.ScaleBreakCollection}}">
        <dxprg:PropertyDefinition IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}">
                                    <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                    <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                                                            <Setter Property="Width" Value="600" />
                                                            <Setter Property="Height" Value="350" />
                                                            <Setter Property="MinWidth" Value="420" />
                                                            <Setter Property="MinHeight" Value="240" />
                                                            <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=Chart_ScaleBreaksEditor_Title}" />
                                                        </Style>
                                                    </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                    <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                        <DataTemplate>
                                                            <dxrude:ScaleBreakCollectionUITypeEditor EditValue="{Binding Value}" />
                                                        </DataTemplate>
                                                    </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                </dxrudi:UITypeEditorDialogService>
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:DialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>

    <!--<DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.ChartDesigner3DBarWidth}}">
        <dxprg:PropertyDefinition IsReadOnly="False" PostOnEditValueChanged="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:SpinEditSettings MinValue="0.1" />
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>-->

    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.Percent}}">
        <dxprg:PropertyDefinition IsReadOnly="False" PostOnEditValueChanged="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:SpinEditSettings Mask="D0" MaxValue="100" MinValue="0" />
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.PerspectiveAngle}}">
        <dxprg:PropertyDefinition IsReadOnly="False" PostOnEditValueChanged="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:SpinEditSettings Mask="D0" MaxValue="180" MinValue="0" />
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.ChartElementTransparency}}">
        <dxprg:PropertyDefinition IsReadOnly="False" PostOnEditValueChanged="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:SpinEditSettings Mask="D0" MaxValue="255" MinValue="0" />
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.ChartDesignerBarWidth}}">
        <dxprg:PropertyDefinition IsReadOnly="False" PostOnEditValueChanged="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:SpinEditSettings Increment="0.1" MinValue="0.1" />
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.Angle}}">
        <dxprg:PropertyDefinition IsReadOnly="False" PostOnEditValueChanged="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:SpinEditSettings Mask="D0" MaxValue="360" MinValue="-360" />
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.ChartDesignerBorderThickness}}">
        <dxprg:PropertyDefinition IsReadOnly="False" PostOnEditValueChanged="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:SpinEditSettings Mask="D0" MinValue="1" />
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.LineLength}}">
        <dxprg:PropertyDefinition IsReadOnly="False" PostOnEditValueChanged="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:SpinEditSettings Mask="D0" MaxValue="1000" MinValue="0" />
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.ChartSeriesSize}}">
        <dxprg:PropertyDefinition IsReadOnly="False" PostOnEditValueChanged="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:SpinEditSettings Mask="D0" MinValue="1" />
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.BorderWidth}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:SpinEditSettings MinValue="0" />
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.PageBorderWidth}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:SpinEditSettings Mask="D0" MaskUseAsDisplayFormat="True" MinValue="0" />
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.FormattingRuleCollection}}">
        <dxprg:PropertyDefinition ContentTemplate="{StaticResource PropertyDefinitionContentTemplate}" IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" Content="{Binding Path=AssociatedObject.(xrdiag:XtraReportDiagramItem.ReportModel), RelativeSource={RelativeSource Self}}">
                                    <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                    <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                                                            <Setter Property="Width" Value="600" />
                                                            <Setter Property="Height" Value="400" />
                                                            <Setter Property="MinWidth" Value="500" />
                                                            <Setter Property="MinHeight" Value="400" />
                                                            <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=FormattingRulesEditor_Title}" />
                                                        </Style>
                                                    </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                    <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                        <DataTemplate>
                                                            <dxrude:FormattingRulesUITypeEditor EditValue="{Binding Value}" ReportModel="{Binding Content}" />
                                                        </DataTemplate>
                                                    </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                </dxrudi:UITypeEditorDialogService>
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:DialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.XRControlStyleSheet}}">
        <dxprg:PropertyDefinition ContentTemplate="{StaticResource PropertyDefinitionContentTemplate}" IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" Content="{Binding Path=AssociatedObject.(xrdiag:XtraReportDiagramItem.ReportModel), RelativeSource={RelativeSource Self}}" DialogServiceTemplate="{DynamicResource {dxrudt:LWKey ReportDesignerDialog.StyleSheetDialogServiceTemplate}}" />
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.AnnotationCollection}}">
        <dxprg:PropertyDefinition ContentTemplate="{StaticResource PropertyDefinitionContentTemplate}" IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.CellTemplate>
                <DataTemplate>
                    <dxe:ButtonEdit x:Name="PART_Editor" AllowDefaultButton="False" IsTextEditable="False">
                        <dxe:ButtonEdit.Buttons>
                            <dxe:ButtonInfo GlyphKind="Regular">
                                <dxmvvm:Interaction.Behaviors>
                                    <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" DialogServiceTemplate="{DynamicResource {dxrudt:LWKey ReportDesignerDialog.ChartAnnotationsEditorDialogServiceTemplate}}">
                                        <dxe:DialogServiceEditorBehavior.Content>
                                            <MultiBinding Converter="{dxrudi:AnnotationEditorDataConverter}">
                                                <Binding Path="AssociatedObject.(xrdiag:XtraReportDiagramItem.ReportModel)" RelativeSource="{RelativeSource Self}" />
                                                <Binding Path="AssociatedObject.(dxprg:PropertyGridHelper.RowData)" RelativeSource="{RelativeSource Self}" />
                                            </MultiBinding>
                                        </dxe:DialogServiceEditorBehavior.Content>
                                    </dxe:DialogServiceEditorBehavior>
                                </dxmvvm:Interaction.Behaviors>
                            </dxe:ButtonInfo>
                        </dxe:ButtonEdit.Buttons>
                    </dxe:ButtonEdit>
                </DataTemplate>
            </dxprg:PropertyDefinition.CellTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.PivotGridFieldSortConditionCollection}}">
        <dxprg:PropertyDefinition IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" Content="{Binding Path=AssociatedObject.(xrdiag:XtraReportDiagramItem.ReportModel), RelativeSource={RelativeSource Self}}">
                                    <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                    <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                                                            <Setter Property="Width" Value="600" />
                                                            <Setter Property="Height" Value="350" />
                                                            <Setter Property="MinWidth" Value="420" />
                                                            <Setter Property="MinHeight" Value="240" />
                                                            <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=PivotGrid_FieldSortConditionsEditor_Title}" />
                                                        </Style>
                                                    </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                    <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                        <DataTemplate>
                                                            <dxrude:PivotGridFieldSortConditionEditor EditValue="{Binding Value}" ReportModel="{Binding Content}" />
                                                        </DataTemplate>
                                                    </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                </dxrudi:UITypeEditorDialogService>
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:DialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.PrinterName}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ComboBoxEditSettings IsTextEditable="False" ItemsSource="{Binding Path=(propertygrid:ReportDesignerPropertyGridControl.Instance).InstalledPrinters, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxprg:PropertyDefinition}}}" />
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.PaperKind}}">
        <dxprg:PropertyDefinition>
            <dxprg:PropertyDefinition.CellTemplate>
                <DataTemplate>
                    <dxe:ComboBoxEdit DisplayTextConverter="{dxrudi:EnumToDisplayNameConverter}" EditValue="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{dxe:EnumItemsSource EnumType={x:Type devexpressdrawingprinting:DXPaperKind}}" />
                </DataTemplate>
            </dxprg:PropertyDefinition.CellTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.Transparency}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:TrackBarEditSettings Maximum="255" Minimum="0" TickFrequency="0">
                    <dxe:TrackBarEditSettings.StyleSettings>
                        <dxe:TrackBarStyleSettings />
                    </dxe:TrackBarEditSettings.StyleSettings>
                </dxe:TrackBarEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.PageRange}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:TextEditSettings Mask="{x:Static propertygrid:ReportDesignerPropertyGridControl.PageRangeMask}" MaskType="RegEx" MaskUseAsDisplayFormat="True" />
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.PaletteName}}">
        <dxprg:PropertyDefinition IsReadOnly="False" UseTypeConverterToStringConversion="False">
            <dxprg:PropertyDefinition.ContentTemplate>
                <DataTemplate>
                    <dxprg:CellEditorPresenter IsEnabled="{Binding Path=(xrdiag:XtraReportDiagramItem.ReportModel).Diagram, Converter={dxrudi:IsEnableEditorMultiSelectionConverter}, RelativeSource={RelativeSource Self}}" />
                </DataTemplate>
            </dxprg:PropertyDefinition.ContentTemplate>
            <dxprg:PropertyDefinition.CellTemplate>
                <DataTemplate>
                    <dxe:ComboBoxEdit
                        x:Name="PART_Editor"
                        HorizontalContentAlignment="Stretch"
                        DisplayMember="Name"
                        EditValue="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        IsTextEditable="False"
                        ItemsSource="{Binding Path=(xrdiag:XtraReportDiagramItem.ReportModel).SelectedModel.XRObjectBase, Converter={dxrudi:PalettesToPaletteViewModelsConverter ChartRepository=PaletteRepository}, RelativeSource={RelativeSource Self}}"
                        ValueMember="Name">
                        <dxe:ComboBoxEdit.Buttons>
                            <dxe:ButtonInfo GlyphKind="Regular">
                                <dxmvvm:Interaction.Behaviors>
                                    <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}">
                                        <dxe:DialogServiceEditorBehavior.Content>
                                            <MultiBinding Converter="{dxrude:RowDataToChartDiagramItemConverter}">
                                                <Binding Path="AssociatedObject.(dxprg:PropertyGridHelper.RowData)" RelativeSource="{RelativeSource Self}" />
                                                <Binding Path="AssociatedObject.(xrdiag:XtraReportDiagramItem.ReportModel)" RelativeSource="{RelativeSource Self}" />
                                            </MultiBinding>
                                        </dxe:DialogServiceEditorBehavior.Content>
                                        <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                            <DataTemplate>
                                                <ContentControl>
                                                    <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                        <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                            <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="{x:Type dx:ThemedWindow}">
                                                                <Setter Property="Width" Value="570" />
                                                                <Setter Property="Height" Value="430" />
                                                                <Setter Property="MinWidth" Value="420" />
                                                                <Setter Property="MinHeight" Value="240" />
                                                                <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=Chart_PalettesEditor_Title}" />
                                                            </Style>
                                                        </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                            <DataTemplate>
                                                                <dxrude:PaletteCollectionUITypeEditor EditValue="{Binding Content.PaletteModel.Palettes, Mode=OneTime}" PaletteRepository="{Binding Content.XRChartDiagramItem, Converter={dxrudi:XRChartDiagramItemToPaletteRepositoryConverter ChartRepository=PaletteRepository}}" ReportModel="{Binding Content.ReportModel}" />
                                                            </DataTemplate>
                                                        </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                    </dxrudi:UITypeEditorDialogService>
                                                </ContentControl>
                                            </DataTemplate>
                                        </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                    </dxe:DialogServiceEditorBehavior>
                                </dxmvvm:Interaction.Behaviors>
                            </dxe:ButtonInfo>
                        </dxe:ComboBoxEdit.Buttons>
                        <dxe:ComboBoxEdit.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Margin="0,0,5,0" Text="{Binding Name}" />
                                    <ItemsControl Grid.Column="1" ItemsSource="{Binding Colors}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Horizontal" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Rectangle
                                                    Width="10"
                                                    Height="10"
                                                    Margin="1"
                                                    Fill="{Binding Converter={dxrudi:DrawingColorToMediaBrushConverter}}"
                                                    Stroke="Gray" />
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </Grid>
                            </DataTemplate>
                        </dxe:ComboBoxEdit.ItemTemplate>
                    </dxe:ComboBoxEdit>
                </DataTemplate>
            </dxprg:PropertyDefinition.CellTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.IndicatorsPaletteName}}">
        <dxprg:PropertyDefinition IsReadOnly="False" UseTypeConverterToStringConversion="False">
            <dxprg:PropertyDefinition.ContentTemplate>
                <DataTemplate>
                    <dxprg:CellEditorPresenter IsEnabled="{Binding Path=(xrdiag:XtraReportDiagramItem.ReportModel).Diagram, Converter={dxrudi:IsEnableEditorMultiSelectionConverter}, RelativeSource={RelativeSource Self}}" />
                </DataTemplate>
            </dxprg:PropertyDefinition.ContentTemplate>
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ComboBoxEditSettings
                    HorizontalContentAlignment="Stretch"
                    DisplayMember="Name"
                    IsTextEditable="False"
                    ItemsSource="{Binding Path=(xrdiag:XtraReportDiagramItem.ReportModel).SelectedModel.XRObjectBase, Converter={dxrudi:PalettesToPaletteViewModelsConverter ChartRepository=IndicatorsPaletteRepository}, RelativeSource={RelativeSource Self}}"
                    ValueMember="Name">
                    <dxe:ComboBoxEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" Content="{Binding Path=AssociatedObject.(xrdiag:XtraReportDiagramItem.ReportModel), RelativeSource={RelativeSource Self}}">
                                    <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                    <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="{x:Type dx:ThemedWindow}">
                                                            <Setter Property="Width" Value="570" />
                                                            <Setter Property="Height" Value="430" />
                                                            <Setter Property="MinWidth" Value="420" />
                                                            <Setter Property="MinHeight" Value="240" />
                                                            <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=Chart_PalettesEditor_Title}" />
                                                        </Style>
                                                    </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                    <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                        <DataTemplate>
                                                            <dxrude:PaletteCollectionUITypeEditor EditValue="{Binding Content.Diagram.SelectionModel.IndicatorsPalettes, Mode=OneTime}" PaletteRepository="{Binding Content.SelectedModel, Converter={dxrudi:XRChartDiagramItemToPaletteRepositoryConverter ChartRepository=IndicatorsPaletteRepository}}" ReportModel="{Binding Content}" />
                                                        </DataTemplate>
                                                    </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                </dxrudi:UITypeEditorDialogService>
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:DialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ComboBoxEditSettings.Buttons>
                    <dxe:ComboBoxEditSettings.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Margin="0,0,5,0" Text="{Binding Name}" />
                                <ItemsControl Grid.Column="1" ItemsSource="{Binding Colors}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Horizontal" />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Rectangle
                                                Width="10"
                                                Height="10"
                                                Margin="1"
                                                Fill="{Binding Converter={dxrudi:DrawingColorToMediaBrushConverter}}"
                                                Stroke="Gray" />
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </Grid>
                        </DataTemplate>
                    </dxe:ComboBoxEditSettings.ItemTemplate>
                </dxe:ComboBoxEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.NeverEmbeddedFonts}}">
        <dxprg:PropertyDefinition>
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:TextEditSettings Mask="{x:Static propertygrid:ReportDesignerPropertyGridControl.ListMask}" MaskType="RegEx" MaskUseAsDisplayFormat="True" />
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.ReportFilterString}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}">

                                    <dxe:DialogServiceEditorBehavior.Content>
                                        <MultiBinding Converter="{dxrude:PropertyEditorDataConverter}">
                                            <Binding Path="AssociatedObject.(dxrud:ReportDesigner.Document).ReportModel" RelativeSource="{RelativeSource Self}" />
                                            <Binding Path="AssociatedObject.(dxrudi:PropertyGridHelper.SelectedObject)" RelativeSource="{RelativeSource Self}" />
                                        </MultiBinding>
                                    </dxe:DialogServiceEditorBehavior.Content>
                                    <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrudi:UITypeEditorDialogService DialogStyle="{StaticResource filterStringDialogStyle}" DialogWindowStartupLocation="CenterOwner">
                                                    <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                        <DataTemplate>
                                                            <dxrude:ReportFilterStringEditor
                                                                DataContainer="{Binding Content.SelectedComponent}"
                                                                EditValue="{Binding Value}"
                                                                ParameterService="{Binding Path=Content.ReportModel, Converter={dxrudei:ReportModelToParameterServiceConverter}}"
                                                                ReportModel="{Binding Content.ReportModel}" />
                                                        </DataTemplate>
                                                    </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                </dxrudi:UITypeEditorDialogService>
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:DialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>


    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.ControlFilterString}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" DialogServiceTemplate="{StaticResource controlFilterStringDialogServiceTemplate}">
                                    <dxe:DialogServiceEditorBehavior.Content>
                                        <MultiBinding Converter="{dxrude:PropertyEditorDataConverter}">
                                            <Binding Path="AssociatedObject.(xrdiag:XtraReportDiagramItem.ReportModel)" RelativeSource="{RelativeSource Self}" />
                                            <Binding Path="AssociatedObject.(dxrudi:PropertyGridHelper.SelectedObject)" RelativeSource="{RelativeSource Self}" />
                                        </MultiBinding>
                                    </dxe:DialogServiceEditorBehavior.Content>
                                </dxe:DialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>


    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.ParameterFilterString}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" DialogServiceTemplate="{DynamicResource {dxrudt:LWKey ReportDesignerDialog.ParameterFilterStringEditorDialogTemplate}}">
                                    <dxe:DialogServiceEditorBehavior.Content>
                                        <MultiBinding Converter="{dxrude:PropertyEditorDataConverter}">
                                            <Binding Path="AssociatedObject.(xrdiag:XtraReportDiagramItem.ReportModel)" RelativeSource="{RelativeSource Self}" />
                                            <Binding Path="AssociatedObject.(dxrudi:PropertyGridHelper.SelectedObject)" RelativeSource="{RelativeSource Self}" />
                                        </MultiBinding>
                                    </dxe:DialogServiceEditorBehavior.Content>
                                </dxe:DialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.BookmarkParent}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.EditSettings>
                <dxrude:PopupTreeListEditSettings
                    ChildNodesPath="ChildItems"
                    ChildNodesSelector="{Binding Path=(dxrudi:PropertyGridHelper.SelectedObject), Converter={dxrude:ParentBookmarkChildNodesSelectorConverter}, RelativeSource={RelativeSource Self}}"
                    DisplayMember="ControlName"
                    HierarchicalPathProvider="{dxrude:ReportExplorerHierarchicalPathProvider}"
                    ItemsSource="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel, RelativeSource={RelativeSource Self}, Converter={dxrudi:YieldConverter}}"
                    PopupDisplayMember="ControlName"
                    PopupSelectionValidator="{dxrude:ParentBookmarkPopupSelectionValidator}"
                    TreeListAutoExpandDepth="2"
                    ValueMember="XRObjectBase">
                    <dxrude:PopupTreeListEditSettings.TreeListCellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <dx:DXImage
                                    Width="{dxrudi:ThemeImageSize Size=16, TouchThemeSize=32}"
                                    Height="{dxrudi:ThemeImageSize Size=16, TouchThemeSize=32}"
                                    Margin="0,0,6,0"
                                    VerticalAlignment="Center"
                                    Source="{Binding RowData.Row.Icon}" />
                                <TextBlock VerticalAlignment="Center" Text="{Binding RowData.Row.ControlName}" />
                            </StackPanel>
                        </DataTemplate>
                    </dxrude:PopupTreeListEditSettings.TreeListCellTemplate>
                </dxrude:PopupTreeListEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.FormatString}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" NullValue="">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" Content="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Document).ReportModel.SelectedModel, RelativeSource={RelativeSource Self}}" DialogServiceTemplate="{DynamicResource {dxrudt:LWKey ReportDesignerDialog.FormatStringEditorDialogTemplate}}" />
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.Encoding}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ComboBoxEditSettings DisplayMember="EncodingName" IsTextEditable="False" ItemsSource="{dxrudi:EncodingCollectionExtension}" />
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.PdfPasswordSecurityOptions}}">
        <dxprg:PropertyDefinition IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" Content="{Binding Path=AssociatedObject.(xrdiag:XtraReportDiagramItem.ReportModel), RelativeSource={RelativeSource Self}}">
                                    <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                    <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <Style BasedOn="{StaticResource CustomFooterThemedWindowDialogStyle}" TargetType="dx:ThemedWindow">
                                                            <Setter Property="SizeToContent" Value="WidthAndHeight" />
                                                            <Setter Property="ResizeMode" Value="CanMinimize" />
                                                        </Style>
                                                    </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                    <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                        <DataTemplate>
                                                            <dxrude:PdfSecurityOptionsUITypeEditor ReportModel="{Binding Content}" />
                                                        </DataTemplate>
                                                    </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                </dxrudi:UITypeEditorDialogService>
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:DialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.FormattingRuleSheet}}">
        <dxprg:PropertyDefinition IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" Content="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Document).ReportModel, RelativeSource={RelativeSource Self}}" DialogServiceTemplate="{DynamicResource {dxrudt:LWKey ReportDesignerDialog.FormattingRuleSheetDialogServiceTemplate}}" />
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.SeriesCollection}}">
        <dxprg:PropertyDefinition ContentTemplate="{StaticResource PropertyDefinitionContentTemplate}" IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.CellTemplate>
                <DataTemplate>
                    <dxe:ButtonEdit
                        x:Name="PART_Editor"
                        AllowDefaultButton="False"
                        IsEnabled="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel.XRLanguage, Converter={dxrudi:ReportLanguageToBooleanConverter}, RelativeSource={RelativeSource Mode=Self}}"
                        IsTextEditable="False">
                        <dxe:ButtonEdit.Buttons>
                            <dxe:ButtonInfo GlyphKind="Regular">
                                <dxmvvm:Interaction.Behaviors>
                                    <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" Content="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Document).ReportModel, RelativeSource={RelativeSource Self}}" DialogServiceTemplate="{DynamicResource {dxrudt:LWKey ReportDesignerDialog.ChartSeriesCollectionEditorDialogServiceTemplate}}" />
                                </dxmvvm:Interaction.Behaviors>
                            </dxe:ButtonInfo>
                        </dxe:ButtonEdit.Buttons>
                    </dxe:ButtonEdit>

                </DataTemplate>
            </dxprg:PropertyDefinition.CellTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.CalculatedFieldCollection}}">
        <dxprg:PropertyDefinition ContentTemplate="{StaticResource PropertyDefinitionContentTemplate}" IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" Content="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Document).ReportModel, RelativeSource={RelativeSource Self}}">
                                    <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                    <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                                                            <Setter Property="Width" Value="600" />
                                                            <Setter Property="Height" Value="350" />

                                                            <Setter Property="MinWidth" Value="420" />
                                                            <Setter Property="MinHeight" Value="240" />
                                                            <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=CalculatedFields_Editor_Title}" />
                                                        </Style>
                                                    </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                    <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                        <DataTemplate>
                                                            <dxrude:CalculatedFieldCollectionUITypeEditor EditValue="{Binding Value}" ReportModel="{Binding Content}" />
                                                        </DataTemplate>
                                                    </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                </dxrudi:UITypeEditorDialogService>
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:DialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.XRControlParameterCollection}}">
        <dxprg:PropertyDefinition ContentTemplate="{StaticResource PropertyDefinitionContentTemplate}" IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" Content="{Binding Path=AssociatedObject.(xrdiag:XtraReportDiagramItem.ReportModel), RelativeSource={RelativeSource Self}}">
                                    <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                    <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                                                            <Setter Property="Width" Value="600" />
                                                            <Setter Property="Height" Value="350" />

                                                            <Setter Property="MinWidth" Value="420" />
                                                            <Setter Property="MinHeight" Value="240" />
                                                            <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=ParametersEditor_Title}" />
                                                        </Style>
                                                    </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                    <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                        <DataTemplate>
                                                            <dxrude:XRControlParameterCollectionUITypeEditor xrdiag:XtraReportDiagramItem.ReportModel="{Binding ReportModel, RelativeSource={RelativeSource Self}}" EditValue="{Binding Value}" ReportModel="{Binding Content}" />
                                                        </DataTemplate>
                                                    </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                </dxrudi:UITypeEditorDialogService>
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:DialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.ParameterCollection}}">
        <dxprg:PropertyDefinition ContentTemplate="{StaticResource PropertyDefinitionContentTemplate}" IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" Content="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Document).ReportModel, RelativeSource={RelativeSource Self}}" DialogServiceTemplate="{DynamicResource {dxrudt:LWKey ReportDesignerDialog.EditParametersDialogServiceTemplate}}" />
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.ParameterBindingCollection}}">
        <dxprg:PropertyDefinition ContentTemplate="{StaticResource PropertyDefinitionContentTemplate}" IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" Content="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Document).ReportModel, RelativeSource={RelativeSource Self}}">
                                    <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                    <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                                                            <Setter Property="Width" Value="600" />
                                                            <Setter Property="Height" Value="350" />
                                                            <Setter Property="MinWidth" Value="420" />
                                                            <Setter Property="MinHeight" Value="240" />
                                                        </Style>
                                                    </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                    <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                        <DataTemplate>
                                                            <dxrude:ParameterBindingCollectionUITypeEditor EditValue="{Binding Value}" ReportModel="{Binding Content}" />
                                                        </DataTemplate>
                                                    </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                </dxrudi:UITypeEditorDialogService>
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:DialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.XRPivotGridCustomTotalCollection}}">
        <dxprg:PropertyDefinition ContentTemplate="{StaticResource PropertyDefinitionContentTemplate}" IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}">
                                    <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                    <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                                                            <Setter Property="Width" Value="600" />
                                                            <Setter Property="Height" Value="350" />
                                                            <Setter Property="MinWidth" Value="420" />
                                                            <Setter Property="MinHeight" Value="240" />
                                                        </Style>
                                                    </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                    <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                        <DataTemplate>
                                                            <dxrude:XRPivotGridCustomTotalCollectionEditor EditValue="{Binding Value}" />
                                                        </DataTemplate>
                                                    </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                </dxrudi:UITypeEditorDialogService>
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:DialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.XRPivotGridFieldCollection}}">
        <dxprg:PropertyDefinition ContentTemplate="{StaticResource PropertyDefinitionContentTemplate}" IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" Content="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Document).ReportModel, RelativeSource={RelativeSource Self}}">
                                    <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                    <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                                                            <Setter Property="Width" Value="600" />
                                                            <Setter Property="Height" Value="350" />
                                                            <Setter Property="MinWidth" Value="420" />
                                                            <Setter Property="MinHeight" Value="240" />
                                                            <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=PivotGrid_FieldsEditor_Title}" />
                                                        </Style>
                                                    </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                    <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                        <DataTemplate>
                                                            <dxrude:XRPivotGridFieldCollectionUITypeEditor EditValue="{Binding Value}" ReportModel="{Binding Content}" />
                                                        </DataTemplate>
                                                    </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                </dxrudi:UITypeEditorDialogService>
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:DialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.ChartTitleCollection}}">
        <dxprg:PropertyDefinition ContentTemplate="{StaticResource PropertyDefinitionContentTemplate}" IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.CellTemplate>
                <DataTemplate>
                    <dxe:ButtonEdit
                        x:Name="PART_Editor"
                        AllowDefaultButton="False"
                        IsEnabled="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel.XRLanguage, Converter={dxrudi:ReportLanguageToBooleanConverter}, RelativeSource={RelativeSource Mode=Self}}"
                        IsTextEditable="False">
                        <dxe:ButtonEdit.Buttons>
                            <dxe:ButtonInfo GlyphKind="Regular">
                                <dxmvvm:Interaction.Behaviors>
                                    <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}">
                                        <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                            <DataTemplate>
                                                <ContentControl>
                                                    <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                        <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                            <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                                                                <Setter Property="Width" Value="600" />
                                                                <Setter Property="Height" Value="350" />
                                                                <Setter Property="MinWidth" Value="420" />
                                                                <Setter Property="MinHeight" Value="240" />
                                                                <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=Chart_TitlesEditor_Title}" />
                                                            </Style>
                                                        </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                            <DataTemplate>
                                                                <dxrude:ChartTitleCollectionUITypeEditor EditValue="{Binding Value}" />
                                                            </DataTemplate>
                                                        </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                    </dxrudi:UITypeEditorDialogService>
                                                </ContentControl>
                                            </DataTemplate>
                                        </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                    </dxe:DialogServiceEditorBehavior>
                                </dxmvvm:Interaction.Behaviors>
                            </dxe:ButtonInfo>
                        </dxe:ButtonEdit.Buttons>
                    </dxe:ButtonEdit>
                </DataTemplate>
            </dxprg:PropertyDefinition.CellTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.XYDiagramPaneCollection}}">
        <dxprg:PropertyDefinition ContentTemplate="{StaticResource PropertyDefinitionContentTemplate}" IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}">
                                    <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                    <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                                                            <Setter Property="Width" Value="600" />
                                                            <Setter Property="Height" Value="350" />
                                                            <Setter Property="MinWidth" Value="420" />
                                                            <Setter Property="MinHeight" Value="240" />
                                                            <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=Chart_DiagramPanesEditor_Title}" />
                                                        </Style>
                                                    </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                    <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                        <DataTemplate>
                                                            <dxrude:XYDiagramPaneCollectionUITypeEditor EditValue="{Binding Value}" />
                                                        </DataTemplate>
                                                    </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                </dxrudi:UITypeEditorDialogService>
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:DialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.SecondaryAxisXCollection}}">
        <dxprg:PropertyDefinition ContentTemplate="{StaticResource PropertyDefinitionContentTemplate}" IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}">
                                    <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                    <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                                                            <Setter Property="Width" Value="600" />
                                                            <Setter Property="Height" Value="350" />
                                                            <Setter Property="MinWidth" Value="420" />
                                                            <Setter Property="MinHeight" Value="240" />
                                                            <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=Chart_SecondaryAxesXEditor_Title}" />
                                                        </Style>
                                                    </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                    <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                        <DataTemplate>
                                                            <dxrude:SecondaryAxisXCollectionUITypeEditor EditValue="{Binding Value}" />
                                                        </DataTemplate>
                                                    </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                </dxrudi:UITypeEditorDialogService>
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:DialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.SecondaryAxisYCollection}}">
        <dxprg:PropertyDefinition ContentTemplate="{StaticResource PropertyDefinitionContentTemplate}" IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}">
                                    <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                    <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                                                            <Setter Property="Width" Value="600" />
                                                            <Setter Property="Height" Value="350" />
                                                            <Setter Property="MinWidth" Value="420" />
                                                            <Setter Property="MinHeight" Value="240" />
                                                            <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=Chart_SecondaryAxesYEditor_Title}" />
                                                        </Style>
                                                    </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                    <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                        <DataTemplate>
                                                            <dxrude:SecondaryAxisYCollectionUITypeEditor EditValue="{Binding Value}" />
                                                        </DataTemplate>
                                                    </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                </dxrudi:UITypeEditorDialogService>
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:DialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.SwiftPlotDiagramSecondaryAxisXCollection}}">
        <dxprg:PropertyDefinition ContentTemplate="{StaticResource PropertyDefinitionContentTemplate}" IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}">
                                    <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                    <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                                                            <Setter Property="Width" Value="600" />
                                                            <Setter Property="Height" Value="350" />
                                                            <Setter Property="MinWidth" Value="420" />
                                                            <Setter Property="MinHeight" Value="240" />
                                                            <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=Chart_SecondaryAxesXEditor_Title}" />
                                                        </Style>
                                                    </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                    <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                        <DataTemplate>
                                                            <dxrude:SwiftPlotDiagramSecondaryAxisXCollectionUITypeEditor EditValue="{Binding Value}" />
                                                        </DataTemplate>
                                                    </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                </dxrudi:UITypeEditorDialogService>
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:DialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.SwiftPlotDiagramSecondaryAxisYCollection}}">
        <dxprg:PropertyDefinition ContentTemplate="{StaticResource PropertyDefinitionContentTemplate}" IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}">
                                    <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                    <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                                                            <Setter Property="Width" Value="600" />
                                                            <Setter Property="Height" Value="350" />
                                                            <Setter Property="MinWidth" Value="420" />
                                                            <Setter Property="MinHeight" Value="240" />
                                                            <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=Chart_SecondaryAxesYEditor_Title}" />
                                                        </Style>
                                                    </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                    <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                        <DataTemplate>
                                                            <dxrude:SwiftPlotDiagramSecondaryAxisYCollectionUITypeEditor EditValue="{Binding Value}" />
                                                        </DataTemplate>
                                                    </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                </dxrudi:UITypeEditorDialogService>
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:DialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.RecipientCollection}}">
        <dxprg:PropertyDefinition ContentTemplate="{StaticResource PropertyDefinitionContentTemplate}" IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}">
                                    <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                    <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                                                            <Setter Property="Width" Value="600" />
                                                            <Setter Property="Height" Value="350" />
                                                            <Setter Property="MinWidth" Value="420" />
                                                            <Setter Property="MinHeight" Value="240" />
                                                            <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=Chart_RecipientsEditor_Title}" />
                                                        </Style>
                                                    </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                    <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                        <DataTemplate>
                                                            <dxrude:RecipientCollectionUITypeEditor EditValue="{Binding Value}" />
                                                        </DataTemplate>
                                                    </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                </dxrudi:UITypeEditorDialogService>
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:DialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.XRTableOfContentsLevelCollection}}">
        <dxprg:PropertyDefinition ContentTemplate="{StaticResource PropertyDefinitionContentTemplate}" IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.CellTemplate>
                <DataTemplate>
                    <dxe:ButtonEdit
                        x:Name="PART_Editor"
                        AllowDefaultButton="False"
                        IsEnabled="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel.XRLanguage, Converter={dxrudi:ReportLanguageToBooleanConverter}, RelativeSource={RelativeSource Mode=Self}}"
                        IsTextEditable="False">
                        <dxe:ButtonEdit.Buttons>
                            <dxe:ButtonInfo GlyphKind="Regular">
                                <dxmvvm:Interaction.Behaviors>
                                    <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}">
                                        <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                            <DataTemplate>
                                                <ContentControl>
                                                    <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                        <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                            <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                                                                <Setter Property="Width" Value="600" />
                                                                <Setter Property="Height" Value="350" />
                                                                <Setter Property="MinWidth" Value="420" />
                                                                <Setter Property="MinHeight" Value="240" />
                                                                <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=ToC_LevelsEditor_Title}" />
                                                            </Style>
                                                        </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                            <DataTemplate>
                                                                <dxrude:XRTableOfContentsLevelCollectionEditor EditValue="{Binding Value}" />
                                                            </DataTemplate>
                                                        </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                    </dxrudi:UITypeEditorDialogService>
                                                </ContentControl>
                                            </DataTemplate>
                                        </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                    </dxe:DialogServiceEditorBehavior>
                                </dxmvvm:Interaction.Behaviors>
                            </dxe:ButtonInfo>
                        </dxe:ButtonEdit.Buttons>
                    </dxe:ButtonEdit>
                </DataTemplate>
            </dxprg:PropertyDefinition.CellTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.GroupFieldCollection}}">
        <dxprg:PropertyDefinition ContentTemplate="{StaticResource PropertyDefinitionContentTemplate}" IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" Content="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Document).ReportModel, RelativeSource={RelativeSource Self}}" DialogServiceTemplate="{DynamicResource {dxrudt:LWKey ReportDesignerDialog.GroupFieldCollectionDialogTemplate}}" />
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.SubBandCollection}}">
        <dxprg:PropertyDefinition ContentTemplate="{StaticResource PropertyDefinitionContentTemplate}" IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" Content="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Document).ReportModel, RelativeSource={RelativeSource Self}}">
                                    <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                    <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                                                            <Setter Property="Width" Value="600" />
                                                            <Setter Property="Height" Value="350" />
                                                            <Setter Property="MinWidth" Value="420" />
                                                            <Setter Property="MinHeight" Value="240" />
                                                            <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=SubBandCollectionEditor_Title}" />
                                                        </Style>
                                                    </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                    <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                        <DataTemplate>
                                                            <dxrude:SubBandCollectionUITypeEditor EditValue="{Binding Value}" ReportModel="{Binding Content}" />
                                                        </DataTemplate>
                                                    </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                </dxrudi:UITypeEditorDialogService>
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:DialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.MongoDBQueryCollection}}">
        <dxprg:PropertyDefinition ContentTemplate="{StaticResource PropertyDefinitionContentTemplate}" IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo Command="{Binding Path=(xrdiag:XtraReportDiagramItem.ReportModel).Diagram.XREditorCommands.RunEditMongoDBQueriesEditorCommand, RelativeSource={RelativeSource Mode=Self}}" GlyphKind="Regular" />
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.SqlQueryCollection}}">
        <dxprg:PropertyDefinition ContentTemplate="{StaticResource PropertyDefinitionContentTemplate}" IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" DialogServiceTemplate="{DynamicResource {dxrudt:LWKey ReportDesignerDialog.ManageQueriesDialogTemplate}}">
                                    <dxe:DialogServiceEditorBehavior.Content>
                                        <MultiBinding Converter="{dxrudei:CollectionPropertyEditorViewModelConverter}">
                                            <Binding Path="AssociatedObject.(xrdiag:XtraReportDiagramItem.ReportModel)" RelativeSource="{RelativeSource Self}" />
                                            <Binding Path="AssociatedObject.(dxrudi:PropertyGridHelper.SelectedObject).EditableQueries" RelativeSource="{RelativeSource Self}" />
                                        </MultiBinding>
                                    </dxe:DialogServiceEditorBehavior.Content>
                                </dxe:DialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.FederatedQueryCollection}}">
        <dxprg:PropertyDefinition ContentTemplate="{StaticResource PropertyDefinitionContentTemplate}" IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" DialogServiceTemplate="{DynamicResource {dxrudt:LWKey ReportDesignerDialog.ManageFederatedQueriesDialogTemplate}}">
                                    <dxe:DialogServiceEditorBehavior.Content>
                                        <MultiBinding Converter="{dxrudei:CollectionPropertyEditorViewModelConverter}">
                                            <Binding Path="AssociatedObject.(xrdiag:XtraReportDiagramItem.ReportModel)" RelativeSource="{RelativeSource Self}" />
                                            <Binding Path="AssociatedObject.(dxrudi:PropertyGridHelper.SelectedObject).EditableQueries" RelativeSource="{RelativeSource Self}" />
                                        </MultiBinding>
                                    </dxe:DialogServiceEditorBehavior.Content>
                                </dxe:DialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.XRWatermark}}">
        <dxprg:PropertyDefinition IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo Command="{Binding Path=(xrdiag:XtraReportDiagramItem.ReportModel).Diagram.XREditorCommands.RunWatermarkEditorCommand, RelativeSource={RelativeSource Self}}" GlyphKind="Regular" />
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.ControlActionType}}">
        <dxprg:PropertyDefinition IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ComboBoxEditSettings IsTextEditable="False" ItemsSource="{dxrudi:ActionListSource}" ValueMember="Action" DisplayMember="DisplayName"  SelectItemWithNullValue="True" NullText="{dxrudl:ReportDesignerStringId StringId=Editors_NullValue_Text}" />
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.Watermarks}}">
        <dxprg:PropertyDefinition IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo Command="{Binding Path=(xrdiag:XtraReportDiagramItem.ReportModel).Diagram.XREditorCommands.RunWatermarkEditorCommand, RelativeSource={RelativeSource Self}}" GlyphKind="Regular" />
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.BindingSettings}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.ContentTemplate>
                <DataTemplate>
                    <dxprg:CellEditorPresenter Path="Data" />
                </DataTemplate>
            </dxprg:PropertyDefinition.ContentTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.OLAPConnectionString}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}">
                                    <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                    <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <Style BasedOn="{StaticResource CustomFooterThemedWindowDialogStyle}" TargetType="dx:ThemedWindow">
                                                            <Setter Property="Width" Value="400" />
                                                            <Setter Property="Height" Value="400" />
                                                            <Setter Property="ResizeMode" Value="NoResize" />
                                                            <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=PivotGrid_OLAPConStringEditor_Title}" />
                                                        </Style>
                                                    </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                    <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                        <DataTemplate>
                                                            <dxrude:OLAPConnectionStringUITypeEditor EditValue="{Binding Value}" />
                                                        </DataTemplate>
                                                    </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                </dxrudi:UITypeEditorDialogService>
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:DialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.Shape}}">
        <dxprg:PropertyDefinition IsReadOnly="False" ShowChildren="True">
            <dxprg:PropertyDefinition.ContentTemplate>
                <DataTemplate>
                    <dxprg:CellEditorPresenter Path="EditableShape" PathMode="Absolute" />
                </DataTemplate>
            </dxprg:PropertyDefinition.ContentTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.EditableShape}}">
        <dxprg:PropertyDefinition IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ComboBoxEditSettings IsTextEditable="False" ItemsSource="{x:Static dxrudi:RotatedShapeViewModelHelper.Shapes}">
                    <dxe:ComboBoxEditSettings.ItemTemplate>
                        <DataTemplate>
                            <StackPanel DataContext="{Binding Converter={dxrudi:RotatedShapeViewModelConverter}}" Orientation="Horizontal">
                                <dx:DXImage Margin="0,0,5,0" Source="{Binding Icon}" />
                                <TextBlock VerticalAlignment="Center" Text="{Binding DisplayName}" />
                            </StackPanel>
                        </DataTemplate>
                    </dxe:ComboBoxEditSettings.ItemTemplate>
                </dxe:ComboBoxEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.PdfSource}}">
        <dxprg:PropertyDefinition AllowExpanding="Never" IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:CustomDialogServiceEditorBehavior Content="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer), RelativeSource={RelativeSource Self}}">
                                    <dxe:CustomDialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrude:XRPdfContentSourceEditorService />
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:CustomDialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:CustomDialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.PdfSourceUrl}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:CustomDialogServiceEditorBehavior Content="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer), RelativeSource={RelativeSource Self}}">
                                    <dxe:CustomDialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrude:XRPdfContentSourceUrlEditorService />
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:CustomDialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:CustomDialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.ReportSourceUrl}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:CustomDialogServiceEditorBehavior Content="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer), RelativeSource={RelativeSource Self}}">
                                    <dxe:CustomDialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrude:ReportSourceUrlDialogService />
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:CustomDialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:CustomDialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.XmlDataPath}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:CustomDialogServiceEditorBehavior Content="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer), RelativeSource={RelativeSource Self}}">
                                    <dxe:CustomDialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrude:XmlDataPathEditorService />
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:CustomDialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:CustomDialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.Relations}}">
        <dxprg:PropertyDefinition ContentTemplate="{StaticResource PropertyDefinitionContentTemplate}" IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.RunManageRelationsEditorCommand, RelativeSource={RelativeSource Self}}" GlyphKind="Regular" />
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.ObjectDataSourceConstructor}}">
        <dxprg:PropertyDefinition IsReadOnly="False" UseTypeConverterToStringConversion="True">

            <dxprg:PropertyDefinition.CellTemplate>
                <DataTemplate>
                    <dxe:ButtonEdit x:Name="PART_Editor" AllowDefaultButton="False" IsTextEditable="False">
                        <dxe:ButtonEdit.Buttons>
                            <dxe:ButtonInfo Command="{Binding Path=(xrdiag:XtraReportDiagramItem.ReportModel).Diagram.XREditorCommands.RunObjectConstructorEditorCommand, RelativeSource={RelativeSource Self}}" GlyphKind="Regular" />
                        </dxe:ButtonEdit.Buttons>
                    </dxe:ButtonEdit>
                </DataTemplate>
            </dxprg:PropertyDefinition.CellTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.ObjectDataSourceDataMember}}">
        <dxprg:PropertyDefinition IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo Command="{Binding Path=(xrdiag:XtraReportDiagramItem.ReportModel).Diagram.XREditorCommands.RunObjectDataMemberEditorCommand, RelativeSource={RelativeSource Self}}" GlyphKind="Regular" />
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.ObjectDataSourceDataSource}}">
        <dxprg:PropertyDefinition IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.CellTemplate>
                <DataTemplate>
                    <dxe:ButtonEdit AllowDefaultButton="False" EditValue="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ValidateOnTextInput="False">
                        <dxe:ButtonEdit.Buttons>
                            <dxe:ButtonInfo Command="{Binding Path=(xrdiag:XtraReportDiagramItem.ReportModel).Diagram.XREditorCommands.RunObjectDataSourceEditorCommand, RelativeSource={RelativeSource Self}}" GlyphKind="Regular" />
                        </dxe:ButtonEdit.Buttons>
                    </dxe:ButtonEdit>
                </DataTemplate>
            </dxprg:PropertyDefinition.CellTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.ObjectDataSourceParameters}}">
        <dxprg:PropertyDefinition IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo Command="{Binding Path=(xrdiag:XtraReportDiagramItem.ReportModel).Diagram.XREditorCommands.RunObjectParametersEditorCommand, RelativeSource={RelativeSource Self}}" GlyphKind="Regular" />
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.JsonSource}}">
        <dxprg:PropertyDefinition IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo Command="{Binding Path=(xrdiag:XtraReportDiagramItem.ReportModel).Diagram.XREditorCommands.RunJsonSourceEditorCommand, RelativeSource={RelativeSource Self}}" GlyphKind="Regular" />

                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.CalculatedFieldExpression}}">
        <dxprg:PropertyDefinition IsReadOnly="False" PostOnEditValueChanged="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:MemoEditSettings
                    AllowDefaultButton="True"
                    PopupMaxHeight="500"
                    ShowIcon="False"
                    ValidateOnTextInput="False">
                    <dxe:MemoEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}">
                                    <dxe:DialogServiceEditorBehavior.Content>
                                        <MultiBinding Converter="{dxrudei:CalculatedFieldExpressionPropertyDataConverter}">
                                            <Binding Path="AssociatedObject.(xrdiag:XtraReportDiagramItem.ReportModel)" RelativeSource="{RelativeSource Self}" />
                                            <Binding Path="AssociatedObject.(dxrudi:PropertyGridHelper.SelectedObject)" RelativeSource="{RelativeSource Self}" />
                                        </MultiBinding>
                                    </dxe:DialogServiceEditorBehavior.Content>
                                    <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrudi:UITypeEditorDialogService>
                                                    <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <Style BasedOn="{StaticResource ExpressionEditorDialogStyle}" TargetType="dx:ThemedWindow" />
                                                    </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                    <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                        <DataTemplate>
                                                            <dxrudei:ReportExpressionEditorControl
                                                                Context="{Binding Content.ExpressionEditorContext}"
                                                                ContextInstance="{Binding Content.SelectedComponent, Mode=OneTime}"
                                                                EditValue="{Binding Value}"
                                                                ReportModel="{Binding Content.ReportModel}" />
                                                        </DataTemplate>
                                                    </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                </dxrudi:UITypeEditorDialogService>
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:DialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:MemoEditSettings.Buttons>
                </dxe:MemoEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.FormattingRuleCondition}}">
        <dxprg:PropertyDefinition IsReadOnly="False" PostOnEditValueChanged="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" ValidateOnTextInput="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}">
                                    <dxe:DialogServiceEditorBehavior.Content>
                                        <MultiBinding Converter="{dxrudei:FormattingRuleExpressionPropertyDataConverter}">
                                            <Binding Path="AssociatedObject.(xrdiag:XtraReportDiagramItem.ReportModel)" RelativeSource="{RelativeSource Self}" />
                                            <Binding Path="AssociatedObject.(dxrudi:PropertyGridHelper.SelectedObject)" RelativeSource="{RelativeSource Self}" />
                                        </MultiBinding>
                                    </dxe:DialogServiceEditorBehavior.Content>

                                    <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrudi:UITypeEditorDialogService>
                                                    <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <Style BasedOn="{StaticResource ExpressionEditorDialogStyle}" TargetType="dx:ThemedWindow" />
                                                    </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                    <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                        <DataTemplate>
                                                            <dxrudei:ReportExpressionEditorControl
                                                                Context="{Binding Content.ExpressionEditorContext}"
                                                                ContextInstance="{Binding Content.SelectedComponent, Mode=OneTime}"
                                                                EditValue="{Binding Value}"
                                                                ReportModel="{Binding Content.ReportModel}" />
                                                        </DataTemplate>
                                                    </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                </dxrudi:UITypeEditorDialogService>
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:DialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.ValueSourceSettings}}">
        <dxprg:PropertyDefinition ChildrenSortMode="Definitions" ExpandButtonVisibility="{Binding IsReadOnly, RelativeSource={RelativeSource Self}, Converter={dxmvvm:BooleanToVisibilityConverter Inverse=True, HiddenInsteadOfCollapsed=True}}">
            <dxprg:PropertyDefinition.ContentTemplate>
                <DataTemplate>
                    <dxprg:CellEditorPresenter Path="EditableValueSourceSettings" PathMode="Absolute" />
                </DataTemplate>
            </dxprg:PropertyDefinition.ContentTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.EditableValueSourceSettings}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.CellTemplate>
                <DataTemplate>
                    <dxe:ComboBoxEdit
                        Name="PART_Editor"
                        EditValue="{Binding Value, UpdateSourceTrigger=PropertyChanged}"
                        IsTextEditable="False"
                        ItemsSource="{Binding Path=(dxrudi:PropertyGridHelper.SelectedObject).Type, FallbackValue={x:Null}, Converter={dxrudi:ParameterValueSourceSettingsItemsSourceConverter}, RelativeSource={RelativeSource Self}}" />
                </DataTemplate>
            </dxprg:PropertyDefinition.CellTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.SeriesTemplateColorizer}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.ContentTemplate>
                <DataTemplate>
                    <dxprg:CellEditorPresenter Path="SeriesTemplate.EditableSeriesColorizer" PathMode="Absolute" />
                </DataTemplate>
            </dxprg:PropertyDefinition.ContentTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.EditableSeriesColorizer}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ComboBoxEditSettings IsTextEditable="False" ItemsSource="{dxrudi:AvailableSeriesTemplateColorizers}" />
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.LookUpValues}}">
        <dxprg:PropertyDefinition
            Header="Look-Up Values"
            IsReadOnly="False"
            Path="LookUpValues"
            UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" Content="{Binding Path=AssociatedObject.(dxrudi:PropertyGridHelper.SelectedObject), RelativeSource={RelativeSource Self}, Converter={dxrude:PropertyEditorSelectedComponentDataConverter}}">
                                    <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrudi:UITypeEditorDialogService>
                                                    <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <Style BasedOn="{StaticResource CustomFooterThemedWindowDialogStyle}" TargetType="dx:ThemedWindow">
                                                            <Setter Property="Height" Value="400" />
                                                            <Setter Property="Width" Value="350" />
                                                            <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=LookUpValuesEditor_Title}" />
                                                        </Style>
                                                    </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                    <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                        <DataTemplate>
                                                            <dxrude:LookUpValuesEditor EditValue="{Binding Value}" EditableParameterModel="{Binding Content.SelectedComponentModel}" ParameterType="{Binding Content.SelectedComponent.Type}" />
                                                        </DataTemplate>
                                                    </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                </dxrudi:UITypeEditorDialogService>
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:DialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.Symbology}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.ContentTemplate>
                <DataTemplate>
                    <dxprg:CellEditorPresenter Path="EditableSymbology" PathMode="Absolute" />
                </DataTemplate>
            </dxprg:PropertyDefinition.ContentTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.EditableSymbology}}">
        <dxprg:PropertyDefinition IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ComboBoxEditSettings IsTextEditable="False" ItemsSource="{dxrudi:BarCodeSymbologyItemsSource}" />
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.Description}}">
        <dxprg:PropertyDefinition IsReadOnly="False" Path="Description">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:MemoEditSettings ShowIcon="False" TextWrapping="Wrap" />
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.ParameterValue}}">
        <dxprg:PropertyDefinition IsReadOnly="False" PostOnEditValueChanged="True">
            <dxprg:PropertyDefinition.CellTemplate>
                <DataTemplate>
                    <ContentControl Content="{Binding Converter={dxrudi:SelectedParameterToTemplateConverter}, Mode=OneTime}" IsEnabled="{Binding IsReadOnly, Converter={dxmvvm:BooleanNegationConverter}}" />
                </DataTemplate>
            </dxprg:PropertyDefinition.CellTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.ParameterType}}">
        <dxprg:PropertyDefinition IsReadOnly="False" PostOnEditValueChanged="True">
            <dxprg:PropertyDefinition.CellTemplate>
                <DataTemplate>
                    <dxe:ComboBoxEdit
                        Name="PART_Editor"
                        DisplayTextConverter="{dxrudi:ParameterTypeDisplayNameConverter}"
                        EditValue="{Binding Value, UpdateSourceTrigger=PropertyChanged}"
                        IsTextEditable="False"
                        ItemsSource="{Binding Path=(dxrudi:PropertyGridHelper.SelectedObject).EditableValueSourceSettings, FallbackValue={x:Null}, RelativeSource={RelativeSource Self}, Converter={dxrudi:ParameterTypeItemsSourceConverter}}">
                        <dxe:ComboBoxEdit.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Converter={dxrudi:ParameterTypeDisplayNameConverter}}" />
                            </DataTemplate>
                        </dxe:ComboBoxEdit.ItemTemplate>
                        <dxmvvm:Interaction.Behaviors>
                            <dxrudi:ParameterTypeItemsSourceUpdater SelectedObject="{Binding Path=AssociatedObject.(dxrudi:PropertyGridHelper.SelectedObject), RelativeSource={RelativeSource Self}}" />
                        </dxmvvm:Interaction.Behaviors>
                    </dxe:ComboBoxEdit>
                </DataTemplate>
            </dxprg:PropertyDefinition.CellTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.RunningBand}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ComboBoxEditSettings IsTextEditable="False" ItemsSource="{Binding Path=(xrdiag:XtraReportDiagramItem.ReportModel).XRObjectBase, Converter={dxrudi:ControlsToRunningBandsConverter}, RelativeSource={RelativeSource Self}}" />
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.SortingSummary}}">
        <dxprg:PropertyDefinition IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" Content="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Document).ReportModel, RelativeSource={RelativeSource Self}}" DialogServiceTemplate="{StaticResource SortingSummaryEditorDialogTemplate}" />
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.CustomLegendItemCollection}}">
        <dxprg:PropertyDefinition ContentTemplate="{StaticResource PropertyDefinitionContentTemplate}" IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}">
                                    <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                    <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="{x:Type dx:ThemedWindow}">
                                                            <Setter Property="Width" Value="600" />
                                                            <Setter Property="Height" Value="450" />
                                                            <Setter Property="MinWidth" Value="300" />
                                                            <Setter Property="MinHeight" Value="225" />
                                                        </Style>
                                                    </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                    <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                        <DataTemplate>
                                                            <dxrude:CustomLegendItemCollectionUITypeEditor EditValue="{Binding Value}" />
                                                        </DataTemplate>
                                                    </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                </dxrudi:UITypeEditorDialogService>
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:DialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.IndicatorCollection}}">
        <dxprg:PropertyDefinition ContentTemplate="{StaticResource PropertyDefinitionContentTemplate}" IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" Content="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Document).ReportModel, RelativeSource={RelativeSource Self}}">
                                    <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                    <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                                                            <Setter Property="Width" Value="930" />
                                                            <Setter Property="Height" Value="550" />
                                                            <Setter Property="MinWidth" Value="420" />
                                                            <Setter Property="MinHeight" Value="240" />
                                                            <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=Chart_IndicatorCollectionEditor_Title}" />
                                                        </Style>
                                                    </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                    <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                        <DataTemplate>
                                                            <dxrude:IndicatorCollectionUITypeEditor EditValue="{Binding Value}" ReportModel="{Binding Content}" />
                                                        </DataTemplate>
                                                    </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                </dxrudi:UITypeEditorDialogService>
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:DialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.Pane}}">
        <dxprg:PropertyDefinition ContentTemplate="{StaticResource PropertyDefinitionContentTemplate}" IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ComboBoxEditSettings IsTextEditable="False" ItemsSource="{Binding Path=(dxrudi:PropertyGridHelper.SelectedObject), RelativeSource={RelativeSource Self}, Converter={dxrudi:AvailableChartPanesConverter}}" />
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.AxisX}}">
        <dxprg:PropertyDefinition ContentTemplate="{StaticResource PropertyDefinitionContentTemplate}" IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ComboBoxEditSettings IsTextEditable="False" ItemsSource="{Binding Path=(dxrudi:PropertyGridHelper.SelectedObject), RelativeSource={RelativeSource Self}, Converter={dxrudi:AvailableChartAxisXConverter}}" />
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.AxisY}}">
        <dxprg:PropertyDefinition ContentTemplate="{StaticResource PropertyDefinitionContentTemplate}" IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ComboBoxEditSettings IsTextEditable="False" ItemsSource="{Binding Path=(dxrudi:PropertyGridHelper.SelectedObject), RelativeSource={RelativeSource Self}, Converter={dxrudi:AvailableChartAxisYConverter}}" />
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.VisibilityInPanes}}">
        <dxprg:PropertyDefinition ContentTemplate="{StaticResource PropertyDefinitionContentTemplate}" IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OK}" Content="{Binding Path=AssociatedObject.(xrdiag:XtraReportDiagramItem.ReportModel), RelativeSource={RelativeSource Self}}">
                                    <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                    <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <Style BasedOn="{StaticResource CustomFooterThemedWindowDialogStyle}" TargetType="{x:Type dx:ThemedWindow}">
                                                            <Setter Property="Width" Value="300" />
                                                            <Setter Property="Height" Value="300" />
                                                            <Setter Property="MinWidth" Value="180" />
                                                            <Setter Property="MinHeight" Value="240" />
                                                            <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=Chart_AxisVisibilityEditor_Title}" />
                                                        </Style>
                                                    </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                    <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                        <DataTemplate>
                                                            <dxrude:VisibilityInPanesUITypeEditor ReportModel="{Binding Content}" />
                                                        </DataTemplate>
                                                    </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                </dxrudi:UITypeEditorDialogService>
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:DialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.AnchorPoint}}">
        <dxprg:PropertyDefinition ContentTemplate="{StaticResource PropertyDefinitionContentTemplate}" IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" Content="{Binding Path=AssociatedObject.(dxrudi:PropertyGridHelper.SelectedObject), RelativeSource={RelativeSource Self}}">
                                    <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                    <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <Style BasedOn="{StaticResource CustomFooterThemedWindowDialogStyle}" TargetType="{x:Type dx:ThemedWindow}">
                                                            <Setter Property="SizeToContent" Value="WidthAndHeight" />
                                                            <Setter Property="ResizeMode" Value="NoResize" />
                                                            <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=Chart_AnnotationAnchorPointEditor_Title}" />
                                                        </Style>
                                                    </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                    <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                        <DataTemplate>
                                                            <dxrude:AnnotationAnchorPointUITypeEditor Annotation="{Binding Content, Converter={dxrudei:SelectionModelToXRObjectConverter}}" EditValue="{Binding Content.EditableAnchorPoint}" />
                                                        </DataTemplate>
                                                    </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                </dxrudi:UITypeEditorDialogService>
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:DialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.ShapePosition}}">
        <dxprg:PropertyDefinition ContentTemplate="{StaticResource PropertyDefinitionContentTemplate}" IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" Content="{Binding Path=AssociatedObject.(dxrudi:PropertyGridHelper.SelectedObject), RelativeSource={RelativeSource Self}}">
                                    <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                    <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <Style BasedOn="{StaticResource CustomFooterThemedWindowDialogStyle}" TargetType="{x:Type dx:ThemedWindow}">
                                                            <Setter Property="SizeToContent" Value="WidthAndHeight" />
                                                            <Setter Property="ResizeMode" Value="NoResize" />
                                                            <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=Chart_AnnotationShapePositionEditor_Title}" />
                                                        </Style>
                                                    </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                    <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                        <DataTemplate>
                                                            <dxrude:AnnotationShapePositionUITypeEditor Annotation="{Binding Content, Converter={dxrudei:SelectionModelToXRObjectConverter}}" EditValue="{Binding Content.EditableShapePosition}" />
                                                        </DataTemplate>
                                                    </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                </dxrudi:UITypeEditorDialogService>
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:DialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.TextEditOptionsEditorName}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:PopupBaseEditSettings
                    AllowDefaultButton="False"
                    IsTextEditable="False"
                    NullValueButtonPlacement="Popup"
                    PopupHeight="210"
                    PopupWidth="300"
                    ShowSizeGrip="True">
                    <dxe:PopupBaseEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="DropDown" IsDefaultButton="True">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:PopupEditorBehavior>
                                    <dxe:PopupEditorBehavior.ContentTemplate>
                                        <DataTemplate>
                                            <dxrude:InplaceEditorPicker EditValue="{Binding Value}" />
                                        </DataTemplate>
                                    </dxe:PopupEditorBehavior.ContentTemplate>
                                </dxe:PopupEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:PopupBaseEditSettings.Buttons>
                    <dxe:PopupBaseEditSettings.PopupBottomAreaTemplate>
                        <ControlTemplate TargetType="{x:Type ContentControl}">
                            <Grid x:Name="PART_Root" Margin="0,6,0,0">
                                <dx:UniformStackPanel
                                    Width="Auto"
                                    HorizontalAlignment="Center"
                                    ChildSpacing="0"
                                    Orientation="Horizontal">
                                    <Button
                                        MinWidth="80"
                                        Margin="3,6,3,6"
                                        HorizontalAlignment="Left"
                                        Command="{Binding Path=(dxe:BaseEdit.OwnerEdit).SetNullValueCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                        Style="{DynamicResource {dxt:LWKey PopupBaseEdit.NullValueButtonStyle}}" />
                                </dx:UniformStackPanel>
                                <dxe:PopupSizeGrip
                                    x:Name="PART_SizeGrip"
                                    Margin="2,3,2,2"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).ResizeGripViewModel.VerticalAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                                    dx:FocusHelper2.Focusable="False"
                                    Style="{DynamicResource {dxt:LWKey PopupBaseEdit.ResizeGripStyle}}"
                                    Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).ResizeGripViewModel.Visibility, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Grid>
                        </ControlTemplate>
                    </dxe:PopupBaseEditSettings.PopupBottomAreaTemplate>
                </dxe:PopupBaseEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.SparklineView}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.ContentTemplate>
                <DataTemplate>
                    <dxprg:CellEditorPresenter Path="EditableSparklineView" PathMode="Absolute" />
                </DataTemplate>
            </dxprg:PropertyDefinition.ContentTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.EditableSparklineView}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ComboBoxEditSettings IsTextEditable="False" ItemsSource="{dxrudi:SparklineViewTypes}" />
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.Colorizer}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.ContentTemplate>
                <DataTemplate>
                    <dxprg:CellEditorPresenter Path="{Binding FullPath, Converter={dxrudi:EditablePropertyNameConverter}}" PathMode="Absolute" />
                </DataTemplate>
            </dxprg:PropertyDefinition.ContentTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.EditableColorizer}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ComboBoxEditSettings IsTextEditable="False" ItemsSource="{dxrudi:AvailableColorizers}" />
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.SegmentColorizer}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.ContentTemplate>
                <DataTemplate>
                    <dxprg:CellEditorPresenter Path="{Binding FullPath, Converter={dxrudi:EditablePropertyNameConverter}}" PathMode="Absolute" />
                </DataTemplate>
            </dxprg:PropertyDefinition.ContentTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.EditableSegmentColorizer}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ComboBoxEditSettings IsTextEditable="False" ItemsSource="{dxrudi:AvailableSegmentColorizers}" />
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.SummaryFunction}}">
        <dxprg:PropertyDefinition IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" Content="{Binding Path=AssociatedObject.(xrdiag:XtraReportDiagramItem.ReportModel), RelativeSource={RelativeSource Self}}">
                                    <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                    <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <Style BasedOn="{StaticResource CustomFooterThemedWindowDialogStyle}" TargetType="dx:ThemedWindow">
                                                            <Setter Property="Width" Value="625" />
                                                            <Setter Property="Height" Value="400" />
                                                            <Setter Property="MinWidth" Value="200" />
                                                            <Setter Property="MinHeight" Value="210" />
                                                            <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=Chart_SummaryFunctionEditor_Title}" />
                                                        </Style>
                                                    </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                    <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                        <DataTemplate>
                                                            <dxrude:SummaryFunctionUITypeEditor EditValue="{Binding Value, Mode=TwoWay}" ReportModel="{Binding Content, Mode=OneTime}" Series="{Binding Content.SelectedModel, Converter={dxrudei:SelectionModelToSeriesBaseConverter}, Mode=OneTime}" />
                                                        </DataTemplate>
                                                    </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                </dxrudi:UITypeEditorDialogService>
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:DialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.ExcelDataSourceFileName}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:CustomDialogServiceEditorBehavior Content="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer), RelativeSource={RelativeSource Self}}">
                                    <dxe:CustomDialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrude:ExcelFilePathEditorService />
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:CustomDialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:CustomDialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.SelectQueryGroupFilterString}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.CellTemplate>
                <DataTemplate>
                    <dxe:ButtonEdit x:Name="PART_Editor" AllowDefaultButton="False" IsTextEditable="True">
                        <dxe:ButtonEdit.Buttons>
                            <dxe:ButtonInfo GlyphKind="Regular">
                                <dxmvvm:Interaction.Behaviors>
                                    <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}">
                                        <dxe:DialogServiceEditorBehavior.Content>
                                            <MultiBinding Converter="{dxrudi:SqlQueryEditorDataConverter}">
                                                <Binding Path="AssociatedObject.(xrdiag:XtraReportDiagramItem.ReportModel)" RelativeSource="{RelativeSource Self}" />
                                                <Binding Path="AssociatedObject.(dxprg:PropertyGridHelper.RowData).Parent" RelativeSource="{RelativeSource Self}" />
                                            </MultiBinding>
                                        </dxe:DialogServiceEditorBehavior.Content>
                                        <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                            <DataTemplate>
                                                <ContentControl>
                                                    <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                        <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                            <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="{x:Type dx:ThemedWindow}">
                                                                <Setter Property="Width" Value="650" />
                                                                <Setter Property="Height" Value="400" />
                                                                <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=FilterStringEditor_Title}" />
                                                            </Style>
                                                        </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                            <DataTemplate>
                                                                <dxrude:SelectQueryGroupFilterStringEditor EditValue="{Binding Value}" ReportModel="{Binding Content.ReportModel}" SelectQuery="{Binding Content.SelectedComponent}" />
                                                            </DataTemplate>
                                                        </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                    </dxrudi:UITypeEditorDialogService>
                                                </ContentControl>
                                            </DataTemplate>
                                        </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                    </dxe:DialogServiceEditorBehavior>
                                </dxmvvm:Interaction.Behaviors>
                            </dxe:ButtonInfo>
                        </dxe:ButtonEdit.Buttons>
                    </dxe:ButtonEdit>
                </DataTemplate>
            </dxprg:PropertyDefinition.CellTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>





    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.Summary}}">
        <dxprg:PropertyDefinition IsReadOnly="False" PostOnEditValueChanged="True" UseTypeConverterToStringConversion="True">

            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}">
                                    <dxe:DialogServiceEditorBehavior.Content>
                                        <MultiBinding Converter="{dxrude:PropertyEditorDataConverter}">
                                            <Binding Path="AssociatedObject.(xrdiag:XtraReportDiagramItem.ReportModel)" RelativeSource="{RelativeSource Self}" />
                                            <Binding Path="AssociatedObject.(dxrudi:PropertyGridHelper.SelectedObject)" RelativeSource="{RelativeSource Self}" />
                                        </MultiBinding>
                                    </dxe:DialogServiceEditorBehavior.Content>
                                    <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                        <Binding Path="AssociatedObject.(xrdiag:XtraReportDiagramItem.ReportModel).DataBindingMode" RelativeSource="{RelativeSource Self}">
                                            <Binding.Converter>
                                                <dxmvvm:ObjectToObjectConverter DefaultTarget="{StaticResource summaryExpressionModeDialogTemplate}">
                                                    <dxmvvm:MapItem Source="{x:Static reportsui:DataBindingMode.Bindings}" Target="{StaticResource summaryBindingModeDialogTemplate}" />
                                                </dxmvvm:ObjectToObjectConverter>
                                            </Binding.Converter>
                                        </Binding>
                                    </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:DialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>


    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.StringCollection}}">
        <dxprg:PropertyDefinition IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}">
                                    <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                    <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <Style BasedOn="{StaticResource CustomFooterThemedWindowDialogStyle}" TargetType="{x:Type dx:ThemedWindow}">
                                                            <Setter Property="Width" Value="400" />
                                                            <Setter Property="Height" Value="270" />
                                                            <Setter Property="MinWidth" Value="200" />
                                                            <Setter Property="MinHeight" Value="210" />
                                                            <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=StringCollectionEditor_Title}" />
                                                        </Style>
                                                    </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                    <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                        <DataTemplate>
                                                            <dxrude:StringCollectionEditor EditValue="{Binding Value}" />
                                                        </DataTemplate>
                                                    </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                </dxrudi:UITypeEditorDialogService>
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:DialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.SqlQuery}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.CellTemplate>
                <DataTemplate>
                    <dxe:ButtonEdit x:Name="PART_Editor" AllowDefaultButton="False" IsTextEditable="False">
                        <dxe:ButtonEdit.Buttons>
                            <dxe:ButtonInfo GlyphKind="Regular">
                                <dxmvvm:Interaction.Behaviors>
                                    <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OK}">
                                        <dxe:DialogServiceEditorBehavior.Content>
                                            <MultiBinding Converter="{dxrudi:SqlQueryEditorDataConverter}">
                                                <Binding Path="AssociatedObject.(xrdiag:XtraReportDiagramItem.ReportModel)" RelativeSource="{RelativeSource Self}" />
                                                <Binding Path="AssociatedObject.(dxprg:PropertyGridHelper.RowData)" RelativeSource="{RelativeSource Self}" />
                                            </MultiBinding>
                                        </dxe:DialogServiceEditorBehavior.Content>
                                        <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                            <DataTemplate>
                                                <ContentControl>
                                                    <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                        <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                            <Style BasedOn="{StaticResource {dxrudt:LWKey ReportDesignerDialog.DataSourceWizardDialogStyle}}" TargetType="{x:Type dx:ThemedWindow}">
                                                                <Setter Property="Title" Value="Query Editor" />
                                                            </Style>
                                                        </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                            <DataTemplate>
                                                                <dxrude:SqlQueryUITypeEditor ReportModel="{Binding Content.ReportModel}" SqlQuery="{Binding Content.SelectedComponent}" />
                                                            </DataTemplate>
                                                        </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                    </dxrudi:UITypeEditorDialogService>
                                                </ContentControl>
                                            </DataTemplate>
                                        </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                    </dxe:DialogServiceEditorBehavior>
                                </dxmvvm:Interaction.Behaviors>
                            </dxe:ButtonInfo>
                        </dxe:ButtonEdit.Buttons>
                    </dxe:ButtonEdit>
                </DataTemplate>
            </dxprg:PropertyDefinition.CellTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.FrameOptions}}">
        <dxprg:PropertyDefinition IsReadOnly="False" PostOnEditValueChanged="True">
            <dxprg:PropertyDefinition.CellTemplate>
                <DataTemplate>
                    <dxe:ComboBoxEdit x:Name="PART_Editor" IsTextEditable="False" ItemsSource="{Binding Path=(dxprg:PropertyGridHelper.RowData).Parent.Value, RelativeSource={RelativeSource Mode=Self}, Converter={dxrudi:QRFrameListSource}}" SelectItemWithNullValue="True" NullText="{dxrudl:ReportDesignerStringId StringId=Editors_NullValue_Text}" />
                </DataTemplate>
            </dxprg:PropertyDefinition.CellTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.QueryNode}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.CellTemplate>
                <DataTemplate>
                    <dxe:ButtonEdit x:Name="PART_Editor" AllowDefaultButton="False" IsTextEditable="False">
                        <dxe:ButtonEdit.Buttons>
                            <dxe:ButtonInfo GlyphKind="Regular">
                                <dxmvvm:Interaction.Behaviors>
                                    <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OK}">
                                        <dxe:DialogServiceEditorBehavior.Content>
                                            <MultiBinding Converter="{dxrudi:QueryNodeEditorDataConverter}">
                                                <Binding Path="AssociatedObject.(xrdiag:XtraReportDiagramItem.ReportModel)" RelativeSource="{RelativeSource Self}" />
                                                <Binding Path="AssociatedObject.(dxprg:PropertyGridHelper.RowData)" RelativeSource="{RelativeSource Self}" />
                                            </MultiBinding>
                                        </dxe:DialogServiceEditorBehavior.Content>
                                        <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                            <DataTemplate>
                                                <ContentControl>
                                                    <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                        <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                            <Style BasedOn="{StaticResource {dxrudt:LWKey ReportDesignerDialog.DataSourceWizardDialogStyle}}" TargetType="{x:Type dx:ThemedWindow}">
                                                                <Setter Property="Title" Value="Query Editor" />
                                                            </Style>
                                                        </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                            <DataTemplate>
                                                                <dxrude:QueryNodeUITypeEditor Query="{Binding Content.SelectedComponent}" ReportModel="{Binding Content.ReportModel}" />
                                                            </DataTemplate>
                                                        </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                    </dxrudi:UITypeEditorDialogService>
                                                </ContentControl>
                                            </DataTemplate>
                                        </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                    </dxe:DialogServiceEditorBehavior>
                                </dxmvvm:Interaction.Behaviors>
                            </dxe:ButtonInfo>
                        </dxe:ButtonEdit.Buttons>
                    </dxe:ButtonEdit>
                </DataTemplate>
            </dxprg:PropertyDefinition.CellTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.SeriesPoint}}">
        <dxprg:PropertyDefinition IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings x:Name="PART_Editor" AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" Content="{Binding Path=AssociatedObject.(dxrudi:PropertyGridHelper.SelectedObject), RelativeSource={RelativeSource Self}}">
                                    <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                    <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <Style BasedOn="{StaticResource CustomFooterThemedWindowDialogStyle}" TargetType="{x:Type dx:ThemedWindow}">
                                                            <Setter Property="Width" Value="550" />
                                                            <Setter Property="Height" Value="385" />
                                                            <Setter Property="MinWidth" Value="285" />
                                                            <Setter Property="MinHeight" Value="250" />
                                                            <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=Chart_SeriesPointEditor_Title}" />
                                                        </Style>
                                                    </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                    <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                        <DataTemplate>
                                                            <dxrude:SeriesPointUITypeEditor Chart="{Binding Content, Converter={dxrudi:ChartElementSelectionModelToXRChartConverter}}" EditValue="{Binding Value}" />
                                                        </DataTemplate>
                                                    </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                </dxrudi:UITypeEditorDialogService>
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:DialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.CharacterSet}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ComboBoxEditSettings DisplayMember="DisplayName" ItemsSource="{dxrudi:CharacterSetItemsSource}" ValueMember="Value" />
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>


    <!--<DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.TextAlignment}}">
        <dxprg:PropertyDefinition IsReadOnly="False" HeaderShowMode="Top" EditorHorizontalAlignment="Left">


            <dxprg:PropertyDefinition.EditSettings>
                <dxe:PopupBaseEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:PopupBaseEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="DropDown" IsDefaultButton="True">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:PopupEditorBehavior>
                                    <dxe:PopupEditorBehavior.ContentTemplate>
                                        <DataTemplate>
                                            <dxrude:TextAlignmentUITypeEditor EditValue="{Binding Value}" />
                                        </DataTemplate>
                                    </dxe:PopupEditorBehavior.ContentTemplate>
                                </dxe:PopupEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:PopupBaseEditSettings.Buttons>
                </dxe:PopupBaseEditSettings>
            </dxprg:PropertyDefinition.EditSettings>

        </dxprg:PropertyDefinition>
    </DataTemplate>-->


    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.TextAlignment}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.Style>
                <Style TargetType="dxprg:PropertyDefinition">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=(dxrud:ReportDesigner.Designer).PropertyGridOptions.UseOfficeInspiredPropertyGrid, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter Property="HeaderTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <UniformGrid Columns="1" Rows="2">
                                            <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" Text="{Binding Header}" />
                                        </UniformGrid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="EditSettings" Value="{x:Null}" />
                            <Setter Property="CellTemplate" Value="{StaticResource textAlignmentTemplate}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </dxprg:PropertyDefinition.Style>

            <dxprg:PropertyDefinition.EditSettings>
                <dxe:PopupBaseEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:PopupBaseEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="DropDown" IsDefaultButton="True">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:PopupEditorBehavior>
                                    <dxe:PopupEditorBehavior.ContentTemplate>
                                        <DataTemplate>
                                            <dxrude:PopupTextAlignmentUITypeEditor EditValue="{Binding Value}" />
                                        </DataTemplate>
                                    </dxe:PopupEditorBehavior.ContentTemplate>
                                </dxe:PopupEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:PopupBaseEditSettings.Buttons>
                </dxe:PopupBaseEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>


    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.Padding}}">
        <dxprg:PropertyDefinition IsReadOnly="False" ShowChildren="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.Style>
                <Style TargetType="dxprg:PropertyDefinition">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=(dxrud:ReportDesigner.Designer).PropertyGridOptions.UseOfficeInspiredPropertyGrid, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter Property="HeaderTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" Text="{Binding Header}" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ShowChildren" Value="False" />
                            <Setter Property="AllowExpanding" Value="Never" />
                            <Setter Property="ContentTemplate" Value="{StaticResource thicknessEditor}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </dxprg:PropertyDefinition.Style>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.Margins}}">
        <dxprg:PropertyDefinition Style="{StaticResource marginsDefinitionEditorStyle}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.DXMargins}}">
        <dxprg:PropertyDefinition Style="{StaticResource marginsDefinitionEditorStyle}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.SimpleTextAlignment}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.Style>
                <Style TargetType="dxprg:PropertyDefinition">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=(dxrud:ReportDesigner.Designer).PropertyGridOptions.UseOfficeInspiredPropertyGrid, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter Property="HeaderTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" Text="{Binding Header}" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="EditSettings" Value="{x:Null}" />
                            <Setter Property="CellTemplate" Value="{StaticResource simpleTextAlignmentTemplate}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </dxprg:PropertyDefinition.Style>
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:PopupBaseEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:PopupBaseEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="DropDown" IsDefaultButton="True">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:PopupEditorBehavior>
                                    <dxe:PopupEditorBehavior.ContentTemplate>
                                        <DataTemplate>
                                            <dxrude:PopupTextAlignmentUITypeEditor AllowJustify="False" EditValue="{Binding Value}" />
                                        </DataTemplate>
                                    </dxe:PopupEditorBehavior.ContentTemplate>
                                </dxe:PopupEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:PopupBaseEditSettings.Buttons>
                </dxe:PopupBaseEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.TargetBand}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.ContentTemplate>
                <DataTemplate>
                    <dxprg:CellEditorPresenter Path="{Binding FullPath, Converter={dxrudi:PropertyPathToEditablePropertyPathConverter EditablePropertyName=EditableTargetBand}}" PathMode="Absolute" />
                </DataTemplate>
            </dxprg:PropertyDefinition.ContentTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.EditableTargetBand}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ComboBoxEditSettings
                    IsTextEditable="False"
                    ItemsSource="{Binding Path=(xrdiag:XtraReportDiagramItem.ReportModel).XRObjectBase, Converter={dxrudi:TargetBandsConverter}, RelativeSource={RelativeSource Self}}"
                    NullText="{dxrudl:ReportDesignerStringId StringId=Editors_NullValue_Text}"
                    ValueMember="TargetBand" />
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.EFParameterCollection}}">
        <dxprg:PropertyDefinition IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.CellTemplate>
                <DataTemplate>
                    <dxe:ButtonEdit x:Name="PART_Editor" AllowDefaultButton="False" IsTextEditable="False">
                        <dxe:ButtonEdit.Buttons>
                            <dxe:ButtonInfo GlyphKind="Regular">
                                <dxmvvm:Interaction.Behaviors>
                                    <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" Content="{Binding Path=AssociatedObject.(dxprg:PropertyGridHelper.RowData).Parent, Converter={dxrudi:EFStoredProcedureInfoConverter}, RelativeSource={RelativeSource Self}}">
                                        <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                            <DataTemplate>
                                                <ContentControl>
                                                    <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                        <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                            <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="{x:Type dx:ThemedWindow}">
                                                                <Setter Property="Width" Value="600" />
                                                                <Setter Property="Height" Value="410" />
                                                                <Setter Property="MinWidth" Value="600" />
                                                                <Setter Property="MinHeight" Value="410" />
                                                                <Setter Property="Title" Value="Query Parameters" />
                                                            </Style>
                                                        </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                            <DataTemplate>
                                                                <dxrude:EFParameterCollectionUITypeEditor EditValue="{Binding Value}" StoredProcedureInfo="{Binding Content}" />
                                                            </DataTemplate>
                                                        </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                    </dxrudi:UITypeEditorDialogService>
                                                </ContentControl>
                                            </DataTemplate>
                                        </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                    </dxe:DialogServiceEditorBehavior>
                                </dxmvvm:Interaction.Behaviors>
                            </dxe:ButtonInfo>
                        </dxe:ButtonEdit.Buttons>
                    </dxe:ButtonEdit>
                </DataTemplate>
            </dxprg:PropertyDefinition.CellTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.DBSetFilterParameterCollection}}">
        <dxprg:PropertyDefinition IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.CellTemplate>
                <DataTemplate>
                    <dxe:ButtonEdit x:Name="PART_Editor" AllowDefaultButton="False" IsTextEditable="False">
                        <dxe:ButtonEdit.Buttons>
                            <dxe:ButtonInfo GlyphKind="Regular">
                                <dxmvvm:Interaction.Behaviors>
                                    <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" Content="{Binding Path=AssociatedObject.(dxprg:PropertyGridHelper.RowData).Parent.Value, Converter={dxrudi:DBSetFilterConverter}, RelativeSource={RelativeSource Self}}">
                                        <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                            <DataTemplate>
                                                <ContentControl>
                                                    <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                        <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                            <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="{x:Type dx:ThemedWindow}">
                                                                <Setter Property="Width" Value="600" />
                                                                <Setter Property="Height" Value="410" />
                                                                <Setter Property="MinWidth" Value="600" />
                                                                <Setter Property="MinHeight" Value="410" />
                                                                <Setter Property="Title" Value="Query Parameters" />
                                                            </Style>
                                                        </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                            <DataTemplate>
                                                                <dxrude:EFFilterParameterCollectionUITypeEditor DBSetFilter="{Binding Content}" EditValue="{Binding Value}" />
                                                            </DataTemplate>
                                                        </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                    </dxrudi:UITypeEditorDialogService>
                                                </ContentControl>
                                            </DataTemplate>
                                        </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                    </dxe:DialogServiceEditorBehavior>
                                </dxmvvm:Interaction.Behaviors>
                            </dxe:ButtonInfo>
                        </dxe:ButtonEdit.Buttons>
                    </dxe:ButtonEdit>
                </DataTemplate>
            </dxprg:PropertyDefinition.CellTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>


    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.BandCollection}}">
        <dxprg:PropertyDefinition IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" Content="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Document), RelativeSource={RelativeSource Self}}">
                                    <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                    <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                                                            <Setter Property="Width" Value="750" />
                                                            <Setter Property="Height" Value="515" />
                                                            <Setter Property="MinWidth" Value="420" />
                                                            <Setter Property="MinHeight" Value="240" />
                                                            <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=BandCollectionEditor_Title}" />
                                                        </Style>
                                                    </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                    <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                        <DataTemplate>
                                                            <dxrude:BandCollectionUITypeEditor dxrud:ReportDesigner.Document="{Binding Content}" EditValue="{Binding Value}" ReportModel="{Binding Content.ReportModel}" />
                                                        </DataTemplate>
                                                    </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                </dxrudi:UITypeEditorDialogService>
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:DialogServiceEditorBehavior>
                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.SortingOptions}}">
        <dxprg:PropertyDefinition ChildrenSortMode="NoSort" Style="{StaticResource subCategoryStyle}" />
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.ExpressionBinding}}">
        <dxprg:PropertyDefinition
            ChildrenSortMode="NoSort"
            IsReadOnly="False"
            PostOnEditValueChanged="True"
            UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.CellTemplate>
                <DataTemplate>
                    <dxe:ButtonEdit AllowDefaultButton="False" EditValue="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ValidateOnTextInput="False">
                        <dxe:ButtonEdit.Buttons>
                            <dxe:ButtonInfo Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.RunExpressionCollectionEditorCommand, RelativeSource={RelativeSource Self}}" GlyphKind="Regular">
                                <dxe:ButtonInfo.CommandParameter>
                                    <MultiBinding Converter="{dxrudei:PropertyGridExpressionDataConverter}">
                                        <Binding Path="(dxprg:PropertyGridHelper.PropertyGrid).SelectedPropertyPath" RelativeSource="{RelativeSource Self}" />
                                        <Binding Path="(dxrudi:PropertyGridHelper.DataView)" RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding>
                                </dxe:ButtonInfo.CommandParameter>
                            </dxe:ButtonInfo>
                        </dxe:ButtonEdit.Buttons>
                    </dxe:ButtonEdit>
                </DataTemplate>
            </dxprg:PropertyDefinition.CellTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.RootExpression}}">
        <dxprg:PropertyDefinition ChildrenSortMode="NoSort" Style="{StaticResource subCategoryStyle}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.BorderDashStyle}}">
        <dxprg:PropertyDefinition IsReadOnly="False" PostOnEditValueChanged="True" UseTypeConverterToStringConversion="False">
            <dxprg:PropertyDefinition.CellTemplate>
                <DataTemplate>
                    <dxe:ComboBoxEdit
                        Name="PART_Editor"
                        HorizontalContentAlignment="Stretch"
                        AllowNullInput="True"
                        ApplyItemTemplateToSelectedItem="True"
                        IsTextEditable="False"
                        ItemTemplate="{StaticResource borderDashStyleContentTemplate}"
                        ItemsSource="{dxrudi:BorderDashStylesProvider IsEnumResult=True}" />
                </DataTemplate>
            </dxprg:PropertyDefinition.CellTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.ShapeLineWidth}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.Style>
                <Style TargetType="dxprg:PropertyDefinition">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=(dxrud:ReportDesigner.Designer).PropertyGridOptions.UseOfficeInspiredPropertyGrid, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter Property="EditSettings" Value="{x:Null}" />
                            <Setter Property="ContentTemplate" Value="{StaticResource trackBarPropertyTemplate}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </dxprg:PropertyDefinition.Style>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.LineWidth}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.Style>
                <Style TargetType="dxprg:PropertyDefinition">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=(dxrud:ReportDesigner.Designer).PropertyGridOptions.UseOfficeInspiredPropertyGrid, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter Property="EditSettings" Value="{x:Null}" />
                            <Setter Property="ContentTemplate" Value="{StaticResource trackBarPropertyTemplate}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </dxprg:PropertyDefinition.Style>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.SubCategoryProperty}}">
        <dxprg:PropertyDefinition Style="{StaticResource subCategoryStyle}" />
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.ImageEditOptionsEditorName}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ComboBoxEditSettings
                    DisplayMember="DisplayName"
                    IsTextEditable="False"
                    ItemsSource="{dxrude:ImageEditOptionsEditorNameItemsSource}"
                    ValueMember="EditorName" />
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.FakeFavoriteProperty}}">
        <dxprg:PropertyDefinition HeaderShowMode="OnlyHeader" IsReadOnly="False">
            <dxprg:PropertyDefinition.HeaderTemplate>
                <DataTemplate>
                    <StackPanel Margin="25,12">
                        <TextBlock Text="{dxrudl:ReportStringId StringId=UD_PropertyGrid_TabFavorites_EmptyText}" TextAlignment="Center" TextWrapping="Wrap" />
                        <dxe:HyperlinkEdit HorizontalAlignment="Center" Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.EditFavoritePropertiesCommand, RelativeSource={RelativeSource Self}}" Text="Edit Favorite Properties..." />
                    </StackPanel>
                </DataTemplate>
            </dxprg:PropertyDefinition.HeaderTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.CheckBoxGlyphStyle}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.CellTemplate>
                <DataTemplate>
                    <dxe:ComboBoxEdit
                        ApplyItemTemplateToSelectedItem="True"
                        EditValue="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        Grid.IsSharedSizeScope="True"
                        IsTextEditable="False"
                        ItemTemplateSelector="{StaticResource checkBoxGlyphTemplateSelector}"
                        ItemsSource="{dxe:EnumItemsSource EnumType={x:Type xpc:GlyphStyle}}"
                        ValueMember="Id">
                        <dxe:ComboBoxEdit.Resources>
                            <Style TargetType="{x:Type dxe:PopupListBox}">
                                <Setter Property="Grid.IsSharedSizeScope" Value="True" />
                            </Style>

                        </dxe:ComboBoxEdit.Resources>
                    </dxe:ComboBoxEdit>
                </DataTemplate>
            </dxprg:PropertyDefinition.CellTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.ImageItemCollection}}">
        <dxprg:PropertyDefinition IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}">
                                    <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                    <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                                                            <Setter Property="Width" Value="725" />
                                                            <Setter Property="Height" Value="530" />
                                                            <Setter Property="MinWidth" Value="500" />
                                                            <Setter Property="MinHeight" Value="330" />
                                                            <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=ImageResourcesEditor_Title}" />
                                                        </Style>
                                                    </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                    <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                        <DataTemplate>
                                                            <dxrude:ImageResourcesCollectionUITypeEditor EditValue="{Binding Value}" />
                                                        </DataTemplate>
                                                    </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                </dxrudi:UITypeEditorDialogService>
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:DialogServiceEditorBehavior>

                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.KeyCollection}}">
        <dxprg:PropertyDefinition IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo GlyphKind="Regular">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}">
                                    <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                        <DataTemplate>
                                            <ContentControl>
                                                <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                    <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                                                            <Setter Property="Width" Value="370" />
                                                            <Setter Property="Height" Value="350" />
                                                            <Setter Property="MinWidth" Value="370" />
                                                            <Setter Property="MinHeight" Value="350" />
                                                            <Setter Property="Title" Value="Key Collection Editor" />
                                                        </Style>
                                                    </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                    <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                        <DataTemplate>
                                                            <dxrude:ColorizerKeysCollectionUITypeEditor EditValue="{Binding Value}" />
                                                        </DataTemplate>
                                                    </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                </dxrudi:UITypeEditorDialogService>
                                            </ContentControl>
                                        </DataTemplate>
                                    </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                </dxe:DialogServiceEditorBehavior>

                            </dxmvvm:Interaction.Behaviors>
                        </dxe:ButtonInfo>
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.LanguageCollection}}">
        <dxprg:PropertyDefinition UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.CellTemplate>
                <DataTemplate>
                    <dxe:ButtonEdit Name="PART_Editor" AllowDefaultButton="False" IsTextEditable="False">
                        <dxe:ButtonEdit.Buttons>
                            <dxe:ButtonInfo GlyphKind="Regular">
                                <dxmvvm:Interaction.Behaviors>
                                    <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" DialogServiceTemplate="{DynamicResource {dxrudt:LWKey ReportDesignerDialog.LocalizationEditorTemplate}}">
                                        <dxe:DialogServiceEditorBehavior.Content>
                                            <MultiBinding Converter="{dxrude:PropertyEditorDataConverter}">
                                                <Binding Path="AssociatedObject.(xrdiag:XtraReportDiagramItem.ReportModel)" RelativeSource="{RelativeSource Self}" />
                                                <Binding Path="AssociatedObject.(dxrudi:PropertyGridHelper.SelectedObject)" RelativeSource="{RelativeSource Self}" />
                                            </MultiBinding>
                                        </dxe:DialogServiceEditorBehavior.Content>
                                    </dxe:DialogServiceEditorBehavior>
                                </dxmvvm:Interaction.Behaviors>
                            </dxe:ButtonInfo>
                        </dxe:ButtonEdit.Buttons>
                    </dxe:ButtonEdit>
                </DataTemplate>
            </dxprg:PropertyDefinition.CellTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.XRLanguage}}">
        <dxprg:PropertyDefinition>
            <dxprg:PropertyDefinition.CellTemplate>
                <DataTemplate>
                    <dxe:ComboBoxEdit
                        AllowItemHighlighting="False"
                        AutoComplete="True"
                        DisplayMember="DisplayName"
                        EditValue="{Binding Value, UpdateSourceTrigger=Explicit, Mode=TwoWay}"
                        FilterCondition="StartsWith"
                        IncrementalFiltering="True"
                        IncrementalSearch="True"
                        IsCaseSensitiveFilter="False"
                        IsTextEditable="True"
                        ItemsSource="{dxrudei:LanguagesItemsSource}"
                        ValueMember="Name">
                        <dxe:ComboBoxEdit.ItemTemplate>
                            <DataTemplate>
                                <DataTemplate.Resources>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsLocalized}" Value="True">
                                                <Setter Property="FontWeight" Value="Bold" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataTemplate.Resources>
                                <TextBlock Text="{Binding DisplayName}" />
                            </DataTemplate>
                        </dxe:ComboBoxEdit.ItemTemplate>
                        <dxmvvm:Interaction.Behaviors>
                            <dxrudei:LanguageComboboxEditorBehavior ReportModel="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer).ActiveDocument.ReportModel, RelativeSource={RelativeSource Self}}" />
                        </dxmvvm:Interaction.Behaviors>
                    </dxe:ComboBoxEdit>
                </DataTemplate>
            </dxprg:PropertyDefinition.CellTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>


    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.DoubleCollection}}">
        <dxprg:PropertyDefinition IsReadOnly="False" UseTypeConverterToStringConversion="False">
            <dxprg:PropertyDefinition.CellTemplate>
                <DataTemplate>
                    <dxe:ButtonEdit Name="PART_Editor" AllowDefaultButton="False" IsTextEditable="False">
                        <dxe:ButtonEdit.Buttons>
                            <dxe:ButtonInfo GlyphKind="Regular">
                                <dxmvvm:Interaction.Behaviors>
                                    <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" Content="{Binding AssociatedObject.DataContext, RelativeSource={RelativeSource Self}, Converter={dxrudi:RowDataToRangeColorizerModelConverter}}">
                                        <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                            <DataTemplate>
                                                <ContentControl>
                                                    <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                        <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                            <Style BasedOn="{StaticResource CustomFooterThemedWindowDialogStyle}" TargetType="dx:ThemedWindow">
                                                                <Setter Property="Width" Value="370" />
                                                                <Setter Property="Height" Value="350" />
                                                                <Setter Property="MinWidth" Value="370" />
                                                                <Setter Property="MinHeight" Value="350" />
                                                                <Setter Property="Title" Value="Range Stop Collection Editor" />
                                                            </Style>
                                                        </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                        <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                            <DataTemplate>
                                                                <dxrude:RangeStopsCollectionUITypeEditor EditValue="{Binding Value}" EditableComponent="{Binding Content}" />
                                                            </DataTemplate>
                                                        </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                    </dxrudi:UITypeEditorDialogService>
                                                </ContentControl>
                                            </DataTemplate>
                                        </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                    </dxe:DialogServiceEditorBehavior>

                                </dxmvvm:Interaction.Behaviors>
                            </dxe:ButtonInfo>
                        </dxe:ButtonEdit.Buttons>
                    </dxe:ButtonEdit>
                </DataTemplate>
            </dxprg:PropertyDefinition.CellTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>

    <!-- ____________________________________________NEW EDITOR STYLE DECLARATION______________________________________________________ -->

    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.CrossTabFieldCollection}}">
        <dxprg:PropertyDefinition IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.EditSettings>
                <dxe:ButtonEditSettings AllowDefaultButton="False" IsTextEditable="False">
                    <dxe:ButtonEditSettings.Buttons>
                        <dxe:ButtonInfo
                            dxmvvm:Interaction.BehaviorsTemplate="{StaticResource dialogServiceEditorBehaviorTemplate}"
                            dxrudi:PropertyGridDialogEditorExtension.Content="{Binding Path=(xrdiag:XtraReportDiagramItem.ReportModel), RelativeSource={RelativeSource Self}}"
                            dxrudi:PropertyGridDialogEditorExtension.DialogServiceTemplate="{StaticResource crossTabFieldCollectionEditorTemplate}"
                            GlyphKind="Regular" />
                    </dxe:ButtonEditSettings.Buttons>
                </dxe:ButtonEditSettings>
            </dxprg:PropertyDefinition.EditSettings>
        </dxprg:PropertyDefinition>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.QueryParameterCollection}}">
        <dxprg:PropertyDefinition IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.CellTemplate>
                <DataTemplate>
                    <dxe:ButtonEdit x:Name="PART_Editor" AllowDefaultButton="False" IsTextEditable="False">
                        <dxe:ButtonEdit.Buttons>
                            <dxe:ButtonInfo dxmvvm:Interaction.BehaviorsTemplate="{StaticResource dialogServiceEditorBehaviorTemplate}" dxrudi:PropertyGridDialogEditorExtension.DialogServiceTemplate="{StaticResource sqlParametersCollectionEditorTemplate}" GlyphKind="Regular">
                                <dxrudi:PropertyGridDialogEditorExtension.Content>
                                    <MultiBinding Converter="{dxrudi:SqlQueryEditorDataConverter}">
                                        <Binding Path="(xrdiag:XtraReportDiagramItem.ReportModel)" RelativeSource="{RelativeSource Self}" />
                                        <Binding Path="(dxprg:PropertyGridHelper.RowData).Parent" RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding>
                                </dxrudi:PropertyGridDialogEditorExtension.Content>
                            </dxe:ButtonInfo>
                        </dxe:ButtonEdit.Buttons>
                    </dxe:ButtonEdit>
                </DataTemplate>
            </dxprg:PropertyDefinition.CellTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.MongoDBQueryParameterCollection}}">
        <dxprg:PropertyDefinition IsReadOnly="False" UseTypeConverterToStringConversion="True">
            <dxprg:PropertyDefinition.CellTemplate>
                <DataTemplate>
                    <dxe:ButtonEdit x:Name="PART_Editor" AllowDefaultButton="False" IsTextEditable="False">
                        <dxe:ButtonEdit.Buttons>
                            <dxe:ButtonInfo dxmvvm:Interaction.BehaviorsTemplate="{StaticResource dialogServiceEditorBehaviorTemplate}" dxrudi:PropertyGridDialogEditorExtension.DialogServiceTemplate="{StaticResource mongoDBParametersCollectionEditorTemplate}" GlyphKind="Regular">
                                <dxrudi:PropertyGridDialogEditorExtension.Content>
                                    <MultiBinding Converter="{dxrudi:MongoDBQueryEditorDataConverter}">
                                        <Binding Path="(xrdiag:XtraReportDiagramItem.ReportModel)" RelativeSource="{RelativeSource Self}" />
                                        <Binding Path="(dxprg:PropertyGridHelper.RowData).Parent" RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding>
                                </dxrudi:PropertyGridDialogEditorExtension.Content>
                            </dxe:ButtonInfo>
                        </dxe:ButtonEdit.Buttons>
                    </dxe:ButtonEdit>
                </DataTemplate>
            </dxprg:PropertyDefinition.CellTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.MongoDBFilterString}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.CellTemplate>
                <DataTemplate>
                    <dxe:ButtonEdit x:Name="PART_Editor" AllowDefaultButton="False" IsTextEditable="True">
                        <dxe:ButtonEdit.Buttons>

                            <dxe:ButtonInfo dxmvvm:Interaction.BehaviorsTemplate="{StaticResource dialogServiceEditorBehaviorTemplate}" dxrudi:PropertyGridDialogEditorExtension.DialogServiceTemplate="{StaticResource mongoDBFilterStringEditorTemplate}" GlyphKind="Regular">
                                <dxrudi:PropertyGridDialogEditorExtension.Content>
                                    <MultiBinding Converter="{dxrudi:MongoDBQueryEditorDataConverter}">
                                        <Binding Path="(xrdiag:XtraReportDiagramItem.ReportModel)" RelativeSource="{RelativeSource Self}" />
                                        <Binding Path="(dxprg:PropertyGridHelper.RowData).Parent" RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding>
                                </dxrudi:PropertyGridDialogEditorExtension.Content>
                            </dxe:ButtonInfo>
                        </dxe:ButtonEdit.Buttons>
                    </dxe:ButtonEdit>
                </DataTemplate>
            </dxprg:PropertyDefinition.CellTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:PropertyGridEditorThemeKey {x:Static dxrudim:MetadataPropertyGridEditorTemplateKeys.SelectQueryFilterString}}">
        <dxprg:PropertyDefinition IsReadOnly="False">
            <dxprg:PropertyDefinition.CellTemplate>
                <DataTemplate>
                    <dxe:ButtonEdit x:Name="PART_Editor" AllowDefaultButton="False" IsTextEditable="True">
                        <dxe:ButtonEdit.Buttons>
                            <dxe:ButtonInfo dxmvvm:Interaction.BehaviorsTemplate="{StaticResource dialogServiceEditorBehaviorTemplate}" dxrudi:PropertyGridDialogEditorExtension.DialogServiceTemplate="{StaticResource sqlQueryFilterStringEditorTemplate}" GlyphKind="Regular">
                                <dxrudi:PropertyGridDialogEditorExtension.Content>
                                    <MultiBinding Converter="{dxrudi:SqlQueryEditorDataConverter}">
                                        <Binding Path="(xrdiag:XtraReportDiagramItem.ReportModel)" RelativeSource="{RelativeSource Self}" />
                                        <Binding Path="(dxprg:PropertyGridHelper.RowData).Parent" RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding>
                                </dxrudi:PropertyGridDialogEditorExtension.Content>
                            </dxe:ButtonInfo>
                        </dxe:ButtonEdit.Buttons>
                    </dxe:ButtonEdit>
                </DataTemplate>
            </dxprg:PropertyDefinition.CellTemplate>
        </dxprg:PropertyDefinition>
    </DataTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\PropertyGrid\PropertyGridEditors.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic.xaml-->
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\PropertyGrid\RowControlRenderTemplate.xaml-->
    <dxi:RenderTemplate x:Key="ExpressionCommandButton">
        <dxi:RenderPanel Width="10" Height="10" Margin="3,0,7,0">
            <dxi:RenderBorder Background="Transparent">
                <dxi:RenderPath
                    Name="PART_Icon"
                    Data="M10.8, 4L12, 4L13, 2L11.7, 2C10.6, 2 9.6, 2.4 8.8, 3.2C8.3, 3.7 7.9, 4.4 7.7, 5.1L7.2, 7L5, 7L4, 8L7, 8L6.2, 11.2C6.1, 11.6 5.7, 12 5.2, 12L4, 12L3, 14L4.3, 14C5.4, 14 6.4, 13.6 7.2, 12.8C7.7, 12.3 8.1, 11.6 8.3, 10.9L9, 8L11, 8L12, 7L9.3, 7L9.8, 4.8C9.9, 4.4 10.3, 4 10.8, 4z"
                    Fill="Gray"
                    Opacity="0.8"
                    Stretch="Fill" />
            </dxi:RenderBorder>
        </dxi:RenderPanel>
        <dxi:RenderTemplate.Triggers>
            <dxi:RenderStateGroup Name="CommonStates">
                <dxi:RenderStateTrigger Name="Normal" />
                <dxi:RenderStateTrigger Name="MouseOver">
                    <dxi:RenderSetter TargetName="PART_Icon" Property="Opacity" Value="1" />
                </dxi:RenderStateTrigger>
            </dxi:RenderStateGroup>
            <dxi:RenderTrigger DependencyProperty="{x:Static propertygrid:BindableRowControl.HasExpressionsProperty}" Value="True">
                <dxi:RenderSetter TargetName="PART_Icon" Property="Fill" Value="{dx:TargetStaticResource {dxt:LWKey Badges.InformationBackground}, TargetDictionary={dxi:ThemeResourceDictionary Path='Core/Controls/_{ThemeCategory}.xaml'}}" />
                <dxi:RenderSetter TargetName="PART_Icon" Property="Opacity" Value="1" />
            </dxi:RenderTrigger>
            <dxi:MultiRenderTrigger>
                <dxi:MultiRenderTrigger.Conditions>
                    <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControl.MenuButtonTemplateProperty}" Operator="Not" Value="{x:Null}" />
                </dxi:MultiRenderTrigger.Conditions>
                <dxi:RenderSetter TargetName="PART_ContentPresenter" Property="Visibility" Value="Visible" />
                <dxi:RenderSetter TargetName="PART_Icon" Property="Visibility" Value="Collapsed" />
            </dxi:MultiRenderTrigger>
        </dxi:RenderTemplate.Triggers>
    </dxi:RenderTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\PropertyGrid\RowControlRenderTemplate.xaml-->


    <!--#region DEFAULT STYLES-->

    <Style x:Key="FlatToggleButton.DefaultStyleBase" BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="{x:Type dxrudi:FlatToggleButton}">
        <Setter Property="Template" Value="{StaticResource flatbuttonTemplate}" />
        <Setter Property="Foreground" Value="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Mode=Self}}" />
    </Style>
    <Style x:Key="BindingsEditor.DefaultStyleBase" TargetType="{x:Type dxrude:BindingsEditor}">
        <Setter Property="xrdiag:XtraReportDiagramItem.ReportModel" Value="{Binding ReportModel, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxrude:BindingsEditor}">
                    <dxrude:DialogEditorView>
                        <Grid Margin="12,12,12,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <dxg:GridSearchControl
                                Name="searchControl"
                                Width="250"
                                Margin="0,0,0,4"
                                HorizontalAlignment="Right"
                                View="{Binding ElementName=gridView}" />
                            <dxg:GridControl
                                Name="PART_GridControl"
                                Grid.Row="1"
                                AllowMRUFilterList="False"
                                FilterString="[IsValid] != True"
                                IsFilterEnabled="False"
                                ItemsSource="{TemplateBinding Bindings}">
                                <dxg:GridControl.Resources>
                                    <ControlTemplate x:Key="{dxt:LWKey FilterPanelControlBase.ClearFilterButtonTemplate}" TargetType="{x:Type Button}" />
                                </dxg:GridControl.Resources>
                                <dxg:GridColumn
                                    FieldName="IsChecked"
                                    Width="auto"
                                    AllowColumnFiltering="False"
                                    AllowSearchPanel="False"
                                    AllowSorting="False"
                                    HorizontalHeaderContentAlignment="Center"
                                    ImageAlignment="Center"
                                    ShowCheckBoxInHeader="True" />
                                <dxg:GridColumn FieldName="IsValid" Visible="False" />
                                <dxg:GridColumn
                                    FieldName="ControlName"
                                    Width="2*"
                                    AllowColumnFiltering="False"
                                    AllowEditing="False"
                                    Header="{dxrudl:ReportDesignerStringId StringId=BindingsEditor_ControlColumn}" />
                                <dxg:GridColumn
                                    FieldName="PropertyName"
                                    Width="*"
                                    AllowColumnFiltering="False"
                                    AllowEditing="False"
                                    Header="{dxrudl:ReportDesignerStringId StringId=BindingsEditor_PropertyNameColumn}"
                                    ShowCheckBoxInHeader="True" />
                                <dxg:GridColumn
                                    FieldName="Source"
                                    Width="2*"
                                    AllowColumnFiltering="False"
                                    AllowEditing="False"
                                    AllowSearchPanel="False"
                                    AllowSorting="False"
                                    CellToolTipBinding="{Binding Source}"
                                    Header="{dxrudl:ReportDesignerStringId StringId=BindingsEditor_SourceBindingColumn}">
                                    <dxg:GridColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid Margin="4,2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="auto" />
                                                    <ColumnDefinition />
                                                </Grid.ColumnDefinitions>
                                                <dx:DXImage
                                                    Width="{dxrudi:ThemeImageSize Size=16, TouchThemeSize=32}"
                                                    Margin="0,0,4,0"
                                                    Source="{dx:SvgImageSource Uri={dx:ReportDesignerResource Images/Svg/Warning.svg}}"
                                                    ToolTip="{dxrudl:ReportStringId StringId=BindingMapperForm_InvalidBindingWarning}"
                                                    Visibility="{Binding Row.IsValid, Converter={dx:BooleanToVisibilityConverter Invert=True}}" />
                                                <TextBlock
                                                    Grid.Column="1"
                                                    VerticalAlignment="Center"
                                                    Text="{Binding Value}"
                                                    TextTrimming="CharacterEllipsis" />
                                            </Grid>
                                        </DataTemplate>
                                    </dxg:GridColumn.CellTemplate>
                                </dxg:GridColumn>
                                <dxg:GridColumn
                                    Width="2*"
                                    AllowColumnFiltering="False"
                                    AllowSearchPanel="False"
                                    AllowSorting="False"
                                    CellTemplateSelector="{StaticResource cellTemplateSelector}"
                                    Header="{dxrudl:ReportDesignerStringId StringId=BindingsEditor_DestinationBindingColumn}" />
                                <dxg:GridControl.View>
                                    <dxg:TableView
                                        Name="gridView"
                                        AllowFilterEditor="False"
                                        AllowGrouping="False"
                                        IsColumnMenuEnabled="False"
                                        SearchControl="{Binding ElementName=searchControl}"
                                        SearchPanelFindMode="FindClick"
                                        ShowFilterPanelMode="ShowAlways"
                                        ShowGroupPanel="False"
                                        ShowIndicator="False"
                                        ShowSearchPanelCloseButton="False"
                                        ShowSearchPanelFindButton="True"
                                        ShowSearchPanelMRUButton="False"
                                        ShowSearchPanelMode="Never" />
                                </dxg:GridControl.View>
                            </dxg:GridControl>
                        </Grid>
                    </dxrude:DialogEditorView>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DataSourceParameterCollectionUITypeEditor.DefaultStyleBase" TargetType="{x:Type dxrude:DataSourceParameterCollectionUITypeEditor}">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxrude:DataSourceParameterCollectionUITypeEditor}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <dxdai:ParameterEditor
                            x:Name="PART_ParameterEditor"
                            EditValue="{Binding SelectedParameter, RelativeSource={RelativeSource TemplatedParent}}"
                            FixedParameters="{TemplateBinding IsFixedParameters}"
                            ItemsSource="{TemplateBinding Parameters}"
                            ParameterService="{TemplateBinding ParameterService}"
                            ShowHeader="True" />
                        <ContentControl
                            Grid.Row="1"
                            Margin="0,12,0,12"
                            HorizontalContentAlignment="Stretch"
                            Content="{x:Null}"
                            ContentTemplate="{TemplateBinding DialogFooterTemplate}"
                            Visibility="{Binding Path=(dxi:ThemedWindowOptions.UseCustomDialogFooter), RelativeSource={RelativeSource Mode=Self}, Converter={dx:BooleanToVisibilityConverter}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SingleSelectionCollectionEditor.DefaultStyleBase" BasedOn="{dx:TargetStaticResource CollectionEditorBase.DefaultStyleBase, TargetDictionary={dxi:ThemeResourceDictionary Path='Diagram/Generic.xaml'}}" TargetType="dxrude:SingleSelectionCollectionEditor">
        <Style.Resources>
            <Style BasedOn="{StaticResource collectionEditorToolBarStyle}" TargetType="dxb:ToolBarControl" />
        </Style.Resources>
        <Setter Property="Margin" Value="12,12,12,0" />
        <Setter Property="UseLayoutRounding" Value="False" />
        <Setter Property="dx:ScrollBarExtensions.ScrollBarMode" Value="TouchOverlap" />
        <Setter Property="ActionButtonsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxb:ToolBarControl>
                        <dxb:BarButtonItem
                            BarItemDisplayMode="ContentAndGlyph"
                            Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).AddItemCommand, RelativeSource={RelativeSource Self}}"
                            Content="{dxrudl:ReportDesignerStringId StringId=Add}"
                            Glyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Add.svg'}}"
                            LargeGlyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Add.svg'}}" />
                        <dxb:BarButtonItem
                            Alignment="Far"
                            Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).MoveUpCommand, RelativeSource={RelativeSource Self}}"
                            Glyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Misc/ArrowUp.svg'}}"
                            LargeGlyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Misc/ArrowUp.svg'}}" />
                        <dxb:BarButtonItem
                            Alignment="Far"
                            Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).MoveDownCommand, RelativeSource={RelativeSource Self}}"
                            Glyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Misc/ArrowDown.svg'}}"
                            LargeGlyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Misc/ArrowDown.svg'}}" />
                    </dxb:ToolBarControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsControlTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" SharedSizeGroup="ToolBarRow" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <ContentControl Content="{x:Null}" ContentTemplate="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).ActionButtonsTemplate, RelativeSource={RelativeSource Self}}" />
                        <ContentControl
                            Grid.Row="1"
                            Grid.Column="0"
                            Content="{x:Null}"
                            ContentTemplate="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).ItemsListTemplate, RelativeSource={RelativeSource Self}}" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="NavigationPanelTemplate" Value="{x:Null}" />
        <Setter Property="ItemsControlHeaderTemplate" Value="{x:Null}" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding Name}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsListTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxe:ListBoxEdit
                        AllowItemHighlighting="True"
                        EditValue="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).SelectedItem, RelativeSource={RelativeSource Self}, UpdateSourceTrigger=PropertyChanged}"
                        ItemsSource="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).EditableCollectionModel, RelativeSource={RelativeSource Self}}"
                        ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                        SelectionMode="Single">
                        <dxe:ListBoxEdit.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>
                                    <ContentControl Content="{Binding}" ContentTemplate="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).ItemTemplate, RelativeSource={RelativeSource Self}}" />
                                    <ContentControl Grid.Column="1" Content="{Binding}" ContentTemplate="{StaticResource removeCollectionItemButtonTemplate}" />
                                </Grid>
                            </DataTemplate>
                        </dxe:ListBoxEdit.ItemTemplate>
                        <dxe:ListBoxEdit.ItemContainerStyle>
                            <Style TargetType="dxe:ListBoxEditItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="Visibility">
                                    <Setter.Value>
                                        <MultiBinding Converter="{dxrude:DiagramItemTypeToVisibilityConverter}">
                                            <Binding Path="(dxdiagi:CollectionEditorBase.Editor).IsEditorItem" RelativeSource="{RelativeSource Self}" />
                                            <Binding />
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </dxe:ListBoxEdit.ItemContainerStyle>
                    </dxe:ListBoxEdit>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemDetailedDescriptionTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" SharedSizeGroup="ToolBarRow" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <dxb:ToolBarControl>
                            <dxb:BarCheckItem GroupIndex="3120" Hint="{dxrudl:ReportDesignerStringId StringId=PropertyGrid_BarControl_BarItem_Categorized}" IsChecked="{Binding ShowCategories, ElementName=PART_PropertyGrid, Converter={dxrudi:ShowCategoriesToIsCheckedConverter ShowCategories=Visible}, Mode=TwoWay}">
                                <dxb:BarCheckItem.GlyphTemplate>
                                    <DataTemplate>
                                        <Path
                                            x:Name="PART_GroupView"
                                            Width="12"
                                            Height="12"
                                            Data="F1 M 2,2L 7,2L 7,7L 2,7L 2,2 Z M 2,9.00001L 6.99999,9.00001L 6.99999,14L 2,14L 2,9.00001 Z M 8,4.00001L 14,4.00001L 14,5.00001L 8,5.00001L 8,4.00001 Z M 8,11L 14,11L 14,12L 8,12L 8,11 Z M 4,3L 4,4L 3,4L 3,5L 4,5L 4,6L 5,6L 5,5L 6,5L 6,4L 5,4L 5,3L 4,3 Z M 4,10L 4,11L 3,11L 3,12L 4,12L 4,13L 5,13L 5,12L 6,12L 6,11L 5,11L 5,10L 4,10 Z "
                                            Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}"
                                            Stretch="Fill" />
                                    </DataTemplate>
                                </dxb:BarCheckItem.GlyphTemplate>
                            </dxb:BarCheckItem>
                            <dxb:BarCheckItem GroupIndex="3120" Hint="{dxrudl:ReportDesignerStringId StringId=PropertyGrid_BarControl_BarItem_Alphabetical}" IsChecked="{Binding ShowCategories, ElementName=PART_PropertyGrid, Converter={dxrudi:ShowCategoriesToIsCheckedConverter ShowCategories=Hidden}, Mode=TwoWay}">
                                <dxb:BarCheckItem.GlyphTemplate>
                                    <DataTemplate>
                                        <Path
                                            x:Name="PART_ListView"
                                            Width="12"
                                            Height="10"
                                            Data="F1 M 2,3L 14,3L 14,4L 2,4L 2,3 Z M 2,6L 14,6L 14,7L 2,7L 2,6 Z M 2,9L 14,9L 14,10L 2,10L 2,9 Z M 2,12L 14,12L 14,13L 2,13L 2,12 Z "
                                            Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}"
                                            Stretch="Fill" />
                                    </DataTemplate>
                                </dxb:BarCheckItem.GlyphTemplate>
                            </dxb:BarCheckItem>
                        </dxb:ToolBarControl>
                        <dxprg:PropertyGridControl
                            Name="PART_PropertyGrid"
                            Grid.Row="1"
                            dxrudi:PropertyGridHelper.SelectedObject="{Binding SelectedObject, RelativeSource={RelativeSource Self}}"
                            dxrudi:PropertyGridHelper.SelectedObjectInvalidated="{Binding SelectedObject, RelativeSource={RelativeSource Self}}"
                            ExpandCategoriesWhenSelectedObjectChanged="True"
                            IsEnabled="{Binding SelectedObject, RelativeSource={RelativeSource Self}, Converter={dxrudi:SelectedItemsLockedInEUDToBooleanConverter Inverse=True}}"
                            ShowSearchBox="False"
                            ShowToolPanel="False"
                            UseCollectionEditor="False">
                            <dxprg:PropertyGridControl.SelectedObject>
                                <MultiBinding Converter="{propertygrid:SelectedObjectToPropertiesSelectorConverter}">
                                    <Binding />
                                    <Binding Source="{x:Static propertygrid:PropertiesShowMode.Common}" />
                                </MultiBinding>
                            </dxprg:PropertyGridControl.SelectedObject>
                            <dxprg:PropertyDefinition Path="Name">
                                <dxprg:PropertyDefinition.MenuCustomizations>
                                    <dxb:RemoveAction ElementName="{x:Static dxprg:BarItemNames.Reset}" />
                                </dxprg:PropertyDefinition.MenuCustomizations>
                            </dxprg:PropertyDefinition>
                            <dxprg:PropertyDefinition Path="StylePriority" UseTypeConverterToStringConversion="True">
                                <dxprg:PropertyDefinition.MenuCustomizations>
                                    <dxb:RemoveAction ElementName="{x:Static dxprg:BarItemNames.Reset}" />
                                </dxprg:PropertyDefinition.MenuCustomizations>
                            </dxprg:PropertyDefinition>
                            <dxprg:PropertyDefinition Path="StylePriority.UseFont">
                                <dxprg:PropertyDefinition.MenuCustomizations>
                                    <dxb:RemoveAction ElementName="{x:Static dxprg:BarItemNames.Reset}" />
                                </dxprg:PropertyDefinition.MenuCustomizations>
                            </dxprg:PropertyDefinition>
                            <dxprg:PropertyDefinition Path="ControlLocationF" UseTypeConverterToStringConversion="True">
                                <dxprg:PropertyDefinition.MenuCustomizations>
                                    <dxb:RemoveAction ElementName="{x:Static dxprg:BarItemNames.Reset}" />
                                </dxprg:PropertyDefinition.MenuCustomizations>
                            </dxprg:PropertyDefinition>
                            <dxprg:PropertyDefinition Path="ControlLocationF.X">
                                <dxprg:PropertyDefinition.MenuCustomizations>
                                    <dxb:RemoveAction ElementName="{x:Static dxprg:BarItemNames.Reset}" />
                                </dxprg:PropertyDefinition.MenuCustomizations>
                            </dxprg:PropertyDefinition>
                            <dxprg:PropertyDefinition Path="ControlLocationF.Y">
                                <dxprg:PropertyDefinition.MenuCustomizations>
                                    <dxb:RemoveAction ElementName="{x:Static dxprg:BarItemNames.Reset}" />
                                </dxprg:PropertyDefinition.MenuCustomizations>
                            </dxprg:PropertyDefinition>
                            <dxprg:PropertyDefinition Path="ControlSizeF" UseTypeConverterToStringConversion="True">
                                <dxprg:PropertyDefinition.MenuCustomizations>
                                    <dxb:RemoveAction ElementName="{x:Static dxprg:BarItemNames.Reset}" />
                                </dxprg:PropertyDefinition.MenuCustomizations>
                            </dxprg:PropertyDefinition>
                            <dxprg:PropertyDefinition Path="ControlSizeF.Width">
                                <dxprg:PropertyDefinition.MenuCustomizations>
                                    <dxb:RemoveAction ElementName="{x:Static dxprg:BarItemNames.Reset}" />
                                </dxprg:PropertyDefinition.MenuCustomizations>
                            </dxprg:PropertyDefinition>
                            <dxprg:PropertyDefinition Path="ControlSizeF.Height">
                                <dxprg:PropertyDefinition.MenuCustomizations>
                                    <dxb:RemoveAction ElementName="{x:Static dxprg:BarItemNames.Reset}" />
                                </dxprg:PropertyDefinition.MenuCustomizations>
                            </dxprg:PropertyDefinition>
                            <dxprg:PropertyDefinition Path="BandHeightF">
                                <dxprg:PropertyDefinition.MenuCustomizations>
                                    <dxb:RemoveAction ElementName="{x:Static dxprg:BarItemNames.Reset}" />
                                </dxprg:PropertyDefinition.MenuCustomizations>
                            </dxprg:PropertyDefinition>
                            <dxprg:PropertyGridControl.MenuCustomizations>
                                <dxb:RemoveAction ElementName="{x:Static dxprg:BarItemNames.Refresh}" />
                            </dxprg:PropertyGridControl.MenuCustomizations>
                        </dxprg:PropertyGridControl>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemDetailedDescriptionTemplateWrapper">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl Grid.Row="1" Content="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).SelectedItem, RelativeSource={RelativeSource Self}}" ContentTemplate="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).ItemDetailedDescriptionTemplate, RelativeSource={RelativeSource Self}}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="DialogFooterTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                        <dxrudi:LocalizedDialogButton DialogResult="OK" />
                        <dxrudi:LocalizedDialogButton DialogResult="Cancel" />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxrude:SingleSelectionCollectionEditor">
                    <Grid Grid.IsSharedSizeScope="True">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <Grid.Resources>
                            <Style TargetType="{x:Type dxprg:PropertyGridControl}">
                                <Setter Property="SortMode" Value="Ascending" />
                            </Style>
                        </Grid.Resources>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <ContentControl
                                x:Name="PART_Items"
                                Width="{TemplateBinding ItemsControlWidth}"
                                Margin="0,0,12,0"
                                Content="{x:Null}"
                                ContentTemplate="{TemplateBinding ItemsControlTemplate}"
                                Visibility="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).ShowItemsControl, Converter={dx:BooleanToVisibilityConverter}, RelativeSource={RelativeSource Self}}" />
                            <ContentControl
                                x:Name="PART_DetailedDescription"
                                Grid.Row="0"
                                Grid.Column="1"
                                Content="{x:Null}"
                                ContentTemplate="{TemplateBinding ItemDetailedDescriptionTemplateWrapper}" />
                        </Grid>
                        <ContentControl
                            Grid.Row="1"
                            Margin="0,12,0,12"
                            HorizontalContentAlignment="Stretch"
                            Content="{x:Null}"
                            ContentTemplate="{TemplateBinding DialogFooterTemplate}"
                            Visibility="{Binding Path=(dxi:ThemedWindowOptions.UseCustomDialogFooter), RelativeSource={RelativeSource Mode=Self}, Converter={dx:BooleanToVisibilityConverter}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="QueryCollectionEditorBase.DefaultStyleBase" BasedOn="{StaticResource SingleSelectionCollectionEditor.DefaultStyleBase}" TargetType="{x:Type dxrude:QueryCollectionEditorBase}">
        <Setter Property="ActionButtonsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxb:ToolBarControl>
                        <dxb:BarButtonItem
                            BarItemDisplayMode="ContentAndGlyph"
                            Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).AddItemCommand, RelativeSource={RelativeSource Self}}"
                            Content="{dxrudl:ReportDesignerStringId StringId=Add}"
                            Glyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Add.svg'}}"
                            LargeGlyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Add.svg'}}" />
                    </dxb:ToolBarControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsListTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxg:GridControl Name="PART_Items" Style="{StaticResource ItemsGridControlStyle}">
                        <dxg:GridControl.Columns>
                            <dxg:GridColumn
                                Width="*"
                                AllowFocus="False"
                                Binding="{Binding RowData.Row.Name, Mode=TwoWay}"
                                CellTemplate="{StaticResource gridColumnNameCellTemplate}">
                                <dxmvvm:Interaction.Behaviors>
                                    <dxmvvm:EventToCommand Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).ValidateQueryNameCommand, RelativeSource={RelativeSource TemplatedParent}}" EventName="Validate" PassEventArgsToCommand="True" />
                                </dxmvvm:Interaction.Behaviors>
                            </dxg:GridColumn>
                        </dxg:GridControl.Columns>
                        <dxg:GridControl.View>
                            <dxrudi:TableViewEx Style="{StaticResource _itemListTableViewStyle}" />
                        </dxg:GridControl.View>
                    </dxg:GridControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemDetailedDescriptionTemplate" Value="{x:Null}" />
        <Setter Property="SplashScreenServiceTemplate" Value="{DynamicResource {dxrudt:LWKey ReportDesigner.DefaultSplashScreenServiceTemplate}}" />
        <Setter Property="MessageBoxServiceTemplate" Value="{DynamicResource {dxrudt:LWKey ReportDesigner.DefaultMessageBoxServiceTemplate}}" />
    </Style>
    <Style x:Key="XRControlParameterCollectionUITypeEditor.DefaultStyleBase" BasedOn="{StaticResource SingleSelectionCollectionEditor.DefaultStyleBase}" TargetType="{x:Type dxrude:XRControlParameterCollectionUITypeEditor}" />
    <Style x:Key="ColorizerKeysCollectionUITypeEditor.DefaultStyleBase" BasedOn="{StaticResource SingleSelectionCollectionEditor.DefaultStyleBase}" TargetType="{x:Type dxrude:ColorizerKeysCollectionUITypeEditor}">
        <Setter Property="AddNewDialogServiceTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dx:DialogService>
                            <dx:DialogService.DialogStyle>
                                <Style TargetType="dx:ThemedWindow">
                                    <Setter Property="ResizeMode" Value="NoResize" />
                                    <Setter Property="SizeToContent" Value="WidthAndHeight" />
                                    <Setter Property="ShowInTaskbar" Value="False" />
                                </Style>
                            </dx:DialogService.DialogStyle>
                            <dx:DialogService.ViewTemplate>
                                <DataTemplate>
                                    <Grid Margin="12">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto" />
                                            <ColumnDefinition Width="12" />
                                            <ColumnDefinition Width="200" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <TextBlock VerticalAlignment="Center" Text="{dxrudl:ReportDesignerStringId StringId=KeyCollectionEditor_Type}" />
                                        <TextBlock Grid.Row="1" VerticalAlignment="Center" Text="{dxrudl:ReportDesignerStringId StringId=KeyCollectionEditor_Value}" />
                                        <dxe:ComboBoxEdit
                                            Grid.Column="2"
                                            DisplayMember="Value"
                                            EditValue="{Binding SelectedType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            IsTextEditable="False"
                                            ItemsSource="{x:Static dxrude:ColorizerKeysCollectionUITypeEditor+AddNewViewModel.Types}"
                                            SelectedIndex="0"
                                            ValueMember="Key" />
                                        <ContentControl
                                            Grid.Row="1"
                                            Grid.Column="2"
                                            Margin="0,4,0,0"
                                            Content="{Binding}"
                                            ContentTemplate="{Binding SelectedType, Converter={StaticResource colorTemplateSelector}}" />
                                    </Grid>
                                </DataTemplate>
                            </dx:DialogService.ViewTemplate>
                        </dx:DialogService>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemDetailedDescriptionTemplate" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxrude:ColorizerKeysCollectionUITypeEditor}">
                    <Grid>
                        <ContentControl
                            Grid.Row="0"
                            Grid.Column="0"
                            dxdiagi:CollectionEditorBase.Editor="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                            Content="{x:Null}"
                            ContentTemplate="{TemplateBinding ItemsControlTemplate}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FederatedQueryCollectionEditor.DefaultStyleBase" BasedOn="{StaticResource QueryCollectionEditorBase.DefaultStyleBase}" TargetType="dxrude:FederatedQueryCollectionEditor">
        <Setter Property="ItemsListTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxg:GridControl Name="PART_Items" Style="{StaticResource ItemsGridControlStyle}">
                        <dxg:GridControl.Columns>
                            <dxg:GridColumn
                                Width="*"
                                AllowFocus="False"
                                Binding="{Binding RowData.Row.Alias, Mode=TwoWay}"
                                CellTemplate="{StaticResource gridColumnNameCellTemplate}">
                                <dxmvvm:Interaction.Behaviors>
                                    <dxmvvm:EventToCommand Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).ValidateQueryNameCommand, RelativeSource={RelativeSource TemplatedParent}}" EventName="Validate" PassEventArgsToCommand="True" />
                                </dxmvvm:Interaction.Behaviors>
                            </dxg:GridColumn>
                        </dxg:GridControl.Columns>
                        <dxg:GridControl.View>
                            <dxrudi:TableViewEx Style="{StaticResource _itemListTableViewStyle}" />
                        </dxg:GridControl.View>
                    </dxg:GridControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemDetailedDescriptionTemplate">
            <Setter.Value>
                <DataTemplate>
                    <datafederation:QueryBuilderControl Model="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).QueryEditContext.ViewModel, RelativeSource={RelativeSource Self}}" UseLayoutRounding="True" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ReportThemeSelector.DefaultStyleBase" TargetType="{x:Type dxrudex:ReportThemeSelector}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxrudex:ReportThemeSelector}">
                    <dxco:Wizard>
                        <dxmvvm:Interaction.Behaviors>
                            <dxmvvm:EventToCommand Command="{Binding ViewLoadedCommand}" EventName="Loaded" />
                            <dxco:WizardService>
                                <dxco:WizardService.ViewTemplateSelector>
                                    <dxrudex:ReportWizardPageTemplateSelector>
                                        <dxrudex:ReportWizardPageTemplateSelector.ThemePageTemplate>
                                            <DataTemplate>
                                                <DockPanel Margin="13">
                                                    <TextBlock
                                                        Margin="0,0,0,5"
                                                        HorizontalAlignment="Center"
                                                        DockPanel.Dock="Top"
                                                        Text="{dxp:PrintingStringId StringId=ReportManagerServiceWizard_SelectTheme}" />
                                                    <dxe:ListBoxEdit
                                                        Padding="10"
                                                        BorderThickness="0"
                                                        DockPanel.Dock="Top"
                                                        ItemsSource="{Binding Themes}"
                                                        ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                                        SelectedItem="{Binding SelectedTheme, RelativeSource={RelativeSource AncestorType=dxrudex:ReportThemeSelector}, Mode=TwoWay}">
                                                        <dxe:ListBoxEdit.ItemsPanel>
                                                            <ItemsPanelTemplate>
                                                                <WrapPanel />
                                                            </ItemsPanelTemplate>
                                                        </dxe:ListBoxEdit.ItemsPanel>
                                                        <dxe:ListBoxEdit.ItemTemplate>
                                                            <DataTemplate>
                                                                <dx:DXBorder
                                                                    Width="160"
                                                                    Height="150"
                                                                    Margin="7"
                                                                    BorderBrush="#55555555"
                                                                    BorderThickness="1">
                                                                    <Grid ClipToBounds="True">
                                                                        <TextBlock
                                                                            Margin="5,0,0,0"
                                                                            HorizontalAlignment="Left"
                                                                            VerticalAlignment="Top"
                                                                            FontSize="22"
                                                                            Text="{Binding Theme.Name}" />
                                                                        <ContentPresenter
                                                                            Width="280"
                                                                            Margin="-100,0,0,10"
                                                                            VerticalAlignment="Bottom"
                                                                            Content="{Binding}"
                                                                            ContentTemplate="{StaticResource PreviewTemplate}" />
                                                                    </Grid>
                                                                </dx:DXBorder>
                                                            </DataTemplate>
                                                        </dxe:ListBoxEdit.ItemTemplate>
                                                    </dxe:ListBoxEdit>
                                                    <dx:DialogFooter>
                                                        <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                                            <dxco:WizardButton dxco:Wizard.IsButtonBack="True" Content="Back" />
                                                            <dxco:WizardButton dxco:Wizard.IsButtonNext="True" Content="Next" />
                                                            <dxco:WizardButton Margin="20,0,0,0" dxco:Wizard.IsButtonFinish="True" Content="Finish" />
                                                        </StackPanel>
                                                    </dx:DialogFooter>
                                                </DockPanel>
                                            </DataTemplate>
                                        </dxrudex:ReportWizardPageTemplateSelector.ThemePageTemplate>

                                        <dxrudex:ReportWizardPageTemplateSelector.PageSetupPageTemplate>
                                            <DataTemplate>
                                                <DockPanel Margin="13">
                                                    <dx:DialogFooter>
                                                        <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                                            <dxco:WizardButton dxco:Wizard.IsButtonBack="True" Content="Back" />
                                                            <dxco:WizardButton dxco:Wizard.IsButtonNext="True" Content="Next" />
                                                            <dxco:WizardButton Margin="20,0,0,0" dxco:Wizard.IsButtonFinish="True" Content="Finish" />
                                                        </StackPanel>
                                                    </dx:DialogFooter>
                                                    <TextBlock
                                                        Margin="0,0,0,5"
                                                        HorizontalAlignment="Center"
                                                        DockPanel.Dock="Top"
                                                        Text="Select Page Options" />
                                                    <StackPanel Width="250" DockPanel.Dock="Left">
                                                        <GroupBox Header="{dxp:PrintingStringId StringId=ReportManagerServiceWizard_Paper}">
                                                            <dxlc:LayoutControl Padding="0" ItemSpace="5" Orientation="Vertical">
                                                                <dxlc:LayoutItem Label="{dxp:PrintingStringId StringId=ReportManagerServiceWizard_PaperSize}">
                                                                    <dxe:ComboBoxEdit
                                                                        DisplayMember="Name"
                                                                        EditValue="{Binding SelectedPageFormat, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                        IsTextEditable="False"
                                                                        ItemsSource="{Binding PageFormats}" />
                                                                </dxlc:LayoutItem>
                                                                <dxlc:LayoutItem Label="{dxp:PrintingStringId StringId=ReportManagerServiceWizard_ReportUnits}">
                                                                    <dxe:ComboBoxEdit
                                                                        DisplayMember="Name"
                                                                        EditValue="{Binding SelectedUnit, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                        IsTextEditable="False"
                                                                        ItemsSource="{Binding Units}" />
                                                                </dxlc:LayoutItem>
                                                            </dxlc:LayoutControl>
                                                        </GroupBox>
                                                        <GroupBox Margin="0,10,0,0" Header="{dxp:PrintingStringId StringId=ReportManagerServiceWizard_PageOrientation}">
                                                            <dxlc:LayoutControl Padding="0" ItemSpace="5" Orientation="Vertical">
                                                                <RadioButton Content="{dxp:PrintingStringId StringId=PageSetupOrientationPortrait}" GroupName="OrientationRadioGroup" IsChecked="{Binding IsVertical, Mode=TwoWay}" />
                                                                <RadioButton Content="{dxp:PrintingStringId StringId=PageSetupOrientationLandscape}" GroupName="OrientationRadioGroup" IsChecked="{Binding IsHorizontal, Mode=TwoWay}" />
                                                            </dxlc:LayoutControl>
                                                        </GroupBox>
                                                    </StackPanel>
                                                    <GroupBox Margin="10,0,0,0">
                                                        <Grid Width="{Binding Width}" Height="{Binding Height}">
                                                            <dx:DXBorder Margin="12,12,0,0" Background="Gray" />
                                                            <dx:DXBorder
                                                                Margin="0,0,12,12"
                                                                Padding="15"
                                                                Background="White"
                                                                BorderBrush="Black"
                                                                BorderThickness="1">
                                                                <dx:DXBorder.Resources>
                                                                    <Style TargetType="Border">
                                                                        <Setter Property="BorderBrush" Value="Black" />
                                                                    </Style>
                                                                </dx:DXBorder.Resources>
                                                                <Grid>
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition Height="10" />
                                                                        <RowDefinition Height="10" />
                                                                        <RowDefinition Height="10" />
                                                                        <RowDefinition Height="10" />
                                                                    </Grid.RowDefinitions>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition />
                                                                        <ColumnDefinition />
                                                                        <ColumnDefinition />
                                                                    </Grid.ColumnDefinitions>
                                                                    <dx:DXBorder Grid.Row="0" Grid.Column="0" BorderThickness="1,1,0,0" />
                                                                    <dx:DXBorder Grid.Row="0" Grid.Column="1" BorderThickness="1,1,0,0" />
                                                                    <dx:DXBorder Grid.Row="0" Grid.Column="2" BorderThickness="1,1,1,0" />

                                                                    <dx:DXBorder Grid.Row="1" Grid.Column="0" BorderThickness="1,1,0,0" />
                                                                    <dx:DXBorder Grid.Row="1" Grid.Column="1" BorderThickness="1,1,0,0" />
                                                                    <dx:DXBorder Grid.Row="1" Grid.Column="2" BorderThickness="1,1,1,0" />

                                                                    <dx:DXBorder Grid.Row="2" Grid.Column="0" BorderThickness="1,1,0,0" />
                                                                    <dx:DXBorder Grid.Row="2" Grid.Column="1" BorderThickness="1,1,0,0" />
                                                                    <dx:DXBorder Grid.Row="2" Grid.Column="2" BorderThickness="1,1,1,0" />

                                                                    <dx:DXBorder Grid.Row="3" Grid.Column="0" BorderThickness="1,1,0,1" />
                                                                    <dx:DXBorder Grid.Row="3" Grid.Column="1" BorderThickness="1,1,0,1" />
                                                                    <dx:DXBorder Grid.Row="3" Grid.Column="2" BorderThickness="1,1,1,1" />
                                                                </Grid>
                                                            </dx:DXBorder>
                                                        </Grid>
                                                    </GroupBox>
                                                </DockPanel>
                                            </DataTemplate>
                                        </dxrudex:ReportWizardPageTemplateSelector.PageSetupPageTemplate>
                                    </dxrudex:ReportWizardPageTemplateSelector>
                                </dxco:WizardService.ViewTemplateSelector>
                            </dxco:WizardService>
                        </dxmvvm:Interaction.Behaviors>
                    </dxco:Wizard>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ImageResourcesCollectionUITypeEditor.DefaultStyleBase" BasedOn="{StaticResource SingleSelectionCollectionEditor.DefaultStyleBase}" TargetType="dxrude:ImageResourcesCollectionUITypeEditor">
        <Setter Property="OpenFileDialogServiceTemplate" Value="{DynamicResource {dxrudt:LWKey ReportDesigner.DefaultOpenFileDialogServiceTemplate}}" />
        <Setter Property="MessageBoxServiceTemplate" Value="{DynamicResource {dxrudt:LWKey ReportDesigner.DefaultMessageBoxServiceTemplate}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxrude:ImageResourcesCollectionUITypeEditor">
                    <Grid dx:ScrollBarExtensions.ScrollBarMode="TouchOverlap">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <dxb:ToolBarControl
                            AllowCustomizationMenu="False"
                            AllowQuickCustomization="False"
                            GlyphSize="Small"
                            ShowDragWidget="False">
                            <dxb:BarButtonItem Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).AddItemCommand, RelativeSource={RelativeSource Self}}" Content="{dxrudl:ReportDesignerStringId StringId=ImageResourcesEditor_AddImage}" Glyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource Images/SVG/Add.svg}}" />
                            <dxb:BarEditItem Name="searchItem" EditValue="{Binding Filter, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" EditWidth="200">
                                <dxb:BarEditItem.EditTemplate>
                                    <DataTemplate>
                                        <dxe:ButtonEdit AllowDefaultButton="False" NullText="Enter text to search..." NullValueButtonPlacement="EditBox">
                                            <dxe:ButtonInfo GlyphKind="Search" IsEnabled="False" Visibility="{Binding IsNullTextVisible, Converter={dxmvvm:BooleanToVisibilityConverter}, RelativeSource={RelativeSource AncestorType=dxe:ButtonEdit}}" />
                                        </dxe:ButtonEdit>
                                    </DataTemplate>
                                </dxb:BarEditItem.EditTemplate>
                            </dxb:BarEditItem>
                        </dxb:ToolBarControl>
                        <dxe:ListBoxEdit
                            Grid.Row="1"
                            HorizontalContentAlignment="Stretch"
                            Grid.IsSharedSizeScope="True"
                            ItemsSource="{TemplateBinding EditableCollectionModel}"
                            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                            SelectedItem="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}}"
                            ShowBorder="False"
                            TextSearch.Text="{Binding Filter, RelativeSource={RelativeSource TemplatedParent}}"
                            TextSearch.TextPath="Id">
                            <dxmvvm:Interaction.Behaviors>
                                <dxrudi:ImageResourceListBoxFilterCriteriaBehavior />
                            </dxmvvm:Interaction.Behaviors>
                            <dxe:ListBoxEdit.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <dxdai:AlignWrapPanel HorizontalAlignment="Left" HorizontalContentAlignment="Stretch" />
                                </ItemsPanelTemplate>
                            </dxe:ListBoxEdit.ItemsPanel>
                            <dxe:ListBoxEdit.ItemTemplate>
                                <DataTemplate>
                                    <Grid Margin="4,4,4,4">
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition Height="auto" SharedSizeGroup="itemHeidth" />
                                        </Grid.RowDefinitions>
                                        <dxrude:DesignerWinImageEdit
                                            Height="150"
                                            Margin="0,0,0,4"
                                            VerticalAlignment="Top"
                                            EditValue="{Binding ImageSource}"
                                            ImageSizeMode="{x:Static xpd:ImageSizeMode.Squeeze}"
                                            IsReadOnly="{Binding IsSelected, Converter={dx:NegationConverter}, RelativeSource={RelativeSource AncestorType={x:Type dxe:ListBoxEditItem}}}" />
                                        <ContentControl Grid.Column="1" Content="{Binding}" ContentTemplate="{StaticResource removeCollectionItemButtonTemplate}" />
                                        <Grid Grid.Row="1">
                                            <TextBlock
                                                VerticalAlignment="Center"
                                                Text="{Binding Id}"
                                                TextAlignment="Center"
                                                Visibility="{Binding IsSelected, Converter={dxmvvm:BooleanToVisibilityConverter HiddenInsteadOfCollapsed=True, Inverse=True}, RelativeSource={RelativeSource AncestorType={x:Type dxe:ListBoxEditItem}}}" />
                                            <dxe:TextEdit
                                                Name="idEdit"
                                                HorizontalContentAlignment="Center"
                                                Background="Transparent"
                                                IsTabStop="False"
                                                Text="{Binding Id}"
                                                Visibility="{Binding IsSelected, Converter={dxmvvm:BooleanToVisibilityConverter HiddenInsteadOfCollapsed=True}, RelativeSource={RelativeSource AncestorType={x:Type dxe:ListBoxEditItem}}}" />
                                        </Grid>
                                    </Grid>

                                </DataTemplate>
                            </dxe:ListBoxEdit.ItemTemplate>
                            <dxe:ListBoxEdit.ItemContainerStyle>
                                <Style TargetType="FrameworkElement">
                                    <Setter Property="Margin" Value="4" />
                                    <Setter Property="MinWidth" Value="212" />
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                </Style>
                            </dxe:ListBoxEdit.ItemContainerStyle>
                        </dxe:ListBoxEdit>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RangeStopsCollectionUITypeEditor.DefaultStyleBase" TargetType="dxrude:RangeStopsCollectionUITypeEditor">
        <Setter Property="Margin" Value="12,12,12,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxrude:RangeStopsCollectionUITypeEditor">
                    <dxrude:DialogEditorView>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <dxb:ToolBarControl Style="{StaticResource collectionEditorToolBarStyle}">
                                <dxb:BarButtonItem
                                    BarItemDisplayMode="ContentAndGlyph"
                                    Command="{Binding AddNewCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                    Content="{dxrudl:ReportDesignerStringId StringId=Add}"
                                    Glyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Add.svg'}}"
                                    LargeGlyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Add.svg'}}" />
                            </dxb:ToolBarControl>
                            <dxg:GridControl
                                Grid.Row="1"
                                AutoGenerateColumns="AddNew"
                                ItemsSource="{Binding Items, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                SelectedItem="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}">
                                <dxg:GridControl.Columns>
                                    <dxg:GridColumn FieldName="Value" Width="*" AllowEditing="True">
                                        <dxg:GridColumn.CellTemplate>
                                            <DataTemplate>
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition />
                                                        <ColumnDefinition Width="auto" />
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock VerticalAlignment="Center" Text="{Binding Value}" TextTrimming="CharacterEllipsis" />
                                                    <Button
                                                        Name="PART_RemoveButton"
                                                        Grid.Column="1"
                                                        Command="{Binding RemoveCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                                        Style="{StaticResource collectionEditorGridRowRemoveButtonStyle}" />
                                                </Grid>
                                            </DataTemplate>
                                        </dxg:GridColumn.CellTemplate>
                                    </dxg:GridColumn>
                                </dxg:GridControl.Columns>
                                <dxg:GridControl.View>
                                    <dxg:TableView
                                        AllowGrouping="False"
                                        AutoWidth="True"
                                        NavigationStyle="Cell"
                                        ShowColumnHeaders="False"
                                        ShowGroupPanel="False"
                                        ShowHorizontalLines="False"
                                        ShowVerticalLines="False" />
                                </dxg:GridControl.View>
                            </dxg:GridControl>
                        </Grid>
                    </dxrude:DialogEditorView>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DataSourceQueryFilterStringEditor.DefaultStyleBase" TargetType="{x:Type dxrude:DataSourceQueryFilterStringEditor}">
        <Setter Property="Template" Value="{dxdai:FilterStringEditorControlTemplateSelector LegacyTemplate={StaticResource legacyTemplate}, Template={StaticResource filterEditorTemplate}}" />
        <Setter Property="MessageBoxServiceTemplate" Value="{DynamicResource {dxrudt:LWKey ReportDesigner.DefaultMessageBoxServiceTemplate}}" />
        <Setter Property="SplashScreenServiceTemplate" Value="{DynamicResource {dxrudt:LWKey ReportDesigner.DefaultSplashScreenServiceTemplate}}" />
    </Style>
    <Style x:Key="DialogEditorView.DefaultStyleBase" TargetType="dxrude:DialogEditorView">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxrude:DialogEditorView">
                    <Grid dxpn:GridExtensions.RowDefinitions="*, auto">
                        <ContentPresenter />
                        <dx:ThemedWindowDialogButtonsControl Name="PART_Footer" Grid.Row="1">
                            <dxrudi:LocalizedDialogButton Command="{Binding Path=(dxrude:ReportDesignerDialogControlBase.Editor).SaveCommand, RelativeSource={RelativeSource Self}}" DialogResult="OK" />
                            <dxrudi:LocalizedDialogButton DialogResult="Cancel" />
                        </dx:ThemedWindowDialogButtonsControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ColorUITypeEditor.DefaultStyleBase" TargetType="{x:Type dxrude:ColorUITypeEditor}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxrude:ColorUITypeEditor}">
                    <dx:DXTabControl
                        Margin="0,4,0,0"
                        Padding="0"
                        ItemsSource="{dxrude:ColorTypesProvider}"
                        SelectedItem="{Binding SelectedColorType, RelativeSource={RelativeSource TemplatedParent}}"
                        ItemTemplateSelector="{StaticResource templateSelector}">
                        <dx:DXTabControl.ItemHeaderTemplate>
                            <DataTemplate>
                                <TextBlock
                                    VerticalAlignment="Center"
                                    Text="{Binding Converter={dxrudei:ColorTypeToDisplayNameConverter}}"
                                    TextAlignment="Left"
                                    TextTrimming="CharacterEllipsis" />
                            </DataTemplate>
                        </dx:DXTabControl.ItemHeaderTemplate>
                    </dx:DXTabControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PdfSecurityOptionsUITypeEditor.DefaultStyleBase" TargetType="{x:Type dxrude:PdfSecurityOptionsUITypeEditor}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxrude:PdfSecurityOptionsUITypeEditor}">
                    <dxrude:DialogEditorView>
                        <dxlc:LayoutControl Padding="12,12,12,0" Orientation="Vertical">
                            <dxlc:LayoutGroup Orientation="Vertical" Style="{StaticResource LayoutGroupWithInvisibleStandardGroupBoxWithMargins}">
                                <dxlc:LayoutItem>
                                    <dxe:CheckEdit Content="Require a password to open the document" EditValue="{Binding RequirePassword, RelativeSource={RelativeSource TemplatedParent}}" />
                                </dxlc:LayoutItem>
                                <dxlc:LayoutItem Padding="50,0,0,0" Label="Document Open Password:">
                                    <dxe:PasswordBoxEdit x:Name="passwordEdit" EditValue="{Binding OpenPassword, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{TemplateBinding RequirePassword}" />
                                </dxlc:LayoutItem>
                            </dxlc:LayoutGroup>
                            <dxlc:LayoutGroup Header="Permissions" Orientation="Vertical" Style="{StaticResource LayoutGroupWithStandardGroupBoxWithMargins}">
                                <dxlc:LayoutItem>
                                    <dxe:CheckEdit Content="Restrict editing and printing of the document" EditValue="{Binding AllowRestrict, RelativeSource={RelativeSource TemplatedParent}}" />
                                </dxlc:LayoutItem>
                                <dxlc:LayoutGroup Padding="0" IsEnabled="{TemplateBinding AllowRestrict}" Orientation="Vertical">
                                    <dxlc:LayoutItem Label="Change Permissions Password:">
                                        <dxe:PasswordBoxEdit HorizontalAlignment="Right" dxrudi:LayoutControlHelper.WidthSource="{Binding ElementName=passwordEdit}" EditValue="{Binding PermissionsPassword, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" />
                                    </dxlc:LayoutItem>
                                    <dxlc:LayoutItem Label="Printing Allowed:">
                                        <dxe:ComboBoxEdit
                                            HorizontalAlignment="Right"
                                            dxrudi:LayoutControlHelper.WidthSource="{Binding ElementName=passwordEdit}"
                                            EditValue="{Binding PrintingPermissions, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                            IsTextEditable="False"
                                            ItemsSource="{dxe:EnumItemsSource EnumType=xpc:PrintingPermissions, NameConverter={dxrudi:PrintingPermissionsDisplayNameConverter}}" />
                                    </dxlc:LayoutItem>
                                    <dxlc:LayoutItem Label="Changes Allowed:">
                                        <dxe:ComboBoxEdit
                                            HorizontalAlignment="Right"
                                            dxrudi:LayoutControlHelper.WidthSource="{Binding ElementName=passwordEdit}"
                                            EditValue="{Binding ChangingPermissions, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                            IsTextEditable="False"
                                            ItemsSource="{dxe:EnumItemsSource EnumType=xpc:ChangingPermissions, NameConverter={dxrudi:ChangingPermissionsDisplayNameConverter}}" />
                                    </dxlc:LayoutItem>
                                    <dxlc:LayoutGroup Orientation="Vertical">
                                        <dxlc:LayoutItem>
                                            <dxe:CheckEdit Content="Enable copying of text, images, and other content" EditValue="{Binding EnableCopying, RelativeSource={RelativeSource TemplatedParent}}" />
                                        </dxlc:LayoutItem>
                                        <dxlc:LayoutItem>
                                            <dxe:CheckEdit Content="Enable text access for screen reader devices for the visually impaired" EditValue="{Binding EnableScreenReaders, RelativeSource={RelativeSource TemplatedParent}}" />
                                        </dxlc:LayoutItem>
                                    </dxlc:LayoutGroup>
                                </dxlc:LayoutGroup>
                            </dxlc:LayoutGroup>
                            <dxlc:LayoutGroup Orientation="Vertical" Style="{StaticResource LayoutGroupWithInvisibleStandardGroupBoxWithMargins}">
                                <dxlc:LayoutItem AddColonToLabel="True" Label="Encryption Level">
                                    <dxlc:LayoutItem.IsEnabled>
                                        <MultiBinding Converter="{dxrudi:OrMultiConverter}">
                                            <Binding Path="RequirePassword" RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Path="AllowRestrict" RelativeSource="{RelativeSource TemplatedParent}" />
                                        </MultiBinding>
                                    </dxlc:LayoutItem.IsEnabled>
                                    <dxe:ComboBoxEdit
                                        HorizontalAlignment="Right"
                                        dxrudi:LayoutControlHelper.WidthSource="{Binding ElementName=passwordEdit}"
                                        EditValue="{Binding EncryptionLevel, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                        IsTextEditable="False"
                                        ItemsSource="{dxe:EnumItemsSource EnumType=xpc:PdfEncryptionLevel, NameConverter={dxrudi:EnumNameConverter}}" />
                                </dxlc:LayoutItem>
                            </dxlc:LayoutGroup>
                        </dxlc:LayoutControl>
                    </dxrude:DialogEditorView>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ReportFilterStringEditor.DefaultStyleBase" TargetType="dxrude:ReportFilterStringEditor">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxrude:ReportFilterStringEditor">
                    <Grid>
                        <dxe:FilterControl
                            x:Name="PART_FilterControl"
                            FilterCriteria="{Binding FilterCriteria, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            ShowOperandTypeIcon="True"
                            SourceControl="{TemplateBinding SourceControl}">
                            <dxe:FilterControl.Resources>
                                <Style TargetType="{x:Type dxe1:FilterControlClauseNode}">
                                    <Setter Property="SecondOperandsOneTemplate" Value="{DynamicResource {dxdat:LWKey FilterStringEditor.OneElementsInSecondOperandTemplate}}" />
                                    <Setter Property="SecondOperandsTwoTemplate" Value="{DynamicResource {dxdat:LWKey FilterStringEditor.TwoElementsInSecondOperandTemplate}}" />
                                    <Setter Property="SecondOperandsSeveralTemplate" Value="{DynamicResource {dxdat:LWKey FilterStringEditor.SeveralElementsInSecondOperandTemplate}}" />
                                </Style>
                            </dxe:FilterControl.Resources>
                        </dxe:FilterControl>
                        <dx:DialogFooter>
                            <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                <dx:DialogButton Command="{Binding ApplyFilterCommand, ElementName=PART_FilterControl}" DialogResult="OK" />
                                <dx:DialogButton DialogResult="Cancel" />
                            </StackPanel>
                        </dx:DialogFooter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PivotGridPrefilterEditor.DefaultStyleBase" TargetType="dxrude:PivotGridPrefilterEditor">
        <Setter Property="Template" Value="{dxdai:FilterStringEditorControlTemplateSelector LegacyTemplate={StaticResource pivotPrefilterLegacy}, Template={StaticResource template}}" />

    </Style>
    <Style x:Key="FilterStringEditorWithSourceControl.DefaultStyleBase" TargetType="{x:Type dxrude:FilterStringEditorWithSourceControl}">
        <Setter Property="Template" Value="{dxdai:FilterStringEditorControlTemplateSelector LegacyTemplate={StaticResource legacyFilterControlTemplate}, Template={StaticResource filterControlTemplate}}" />
    </Style>
    <Style x:Key="ExpressionEditorFieldListControl.DefaultStyleBase" TargetType="dxrudfli:ExpressionEditorFieldListControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxrudfli:ExpressionEditorFieldListControl">
                    <Grid>
                        <Grid.Resources>
                            <Style x:Key="{dxrudt:LWKey ReportDesigner.FieldListNodeBehaviorTemplate}" TargetType="{x:Type dxg:TreeListColumn}">
                                <Setter Property="CellStyle">
                                    <Setter.Value>
                                        <Style>
                                            <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
                                                <Setter.Value>
                                                    <DataTemplate>
                                                        <ItemsControl>
                                                            <dxrudfli:ExecuteCommandOnNodeClickBehavior DoubleClickCommand="{Binding NodesDoubleClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=dxrudfli:ExpressionEditorFieldListControl}}" Parameter="{Binding RowData.Row}" SingleClickCommand="{Binding NodesClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=dxrudfli:ExpressionEditorFieldListControl}}" />
                                                        </ItemsControl>
                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <Style x:Key="{dxrudt:LWKey ReportDesigner.FieldListViewStyle}" BasedOn="{StaticResource ReportDesignerFielsListControlStyleWithSearchPanel}" TargetType="{x:Type dxg:TreeListView}">
                                <Setter Property="ChildNodesSelector" Value="{Binding ChildNodesSelector, RelativeSource={RelativeSource FindAncestor, AncestorType=dxrudfli:ExpressionEditorFieldListControl}}" />
                            </Style>
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <dxg:GridSearchControl
                            Name="PART_SearchControl"
                            Margin="0,0,0,5"
                            FindMode="Always"
                            NullText="Enter text to search..."
                            SearchTextPostDelay="0"
                            ShowCloseButton="False"
                            ShowFindButton="False"
                            ShowMRUButton="False"
                            ShowSearchPanelMode="Always"
                            ShowSearchPanelNavigationButtons="False" />
                        <dxg:TreeListControl
                            Grid.Row="1"
                            dx:DXSerializer.SerializationID="FieldList"
                            ItemsSource="{TemplateBinding Nodes}"
                            SelectedItem="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            ShowBorder="True"
                            Style="{DynamicResource {dxrudt:LWKey ReportDesigner.FieldListStyle}}">
                            <dxg:TreeListControl.View>
                                <dxg:TreeListView
                                    ExpandStateBinding="{Binding IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    NavigationStyle="Row"
                                    SearchControl="{Binding ElementName=PART_SearchControl}"
                                    ShowDragDropHint="False"
                                    ShowSearchPanelMode="Never"
                                    Style="{DynamicResource {dxrudt:LWKey ReportDesigner.FieldListViewStyle}}">
                                    <dxmvvm:Interaction.Behaviors>
                                        <dxdai:ExpandTreeListNodeBehavior />
                                    </dxmvvm:Interaction.Behaviors>
                                </dxg:TreeListView>
                            </dxg:TreeListControl.View>
                            <dxg:TreeListControl.Columns>
                                <dxg:TreeListColumn FieldName="DisplayName" CellTemplate="{DynamicResource {dxrudt:LWKey ReportDesigner.FieldListNodeTemplate}}" Style="{DynamicResource {dxrudt:LWKey ReportDesigner.FieldListNodeBehaviorTemplate}}" />
                            </dxg:TreeListControl.Columns>
                            <dxmvvm:Interaction.Behaviors>
                                <dxdai:ScrollIntoSelectedRowBehavior />
                            </dxmvvm:Interaction.Behaviors>
                        </dxg:TreeListControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ReportDesignerDocumentationControl.DefaultStyleBase" BasedOn="{dx:TargetStaticResource DocumentationControl.DefaultStyleBase, TargetDictionary={dxi:ThemeResourceDictionary Path='ExpressionEditor/Generic.xaml'}}" TargetType="{x:Type dxrudei:ReportDesignerDocumentationControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxrudei:ReportDesignerDocumentationControl}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3*" MinWidth="90" />
                            <ColumnDefinition Width="5" />
                            <ColumnDefinition Width="10*" MinWidth="305" />
                        </Grid.ColumnDefinitions>
                        <dxeei:TreeViewEx
                            CurrentItem="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                            ItemContainerStyle="{DynamicResource {dxeet:LWKey DocumentationControl.TreeViewItemStyle}}"
                            ItemsSource="{TemplateBinding Items}"
                            Style="{DynamicResource {dxeet:LWKey DocumentationControl.TreeViewStyle}}">
                            <TreeView.ItemTemplate>
                                <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                                    <TextBlock Margin="0,0,4,0" Text="{Binding DisplayName}" />
                                </HierarchicalDataTemplate>
                            </TreeView.ItemTemplate>
                        </dxeei:TreeViewEx>
                        <GridSplitter
                            Grid.Column="1"
                            Width="5"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Stretch"
                            Background="Transparent" />
                        <ContentControl Grid.Column="2" Content="{TemplateBinding SelectedItem}" ContentTemplateSelector="{dxrudei:ItemsPickerTemplateSelector}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="DescriptionBlockTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxeei:DocumentationRichEditControl
                        x:Name="PART_Description"
                        Margin="-2"
                        ActiveViewType="Simple"
                        HorizontalScrollBarVisibility="Collapsed"
                        ReadOnly="True"
                        VerticalScrollBarVisibility="Collapsed">
                        <dxeei:HtmlTextExtensions.HtmlText>
                            <MultiBinding Converter="{dxrudi:SelectedOperatorToDescriptionConverter}">
                                <Binding Path="(dxeei:DocumentationControl.Editor).SelectedOperatorInfo" RelativeSource="{RelativeSource Self}" />
                                <Binding Path="(dxrudei:ReportDesignerExpressionEditorControlBase.Editor).SelectedItem" RelativeSource="{RelativeSource Self}" />
                                <Binding Path="(dxrudei:ReportDesignerExpressionEditorControlBase.Editor).Context.ColorProvider" RelativeSource="{RelativeSource Self}" />
                            </MultiBinding>
                        </dxeei:HtmlTextExtensions.HtmlText>
                    </dxeei:DocumentationRichEditControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ReportDesignerExpressionEditorControlBase.DefaultStyleBase" BasedOn="{dx:TargetStaticResource ExpressionEditor.DefaultStyle, TargetDictionary={dxi:ThemeResourceDictionary Path='ExpressionEditor/Generic.xaml'}}" TargetType="{x:Type dxrudei:ReportDesignerExpressionEditorControlBase}">
        <Setter Property="DocumentationControlTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxrudei:ReportDesignerDocumentationControl>
                        <dxrudei:ReportDesignerDocumentationControl.Resources>
                            <Thickness x:Key="{dxgt:LWKey TableView.SearchPanelWithoutGroupedPanelMargin}">0,0,0,5</Thickness>
                            <Thickness x:Key="{dxgt:LWKey TableView.SearchPanelWithGroupedPanelMargin}">0,0,0,5</Thickness>
                        </dxrudei:ReportDesignerDocumentationControl.Resources>
                    </dxrudei:ReportDesignerDocumentationControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FormatStringUITypeEditor.DefaultStyleBase" TargetType="dxrude:FormatStringUITypeEditor">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxrude:FormatStringUITypeEditor">
                    <dxrude:DialogEditorView>
                        <dxlc:LayoutControl Orientation="Horizontal">
                            <dxlc:LayoutGroup
                                Width="125"
                                Margin="0,0,6,0"
                                HorizontalAlignment="Left"
                                Orientation="Vertical">
                                <dxlc:LayoutItem VerticalAlignment="Stretch" Label="{dxrudl:ReportDesignerStringId StringId=FormatStringEditor_Category}" LabelPosition="Top">
                                    <dxe:ListBoxEdit DisplayMember="Name" EditValue="{Binding SelectedCategory, RelativeSource={RelativeSource TemplatedParent}}" ItemsSource="{TemplateBinding Categories}" />
                                </dxlc:LayoutItem>
                            </dxlc:LayoutGroup>

                            <dxlc:LayoutGroup
                                Grid.Column="1"
                                MinWidth="320"
                                Margin="6,0,0,0"
                                SelectedTabIndex="{Binding IsCustomFormats, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                View="Tabs">

                                <dxlc:LayoutGroup Header="{dxrudl:ReportDesignerStringId StringId=FormatStringEditor_StandardFormats}" Orientation="Vertical">
                                    <dxlc:LayoutGroup.Resources>
                                        <dxmvvm:BooleanToObjectConverter x:Key="generalFormatTemplateConverter">
                                            <dxmvvm:BooleanToObjectConverter.TrueValue>
                                                <DataTemplate>
                                                    <dxlc:LayoutGroup>
                                                        <dxlc:LayoutItem Label="Prefix:" LabelPosition="Top">
                                                            <dxe:TextEdit EditValue="{Binding GeneralFormatPrefix, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType=dxrude:FormatStringUITypeEditor}}" />
                                                        </dxlc:LayoutItem>
                                                        <dxlc:LayoutItem Label="Sufix:" LabelPosition="Top">
                                                            <dxe:TextEdit EditValue="{Binding GeneralFormatSuffix, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType=dxrude:FormatStringUITypeEditor}}" />
                                                        </dxlc:LayoutItem>
                                                    </dxlc:LayoutGroup>
                                                </DataTemplate>
                                            </dxmvvm:BooleanToObjectConverter.TrueValue>
                                            <dxmvvm:BooleanToObjectConverter.FalseValue>
                                                <DataTemplate>
                                                    <dxe:ListBoxEdit EditValue="{Binding SelectedStandardFormat, RelativeSource={RelativeSource AncestorType=dxrude:FormatStringUITypeEditor}}" ItemsSource="{Binding SelectedCategory.StandardFormats, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxrude:FormatStringUITypeEditor}}" />
                                                </DataTemplate>
                                            </dxmvvm:BooleanToObjectConverter.FalseValue>
                                        </dxmvvm:BooleanToObjectConverter>
                                    </dxlc:LayoutGroup.Resources>
                                    <dxlc:LayoutGroup VerticalAlignment="Stretch">
                                        <ContentControl Content="{Binding}" ContentTemplate="{Binding IsGeneralCategorySelected, Converter={StaticResource generalFormatTemplateConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </dxlc:LayoutGroup>
                                    <dxlc:LayoutGroup HorizontalAlignment="Stretch" VerticalAlignment="Bottom">
                                        <dxlc:LayoutItem
                                            Margin="0,9,0,0"
                                            HorizontalAlignment="Stretch"
                                            HorizontalContentAlignment="Center"
                                            Label="{dxrudl:ReportDesignerStringId StringId=FormatStringEditor_Sample}">
                                            <TextBlock Text="{TemplateBinding SampleText}" />
                                        </dxlc:LayoutItem>
                                    </dxlc:LayoutGroup>
                                </dxlc:LayoutGroup>

                                <dxlc:LayoutGroup Header="{dxrudl:ReportDesignerStringId StringId=FormatStringEditor_CustomFormats}" Orientation="Vertical">
                                    <dxlc:LayoutGroup.Resources>
                                        <dxmvvm:BooleanToObjectConverter x:Key="generalFormatTemplateConverter">
                                            <dxmvvm:BooleanToObjectConverter.TrueValue>
                                                <DataTemplate>
                                                    <dxlc:LayoutItem VerticalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Center">
                                                        <TextBlock Text="{dxrudl:ReportDesignerStringId StringId=FormatStringEditor_NotSupported}" />
                                                    </dxlc:LayoutItem>
                                                </DataTemplate>
                                            </dxmvvm:BooleanToObjectConverter.TrueValue>
                                            <dxmvvm:BooleanToObjectConverter.FalseValue>
                                                <DataTemplate>
                                                    <dxlc:LayoutGroup Orientation="Vertical">
                                                        <dxlc:LayoutItem VerticalAlignment="Stretch">
                                                            <dxe:ListBoxEdit EditValue="{Binding SelectedCustomFormat, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxrude:FormatStringUITypeEditor}}" ItemsSource="{Binding SelectedCategory.CustomFormats, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxrude:FormatStringUITypeEditor}}">
                                                                <dxe:ListBoxEdit.ItemContainerStyle>
                                                                    <Style TargetType="dxe:ListBoxEditItem">
                                                                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                                                                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                                                        <Setter Property="ContentTemplate">
                                                                            <Setter.Value>
                                                                                <DataTemplate>
                                                                                    <Grid HorizontalAlignment="Stretch">
                                                                                        <Grid.ColumnDefinitions>
                                                                                            <ColumnDefinition Width="*" />
                                                                                            <ColumnDefinition Width="auto" />
                                                                                        </Grid.ColumnDefinitions>
                                                                                        <TextBlock Text="{Binding}" />
                                                                                        <Button
                                                                                            Grid.Column="1"
                                                                                            Command="{Binding RemoveFormatCommand, RelativeSource={RelativeSource AncestorType=dxrude:FormatStringUITypeEditor}}"
                                                                                            CommandParameter="{Binding}"
                                                                                            Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Self}, Converter={dx:BooleanToVisibilityConverter}}">
                                                                                            <Button.Template>
                                                                                                <ControlTemplate>
                                                                                                    <dx:DXImage Source="{dx:SvgImageSource Uri={dx:ReportDesignerResource Images/Svg/Remove.svg}}" />
                                                                                                </ControlTemplate>
                                                                                            </Button.Template>
                                                                                        </Button>
                                                                                    </Grid>
                                                                                </DataTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </dxe:ListBoxEdit.ItemContainerStyle>
                                                            </dxe:ListBoxEdit>
                                                        </dxlc:LayoutItem>
                                                        <dxlc:LayoutGroup VerticalAlignment="Bottom" Orientation="Vertical">
                                                            <dxlc:LayoutGroup Orientation="Horizontal">
                                                                <dxlc:LayoutItem HorizontalAlignment="Stretch">
                                                                    <dxe:TextEdit Name="newFormatEdit" EditValue="{Binding NewFormat, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxrude:FormatStringUITypeEditor}}" />
                                                                </dxlc:LayoutItem>
                                                                <dxlc:LayoutItem HorizontalAlignment="Right" VerticalAlignment="Stretch" VerticalContentAlignment="Stretch">
                                                                    <Button
                                                                        Grid.Column="1"
                                                                        Padding="12,0"
                                                                        VerticalAlignment="Stretch"
                                                                        Command="{Binding AddFormatCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxrude:FormatStringUITypeEditor}}"
                                                                        Content="Add" />
                                                                </dxlc:LayoutItem>
                                                            </dxlc:LayoutGroup>
                                                            <dxlc:LayoutItem
                                                                Margin="0,9,0,0"
                                                                HorizontalAlignment="Stretch"
                                                                VerticalAlignment="Bottom"
                                                                HorizontalContentAlignment="Center"
                                                                Label="{dxrudl:ReportDesignerStringId StringId=FormatStringEditor_Sample}">
                                                                <TextBlock Text="{Binding SampleText, RelativeSource={RelativeSource AncestorType=dxrude:FormatStringUITypeEditor}}" />
                                                            </dxlc:LayoutItem>
                                                        </dxlc:LayoutGroup>
                                                    </dxlc:LayoutGroup>
                                                </DataTemplate>
                                            </dxmvvm:BooleanToObjectConverter.FalseValue>
                                        </dxmvvm:BooleanToObjectConverter>
                                    </dxlc:LayoutGroup.Resources>
                                    <dxlc:LayoutItem VerticalAlignment="Stretch">
                                        <ContentControl Content="{Binding}" ContentTemplate="{Binding IsGeneralCategorySelected, Converter={StaticResource generalFormatTemplateConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </dxlc:LayoutItem>
                                </dxlc:LayoutGroup>
                            </dxlc:LayoutGroup>
                        </dxlc:LayoutControl>
                    </dxrude:DialogEditorView>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BordersUITypeEditor.DefaultStyleBase" TargetType="dxrude:BordersUITypeEditor">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxrude:BordersUITypeEditor">
                    <Grid Width="180" Height="120">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="4*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <ToggleButton
                            Grid.ColumnSpan="3"
                            Background="White"
                            Command="{Binding SelectBordersCommand, RelativeSource={RelativeSource TemplatedParent}}"
                            CommandParameter="{x:Static xpd:BorderSide.Top}"
                            IsChecked="{Binding EditValue, RelativeSource={RelativeSource TemplatedParent}, Converter={dxrudi:BorderSideToBooleanConverter Border={x:Static xpd:BorderSide.Top}}, Mode=OneWay}" />
                        <ToggleButton
                            Grid.Row="1"
                            Grid.RowSpan="2"
                            Background="White"
                            Command="{Binding SelectBordersCommand, RelativeSource={RelativeSource TemplatedParent}}"
                            CommandParameter="{x:Static xpd:BorderSide.Left}"
                            IsChecked="{Binding EditValue, RelativeSource={RelativeSource TemplatedParent}, Converter={dxrudi:BorderSideToBooleanConverter Border={x:Static xpd:BorderSide.Left}}, Mode=OneWay}" />
                        <Button
                            Grid.Row="1"
                            Grid.Column="1"
                            Command="{Binding SelectBordersCommand, RelativeSource={RelativeSource TemplatedParent}}"
                            CommandParameter="{x:Static xpd:BorderSide.All}"
                            Content="All" />
                        <Button
                            Grid.Row="2"
                            Grid.Column="1"
                            Command="{Binding SelectBordersCommand, RelativeSource={RelativeSource TemplatedParent}}"
                            CommandParameter="{x:Static xpd:BorderSide.None}"
                            Content="None" />
                        <ToggleButton
                            Grid.Row="1"
                            Grid.RowSpan="2"
                            Grid.Column="2"
                            Background="White"
                            Command="{Binding SelectBordersCommand, RelativeSource={RelativeSource TemplatedParent}}"
                            CommandParameter="{x:Static xpd:BorderSide.Right}"
                            IsChecked="{Binding EditValue, RelativeSource={RelativeSource TemplatedParent}, Converter={dxrudi:BorderSideToBooleanConverter Border={x:Static xpd:BorderSide.Right}}, Mode=OneWay}" />
                        <ToggleButton
                            Grid.Row="3"
                            Grid.ColumnSpan="3"
                            Background="White"
                            Command="{Binding SelectBordersCommand, RelativeSource={RelativeSource TemplatedParent}}"
                            CommandParameter="{x:Static xpd:BorderSide.Bottom}"
                            IsChecked="{Binding EditValue, RelativeSource={RelativeSource TemplatedParent}, Converter={dxrudi:BorderSideToBooleanConverter Border={x:Static xpd:BorderSide.Bottom}}, Mode=OneWay}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="InplaceEditorPicker.DefaultStyleBase" TargetType="dxrude:InplaceEditorPicker">
        <Setter Property="dxrude:InplaceEditorPicker.Editor" Value="{Binding RelativeSource={RelativeSource Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxrude:InplaceEditorPicker">
                    <dx:DXTabControl
                        ItemContainerStyle="{StaticResource TabItemStyle}"
                        ItemHeaderTemplate="{StaticResource TabItemHeaderTemplate}"
                        ItemTemplate="{StaticResource TabItemContentTemplate}"
                        ItemsSource="{Binding InplaceEditorItemsSource.Groups, RelativeSource={RelativeSource TemplatedParent}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SubBandCollectionUITypeEditor.DefaultStyleBase" BasedOn="{StaticResource SingleSelectionCollectionEditor.DefaultStyleBase}" TargetType="{x:Type dxrude:SubBandCollectionUITypeEditor}" />
    <Style x:Key="BandCollectionUITypeEditor.DefaultStyleBase" BasedOn="{StaticResource SingleSelectionCollectionEditor.DefaultStyleBase}" TargetType="{x:Type dxrude:BandCollectionUITypeEditor}">
        <Setter Property="ItemsControlWidth" Value="220" />
        <Setter Property="ActionButtonsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxb:ToolBarControl
                        AllowCustomizationMenu="False"
                        AllowQuickCustomization="False"
                        GlyphSize="{dxrudi:ThemeGlyphSize}"
                        ShowBackground="False"
                        ShowDragWidget="False">
                        <dxb:BarSplitButtonItem
                            ActAsDropDown="True"
                            BarItemDisplayMode="ContentAndGlyph"
                            Content="{dxrudl:ReportDesignerStringId StringId=Add}"
                            Glyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Add.svg'}}"
                            LargeGlyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Add.svg'}}">
                            <dxb:BarSplitButtonItem.PopupControl>
                                <dxb:PopupMenu>
                                    <dxb:PopupMenu.Resources>
                                        <Style x:Key="ActionMenuItem" TargetType="{x:Type dxb:BarSubItem}">
                                            <Setter Property="ItemTemplate" Value="{StaticResource BandDropDownTemplate}" />
                                        </Style>
                                        <Style x:Key="InsertBands" BasedOn="{StaticResource ActionMenuItem}" TargetType="dxb:BarSubItem">
                                            <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.InsertBand}" />
                                            <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=InsertBand}" />
                                            <Setter Property="ItemLinksSource">
                                                <Setter.Value>
                                                    <MultiBinding Converter="{dxrudi:AddBandsPopupItemsConverter}">
                                                        <Binding Path="(dxdiagi:CollectionEditorBase.Editor).AddBandCommand" RelativeSource="{RelativeSource Self}" />
                                                        <Binding Path="(dxdiagi:CollectionEditorBase.Editor).SelectedBandModel.Band" RelativeSource="{RelativeSource Self}" />
                                                    </MultiBinding>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>

                                        <Style x:Key="InsertVerticalBands" BasedOn="{StaticResource ActionMenuItem}" TargetType="dxb:BarSubItem">
                                            <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.InsertVerticalBand}" />
                                            <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=InsertVerticalBand}" />
                                            <Setter Property="ItemLinksSource">
                                                <Setter.Value>
                                                    <MultiBinding Converter="{dxrudi:AddVerticalBandsPopupItemsConverter}">
                                                        <Binding Path="(dxdiagi:CollectionEditorBase.Editor).AddBandCommand" RelativeSource="{RelativeSource Self}" />
                                                        <Binding Path="(dxdiagi:CollectionEditorBase.Editor).SelectedBandModel.Band" RelativeSource="{RelativeSource Self}" />
                                                    </MultiBinding>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                        <Style x:Key="InsertDetailReportBands" TargetType="dxb:BarSubItem">
                                            <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.InsertDetailReport}" />
                                            <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=InsertDetailReport}" />
                                            <Setter Property="ItemLinksSource">
                                                <Setter.Value>
                                                    <MultiBinding Converter="{dxrudi:AddDetailReportBandsPopupItemsConverter}">
                                                        <Binding Path="(dxdiagi:CollectionEditorBase.Editor).ReportModel.SelectedModel.XRObjectBase" RelativeSource="{RelativeSource Self}" />
                                                        <Binding Path="(dxdiagi:CollectionEditorBase.Editor).ReportModel.Diagram" RelativeSource="{RelativeSource Self}" />
                                                        <Binding Path="(dxdiagi:CollectionEditorBase.Editor).AddBandCommand" RelativeSource="{RelativeSource Self}" />
                                                    </MultiBinding>
                                                </Setter.Value>
                                            </Setter>

                                            <Setter Property="ItemTemplateSelector">
                                                <Setter.Value>
                                                    <dxrudi:RelationNamesMenuItemTemplateSelector ItemTemplate="{StaticResource BandDropDownTemplate}">
                                                        <dxrudi:RelationNamesMenuItemTemplateSelector.SeparatorTemplate>
                                                            <DataTemplate>
                                                                <ContentControl>
                                                                    <dxb:BarItemSeparator />
                                                                </ContentControl>
                                                            </DataTemplate>
                                                        </dxrudi:RelationNamesMenuItemTemplateSelector.SeparatorTemplate>
                                                    </dxrudi:RelationNamesMenuItemTemplateSelector>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </dxb:PopupMenu.Resources>

                                    <dxb:PopupMenu.Items>

                                        <dxb:BarButtonItem
                                            Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).AddBandCommand, RelativeSource={RelativeSource Self}}"
                                            CommandParameter="SubBand"
                                            Content="{dxrudl:ReportDesignerStringId StringId=AddSubBand}"
                                            Glyph="{dxrudi:ComponentIcon Type={x:Type reportsui:SubBand}}" />

                                        <dxb:BarSubItem Style="{StaticResource InsertBands}" />
                                        <dxb:BarSubItem Style="{StaticResource InsertVerticalBands}" />
                                        <dxb:BarSubItem Style="{StaticResource InsertDetailReportBands}" />
                                    </dxb:PopupMenu.Items>
                                </dxb:PopupMenu>
                            </dxb:BarSplitButtonItem.PopupControl>
                        </dxb:BarSplitButtonItem>
                        <dxb:BarButtonItem
                            Alignment="Far"
                            Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).MoveUpCommand, RelativeSource={RelativeSource Self}}"
                            Glyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Misc/ArrowUp.svg'}}"
                            LargeGlyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Misc/ArrowUp.svg'}}" />
                        <dxb:BarButtonItem
                            Alignment="Far"
                            Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).MoveDownCommand, RelativeSource={RelativeSource Self}}"
                            Glyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Misc/ArrowDown.svg'}}"
                            LargeGlyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Misc/ArrowDown.svg'}}" />
                    </dxb:ToolBarControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemsListTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxg:GridControl
                        x:Name="Part_Grid"
                        ItemsSource="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).BandModelCollection, RelativeSource={RelativeSource Self}, UpdateSourceTrigger=PropertyChanged}"
                        SelectedItem="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).SelectedBandModel, RelativeSource={RelativeSource Self}, Mode=TwoWay}"
                        ShowBorder="True">
                        <dxg:GridControl.View>
                            <dxg:TreeListView
                                AutoWidth="True"
                                ChildNodesPath="Children"
                                HorizontalScrollbarVisibility="Auto"
                                NavigationStyle="Row"
                                ShowColumnHeaders="False"
                                ShowHorizontalLines="False"
                                ShowIndicator="False"
                                ShowVerticalLines="False"
                                TreeDerivationMode="ChildNodesSelector"
                                VerticalScrollbarVisibility="Auto">
                                <dxmvvm:Interaction.Behaviors>
                                    <dxdai:ExpandTreeListNodeBehavior />
                                    <dxrudi:BandsSortByWeightBehavior />
                                </dxmvvm:Interaction.Behaviors>
                            </dxg:TreeListView>
                        </dxg:GridControl.View>
                        <dxg:GridControl.Columns>
                            <dxg:GridColumn FieldName="Weight" SortMode="Custom">
                                <dxg:GridColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid Opacity="{Binding RowData.Row.IsPlaceHolder, Converter={dxrudi:IsPlaceHolderNodeToOpacityConverter}}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto" />
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="auto" />
                                            </Grid.ColumnDefinitions>
                                            <dx:DXImage
                                                Width="{dxrudi:ThemeImageSize Size=16, TouchThemeSize=32}"
                                                Height="{dxrudi:ThemeImageSize Size=16, TouchThemeSize=32}"
                                                Margin="0,0,5,0"
                                                VerticalAlignment="Center"
                                                Source="{Binding RowData.Row.Band.Icon}"
                                                Stretch="Fill" />
                                            <TextBlock Grid.Column="1" VerticalAlignment="Center" TextTrimming="CharacterEllipsis">
                                                <Run Text="{Binding RowData.Row.Band.ControlName}" />
                                                <Run>
                                                    <Run.Text>
                                                        <MultiBinding Converter="{dxrudi:BandToLevelPropertyConverter}">
                                                            <Binding Path="RowData.Row.Band.XRObjectBase" />
                                                            <Binding Path="RowData.Row.Band.Level" />
                                                            <Binding Path="RowData.Row" />
                                                        </MultiBinding>
                                                    </Run.Text>
                                                </Run>
                                            </TextBlock>
                                            <Button
                                                Name="PART_RemoveButton"
                                                Grid.Column="2"
                                                Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).RemoveCommand, RelativeSource={RelativeSource Self}}"
                                                Style="{StaticResource collectionEditorGridRowRemoveButtonStyle}" />
                                        </Grid>
                                    </DataTemplate>
                                </dxg:GridColumn.CellTemplate>
                            </dxg:GridColumn>
                        </dxg:GridControl.Columns>
                    </dxg:GridControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="XRTableOfContentsLevelCollectionEditor.DefaultStyleBase" BasedOn="{StaticResource SingleSelectionCollectionEditor.DefaultStyleBase}" TargetType="{x:Type dxrude:XRTableOfContentsLevelCollectionEditor}">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="Table Of Contents Level" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RecipientCollectionUITypeEditor.DefaultStyleBase" BasedOn="{dx:TargetStaticResource ExtendedSelectionCollectionEditor.DefaultStyleBase, TargetDictionary={dxi:ThemeResourceDictionary Path='Diagram/Generic.xaml'}}" TargetType="{x:Type dxrude:RecipientCollectionUITypeEditor}">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SeriesViewUITypeEditor.DefaultStyleBase" TargetType="{x:Type dxrude:SeriesViewUITypeEditor}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxrude:SeriesViewUITypeEditor}">
                    <dxrude:DialogEditorView>
                        <dxe:ListBoxEdit
                            MaxWidth="700"
                            Margin="12,12,12,0"
                            EditValue="{Binding SelectedViewType, RelativeSource={RelativeSource TemplatedParent}}"
                            Grid.IsSharedSizeScope="True"
                            ItemsSource="{Binding SeriesViews, RelativeSource={RelativeSource TemplatedParent}}"
                            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                            ValueMember="Value">
                            <dxe:ListBoxEdit.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="Column" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" SharedSizeGroup="Text" />
                                        </Grid.RowDefinitions>
                                        <dx:DXImage Width="Auto" Height="Auto" Source="{Binding Icon}" />
                                        <TextBlock
                                            Grid.Row="1"
                                            MaxWidth="70"
                                            MaxHeight="40"
                                            Text="{Binding Caption}"
                                            TextAlignment="Center"
                                            TextTrimming="CharacterEllipsis"
                                            TextWrapping="Wrap" />
                                    </Grid>
                                </DataTemplate>
                            </dxe:ListBoxEdit.ItemTemplate>
                            <dxe:ListBoxEdit.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel />
                                </ItemsPanelTemplate>
                            </dxe:ListBoxEdit.ItemsPanel>
                        </dxe:ListBoxEdit>
                    </dxrude:DialogEditorView>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ChartTitleCollectionUITypeEditor.DefaultStyleBase" BasedOn="{StaticResource SingleSelectionCollectionEditor.DefaultStyleBase}" TargetType="{x:Type dxrude:ChartTitleCollectionUITypeEditor}">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding Text}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DataFilterCollectionUITypeEditor.DefaultStyleBase" BasedOn="{StaticResource SingleSelectionCollectionEditor.DefaultStyleBase}" TargetType="dxrude:DataFilterCollectionUITypeEditor">
        <Setter Property="ItemsControlHeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxe:ListBoxEdit
                        Margin="0,0,0,4"
                        EditValue="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).ConjunctionMode, RelativeSource={RelativeSource Self}, UpdateSourceTrigger=PropertyChanged}"
                        ItemsSource="{dxe:EnumItemsSource EnumType=xtracharts:ConjunctionTypes, NameConverter={dxrudi:EnumToDisplayNameConverter}}"
                        ShowBorder="False"
                        StyleSettings="{dxe:RadioListBoxEditStyleSettings}">

                        <dxe:ListBoxEdit.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Margin="10,0,10,0" Text="{Binding}" />
                            </DataTemplate>
                        </dxe:ListBoxEdit.ItemTemplate>
                        <dxe:ListBoxEdit.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </dxe:ListBoxEdit.ItemsPanel>
                    </dxe:ListBoxEdit>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="XRPivotGridFieldCollectionUITypeEditor.DefaultStyleBase" BasedOn="{StaticResource SingleSelectionCollectionEditor.DefaultStyleBase}" TargetType="{x:Type dxrude:XRPivotGridFieldCollectionUITypeEditor}" />
    <Style x:Key="SeriesCollectionUITypeEditor.DefaultStyleBase" BasedOn="{StaticResource SingleSelectionCollectionEditor.DefaultStyleBase}" TargetType="{x:Type dxrude:SeriesCollectionUITypeEditor}">
        <Setter Property="ItemsControlWidth" Value="280" />
        <Setter Property="SeriesViewTypeEditorTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dx:DialogService DialogWindowStartupLocation="CenterOwner">
                            <dx:DialogService.DialogStyle>
                                <Style BasedOn="{StaticResource CustomFooterThemedWindowDialogStyle}" TargetType="dx:ThemedWindow">
                                    <Setter Property="SizeToContent" Value="WidthAndHeight" />
                                    <Setter Property="ResizeMode" Value="CanMinimize" />
                                </Style>
                            </dx:DialogService.DialogStyle>
                            <dx:DialogService.ViewTemplate>
                                <DataTemplate>
                                    <dxrude:SeriesViewUITypeEditor EditValue="{Binding ViewType}" />
                                </DataTemplate>
                            </dx:DialogService.ViewTemplate>
                        </dx:DialogService>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ActionButtonsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxb:ToolBarControl>
                        <dxb:BarButtonItem
                            BarItemDisplayMode="ContentAndGlyph"
                            Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).AddItemCommand, RelativeSource={RelativeSource Self}}"
                            Content="{dxrudl:ReportDesignerStringId StringId=Add}"
                            Glyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Add.svg'}}"
                            LargeGlyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Add.svg'}}" />
                        <dxb:BarButtonItem
                            BarItemDisplayMode="ContentAndGlyph"
                            Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).CopySeriesCommand, RelativeSource={RelativeSource Self}}"
                            Content="{dxrudl:ReportDesignerStringId StringId=Copy}"
                            Glyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/EditGroup/Copy.svg'}}"
                            LargeGlyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/EditGroup/Copy.svg'}}" />
                        <dxb:BarButtonItem
                            Alignment="Far"
                            Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).MoveUpCommand, RelativeSource={RelativeSource Self}}"
                            Glyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Misc/ArrowUp.svg'}}"
                            LargeGlyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Misc/ArrowUp.svg'}}" />
                        <dxb:BarButtonItem
                            Alignment="Far"
                            Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).MoveDownCommand, RelativeSource={RelativeSource Self}}"
                            Glyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Misc/ArrowDown.svg'}}"
                            LargeGlyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Misc/ArrowDown.svg'}}" />
                    </dxb:ToolBarControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemDetailedDescriptionTemplateWrapper">
            <Setter.Value>
                <DataTemplate>
                    <dx:DXTabControl Padding="0">
                        <dx:DXTabItem Header="Properties">
                            <ContentControl Content="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).SelectedItem, RelativeSource={RelativeSource Self}}" ContentTemplate="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).ItemDetailedDescriptionTemplate, RelativeSource={RelativeSource Self}}">
                                <ContentControl.Resources>
                                    <Style TargetType="dxprg:PropertyGridControl">
                                        <Setter Property="BorderThickness" Value="0,1,0,0" />
                                    </Style>
                                </ContentControl.Resources>
                            </ContentControl>
                        </dx:DXTabItem>
                        <dx:DXTabItem Header="Points">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <dxb:ToolBarControl>
                                    <dxb:BarButtonItem
                                        BarItemDisplayMode="ContentAndGlyph"
                                        Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).AddPointCommand, RelativeSource={RelativeSource Self}}"
                                        Content="Add Point"
                                        Glyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Add.svg'}}"
                                        LargeGlyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Add.svg'}}" />
                                </dxb:ToolBarControl>
                                <dxg:GridControl Grid.Row="1" Margin="-1,0,-1,-1" ItemsSource="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).Points, RelativeSource={RelativeSource Self}}">
                                    <dxg:GridControl.Columns>
                                        <dxg:GridColumn Binding="{Binding RowData.Row.Argument, Mode=TwoWay}" Header="Argument" />
                                        <dxg:GridColumn Binding="{Binding RowData.Row.Values, Mode=TwoWay, Converter={dxrudei:PointValueCollectionToSingleValueConverter}}" EditSettings="{dxe:TextSettings HorizontalContentAlignment=Left}" Header="Value" />
                                        <dxg:GridColumn
                                            Binding="{Binding RowData.Row.Color, Mode=TwoWay}"
                                            EditSettings="{dxe:PopupColorEditSettings}"
                                            FixedWidth="True"
                                            Header="Color" />
                                        <dxg:GridColumn FixedWidth="True" Header="Annotations">
                                            <dxg:GridColumn.CellTemplate>
                                                <DataTemplate>
                                                    <dxe:ButtonEdit x:Name="PART_Editor" AllowDefaultButton="False" ShowText="False">
                                                        <dxe:ButtonEdit.Buttons>
                                                            <dxe:ButtonInfo GlyphKind="Regular">
                                                                <dxmvvm:Interaction.Behaviors>
                                                                    <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" Value="{Binding RowData.Row.Annotations}">
                                                                        <dxe:DialogServiceEditorBehavior.Content>
                                                                            <MultiBinding Converter="{dxrudi:SeriesPointAnnotationEditorDataConverter}">
                                                                                <Binding Path="AssociatedObject.(xrdiagram:XtraReportDiagramItem.ReportModel)" RelativeSource="{RelativeSource Self}" />
                                                                                <Binding Path="RowData.Row" />
                                                                            </MultiBinding>
                                                                        </dxe:DialogServiceEditorBehavior.Content>
                                                                        <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                                                            <DataTemplate>
                                                                                <ContentControl>
                                                                                    <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                                                        <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                                                            <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="{x:Type dx:ThemedWindow}">
                                                                                                <Setter Property="Width" Value="600" />
                                                                                                <Setter Property="Height" Value="350" />
                                                                                                <Setter Property="MinWidth" Value="420" />
                                                                                                <Setter Property="MinHeight" Value="240" />
                                                                                                <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=Chart_AnnotationsEditor_Title}" />
                                                                                            </Style>
                                                                                        </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                                                        <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                                                            <DataTemplate>
                                                                                                <dxrude:AnnotationCollectionUITypeEditor AnnotatedComponent="{Binding Content.SelectedComponent}" EditValue="{Binding Content.Value}" ReportModel="{Binding Content.ReportDiagramItem}" />
                                                                                            </DataTemplate>
                                                                                        </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                                                    </dxrudi:UITypeEditorDialogService>
                                                                                </ContentControl>
                                                                            </DataTemplate>
                                                                        </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                                                    </dxe:DialogServiceEditorBehavior>
                                                                </dxmvvm:Interaction.Behaviors>
                                                            </dxe:ButtonInfo>
                                                        </dxe:ButtonEdit.Buttons>
                                                    </dxe:ButtonEdit>
                                                </DataTemplate>
                                            </dxg:GridColumn.CellTemplate>
                                        </dxg:GridColumn>
                                    </dxg:GridControl.Columns>
                                    <dxg:GridControl.View>
                                        <dxg:TableView AllowEditing="True" AutoWidth="True" ShowGroupPanel="False" />
                                    </dxg:GridControl.View>
                                </dxg:GridControl>
                            </Grid>
                        </dx:DXTabItem>
                    </dx:DXTabControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="XRPivotGridCustomTotalCollectionEditor.DefaultStyleBase" BasedOn="{StaticResource SingleSelectionCollectionEditor.DefaultStyleBase}" TargetType="dxrude:XRPivotGridCustomTotalCollectionEditor">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding SummaryType}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ParameterBindingCollectionUITypeEditor.DefaultStyleBase" BasedOn="{StaticResource SingleSelectionCollectionEditor.DefaultStyleBase}" TargetType="{x:Type dxrude:ParameterBindingCollectionUITypeEditor}">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock TextTrimming="CharacterEllipsis" ToolTip="{Binding Text, RelativeSource={RelativeSource Self}}">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0}: {1}">
                                <Binding Source="{dxrudl:ReportDesignerStringId StringId=ParameterBindingsEditor_ParameterBinding}" />
                                <Binding Path="ParameterName" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ActionButtonsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxb:ToolBarControl>
                        <dxb:BarButtonItem
                            BarItemDisplayMode="ContentAndGlyph"
                            Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).SyncCommand, RelativeSource={RelativeSource Self}}"
                            Content="{dxrudl:ReportDesignerStringId StringId=ParameterBindingsEditor_Sync}"
                            Glyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/ReportGallery/RefreshGallery.svg'}}"
                            LargeGlyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/ReportGallery/RefreshGallery.svg'}}" />
                        <dxb:BarButtonItem
                            BarItemDisplayMode="ContentAndGlyph"
                            Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).AddItemCommand, RelativeSource={RelativeSource Self}}"
                            Content="{dxrudl:ReportDesignerStringId StringId=Add}"
                            Glyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Add.svg'}}"
                            LargeGlyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Add.svg'}}" />
                    </dxb:ToolBarControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GroupFieldCollectionUITypeEditor.DefaultStyleBase" BasedOn="{StaticResource SingleSelectionCollectionEditor.DefaultStyleBase}" TargetType="{x:Type dxrude:GroupFieldCollectionUITypeEditor}">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock TextTrimming="CharacterEllipsis" ToolTip="{Binding FieldName}">
                        <Run Text="GroupField" />
                        <TextBlock Text=" - " Visibility="{Binding FieldName, Converter={dxrudi:ObjectToVisibilityConverter}}" />
                        <Run Text="{Binding FieldName}" />
                    </TextBlock>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CalculatedFieldCollectionUITypeEditor.DefaultStyleBase" BasedOn="{StaticResource SingleSelectionCollectionEditor.DefaultStyleBase}" TargetType="{x:Type dxrude:CalculatedFieldCollectionUITypeEditor}" />
    <Style x:Key="FormattingRulesUITypeEditor.DefaultStyleBase" BasedOn="{StaticResource SingleSelectionCollectionEditor.DefaultStyleBase}" TargetType="dxrude:FormattingRulesUITypeEditor">
        <Setter Property="ItemsListTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxe:ListBoxEdit
                        DisplayMember="Name"
                        EditValue="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).SelectedFormattingRuleSheetItem, RelativeSource={RelativeSource Self}, UpdateSourceTrigger=PropertyChanged}"
                        ItemsSource="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).FormattingRuleSheet, RelativeSource={RelativeSource Self}}"
                        SelectionMode="Single" />
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ActionButtonsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxb:ToolBarControl>
                        <dxb:BarButtonItem
                            BarItemDisplayMode="ContentAndGlyph"
                            Content="{dxrudl:ReportDesignerStringId StringId=FormattingRulesEditor_EditRuleSheet}"
                            Glyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Containers/FormattingRuleContainer.svg'}}"
                            LargeGlyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Containers/FormattingRuleContainer.svg'}}">
                            <dxmvvm:Interaction.Behaviors>
                                <dxe:DialogServiceEditorBehavior
                                    Commands="{Binding Path=AssociatedObject.(dxdiagi:CollectionEditorBase.Editor).UICommandContainerCollection, RelativeSource={RelativeSource Self}}"
                                    Content="{Binding Path=AssociatedObject.(dxdiagi:CollectionEditorBase.Editor).ReportModel, RelativeSource={RelativeSource Self}}"
                                    DialogServiceTemplate="{DynamicResource {dxrudt:LWKey ReportDesignerDialog.FormattingRuleSheetDialogServiceTemplate}}"
                                    Value="{Binding Path=AssociatedObject.(dxdiagi:CollectionEditorBase.Editor).ReportModel.PropertiesModel[FormattingRuleSheet], RelativeSource={RelativeSource Self}}" />
                            </dxmvvm:Interaction.Behaviors>
                        </dxb:BarButtonItem>
                    </dxb:ToolBarControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="NavigationPanelTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" SharedSizeGroup="ToolBarRow" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <StackPanel Grid.Row="1" Orientation="Vertical">
                            <StackPanel.Resources>
                                <Style BasedOn="{StaticResource ImageOpacityTrigger}" TargetType="dx:DXImage" />
                                <Style TargetType="Button">
                                    <Setter Property="Padding" Value="0" />
                                </Style>
                            </StackPanel.Resources>
                            <Button Margin="4,0,4,4" Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).MoveRightCommand, RelativeSource={RelativeSource Self}}">
                                <dx:DXImage Source="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Misc/RightDirection.svg'}}" />
                            </Button>
                            <Button Margin="4,0,4,8" Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).MoveAllRightCommand, RelativeSource={RelativeSource Self}}">
                                <dx:DXImage Source="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Misc/DoubleRightDirection.svg'}}" />
                            </Button>
                            <Button Margin="4,0,4,4" Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).MoveLeftCommand, RelativeSource={RelativeSource Self}}">
                                <dx:DXImage Source="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Misc/LeftDirection.svg'}}" />
                            </Button>
                            <Button Margin="4,0,4,0" Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).MoveAllLeftCommand, RelativeSource={RelativeSource Self}}">
                                <dx:DXImage Source="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Misc/DoubleLeftDirection.svg'}}" />
                            </Button>
                        </StackPanel>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemDetailedDescriptionTemplateWrapper">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" SharedSizeGroup="ToolBarRow" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <dxb:ToolBarControl>
                            <dxb:BarStaticItem Content="{dxrudl:ReportDesignerStringId StringId=FormattingRulesEditor_AppliedRules}" />
                            <dxb:BarButtonItem
                                Alignment="Far"
                                Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).MoveUpCommand, RelativeSource={RelativeSource Self}}"
                                Glyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Misc/ArrowUp.svg'}}"
                                LargeGlyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Misc/ArrowUp.svg'}}" />
                            <dxb:BarButtonItem
                                Alignment="Far"
                                Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).MoveDownCommand, RelativeSource={RelativeSource Self}}"
                                Glyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Misc/ArrowDown.svg'}}"
                                LargeGlyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Misc/ArrowDown.svg'}}" />
                        </dxb:ToolBarControl>
                        <dxe:ListBoxEdit
                            Grid.Row="1"
                            EditValue="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).SelectedItem, RelativeSource={RelativeSource Self}}"
                            ItemsSource="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).EditableCollectionModel, RelativeSource={RelativeSource Self}}"
                            SelectionMode="Single" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="UseLayoutRounding" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxrude:FormattingRulesUITypeEditor">
                    <Grid Grid.IsSharedSizeScope="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <ContentControl
                            x:Name="PART_Items"
                            Width="{TemplateBinding ItemsControlWidth}"
                            Content="{x:Null}"
                            ContentTemplate="{TemplateBinding ItemsControlTemplate}" />
                        <ContentControl
                            x:Name="PART_NavigationButtons"
                            Grid.Row="0"
                            Grid.Column="1"
                            Margin="4,0"
                            Content="{x:Null}"
                            ContentTemplate="{TemplateBinding NavigationPanelTemplate}" />
                        <ContentControl
                            x:Name="PART_DetailedDescription"
                            Grid.Row="0"
                            Grid.Column="2"
                            Content="{x:Null}"
                            ContentTemplate="{TemplateBinding ItemDetailedDescriptionTemplateWrapper}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FormattingRuleSheetUITypeEditor.DefaultStyleBase" BasedOn="{StaticResource SingleSelectionCollectionEditor.DefaultStyleBase}" TargetType="{x:Type dxrude:FormattingRuleSheetUITypeEditor}">
        <Setter Property="MessageBoxServiceTemplate" Value="{DynamicResource {dxrudt:LWKey ReportDesigner.DefaultMessageBoxServiceTemplate}}" />
        <Setter Property="ActionButtonsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxb:ToolBarControl AllowCustomizationMenu="False" AllowQuickCustomization="False" GlyphSize="{dxrudi:ThemeGlyphSize}">
                        <dxb:BarButtonItem
                            Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).AddItemCommand, RelativeSource={RelativeSource Self}}"
                            Glyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Add.svg'}}"
                            Hint="{dxrudl:ReportDesignerStringId StringId=FormattingRuleSheetEditor_AddRule}"
                            LargeGlyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Add.svg'}}" />
                        <dxb:BarButtonItem
                            Alignment="Far"
                            Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).CloneFormattingRuleCommand, RelativeSource={RelativeSource Self}}"
                            Glyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/StyleRuleSheetEditor/Clone.svg'}}"
                            Hint="{dxrudl:ReportDesignerStringId StringId=FormattingRuleSheetEditor_CloneRule}"
                            LargeGlyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/StyleRuleSheetEditor/Clone.svg'}}" />
                        <dxb:BarButtonItem
                            Alignment="Far"
                            Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).ClearAllFormattingRulesCommand, RelativeSource={RelativeSource Self}}"
                            Glyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/StyleRuleSheetEditor/Clear.svg'}}"
                            Hint="{dxrudl:ReportDesignerStringId StringId=FormattingRuleSheetEditor_ClearRules}"
                            LargeGlyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/StyleRuleSheetEditor/Clear.svg'}}" />
                        <dxb:BarButtonItem
                            Alignment="Far"
                            Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).ClearUnusedFormattingRulesCommand, RelativeSource={RelativeSource Self}}"
                            Glyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/StyleRuleSheetEditor/Purge.svg'}}"
                            Hint="{dxrudl:ReportDesignerStringId StringId=FormattingRuleSheetEditor_DeleteUnusedRules}"
                            LargeGlyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/StyleRuleSheetEditor/Purge.svg'}}" />
                    </dxb:ToolBarControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="XRControlStyleSheetUITypeEditor.DefaultStyleBase" BasedOn="{StaticResource SingleSelectionCollectionEditor.DefaultStyleBase}" TargetType="dxrude:XRControlStyleSheetUITypeEditor">
        <Setter Property="OpenFileDialogServiceTemplate" Value="{DynamicResource {dxrudt:LWKey ReportDesigner.DefaultOpenFileDialogServiceTemplate}}" />
        <Setter Property="SaveFileDialogServiceTemplate" Value="{DynamicResource {dxrudt:LWKey ReportDesigner.DefaultSaveFileDialogServiceTemplate}}" />
        <Setter Property="MessageBoxServiceTemplate" Value="{DynamicResource {dxrudt:LWKey ReportDesigner.DefaultMessageBoxServiceTemplate}}" />
        <Setter Property="ItemsControlWidth" Value="220" />
        <Setter Property="ActionButtonsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxb:ToolBarControl>
                        <dxb:BarButtonItem
                            Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).AddItemCommand, RelativeSource={RelativeSource Self}}"
                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/Add.svg'}"
                            Hint="{dxrudl:ReportDesignerStringId StringId=StyleSheetEditor_AddStyle}"
                            LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/Add.svg'}" />
                        <dxb:BarButtonItem
                            Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).CloneStyleCommand, RelativeSource={RelativeSource Self}}"
                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/StyleRuleSheetEditor/Clone.svg'}"
                            Hint="{dxrudl:ReportDesignerStringId StringId=StyleSheetEditor_CloneStyle}"
                            LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/StyleRuleSheetEditor/Clone.svg'}" />
                        <dxb:BarButtonItem
                            Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).ClearCommand, RelativeSource={RelativeSource Self}}"
                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/StyleRuleSheetEditor/Clear.svg'}"
                            Hint="{dxrudl:ReportDesignerStringId StringId=StyleSheetEditor_ClearStyles}"
                            LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/StyleRuleSheetEditor/Clear.svg'}" />
                        <dxb:BarButtonItem
                            Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).ClearUnusedCommand, RelativeSource={RelativeSource Self}}"
                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/StyleRuleSheetEditor/Purge.svg'}"
                            Hint="{dxrudl:ReportDesignerStringId StringId=StyleSheetEditor_DeleteUnusedStyles}"
                            LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/StyleRuleSheetEditor/Purge.svg'}" />
                        <dxb:BarButtonItem
                            Alignment="Far"
                            Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).OpenStylesCommand, RelativeSource={RelativeSource Self}}"
                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/StyleRuleSheetEditor/Load.svg'}"
                            Hint="{dxrudl:ReportDesignerStringId StringId=StyleSheetEditor_LoadFromFile}"
                            LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/StyleRuleSheetEditor/Load.svg'}" />
                        <dxb:BarButtonItem
                            Alignment="Far"
                            Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).SaveStylesCommand, RelativeSource={RelativeSource Self}}"
                            Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/StyleRuleSheetEditor/Save.svg'}"
                            Hint="{dxrudl:ReportDesignerStringId StringId=StyleSheetEditor_SaveToFile}"
                            LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/StyleRuleSheetEditor/Save.svg'}" />
                    </dxb:ToolBarControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="XYDiagramPaneCollectionUITypeEditor.DefaultStyleBase" BasedOn="{StaticResource SingleSelectionCollectionEditor.DefaultStyleBase}" TargetType="{x:Type dxrude:XYDiagramPaneCollectionUITypeEditor}" />
    <Style x:Key="SecondaryAxisXCollectionUITypeEditor.DefaultStyleBase" BasedOn="{StaticResource SingleSelectionCollectionEditor.DefaultStyleBase}" TargetType="{x:Type dxrude:SecondaryAxisXCollectionUITypeEditor}" />
    <Style x:Key="SecondaryAxisYCollectionUITypeEditor.DefaultStyleBase" BasedOn="{StaticResource SingleSelectionCollectionEditor.DefaultStyleBase}" TargetType="{x:Type dxrude:SecondaryAxisYCollectionUITypeEditor}" />
    <Style x:Key="SwiftPlotDiagramSecondaryAxisXCollectionUITypeEditor.DefaultStyleBase" BasedOn="{StaticResource SingleSelectionCollectionEditor.DefaultStyleBase}" TargetType="{x:Type dxrude:SwiftPlotDiagramSecondaryAxisXCollectionUITypeEditor}" />
    <Style x:Key="SwiftPlotDiagramSecondaryAxisYCollectionUITypeEditor.DefaultStyleBase" BasedOn="{StaticResource SingleSelectionCollectionEditor.DefaultStyleBase}" TargetType="{x:Type dxrude:SwiftPlotDiagramSecondaryAxisYCollectionUITypeEditor}" />
    <Style x:Key="ScaleBreakCollectionUITypeEditor.DefaultStyleBase" BasedOn="{StaticResource SingleSelectionCollectionEditor.DefaultStyleBase}" TargetType="dxrude:ScaleBreakCollectionUITypeEditor" />
    <Style x:Key="StripCollectionUITypeEditor.DefaultStyleBase" BasedOn="{StaticResource SingleSelectionCollectionEditor.DefaultStyleBase}" TargetType="dxrude:StripCollectionUITypeEditor" />
    <Style x:Key="LegendCollectionUITypeEditor.DefaultStyleBase" BasedOn="{StaticResource SingleSelectionCollectionEditor.DefaultStyleBase}" TargetType="{x:Type dxrude:LegendCollectionUITypeEditor}" />
    <Style x:Key="ConstantLineCollectionUITypeEditor.DefaultStyleBase" BasedOn="{StaticResource SingleSelectionCollectionEditor.DefaultStyleBase}" TargetType="{x:Type dxrude:ConstantLineCollectionUITypeEditor}" />
    <Style x:Key="CustomAxisLabelCollectionUITypeEditor.DefaultStyleBase" BasedOn="{StaticResource SingleSelectionCollectionEditor.DefaultStyleBase}" TargetType="{x:Type dxrude:CustomAxisLabelCollectionUITypeEditor}" />
    <Style x:Key="PaletteCollectionUITypeEditor.DefaultStyleBase" BasedOn="{StaticResource SingleSelectionCollectionEditor.DefaultStyleBase}" TargetType="{x:Type dxrude:PaletteCollectionUITypeEditor}">
        <Style.Resources>
            <dxmvvm:BooleanToObjectConverter x:Key="BooleanToFontWeightConverter" FalseValue="Bold" TrueValue="Normal" />
        </Style.Resources>
        <Setter Property="OpenFileDialogServiceTemplate" Value="{DynamicResource {dxrudt:LWKey ReportDesigner.DefaultOpenFileDialogServiceTemplate}}" />
        <Setter Property="SaveFileDialogServiceTemplate" Value="{DynamicResource {dxrudt:LWKey ReportDesigner.DefaultSaveFileDialogServiceTemplate}}" />
        <Setter Property="ColorDialogServiceTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxrudei:ColorDialogUITypeEditor />
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsListTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxe:ListBoxEdit
                        Grid.Row="1"
                        Grid.Column="0"
                        EditValue="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).SelectedItem, RelativeSource={RelativeSource Self}, UpdateSourceTrigger=PropertyChanged}"
                        ItemsSource="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).EditableCollectionModel, RelativeSource={RelativeSource Self}}"
                        SelectionMode="Single">
                        <dxe:ListBoxEdit.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>
                                    <ContentControl Content="{Binding}" ContentTemplate="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).ItemTemplate, RelativeSource={RelativeSource Self}}" />
                                    <ContentControl Grid.Column="1" Content="{Binding}" ContentTemplate="{StaticResource removeCollectionItemButtonTemplate}" />
                                </Grid>
                            </DataTemplate>
                        </dxe:ListBoxEdit.ItemTemplate>
                        <dxe:ListBoxEdit.ItemContainerStyle>
                            <Style TargetType="{x:Type dxe:ListBoxEditItem}">
                                <Setter Property="FontWeight" Value="{Binding Predefined, Converter={StaticResource BooleanToFontWeightConverter}}" />
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            </Style>
                        </dxe:ListBoxEdit.ItemContainerStyle>
                    </dxe:ListBoxEdit>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ActionButtonsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxb:ToolBarControl>
                        <dxb:BarButtonItem
                            BarItemDisplayMode="ContentAndGlyph"
                            Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).AddItemCommand, RelativeSource={RelativeSource Self}}"
                            Content="{dxrudl:ReportDesignerStringId StringId=Add}"
                            Glyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Add.svg'}}"
                            LargeGlyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Add.svg'}}" />
                        <dxb:BarButtonItem
                            Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).CopyPaletteCommand, RelativeSource={RelativeSource Self}}"
                            Glyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/EditGroup/Copy.svg'}}"
                            Hint="{dxrudl:ReportDesignerStringId StringId=Copy}"
                            LargeGlyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/EditGroup/Copy.svg'}}" />
                        <dxb:BarButtonItem
                            Alignment="Far"
                            Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).LoadPaletteCommand, RelativeSource={RelativeSource Self}}"
                            Glyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/ReportGroup/OpenFile.svg'}}"
                            Hint="{dxrudl:ReportDesignerStringId StringId=Load}"
                            LargeGlyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/ReportGroup/OpenFile.svg'}}" />
                        <dxb:BarButtonItem
                            Alignment="Far"
                            Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).SavePaletteCommand, RelativeSource={RelativeSource Self}}"
                            Glyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/ReportGroup/SaveFile.svg'}}"
                            Hint="{dxrudl:ReportDesignerStringId StringId=Save}"
                            LargeGlyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/ReportGroup/SaveFile.svg'}}" />
                    </dxb:ToolBarControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemDetailedDescriptionTemplateWrapper">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" SharedSizeGroup="ToolBarRow" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <dxb:ToolBarControl>
                            <dxb:BarButtonItem
                                Alignment="Far"
                                Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).AddColorCommand, RelativeSource={RelativeSource Self}}"
                                Content="{dxrudl:ReportDesignerStringId StringId=Add}"
                                Glyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Add.svg'}}"
                                LargeGlyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Add.svg'}}" />
                            <dxb:BarButtonItem
                                Alignment="Far"
                                Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).ClearColorsCommand, RelativeSource={RelativeSource Self}}"
                                Glyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/StyleRuleSheetEditor/Clear.svg'}}"
                                Hint="Clear"
                                LargeGlyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/StyleRuleSheetEditor/Clear.svg'}}" />
                        </dxb:ToolBarControl>
                        <dxe:ListBoxEdit Grid.Row="1" EditValue="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).SelectedColor, Mode=TwoWay, RelativeSource={RelativeSource Self}}" ItemsSource="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).PaletteColors, RelativeSource={RelativeSource Self}}">
                            <dxe:ListBoxEdit.ItemContainerStyle>
                                <Style TargetType="{x:Type dxe:ListBoxEditItem}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <dx:DXBorder Background="{Binding Color, Converter={dxrudi:DrawingColorToMediaBrushConverter}}">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition />
                                                            <ColumnDefinition Width="auto" />
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock
                                                            FontWeight="Bold"
                                                            Foreground="{Binding XorColor, Converter={dxrudi:DrawingColorToMediaBrushConverter}}"
                                                            Text="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).CurrentPalette, Converter={dxrudei:PaletteToColorCaptionConverter}, RelativeSource={RelativeSource Self}}"
                                                            TextAlignment="Center"
                                                            Visibility="{Binding IsSelected, Converter={dxmvvm:BooleanToVisibilityConverter HiddenInsteadOfCollapsed=True}, RelativeSource={RelativeSource TemplatedParent}}">
                                                            <dxmvvm:Interaction.Behaviors>
                                                                <dxdai:DoubleClickCommandExecutor Command="{Binding Path=AssociatedObject.(dxdiagi:CollectionEditorBase.Editor).OpenColorDialogCommand, RelativeSource={RelativeSource Self}}" />
                                                            </dxmvvm:Interaction.Behaviors>
                                                        </TextBlock>
                                                        <Button
                                                            Name="PART_RemoveButton"
                                                            Grid.Column="1"
                                                            Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).RemoveColorCommand, RelativeSource={RelativeSource Self}}"
                                                            CommandParameter="{Binding}"
                                                            Style="{StaticResource collectionEditorListBoxItemRemoveButtonStyle}">
                                                            <Button.Template>
                                                                <ControlTemplate TargetType="Button">
                                                                    <dx:DXBorder Background="Transparent">
                                                                        <Path
                                                                            Name="removeIcon"
                                                                            Width="16"
                                                                            Height="16"
                                                                            Data="M4,6v6.5C4,12.8,4.2,13,4.5,13h7c0.3,0,0.5-0.2,0.5-0.5V6H4z M7,11H6V8h1V11z M10,11H9V8h1V11z M13,3.5V5H3 V3.5C3,3.2,3.2,3,3.5,3H7V2.5C7,2.2,7.2,2,7.5,2h1C8.8,2,9,2.2,9,2.5V3h3.5C12.8,3,13,3.2,13,3.5z"
                                                                            Fill="{Binding XorColor, Converter={dxrudi:DrawingColorToMediaBrushConverter}}"
                                                                            Opacity="0.8"
                                                                            StrokeThickness="1" />
                                                                    </dx:DXBorder>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                            <Setter TargetName="removeIcon" Property="Opacity" Value="1" />
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Button.Template>
                                                        </Button>
                                                    </Grid>
                                                </dx:DXBorder>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </dxe:ListBoxEdit.ItemContainerStyle>
                        </dxe:ListBoxEdit>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AnnotationCollectionUITypeEditor.DefaultStyleBase" BasedOn="{StaticResource SingleSelectionCollectionEditor.DefaultStyleBase}" TargetType="dxrude:AnnotationCollectionUITypeEditor">
        <Setter Property="ActionButtonsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxb:ToolBarControl
                        AllowCustomizationMenu="False"
                        AllowQuickCustomization="False"
                        GlyphSize="{dxrudi:ThemeGlyphSize}"
                        ShowBackground="False"
                        ShowDragWidget="False">
                        <dxb:BarSubItem
                            BarItemDisplayMode="ContentAndGlyph"
                            Content="{dxrudl:ReportDesignerStringId StringId=Add}"
                            Glyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Add.svg'}}"
                            ItemLinksSource="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).AnnotationKinds, RelativeSource={RelativeSource Self}}"
                            LargeGlyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Add.svg'}}">
                            <dxb:BarSubItem.ItemTemplate>
                                <DataTemplate>
                                    <ContentControl>
                                        <dxb:BarButtonItem
                                            Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).AddAnnotationCommand, RelativeSource={RelativeSource Self}}"
                                            CommandParameter="{Binding}"
                                            Content="{Binding Header}"
                                            Glyph="{Binding Image}"
                                            LargeGlyph="{Binding Image}" />
                                    </ContentControl>
                                </DataTemplate>
                            </dxb:BarSubItem.ItemTemplate>
                        </dxb:BarSubItem>
                        <dxb:BarButtonItem
                            Alignment="Far"
                            Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).MoveUpCommand, RelativeSource={RelativeSource Self}}"
                            Glyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Misc/ArrowUp.svg'}}"
                            LargeGlyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Misc/ArrowUp.svg'}}" />
                        <dxb:BarButtonItem
                            Alignment="Far"
                            Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).MoveDownCommand, RelativeSource={RelativeSource Self}}"
                            Glyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Misc/ArrowDown.svg'}}"
                            LargeGlyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Misc/ArrowDown.svg'}}" />
                    </dxb:ToolBarControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="IndicatorTypeEditor.DefaultStyleBase" TargetType="{x:Type dxrudei:IndicatorTypeEditor}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxrudei:IndicatorTypeEditor}">
                    <Grid>
                        <dxb:GalleryControl>
                            <dxb:GalleryControl.Resources>
                                <DataTemplate x:Key="GalleryItemTemplate">
                                    <ContentControl>
                                        <dxb:GalleryItem Caption="{Binding Caption}" />
                                    </ContentControl>
                                </DataTemplate>
                                <DataTemplate x:Key="GalleryGroupTemplate">
                                    <ContentControl>
                                        <dxb:GalleryItemGroup Caption="{Binding Caption}" ItemTemplate="{StaticResource GalleryItemTemplate}" ItemsSource="{Binding Items}" />
                                    </ContentControl>
                                </DataTemplate>
                            </dxb:GalleryControl.Resources>
                            <dxb:Gallery
                                AllowFilter="False"
                                ColCount="1"
                                GroupTemplate="{StaticResource GalleryGroupTemplate}"
                                GroupsSource="{TemplateBinding IndicatorGroups}"
                                ItemAutoWidth="True"
                                ItemCheckMode="Single"
                                ItemClickCommand="{Binding SelectIndicatorItemCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                ItemContentHorizontalAlignment="Left" />
                        </dxb:GalleryControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="IndicatorCollectionUITypeEditor.DefaultStyleBase" BasedOn="{StaticResource SingleSelectionCollectionEditor.DefaultStyleBase}" TargetType="{x:Type dxrude:IndicatorCollectionUITypeEditor}">
        <Setter Property="IndicatorTypeEditorTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dx:DialogService DialogWindowStartupLocation="CenterOwner">
                            <dx:DialogService.DialogStyle>
                                <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="{x:Type dx:ThemedWindow}">
                                    <Setter Property="Width" Value="400" />
                                    <Setter Property="Height" Value="380" />
                                    <Setter Property="MinWidth" Value="200" />
                                    <Setter Property="MinHeight" Value="200" />
                                    <Setter Property="ResizeMode" Value="NoResize" />
                                </Style>
                            </dx:DialogService.DialogStyle>
                            <dx:DialogService.ViewTemplate>
                                <DataTemplate>
                                    <dxrudei:IndicatorTypeEditor ApplyCommand="{Binding}" />
                                </DataTemplate>
                            </dx:DialogService.ViewTemplate>
                        </dx:DialogService>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SeriesTitleCollectionUITypeEditor.DefaultStyleBase" BasedOn="{StaticResource SingleSelectionCollectionEditor.DefaultStyleBase}" TargetType="{x:Type dxrude:SeriesTitleCollectionUITypeEditor}">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding Text}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="EFParameterCollectionUITypeEditorBase.DefaultStyleBase" TargetType="{x:Type dxrude:EFParameterCollectionUITypeEditorBase}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxrude:EFParameterCollectionUITypeEditorBase}">
                    <Grid>
                        <dxdai:ParameterEditor ItemsSource="{TemplateBinding Parameters}" ParameterService="{TemplateBinding ParameterService}" />
                        <dx:DialogFooter>
                            <Grid>
                                <StackPanel Orientation="Horizontal">
                                    <dx:DialogButton
                                        Command="{Binding ShowPreviewCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                        Content="{dxda:DataAccessUIStringId StringId=Button_Preview}"
                                        DialogResult="{x:Null}"
                                        Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Self}, Converter={dx:BooleanToVisibilityConverter}}" />
                                </StackPanel>
                                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                    <dx:DialogButton DialogResult="OK" />
                                    <dx:DialogButton DialogResult="Cancel" />
                                </StackPanel>
                            </Grid>
                        </dx:DialogFooter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SplashScreenServiceTemplate" Value="{DynamicResource {dxrudt:LWKey ReportDesigner.DefaultSplashScreenServiceTemplate}}" />
        <Setter Property="MessageBoxServiceTemplate" Value="{DynamicResource {dxrudt:LWKey ReportDesigner.DefaultMessageBoxServiceTemplate}}" />
        <Setter Property="PreviewDialogServiceTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dx:DialogService>
                            <dx:DialogService.DialogStyle>
                                <Style BasedOn="{StaticResource DXDialogWindowStyleBase}" TargetType="{x:Type dx:ThemedWindow}">
                                    <Setter Property="Width" Value="800" />
                                    <Setter Property="Height" Value="600" />
                                </Style>
                            </dx:DialogService.DialogStyle>
                            <dx:DialogService.ViewTemplate>
                                <DataTemplate>
                                    <dxdai:DataPreviewControl Data="{Binding}" />
                                </DataTemplate>
                            </dx:DialogService.ViewTemplate>
                        </dx:DialogService>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ReportExpressionCollectionEditor.DefaultStyleBase" TargetType="{x:Type propertyeditors:ReportExpressionCollectionEditor}">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="propertyeditors:ReportExpressionCollectionEditor">
                        <Grid Margin="12,12,12,0" dx:ScrollBarExtensions.ScrollBarMode="TouchOverlap">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="200" MinWidth="200" />
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <dxg:GridControl CurrentItem="{Binding SelectedItem, RelativeSource={RelativeSource Mode=TemplatedParent}}" ItemsSource="{Binding EditorModel.Items, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                <dxg:GridControl.Columns>
                                    <dxg:GridColumn FieldName="DisplayName">
                                        <dxg:GridColumn.CellTemplate>
                                            <DataTemplate>
                                                <Grid Height="Auto" HorizontalAlignment="Stretch">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition />
                                                        <ColumnDefinition Width="auto" />
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock
                                                        x:Name="PART_TextBlock"
                                                        Margin="2"
                                                        Text="{Binding RowData.Row.DisplayName}"
                                                        TextTrimming="CharacterEllipsis" />
                                                    <dx:DXImage
                                                        Grid.Column="1"
                                                        MaxWidth="16"
                                                        MaxHeight="16"
                                                        Margin="0,0,4,0"
                                                        HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"
                                                        SnapsToDevicePixels="True"
                                                        Source="{Binding RowData.Row.IsEmpty, Converter={propertyeditors:AvailableExpressionToImageConverter}}"
                                                        Stretch="UniformToFill" />
                                                </Grid>
                                                <DataTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding RowData.Row.IsBold}" Value="True">
                                                        <Setter TargetName="PART_TextBlock" Property="FontWeight" Value="Bold" />
                                                    </DataTrigger>
                                                </DataTemplate.Triggers>
                                            </DataTemplate>
                                        </dxg:GridColumn.CellTemplate>
                                    </dxg:GridColumn>
                                </dxg:GridControl.Columns>
                                <dxg:GridControl.View>
                                    <dxrudi:TreeListViewEx
                                        x:Name="treeView"
                                        AllowEditing="False"
                                        AutoWidth="True"
                                        ChildNodesPath="NestedItems"
                                        EnableDynamicLoading="False"
                                        ExpandCollapseNodesOnNavigation="True"
                                        IncrementalSearchMode="Enabled"
                                        NavigationStyle="Row"
                                        ShowColumnHeaders="False"
                                        ShowHorizontalLines="False"
                                        ShowIndicator="False"
                                        ShowVerticalLines="False"
                                        TreeDerivationMode="ChildNodesSelector"
                                        VerticalScrollbarVisibility="Auto">
                                        <dxmvvm:Interaction.Behaviors>
                                            <dxmvvm:EventToCommand Command="{Binding BeforeFocusRowCommand, RelativeSource={RelativeSource Mode=TemplatedParent}}" EventName="BeforeFocusRow" PassEventArgsToCommand="True" />
                                        </dxmvvm:Interaction.Behaviors>
                                    </dxrudi:TreeListViewEx>
                                </dxg:GridControl.View>
                            </dxg:GridControl>
                            <GridSplitter
                                Grid.Column="1"
                                Width="6"
                                HorizontalAlignment="Center"
                                ShowsPreview="True">
                                <GridSplitter.Template>
                                    <ControlTemplate>
                                        <dx:DXBorder x:Name="Root" Background="Transparent" BorderBrush="Transparent" />
                                    </ControlTemplate>
                                </GridSplitter.Template>
                            </GridSplitter>

                            <dxe:ListBoxEdit Grid.Column="2" Visibility="{Binding SelectedItem.IsBindable, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={dxmvvm:BooleanToVisibilityConverter Inverse=True, HiddenInsteadOfCollapsed=True}}">
                                <dxe:ListBoxEdit.Template>
                                    <ControlTemplate TargetType="{x:Type dxe:ListBoxEdit}">
                                        <ContentControl Margin="2,0,0,0" Template="{TemplateBinding BorderTemplate}">
                                            <dx:BackgroundPanel>
                                                <TextBlock
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Opacity="0.6"
                                                    Text="{dxrudl:ReportStringId StringId=ExpressionCollectionEditor_Msg_ExpressionUnavailable}" />
                                            </dx:BackgroundPanel>
                                        </ContentControl>
                                    </ControlTemplate>
                                </dxe:ListBoxEdit.Template>
                            </dxe:ListBoxEdit>

                            <dxrudei:ReportExpressionEditorControl
                                x:Name="PART_ReportExpressionEditor"
                                Grid.Column="2"
                                Margin="0,-2,-2,0"
                                Context="{Binding ExpressionEditorContext, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                ContextInstance="{Binding ComponentContext, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                EditValue="{Binding EditableExpression, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                ReportModel="{Binding ReportModel, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                ResultType="{Binding ResultType, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                Settings="{TemplateBinding Settings}"
                                Visibility="{Binding SelectedItem.IsBindable, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={dxmvvm:BooleanToVisibilityConverter HiddenInsteadOfCollapsed=True}}" />
                            <dx:ThemedWindowDialogButtonsControl Grid.Row="1" Grid.ColumnSpan="3">
                                <dxrudi:LocalizedDialogButton Command="{Binding OKCommand, RelativeSource={RelativeSource Mode=TemplatedParent}}" Content="{dxda:DataAccessUIStringIdExtension StringId=Button_OK}" DialogResult="OK" />
                                <dxrudi:LocalizedDialogButton DialogResult="Cancel" />
                                <dx:ThemedWindowDialogButton AllowCloseWindow="False" Command="{Binding ApplyCommand, RelativeSource={RelativeSource Mode=TemplatedParent}}" Content="{dxda:DataAccessUIStringId StringId=Button_Apply}" />
                            </dx:ThemedWindowDialogButtonsControl>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>
    <Style x:Key="CrossTabFieldCollectionEditor.DefaultStyleBase" BasedOn="{StaticResource SingleSelectionCollectionEditor.DefaultStyleBase}" TargetType="{x:Type dxrude:CrossTabFieldCollectionEditor}">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding Converter={dxrude:CollectionEditorItemToDisplayNameConverter}}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="QueryParameterCollectionUITypeEditor.DefaultStyleBase" BasedOn="{StaticResource DataSourceParameterCollectionUITypeEditor.DefaultStyleBase}" TargetType="{x:Type dxrude:QueryParameterCollectionUITypeEditor}">
        <Setter Property="DialogFooterTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <StackPanel Orientation="Horizontal">
                            <dx:ThemedWindowDialogButton AllowCloseWindow="False" Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).ShowPreviewCommand, RelativeSource={RelativeSource Mode=Self}}" Content="{dxda:DataAccessUIStringId StringId=Button_Preview}" />
                        </StackPanel>
                        <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                            <dxrudi:LocalizedDialogButton DialogResult="OK" IsDefault="True" />
                            <dxrudi:LocalizedDialogButton DialogResult="Cancel" />
                        </StackPanel>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SplashScreenServiceTemplate" Value="{DynamicResource {dxrudt:LWKey ReportDesigner.DefaultSplashScreenServiceTemplate}}" />
        <Setter Property="MessageBoxServiceTemplate" Value="{DynamicResource {dxrudt:LWKey ReportDesigner.DefaultMessageBoxServiceTemplate}}" />
        <Setter Property="PreviewDialogServiceTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dx:DialogService>
                            <dx:DialogService.DialogStyle>
                                <Style BasedOn="{StaticResource DXDialogWindowStyleBase}" TargetType="{x:Type dx:ThemedWindow}">
                                    <Setter Property="Width" Value="800" />
                                    <Setter Property="Height" Value="600" />
                                </Style>
                            </dx:DialogService.DialogStyle>
                            <dx:DialogService.ViewTemplate>
                                <DataTemplate>
                                    <dxdai:DataPreviewControl Data="{Binding}" />
                                </DataTemplate>
                            </dx:DialogService.ViewTemplate>
                        </dx:DialogService>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="OLAPConnectionStringUITypeEditor.DefaultStyleBase" TargetType="{x:Type dxrude:OLAPConnectionStringUITypeEditor}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxrude:OLAPConnectionStringUITypeEditor}">
                    <dxrude:DialogEditorView>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="auto" />
                            </Grid.RowDefinitions>
                            <dxprg:PropertyGridControl
                                Margin="10"
                                SelectedObject="{TemplateBinding ConnectionStringBuilder}"
                                ShowCategories="False"
                                ShowMenuButtonInRows="False"
                                ShowSearchBox="False"
                                ShowToolPanel="False">
                                <dxprg:PropertyGridControl.PropertyDefinitions>
                                    <dxprg:PropertyDefinition Path="QueryTimeout" Visibility="{Binding ShowAdvancedProperties, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
                                    <dxprg:PropertyDefinition Path="LocaleIdentifier" UseTypeConverterToStringConversion="True" Visibility="{Binding ShowAdvancedProperties, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
                                    <dxprg:PropertyDefinition Path="ConnectionTimeout" Visibility="{Binding ShowAdvancedProperties, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
                                    <dxprg:PropertyDefinition Path="UserId" Visibility="{Binding ShowAdvancedProperties, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
                                    <dxprg:PropertyDefinition Path="Password" Visibility="{Binding ShowAdvancedProperties, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
                                    <dxprg:PropertyDefinition Path="Roles" Visibility="{Binding ShowAdvancedProperties, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
                                    <dxprg:PropertyDefinition Path="CustomData" Visibility="{Binding ShowAdvancedProperties, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
                                </dxprg:PropertyGridControl.PropertyDefinitions>
                            </dxprg:PropertyGridControl>
                        </Grid>
                        <dxrude:DialogEditorView.FooterItems>
                            <dxe:CheckEdit
                                Grid.Row="1"
                                HorizontalAlignment="Left"
                                Content="Show Advanced Properties"
                                EditValue="{Binding ShowAdvancedProperties, RelativeSource={RelativeSource TemplatedParent}}" />
                            <dxrudi:LocalizedDialogButton Command="{Binding SaveCommand, RelativeSource={RelativeSource TemplatedParent}}" DialogResult="OK" />
                            <dxrudi:LocalizedDialogButton DialogResult="Cancel" />
                        </dxrude:DialogEditorView.FooterItems>
                    </dxrude:DialogEditorView>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LookUpValuesEditor.DefaultStyleBase" TargetType="{x:Type dxrude:LookUpValuesEditor}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxrude:LookUpValuesEditor">
                    <dxrude:DialogEditorView>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <dxg:GridControl Grid.Row="0" ItemsSource="{Binding LookUpValues, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding SelectedLookUpValue, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}">

                                <dxg:GridControl.Columns>
                                    <dxg:GridColumn FieldName="Value">
                                        <dxg:GridColumn.CellTemplateSelector>
                                            <dxdai:ParameterLookUpValueTemplateSelector>
                                                <dxdai:ParameterLookUpValueTemplateSelector.ListBoxTemplate>
                                                    <DataTemplate>
                                                        <dxe:ComboBoxEdit x:Name="PART_Editor" IsTextEditable="False" ItemsSource="{Binding Path=RowData.Row.Value, Converter={dxdai:EnumToItemsSourceConverter}}" />
                                                    </DataTemplate>
                                                </dxdai:ParameterLookUpValueTemplateSelector.ListBoxTemplate>
                                                <dxdai:ParameterLookUpValueTemplateSelector.DateTimeTemplate>
                                                    <DataTemplate>
                                                        <dxe:DateEdit x:Name="PART_Editor" IsTextEditable="False" />
                                                    </DataTemplate>
                                                </dxdai:ParameterLookUpValueTemplateSelector.DateTimeTemplate>
                                                <dxdai:ParameterLookUpValueTemplateSelector.CheckBoxTemplate>
                                                    <DataTemplate>
                                                        <dxe:CheckEdit x:Name="PART_Editor" />
                                                    </DataTemplate>
                                                </dxdai:ParameterLookUpValueTemplateSelector.CheckBoxTemplate>
                                                <dxdai:ParameterLookUpValueTemplateSelector.TextEditTemplate>
                                                    <DataTemplate>
                                                        <dxe:TextEdit x:Name="PART_Editor" />
                                                    </DataTemplate>
                                                </dxdai:ParameterLookUpValueTemplateSelector.TextEditTemplate>
                                            </dxdai:ParameterLookUpValueTemplateSelector>
                                        </dxg:GridColumn.CellTemplateSelector>
                                    </dxg:GridColumn>

                                    <dxg:GridColumn FieldName="Description">
                                        <dxg:GridColumn.EditSettings>
                                            <dxe:TextEditSettings />
                                        </dxg:GridColumn.EditSettings>
                                    </dxg:GridColumn>
                                </dxg:GridControl.Columns>
                                <dxg:GridControl.View>
                                    <dxg:TableView AutoWidth="True" NavigationStyle="Cell" ShowGroupPanel="False" />
                                </dxg:GridControl.View>
                            </dxg:GridControl>

                            <Grid Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Button Margin="5" Command="{Binding AddParametersLookUpValueCommand, RelativeSource={RelativeSource TemplatedParent}}" Content="Add" />
                                <Button
                                    Grid.Column="1"
                                    Margin="5"
                                    Command="{Binding RemoveParametersLookUpValueCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                    Content="Remove" />
                            </Grid>
                        </Grid>
                    </dxrude:DialogEditorView>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LocalizationCollectionEditor.DefaultStyleBase" TargetType="{x:Type propertyeditors:LocalizationCollectionEditor}">
        <Setter Property="MessageBoxServiceTemplate" Value="{DynamicResource {dxrudt:LWKey ReportDesigner.DefaultMessageBoxServiceTemplate}}" />
        <Setter Property="OpenFileDialogServiceTemplate" Value="{DynamicResource {dxrudt:LWKey ReportDesigner.DefaultOpenFileDialogServiceTemplate}}" />
        <Setter Property="SaveFileDialogServiceTemplate" Value="{DynamicResource {dxrudt:LWKey ReportDesigner.DefaultSaveFileDialogServiceTemplate}}" />
        <Setter Property="dx:ScrollBarExtensions.ScrollBarMode" Value="TouchOverlap" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="propertyeditors:LocalizationCollectionEditor">
                    <Grid x:Name="content" Margin="12,12,12,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="200" MinWidth="150" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition MinWidth="150" />
                        </Grid.ColumnDefinitions>
                        <dxb:ToolBarControl
                            AllowCustomizationMenu="False"
                            AllowQuickCustomization="False"
                            ShowBackground="False"
                            ShowDragWidget="False">
                            <dxb:BarStaticItem BarItemDisplayMode="Content" Content="{dxrudl:ReportDesignerStringId StringId=LocalizationEditor_Languages}" ShowBorder="False">
                                <dxb:BarStaticItem.ContentTemplate>
                                    <DataTemplate>
                                        <TextBlock FontWeight="Bold" Text="{Binding}" />
                                    </DataTemplate>
                                </dxb:BarStaticItem.ContentTemplate>
                            </dxb:BarStaticItem>
                            <dxb:BarSplitButtonItem
                                ActAsDropDown="True"
                                Alignment="Far"
                                Glyph="{dxrud:ReportDesignerResourceImage ResourceName=Images/SVG/Add.svg}"
                                GlyphAlignment="Right"
                                GlyphSize="Small"
                                LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName=Images/SVG/Add.svg}"
                                UseLightweightTemplates="False">
                                <dxb:BarSplitButtonItem.PopupControl>
                                    <dxb:PopupControlContainer Width="320" Height="400">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="auto" />
                                                <RowDefinition />
                                                <RowDefinition Height="auto" />
                                            </Grid.RowDefinitions>
                                            <dxe:SearchControl
                                                x:Name="searchControl"
                                                Margin="4"
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Center"
                                                FilterByColumnsMode="Custom"
                                                FilterCondition="Contains"
                                                MRULength="0"
                                                SearchTextPostDelay="200"
                                                ShowMRUButton="False">
                                                <dxe:SearchControl.ColumnProvider>
                                                    <dxe:SelectorEditColumnProvider>
                                                        <dxe:SelectorEditColumnProvider.CustomColumns>
                                                            <sys:String>DisplayName</sys:String>
                                                        </dxe:SelectorEditColumnProvider.CustomColumns>
                                                    </dxe:SelectorEditColumnProvider>
                                                </dxe:SearchControl.ColumnProvider>
                                            </dxe:SearchControl>
                                            <dxe:ListBoxEdit
                                                Grid.Row="1"
                                                AllowItemHighlighting="True"
                                                BorderThickness="0,1,0,1"
                                                FilterCriteria="{Binding FilterCriteria, ElementName=searchControl}"
                                                ItemsSource="{Binding EditorModel.LanguageSource, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                                <dxmvvm:Interaction.Behaviors>
                                                    <dxrude:ListBoxEditCommitSelectedValueBehavior ClosePopup="True" Command="{Binding AddLanguageCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type propertyeditors:LocalizationCollectionEditor}}}" />
                                                </dxmvvm:Interaction.Behaviors>
                                                <dxe:ListBoxEdit.ItemTemplate>
                                                    <DataTemplate>
                                                        <TextBlock
                                                            VerticalAlignment="Center"
                                                            dxei:TextBlockService.EnableTextHighlighting="True"
                                                            dxei:TextBlockService.HighlightedText="{Binding SearchText, ElementName=searchControl}"
                                                            dxei:TextBlockService.HighlightedTextCriteria="Contains"
                                                            Text="{Binding DisplayName}">
                                                            <dxei:TextBlockService.HighlightedTextAppearance>
                                                                <dxe:HighlighterAppearance HighlightedFontWeight="Bold" HighlightedTextBackground="Yellow" HighlightedTextForeground="Black" />
                                                            </dxei:TextBlockService.HighlightedTextAppearance>
                                                        </TextBlock>
                                                    </DataTemplate>
                                                </dxe:ListBoxEdit.ItemTemplate>
                                            </dxe:ListBoxEdit>
                                            <Thumb Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                                                <dxmvvm:Interaction.Behaviors>
                                                    <dxrudi:ThumbBehavior />
                                                </dxmvvm:Interaction.Behaviors>
                                                <Thumb.Template>
                                                    <ControlTemplate>
                                                        <ResizeGrip Cursor="SizeNWSE" Opacity="1" />
                                                    </ControlTemplate>
                                                </Thumb.Template>
                                            </Thumb>
                                            <Grid Grid.Row="2">
                                                <dx:BackgroundPanel />
                                            </Grid>
                                        </Grid>
                                    </dxb:PopupControlContainer>
                                </dxb:BarSplitButtonItem.PopupControl>
                            </dxb:BarSplitButtonItem>
                        </dxb:ToolBarControl>
                        <dxe:ListBoxEdit
                            Grid.Row="1"
                            EditValue="{Binding SelectedLanguage, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            Focusable="False"
                            Grid.IsSharedSizeScope="True"
                            ItemsSource="{Binding EditorModel, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                            <dxe:ListBoxEdit.InputBindings>
                                <KeyBinding Key="Delete" Command="{x:Static ApplicationCommands.Delete}" />
                            </dxe:ListBoxEdit.InputBindings>
                            <dxe:ListBoxEdit.ItemTemplate>
                                <DataTemplate DataType="{x:Type dxe:ListBoxEditItem}">
                                    <Grid Height="Auto" HorizontalAlignment="Stretch">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto" SharedSizeGroup="A">
                                                <ColumnDefinition.Style>
                                                    <Style TargetType="{x:Type ColumnDefinition}">
                                                        <Setter Property="MinWidth" Value="40" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Name}" Value="Default">
                                                                <Setter Property="MinWidth" Value="0" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ColumnDefinition.Style>
                                            </ColumnDefinition>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="auto" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Margin="2,0,6,0" Opacity="0.7" Text="{Binding LanguageCode}" />
                                        <TextBlock Grid.Column="1" Text="{Binding DisplayName}" TextTrimming="CharacterEllipsis" />
                                        <Button
                                            Name="PART_RemoveButton"
                                            Grid.Column="2"
                                            Command="{Binding RemoveLanguageCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type propertyeditors:LocalizationCollectionEditor}}}"
                                            CommandParameter="{Binding SelectedLanguage, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type propertyeditors:LocalizationCollectionEditor}}}"
                                            Style="{StaticResource collectionEditorListBoxItemRemoveButtonStyle}"
                                            Visibility="Collapsed" />
                                    </Grid>
                                    <DataTemplate.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Path=DataContext.CanDelete, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxe:ListBoxEditItem}}}" Value="True" />
                                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxe:ListBoxEditItem}}}" Value="true" />
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter TargetName="PART_RemoveButton" Property="Visibility" Value="Visible" />
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Path=DataContext.CanDelete, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxe:ListBoxEditItem}}}" Value="True" />
                                                <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxe:ListBoxEditItem}}}" Value="true" />
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter TargetName="PART_RemoveButton" Property="Visibility" Value="Visible" />
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </dxe:ListBoxEdit.ItemTemplate>
                            <dxmvvm:Interaction.Behaviors>
                                <dxrudi:ListBoxEditSmartSelectionBehavior />
                            </dxmvvm:Interaction.Behaviors>
                            <dxe:ListBoxEdit.ItemContainerStyle>
                                <Style TargetType="dxe:ListBoxEditItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                </Style>
                            </dxe:ListBoxEdit.ItemContainerStyle>
                        </dxe:ListBoxEdit>
                        <GridSplitter
                            Grid.Row="1"
                            Grid.Column="1"
                            Width="6"
                            HorizontalAlignment="Center"
                            ShowsPreview="True">
                            <GridSplitter.Template>
                                <ControlTemplate>
                                    <dx:DXBorder x:Name="Root" Background="Transparent" BorderBrush="Transparent" />
                                </ControlTemplate>
                            </GridSplitter.Template>
                        </GridSplitter>
                        <Grid Grid.Column="2" Margin="0,0,0,6">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <TextBlock VerticalAlignment="Center" FontWeight="Bold" Text="{dxrudl:ReportDesignerStringId StringId=LocalizationEditor_LocalizedTextValues}" />
                            <dxg:GridSearchControl
                                Grid.Column="1"
                                Margin="0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Center"
                                View="{Binding ElementName=PART_TableView}" />
                        </Grid>
                        <dxg:GridControl
                            Grid.Row="1"
                            Grid.Column="2"
                            MinWidth="200"
                            FilterString="[PropertyName] In ('Text')"
                            ItemsSource="{Binding SelectedLanguage.Properties, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                            <dxg:GridControl.Resources>
                                <Style TargetType="dxg:GridColumnHeader">
                                    <Setter Property="ShowFilterButtonOnHover" Value="False" />
                                </Style>
                            </dxg:GridControl.Resources>
                            <dxg:GridControl.Columns>
                                <dxg:GridColumn
                                    FieldName="PropertyName"
                                    AllowEditing="False"
                                    FilterPopupMode="CheckedList"
                                    Header="{dxrudl:ReportDesignerStringId StringId=LocalizationEditor_Property}">
                                    <dxg:GridColumn.CellDisplayTemplate>
                                        <DataTemplate>
                                            <dxe:TextEdit Name="PART_Editor" EditValue="{Binding Row.DisplayName, Mode=OneWay}" />
                                        </DataTemplate>
                                    </dxg:GridColumn.CellDisplayTemplate>
                                </dxg:GridColumn>
                                <dxg:GridColumn
                                    FieldName="DefaultValue"
                                    AllowAutoFilter="False"
                                    AllowColumnFiltering="False"
                                    AllowEditing="False"
                                    Header="{dxrudl:ReportDesignerStringId StringId=LocalizationEditor_DefaultLanguage}"
                                    Visible="{Binding SelectedLanguage.Name, Converter={propertyeditors:LanguageToDefaultRowVisibilityConverter}, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                    <dxg:GridColumn.EditSettings>
                                        <dxe:TextEditSettings AcceptsReturn="True" TextWrapping="Wrap" />
                                    </dxg:GridColumn.EditSettings>
                                </dxg:GridColumn>
                                <dxg:GridColumn
                                    FieldName="Value"
                                    AllowAutoFilter="False"
                                    AllowColumnFiltering="False"
                                    Header="{dxrudl:ReportDesignerStringId StringId=LocalizationEditor_Value}">
                                    <dxg:GridColumn.EditSettings>
                                        <dxe:TextEditSettings AcceptsReturn="True" TextWrapping="Wrap" />
                                    </dxg:GridColumn.EditSettings>
                                </dxg:GridColumn>
                            </dxg:GridControl.Columns>
                            <dxg:GridControl.View>
                                <dxg:TableView
                                    Name="PART_TableView"
                                    AllowFilterEditor="False"
                                    AllowGrouping="False"
                                    AutoWidth="True"
                                    IsColumnMenuEnabled="False"
                                    ShowFilterPanelMode="Default"
                                    ShowGroupPanel="False"
                                    ShowIndicator="False"
                                    ShowSearchPanelMode="Never"
                                    VerticalScrollbarVisibility="Auto" />
                            </dxg:GridControl.View>
                            <dxmvvm:Interaction.Behaviors>
                                <propertyeditors:LocalizationEditorGridControlFilteringBehavior />
                            </dxmvvm:Interaction.Behaviors>
                        </dxg:GridControl>
                        <dx:ThemedWindowDialogButtonsControl Grid.Row="2" Grid.ColumnSpan="3">
                            <dx:ThemedWindowDialogButton
                                Alignment="Left"
                                AllowCloseWindow="False"
                                Command="{Binding ImportCommand, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                Content="{dxrudl:ReportDesignerStringId StringId=Button_Import}" />
                            <dx:ThemedWindowDialogButton
                                Alignment="Left"
                                AllowCloseWindow="False"
                                Command="{Binding ExportCommand, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                Content="{dxrudl:ReportDesignerStringId StringId=Button_Export}" />
                            <dxrudi:LocalizedDialogButton Alignment="Right" Command="{Binding SaveCommand, RelativeSource={RelativeSource Mode=TemplatedParent}}" DialogResult="OK" />
                            <dxrudi:LocalizedDialogButton Alignment="Right" DialogResult="Cancel" />
                        </dx:ThemedWindowDialogButtonsControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SqlQueryCollectionUITypeEditor.DefaultStyleBase" BasedOn="{StaticResource QueryCollectionEditorBase.DefaultStyleBase}" TargetType="dxrude:SqlQueryCollectionUITypeEditor">
        <Setter Property="ItemsControlWidth" Value="220" />
        <Setter Property="ActionButtonsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxb:ToolBarControl>
                        <dxb:BarSubItem
                            BarItemDisplayMode="ContentAndGlyph"
                            Content="{dxrudl:ReportDesignerStringId StringId=Add}"
                            Glyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Add.svg'}}"
                            LargeGlyph="{dx:SvgImageSource Uri={dx:ReportDesignerResource 'Images/SVG/Add.svg'}}">
                            <dxb:BarSubItem.Items>
                                <dxb:BarButtonItem Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).AddItemCommand, RelativeSource={RelativeSource Self}}" Content="{dxda:DataAccessUIStringId StringId=WizardPageConfigureQuery_Query}" />
                                <dxb:BarButtonItem Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).AddStoredProcedureCommand, RelativeSource={RelativeSource Self}}" Content="{dxda:DataAccessUIStringId StringId=WizardPageConfigureQuery_StoredProcedure}" />
                            </dxb:BarSubItem.Items>
                        </dxb:BarSubItem>
                    </dxb:ToolBarControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemDetailedDescriptionTemplate">
            <Setter.Value>
                <DataTemplate>
                    <sql:SqlQueryEditor Context="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).QueryEditContext, RelativeSource={RelativeSource Self}}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="DialogFooterTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <native:LocalizedDialogButton Command="{Binding Path=(dxdiagi:CollectionEditorBase.Editor).OkButtonCommand, RelativeSource={RelativeSource Self}}" DialogResult="OK" AllowCloseWindow="False" />
                        <native:LocalizedDialogButton DialogResult="Cancel" />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PivotGridFieldSortConditionEditor.DefaultStyleBase" BasedOn="{StaticResource SingleSelectionCollectionEditor.DefaultStyleBase}" TargetType="dxrude:PivotGridFieldSortConditionEditor">
        <Setter Property="MessageBoxServiceTemplate" Value="{DynamicResource {dxrudt:LWKey ReportDesigner.DefaultMessageBoxServiceTemplate}}" />
    </Style>
    <Style x:Key="SummaryUITypeEditor.DefaultStyleBase" TargetType="dxrude:SummaryUITypeEditor">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxrude:SummaryUITypeEditor">
                    <dxrude:DialogEditorView>
                        <dxlc:LayoutControl Padding="12,12,12,0">
                            <dxlc:LayoutControl.Resources>
                                <dxrudi:SummaryPreviewDataToFormatDisplayTextConverter x:Key="summaryPreviewToTextConverter" />
                            </dxlc:LayoutControl.Resources>
                            <dxlc:LayoutGroup
                                Width="230"
                                HorizontalAlignment="Stretch"
                                ItemLabelsAlignment="Local"
                                Orientation="Vertical">
                                <dxlc:LayoutItem Label="{dxrudl:ReportDesignerStringId StringId=Properties_BoundField}" LabelPosition="Top">
                                    <dxrude:PopupTreeListEdit
                                        ChildNodesPath="Children"
                                        DisplayMember="DataMember"
                                        EditValue="{Binding BoundField, RelativeSource={RelativeSource TemplatedParent}}"
                                        HierarchicalPathProvider="{dxrude:BindingDataHierarchicalPathProvider}"
                                        ItemsSource="{Binding ReportModel.FieldListNodes, RelativeSource={RelativeSource TemplatedParent}}"
                                        PopupDisplayMember="DisplayName"
                                        PopupSelectionValidator="{dxrude:BindingDataPopupSelectionValidator CanSelectParameters=True}"
                                        TreeListCellTemplate="{DynamicResource {dxrudt:LWKey ReportDesigner.FieldListNodeTemplate}}"
                                        ValueMember="BindingData" />
                                </dxlc:LayoutItem>
                                <dxlc:LayoutItem Label="{dxrudl:ReportDesignerStringId StringId=Properties_SummaryFunction}" LabelPosition="Top">
                                    <dxe:ComboBoxEdit EditValue="{Binding SummaryFunction, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" IsTextEditable="False" ItemsSource="{dxe:EnumItemsSource EnumType={x:Type reportsui:SummaryFunc}}" />
                                </dxlc:LayoutItem>
                                <dxlc:LayoutItem Label="{dxrudl:ReportDesignerStringId StringId=Properties_FormatString}" LabelPosition="Top">
                                    <dxe:ButtonEdit
                                        AllowDefaultButton="False"
                                        EditValue="{Binding FormatString, RelativeSource={RelativeSource TemplatedParent}}"
                                        IsTextEditable="True"
                                        NullValue="">
                                        <dxe:ButtonEdit.Buttons>
                                            <dxe:ButtonInfo GlyphKind="Regular">
                                                <dxmvvm:Interaction.Behaviors>
                                                    <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}">
                                                        <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                                            <DataTemplate>
                                                                <ContentControl>
                                                                    <dxrudi:UITypeEditorDialogService DialogStyle="{StaticResource FormatStringDialogStyle}">

                                                                        <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                                            <DataTemplate>
                                                                                <dxrude:FormatStringUITypeEditor EditValue="{Binding Value}" />
                                                                            </DataTemplate>
                                                                        </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                                    </dxrudi:UITypeEditorDialogService>
                                                                </ContentControl>
                                                            </DataTemplate>
                                                        </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                                    </dxe:DialogServiceEditorBehavior>
                                                </dxmvvm:Interaction.Behaviors>
                                            </dxe:ButtonInfo>
                                        </dxe:ButtonEdit.Buttons>
                                    </dxe:ButtonEdit>
                                </dxlc:LayoutItem>
                                <dxlc:LayoutItem>
                                    <dxe:CheckEdit Content="{dxrudl:ReportDesignerStringId StringId=Properties_IgnoreNullValues}" EditValue="{Binding IgnoreNullValues, RelativeSource={RelativeSource TemplatedParent}}" />
                                </dxlc:LayoutItem>
                                <dxlc:LayoutItem>
                                    <dxe:CheckEdit Content="{dxrudl:ReportDesignerStringId StringId=Properties_TreatStringsAsNumerics}" EditValue="{Binding TreatStringsAsNumerics, RelativeSource={RelativeSource TemplatedParent}}" />
                                </dxlc:LayoutItem>
                                <dxlc:LayoutItem>
                                    <dxlc:LayoutGroup
                                        Padding="3"
                                        Header="{dxrudl:ReportDesignerStringId StringId=Properties_SummaryRunning}"
                                        Orientation="Vertical"
                                        Style="{StaticResource LayoutGroupWithStandardGroupBoxWithMargins}">
                                        <dxe:ListBoxEdit
                                            BorderThickness="0"
                                            EditValue="{Binding SummaryRunning, RelativeSource={RelativeSource TemplatedParent}}"
                                            ItemsSource="{dxe:EnumItemsSource EnumType={x:Type reportsui:SummaryRunning}}"
                                            ShowBorder="False"
                                            StyleSettings="{dxdai:RadioListBoxEditStyleSettingsEx}">
                                            <dxe:ListBoxEdit.ItemContainerStyle>
                                                <Style TargetType="FrameworkElement">
                                                    <Setter Property="Margin" Value="0,3,24,3" />
                                                </Style>
                                            </dxe:ListBoxEdit.ItemContainerStyle>
                                            <dxe:ListBoxEdit.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <UniformGrid Columns="2" Rows="2" />
                                                </ItemsPanelTemplate>
                                            </dxe:ListBoxEdit.ItemsPanel>
                                        </dxe:ListBoxEdit>
                                    </dxlc:LayoutGroup>
                                </dxlc:LayoutItem>
                            </dxlc:LayoutGroup>
                            <dxlc:LayoutGroup
                                Grid.Column="1"
                                Width="200"
                                Margin="9,0,0,0"
                                ItemLabelsAlignment="Local"
                                Orientation="Vertical">
                                <dxlc:LayoutItem HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    <dx:DXBorder
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        Background="White"
                                        BorderBrush="DarkGray"
                                        BorderThickness="1">
                                        <StackPanel Orientation="Vertical">
                                            <ItemsControl Margin="18" ItemsSource="{TemplateBinding PreviewData}">
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <TextBlock>
                                                            <TextBlock.Text>
                                                                <MultiBinding Converter="{StaticResource summaryPreviewToTextConverter}">
                                                                    <Binding />
                                                                    <Binding Source="{x:Null}" />
                                                                </MultiBinding>
                                                            </TextBlock.Text>
                                                        </TextBlock>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>
                                            <dx:DXBorder Margin="9,0,27,6" BorderBrush="Black" BorderThickness="0,1,0,0" />
                                            <TextBlock Margin="18,0">
                                                <TextBlock.Text>
                                                    <MultiBinding Converter="{StaticResource summaryPreviewToTextConverter}">
                                                        <Binding Path="PreviewResult" RelativeSource="{RelativeSource TemplatedParent}" />
                                                        <Binding Path="FormatString" RelativeSource="{RelativeSource TemplatedParent}" />
                                                    </MultiBinding>
                                                </TextBlock.Text>
                                            </TextBlock>
                                        </StackPanel>
                                    </dx:DXBorder>
                                </dxlc:LayoutItem>
                            </dxlc:LayoutGroup>
                        </dxlc:LayoutControl>
                    </dxrude:DialogEditorView>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SummaryExpressionUITypeEditor.DefaultStyleBase" TargetType="{x:Type propertyeditors:SummaryExpressionUITypeEditor}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <dxrude:DialogEditorView>
                        <dxlc:LayoutControl Padding="12,12,12,0">
                            <dxlc:LayoutControl.Resources>
                                <Style x:Key="layoutItemStyle" TargetType="dxlc:LayoutItem">
                                    <Setter Property="AddColonToLabel" Value="True" />
                                    <Setter Property="ElementSpace" Value="12" />
                                </Style>
                                <Style x:Key="layoutItemWithDisabling" BasedOn="{StaticResource layoutItemStyle}" TargetType="dxlc:LayoutItem">
                                    <Setter Property="IsEnabled" Value="{Binding SummaryRunning, UpdateSourceTrigger=PropertyChanged, Converter={dxrudi:SummaryRunningToEnabledConverter}, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                </Style>
                                <Style x:Key="summaryExpressionEditorButtonStyle" x:Shared="False" TargetType="{x:Type dxe:ButtonInfo}">
                                    <Setter Property="GlyphKind" Value="Regular" />
                                    <Setter Property="CommandParameter">
                                        <Setter.Value>
                                            <dxrudei:ExpressionData EventName="{x:Static reportsui:XRControl+EventNames.BeforePrint}" SelectedPropertyPath="{x:Static reportsdesign:XRComponentPropertyNames.Text}" />
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                                <Style x:Key="expressionEditorsStyle" TargetType="dxe:PopupBaseEdit">
                                    <Setter Property="ValidateOnEnterKeyPressed" Value="True" />
                                    <Setter Property="ValidateOnTextInput" Value="False" />
                                    <Setter Property="ShowBorder" Value="True" />
                                    <Setter Property="PopupContentTemplate" Value="{StaticResource PopupExpressionEditorTemplate}" />
                                    <Setter Property="DataContext" Value="{Binding ReportModel, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={dxrudi:ReportModelToReportViewModelConverter}}" />
                                    <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <ContentControl>
                                                    <dxrudi:SummaryExpressionEditorValidationBehavior SummaryFunc="{Binding SummaryFunction, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type propertyeditors:SummaryExpressionUITypeEditor}}}" />
                                                </ContentControl>
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </dxlc:LayoutControl.Resources>
                            <dxlc:LayoutGroup Grid.IsSharedSizeScope="True" Orientation="Vertical">
                                <dxlc:LayoutItem Label="{dxrudl:ReportDesignerStringId StringId=Properties_SummaryRunning}" Style="{StaticResource layoutItemStyle}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="auto" SharedSizeGroup="A" />
                                        </Grid.ColumnDefinitions>
                                        <dxe:ComboBoxEdit EditValue="{Binding SummaryRunning, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" IsTextEditable="False" ItemsSource="{dxe:EnumItemsSource EnumType={x:Type reportsui:SummaryRunning}, NameConverter={dxrudi:EnumToDisplayNameConverter}}" />
                                    </Grid>
                                </dxlc:LayoutItem>
                                <dxlc:LayoutItem Label="{dxrudl:ReportDesignerStringId StringId=Properties_SummaryFunction}" Style="{StaticResource layoutItemWithDisabling}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="auto" SharedSizeGroup="A" />
                                        </Grid.ColumnDefinitions>
                                        <dxe:ComboBoxEdit
                                            DisplayMember="Name"
                                            EditValue="{Binding SummaryFunction, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                            IsTextEditable="False"
                                            ItemsSource="{Binding SummaryFunctionSource, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneTime}"
                                            ValueMember="Id" />
                                        <dx:DXImage
                                            Grid.Column="1"
                                            Width="{dxrudi:ThemeImageSize Size=16, TouchThemeSize=32}"
                                            Height="{dxrudi:ThemeImageSize Size=16, TouchThemeSize=32}"
                                            Margin="4,0,0,0"
                                            Source="{dxrud:ReportDesignerResourceImage ResourceName=Images/SVG/Info.svg}">
                                            <dx:DXImage.ToolTip>
                                                <ToolTip MaxWidth="400">
                                                    <StackPanel>
                                                        <TextBlock Text="{Binding SummaryFunction, RelativeSource={RelativeSource Mode=TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Converter={dxrudi:SummaryFunctionToToolTipTextConverter}}" TextWrapping="Wrap" />
                                                    </StackPanel>
                                                </ToolTip>
                                            </dx:DXImage.ToolTip>
                                        </dx:DXImage>

                                    </Grid>
                                </dxlc:LayoutItem>
                                <dxlc:LayoutItem Label="{dxrudl:ReportDesignerStringId StringId=Properties_Argument_Expression}" Style="{StaticResource layoutItemWithDisabling}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="auto" SharedSizeGroup="A" />
                                        </Grid.ColumnDefinitions>
                                        <dxe:PopupBaseEdit EditValue="{Binding ArgumentExpression, RelativeSource={RelativeSource Mode=TemplatedParent}}" InvalidValueBehavior="AllowLeaveEditor" Style="{StaticResource expressionEditorsStyle}">
                                            <dxe:PopupBaseEdit.Buttons>
                                                <dxe:ButtonInfoCollection>
                                                    <dxe:ButtonInfo Command="{Binding ShowArgumentExpressionEditor, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{StaticResource summaryExpressionEditorButtonStyle}" />
                                                </dxe:ButtonInfoCollection>
                                            </dxe:PopupBaseEdit.Buttons>

                                        </dxe:PopupBaseEdit>
                                    </Grid>
                                </dxlc:LayoutItem>

                                <dxlc:LayoutItem Label="{dxrudl:ReportDesignerStringId StringId=Properties_Weight}" Style="{StaticResource layoutItemWithDisabling}" Visibility="{Binding SummaryFunction, Converter={dxrudi:SummaryFunctionToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="auto" SharedSizeGroup="A" />
                                        </Grid.ColumnDefinitions>
                                        <dxe:PopupBaseEdit EditValue="{Binding WeightExpression, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=TemplatedParent}}" InvalidValueBehavior="AllowLeaveEditor" Style="{StaticResource expressionEditorsStyle}">
                                            <dxe:PopupBaseEdit.Buttons>
                                                <dxe:ButtonInfoCollection>
                                                    <dxe:ButtonInfo Command="{Binding ShowWeightExpressionEditor, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{StaticResource summaryExpressionEditorButtonStyle}" />
                                                </dxe:ButtonInfoCollection>
                                            </dxe:PopupBaseEdit.Buttons>
                                        </dxe:PopupBaseEdit>
                                    </Grid>
                                </dxlc:LayoutItem>
                                <dxlc:LayoutItem AddColonToLabel="False" Label=" " Style="{StaticResource layoutItemWithDisabling}">
                                    <dxe:CheckEdit Content="{dxrudl:ReportDesignerStringId StringId=Properties_IgnoreNullValues}" EditValue="{Binding IgnoreNullValues, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                </dxlc:LayoutItem>
                                <dxlc:LayoutItem AddColonToLabel="False" Label=" " Style="{StaticResource layoutItemWithDisabling}">
                                    <dxe:CheckEdit Content="{dxrudl:ReportDesignerStringId StringId=Properties_TreatStringsAsNumerics}" EditValue="{Binding TreatStringsAsNumerics, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                </dxlc:LayoutItem>
                            </dxlc:LayoutGroup>

                        </dxlc:LayoutControl>
                    </dxrude:DialogEditorView>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ItemPatternUITypeEditor.DefaultStyleBase" TargetType="{x:Type propertyeditors:ItemPatternUITypeEditor}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <dxrude:DialogEditorView>
                        <dxlc:LayoutControl Margin="12,12,12,0">
                            <dxlc:LayoutGroup Orientation="Horizontal">
                                <dxlc:LayoutItem
                                    VerticalAlignment="Stretch"
                                    AddColonToLabel="True"
                                    Label="{dxrudl:ReportDesignerStringId StringId=Chart_PatternEditor_Placeholders}"
                                    LabelPosition="Top">
                                    <dxe:ListBoxEdit
                                        DisplayMember="Key"
                                        EditValue="{Binding SelectedPlaceHolder, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                        ItemsSource="{Binding PlaceHolders, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                        ValueMember="Value">
                                        <dxmvvm:Interaction.Behaviors>
                                            <dxmvvm:EventToCommand Command="{Binding AddPlaceHolderCommand, RelativeSource={RelativeSource Mode=TemplatedParent}}" CommandParameter="{Binding SelectedPlaceHolder, RelativeSource={RelativeSource Mode=TemplatedParent}}" EventName="MouseDoubleClick" />
                                        </dxmvvm:Interaction.Behaviors>
                                    </dxe:ListBoxEdit>
                                </dxlc:LayoutItem>
                                <dxlc:LayoutItem HorizontalAlignment="Left" VerticalAlignment="Stretch" VerticalContentAlignment="Center">
                                    <StackPanel HorizontalAlignment="Center" Orientation="Vertical">
                                        <Button
                                            Margin="0,0,0,4"
                                            Padding="0"
                                            Command="{Binding AddPlaceHolderCommand, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                            CommandParameter="{Binding SelectedPlaceHolder, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                            <dx:DXImage Width="32" Source="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/Misc/RightDirection.svg'}" />
                                        </Button>
                                        <Button Padding="0" Command="{Binding AddAllPlaceHoldersCommand, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                            <dx:DXImage Width="32" Source="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/Misc/DoubleRightDirection.svg'}" />
                                        </Button>
                                    </StackPanel>
                                </dxlc:LayoutItem>

                                <dxlc:LayoutItem
                                    VerticalAlignment="Stretch"
                                    AddColonToLabel="True"
                                    Label="{dxrudl:ReportDesignerStringId StringId=Chart_PatternEditor_Pattern}"
                                    LabelPosition="Top">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="5*" />
                                            <RowDefinition Height="1*" />
                                        </Grid.RowDefinitions>
                                        <TextBox
                                            x:Name="PART_TextBox"
                                            VerticalContentAlignment="Top"
                                            AcceptsReturn="True"
                                            Text="{Binding Pattern, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            TextWrapping="Wrap" />
                                        <dxe:TextEdit
                                            Grid.Row="1"
                                            Margin="0,4,0,0"
                                            AcceptsReturn="True"
                                            HorizontalScrollBarVisibility="Hidden"
                                            IsReadOnly="True"
                                            Text="{Binding PatternDescription, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                            TextWrapping="Wrap" />
                                    </Grid>
                                </dxlc:LayoutItem>
                                <dxlc:LayoutGroup VerticalAlignment="Stretch" Orientation="Vertical">
                                    <dxlc:LayoutItem AddColonToLabel="True" Label="{dxrudl:ReportDesignerStringId StringId=Chart_PatternEditor_Format}" LabelPosition="Top">
                                        <dxe:ComboBoxEdit EditValue="{Binding SelectedDisplayFormatGroup, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=TemplatedParent}}" IsTextEditable="False" ItemsSource="{Binding DisplayFormatGroups, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                    </dxlc:LayoutItem>
                                    <dxlc:LayoutItem VerticalAlignment="Stretch">
                                        <dxe:ListBoxEdit EditValue="{Binding SelectedDisplayFormat, RelativeSource={RelativeSource Mode=TemplatedParent}}" Focusable="True" ItemsSource="{Binding SelectedDisplayFormatGroup.FormatStrings, RelativeSource={RelativeSource Mode=TemplatedParent}}">

                                            <dxe:ListBoxEdit.ItemContainerStyle>
                                                <Style TargetType="dxe:ListBoxEditItem">

                                                    <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
                                                        <Setter.Value>
                                                            <DataTemplate>
                                                                <ItemsControl>
                                                                    <dxmvvm:EventToCommand Command="{Binding ApplyFormatCommand, RelativeSource={RelativeSource AncestorType=propertyeditors:ItemPatternUITypeEditor}}" CommandParameter="{Binding SelectedDisplayFormat, RelativeSource={RelativeSource AncestorType=propertyeditors:ItemPatternUITypeEditor}}" EventName="PreviewMouseUp" />
                                                                </ItemsControl>
                                                            </DataTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </dxe:ListBoxEdit.ItemContainerStyle>
                                        </dxe:ListBoxEdit>
                                    </dxlc:LayoutItem>
                                </dxlc:LayoutGroup>
                            </dxlc:LayoutGroup>
                        </dxlc:LayoutControl>
                    </dxrude:DialogEditorView>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SortingSummaryUITypeEditor.DefaultStyleBase" TargetType="dxrude:SortingSummaryUITypeEditor">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxrude:SortingSummaryUITypeEditor">
                    <dxlc:LayoutControl>
                        <Grid>
                            <Grid.Style>
                                <Style TargetType="Grid">
                                    <Setter Property="Width" Value="425" />
                                    <Setter Property="Height" Value="210" />
                                    <Style.Triggers>
                                        <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                                            <Setter Property="Width" Value="600" />
                                            <Setter Property="Height" Value="310" />
                                        </Trigger>
                                        <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                                            <Setter Property="Width" Value="600" />
                                            <Setter Property="Height" Value="310" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="3*" />
                                <ColumnDefinition Width="2*" />
                            </Grid.ColumnDefinitions>
                            <dxlc:LayoutGroup HorizontalAlignment="Stretch" ItemLabelsAlignment="Local" Orientation="Vertical">
                                <dxlc:LayoutItem>
                                    <dxe:CheckEdit Content="Enabled" IsChecked="{Binding EnableSummary, RelativeSource={RelativeSource TemplatedParent}}" />
                                </dxlc:LayoutItem>
                                <dxlc:LayoutGroup IsEnabled="{TemplateBinding EnableSummary}" Orientation="Vertical">
                                    <dxlc:LayoutItem AddColonToLabel="True" Label="Field" LabelPosition="Top">
                                        <dxrude:PopupTreeListEdit
                                            ChildNodesPath="Children"
                                            DisplayMember="FullPath"
                                            EditValue="{Binding Field, RelativeSource={RelativeSource TemplatedParent}}"
                                            HierarchicalPathProvider="{dxrude:BindingDataHierarchicalPathProvider}"
                                            ItemsSource="{TemplateBinding FieldListNodes}"
                                            PopupDisplayMember="DisplayName"
                                            PopupSelectionValidator="{dxrude:BindingDataPopupSelectionValidator}"
                                            TreeListCellTemplate="{DynamicResource {dxrudt:LWKey ReportDesigner.FieldListNodeTemplate}}"
                                            ValueMember="BindingData" />
                                    </dxlc:LayoutItem>
                                    <dxlc:LayoutItem AddColonToLabel="True" Label="Summary function" LabelPosition="Top">
                                        <dxe:ComboBoxEdit EditValue="{Binding SummaryFunction, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" IsTextEditable="False" ItemsSource="{dxe:EnumItemsSource EnumType={x:Type reportsui:SortingSummaryFunction}}" />
                                    </dxlc:LayoutItem>
                                    <dxlc:LayoutItem AddColonToLabel="True" Label="Sort order" LabelPosition="Top">
                                        <dxe:ComboBoxEdit EditValue="{Binding SortOrder, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" IsTextEditable="False" ItemsSource="{dxe:EnumItemsSource EnumType={x:Type reportsui:XRColumnSortOrder}}" />
                                    </dxlc:LayoutItem>
                                    <dxlc:LayoutItem>
                                        <dxe:CheckEdit Content="Ignore null values" IsChecked="{Binding IgnoreNullValues, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </dxlc:LayoutItem>
                                </dxlc:LayoutGroup>
                            </dxlc:LayoutGroup>
                            <dxlc:LayoutGroup
                                Grid.Column="1"
                                HorizontalAlignment="Stretch"
                                ItemLabelsAlignment="Local"
                                Orientation="Vertical">
                                <dxlc:LayoutItem HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    <dx:DXBorder
                                        Margin="18,0,0,0"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        Background="White"
                                        BorderBrush="DarkGray"
                                        BorderThickness="1">
                                        <Grid Margin="18">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="auto" />
                                                <RowDefinition Height="auto" />
                                            </Grid.RowDefinitions>
                                            <ItemsControl ItemsSource="{TemplateBinding PreviewData}">
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <TextBlock>
                                                            <TextBlock.Text>
                                                                <MultiBinding Converter="{StaticResource summaryPreviewToTextConverter}">
                                                                    <Binding />
                                                                    <Binding Source="{x:Null}" />
                                                                </MultiBinding>
                                                            </TextBlock.Text>
                                                        </TextBlock>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>
                                            <dx:DXBorder
                                                Grid.Row="1"
                                                Margin="0,18,27,6"
                                                BorderBrush="Black"
                                                BorderThickness="0,1,0,0" />
                                            <TextBlock Grid.Row="2" Text="{TemplateBinding PreviewResult}" />
                                        </Grid>
                                    </dx:DXBorder>
                                </dxlc:LayoutItem>
                            </dxlc:LayoutGroup>
                        </Grid>
                    </dxlc:LayoutControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VisibilityInPanesUITypeEditor.DefaultStyleBase" TargetType="{x:Type dxrude:VisibilityInPanesUITypeEditor}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxrude:VisibilityInPanesUITypeEditor}">
                    <dxrude:DialogEditorView>
                        <dxlc:LayoutControl Margin="12,12,12,0" Orientation="Vertical">
                            <dxlc:LayoutItem>
                                <TextBlock Text="Check panes in which to show the current axis:" TextWrapping="Wrap" />
                            </dxlc:LayoutItem>
                            <dxlc:LayoutItem VerticalAlignment="Stretch">
                                <dxg:GridControl ItemsSource="{TemplateBinding Items}">
                                    <dxg:GridControl.Columns>
                                        <dxg:GridColumn FieldName="Visible" Header="{dxrudi:ChartLocalizer StringId=PanesVisibilityDialogVisibleColumn}" />
                                        <dxg:GridColumn FieldName="Pane" AllowEditing="False" Header="{dxrudi:ChartLocalizer StringId=PanesVisibilityDialogPanesColumn}" />
                                    </dxg:GridControl.Columns>
                                    <dxg:GridControl.View>
                                        <dxg:TableView
                                            AllowColumnFiltering="False"
                                            AllowSorting="False"
                                            AutoWidth="True"
                                            IsColumnMenuEnabled="False"
                                            ShowGroupPanel="False"
                                            ShowIndicator="False"
                                            VerticalScrollbarVisibility="Auto" />
                                    </dxg:GridControl.View>
                                </dxg:GridControl>
                            </dxlc:LayoutItem>
                        </dxlc:LayoutControl>
                    </dxrude:DialogEditorView>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AnnotationItemKindUITypeEditor.DefaultStyleBase" TargetType="{x:Type dxrude:AnnotationItemKindUITypeEditor}">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Vertical">
                        <dx:DXImage Source="{Binding Image}" />
                        <TextBlock Text="{Binding Name}" TextAlignment="Center" />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxrude:AnnotationItemKindUITypeEditor}">
                    <dxrude:DialogEditorView>
                        <dxe:ListBoxEdit
                            Margin="12,12,12,0"
                            HorizontalAlignment="Center"
                            EditValue="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}}"
                            ItemTemplate="{TemplateBinding ItemTemplate}"
                            ItemsSource="{TemplateBinding Items}"
                            ShowBorder="False">
                            <dxe:ListBoxEdit.ItemContainerStyle>
                                <Style TargetType="{x:Type dxe:ListBoxEditItem}">
                                    <Setter Property="Margin" Value="7" />
                                </Style>
                            </dxe:ListBoxEdit.ItemContainerStyle>
                            <dxe:ListBoxEdit.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </dxe:ListBoxEdit.ItemsPanel>
                        </dxe:ListBoxEdit>
                    </dxrude:DialogEditorView>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AnnotationAnchorPointUITypeEditor.DefaultStyleBase" BasedOn="{StaticResource AnnotationItemKindUITypeEditor.DefaultStyleBase}" TargetType="{x:Type dxrude:AnnotationAnchorPointUITypeEditor}">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Vertical" ToolTip="{Binding ToolTip}">
                        <dx:DXImage Source="{Binding Image}" />
                        <TextBlock Text="{Binding Name}" TextAlignment="Center" />
                        <dxmvvm:Interaction.Behaviors>
                            <dxdai:DoubleClickCommandExecutor Command="{Binding Path=AssociatedObject.(dxrude:AnnotationItemKindUITypeEditor.Editor).SaveCommand, RelativeSource={RelativeSource Self}}" />
                        </dxmvvm:Interaction.Behaviors>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SeriesPointEditorDialogServiceTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dx:DialogService DialogWindowStartupLocation="CenterOwner">
                            <dx:DialogService.DialogStyle>
                                <Style BasedOn="{StaticResource CustomFooterThemedWindowDialogStyle}" TargetType="{x:Type dx:ThemedWindow}">
                                    <Setter Property="Width" Value="550" />
                                    <Setter Property="Height" Value="385" />
                                    <Setter Property="MinWidth" Value="285" />
                                    <Setter Property="MinHeight" Value="250" />
                                    <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=Chart_SeriesPointEditor_Title}" />
                                </Style>
                            </dx:DialogService.DialogStyle>
                            <dx:DialogService.ViewTemplate>
                                <DataTemplate>
                                    <dxrude:SeriesPointUITypeEditor Chart="{Binding Chart}" EditValue="{Binding SeriesPoint}" />
                                </DataTemplate>
                            </dx:DialogService.ViewTemplate>
                        </dx:DialogService>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SummaryFunctionUITypeEditor.DefaultStyleBase" TargetType="dxrude:SummaryFunctionUITypeEditor">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxrude:SummaryFunctionUITypeEditor">
                    <dxrude:DialogEditorView>
                        <Grid>
                            <Grid.Resources>
                                <Style TargetType="{x:Type dxprg:PropertyGridControl}">
                                    <Setter Property="SortMode" Value="Ascending" />
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="5" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <dxrudi:ComboBoxEditEx
                                Grid.Row="0"
                                Grid.Column="0"
                                Margin="12,12,3,6"
                                AllowNullInput="True"
                                EditValue="{Binding SelectedSummaryFunction, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                IsTextEditable="False"
                                ItemsSource="{Binding Series, Converter={dxrudei:XRChartToSummaryFunctionsConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                                NullText="{dxrudl:ReportDesignerStringId StringId=Chart_SummaryFunctionEditor_ChooseSummaryFunction_Caption}"
                                NullValueButtonPlacement="Popup"
                                PopupMinHeight="100"
                                ShowNullText="True"
                                ShowNullTextForEmptyValue="False"
                                ShowPopupOnEmptyItemsSource="True" />

                            <Grid Grid.Row="1" Grid.Column="0" Margin="12,0,3,12">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <dxe:ListBoxEdit EditValue="{Binding SelectedArgument, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Arguments, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}">
                                    <dxe:ListBoxEdit.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding ArgumentName}" />
                                                <TextBlock Text="   " />
                                                <TextBlock Text="{Binding Argument, Converter={dxrudi:SelectedDataMemberToDisplayNameConverter}}" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </dxe:ListBoxEdit.ItemTemplate>
                                </dxe:ListBoxEdit>

                                <Grid Grid.Row="1">
                                    <Grid.Visibility>
                                        <MultiBinding Converter="{dxrudi:SummaryFunctionsToGridVisibilityConverter}">
                                            <Binding Path="Series" RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Path="SelectedSummaryFunction" RelativeSource="{RelativeSource TemplatedParent}" />
                                        </MultiBinding>
                                    </Grid.Visibility>

                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Button
                                            Margin="0,9,2,0"
                                            Padding="0,5"
                                            Command="{Binding AddArgumentCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                            Content="Add" />
                                        <Button
                                            Grid.Column="1"
                                            Margin="2,9,0,0"
                                            Padding="0,5"
                                            Command="{Binding RemoveArgumentCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                            Content="Remove" />
                                    </Grid>
                                </Grid>
                            </Grid>

                            <GridSplitter
                                Grid.Row="1"
                                Grid.Column="1"
                                Width="5"
                                Margin="0,0,0,6"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Stretch"
                                Background="Transparent" />

                            <Grid
                                Grid.Row="1"
                                Grid.Column="2"
                                MaxHeight="100000"
                                Margin="3,0,12,12">
                                <dxrudfl:ReportDesignerFieldListControl
                                    x:Name="PART_ReportDesignerFieldList"
                                    MaxHeight="10000"
                                    Nodes="{TemplateBinding Nodes}"
                                    SelectedItem="{Binding SelectedFieldListNode, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    ShowBorder="True">
                                    <dxrudfl:ReportDesignerFieldListControl.Visibility>
                                        <MultiBinding Converter="{dxrudei:SummaryFunctionToArgumentNodesVisibilityConverter}">
                                            <Binding Path="SelectedSummaryFunction" RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Path="Nodes" RelativeSource="{RelativeSource TemplatedParent}" />
                                        </MultiBinding>
                                    </dxrudfl:ReportDesignerFieldListControl.Visibility>
                                    <dxrudfl:ReportDesignerFieldListControl.Resources>
                                        <Style x:Key="{dxrudt:LWKey ReportDesigner.FieldListNodeBehaviorTemplate}" TargetType="{x:Type dxg:TreeListColumn}" />
                                    </dxrudfl:ReportDesignerFieldListControl.Resources>
                                </dxrudfl:ReportDesignerFieldListControl>
                                <Label
                                    HorizontalContentAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    BorderBrush="DarkGray"
                                    BorderThickness="1"
                                    Content="{dxrudl:ReportDesignerStringId StringId=Chart_SummaryFunctionEditor_NoDataToSelect_Caption}"
                                    Opacity="0.5">
                                    <Label.Visibility>
                                        <MultiBinding Converter="{dxrudei:SummaryFunctionToArgumentNodesVisibilityConverter Inverse=True}">
                                            <Binding Path="SelectedSummaryFunction" RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Path="Nodes" RelativeSource="{RelativeSource TemplatedParent}" />
                                        </MultiBinding>
                                    </Label.Visibility>
                                </Label>
                            </Grid>
                        </Grid>
                    </dxrude:DialogEditorView>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="StringCollectionEditor.DefaultStyleBase" TargetType="{x:Type dxrude:StringCollectionEditor}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxrude:StringCollectionEditor}">
                    <dxrude:DialogEditorView>
                        <dxlc:LayoutControl Padding="12,12,12,0">
                            <dxlc:LayoutGroup>
                                <dxlc:LayoutItem VerticalAlignment="Stretch" Label="Enter the strings into the collection (one per line):" LabelPosition="Top">
                                    <dxe:TextEdit
                                        VerticalContentAlignment="Top"
                                        AcceptsReturn="True"
                                        AcceptsTab="True"
                                        EditValue="{Binding AllText, RelativeSource={RelativeSource TemplatedParent}}" />
                                </dxlc:LayoutItem>
                            </dxlc:LayoutGroup>
                        </dxlc:LayoutControl>
                    </dxrude:DialogEditorView>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SqlQueryUITypeEditor.DefaultStyleBase" TargetType="{x:Type dxrude:SqlQueryUITypeEditor}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxrude:SqlQueryUITypeEditor}">
                    <ContentPresenter x:Name="PART_DataSourceWizardContentControl" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="DataSourceWizardTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxda:DataSourceWizardControl DataSourceWizardSettings="{Binding Path=(dxrude:SqlQueryUITypeEditor.Editor).DataSourceWizardSettings, RelativeSource={RelativeSource Self}}" ParameterService="{Binding Path=(dxrude:SqlQueryUITypeEditor.Editor).ParameterService, RelativeSource={RelativeSource Self}}" ServicesRegistry="{Binding Path=(dxrude:SqlQueryUITypeEditor.Editor).ServicesRegistry, RelativeSource={RelativeSource Self}}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MessageBoxServiceTemplate" Value="{DynamicResource {dxrudt:LWKey ReportDesigner.DefaultMessageBoxServiceTemplate}}" />
        <Setter Property="SplashScreenServiceTemplate" Value="{DynamicResource {dxrudt:LWKey ReportDesigner.DefaultSplashScreenServiceTemplate}}" />
    </Style>
    <Style x:Key="QueryNodeUITypeEditor.DefaultStyleBase" TargetType="{x:Type dxrude:QueryNodeUITypeEditor}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxrude:QueryNodeUITypeEditor}">
                    <ContentPresenter x:Name="PART_DataSourceWizardContentControl" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="DataSourceWizardTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxda:DataSourceWizardControl
                        DataSourceWizardExtensions="{Binding Path=(dxrude:QueryNodeUITypeEditor.Editor).DataSourceWizardExtensions, RelativeSource={RelativeSource Self}}"
                        DataSourceWizardSettings="{Binding Path=(dxrude:QueryNodeUITypeEditor.Editor).DataSourceWizardSettings, RelativeSource={RelativeSource Self}}"
                        ParameterService="{Binding Path=(dxrude:QueryNodeUITypeEditor.Editor).ParameterService, RelativeSource={RelativeSource Self}}"
                        ServicesRegistry="{Binding Path=(dxrude:QueryNodeUITypeEditor.Editor).ServicesRegistry, RelativeSource={RelativeSource Self}}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SeriesPointUITypeEditor.DefaultStyleBase" TargetType="{x:Type dxrude:SeriesPointUITypeEditor}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxrude:SeriesPointUITypeEditor}">
                    <dxrude:DialogEditorView>
                        <dxlc:LayoutControl Padding="12,12,12,0">
                            <dxlc:LayoutGroup Orientation="Horizontal">
                                <dxlc:LayoutGroup Orientation="Vertical">
                                    <dxlc:LayoutItem
                                        VerticalAlignment="Stretch"
                                        AddColonToLabel="True"
                                        Label="Choose the Series Point"
                                        LabelPosition="Top">
                                        <dxe:ListBoxEdit EditValue="{Binding SelectedSeries, RelativeSource={RelativeSource TemplatedParent}}" ItemsSource="{TemplateBinding Series}">
                                            <dxe:ListBoxEdit.ItemTemplate>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal">
                                                        <dx:DXImage Source="{Binding Converter={dxrudi:SeriesToIconConverter}}" />
                                                        <TextBlock Margin="5,0,0,0" Text="{Binding Converter={dxrudi:ObjectToStringConverter}}" />
                                                    </StackPanel>
                                                </DataTemplate>
                                            </dxe:ListBoxEdit.ItemTemplate>
                                        </dxe:ListBoxEdit>
                                    </dxlc:LayoutItem>
                                    <dxlc:LayoutItem Visibility="{Binding SeriesStatusInfoVisible, Converter={dxmvvm:BooleanToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                                        <dx:BackgroundPanel>
                                            <TextBlock Text="{TemplateBinding SeriesStatusInfo}" />
                                        </dx:BackgroundPanel>
                                    </dxlc:LayoutItem>
                                </dxlc:LayoutGroup>
                                <dxlc:LayoutItem
                                    VerticalAlignment="Stretch"
                                    AddColonToLabel="True"
                                    Label="Points"
                                    LabelPosition="Top">
                                    <dxg:GridControl CurrentItem="{Binding EditValue, RelativeSource={RelativeSource TemplatedParent}}" ItemsSource="{TemplateBinding Points}">
                                        <dxg:GridControl.View>
                                            <dxg:TableView
                                                AllowColumnFiltering="False"
                                                AllowColumnMoving="False"
                                                AutoWidth="True"
                                                IsColumnMenuEnabled="False"
                                                NavigationStyle="Row"
                                                ShowGroupPanel="False"
                                                ShowIndicator="False"
                                                VerticalScrollbarVisibility="Auto" />
                                        </dxg:GridControl.View>
                                        <dxmvvm:Interaction.Behaviors>
                                            <dxrudi:ReadonlyPointsColumnFiller Series="{Binding SelectedSeries, RelativeSource={RelativeSource TemplatedParent}}" />
                                        </dxmvvm:Interaction.Behaviors>
                                    </dxg:GridControl>
                                </dxlc:LayoutItem>
                            </dxlc:LayoutGroup>
                        </dxlc:LayoutControl>
                    </dxrude:DialogEditorView>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PopupTextAlignmentUITypeEditor.DefaultStyleBase" TargetType="{x:Type dxrude:PopupTextAlignmentUITypeEditor}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxrude:PopupTextAlignmentUITypeEditor}">
                    <dxlc:LayoutControl Orientation="Horizontal">
                        <dxlc:LayoutGroup Orientation="Horizontal">
                            <dxlc:LayoutGroup ItemSpace="40">
                                <dxlc:LayoutGroup Orientation="Vertical">
                                    <dxlc:LayoutItem>
                                        <ToggleButton Command="{Binding SetTextAlignmentCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="TopLeft" IsChecked="{Binding EditValue, Mode=OneWay, Converter={dxrudi:TextAlignmentButtonCheckedConverter TextAlignment={x:Static MemberType={x:Type xpd:TextAlignment}, Member=TopLeft}}, RelativeSource={RelativeSource TemplatedParent}}">
                                            <dx:DXImage Source="{dxrud:ReportDesignerResourceImage ResourceName='Images/Svg/FontGroup/JustifyLeft.svg'}" />
                                        </ToggleButton>
                                    </dxlc:LayoutItem>
                                    <dxlc:LayoutItem>
                                        <ToggleButton Command="{Binding SetTextAlignmentCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="MiddleLeft" IsChecked="{Binding EditValue, Mode=OneWay, Converter={dxrudi:TextAlignmentButtonCheckedConverter TextAlignment={x:Static MemberType={x:Type xpd:TextAlignment}, Member=MiddleLeft}}, RelativeSource={RelativeSource TemplatedParent}}">
                                            <dx:DXImage Source="{dxrud:ReportDesignerResourceImage ResourceName='Images/Svg/FontGroup/JustifyLeft.svg'}" />
                                        </ToggleButton>
                                    </dxlc:LayoutItem>
                                    <dxlc:LayoutItem>
                                        <ToggleButton Command="{Binding SetTextAlignmentCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="BottomLeft" IsChecked="{Binding EditValue, Mode=OneWay, Converter={dxrudi:TextAlignmentButtonCheckedConverter TextAlignment={x:Static MemberType={x:Type xpd:TextAlignment}, Member=BottomLeft}}, RelativeSource={RelativeSource TemplatedParent}}">
                                            <dx:DXImage Source="{dxrud:ReportDesignerResourceImage ResourceName='Images/Svg/FontGroup/JustifyLeft.svg'}" />
                                        </ToggleButton>
                                    </dxlc:LayoutItem>
                                </dxlc:LayoutGroup>
                                <dxlc:LayoutGroup Orientation="Vertical">
                                    <dxlc:LayoutItem>
                                        <ToggleButton Command="{Binding SetTextAlignmentCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="TopCenter" IsChecked="{Binding EditValue, Mode=OneWay, Converter={dxrudi:TextAlignmentButtonCheckedConverter TextAlignment={x:Static MemberType={x:Type xpd:TextAlignment}, Member=TopCenter}}, RelativeSource={RelativeSource TemplatedParent}}">
                                            <dx:DXImage Source="{dxrud:ReportDesignerResourceImage ResourceName='Images/Svg/FontGroup/JustifyCenter.svg'}" />
                                        </ToggleButton>
                                    </dxlc:LayoutItem>
                                    <dxlc:LayoutItem>
                                        <ToggleButton Command="{Binding SetTextAlignmentCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="MiddleCenter" IsChecked="{Binding EditValue, Mode=OneWay, Converter={dxrudi:TextAlignmentButtonCheckedConverter TextAlignment={x:Static MemberType={x:Type xpd:TextAlignment}, Member=MiddleCenter}}, RelativeSource={RelativeSource TemplatedParent}}">
                                            <dx:DXImage Source="{dxrud:ReportDesignerResourceImage ResourceName='Images/Svg/FontGroup/JustifyCenter.svg'}" />
                                        </ToggleButton>
                                    </dxlc:LayoutItem>
                                    <dxlc:LayoutItem>
                                        <ToggleButton Command="{Binding SetTextAlignmentCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="BottomCenter" IsChecked="{Binding EditValue, Mode=OneWay, Converter={dxrudi:TextAlignmentButtonCheckedConverter TextAlignment={x:Static MemberType={x:Type xpd:TextAlignment}, Member=BottomCenter}}, RelativeSource={RelativeSource TemplatedParent}}">
                                            <dx:DXImage Source="{dxrud:ReportDesignerResourceImage ResourceName='Images/Svg/FontGroup/JustifyCenter.svg'}" />
                                        </ToggleButton>
                                    </dxlc:LayoutItem>
                                </dxlc:LayoutGroup>
                            </dxlc:LayoutGroup>
                            <dxlc:LayoutGroup ItemSpace="40">
                                <dxlc:LayoutGroup Orientation="Vertical">
                                    <dxlc:LayoutGroup Orientation="Vertical" Visibility="{Binding AllowJustify, RelativeSource={RelativeSource TemplatedParent}, Converter={dx:BooleanToVisibilityConverter}}">
                                        <dxlc:LayoutItem>
                                            <ToggleButton Command="{Binding SetTextAlignmentCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="TopJustify" IsChecked="{Binding EditValue, Mode=OneWay, Converter={dxrudi:TextAlignmentButtonCheckedConverter TextAlignment={x:Static MemberType={x:Type xpd:TextAlignment}, Member=TopJustify}}, RelativeSource={RelativeSource TemplatedParent}}">
                                                <dx:DXImage Source="{dxrud:ReportDesignerResourceImage ResourceName='Images/Svg/FontGroup/JustifyJustify.svg'}" />
                                            </ToggleButton>
                                        </dxlc:LayoutItem>
                                        <dxlc:LayoutItem>
                                            <ToggleButton Command="{Binding SetTextAlignmentCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="MiddleJustify" IsChecked="{Binding EditValue, Mode=OneWay, Converter={dxrudi:TextAlignmentButtonCheckedConverter TextAlignment={x:Static MemberType={x:Type xpd:TextAlignment}, Member=MiddleJustify}}, RelativeSource={RelativeSource TemplatedParent}}">
                                                <dx:DXImage Source="{dxrud:ReportDesignerResourceImage ResourceName='Images/Svg/FontGroup/JustifyJustify.svg'}" />
                                            </ToggleButton>
                                        </dxlc:LayoutItem>
                                        <dxlc:LayoutItem>
                                            <ToggleButton Command="{Binding SetTextAlignmentCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="BottomJustify" IsChecked="{Binding EditValue, Mode=OneWay, Converter={dxrudi:TextAlignmentButtonCheckedConverter TextAlignment={x:Static MemberType={x:Type xpd:TextAlignment}, Member=BottomJustify}}, RelativeSource={RelativeSource TemplatedParent}}">
                                                <dx:DXImage Source="{dxrud:ReportDesignerResourceImage ResourceName='Images/Svg/FontGroup/JustifyJustify.svg'}" />
                                            </ToggleButton>
                                        </dxlc:LayoutItem>
                                    </dxlc:LayoutGroup>
                                </dxlc:LayoutGroup>
                                <dxlc:LayoutGroup Orientation="Vertical">
                                    <dxlc:LayoutItem>
                                        <ToggleButton Command="{Binding SetTextAlignmentCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="TopRight" IsChecked="{Binding EditValue, Mode=OneWay, Converter={dxrudi:TextAlignmentButtonCheckedConverter TextAlignment={x:Static MemberType={x:Type xpd:TextAlignment}, Member=TopRight}}, RelativeSource={RelativeSource TemplatedParent}}">
                                            <dx:DXImage Source="{dxrud:ReportDesignerResourceImage ResourceName='Images/Svg/FontGroup/JustifyRight.svg'}" />
                                        </ToggleButton>
                                    </dxlc:LayoutItem>
                                    <dxlc:LayoutItem>
                                        <ToggleButton Command="{Binding SetTextAlignmentCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="MiddleRight" IsChecked="{Binding EditValue, Mode=OneWay, Converter={dxrudi:TextAlignmentButtonCheckedConverter TextAlignment={x:Static MemberType={x:Type xpd:TextAlignment}, Member=MiddleRight}}, RelativeSource={RelativeSource TemplatedParent}}">
                                            <dx:DXImage Source="{dxrud:ReportDesignerResourceImage ResourceName='Images/Svg/FontGroup/JustifyRight.svg'}" />
                                        </ToggleButton>
                                    </dxlc:LayoutItem>
                                    <dxlc:LayoutItem>
                                        <ToggleButton Command="{Binding SetTextAlignmentCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="BottomRight" IsChecked="{Binding EditValue, Mode=OneWay, Converter={dxrudi:TextAlignmentButtonCheckedConverter TextAlignment={x:Static MemberType={x:Type xpd:TextAlignment}, Member=BottomRight}}, RelativeSource={RelativeSource TemplatedParent}}">
                                            <dx:DXImage Source="{dxrud:ReportDesignerResourceImage ResourceName='Images/Svg/FontGroup/JustifyRight.svg'}" />
                                        </ToggleButton>
                                    </dxlc:LayoutItem>
                                </dxlc:LayoutGroup>
                            </dxlc:LayoutGroup>
                        </dxlc:LayoutGroup>
                    </dxlc:LayoutControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TextAlignmentUITypeEditor.DefaultStyleBase" TargetType="{x:Type dxrude:TextAlignmentUITypeEditor}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxrude:TextAlignmentUITypeEditor}">
                    <Grid>
                        <Grid.Resources>
                            <Style TargetType="dxrude:PGToggleButton">
                                <Setter Property="Width" Value="21" />
                                <Setter Property="Height" Value="21" />
                                <Setter Property="Padding" Value="1" />
                                <Setter Property="Margin" Value="0,0,2,0" />
                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                            </Style>
                            <Style TargetType="{x:Type dx:DXImage}">
                                <Setter Property="Width" Value="16" />
                                <Setter Property="Height" Value="16" />
                            </Style>
                        </Grid.Resources>


                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="6" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="4" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <TextBlock VerticalAlignment="Center" Text="Horizontal" />
                        <StackPanel Grid.Column="2" Orientation="Horizontal">
                            <dxrude:PGToggleButton Command="{Binding SetHorizontalAlignmentCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{x:Static HorizontalAlignment.Left}" IsChecked="{Binding HorizontalTextAlignment, Mode=OneWay, Converter={dxrudi:HorizontalTextAlignmentButtonCheckedConverter Alignment=Left}, RelativeSource={RelativeSource TemplatedParent}}">
                                <dx:DXImage Source="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/FontGroup/JustifyLeft.svg'}" />
                            </dxrude:PGToggleButton>
                            <dxrude:PGToggleButton Command="{Binding SetHorizontalAlignmentCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{x:Static HorizontalAlignment.Center}" IsChecked="{Binding HorizontalTextAlignment, Mode=OneWay, Converter={dxrudi:HorizontalTextAlignmentButtonCheckedConverter Alignment=Center}, RelativeSource={RelativeSource TemplatedParent}}">
                                <dx:DXImage Source="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/FontGroup/JustifyCenter.svg'}" />
                            </dxrude:PGToggleButton>
                            <dxrude:PGToggleButton
                                Command="{Binding SetHorizontalAlignmentCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                CommandParameter="{x:Static HorizontalAlignment.Stretch}"
                                IsChecked="{Binding HorizontalTextAlignment, Mode=OneWay, Converter={dxrudi:HorizontalTextAlignmentButtonCheckedConverter Alignment=Stretch}, RelativeSource={RelativeSource TemplatedParent}}"
                                Visibility="{Binding AllowJustify, RelativeSource={RelativeSource TemplatedParent}, Converter={dx:BooleanToVisibilityConverter}}">
                                <dx:DXImage Source="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/FontGroup/JustifyJustify.svg'}" />
                            </dxrude:PGToggleButton>
                            <dxrude:PGToggleButton Command="{Binding SetHorizontalAlignmentCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{x:Static HorizontalAlignment.Right}" IsChecked="{Binding HorizontalTextAlignment, Mode=OneWay, Converter={dxrudi:HorizontalTextAlignmentButtonCheckedConverter Alignment=Right}, RelativeSource={RelativeSource TemplatedParent}}">
                                <dx:DXImage Source="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/FontGroup/JustifyRight.svg'}" />
                            </dxrude:PGToggleButton>
                        </StackPanel>

                        <TextBlock Grid.Row="2" VerticalAlignment="Center" Text="Vertical" />
                        <StackPanel Grid.Row="2" Grid.Column="2" Orientation="Horizontal">
                            <dxrude:PGToggleButton Command="{Binding SetVerticalAlignmentCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{x:Static VerticalAlignment.Top}" IsChecked="{Binding VerticalTextAlignment, Mode=OneWay, Converter={dxrudi:VerticalAlignmentButtonCheckedConverter Alignment=Top}, RelativeSource={RelativeSource TemplatedParent}}">
                                <dx:DXImage Source="{Binding Source={x:Static VerticalAlignment.Top}, Converter={dxrudi:VerticalAlignmentToGlyphConverter}}" />
                            </dxrude:PGToggleButton>
                            <dxrude:PGToggleButton Command="{Binding SetVerticalAlignmentCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{x:Static VerticalAlignment.Center}" IsChecked="{Binding VerticalTextAlignment, Mode=OneWay, Converter={dxrudi:VerticalAlignmentButtonCheckedConverter Alignment=Center}, RelativeSource={RelativeSource TemplatedParent}}">
                                <dx:DXImage Source="{Binding Source={x:Static VerticalAlignment.Center}, Converter={dxrudi:VerticalAlignmentToGlyphConverter}}" />
                            </dxrude:PGToggleButton>
                            <dxrude:PGToggleButton Command="{Binding SetVerticalAlignmentCommand, RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{x:Static VerticalAlignment.Bottom}" IsChecked="{Binding VerticalTextAlignment, Mode=OneWay, Converter={dxrudi:VerticalAlignmentButtonCheckedConverter Alignment=Bottom}, RelativeSource={RelativeSource TemplatedParent}}">
                                <dx:DXImage Source="{Binding Source={x:Static VerticalAlignment.Bottom}, Converter={dxrudi:VerticalAlignmentToGlyphConverter}}" />
                            </dxrude:PGToggleButton>
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ImageAlignmentEditor.DefaultStyleBase" TargetType="{x:Type dxrude:ImageAlignmentEditor}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxrude:ImageAlignmentEditor}">
                    <dxb:ToolBarControl>
                        <dxb:ToolBarControl.Template>
                            <ControlTemplate TargetType="dxb:ToolBarControl">
                                <dxb:BarControl x:Name="PART_BarControl" ShowBackground="False">
                                    <dxb:BarControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <UniformGrid
                                                MinWidth="{dxrudi:ThemeImageSize Size=72, TouchThemeSize=132}"
                                                HorizontalAlignment="Left"
                                                Columns="3"
                                                Rows="3" />
                                        </ItemsPanelTemplate>
                                    </dxb:BarControl.ItemsPanel>
                                </dxb:BarControl>
                            </ControlTemplate>
                        </dxb:ToolBarControl.Template>
                        <dxb:BarItemSelector AllowEmptySelection="True" ItemLinksSource="{dxrudi:ImageAlignmentItemSource}" SelectedItem="{Binding Path=(dxrude:ImageAlignmentEditor.Editor).SelectedAlignment, RelativeSource={RelativeSource Self}}">
                            <dxb:BarItemSelector.ItemTemplate>
                                <DataTemplate>
                                    <ContentControl>
                                        <dxb:BarCheckItem Glyph="{Binding Converter={dxrudi:ImageAlignmentToImageConverter}}" Hint="{Binding Converter={dxrudi:EnumToDisplayNameConverter}}" />
                                    </ContentControl>
                                </DataTemplate>
                            </dxb:BarItemSelector.ItemTemplate>
                        </dxb:BarItemSelector>
                    </dxb:ToolBarControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ReportParameterCollectionEditorControl.DefaultStyleBase" TargetType="{x:Type dxrude:ReportParameterCollectionEditorControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxrude:ReportParameterCollectionEditorControl}">
                    <Grid Margin="12" dxe:ValidationService.IsValidationContainer="True" Grid.IsSharedSizeScope="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="200" MinWidth="150" MaxWidth="280" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <dxb:ToolBarControl
                            Margin="0,0,0,8"
                            AllowCustomizationMenu="False"
                            AllowQuickCustomization="False"
                            GlyphSize="Custom">
                            <dxb:BarButtonItem Command="{Binding ViewModel.AddParameterCommand, RelativeSource={RelativeSource TemplatedParent}}" Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/ParameterEditor/AddParameter.svg'}" Hint="{dxrudl:ReportStringId StringId=ParameterCollectionEditorForm_AddParameter}" />
                            <dxb:BarButtonItem Command="{Binding ViewModel.AddGroupCommand, RelativeSource={RelativeSource TemplatedParent}}" Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/ParameterEditor/AddGroup.svg'}" Hint="{dxrudl:ReportStringId StringId=ParameterCollectionEditorForm_AddGroup}" />
                            <dxb:BarButtonItem Command="{Binding ViewModel.AddSeparatorCommand, RelativeSource={RelativeSource TemplatedParent}}" Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/ParameterEditor/AddSeparator.svg'}" Hint="{dxrudl:ReportStringId StringId=ParameterCollectionEditorForm_AddSeparator}" />

                            <dxb:BarButtonItem
                                Alignment="Far"
                                Command="{Binding ViewModel.MoveUpCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/ParameterEditor/Up.svg'}"
                                Hint="{dxrudl:ReportStringId StringId=ParameterCollectionEditorForm_AddSeparator}" />
                            <dxb:BarButtonItem
                                Alignment="Far"
                                Command="{Binding ViewModel.MoveDownCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/ParameterEditor/Down.svg'}"
                                Hint="{dxrudl:ReportStringId StringId=ParameterCollectionEditorForm_AddSeparator}" />
                        </dxb:ToolBarControl>
                        <dxg:GridControl Grid.Row="1" ItemsSource="{Binding ViewModel.NestedItems, RelativeSource={RelativeSource TemplatedParent}}" SelectedItem="{Binding ViewModel.SelectedNode, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
                            <dxg:GridControl.Columns>
                                <dxg:GridColumn FieldName="DisplayName" Width="*">
                                    <dxg:GridColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="auto" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock
                                                    x:Name="PART_Editor"
                                                    Margin="2"
                                                    VerticalAlignment="Center"
                                                    IsHitTestVisible="False"
                                                    Text="{Binding RowData.Row.DisplayName}" />
                                                <Button
                                                    Name="PART_RemoveButton"
                                                    Grid.Column="1"
                                                    HorizontalAlignment="Right"
                                                    Command="{Binding ViewModel.DeleteNodeCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxrude:ReportParameterCollectionEditorControl}}}"
                                                    Content="{Binding RowData.Row.ItemKind, Converter={dxrude:ItemKindToImageConverter}}"
                                                    Style="{StaticResource collectionItemButtonStyle}"
                                                    Visibility="Collapsed" />
                                            </Grid>
                                            <DataTemplate.Triggers>
                                                <DataTrigger Binding="{Binding RowData.IsSelected}" Value="True">
                                                    <Setter TargetName="PART_RemoveButton" Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </dxg:GridColumn.CellTemplate>
                                </dxg:GridColumn>
                            </dxg:GridControl.Columns>
                            <dxg:GridControl.View>
                                <dxg:TreeListView
                                    Name="PART_TreeListView"
                                    AllowDragDrop="True"
                                    AllowSortedDataDragDrop="True"
                                    AutoExpandAllNodes="True"
                                    AutoWidth="True"
                                    ChildNodesPath="NestedItems"
                                    ExpandCollapseNodesOnNavigation="True"
                                    NavigationStyle="Row"
                                    NodeImageSelector="{dxrudi:TreeListNodeImageProviderExtension Type={x:Type dxrude:ParameterEditorImageSelector}}"
                                    ShowColumnHeaders="False"
                                    ShowDragDropHint="False"
                                    ShowEditFormOnDoubleClick="False"
                                    ShowHorizontalLines="False"
                                    ShowIndicator="False"
                                    ShowNodeImages="True"
                                    ShowTargetInfoInDragDropHint="True"
                                    ShowVerticalLines="False"
                                    TreeDerivationMode="ChildNodesSelector"
                                    VerticalScrollbarVisibility="Auto">
                                    <dxmvvm:Interaction.BehaviorsTemplate>
                                        <DataTemplate>
                                            <ItemsControl>
                                                <dxrude:ParameterEditorTreeViewDragDropBehavior />
                                            </ItemsControl>
                                        </DataTemplate>
                                    </dxmvvm:Interaction.BehaviorsTemplate>
                                </dxg:TreeListView>
                            </dxg:GridControl.View>
                        </dxg:GridControl>
                        <GridSplitter
                            Grid.Row="1"
                            Grid.RowSpan="2"
                            Grid.Column="1"
                            Width="6"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Stretch"
                            ShowsPreview="True">
                            <GridSplitter.Template>
                                <ControlTemplate>
                                    <dx:DXBorder x:Name="Root" Background="Transparent" BorderBrush="Transparent" />
                                </ControlTemplate>
                            </GridSplitter.Template>
                        </GridSplitter>
                        <ContentControl
                            Grid.Row="1"
                            Grid.Column="2"
                            Height="340"
                            Margin="24,0,12,0"
                            Content="{Binding ViewModel.SelectedView, RelativeSource={RelativeSource TemplatedParent}}"
                            ContentTemplateSelector="{StaticResource viewContentTemplateSelector}" />
                        <dx:ThemedWindowDialogButtonsControl Grid.Row="2" Grid.ColumnSpan="3">
                            <dxrudi:LocalizedDialogButton Alignment="Right" DialogResult="OK" IsEnabled="{Binding Path=(dxe:ValidationService.HasValidationError), RelativeSource={RelativeSource Self}, Converter={dx:NegationConverter}}" />
                            <dxrudi:LocalizedDialogButton Alignment="Right" DialogResult="Cancel" />
                        </dx:ThemedWindowDialogButtonsControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ReportParameterEditorControl.DefaultStyleBase" TargetType="{x:Type dxrude:ReportParameterEditorControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxrude:ReportParameterEditorControl}">
                    <Grid dxe:ValidationService.IsValidationContainer="True">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <ContentControl
                            Width="650"
                            Height="275"
                            Margin="12"
                            Content="{Binding ItemViewModel, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            ContentTemplate="{StaticResource parameterItemViewTemplate}" />
                        <dx:ThemedWindowDialogButtonsControl Grid.Row="1">
                            <dxrudi:LocalizedDialogButton Alignment="Right" DialogResult="OK" IsEnabled="{Binding Path=(dxe:ValidationService.HasValidationError), RelativeSource={RelativeSource Self}, Converter={dx:NegationConverter}}" />
                            <dxrudi:LocalizedDialogButton Alignment="Right" DialogResult="Cancel" />
                        </dx:ThemedWindowDialogButtonsControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ErrorPanelControl.DefaultStyleBase" TargetType="dxrudep:ErrorPanelControl">
        <Setter Property="Document" Value="{Binding Path=(dxrud:ReportDesigner.Document), RelativeSource={RelativeSource Mode=Self}}" />
        <Setter Property="ReportModel" Value="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel, RelativeSource={RelativeSource Mode=Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxrudep:ErrorPanelControl">
                    <Grid DataContext="{Binding ReportModel.ErrorPanelModel, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <dxb:ToolBarControl AllowCustomizationMenu="False" AllowQuickCustomization="False" GlyphSize="Custom">
                            <dxb:BarEditItem EditValue="{Binding ErrorSources, Converter={dxrudep:ErrorSourceToListConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditWidth="150" ToolTip="{Binding EditValue, RelativeSource={RelativeSource Self}, Converter={dxrudep:ErrorSourceComboboxTooltipConverter}}">
                                <dxb:BarEditItem.EditSettings>
                                    <dxrudi:ComboBoxEditSettingsEx
                                        DisplayMember="DisplayName"
                                        IsTextEditable="False"
                                        ItemsSource="{Binding AvailableErrorSources, Converter={dxrudep:ErrorSourceToDisplayTextConverter}}"
                                        PopupFooterButtons="None"
                                        ValueMember="Value">
                                        <dxrudi:ComboBoxEditSettingsEx.StyleSettings>
                                            <dxe:CheckedComboBoxStyleSettings />
                                        </dxrudi:ComboBoxEditSettingsEx.StyleSettings>
                                    </dxrudi:ComboBoxEditSettingsEx>
                                </dxb:BarEditItem.EditSettings>
                            </dxb:BarEditItem>
                            <dxb:BarItemSeparator />
                            <dxb:BarCheckItem
                                BarItemDisplayMode="ContentAndGlyph"
                                Content="{Binding MessageErrors}"
                                Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/ErrorPanel/Error.svg'}"
                                GlyphSize="Small"
                                IsChecked="{Binding ShowErrors, Mode=TwoWay}" />
                            <dxb:BarItemSeparator />
                            <dxb:BarCheckItem
                                BarItemDisplayMode="ContentAndGlyph"
                                Content="{Binding MessageWarnings}"
                                Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/ErrorPanel/Warning.svg'}"
                                GlyphSize="Small"
                                IsChecked="{Binding ShowWarnings, Mode=TwoWay}" />
                            <dxb:BarItemSeparator />
                            <dxb:BarCheckItem
                                BarItemDisplayMode="ContentAndGlyph"
                                Content="{Binding MessageInformation}"
                                Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/ErrorPanel/Information.svg'}"
                                GlyphSize="Small"
                                IsChecked="{Binding ShowInformation, Mode=TwoWay}" />
                            <dxb:BarItemSeparator />
                            <dxb:BarButtonItem
                                Command="{Binding Path=RestoreFiltersCommand, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/ErrorPanel/RestoreFilter.svg'}"
                                GlyphSize="Small"
                                ToolTip="{dxpn:PreviewStringId StringId=ReportDesignAnalyzer_TTip_RestoreFiltersToDefaultSettings}" />

                            <dxb:BarStaticItem Alignment="Far" BarItemDisplayMode="Content">
                                <dxb:BarStaticItem.ContentTemplate>
                                    <DataTemplate>
                                        <dxg:GridSearchControl Width="250" Margin="0" View="{Binding ElementName=PART_GridView}" />
                                    </DataTemplate>
                                </dxb:BarStaticItem.ContentTemplate>
                            </dxb:BarStaticItem>
                        </dxb:ToolBarControl>
                        <dxg:GridControl
                            Grid.Row="1"
                            FilterString="{Binding FilterString}"
                            ItemsSource="{Binding ErrorCollection}"
                            SelectionMode="Row"
                            ShowBorder="False">
                            <dxg:GridControl.Columns>
                                <dxg:GridColumn
                                    FieldName="Type"
                                    Width="25"
                                    Header=" "
                                    ReadOnly="True">
                                    <dxg:GridColumn.CellTemplate>
                                        <DataTemplate>
                                            <dx:DXImage
                                                Width="16"
                                                Height="16"
                                                VerticalAlignment="Center"
                                                SnapsToDevicePixels="True"
                                                Source="{Binding RowData.Row.Type, Converter={dxrudep:ErrorTypeToImageSourceConverter}}"
                                                Stretch="UniformToFill" />
                                        </DataTemplate>
                                    </dxg:GridColumn.CellTemplate>
                                </dxg:GridColumn>
                                <dxg:GridColumn
                                    FieldName="Code"
                                    Width="70"
                                    AllowColumnFiltering="True"
                                    CellTemplate="{Binding Path=(dxrudep:ErrorPanelControl.Editor).EnableErrorCodeLinks, RelativeSource={RelativeSource Self}, Converter={StaticResource codeEditorTemplateConverter}}"
                                    Header="{dxpn:PreviewStringId StringId=ReportDesignAnalyzer_GridColumn_Code}"
                                    ReadOnly="True" />
                                <dxg:GridColumn
                                    FieldName="Description"
                                    Width="*"
                                    AllowEditing="False"
                                    Header="{dxpn:PreviewStringId StringId=ReportDesignAnalyzer_GridColumn_Description}"
                                    ReadOnly="True" />
                                <dxg:GridColumn
                                    FieldName="ErrorData"
                                    Width="150"
                                    AllowEditing="False"
                                    Header="{dxpn:PreviewStringId StringId=ReportDesignAnalyzer_GridColumn_Source}"
                                    ReadOnly="True">
                                    <dxg:GridColumn.CellTemplate>
                                        <DataTemplate>
                                            <dxe:HyperlinkEdit
                                                x:Name="PART_Editor"
                                                Command="{Binding Path=(dxrudep:ErrorPanelControl.Editor).NavigateCommand, RelativeSource={RelativeSource Mode=Self}}"
                                                CommandParameter="{Binding RowData.Row}"
                                                Text="{Binding RowData.Row.ErrorData.DataString}" />
                                        </DataTemplate>
                                    </dxg:GridColumn.CellTemplate>
                                </dxg:GridColumn>
                            </dxg:GridControl.Columns>
                            <dxg:GridControl.DetailDescriptor>
                                <dxg:ContentDetailDescriptor HeaderContent="InnerDescriptions" ShowHeader="False">
                                    <dxg:ContentDetailDescriptor.ContentTemplate>
                                        <DataTemplate>
                                            <TextBlock Margin="4" Text="{Binding Converter={dxrudep:ErrorModelToDescriptionConverter}}" />
                                        </DataTemplate>
                                    </dxg:ContentDetailDescriptor.ContentTemplate>
                                </dxg:ContentDetailDescriptor>
                            </dxg:GridControl.DetailDescriptor>
                            <dxg:GridControl.View>
                                <dxg:TableView
                                    Name="PART_GridView"
                                    AllowColumnFiltering="False"
                                    AllowColumnMoving="False"
                                    IncrementalSearchMode="Disabled"
                                    IsColumnMenuEnabled="False"
                                    IsDetailButtonVisibleBinding="{Binding Row.InnerDescriptions, Converter={dxrudep:ExpandErrorButtonVisibilityConverter}}"
                                    ShowFilterPanelMode="Never"
                                    ShowGroupPanel="False"
                                    ShowIndicator="False"
                                    ShowSearchPanelMode="Never" />
                            </dxg:GridControl.View>
                            <dxmvvm:Interaction.Behaviors>
                                <dxmvvm:EventToCommand Command="{Binding Path=NavigateCommand, RelativeSource={RelativeSource Mode=TemplatedParent}}" EventName="MouseDoubleClick">
                                    <dxmvvm:EventToCommand.EventArgsConverter>
                                        <dx:EventArgsToDataRowConverter />
                                    </dxmvvm:EventToCommand.EventArgsConverter>
                                </dxmvvm:EventToCommand>
                                <dxrudep:ErrorGridControlBehavior />
                            </dxmvvm:Interaction.Behaviors>
                            <dxg:GridControl.Resources>
                                <Style TargetType="dxfui:ExcelStyleFilterElement">
                                    <Setter Property="AllowedFilterTypes" Value="Values" />
                                </Style>
                            </dxg:GridControl.Resources>
                        </dxg:GridControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FavoritePropertiesEditor.DefaultStyleBase" TargetType="{x:Type propertygrid:FavoritePropertiesEditor}">
        <Setter Property="dx:ScrollBarExtensions.ScrollBarMode" Value="TouchOverlap" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type propertygrid:FavoritePropertiesEditor}">
                    <dxrude:DialogEditorView>
                        <dxdo:DockLayoutManager Background="Transparent">
                            <dxdo:LayoutGroup>
                                <dxdo:LayoutControlItem ItemHeight="*" ItemWidth="2*" ShowCaption="False">
                                    <dxe:ListBoxEdit
                                        EditValue="{Binding SelectedControls, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                        ItemsSource="{TemplateBinding AvailableControls}"
                                        SelectionMode="Extended"
                                        ValueMember="Type">
                                        <dxe:ListBoxEdit.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <dx:DXImage Width="{dxrudi:ThemeImageSize Size=16, TouchThemeSize=32}" Height="{dxrudi:ThemeImageSize Size=16, TouchThemeSize=32}" Source="{Binding Glyph}" />
                                                    <TextBlock
                                                        Margin="6,0,0,0"
                                                        VerticalAlignment="Center"
                                                        Text="{Binding Type, Converter={dxrudi:TypeToDisplayNameConverter}}"
                                                        TextTrimming="CharacterEllipsis" />
                                                </StackPanel>
                                            </DataTemplate>
                                        </dxe:ListBoxEdit.ItemTemplate>
                                    </dxe:ListBoxEdit>
                                </dxdo:LayoutControlItem>
                                <dxdo:LayoutSplitter />
                                <dxdo:LayoutControlItem ItemHeight="*" ItemWidth="3*" ShowCaption="False">
                                    <dxprg:PropertyGridControl
                                        ExpandCategoriesWhenSelectedObjectChanged="True"
                                        HeaderColumnWidth="2*"
                                        SelectedObjects="{TemplateBinding AvailableProperties}"
                                        ShowMenuButtonInRows="False"
                                        SortMode="Ascending"
                                        ValueColumnWidth="*" />
                                </dxdo:LayoutControlItem>
                            </dxdo:LayoutGroup>
                        </dxdo:DockLayoutManager>
                    </dxrude:DialogEditorView>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AddChartElementGallery.DefaultStyleBase" TargetType="{x:Type dxrudcdi:AddChartElementGallery}">
        <Setter Property="AddSeriesControlDialogServiceTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dx:DialogService DialogStyle="{StaticResource DXDialogWindowAddSeriesControlDialogStyle}" DialogWindowStartupLocation="CenterOwner">
                            <dx:DialogService.ViewTemplate>
                                <DataTemplate>
                                    <dxrudcdi:ChangeSeriesViewTypeControl CloseWindowAfterSelectItem="True" SelectItemCommand="{Binding}" />
                                </DataTemplate>
                            </dx:DialogService.ViewTemplate>
                        </dx:DialogService>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="AddAnnotationControlDialogServiceTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dx:DialogService DialogWindowStartupLocation="CenterOwner">
                            <dx:DialogService.DialogStyle>
                                <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="{x:Type dx:ThemedWindow}">
                                    <Setter Property="SizeToContent" Value="WidthAndHeight" />
                                    <Setter Property="ResizeMode" Value="NoResize" />
                                </Style>
                            </dx:DialogService.DialogStyle>
                            <dx:DialogService.ViewTemplate>
                                <DataTemplate>
                                    <dxrudcdi:AddAnnotationControl CloseWindowAfterSelectItem="True" SelectItemCommand="{Binding}" />
                                </DataTemplate>
                            </dx:DialogService.ViewTemplate>
                        </dx:DialogService>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="AddIndicatorControlDialogServiceTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dx:DialogService DialogWindowStartupLocation="CenterOwner">
                            <dx:DialogService.DialogStyle>
                                <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="{x:Type dx:ThemedWindow}">
                                    <Setter Property="Height" Value="530" />
                                    <Setter Property="SizeToContent" Value="Width" />
                                    <Setter Property="ResizeMode" Value="NoResize" />
                                </Style>
                            </dx:DialogService.DialogStyle>
                            <dx:DialogService.ViewTemplate>
                                <DataTemplate>
                                    <dxrudcdi:AddIndicatorControl CloseWindowAfterSelectItem="True" SelectItemCommand="{Binding}" />
                                </DataTemplate>
                            </dx:DialogService.ViewTemplate>
                        </dx:DialogService>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DataMemberDropTargetControlBase.DefaultStyleBase" TargetType="{x:Type dxrudcdi:DataMemberDropTargetControlBase}">
        <Setter Property="AllowDrop">
            <Setter.Value>
                True
            </Setter.Value>
        </Setter>

        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dxrudcdi:DataMemberDropTargetControlBehavior />
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxrudcdi:DataMemberDropTargetControlBase}">
                    <dx:DXBorder x:Name="controlborder" BorderBrush="#D6D6D6" BorderThickness="2">
                        <Grid>
                            <dx:DXBorder x:Name="labelborder" Background="LightGray" />
                            <Label
                                x:Name="label"
                                HorizontalContentAlignment="Center"
                                VerticalContentAlignment="Center"
                                Content="{Binding Text, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                IsHitTestVisible="False" />
                        </Grid>
                    </dx:DXBorder>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHot" Value="False">
                            <Setter TargetName="labelborder" Property="Opacity" Value="0" />
                        </Trigger>
                        <Trigger Property="IsHot" Value="True">
                            <Setter TargetName="labelborder" Property="Opacity" Value="0.4" />
                        </Trigger>

                        <Trigger Property="IsDataMemberSet" Value="True">
                            <Setter TargetName="controlborder" Property="BorderBrush" Value="DarkGray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ChartDataBindingControl.DefaultStyleBase" TargetType="{x:Type dxrudcdi:ChartDataBindingControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxrudcdi:ChartDataBindingControl}">
                    <dxlc:LayoutControl>
                        <dxlc:LayoutGroup Orientation="Vertical">
                            <dxlc:LayoutGroup Orientation="Horizontal">
                                <dxlc:LayoutItem>
                                    <dxrudi:ComboBoxEditEx
                                        AllowNullInput="True"
                                        DisplayMember="DisplayName"
                                        EditValue="{Binding CurrentDataSource, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                        IsTextEditable="False"
                                        ItemsSource="{TemplateBinding ChartDesignerDataSources}"
                                        NullText="{dxrudl:ReportDesignerStringId StringId=ChartDesigner_DataTab_ChooseDataSource_Caption}"
                                        NullValueButtonPlacement="Popup"
                                        PopupMinHeight="100"
                                        ShowNullText="True"
                                        ShowNullTextForEmptyValue="False"
                                        ShowPopupOnEmptyItemsSource="True"
                                        ValueMember="DataSource" />
                                </dxlc:LayoutItem>
                            </dxlc:LayoutGroup>

                            <dxlc:LayoutItem VerticalAlignment="Stretch" AllowDrop="False">
                                <Grid MaxHeight="100000">
                                    <dxrudfl:ReportDesignerFieldListControl Nodes="{TemplateBinding Nodes}" ShowBorder="True" Visibility="{Binding AnyDataSet, Converter={dxmvvm:BooleanToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                                        <dxrudfl:ReportDesignerFieldListControl.Resources>
                                            <Style x:Key="{dxrudt:LWKey ReportDesigner.FieldListNodeBehaviorTemplate}" TargetType="{x:Type dxg:TreeListColumn}">
                                                <Setter Property="CellStyle">
                                                    <Setter.Value>
                                                        <Style>
                                                            <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
                                                                <Setter.Value>
                                                                    <DataTemplate>
                                                                        <ItemsControl>
                                                                            <dxrudcdi:ChartDesignerFieldListDragDropBehavior />
                                                                        </ItemsControl>
                                                                    </DataTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </dxrudfl:ReportDesignerFieldListControl.Resources>
                                    </dxrudfl:ReportDesignerFieldListControl>
                                    <Label
                                        HorizontalContentAlignment="Center"
                                        VerticalContentAlignment="Center"
                                        BorderBrush="DarkGray"
                                        BorderThickness="1"
                                        Content="{dxrudl:ReportDesignerStringId StringId=ChartDesigner_DataTab_NoDataToDisplay_Caption}"
                                        Opacity="0.5"
                                        Visibility="{Binding AnyDataSet, Converter={dxmvvm:BooleanToVisibilityConverter Inverse=True}, RelativeSource={RelativeSource TemplatedParent}}" />
                                </Grid>
                            </dxlc:LayoutItem>

                            <dxlc:LayoutGroup VerticalAlignment="Bottom" Orientation="Vertical">
                                <dxlc:LayoutItem VerticalAlignment="Stretch" IsHitTestVisible="False">
                                    <TextBlock
                                        Margin="18,18,18,0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Text="{dxrudl:ReportDesignerStringId StringId=ChartDesigner_DragDataMembersToCorrespondingCell_Hint}"
                                        TextAlignment="Center"
                                        TextWrapping="Wrap" />
                                </dxlc:LayoutItem>
                                <dxlc:LayoutItem IsHitTestVisible="False">
                                    <dx:DXImage Margin="0,0,0,18" Source="{dxrud:ReportDesignerResourceImage ResourceName='Images/Svg/Charts/ArrowDown.svg'}" Stretch="None" />
                                </dxlc:LayoutItem>

                                <dxlc:LayoutItem VerticalAlignment="Stretch">
                                    <dxrudcdi:SeriesDataMemberDropTargetControl
                                        x:Name="PART_SeriesArea"
                                        ChartDesignerReportModel="{TemplateBinding ChartDesignerReportModel}"
                                        DesignerXRChartDiagramItem="{TemplateBinding DesignerXRChartDiagramItem}"
                                        SelectedModel="{Binding ChartDesignerReportModel.SelectedModel, RelativeSource={RelativeSource TemplatedParent}}"
                                        Visibility="{Binding ChartDesignerReportModel.SelectedModel, RelativeSource={RelativeSource TemplatedParent}, Converter={dxrudcdi:SelectedChartElementToVisibilityConverter}}" />
                                </dxlc:LayoutItem>
                                <dxlc:LayoutItem VerticalAlignment="Stretch">
                                    <dxrudcdi:ArgumentDataMemberDropTargetControl
                                        x:Name="PART_ArgumentArea"
                                        ChartDesignerReportModel="{TemplateBinding ChartDesignerReportModel}"
                                        DesignerXRChartDiagramItem="{TemplateBinding DesignerXRChartDiagramItem}"
                                        SelectedModel="{Binding ChartDesignerReportModel.SelectedModel, RelativeSource={RelativeSource TemplatedParent}}" />
                                </dxlc:LayoutItem>
                                <dxlc:LayoutItem VerticalAlignment="Stretch">
                                    <dxrudcdi:ValueDataMembersDropTargetControl
                                        x:Name="PART_ValueArea"
                                        ChartDesignerReportModel="{TemplateBinding ChartDesignerReportModel}"
                                        DesignerXRChartDiagramItem="{TemplateBinding DesignerXRChartDiagramItem}"
                                        SelectedModel="{Binding ChartDesignerReportModel.SelectedModel, RelativeSource={RelativeSource TemplatedParent}}" />
                                </dxlc:LayoutItem>
                                <dxlc:LayoutItem VerticalAlignment="Stretch">
                                    <dxrudcdi:ColorDataMemberDropTargetControl
                                        x:Name="PART_ColorArea"
                                        ChartDesignerReportModel="{TemplateBinding ChartDesignerReportModel}"
                                        DesignerXRChartDiagramItem="{TemplateBinding DesignerXRChartDiagramItem}"
                                        SelectedModel="{Binding ChartDesignerReportModel.SelectedModel, RelativeSource={RelativeSource TemplatedParent}}" />
                                </dxlc:LayoutItem>
                                <dxlc:LayoutItem VerticalAlignment="Stretch">
                                    <dxrudcdi:ToolTipHintDataMemberDropTargetControl
                                        x:Name="PART_ToolTipHintArea"
                                        ChartDesignerReportModel="{TemplateBinding ChartDesignerReportModel}"
                                        DesignerXRChartDiagramItem="{TemplateBinding DesignerXRChartDiagramItem}"
                                        SelectedModel="{Binding ChartDesignerReportModel.SelectedModel, RelativeSource={RelativeSource TemplatedParent}}" />
                                </dxlc:LayoutItem>
                            </dxlc:LayoutGroup>
                        </dxlc:LayoutGroup>
                    </dxlc:LayoutControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ChartStructureControl.DefaultStyleBase" TargetType="{x:Type dxrudcdi:ChartStructureControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxrudcdi:ChartStructureControl}">
                    <dxg:TreeListControl CurrentItem="{Binding SelectedNode, RelativeSource={RelativeSource TemplatedParent}}" ItemsSource="{TemplateBinding Items}">
                        <dxg:TreeListControl.View>
                            <dxrudcdi:ChartDesignerTreeListView
                                AllowEditing="False"
                                AutoWidth="True"
                                ChildNodesPath="Children"
                                EditorButtonShowMode="ShowAlways"
                                ExpandCollapseNodesOnNavigation="True"
                                HotTrackNode="{TemplateBinding HotTrackNode}"
                                NavigationStyle="Row"
                                ShowColumnHeaders="False"
                                ShowHorizontalLines="False"
                                ShowIndicator="False"
                                ShowVerticalLines="False"
                                TreeDerivationMode="ChildNodesSelector"
                                VerticalScrollbarVisibility="Auto">
                                <dxrudcdi:ChartDesignerTreeListView.RowStyle>
                                    <Style TargetType="{x:Type dxg:RowControl}">
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=(dxg:RowData.RowData).Row.IsHighlighted, RelativeSource={RelativeSource Self}}" Value="True" />
                                                    <Condition Binding="{Binding SelectionState}" Value="None" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="dxg:GridRowContent.Background" Value="{DynamicResource {dxgt:LWKey GridRow.BorderSelectedBrush}}" />
                                                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:LWKey GridRow.TextRowSelectedBrush}}" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </dxrudcdi:ChartDesignerTreeListView.RowStyle>
                                <dxmvvm:Interaction.Behaviors>
                                    <dxdai:ExpandTreeListNodeBehavior Depth="2" />
                                </dxmvvm:Interaction.Behaviors>
                            </dxrudcdi:ChartDesignerTreeListView>
                        </dxg:TreeListControl.View>
                        <dxg:TreeListControl.Columns>
                            <dxg:TreeListColumn FieldName="Header" AllowEditing="False" ReadOnly="True">
                                <dxg:TreeListColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <dx:DXImage Width="16" VerticalAlignment="Center" Source="{Binding RowData.Row.Icon}" />
                                            <dxe:ButtonEdit
                                                x:Name="PART_Editor"
                                                Grid.Column="1"
                                                AllowDefaultButton="False"
                                                IsEnabled="{Binding RowData.Row.AllowEdit}">
                                                <dxe:ButtonEdit.Resources>
                                                    <Style x:Key="ImageOpacityTrigger" TargetType="{x:Type Image}">
                                                        <Setter Property="Image.Opacity" Value="0.6" />
                                                        <Style.Triggers>
                                                            <Trigger Property="Image.IsMouseOver" Value="True">
                                                                <Setter Property="Image.Opacity" Value="1.0" />
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                    <Style x:Key="ImageVisibleOpacityTrigger" BasedOn="{StaticResource ImageOpacityTrigger}" TargetType="{x:Type Image}">
                                                        <Setter Property="Image.Opacity" Value="{Binding Path=(dxg:RowData.RowData).Row.Visible, Converter={dxmvvm:BooleanToObjectConverter TrueValue='0.6', FalseValue='0.3'}}" />
                                                    </Style>
                                                </dxe:ButtonEdit.Resources>
                                                <dxe:ButtonEdit.Buttons>
                                                    <dxe:ButtonInfo>
                                                        <dxe:ButtonInfo.Template>
                                                            <DataTemplate>
                                                                <dx:DXImage
                                                                    Width="16"
                                                                    dxb:BarManager.DXContextMenu="{Binding DataContext.RowData.Row, Converter={dxrudcdi:ChartDesignerNodeContextMenuConverter}}"
                                                                    dxb:BarManager.MenuShowMouseButton="LeftButton"
                                                                    Source="{dxrud:ReportDesignerResourceImage ResourceName='Images/Svg/Charts/AddItem.svg'}"
                                                                    Style="{StaticResource ImageOpacityTrigger}">
                                                                    <dx:DXImage.Visibility>
                                                                        <MultiBinding Converter="{dxrudcdi:ChartStructureItemButtonVisibilityConverter}">
                                                                            <Binding Path="DataContext.RowData.Row.IsHighlighted" />
                                                                            <Binding Path="DataContext.RowData.IsSelected" />
                                                                            <Binding Path="DataContext.RowData.Row.IsCollection" />
                                                                            <Binding Path="DataContext.RowData.Row.IsReadOnly" />
                                                                        </MultiBinding>
                                                                    </dx:DXImage.Visibility>
                                                                    <dxmvvm:Interaction.Behaviors>
                                                                        <dxmvvm:EventToCommand Command="{Binding DataContext.RowData.Row, Converter={dxrudcdi:ChartDesignerAddCommandConverter}}" EventName="MouseLeftButtonDown" />
                                                                    </dxmvvm:Interaction.Behaviors>
                                                                </dx:DXImage>
                                                            </DataTemplate>
                                                        </dxe:ButtonInfo.Template>
                                                    </dxe:ButtonInfo>
                                                    <dxe:ButtonInfo>
                                                        <dxe:ButtonInfo.Template>
                                                            <DataTemplate>
                                                                <dx:DXImage Margin="2,0" Source="{dxrud:ReportDesignerResourceImage ResourceName=Images/Svg/Charts/Visible.svg}" Style="{StaticResource ImageVisibleOpacityTrigger}">
                                                                    <dx:DXImage.Visibility>
                                                                        <MultiBinding Converter="{dxrudcdi:ChartStructureItemButtonVisibilityConverter}">
                                                                            <Binding Path="DataContext.RowData.Row.IsHighlighted" />
                                                                            <Binding Path="DataContext.RowData.IsSelected" />
                                                                            <Binding Path="DataContext.RowData.Row.CanChangeVisibility" />
                                                                            <Binding Path="DataContext.RowData.Row.IsReadOnly" />
                                                                        </MultiBinding>
                                                                    </dx:DXImage.Visibility>
                                                                    <dxmvvm:Interaction.Behaviors>
                                                                        <dxmvvm:EventToCommand Command="{Binding DataContext.RowData.Row.ChangeVisibilityCommand}" EventName="MouseLeftButtonDown" />
                                                                    </dxmvvm:Interaction.Behaviors>
                                                                </dx:DXImage>
                                                            </DataTemplate>
                                                        </dxe:ButtonInfo.Template>
                                                    </dxe:ButtonInfo>
                                                    <dxe:ButtonInfo>
                                                        <dxe:ButtonInfo.Template>
                                                            <DataTemplate>
                                                                <dx:DXImage Source="{dxrud:ReportDesignerResourceImage ResourceName=Images/Svg/Charts/Remove.svg}" Style="{StaticResource ImageOpacityTrigger}">
                                                                    <dx:DXImage.Visibility>
                                                                        <MultiBinding Converter="{dxrudcdi:ChartStructureItemButtonVisibilityConverter}">
                                                                            <Binding Path="DataContext.RowData.Row.IsHighlighted" />
                                                                            <Binding Path="DataContext.RowData.IsSelected" />
                                                                            <Binding Path="DataContext.RowData.Row.CanDelete" />
                                                                            <Binding Path="DataContext.RowData.Row.IsReadOnly" />
                                                                        </MultiBinding>
                                                                    </dx:DXImage.Visibility>
                                                                    <dxmvvm:Interaction.Behaviors>
                                                                        <dxmvvm:EventToCommand Command="{Binding DataContext.RowData.Row.RemoveCommand}" EventName="MouseLeftButtonDown" />
                                                                    </dxmvvm:Interaction.Behaviors>
                                                                </dx:DXImage>
                                                            </DataTemplate>
                                                        </dxe:ButtonInfo.Template>
                                                    </dxe:ButtonInfo>
                                                </dxe:ButtonEdit.Buttons>
                                            </dxe:ButtonEdit>
                                        </Grid>
                                    </DataTemplate>
                                </dxg:TreeListColumn.CellTemplate>
                            </dxg:TreeListColumn>
                        </dxg:TreeListControl.Columns>
                    </dxg:TreeListControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ChartDesignerGalleryControlBase.DefaultStyleBase" TargetType="{x:Type dxrudcdi:ChartDesignerGalleryControlBase}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxrudcdi:ChartDesignerGalleryControlBase}">
                    <Grid>
                        <dxb:GalleryControl>
                            <dxb:GalleryControl.Resources>
                                <DataTemplate x:Key="GalleryItemTemplate">
                                    <ContentControl>
                                        <dxb:GalleryItem Caption="{Binding Caption}" Glyph="{Binding Icon}" />
                                    </ContentControl>
                                </DataTemplate>
                                <DataTemplate x:Key="GalleryGroupTemplate">
                                    <ContentControl>
                                        <dxb:GalleryItemGroup Caption="{Binding Caption}" ItemTemplate="{StaticResource GalleryItemTemplate}" ItemsSource="{Binding Items}" />
                                    </ContentControl>
                                </DataTemplate>
                            </dxb:GalleryControl.Resources>
                            <dxb:Gallery
                                x:Name="PART_Gallery"
                                AllowFilter="False"
                                ColCount="1"
                                GroupTemplate="{StaticResource GalleryGroupTemplate}"
                                GroupsSource="{TemplateBinding Groups}"
                                IsGroupCaptionVisible="{TemplateBinding IsGroupCaptionVisible}"
                                ItemAutoWidth="True"
                                ItemContentHorizontalAlignment="Left">
                                <dxb:Gallery.ItemCaptionTemplate>
                                    <DataTemplate>
                                        <TextBlock FontWeight="Bold" Text="{Binding}" />
                                    </DataTemplate>
                                </dxb:Gallery.ItemCaptionTemplate>
                            </dxb:Gallery>
                        </dxb:GalleryControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SeriesPointsEditor.DefaultStyleBase" TargetType="{x:Type dxrudcdi:SeriesPointsEditor}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxrudcdi:SeriesPointsEditor}">
                    <dxg:GridControl x:Name="PART_GridControl" ItemsSource="{TemplateBinding Points}">
                        <dxg:GridControl.View>
                            <dxg:TableView
                                AllowColumnFiltering="False"
                                AllowColumnMoving="False"
                                AllowEditing="{Binding SelectedNode, RelativeSource={RelativeSource TemplatedParent}, Converter={dxrudcdi:SeriesEditorIsEnabledConverter}}"
                                AllowSorting="False"
                                AutoWidth="True"
                                NewItemRowPosition="{Binding SelectedNode, RelativeSource={RelativeSource TemplatedParent}, Converter={dxrudcdi:SeriesEditorAddNewItemPositionConverter}}"
                                ShowGroupPanel="False" />
                        </dxg:GridControl.View>
                        <dxmvvm:Interaction.Behaviors>
                            <dxrudcdi:SeriesPointsColumnFiller Series="{Binding Series, RelativeSource={RelativeSource TemplatedParent}}" />
                        </dxmvvm:Interaction.Behaviors>
                    </dxg:GridControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ChartDesigner.DefaultStyleBase" TargetType="{x:Type dxrudcd:ChartDesigner}">
        <Setter Property="AllowDrop">
            <Setter.Value>
                True
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxrudcd:ChartDesigner}">
                    <dxrude:DialogEditorView>
                        <dxlc:LayoutControl>
                            <dxlc:LayoutGroup Orientation="Horizontal">
                                <dxlc:LayoutGroup Width="240" dxlc:LayoutControl.AllowHorizontalSizing="True" Orientation="Vertical">
                                    <dxlc:LayoutItem x:Name="PART_ChartDesignerToolsPanel">
                                        <dxb:BarManager AllowCustomization="False">
                                            <dxb:ToolBarControl AllowCustomizationMenu="False" AllowQuickCustomization="False">
                                                <dxb:BarSplitButtonItem ActAsDropDown="True" Glyph="{dxrud:ReportDesignerResourceImage ResourceName=Images/Svg/Charts/Add.svg}" ToolTip="{dxrudl:ReportDesignerStringId StringId=ChartDesigner_AddChartElement_Hint}">
                                                    <dxb:BarSplitButtonItem.PopupControl>
                                                        <dxr:GalleryDropDownPopupMenu Width="200">
                                                            <dxr:GalleryDropDownPopupMenu.Gallery>
                                                                <dxrudcdi:AddChartElementGallery ChartNode="{Binding RootNode, ElementName=PART_ChartStructure}" SelectedNode="{Binding SelectedNode, ElementName=PART_ChartStructure}" />
                                                            </dxr:GalleryDropDownPopupMenu.Gallery>
                                                        </dxr:GalleryDropDownPopupMenu>
                                                    </dxb:BarSplitButtonItem.PopupControl>
                                                </dxb:BarSplitButtonItem>
                                                <dxb:BarItemSeparator />
                                                <dxb:BarButtonItem Command="{Binding UndoCommand, RelativeSource={RelativeSource TemplatedParent}}" Glyph="{dxrud:ReportDesignerResourceImage ResourceName=Images/Svg/Charts/Undo.svg}" ToolTip="{dxrudl:ReportDesignerStringId StringId=ChartDesigner_Undo_Hint}" />
                                                <dxb:BarButtonItem Command="{Binding RedoCommand, RelativeSource={RelativeSource TemplatedParent}}" Glyph="{dxrud:ReportDesignerResourceImage ResourceName=Images/Svg/Charts/Redo.svg}" ToolTip="{dxrudl:ReportDesignerStringId StringId=ChartDesigner_Redo_Hint}" />
                                                <dxb:BarButtonItem
                                                    Alignment="Far"
                                                    Command="{Binding ChangeChartTypeCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                                    Glyph="{dxrud:ReportDesignerResourceImage ResourceName=Images/Svg/Charts/ChangeChartSeriesType.svg}"
                                                    ToolTip="{dxrudl:ReportDesignerStringId StringId=ChartDesigner_ChangeChartType_Hint}" />
                                            </dxb:ToolBarControl>
                                        </dxb:BarManager>
                                    </dxlc:LayoutItem>
                                    <dxlc:LayoutItem VerticalAlignment="Stretch">
                                        <dxrudcdi:ChartStructureControl x:Name="PART_ChartStructure" EditingChartDiagramItem="{TemplateBinding DesignerXRChartDiagramItem}" />
                                    </dxlc:LayoutItem>
                                </dxlc:LayoutGroup>
                                <dxlc:LayoutGroup Orientation="Vertical">
                                    <dxlc:LayoutItem Height="{Binding ActualHeight, ElementName=PART_ChartDesignerToolsPanel}" ElementSpace="0" />

                                    <dxlc:LayoutItem x:Name="PART_DesignerLayout" MinWidth="15" VerticalAlignment="Stretch">
                                        <dxrudcd:ChartDesignerDiagramControl x:Name="PART_ChartDesignerDiagramControl" AllowEmptySelection="True" ShowSelectionRectangle="False" />
                                    </dxlc:LayoutItem>
                                </dxlc:LayoutGroup>
                                <dxlc:LayoutGroup
                                    Width="345"
                                    Margin="0,4,0,0"
                                    dxlc:LayoutControl.AllowHorizontalSizing="True"
                                    SelectedTabIndex="{Binding SelectedTab, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Converter={dxrudcdi:SelectedTabIndexToSelectedTabEnumConverter}}"
                                    View="Tabs">
                                    <dxlc:LayoutGroup.TabsStyle>
                                        <Style TargetType="dx:DXTabControl">
                                            <Setter Property="Padding" Value="0,0,0,0" />
                                        </Style>
                                    </dxlc:LayoutGroup.TabsStyle>

                                    <dxlc:LayoutGroup Header="{dxrudl:ReportDesignerStringId StringId=ChartDesigner_OptionsTab_Header}" Visibility="{Binding SelectedNode.HasOptions, ElementName=PART_ChartStructure, Converter={dxmvvm:BooleanToVisibilityConverter}}">
                                        <dxlc:LayoutItem VerticalAlignment="Stretch">
                                            <propertygrid:ReportDesignerPropertyGrid
                                                x:Name="PART_PropertyGridOptions"
                                                dxrudi:PropertyGridHelper.SelectedObject="{Binding SelectedObject, RelativeSource={RelativeSource Self}}"
                                                BorderThickness="0"
                                                ExpandCategoriesWhenSelectedObjectChanged="True"
                                                HighlightingMode="None"
                                                RowPadding="4,4,12,4"
                                                ShowCategories="Visible"
                                                ShowExpressionsInSeparateTab="False"
                                                ShowFavoriteProperties="False"
                                                ShowGridLines="False"
                                                ShowMenu="Always"
                                                ShowMenuButtonInRows="False"
                                                ShowSearchBox="False"
                                                ShowToolPanel="False"
                                                SortMode="Ascending"
                                                UseCollectionEditor="False"
                                                UseTabbedView="False">
                                                <propertygrid:ReportDesignerPropertyGrid.SelectedObject>
                                                    <MultiBinding Converter="{propertygrid:SelectedObjectToPropertiesSelectorConverter}">
                                                        <Binding Path="ChartDesignerReportModel.Diagram.SelectionModel" RelativeSource="{RelativeSource TemplatedParent}" />
                                                        <Binding>
                                                            <Binding.Source>
                                                                <propertygrid:PropertiesShowMode>Common</propertygrid:PropertiesShowMode>
                                                            </Binding.Source>
                                                        </Binding>
                                                    </MultiBinding>
                                                </propertygrid:ReportDesignerPropertyGrid.SelectedObject>

                                                <dxprg:CategoryDefinition Padding="4,16,12,4" />

                                                <dxprg:PropertyDefinition Path="Border.Tag" Visibility="Collapsed" />
                                                <dxprg:PropertyDefinition Path="LineStyle.Tag" Visibility="Collapsed" />
                                                <dxprg:PropertyDefinition Path="FillStyle.Tag" Visibility="Collapsed" />
                                                <dxprg:PropertyDefinition Path="FillStyle.Options.Tag" Visibility="Collapsed" />

                                                <dxprg:PropertyDefinition Path="Point1.Tag" Visibility="Collapsed" />
                                                <dxprg:PropertyDefinition Path="Point2.Tag" Visibility="Collapsed" />

                                                <dxprg:PropertyDefinition Path="MinLimit.Tag" Visibility="Collapsed" />
                                                <dxprg:PropertyDefinition Path="MaxLimit.Tag" Visibility="Collapsed" />
                                                <dxprg:PropertyDefinition Path="Title.Tag" Visibility="Collapsed" />

                                                <dxprg:PropertyDefinition Path="View.Border.Tag" Visibility="Collapsed" />
                                                <dxprg:PropertyDefinition Path="View.FillStyle.Tag" Visibility="Collapsed" />
                                                <dxprg:PropertyDefinition Path="View.FillStyle.Options.Tag" Visibility="Collapsed" />
                                                <dxprg:PropertyDefinition Path="View.PointMarkerOptions.Tag" Visibility="Collapsed" />
                                                <dxprg:PropertyDefinition Path="View.PointMarkerOptions.FillStyle" Visibility="Collapsed" />
                                                <dxprg:PropertyDefinition Path="View.PointMarkerOptions.BorderVisible" Visibility="Collapsed" />
                                                <dxprg:PropertyDefinition Path="View.PointMarkerOptions.BorderColor" Visibility="Collapsed" />

                                                <dxprg:PropertyDefinition Path="View.BubbleMarkerOptions.Tag" Visibility="Collapsed" />
                                                <dxprg:PropertyDefinition Path="View.BubbleMarkerOptions.FillStyle.Options.Tag" Visibility="Collapsed" />
                                                <dxprg:PropertyDefinition Path="View.BubbleMarkerOptions.FillStyle.Tag" Visibility="Collapsed" />

                                                <dxprg:PropertyDefinition Path="View.LineMarkerOptions.Tag" Visibility="Collapsed" />
                                                <dxprg:PropertyDefinition Path="View.LineMarkerOptions.FillStyle" Visibility="Collapsed" />
                                                <dxprg:PropertyDefinition Path="View.LineMarkerOptions.BorderColor" Visibility="Collapsed" />
                                                <dxprg:PropertyDefinition Path="View.LineMarkerOptions.BorderVisible" Visibility="Collapsed" />

                                                <dxprg:PropertyDefinition Path="View.MarkerOptions.Tag" Visibility="Collapsed" />
                                                <dxprg:PropertyDefinition Path="View.MarkerOptions.FillStyle" Visibility="Collapsed" />
                                                <dxprg:PropertyDefinition Path="View.MarkerOptions.BorderColor" Visibility="Collapsed" />
                                                <dxprg:PropertyDefinition Path="View.MarkerOptions.BorderVisible" Visibility="Collapsed" />

                                                <dxprg:PropertyDefinition Path="View.Marker1.Tag" Visibility="Collapsed" />
                                                <dxprg:PropertyDefinition Path="View.Marker1.FillStyle" Visibility="Collapsed" />
                                                <dxprg:PropertyDefinition Path="View.Marker1.BorderColor" Visibility="Collapsed" />
                                                <dxprg:PropertyDefinition Path="View.Marker1.BorderVisible" Visibility="Collapsed" />
                                                <dxprg:PropertyDefinition Path="View.Marker2.Tag" Visibility="Collapsed" />
                                                <dxprg:PropertyDefinition Path="View.Marker2.FillStyle" Visibility="Collapsed" />
                                                <dxprg:PropertyDefinition Path="View.Marker2.BorderColor" Visibility="Collapsed" />
                                                <dxprg:PropertyDefinition Path="View.Marker2.BorderVisible" Visibility="Collapsed" />

                                                <dxprg:PropertyDefinition Path="View.LinkOptions.Tag" Visibility="Collapsed" />

                                                <dxprg:PropertyDefinition Path="VisualRange.Tag" Visibility="Collapsed" />
                                                <dxprg:PropertyDefinition Path="VisualRange.AutoSideMargins" Visibility="Collapsed" />
                                                <dxprg:PropertyDefinition Path="VisualRange.SideMarginsValue" Visibility="Collapsed" />

                                                <dxprg:PropertyDefinition Path="WholeRange.Tag" Visibility="Collapsed" />
                                                <dxprg:PropertyDefinition Path="WholeRange.AutoSideMargins" Visibility="Collapsed" />
                                                <dxprg:PropertyDefinition Path="WholeRange.SideMarginsValue" Visibility="Collapsed" />

                                                <dxprg:PropertyDefinition Path="Title.Font" Visibility="Collapsed" />
                                                <dxprg:PropertyDefinition Path="Title.Alignment" Visibility="Collapsed" />
                                                <dxprg:PropertyDefinition Path="Title.EnableAntialiasing" Visibility="Collapsed" />
                                                <dxprg:PropertyDefinition Path="Label.EnableAntialiasing" Visibility="Collapsed" />
                                                <dxprg:PropertyDefinition Path="Label.Tag" Visibility="Collapsed" />
                                                <dxprg:PropertyDefinition Path="Title.TextColor" Visibility="Collapsed" />
                                                <dxprg:PropertyDefinition Path="Title.Lines" Visibility="Collapsed" />
                                                <dxprg:PropertyDefinition Path="Title.Margins" Visibility="Collapsed" />
                                                <dxprg:PropertyDefinition Path="EnableAntialiasing" Visibility="Collapsed" />

                                                <dxprg:PropertyDefinition Path="AnchorPoint.Tag" Visibility="Collapsed" />
                                                <dxprg:PropertyDefinition Path="ShapePosition.Tag" Visibility="Collapsed" />
                                                <dxprg:PropertyDefinition Path="ShapePosition.InnerIndents" Visibility="Collapsed" />
                                                <dxprg:PropertyDefinition Path="ShapePosition.OuterIndents" Visibility="Collapsed" />
                                                <dxprg:PropertyDefinition Path="Image.Tag" Visibility="Collapsed" />
                                            </propertygrid:ReportDesignerPropertyGrid>
                                        </dxlc:LayoutItem>
                                    </dxlc:LayoutGroup>

                                    <dxlc:LayoutGroup Header="{dxrudl:ReportDesignerStringId StringId=ChartDesigner_PropertiesTab_Header}" Visibility="{Binding SelectedNode.HasProperties, ElementName=PART_ChartStructure, Converter={dxmvvm:BooleanToVisibilityConverter}}">
                                        <dxlc:LayoutItem VerticalAlignment="Stretch">
                                            <propertygrid:ReportDesignerPropertyGrid
                                                x:Name="PART_PropertyGridProperties"
                                                dxrudi:PropertyGridHelper.SelectedObject="{Binding SelectedObject, RelativeSource={RelativeSource Self}}"
                                                BorderThickness="0"
                                                ExpandCategoriesWhenSelectedObjectChanged="True"
                                                ShowCategories="Visible"
                                                ShowExpressionsInSeparateTab="False"
                                                ShowFavoriteProperties="False"
                                                ShowMenuButtonInRows="False"
                                                ShowSearchBox="False"
                                                ShowToolPanel="False"
                                                SortMode="Ascending"
                                                UseCollectionEditor="False"
                                                UseTabbedView="False">
                                                <dxrudi:PropertyGridHelper.SelectedObjectDelayedBinding>
                                                    <MultiBinding Converter="{propertygrid:SelectedObjectToPropertiesSelectorConverter}">
                                                        <Binding Path="ChartDesignerReportModel.Diagram.SelectionModel" RelativeSource="{RelativeSource TemplatedParent}" />
                                                        <Binding>
                                                            <Binding.Source>
                                                                <propertygrid:PropertiesShowMode>Common</propertygrid:PropertiesShowMode>
                                                            </Binding.Source>
                                                        </Binding>
                                                    </MultiBinding>
                                                </dxrudi:PropertyGridHelper.SelectedObjectDelayedBinding>
                                            </propertygrid:ReportDesignerPropertyGrid>
                                        </dxlc:LayoutItem>
                                    </dxlc:LayoutGroup>

                                    <dxlc:LayoutGroup Header="{dxrudl:ReportDesignerStringId StringId=ChartDesigner_DataTab_Header}" Orientation="Vertical" Visibility="{Binding SelectedNode.HasData, ElementName=PART_ChartStructure, Converter={dxmvvm:BooleanToVisibilityConverter}}">
                                        <dxlc:LayoutItem VerticalAlignment="Stretch" Visibility="{Binding SelectedNode, ElementName=PART_ChartStructure, Converter={dxrudcdi:NodeDataTypeVisibilityConverter Data=DataSource}}">
                                            <Grid>
                                                <dx:BackgroundPanel dx:FrameworkElementHelper.ClipCornerRadius="2" />
                                                <dxrudcdi:ChartDataBindingControl
                                                    x:Name="PART_ChartDataBindingControl"
                                                    ChartDesignerDataSources="{TemplateBinding ChartDesignerDataSources}"
                                                    ChartDesignerReportModel="{TemplateBinding ChartDesignerReportModel}"
                                                    DesignerXRChartDiagramItem="{TemplateBinding DesignerXRChartDiagramItem}"
                                                    Nodes="{TemplateBinding Nodes}"
                                                    ReportModel="{TemplateBinding ReportModel}" />
                                            </Grid>
                                        </dxlc:LayoutItem>
                                        <dxlc:LayoutItem VerticalAlignment="Stretch" Visibility="{Binding SelectedNode, ElementName=PART_ChartStructure, Converter={dxrudcdi:NodeDataTypeVisibilityConverter Data=Points}}">
                                            <dxrudcdi:SeriesPointsEditor SelectedNode="{Binding SelectedNode, ElementName=PART_ChartStructure}" />
                                        </dxlc:LayoutItem>
                                    </dxlc:LayoutGroup>
                                </dxlc:LayoutGroup>
                            </dxlc:LayoutGroup>
                        </dxlc:LayoutControl>
                    </dxrude:DialogEditorView>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MessageBoxServiceTemplate" Value="{DynamicResource {dxrudt:LWKey ReportDesigner.DefaultMessageBoxServiceTemplate}}" />
        <Setter Property="ChangeChartTypeControlDialogServiceTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dx:DialogService DialogStyle="{StaticResource DXDialogWindowAddSeriesControlDialogStyle}" DialogWindowStartupLocation="CenterOwner">
                            <dx:DialogService.ViewTemplate>
                                <DataTemplate>
                                    <dxrudcdi:ChangeSeriesViewTypeControl CloseWindowAfterSelectItem="True" SelectItemCommand="{Binding}" />
                                </DataTemplate>
                            </dx:DialogService.ViewTemplate>
                        </dx:DialogService>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PGToggleButton.DefaultStyleBase" BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="{x:Type dxrude:PGToggleButton}">
        <Setter Property="Template" Value="{DynamicResource {dxrudt:LWKey ReportDesignerNative.PGToggleButtonTemplate}}" />
    </Style>
    <Style x:Key="ReportDesignerViewBase.DefaultStyleBase" TargetType="dxrud:ReportDesignerViewBase">
        <Setter Property="WindowServiceTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxmvvm:WindowService
                            Title="Report Designer"
                            ViewTemplate="{DynamicResource {dxrudt:LWKey ReportDesigner.ReportDesignerWindowViewTemplate}}"
                            WindowShowMode="Dialog"
                            WindowStartupLocation="CenterOwner"
                            WindowStyle="{DynamicResource {dxrudt:LWKey ReportDesigner.ReportDesignerWindowStyle}}"
                            WindowType="dx:DXWindow" />
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="TemplateRootStyle">
            <Setter.Value>
                <Style TargetType="FrameworkElement">
                    <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <ItemsControl>
                                    <dxrudi:ReportDesignerDocumentSelector ActiveDocument="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer).ActiveDocument, RelativeSource={RelativeSource Self}}" />
                                    <dxmvvm:CurrentWindowService ClosingCommand="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer).OnClosingCommand, RelativeSource={RelativeSource Self}}" />
                                </ItemsControl>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ReportDesignerBrowserView.DefaultStyleBase" BasedOn="{StaticResource ReportDesignerViewBase.DefaultStyleBase}" TargetType="dxrud:ReportDesignerBrowserView">
        <Setter Property="WindowServiceTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxmvvm:WindowService
                            Title="Report Designer"
                            ViewTemplate="{StaticResource {dxrudt:LWKey ReportDesigner.ReportDesignerWindowViewTemplate}}"
                            WindowShowMode="Dialog"
                            WindowStartupLocation="CenterOwner"
                            WindowStyle="{DynamicResource {dxrudt:LWKey ReportDesigner.ReportDesignerTabbedWindowStyle}}"
                            WindowType="dx:DXTabbedWindow" />
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="TemplateRootStyle">
            <Setter.Value>
                <Style TargetType="dx:DXTabControl">
                    <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <ContentControl>
                                    <dxrudi:ReportDesignerDocumentSelector ActiveDocument="{Binding Path=AssociatedObject.SelectedItem, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={dxrudi:ReportDesignerDocumentViewSelectorConverter}}" />
                                </ContentControl>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxrud:ReportDesignerBrowserView">
                    <ControlTemplate.Resources>
                        <DataTemplate x:Key="TabItemHeaderTemplate">
                            <TextBlock Text="{Binding}" />
                        </DataTemplate>
                    </ControlTemplate.Resources>
                    <dx:DXTabControl
                        x:Name="Root"
                        Padding="0"
                        dx:DXSerializer.Enabled="True"
                        dx:DXTabControlRestoreLayoutOptions.AddNewTabs="False"
                        dx:DXTabControlRestoreLayoutOptions.RemoveOldTabs="False"
                        AllowMerging="False"
                        ItemHeaderTemplate="{StaticResource TabItemHeaderTemplate}"
                        Style="{TemplateBinding TemplateRootStyle}">
                        <dx:DXTabControl.ControlBoxRightTemplate>
                            <Binding Path="(dxrud:ReportDesigner.Designer).UseOfficeInspiredRibbonStyle" RelativeSource="{RelativeSource Self}">
                                <Binding.Converter>
                                    <dxmvvm:BooleanToObjectConverter>
                                        <dxmvvm:BooleanToObjectConverter.TrueValue>
                                            Null
                                        </dxmvvm:BooleanToObjectConverter.TrueValue>
                                        <dxmvvm:BooleanToObjectConverter.FalseValue>
                                            <DataTemplate>
                                                <dxrud:RibbonPageSelector Ribbon="{Binding Path=(dxrud:ReportDesigner.DocumentSelector).Ribbon, RelativeSource={RelativeSource Self}}" />
                                            </DataTemplate>
                                        </dxmvvm:BooleanToObjectConverter.FalseValue>
                                    </dxmvvm:BooleanToObjectConverter>
                                </Binding.Converter>
                            </Binding>
                        </dx:DXTabControl.ControlBoxRightTemplate>
                        <dx:DXTabControl.Resources>
                            <Style TargetType="{x:Type dx:DXTabItem}">
                                <Setter Property="dx:DXSerializer.Enabled" Value="False" />
                            </Style>
                            <dx:TabbedWindowDocumentUIService
                                x:Key="{x:Static dxrud:ReportDesignerDocumentsViewBase.DocumentManagerServiceKey}"
                                ShowNewItemOnStartup="False"
                                Target="{x:Reference Root}"
                                ViewTemplate="{Binding Path=Target.(dxrud:ReportDesigner.Designer).DocumentTemplate, RelativeSource={RelativeSource Self}}"
                                WindowClosingCommand="{Binding Path=Target.(dxrud:ReportDesigner.Designer).OnClosingCommand, RelativeSource={RelativeSource Self}}" />
                        </dx:DXTabControl.Resources>
                        <dx:DXTabControl.View>
                            <dx:TabControlStretchView
                                CloseWindowOnSingleTabItemHiding="{Binding Path=Owner.(dxrud:ReportDesigner.Designer).View.CloseWindowWhenLastTabIsClosed, RelativeSource={RelativeSource Self}}"
                                DragDropMode="{Binding Path=Owner.(dxrud:ReportDesigner.Designer).View.TabDragDropMode, RelativeSource={RelativeSource Self}}"
                                DragDropRegion="ReportDesignerBrowserView"
                                HideButtonShowMode="InAllTabs"
                                NewButtonShowMode="{Binding Path=Owner.(dxrud:ReportDesigner.Designer).ReportStorage, Converter={dxrudi:ReportStorageToNewButtonShowModeConverter}, RelativeSource={RelativeSource Self}}"
                                NewTabCommand="{Binding Path=Owner.(dxrud:ReportDesigner.Designer).ActualCommands.NewDocumentCommand, RelativeSource={RelativeSource Self}}"
                                NewTabControlStyle="{Binding Path=Owner.(dxrud:ReportDesigner.Designer).View.TemplateRootStyle, RelativeSource={RelativeSource Self}}"
                                NewWindowStyle="{Binding Path=Owner.(dxrud:ReportDesigner.Designer).View.NewWindowStyle, RelativeSource={RelativeSource Self}}"
                                RemoveTabItemsOnHiding="True"
                                SingleTabItemHideMode="Hide" />
                        </dx:DXTabControl.View>
                        <dx:DXTabControl.ContentHeaderTemplate>
                            <DataTemplate>
                                <ContentControl
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    Content="{x:Null}"
                                    ContentTemplate="{Binding Path=(dxrud:ReportDesigner.Designer).RibbonTemplate, RelativeSource={RelativeSource Self}}"
                                    DockPanel.Dock="Top"
                                    Focusable="False"
                                    IsTabStop="False" />
                            </DataTemplate>
                        </dx:DXTabControl.ContentHeaderTemplate>
                        <dx:DXTabControl.ContentFooterTemplate>
                            <DataTemplate>
                                <ContentControl
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    Content="{x:Null}"
                                    ContentTemplate="{Binding Path=(dxrud:ReportDesigner.Designer).RibbonStatusBarTemplate, RelativeSource={RelativeSource Self}}"
                                    DockPanel.Dock="Bottom"
                                    Focusable="False"
                                    IsTabStop="False" />
                            </DataTemplate>
                        </dx:DXTabControl.ContentFooterTemplate>
                        <dx:DXTabControl.ContentHostTemplate>
                            <DataTemplate>
                                <dxdo:DockLayoutManager Name="dockLayoutManager" ViewStyle="Light">
                                    <dxdo:LayoutGroup BindableName="{x:Static dxrud:DockLayoutManagerItemsNames.MainGroup}" Orientation="Horizontal">
                                        <dxdo:LayoutPanel
                                            AllowClose="False"
                                            AllowSizing="False"
                                            BindableName="{x:Static dxrud:DockLayoutManagerItemsNames.ToolboxPanel}"
                                            ItemWidth="Auto"
                                            ShowCaption="False"
                                            ShowCloseButton="False"
                                            ShowInDocumentSelector="False"
                                            Visibility="{Binding Path=(dxrud:ReportDesigner.Document).ViewKind, RelativeSource={RelativeSource Self}, Converter={dxrudi:ViewKindToVisibilityConverter}, ConverterParameter={StaticResource ReportDesignerDocumentViewKind_Designer}}">
                                            <udtb:ReportDesignerToolboxControl />
                                        </dxdo:LayoutPanel>
                                        <dxdo:LayoutGroup BindableName="{x:Static dxrud:DockLayoutManagerItemsNames.GroupSortGroup}" ItemHeight="220" Orientation="Vertical">
                                            <dxdo:LayoutPanel
                                                AllowClose="False"
                                                Background="Transparent"
                                                BindableName="{x:Static dxrud:DockLayoutManagerItemsNames.DesignSurfacePanel}"
                                                ItemWidth="*"
                                                ShowCaption="False"
                                                ShowCloseButton="False"
                                                ShowInDocumentSelector="False">
                                                <dx:ContentHost />
                                            </dxdo:LayoutPanel>
                                            <dxdo:TabbedGroup ItemHeight="220">
                                                <dxdo:LayoutPanel
                                                    AllowClose="True"
                                                    BindableName="{x:Static dxrud:DockLayoutManagerItemsNames.ReportDesignAnalyzerPanel}"
                                                    Caption="{dxrudl:ReportDesignerStringId StringId=ReportDesignAnalyzer}"
                                                    ShowCloseButton="True">
                                                    <dxmvvm:Interaction.Behaviors>
                                                        <dxrudi:LayoutPanelBehavior
                                                            AutoHidden="{Binding AssociatedObject.AutoHidden, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, RelativeSource={RelativeSource Self}}"
                                                            AutoHideExpandState="{Binding AssociatedObject.AutoHideExpandState, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, RelativeSource={RelativeSource Self}}"
                                                            Designer="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer), UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                            DesignerPartsOptions="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer).ErrorPanelOptions, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                            PanelIsClosed="{Binding Path=AssociatedObject.Closed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                            PanelState="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer).ErrorPanelOptions.Visibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}">
                                                            <dxrudi:LayoutPanelBehavior.ReportIsLoaded>
                                                                <MultiBinding Converter="{dxrudep:ErrorPanelDockPanelReportIsLoadedConverter}">
                                                                    <Binding Path="AssociatedObject.(dxrud:ReportDesigner.Document).ReportModel.IsVisible" RelativeSource="{RelativeSource Mode=Self}" UpdateSourceTrigger="PropertyChanged" />
                                                                    <Binding Path="AssociatedObject.(dxrud:ReportDesigner.Document).Preview" RelativeSource="{RelativeSource Mode=Self}" />
                                                                    <Binding Path="AssociatedObject.(dxrud:ReportDesigner.DocumentSelector).ViewKind" RelativeSource="{RelativeSource Mode=Self}" UpdateSourceTrigger="PropertyChanged" />
                                                                </MultiBinding>
                                                            </dxrudi:LayoutPanelBehavior.ReportIsLoaded>
                                                        </dxrudi:LayoutPanelBehavior>
                                                        <dxrudep:ErrorDockPanelBehavior ReportDesignerDocument="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Document), RelativeSource={RelativeSource Self}}" ViewKind="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Document).ViewKind, Mode=OneWay, RelativeSource={RelativeSource Self}}" />
                                                    </dxmvvm:Interaction.Behaviors>
                                                    <dxrudep:ErrorPanelControl dxrudep:ErrorPanelControl.Editor="{Binding RelativeSource={RelativeSource Mode=Self}}" />
                                                </dxdo:LayoutPanel>
                                                <dxdo:LayoutPanel
                                                    AllowClose="True"
                                                    BindableName="{x:Static dxrud:DockLayoutManagerItemsNames.GroupSortPanel}"
                                                    Caption="{dxrudl:ReportDesignerStringId StringId=GroupAndSort}"
                                                    ShowCloseButton="True"
                                                    Visibility="{Binding Path=(dxrud:ReportDesigner.Document).ViewKind, RelativeSource={RelativeSource Self}, Converter={dxrudi:ViewKindToVisibilityConverter}, ConverterParameter={StaticResource ReportDesignerDocumentViewKind_Designer}}">
                                                    <dxmvvm:Interaction.Behaviors>
                                                        <dxrudi:LayoutPanelBehavior
                                                            AutoHidden="{Binding AssociatedObject.AutoHidden, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, RelativeSource={RelativeSource Self}}"
                                                            AutoHideExpandState="{Binding AssociatedObject.AutoHideExpandState, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, RelativeSource={RelativeSource Self}}"
                                                            Designer="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer), UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                            DesignerPartsOptions="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer).GroupAndSortPanelOptions, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                            PanelIsClosed="{Binding Path=AssociatedObject.Closed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                            PanelState="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer).GroupAndSortPanelOptions.Visibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                            ReportIsLoaded="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Document).ReportModel.IsVisible, FallbackValue=False, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}" />
                                                    </dxmvvm:Interaction.Behaviors>
                                                    <dxrudgs:GroupSortControl />
                                                </dxdo:LayoutPanel>
                                            </dxdo:TabbedGroup>
                                        </dxdo:LayoutGroup>
                                        <dxdo:LayoutGroup BindableName="{x:Static dxrud:DockLayoutManagerItemsNames.SidePanelsGroup}" ItemWidth="390" Orientation="Vertical">
                                            <dxdo:TabbedGroup BindableName="{x:Static dxrud:DockLayoutManagerItemsNames.SideTopPanelsGroup}">
                                                <dxdo:LayoutPanel
                                                    AllowClose="True"
                                                    BindableName="{x:Static dxrud:DockLayoutManagerItemsNames.ReportExplorerPanel}"
                                                    Caption="{dxrudl:ReportDesignerStringId StringId=ReportExplorer}"
                                                    ShowCloseButton="True"
                                                    Visibility="{Binding Path=(dxrud:ReportDesigner.Document).ViewKind, RelativeSource={RelativeSource Self}, Converter={dxrudi:ViewKindToVisibilityConverter}, ConverterParameter={StaticResource ReportDesignerDocumentViewKind_Designer}}">
                                                    <reportexplorer:ReportExplorerControl />
                                                    <dxmvvm:Interaction.Behaviors>
                                                        <dxrudi:LayoutPanelBehavior
                                                            AutoHidden="{Binding AssociatedObject.AutoHidden, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, RelativeSource={RelativeSource Self}}"
                                                            AutoHideExpandState="{Binding AssociatedObject.AutoHideExpandState, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, RelativeSource={RelativeSource Self}}"
                                                            Designer="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer), UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                            DesignerPartsOptions="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer).ReportExplorerOptions, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                            PanelIsClosed="{Binding Path=AssociatedObject.Closed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                            PanelState="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer).ReportExplorerOptions.Visibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                            ReportIsLoaded="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Document).ReportModel.IsVisible, FallbackValue=False, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}" />
                                                    </dxmvvm:Interaction.Behaviors>
                                                </dxdo:LayoutPanel>
                                                <dxdo:LayoutPanel
                                                    AllowClose="True"
                                                    BindableName="{x:Static dxrud:DockLayoutManagerItemsNames.FieldListPanel}"
                                                    Caption="{dxrudl:ReportDesignerStringId StringId=FieldList}"
                                                    ShowCloseButton="True"
                                                    Visibility="{Binding Path=(dxrud:ReportDesigner.Document).ViewKind, RelativeSource={RelativeSource Self}, Converter={dxrudi:ViewKindToVisibilityConverter}, ConverterParameter={StaticResource ReportDesignerDocumentViewKind_Designer}}">
                                                    <dxmvvm:Interaction.Behaviors>
                                                        <dxrudi:LayoutPanelBehavior
                                                            AutoHidden="{Binding AssociatedObject.AutoHidden, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, RelativeSource={RelativeSource Self}}"
                                                            AutoHideExpandState="{Binding AssociatedObject.AutoHideExpandState, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, RelativeSource={RelativeSource Self}}"
                                                            Designer="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer), UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                            DesignerPartsOptions="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer).FieldListOptions, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                            PanelIsClosed="{Binding Path=AssociatedObject.Closed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                            PanelState="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer).FieldListOptions.Visibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                            ReportIsLoaded="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Document).ReportModel.IsVisible, FallbackValue=False, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}" />
                                                    </dxmvvm:Interaction.Behaviors>
                                                    <dxrudfl:InteractiveReportDesignerFieldListControl>
                                                        <dxrudfl:InteractiveReportDesignerFieldListControl.Resources>
                                                            <Style x:Key="{dxrudt:LWKey ReportDesigner.FieldListStyle}" TargetType="{x:Type dxg:TreeListControl}">
                                                                <Setter Property="SelectionMode" Value="Row" />
                                                                <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
                                                                    <Setter.Value>
                                                                        <DataTemplate>
                                                                            <ItemsControl>
                                                                                <dxrudfli:FieldListDiagramToolBehavior Diagram="{Binding Diagram, RelativeSource={RelativeSource TemplatedParent}}" />
                                                                            </ItemsControl>
                                                                        </DataTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                            <Style BasedOn="{StaticResource FieldListTreeListViewRowStyleTemplate}" TargetType="{x:Type dxg:RowControl}" />
                                                        </dxrudfl:InteractiveReportDesignerFieldListControl.Resources>
                                                    </dxrudfl:InteractiveReportDesignerFieldListControl>
                                                </dxdo:LayoutPanel>
                                            </dxdo:TabbedGroup>
                                            <dxdo:TabbedGroup BindableName="{x:Static dxrud:DockLayoutManagerItemsNames.SideBottomPanelsGroup}">
                                                <dxdo:LayoutPanel
                                                    AllowClose="True"
                                                    BindableName="{x:Static dxrud:DockLayoutManagerItemsNames.PropertyGridPanel}"
                                                    Caption="{dxrudl:ReportDesignerStringId StringId=Properties}"
                                                    IsActive="{Binding Path=(dxrud:ReportDesigner.Designer).PropertyGridIsActive, RelativeSource={RelativeSource Self}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    ShowCloseButton="True"
                                                    Visibility="{Binding Path=(dxrud:ReportDesigner.Document).ViewKind, RelativeSource={RelativeSource Self}, Converter={dxrudi:ViewKindToVisibilityConverter}, ConverterParameter={StaticResource ReportDesignerDocumentViewKind_Designer}}">
                                                    <dxmvvm:Interaction.Behaviors>
                                                        <dxrudi:LayoutPanelBehavior
                                                            AutoHidden="{Binding AssociatedObject.AutoHidden, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, RelativeSource={RelativeSource Self}}"
                                                            AutoHideExpandState="{Binding AssociatedObject.AutoHideExpandState, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, RelativeSource={RelativeSource Self}}"
                                                            Designer="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer), UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                            DesignerPartsOptions="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer).PropertyGridOptions, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                            PanelIsClosed="{Binding Path=AssociatedObject.Closed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                            PanelState="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer).PropertyGridOptions.Visibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                            ReportIsLoaded="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Document).ReportModel.IsVisible, FallbackValue=False, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}" />
                                                    </dxmvvm:Interaction.Behaviors>
                                                    <propertygrid:ReportDesignerPropertyGridControl />
                                                </dxdo:LayoutPanel>
                                                <dxdo:LayoutPanel
                                                    AllowClose="True"
                                                    BindableName="{x:Static dxrud:DockLayoutManagerItemsNames.ReportGalleryPanel}"
                                                    Caption="{dxrudl:ReportDesignerStringId StringId=ReportGallery}"
                                                    ShowCloseButton="True"
                                                    Visibility="{Binding Path=(dxrud:ReportDesigner.Document).ViewKind, RelativeSource={RelativeSource Self}, Converter={dxrudi:ViewKindToVisibilityConverter}, ConverterParameter={StaticResource ReportDesignerDocumentViewKind_Designer}}">
                                                    <dxmvvm:Interaction.Behaviors>
                                                        <dxrudi:LayoutPanelBehavior
                                                            AutoHidden="{Binding AssociatedObject.AutoHidden, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, RelativeSource={RelativeSource Self}}"
                                                            AutoHideExpandState="{Binding AssociatedObject.AutoHideExpandState, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, RelativeSource={RelativeSource Self}}"
                                                            Designer="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer), UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                            DesignerPartsOptions="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer).ReportGalleryOptions, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                            PanelIsClosed="{Binding Path=AssociatedObject.Closed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                            PanelState="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer).ReportGalleryOptions.Visibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                            ReportIsLoaded="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Document).ReportModel.IsVisible, FallbackValue=False, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}" />
                                                    </dxmvvm:Interaction.Behaviors>
                                                    <dxrg:ReportGalleryControl />
                                                </dxdo:LayoutPanel>
                                            </dxdo:TabbedGroup>
                                        </dxdo:LayoutGroup>
                                    </dxdo:LayoutGroup>
                                </dxdo:DockLayoutManager>
                            </DataTemplate>
                        </dx:DXTabControl.ContentHostTemplate>
                    </dx:DXTabControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ReportDesignerClassicView.DefaultStyleBase" BasedOn="{StaticResource ReportDesignerViewBase.DefaultStyleBase}" TargetType="dxrud:ReportDesignerClassicView">
        <Setter Property="WindowServiceTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxmvvm:WindowService
                            Title="Report Designer"
                            ViewTemplate="{StaticResource {dxrudt:LWKey ReportDesigner.ReportDesignerWindowViewTemplate}}"
                            WindowShowMode="Dialog"
                            WindowStartupLocation="CenterOwner"
                            WindowStyle="{DynamicResource {dxrudt:LWKey ReportDesigner.ReportDesignerClassicWindowStyle}}"
                            WindowType="dxr:DXRibbonWindow" />
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxrud:ReportDesignerClassicView">
                    <DockPanel x:Name="Root" Style="{TemplateBinding TemplateRootStyle}">
                        <DockPanel.Resources>
                            <dxdo:TabbedDocumentUIService x:Key="{x:Static dxrud:ReportDesignerDocumentsViewBase.DocumentManagerServiceKey}" DocumentGroup="{x:Reference documentGroup}" ViewTemplate="{Binding Path=DocumentGroup.(dxrud:ReportDesigner.Designer).DocumentTemplate, RelativeSource={RelativeSource Self}}">
                                <dxdo:TabbedDocumentUIService.DocumentPanelStyle>
                                    <Style TargetType="dxdo:DocumentPanel">
                                        <Setter Property="ShowCloseButton" Value="{Binding AllowClose, RelativeSource={RelativeSource Self}}" />
                                        <Setter Property="AllowContextMenu" Value="False" />
                                    </Style>
                                </dxdo:TabbedDocumentUIService.DocumentPanelStyle>
                            </dxdo:TabbedDocumentUIService>
                        </DockPanel.Resources>
                        <ContentControl
                            HorizontalContentAlignment="Stretch"
                            VerticalContentAlignment="Stretch"
                            Content="{x:Null}"
                            ContentTemplate="{Binding Path=(dxrud:ReportDesigner.Designer).RibbonTemplate, RelativeSource={RelativeSource Self}}"
                            DockPanel.Dock="Top"
                            Focusable="False"
                            IsTabStop="False" />
                        <ContentControl
                            HorizontalContentAlignment="Stretch"
                            VerticalContentAlignment="Stretch"
                            Content="{x:Null}"
                            ContentTemplate="{Binding Path=(dxrud:ReportDesigner.Designer).RibbonStatusBarTemplate, RelativeSource={RelativeSource Self}}"
                            DockPanel.Dock="Bottom"
                            Focusable="False"
                            IsTabStop="False" />

                        <dxdo:DockLayoutManager Name="dockLayoutManager" ViewStyle="Light">
                            <dxdo:LayoutGroup BindableName="{x:Static dxrud:DockLayoutManagerItemsNames.MainGroup}" Orientation="Horizontal">
                                <dxdo:LayoutPanel
                                    AllowClose="False"
                                    AllowSizing="False"
                                    BindableName="{x:Static dxrud:DockLayoutManagerItemsNames.ToolboxPanel}"
                                    ItemWidth="Auto"
                                    ShowCaption="False"
                                    ShowCloseButton="False"
                                    ShowInDocumentSelector="False"
                                    Visibility="{Binding Path=(dxrud:ReportDesigner.Document).ViewKind, RelativeSource={RelativeSource Self}, Converter={dxrudi:ViewKindToVisibilityConverter}, ConverterParameter={StaticResource ReportDesignerDocumentViewKind_Designer}}">
                                    <udtb:ReportDesignerToolboxControl />
                                </dxdo:LayoutPanel>
                                <dxdo:LayoutGroup BindableName="{x:Static dxrud:DockLayoutManagerItemsNames.GroupSortGroup}" Orientation="Vertical">
                                    <dxdo:DocumentGroup x:Name="documentGroup" />
                                    <dxdo:TabbedGroup ItemHeight="220">
                                        <dxdo:LayoutPanel
                                            AllowClose="True"
                                            BindableName="{x:Static dxrud:DockLayoutManagerItemsNames.ReportDesignAnalyzerPanel}"
                                            Caption="{dxrudl:ReportDesignerStringId StringId=ReportDesignAnalyzer}"
                                            ShowCloseButton="True">

                                            <dxmvvm:Interaction.Behaviors>
                                                <dxrudi:LayoutPanelBehavior
                                                    AutoHidden="{Binding AssociatedObject.AutoHidden, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, RelativeSource={RelativeSource Self}}"
                                                    AutoHideExpandState="{Binding AssociatedObject.AutoHideExpandState, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, RelativeSource={RelativeSource Self}}"
                                                    Designer="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer), UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                    DesignerPartsOptions="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer).ErrorPanelOptions, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                    PanelIsClosed="{Binding Path=AssociatedObject.Closed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                    PanelState="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer).ErrorPanelOptions.Visibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}">
                                                    <dxrudi:LayoutPanelBehavior.ReportIsLoaded>
                                                        <MultiBinding Converter="{dxrudep:ErrorPanelDockPanelReportIsLoadedConverter}">
                                                            <Binding Path="AssociatedObject.(dxrud:ReportDesigner.Document).ReportModel.IsVisible" RelativeSource="{RelativeSource Mode=Self}" UpdateSourceTrigger="PropertyChanged" />
                                                            <Binding Path="AssociatedObject.(dxrud:ReportDesigner.Document).Preview" RelativeSource="{RelativeSource Mode=Self}" />
                                                            <Binding Path="AssociatedObject.(dxrud:ReportDesigner.DocumentSelector).ViewKind" RelativeSource="{RelativeSource Mode=Self}" UpdateSourceTrigger="PropertyChanged" />
                                                        </MultiBinding>
                                                    </dxrudi:LayoutPanelBehavior.ReportIsLoaded>
                                                </dxrudi:LayoutPanelBehavior>
                                                <dxrudep:ErrorDockPanelBehavior ReportDesignerDocument="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Document), RelativeSource={RelativeSource Self}}" ViewKind="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Document).ViewKind, Mode=OneWay, RelativeSource={RelativeSource Self}}" />

                                            </dxmvvm:Interaction.Behaviors>
                                            <dxrudep:ErrorPanelControl dxrudep:ErrorPanelControl.Editor="{Binding RelativeSource={RelativeSource Mode=Self}}" />
                                        </dxdo:LayoutPanel>
                                        <dxdo:LayoutPanel
                                            AllowClose="True"
                                            BindableName="{x:Static dxrud:DockLayoutManagerItemsNames.GroupSortPanel}"
                                            Caption="{dxrudl:ReportDesignerStringId StringId=GroupAndSort}"
                                            ItemHeight="220"
                                            ShowCloseButton="True"
                                            Visibility="{Binding Path=(dxrud:ReportDesigner.Document).ViewKind, RelativeSource={RelativeSource Self}, Converter={dxrudi:ViewKindToVisibilityConverter}, ConverterParameter={StaticResource ReportDesignerDocumentViewKind_Designer}}">
                                            <dxmvvm:Interaction.Behaviors>
                                                <dxrudi:LayoutPanelBehavior
                                                    AutoHidden="{Binding AssociatedObject.AutoHidden, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, RelativeSource={RelativeSource Self}}"
                                                    AutoHideExpandState="{Binding AssociatedObject.AutoHideExpandState, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, RelativeSource={RelativeSource Self}}"
                                                    Designer="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer), UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                    DesignerPartsOptions="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer).GroupAndSortPanelOptions, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                    PanelIsClosed="{Binding Path=AssociatedObject.Closed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                    PanelState="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer).GroupAndSortPanelOptions.Visibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                    ReportIsLoaded="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Document).ReportModel.IsVisible, FallbackValue=False, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}" />
                                            </dxmvvm:Interaction.Behaviors>
                                            <dxrudgs:GroupSortControl />
                                        </dxdo:LayoutPanel>

                                    </dxdo:TabbedGroup>
                                </dxdo:LayoutGroup>
                                <dxdo:LayoutGroup BindableName="{x:Static dxrud:DockLayoutManagerItemsNames.SidePanelsGroup}" ItemWidth="390" Orientation="Vertical">
                                    <dxdo:TabbedGroup BindableName="{x:Static dxrud:DockLayoutManagerItemsNames.SideTopPanelsGroup}">
                                        <dxdo:LayoutPanel
                                            AllowClose="True"
                                            BindableName="{x:Static dxrud:DockLayoutManagerItemsNames.ReportExplorerPanel}"
                                            Caption="{dxrudl:ReportDesignerStringId StringId=ReportExplorer}"
                                            ShowCloseButton="True"
                                            Visibility="{Binding Path=(dxrud:ReportDesigner.Document).ViewKind, RelativeSource={RelativeSource Self}, Converter={dxrudi:ViewKindToVisibilityConverter}, ConverterParameter={StaticResource ReportDesignerDocumentViewKind_Designer}}">
                                            <reportexplorer:ReportExplorerControl />
                                            <dxmvvm:Interaction.Behaviors>
                                                <dxrudi:LayoutPanelBehavior
                                                    AutoHidden="{Binding AssociatedObject.AutoHidden, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, RelativeSource={RelativeSource Self}}"
                                                    AutoHideExpandState="{Binding AssociatedObject.AutoHideExpandState, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, RelativeSource={RelativeSource Self}}"
                                                    Designer="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer), UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                    DesignerPartsOptions="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer).ReportExplorerOptions, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                    PanelIsClosed="{Binding Path=AssociatedObject.Closed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                    PanelState="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer).ReportExplorerOptions.Visibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                    ReportIsLoaded="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Document).ReportModel.IsVisible, FallbackValue=False, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}" />
                                            </dxmvvm:Interaction.Behaviors>
                                        </dxdo:LayoutPanel>

                                        <dxdo:LayoutPanel
                                            AllowClose="True"
                                            BindableName="{x:Static dxrud:DockLayoutManagerItemsNames.FieldListPanel}"
                                            Caption="{dxrudl:ReportDesignerStringId StringId=FieldList}"
                                            ShowCloseButton="True"
                                            Visibility="{Binding Path=(dxrud:ReportDesigner.Document).ViewKind, RelativeSource={RelativeSource Self}, Converter={dxrudi:ViewKindToVisibilityConverter}, ConverterParameter={StaticResource ReportDesignerDocumentViewKind_Designer}}">
                                            <dxmvvm:Interaction.Behaviors>
                                                <dxrudi:LayoutPanelBehavior
                                                    AutoHidden="{Binding AssociatedObject.AutoHidden, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, RelativeSource={RelativeSource Self}}"
                                                    AutoHideExpandState="{Binding AssociatedObject.AutoHideExpandState, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, RelativeSource={RelativeSource Self}}"
                                                    Designer="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer), UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                    DesignerPartsOptions="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer).FieldListOptions, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                    PanelIsClosed="{Binding Path=AssociatedObject.Closed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                    PanelState="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer).FieldListOptions.Visibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                    ReportIsLoaded="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Document).ReportModel.IsVisible, FallbackValue=False, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}" />
                                            </dxmvvm:Interaction.Behaviors>
                                            <dxrudfl:InteractiveReportDesignerFieldListControl>
                                                <dxrudfl:InteractiveReportDesignerFieldListControl.Resources>
                                                    <Style x:Key="{dxrudt:LWKey ReportDesigner.FieldListStyle}" TargetType="{x:Type dxg:TreeListControl}">
                                                        <Setter Property="SelectionMode" Value="Row" />
                                                        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
                                                            <Setter.Value>
                                                                <DataTemplate>
                                                                    <ItemsControl>
                                                                        <dxrudfli:FieldListDiagramToolBehavior Diagram="{Binding Diagram, RelativeSource={RelativeSource TemplatedParent}}" />
                                                                    </ItemsControl>
                                                                </DataTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                    <Style BasedOn="{StaticResource FieldListTreeListViewRowStyleTemplate}" TargetType="{x:Type dxg:RowControl}" />
                                                </dxrudfl:InteractiveReportDesignerFieldListControl.Resources>
                                            </dxrudfl:InteractiveReportDesignerFieldListControl>
                                        </dxdo:LayoutPanel>
                                    </dxdo:TabbedGroup>

                                    <dxdo:TabbedGroup BindableName="{x:Static dxrud:DockLayoutManagerItemsNames.SideBottomPanelsGroup}">
                                        <dxdo:LayoutPanel
                                            AllowClose="True"
                                            BindableName="{x:Static dxrud:DockLayoutManagerItemsNames.PropertyGridPanel}"
                                            Caption="{dxrudl:ReportDesignerStringId StringId=Properties}"
                                            IsActive="{Binding Path=(dxrud:ReportDesigner.Designer).PropertyGridIsActive, RelativeSource={RelativeSource Self}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            ShowCloseButton="True"
                                            Visibility="{Binding Path=(dxrud:ReportDesigner.Document).ViewKind, RelativeSource={RelativeSource Self}, Converter={dxrudi:ViewKindToVisibilityConverter}, ConverterParameter={StaticResource ReportDesignerDocumentViewKind_Designer}}">
                                            <propertygrid:ReportDesignerPropertyGridControl />
                                            <dxmvvm:Interaction.Behaviors>
                                                <dxrudi:LayoutPanelBehavior
                                                    AutoHidden="{Binding AssociatedObject.AutoHidden, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, RelativeSource={RelativeSource Self}}"
                                                    AutoHideExpandState="{Binding AssociatedObject.AutoHideExpandState, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, RelativeSource={RelativeSource Self}}"
                                                    Designer="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer), UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                    DesignerPartsOptions="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer).PropertyGridOptions, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                    PanelIsClosed="{Binding Path=AssociatedObject.Closed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                    PanelState="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer).PropertyGridOptions.Visibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                    ReportIsLoaded="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Document).ReportModel.IsVisible, FallbackValue=False, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}" />
                                            </dxmvvm:Interaction.Behaviors>
                                        </dxdo:LayoutPanel>
                                        <dxdo:LayoutPanel
                                            AllowClose="True"
                                            BindableName="{x:Static dxrud:DockLayoutManagerItemsNames.ReportGalleryPanel}"
                                            Caption="{dxrudl:ReportDesignerStringId StringId=ReportGallery}"
                                            ShowCloseButton="True"
                                            Visibility="{Binding Path=(dxrud:ReportDesigner.Document).ViewKind, RelativeSource={RelativeSource Self}, Converter={dxrudi:ViewKindToVisibilityConverter}, ConverterParameter={StaticResource ReportDesignerDocumentViewKind_Designer}}">
                                            <dxmvvm:Interaction.Behaviors>
                                                <dxrudi:LayoutPanelBehavior
                                                    AutoHidden="{Binding AssociatedObject.AutoHidden, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, RelativeSource={RelativeSource Self}}"
                                                    AutoHideExpandState="{Binding AssociatedObject.AutoHideExpandState, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, RelativeSource={RelativeSource Self}}"
                                                    Designer="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer), UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                    DesignerPartsOptions="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer).ReportGalleryOptions, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                    PanelIsClosed="{Binding Path=AssociatedObject.Closed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                    PanelState="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer).ReportGalleryOptions.Visibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}"
                                                    ReportIsLoaded="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Document).ReportModel.IsVisible, FallbackValue=False, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}" />
                                            </dxmvvm:Interaction.Behaviors>
                                            <dxrg:ReportGalleryControl />
                                        </dxdo:LayoutPanel>
                                    </dxdo:TabbedGroup>

                                </dxdo:LayoutGroup>
                            </dxdo:LayoutGroup>
                        </dxdo:DockLayoutManager>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ReportDesignerBase.DefaultStyleBase" TargetType="dxrud:ReportDesignerBase">
        <Setter Property="MessageBoxServiceTemplate" Value="{DynamicResource {dxrudt:LWKey ReportDesigner.DefaultMessageBoxServiceTemplate}}" />
        <Setter Property="OpenFileDialogServiceTemplate" Value="{DynamicResource {dxrudt:LWKey ReportDesigner.DefaultOpenFileDialogServiceTemplate}}" />
        <Setter Property="SaveFileDialogServiceTemplate" Value="{DynamicResource {dxrudt:LWKey ReportDesigner.DefaultSaveFileDialogServiceTemplate}}" />
        <Setter Property="DiagramStyle">
            <Setter.Value>
                <Style TargetType="xrdiag:XRDiagramControl">
                    <Setter Property="ShowFavoriteProperties" Value="{Binding Path=(dxrud:ReportDesigner.Designer).PropertyGridOptions.ShowFavoriteProperties, RelativeSource={RelativeSource Self}}" />
                    <Setter Property="DragDropManager" Value="{Binding Path=(dxrud:ReportDesigner.Designer).DragDropManager, RelativeSource={RelativeSource Self}}" />
                    <Setter Property="UseTabbedCategoriesView" Value="{Binding Path=(dxrud:ReportDesigner.Designer).PropertyGridOptions.UseTabbedView, RelativeSource={RelativeSource Self}}" />
                    <Setter Property="ShowExpressionsInSeparateTab" Value="{Binding Path=(dxrud:ReportDesigner.Designer).PropertyGridOptions.ShowExpressionsInSeparateTab, RelativeSource={RelativeSource Self}}" />
                    <Setter Property="Background" Value="#FFE5E5E5" />
                    <Setter Property="FlowDirection" Value="LeftToRight" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="WizardDialogServiceTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dx:DialogService DialogStyle="{DynamicResource {dxrudt:LWKey ReportDesignerDialog.DataSourceWizardDialogStyle}}" DialogWindowStartupLocation="CenterOwner">
                            <dx:DialogService.ViewTemplate>
                                <DataTemplate>
                                    <dxrudw:ReportWizardControl
                                        DataSourceWizardSettings="{Binding DataSourceWizardSettings}"
                                        Report="{Binding Report}"
                                        ReportStorage="{Binding ReportStorage}"
                                        ServicesRegistry="{Binding ServicesRegistry}">
                                        <dxmvvm:Interaction.Behaviors>
                                            <dxmvvm:EventToCommand Command="{Binding CompletedCommand}" EventName="WizardCompleted" PassEventArgsToCommand="True" />
                                        </dxmvvm:Interaction.Behaviors>
                                    </dxrudw:ReportWizardControl>
                                </DataTemplate>
                            </dx:DialogService.ViewTemplate>
                        </dx:DialogService>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SplashScreenServiceTemplate" Value="{DynamicResource {dxrudt:LWKey ReportDesigner.DefaultSplashScreenServiceTemplate}}" />
    </Style>
    <Style x:Key="ReportDesigner.DefaultStyleBase" BasedOn="{StaticResource ReportDesignerBase.DefaultStyleBase}" TargetType="dxrud:ReportDesigner">
        <Setter Property="RibbonTemplate" Value="{DynamicResource {dxrudt:LWKey ReportDesigner.OfficeInspiredRibbonTemplate}}" />
        <Setter Property="RibbonStatusBarTemplate" Value="{DynamicResource {dxrudt:LWKey ReportDesigner.RibbonStatusBarTemplate}}" />
        <Setter Property="DocumentTemplate" Value="{DynamicResource {dxrudt:LWKey ReportDesigner.DocumentTemplate}}" />
        <Setter Property="DesignerPaneTemplate" Value="{DynamicResource {dxrudt:LWKey ReportDesigner.DesignerPaneTemplate}}" />
        <Setter Property="PreviewTemplate" Value="{DynamicResource {dxrudt:LWKey ReportDesigner.PreviewTemplate}}" />
        <Setter Property="ScriptEditorTemplate" Value="{DynamicResource {dxrudt:LWKey ReportDesigner.ScriptEditorTemplate}}" />
        <Setter Property="dx:ScrollBarExtensions.ScrollBarMode" Value="TouchOverlap" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxrud:ReportDesigner">
                    <ControlTemplate.Resources>
                        <Style x:Key="baseLayoutItemStyle" TargetType="{x:Type dxdo:BaseLayoutItem}">
                            <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <ItemsControl>
                                            <dxrudi:ReportDesignerLayoutSerializationFilter />
                                        </ItemsControl>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style BasedOn="{StaticResource baseLayoutItemStyle}" TargetType="{x:Type dxdo:LayoutPanel}" />
                        <Style BasedOn="{StaticResource baseLayoutItemStyle}" TargetType="{x:Type dxdo:LayoutGroup}" />
                        <Style BasedOn="{StaticResource baseLayoutItemStyle}" TargetType="{x:Type dxdo:TabbedGroup}" />
                    </ControlTemplate.Resources>
                    <dx:DXBorder x:Name="ViewContainer">
                        <dxmvvm:Interaction.Behaviors>
                            <dxmvvm:LayoutSerializationService />
                        </dxmvvm:Interaction.Behaviors>
                    </dx:DXBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(dxrud:ReportDesigner.Designer).UseOfficeInspiredRibbonStyle, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter Property="RibbonTemplate" Value="{DynamicResource {dxrudt:LWKey ReportDesigner.RibbonTemplate}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="MarginThumb.DefaultStyleBase" TargetType="{x:Type dxrudi:MarginThumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxrudi:MarginThumb}">
                    <Grid Background="{Binding IsDragging, Converter={dxrudi:IsDraggingToBackColorConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ResizeMarginsAdorner.DefaultStyleBase" TargetType="dxrudi:ResizeMarginsAdorner">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxrudi:ResizeMarginsAdorner">
                    <Grid Name="PART_MarginsGrid" ClipToBounds="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{Binding AdornerLeftMargin, RelativeSource={RelativeSource TemplatedParent}}" MinWidth="0">
                                <ColumnDefinition.MaxWidth>
                                    <MultiBinding Converter="{dxrudi:PageSizeToMarginMaxValueConverter}">
                                        <Binding Path="DiagramControl.PageSize" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="AdornerLeftMargin" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="AdornerRightMargin" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="DiagramControl.ZoomFactor" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <MultiBinding.ConverterParameter>
                                            <sys:Boolean>True</sys:Boolean>
                                        </MultiBinding.ConverterParameter>
                                    </MultiBinding>
                                </ColumnDefinition.MaxWidth>
                            </ColumnDefinition>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="{Binding AdornerRightMargin, RelativeSource={RelativeSource TemplatedParent}}" MinWidth="0">
                                <ColumnDefinition.MaxWidth>
                                    <MultiBinding Converter="{dxrudi:PageSizeToMarginMaxValueConverter}">
                                        <Binding Path="DiagramControl.PageSize" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="AdornerLeftMargin" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="AdornerRightMargin" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="DiagramControl.ZoomFactor" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <MultiBinding.ConverterParameter>
                                            <sys:Boolean>False</sys:Boolean>
                                        </MultiBinding.ConverterParameter>
                                    </MultiBinding>
                                </ColumnDefinition.MaxWidth>
                            </ColumnDefinition>
                        </Grid.ColumnDefinitions>

                        <dxrudi:MarginThumb
                            Grid.Column="1"
                            Width="2"
                            Diagram="{TemplateBinding DiagramControl}"
                            MarginSide="Left"
                            ResizeBehavior="PreviousAndNext"
                            SetPageMarginCommand="{Binding SetPageMarginCommand, RelativeSource={RelativeSource TemplatedParent}}" />

                        <dxrudi:MarginThumb
                            Grid.Column="3"
                            Width="2"
                            Diagram="{TemplateBinding DiagramControl}"
                            MarginSide="Right"
                            ResizeBehavior="PreviousAndNext"
                            SetPageMarginCommand="{Binding SetPageMarginCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="XRAdorner.DefaultStyleBase" TargetType="xrdiag:XRAdorner">
        <Setter Property="Visibility" Value="{Binding Path=DiagramItem.IsVisible, RelativeSource={RelativeSource Self}, Converter={dxmvvm:BooleanToVisibilityConverter}, Mode=OneWay}" />
    </Style>
    <Style x:Key="BandHeaderAdorner.DefaultStyleBase" TargetType="xrdiag:BandHeaderAdorner">
        <Setter Property="ToolTip" Value="{Binding BandName, RelativeSource={RelativeSource Self}}" />
        <Setter Property="xrdiag:BandPanel.IsBandPanelOwner" Value="True" />
        <Setter Property="Visibility" Value="{Binding Path=DiagramItem.IsVisible, RelativeSource={RelativeSource Self}, Converter={dx:BooleanToVisibilityConverter}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="xrdiag:BandHeaderAdorner">
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="background" Property="Border.Background" Value="{Binding DiagramItem, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BandKindToHeaderColorConverter}, ConverterParameter={x:Static xrdiag:BandHeaderMouseState.Hover}}" />
                        </Trigger>
                        <Trigger Property="IsBandSelected" Value="True">
                            <Setter TargetName="background" Property="Border.Background" Value="{Binding DiagramItem, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BandKindToHeaderColorConverter}, ConverterParameter={x:Static xrdiag:BandHeaderMouseState.Focused}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                    <StackPanel Orientation="Horizontal">

                        <xrdiag:BandPanel
                            BandNestingLevel="{TemplateBinding BandNestingLevel}"
                            BandPanelGap="{TemplateBinding BandPanelGap}"
                            HeaderLevelWidth="{TemplateBinding HeaderLevelWidth}"
                            MaxBandNestingLevel="{TemplateBinding MaxBandNestingLevel}">
                            <Grid>
                                <dx:DXBorder
                                    x:Name="background"
                                    Margin="{TemplateBinding Padding}"
                                    Background="{Binding DiagramItem, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BandKindToHeaderColorConverter}}"
                                    BorderBrush="Gray"
                                    BorderThickness="{Binding BandKind, RelativeSource={RelativeSource TemplatedParent}, Converter={dxrudi:BandKindToBandHeaderBorderThicknessConverter}}" />
                                <dxrudi:BandCaptionPanel Opacity="{Binding DiagramItem, RelativeSource={RelativeSource TemplatedParent}, Converter={dxrudi:SelectedItemsLockedInEUDToOpacityConverter}}">
                                    <TextBlock
                                        Margin="4,4,0,7"
                                        Foreground="Black"
                                        Text="{TemplateBinding BandName}"
                                        TextTrimming="CharacterEllipsis"
                                        Visibility="{Binding CaptionVisibility, RelativeSource={RelativeSource AncestorType={x:Type dxrudi:BandCaptionPanel}}}">
                                        <TextBlock.LayoutTransform>
                                            <RotateTransform Angle="270" />
                                        </TextBlock.LayoutTransform>
                                    </TextBlock>
                                    <dx:DXImage
                                        Width="16"
                                        Height="16"
                                        Margin="7,0,0,0"
                                        Source="{Binding Path=DiagramItem.Icon, RelativeSource={RelativeSource TemplatedParent}}"
                                        Stretch="Fill"
                                        Visibility="{Binding IconVisibility, RelativeSource={RelativeSource AncestorType=dxrudi:BandCaptionPanel}}" />
                                </dxrudi:BandCaptionPanel>
                            </Grid>
                        </xrdiag:BandPanel>
                        <dxdiag:RulerScalePresenter
                            Width="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.RulerWidth, RelativeSource={RelativeSource TemplatedParent}, Converter={dxrudi:SumConverter}, ConverterParameter=-3}"
                            Margin="{Binding RulerScaleOffset, Converter={dxrudi:ActualPaddingToRulerScaleMarginConverter LeftPadding=3}, RelativeSource={RelativeSource TemplatedParent}}"
                            LabelOffset="-3,3"
                            MeasureUnit="{TemplateBinding MeasureUnit}"
                            Orientation="Vertical"
                            Style="{StaticResource XRRulerScalePresenter}"
                            Visibility="{Binding Path=BandKind, RelativeSource={RelativeSource TemplatedParent}, Converter={dxrudi:BandKindToRulerPresenterVisibilityConverter}}"
                            Zoom="{TemplateBinding Zoom}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalBandHeaderAdorner.DefaultStyleBase" TargetType="xrdiag:VerticalBandHeaderAdorner">
        <Setter Property="ToolTip" Value="{Binding BandName, RelativeSource={RelativeSource Self}}" />
        <Setter Property="xrdiag:BandPanel.IsBandPanelOwner" Value="True" />
        <Setter Property="Visibility" Value="{Binding Path=DiagramItem.IsVisible, RelativeSource={RelativeSource Self}, Converter={dx:BooleanToVisibilityConverter}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="xrdiag:VerticalBandHeaderAdorner">
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="background" Property="Border.Background" Value="{Binding DiagramItem, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BandKindToHeaderColorConverter}, ConverterParameter={x:Static xrdiag:BandHeaderMouseState.Hover}}" />
                        </Trigger>
                        <Trigger Property="IsBandSelected" Value="True">
                            <Setter TargetName="background" Property="Border.Background" Value="{Binding DiagramItem, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BandKindToHeaderColorConverter}, ConverterParameter={x:Static xrdiag:BandHeaderMouseState.Focused}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                    <Grid Height="{TemplateBinding BandHeaderHeight}" VerticalAlignment="Top">

                        <dx:DXBorder
                            x:Name="background"
                            Margin="0,0,-1,0"
                            Background="{Binding DiagramItem, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BandKindToHeaderColorConverter}}"
                            BorderBrush="Gray"
                            BorderThickness="1" />
                        <dxrudi:BandCaptionPanel Opacity="{Binding DiagramItem, RelativeSource={RelativeSource TemplatedParent}, Converter={dxrudi:SelectedItemsLockedInEUDToOpacityConverter}}" Orientation="Horizontal">
                            <TextBlock
                                Margin="4,0"
                                VerticalAlignment="Center"
                                Foreground="Black"
                                Text="{TemplateBinding BandName}"
                                TextTrimming="CharacterEllipsis"
                                Visibility="{Binding CaptionVisibility, RelativeSource={RelativeSource AncestorType={x:Type dxrudi:BandCaptionPanel}}}" />
                            <dx:DXImage
                                Width="16"
                                Height="16"
                                Margin="4,0,0,0"
                                Source="{Binding Path=DiagramItem.Icon, RelativeSource={RelativeSource TemplatedParent}}"
                                Stretch="Fill"
                                Visibility="{Binding IconVisibility, RelativeSource={RelativeSource AncestorType=dxrudi:BandCaptionPanel}}" />
                        </dxrudi:BandCaptionPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BandMarginAdorner.DefaultStyleBase" TargetType="{x:Type xrdiag:BandMarginAdorner}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xrdiag:BandMarginAdorner}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                        <dx:DXBorder Grid.Column="0" Width="{Binding Path=(dxdiag:AdornerLayer.AdornerMargin), RelativeSource={RelativeSource TemplatedParent}, Converter={dxrudi:BandMarginWidthConverter MarginAlignment=Left}}" Background="Transparent" />
                        <dx:DXBorder Grid.Column="2" Width="{Binding Path=(dxdiag:AdornerLayer.AdornerMargin), RelativeSource={RelativeSource TemplatedParent}, Converter={dxrudi:BandMarginWidthConverter MarginAlignment=Right}}" Background="Transparent" />
                        <dx:DXBorder Grid.ColumnSpan="3" HorizontalAlignment="Stretch" Background="#EEEEEF">
                            <dx:DXBorder.Visibility>
                                <MultiBinding Converter="{dxrudi:CollapsedBandTitleToVisibilityConverter}">
                                    <Binding Path="DiagramItem.IsCollapsed" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="DiagramItem.IsVisible" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </dx:DXBorder.Visibility>
                        </dx:DXBorder>
                        <TextBlock
                            Grid.Column="1"
                            Padding="10,0,0,0"
                            VerticalAlignment="Center"
                            FontWeight="Bold"
                            Foreground="#747474"
                            Text="{Binding DiagramItem, RelativeSource={RelativeSource TemplatedParent}, Converter={dxrudi:CollapsedBandTextConverter}}">
                            <TextBlock.Visibility>
                                <MultiBinding Converter="{dxrudi:CollapsedBandTitleToVisibilityConverter}">
                                    <Binding Path="DiagramItem.IsCollapsed" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="DiagramItem.IsVisible" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </TextBlock.Visibility>
                        </TextBlock>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Visibility" Value="{Binding Path=DiagramItem.IsVisible, RelativeSource={RelativeSource Self}, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
    </Style>
    <Style x:Key="BandBorderAdorner.DefaultStyleBase" TargetType="xrdiag:BandBorderAdorner">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="xrdiag:BandBorderAdorner">
                    <Grid>
                        <Rectangle
                            Height="1"
                            Margin="0,0,0,1"
                            VerticalAlignment="Top"
                            SnapsToDevicePixels="True"
                            Stroke="#BFBFBF"
                            StrokeDashArray="4 4"
                            StrokeThickness="1"
                            Visibility="{Binding Path=DiagramItem.IsVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={dx:BooleanToVisibilityConverter}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalBandBorderAdorner.DefaultStyleBase" TargetType="xrdiag:VerticalBandBorderAdorner">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="xrdiag:VerticalBandBorderAdorner">
                    <Grid>
                        <Rectangle
                            Width="1"
                            Margin="0,0,-1,-1"
                            HorizontalAlignment="Left"
                            SnapsToDevicePixels="True"
                            Stroke="#BFBFBF"
                            StrokeThickness="1"
                            Visibility="{Binding Path=DiagramItem.IsVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={dx:BooleanToVisibilityConverter}}" />
                        <Rectangle
                            Width="1"
                            Margin="0,0,-1,-1"
                            HorizontalAlignment="Right"
                            SnapsToDevicePixels="True"
                            Stroke="#BFBFBF"
                            StrokeThickness="1"
                            Visibility="{Binding Path=DiagramItem.IsVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={dx:BooleanToVisibilityConverter}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BandResizeAdorner.DefaultStyleBase" TargetType="xrdiag:BandResizeAdorner">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="xrdiag:BandResizeAdorner">
                    <dx:DXBorder BorderBrush="LightPink">
                        <dx:DXBorder.BorderThickness>
                            <MultiBinding Converter="{dxrudi:BandKindResizeModeToAdornerThicknessConverter}">
                                <Binding Path="BandKind" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="ResizeMode" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding>
                        </dx:DXBorder.BorderThickness>
                    </dx:DXBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BandSelectionAdorner.DefaultStyleBase" TargetType="xrdiag:BandSelectionAdorner">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="xrdiag:BandSelectionAdorner">
                    <dx:DXBorder BorderBrush="LightBlue" BorderThickness="3" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="XRContainerSelectionAdorner.DefaultStyleBase" TargetType="xrdiag:XRContainerSelectionAdorner">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="xrdiag:XRContainerSelectionAdorner">
                    <Grid x:Name="TableAdorner" Margin="-10">
                        <Grid.Visibility>
                            <MultiBinding Converter="{dxrudi:MouseOverToVisibilityConverter}">
                                <Binding Path="DiagramItem.IsMouseOver" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="IsMouseOver" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="DiagramItem" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding>
                        </Grid.Visibility>

                        <dx:DXBorder
                            Margin="6"
                            BorderBrush="#5A82B3"
                            BorderThickness="1"
                            SnapsToDevicePixels="True" />

                        <dx:DXImage
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            Source="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/Table/Drag.svg'}"
                            Stretch="None" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="XRInsertTargetAdorner.DefaultStyleBase" TargetType="xrdiag:XRInsertTargetAdorner">
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="Background" Value="#4bb2a3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Background="Transparent">
                        <dx:DXBorder
                            Name="rootBorder"
                            Margin="-4"
                            BorderBrush="White"
                            BorderThickness="2">
                            <dx:DXBorder BorderBrush="{TemplateBinding Background}" BorderThickness="2">
                                <Grid>
                                    <dx:DXBorder Background="{TemplateBinding Background}" Visibility="{Binding IsFilled, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
                                    <dx:DXBorder BorderBrush="White" BorderThickness="2" Visibility="{Binding IsFilled, Converter={dxmvvm:BooleanToVisibilityConverter Inverse=True}, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                        <dx:DXBorder Background="{TemplateBinding Background}" Opacity="0.06" />
                                    </dx:DXBorder>
                                </Grid>
                            </dx:DXBorder>
                        </dx:DXBorder>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="XRDragPreviewAdorner.DefaultStyleBase" TargetType="xrdiag:XRDragPreviewAdorner">
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="BorderBrush" Value="#ff5f5f5f" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <dx:DXBorder BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}" BorderThickness="2" IsHitTestVisible="False" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ReportGalleryDragAdorner.DefaultStyleBase" TargetType="xrdiag:ReportGalleryDragAdorner">
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <ControlTemplate.Resources>
                        <xrdiag:ReportGalleryDragAdornerTemplateSelector x:Key="galleryTemplateSelector">
                            <xrdiag:ReportGalleryDragAdornerTemplateSelector.DataTemplates>
                                <DataTemplate x:Key="{x:Type xrdiag:XRDragPreviewAdorner}">
                                    <xrdiag:XRDragPreviewAdorner BorderBrush="#7d5f5f5f" />
                                </DataTemplate>
                                <DataTemplate x:Key="{x:Type xrdiag:XRInsertTargetAdorner}">
                                    <xrdiag:XRInsertTargetAdorner IsFilled="{Binding IsFilled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type xrdiag:ReportGalleryDragAdorner}}}" />
                                </DataTemplate>
                            </xrdiag:ReportGalleryDragAdornerTemplateSelector.DataTemplates>
                        </xrdiag:ReportGalleryDragAdornerTemplateSelector>
                    </ControlTemplate.Resources>
                    <ContentControl Content="{Binding AdornerKey, RelativeSource={RelativeSource Mode=TemplatedParent}}" ContentTemplateSelector="{StaticResource galleryTemplateSelector}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="XRControlSmartTagAdorner.DefaultStyleBase" TargetType="xrdiag:XRControlSmartTagAdorner">
        <Setter Property="Visibility">
            <Setter.Value>
                <MultiBinding Converter="{dxrudi:SelectedItemToSmartTagVisibilityConverter}">
                    <Binding Path="DiagramItem" RelativeSource="{RelativeSource Self}" />
                    <Binding Path="DiagramItem.IsVisible" RelativeSource="{RelativeSource Self}" />
                    <Binding Converter="{dxrudi:SelectedItemsLockedInEUDToBooleanConverter}" Path="Diagram.SelectionModel" RelativeSource="{RelativeSource Self}" />
                    <Binding Path="DiagramItem.(xrdiag:XRDiagramItemBase.IsMoving)" RelativeSource="{RelativeSource Self}" />
                    <Binding Path="DiagramItem.(xrdiag:XRDiagramItemBase.IsResizing)" RelativeSource="{RelativeSource Self}" />
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="xrdiag:XRControlSmartTagAdorner">
                    <StackPanel
                        x:Name="SmartTagAdorner"
                        Margin="{Binding Path=Diagram.PrimarySelection, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type xrdiag:XRControlSmartTagAdorner}}, Converter={dxrudi:DiagramItemResizeModsToMarginsConverter}}"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        Orientation="Vertical">
                        <ToggleButton
                            x:Name="SmartTagButton"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top"
                            IsChecked="{Binding SmartTagIsOpened, Mode=TwoWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type xrdiag:XRControlSmartTagAdorner}}}"
                            Style="{StaticResource smartTagButtonStyle}"
                            Template="{StaticResource smartTagButtonTemplate}">
                            <dx:DXImage Width="16" Height="16" Source="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/Smarttag.svg', UsePalette=False}" />
                        </ToggleButton>
                        <Button
                            Margin="0,4,0,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top"
                            Background="White"
                            Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.RunExpressionCollectionEditorCommand, RelativeSource={RelativeSource Mode=Self}}"
                            Template="{StaticResource smartTagButtonTemplate}"
                            Visibility="{Binding Path=ReportModel.DataBindingMode, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={dxrudi:DataBindingModeToVisibilityConverter}}">
                            <dx:DXImage Width="16" Height="16" Source="{dx:SvgImageSource Uri={dx:ReportDesignerResource Images/Expressions_gray.svg}, UsePalette=False}" />
                        </Button>
                        <dxe:FlyoutControl
                            Padding="0"
                            VerticalAlignment="Top"
                            AnimationDuration="0"
                            FollowTarget="True"
                            HorizontalOffset="5"
                            IsOpen="{Binding SmartTagIsOpened, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type xrdiag:XRControlSmartTagAdorner}}, Mode=TwoWay}"
                            PlacementTarget="{Binding ElementName=SmartTagButton}"
                            StaysOpen="{Binding Path=IsMouseOver, ElementName=SmartTagButton, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                            <dxe:FlyoutControl.Settings>
                                <dxe:FlyoutSettings IndicatorVerticalAlignment="Center" Placement="Right" ShowIndicator="True" />
                            </dxe:FlyoutControl.Settings>
                            <dxe:FlyoutControl.Content>
                                <xrdiag:SmartTagContentControl DiagramItem="{Binding DiagramItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type xrdiag:XRControlSmartTagAdorner}}}" IsOpened="{Binding SmartTagIsOpened, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type xrdiag:XRControlSmartTagAdorner}}}" />
                            </dxe:FlyoutControl.Content>
                        </dxe:FlyoutControl>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SmartTagContentControl.DefaultStyleBase" TargetType="xrdiag:SmartTagContentControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xrdiag:SmartTagContentControl}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <TextBlock Padding="12,4,12,0" FontWeight="Bold" Text="{Binding Path=Content, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={dxrudi:SmartTagContentToCaptionConverter}}" />
                        <ContentPresenter Grid.Row="1" ContentSource="Content" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="XtraReportSmartTagAdorner.DefaultStyleBase" TargetType="xrdiag:XtraReportSmartTagAdorner">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="xrdiag:XtraReportSmartTagAdorner">
                    <Grid x:Name="SmartTagAdorner">

                        <ToggleButton
                            x:Name="SmartTagButton"
                            Margin="-20"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top">
                            <dxmvvm:Interaction.Behaviors>
                                <dxmvvm:EventToCommand Command="{Binding ToggleSmartTagCommand, RelativeSource={RelativeSource TemplatedParent}}" EventName="PreviewMouseDown" PassEventArgsToCommand="True" />
                            </dxmvvm:Interaction.Behaviors>
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <dx:DXBorder Padding="5">
                                        <dx:DXBorder.Style>
                                            <Style TargetType="Border">
                                                <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="LightGray" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </dx:DXBorder.Style>
                                        <Path
                                            Width="8"
                                            Height="8"
                                            Data="M990,10L402,598L10,990h980V10z"
                                            Fill="Black"
                                            Stretch="Fill"
                                            Stroke="Black" />
                                    </dx:DXBorder>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <StackPanel
                            Margin="{Binding Path=ReportModel.Diagram.PrimarySelection, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type xrdiag:XtraReportSmartTagAdorner}}, Converter={dxrudi:DiagramItemResizeModsToMarginsConverter}}"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top"
                            Orientation="vertical"
                            Visibility="{Binding Path=ReportModel.Diagram.PrimarySelection, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type xrdiag:XtraReportSmartTagAdorner}}, Converter={dxrudi:SelectionToReportSmartTagVisibilityConverter}}">
                            <ToggleButton Name="SmartTagMainButton" IsChecked="{Binding SmartTagIsOpened, Mode=TwoWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type xrdiag:XtraReportSmartTagAdorner}}}" Template="{StaticResource smartTagButtonTemplate}">
                                <ToggleButton.Style>
                                    <Style TargetType="ToggleButton">
                                        <Setter Property="Background" Value="White" />
                                        <Style.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="Background" Value="#dadada" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ToggleButton.Style>
                                <dx:DXImage Width="16" Height="16" Source="{dx:SvgImageSource Uri={dx:ReportDesignerResource Images/SVG/Smarttag.svg}, UsePalette=False}" />
                            </ToggleButton>
                            <Button
                                Margin="0,4,0,0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                Background="White"
                                Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.RunExpressionCollectionEditorCommand, RelativeSource={RelativeSource Mode=Self}}"
                                Template="{StaticResource smartTagButtonTemplate}"
                                Visibility="{Binding Path=ReportModel.DataBindingMode, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={dxrudi:DataBindingModeToVisibilityConverter}}">
                                <dx:DXImage Width="16" Height="16" Source="{dx:SvgImageSource Uri={dx:ReportDesignerResource Images/expressions_gray.svg}, UsePalette=False}" />
                            </Button>
                            <dxe:FlyoutControl
                                Padding="0"
                                VerticalAlignment="Top"
                                AnimationDuration="0"
                                FollowTarget="True"
                                HorizontalOffset="5"
                                IsOpen="{Binding SmartTagIsOpened, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type xrdiag:XtraReportSmartTagAdorner}}, Mode=TwoWay}"
                                PlacementTarget="{Binding ElementName=SmartTagMainButton}"
                                StaysOpen="{Binding Path=IsMouseOver, ElementName=SmartTagMainButton, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                <dxe:FlyoutControl.Settings>
                                    <dxe:FlyoutSettings IndicatorVerticalAlignment="Center" Placement="Right" ShowIndicator="True" />
                                </dxe:FlyoutControl.Settings>
                                <dxe:FlyoutControl.Content>
                                    <xrdiag:SmartTagContentControl DiagramItem="{Binding ReportModel, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type xrdiag:XtraReportSmartTagAdorner}}}" IsOpened="{Binding SmartTagIsOpened, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type xrdiag:XtraReportSmartTagAdorner}}}" />
                                </dxe:FlyoutControl.Content>
                            </dxe:FlyoutControl>
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="XtraReportSelectionAdorner.DefaultStyleBase" TargetType="xrdiag:XtraReportSelectionAdorner">
        <Setter Property="Visibility" Value="{Binding ReportModel.IsSelected, RelativeSource={RelativeSource Self}, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="xrdiag:XtraReportSelectionAdorner">
                    <dx:DXBorder BorderBrush="LightBlue" BorderThickness="3" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="XRSelectionAdorner.DefaultStyleBase" TargetType="{x:Type xrdiag:XRSelectionAdorner}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xrdiag:XRSelectionAdorner}">
                    <Grid Name="root">
                        <Grid Margin="-10">
                            <Rectangle
                                x:Name="rect"
                                Margin="10"
                                IsHitTestVisible="False"
                                Stroke="{DynamicResource {dxdiagt:LWKey Adorners.SelectionAdornerStroke}}" />
                            <dx:DXBorder
                                x:Name="MoveBorder"
                                BorderBrush="{DynamicResource {dxdiagt:LWKey Adorners.SelectionAdornerMoveBorderBrush}}"
                                BorderThickness="{DynamicResource {dxdiagt:LWKey Adorners.SelectionAdornerMoveBorderThickness}}"
                                IsHitTestVisible="False" />
                            <ItemsControl Margin="8" ItemsSource="{TemplateBinding ResizeModes}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Grid />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Rectangle
                                            Margin="-5"
                                            HorizontalAlignment="{Binding HorizontalAlignment}"
                                            VerticalAlignment="{Binding VerticalAlignment}"
                                            dxdiag:DiagramInput.InputElementFactory="{Binding InputElementFactory}"
                                            Style="{StaticResource BoxStyle}" />
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="CanResize" Value="False">
                            <Setter TargetName="rect" Property="StrokeThickness" Value="2" />
                        </Trigger>
                        <Trigger Property="IsMultipleSelection" Value="True">
                            <Setter TargetName="root" Property="Margin">
                                <Setter.Value>
                                    <MultiBinding Converter="{dxrudi:AdornerTypeToMarginConverter}">
                                        <Binding Path="IsCellsAdorner" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="Padding" RelativeSource="{RelativeSource TemplatedParent}" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ChartDesignerSelectionAdorner.DefaultStyleBase" TargetType="{x:Type dxrudcdi:ChartDesignerSelectionAdorner}">
        <Setter Property="Template">
            <Setter.Value>
                <!-- TODO -->
                <ControlTemplate TargetType="{x:Type dxrudcdi:ChartDesignerSelectionAdorner}">
                    <Grid Name="root" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="XRControlDiagramContainerBase.DefaultStyleBase" BasedOn="{StaticResource XRControlDiagramContainerBase}" TargetType="{x:Type xrdiag:XRControlDiagramContainerBase}" />
    <Style x:Key="XRDiagramControl.DefaultStyleBase" BasedOn="{dx:TargetStaticResource DiagramControl.DefaultStyleBase, TargetDictionary={dxi:ThemeResourceDictionary Path='Diagram/Generic.xaml'}}" TargetType="{x:Type xrdiag:XRDiagramControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdiag:DiagramControl}">
                    <Grid ClipToBounds="True">
                        <dxpn:PreviewSurface />
                        <dxrudi:SizeOptimizer x:Name="NativeImageArea" />
                        <dxrudi:XRScrollViewer
                            x:Name="ScrollViewer"
                            dx:ScrollBarExtensions.AllowMouseScrolling="False"
                            dx:ScrollBarExtensions.ScrollBarMode="TouchOverlap"
                            Background="Transparent"
                            CanContentScroll="True"
                            HorizontalScrollBarVisibility="Auto"
                            VerticalScrollBarVisibility="Auto">
                            <xrdiag:XRLayersHost
                                x:Name="LayersHost"
                                Background="Transparent"
                                FlowDirection="LeftToRight"
                                FocusVisualStyle="{x:Null}"
                                Focusable="True" />
                        </dxrudi:XRScrollViewer>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ChartDesignerDiagramControl.DefaultStyleBase" BasedOn="{dx:TargetStaticResource DiagramControl.DefaultStyleBase, TargetDictionary={dxi:ThemeResourceDictionary Path='Diagram/Generic.xaml'}}" TargetType="{x:Type dxrudcd:ChartDesignerDiagramControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxdiag:DiagramControl}">
                    <dx:DXBorder BorderBrush="LightGray" BorderThickness="1">
                        <Grid ClipToBounds="True">
                            <dxrudi:SizeOptimizer x:Name="NativeImageArea" />
                            <dxrudcdi:ChartDesignerLayersHost
                                x:Name="LayersHost"
                                Background="Transparent"
                                FlowDirection="LeftToRight"
                                FocusVisualStyle="{x:Null}"
                                Focusable="True" />
                        </Grid>
                    </dx:DXBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="XRControlDiagramContainer.DefaultStyleBase" BasedOn="{StaticResource XRControlDiagramContainerBase.DefaultStyleBase}" TargetType="xrdiag:XRControlDiagramContainer" />
    <Style x:Key="XRDiagramList.DefaultStyleBase" BasedOn="{StaticResource XRControlDiagramContainerBase.DefaultStyleBase}" TargetType="xrdiag:XRDiagramList" />
    <Style x:Key="BandDiagramItem.DefaultStyleBase" BasedOn="{StaticResource XRControlDiagramContainerBase.DefaultStyleBase}" TargetType="{x:Type xrdiag:BandDiagramItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xrdiag:BandDiagramItem}">
                    <Grid>
                        <dx:DXBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                        <Canvas x:Name="ItemsPanel" Background="{TemplateBinding Background}" Visibility="{Binding IsVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="CanResize" Value="False" />
        <Setter Property="SmartTagTemplate" Value="{DynamicResource {dxrudt:LWKey SmartTag.BandSmartTag}}" />
    </Style>
    <Style x:Key="DetailReportBandDiagramItem.DefaultStyleBase" BasedOn="{StaticResource BandDiagramItem.DefaultStyleBase}" TargetType="{x:Type xrdiag:DetailReportBandDiagramItem}">
        <Setter Property="SmartTagTemplate" Value="{DynamicResource {dxrudt:LWKey SmartTag.DetailReportBandSmartTag}}" />
    </Style>
    <Style x:Key="ReportHeaderBandDiagramItem.DefaultStyleBase" BasedOn="{StaticResource BandDiagramItem.DefaultStyleBase}" TargetType="{x:Type xrdiag:ReportHeaderBandDiagramItem}">
        <Setter Property="SmartTagTemplate" Value="{DynamicResource {dxrudt:LWKey SmartTag.ReportHeaderBandSmartTag}}" />
    </Style>
    <Style x:Key="ReportFooterBandDiagramItem.DefaultStyleBase" BasedOn="{StaticResource BandDiagramItem.DefaultStyleBase}" TargetType="{x:Type xrdiag:ReportFooterBandDiagramItem}">
        <Setter Property="SmartTagTemplate" Value="{DynamicResource {dxrudt:LWKey SmartTag.ReportFooterBandSmartTag}}" />
    </Style>
    <Style x:Key="PageHeaderBandDiagramItem.DefaultStyleBase" BasedOn="{StaticResource BandDiagramItem.DefaultStyleBase}" TargetType="{x:Type xrdiag:PageHeaderBandDiagramItem}">
        <Setter Property="SmartTagTemplate" Value="{DynamicResource {dxrudt:LWKey SmartTag.PageHeaderBandSmartTag}}" />
    </Style>
    <Style x:Key="DetailBandDiagramItem.DefaultStyleBase" BasedOn="{StaticResource BandDiagramItem.DefaultStyleBase}" TargetType="{x:Type xrdiag:DetailBandDiagramItem}">
        <Setter Property="SmartTagTemplate" Value="{DynamicResource {dxrudt:LWKey SmartTag.DetailBandSmartTag}}" />
    </Style>
    <Style x:Key="GroupHeaderBandDiagramItem.DefaultStyleBase" BasedOn="{StaticResource BandDiagramItem.DefaultStyleBase}" TargetType="{x:Type xrdiag:GroupHeaderBandDiagramItem}">
        <Setter Property="SmartTagTemplate" Value="{DynamicResource {dxrudt:LWKey SmartTag.GroupHeaderBandSmartTag}}" />
    </Style>
    <Style x:Key="GroupFooterBandDiagramItem.DefaultStyleBase" BasedOn="{StaticResource BandDiagramItem.DefaultStyleBase}" TargetType="{x:Type xrdiag:GroupFooterBandDiagramItem}">
        <Setter Property="SmartTagTemplate" Value="{DynamicResource {dxrudt:LWKey SmartTag.GroupFooterBandSmartTag}}" />
    </Style>
    <Style x:Key="PageFooterBandDiagramItem.DefaultStyleBase" BasedOn="{StaticResource BandDiagramItem.DefaultStyleBase}" TargetType="{x:Type xrdiag:PageFooterBandDiagramItem}">
        <Setter Property="SmartTagTemplate" Value="{DynamicResource {dxrudt:LWKey SmartTag.PageFooterBandSmartTag}}" />
    </Style>
    <Style x:Key="SubBandDiagramItem.DefaultStyleBase" BasedOn="{StaticResource XRControlDiagramContainerBase.DefaultStyleBase}" TargetType="{x:Type xrdiag:SubBandDiagramItem}">
        <Setter Property="CanResize" Value="True" />
        <Setter Property="SmartTagTemplate" Value="{DynamicResource {dxrudt:LWKey SmartTag.SubBandSmartTag}}" />
    </Style>
    <Style x:Key="VerticalBandDiagramItemBase.DefaultStyleBase" BasedOn="{StaticResource XRControlDiagramContainerBase.DefaultStyleBase}" TargetType="{x:Type xrdiag:VerticalBandDiagramItemBase}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xrdiag:VerticalBandDiagramItemBase}">
                    <Grid>
                        <dx:DXBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                        <Canvas x:Name="ItemsPanel" Background="{TemplateBinding Background}" Visibility="{Binding IsVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SmartTagTemplate" Value="{DynamicResource {dxrudt:LWKey SmartTag.BandSmartTag}}" />
    </Style>
    <Style x:Key="VerticalHeaderBandDiagramItem.DefaultStyleBase" BasedOn="{StaticResource VerticalBandDiagramItemBase.DefaultStyleBase}" TargetType="{x:Type xrdiag:VerticalHeaderBandDiagramItem}">
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="SmartTagTemplate" Value="{DynamicResource {dxrudt:LWKey SmartTag.VerticalHeaderBandSmartTag}}" />
    </Style>
    <Style x:Key="VerticalDetailBandDiagramItem.DefaultStyleBase" BasedOn="{StaticResource VerticalBandDiagramItemBase.DefaultStyleBase}" TargetType="{x:Type xrdiag:VerticalDetailBandDiagramItem}">
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="SmartTagTemplate" Value="{DynamicResource {dxrudt:LWKey SmartTag.VerticalDetailBandSmartTag}}" />
    </Style>
    <Style x:Key="VerticalTotalBandDiagramItem.DefaultStyleBase" BasedOn="{StaticResource VerticalBandDiagramItemBase.DefaultStyleBase}" TargetType="{x:Type xrdiag:VerticalTotalBandDiagramItem}">
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="SmartTagTemplate" Value="{DynamicResource {dxrudt:LWKey SmartTag.VerticalTotalBandSmartTag}}" />
    </Style>
    <Style x:Key="VerticalBandsContainerDiagramItem.DefaultStyleBase" BasedOn="{StaticResource XRControlDiagramContainerBase.DefaultStyleBase}" TargetType="{x:Type xrdiag:VerticalBandsContainerDiagramItem}">
        <Setter Property="AllowDrop" Value="False" />
        <Setter Property="CanSelect" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xrdiag:VerticalBandsContainerDiagramItem}">
                    <Grid>
                        <dx:DXBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                        <xrdiag:VerticalBandsScrollViewer
                            x:Name="PART_ScrollViewer"
                            Margin="{Binding ActualPadding.Top, RelativeSource={RelativeSource TemplatedParent}, Converter={dxrudi:ActualPaddingToRulerScaleMarginConverter}}"
                            dx:ScrollBarExtensions.AllowMouseScrolling="False"
                            Background="Transparent"
                            CanContentScroll="True"
                            Focusable="False"
                            HorizontalScrollBarVisibility="Auto"
                            VerticalScrollBarVisibility="Disabled">
                            <Canvas
                                x:Name="ItemsPanel"
                                Width="{Binding Path=(xrdiag:VerticalBandsContainerDiagramItem.VerticalBandsWidth), RelativeSource={RelativeSource Self}}"
                                HorizontalAlignment="Left"
                                Background="{TemplateBinding Background}"
                                Visibility="{Binding IsVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
                        </xrdiag:VerticalBandsScrollViewer>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="CanResize" Value="True" />
        <!--<Setter Property="SmartTagTemplate"
                Value="{DynamicResource {dxrudt:LWKey SmartTag.BandSmartTag}}"
                />-->
    </Style>
    <Style x:Key="XRDiagramRootMarginsAdorner.DefaultStyleBase" TargetType="xrdiag:XRDiagramRootMarginsAdorner">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="xrdiag:XRDiagramRootMarginsAdorner">
                    <Grid>
                        <dx:DXBorder BorderBrush="#BFBFBF" BorderThickness="0,0,1,1" />
                        <xrdiag:XRDiagramMarginsPanel AdornerLeftMargin="{Binding AdornerLeftMargin, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" AdornerRightMargin="{Binding AdornerRightMargin, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding DiagramControl.RootMarginsVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                            <Line Stroke="#BFBFBF" StrokeDashArray="4 4" StrokeThickness="1" />
                            <Line Stroke="#BFBFBF" StrokeDashArray="4 4" StrokeThickness="1" />
                        </xrdiag:XRDiagramMarginsPanel>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="XRDiagramItem.DefaultStyleBase" TargetType="{x:Type xrdiag:XRDiagramItem}">
        <Setter Property="xrdiag:XRDiagramItemBase.ContextMenuTemplate" Value="{Binding RelativeSource={RelativeSource Self}, Converter={dxrudi:ComponentToContextMenuTemplateConverter}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xrdiag:XRDiagramItem}">
                    <dx:DXBorder Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="XRControlDiagramItem.DefaultStyleBase" BasedOn="{StaticResource XRDiagramItem.DefaultStyleBase}" TargetType="{x:Type xrdiag:XRControlDiagramItem}">
        <Setter Property="SmartTagTemplate" Value="{x:Null}" />
    </Style>
    <Style x:Key="XRBarCodeDiagramItem.DefaultStyleBase" BasedOn="{StaticResource XRControlDiagramItem.DefaultStyleBase}" TargetType="{x:Type xrdiag:XRBarCodeDiagramItem}">
        <Setter Property="SmartTagTemplate" Value="{DynamicResource {dxrudt:LWKey SmartTag.XRBarCodeSmartTag}}" />
    </Style>
    <Style x:Key="XRChartDiagramItem.DefaultStyleBase" BasedOn="{StaticResource XRControlDiagramItem.DefaultStyleBase}" TargetType="{x:Type xrdiag:XRChartDiagramItem}">
        <Setter Property="SmartTagTemplate" Value="{DynamicResource {dxrudt:LWKey SmartTag.XRChartSmartTag}}" />

        <Setter Property="ChartDesignerDialogServiceTemplate" Value="{DynamicResource {dxrudt:LWKey ReportDesignerDialog.ChartDesignerDialogServiceTemplate}}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xrdiag:XRChartDiagramItem}">
                    <Grid>
                        <dx:DXBorder Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <dx:DXBorder.Resources>
                                <Style x:Key="ChartSuperTipItemStyle" TargetType="{x:Type dx:Items2Panel}">
                                    <Setter Property="Margin" Value="0,0,0,8" />
                                </Style>
                            </dx:DXBorder.Resources>
                            <dx:DXBorder.ToolTip>
                                <MultiBinding>
                                    <MultiBinding.Converter>
                                        <dxrudi:SeriesToToolTipVisibilityConverter>
                                            <dxrudi:SeriesToToolTipVisibilityConverter.Diagram3DToolTip>
                                                <dx:SuperTipControl Margin="7,6,35,0">
                                                    <dx:SuperTip>
                                                        <dx:SuperTipHeaderItem Content="{dxrudl:ReportDesignerStringId StringId=ChartDesigner_Msg3DRotationActionName}" />
                                                        <dx:SuperTipItem Content="{dxrudl:ReportDesignerStringId StringId=ChartDesigner_Msg3DRotationToolTip}" LayoutStyle="{StaticResource ChartSuperTipItemStyle}" />

                                                        <dx:SuperTipHeaderItem Content="{dxrudl:ReportDesignerStringId StringId=ChartDesigner_Msg3DScrollingActionName}" />
                                                        <dx:SuperTipItem Content="{dxrudl:ReportDesignerStringId StringId=ChartDesigner_Msg3DScrollingToolTip}" LayoutStyle="{StaticResource ChartSuperTipItemStyle}" />

                                                        <dx:SuperTipHeaderItem Content="{dxrudl:ReportDesignerStringId StringId=ChartDesigner_Msg3DZoomInActionName}" />
                                                        <dx:SuperTipItem Content="{dxrudl:ReportDesignerStringId StringId=ChartDesigner_Msg3DZoomInToolTip}" LayoutStyle="{StaticResource ChartSuperTipItemStyle}" />

                                                        <dx:SuperTipHeaderItem Content="{dxrudl:ReportDesignerStringId StringId=ChartDesigner_Msg3DZoomOutActionName}" />
                                                        <dx:SuperTipItem Content="{dxrudl:ReportDesignerStringId StringId=ChartDesigner_Msg3DZoomOutToolTip}" LayoutStyle="{StaticResource ChartSuperTipItemStyle}" />
                                                    </dx:SuperTip>
                                                </dx:SuperTipControl>
                                            </dxrudi:SeriesToToolTipVisibilityConverter.Diagram3DToolTip>
                                        </dxrudi:SeriesToToolTipVisibilityConverter>
                                    </MultiBinding.Converter>

                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(dxrudi:ChartToolTipPropertiesExtensions.ShowToolTips)" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </dx:DXBorder.ToolTip>
                        </dx:DXBorder>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="XRCheckBoxDiagramItem.DefaultStyleBase" BasedOn="{StaticResource XRControlDiagramItem.DefaultStyleBase}" TargetType="{x:Type xrdiag:XRCheckBoxDiagramItem}">
        <Setter Property="SmartTagTemplate" Value="{DynamicResource {dxrudt:LWKey SmartTag.XRCheckBoxSmartTag}}" />
    </Style>
    <Style x:Key="XRCrossBandBoxDiagramItem.DefaultStyleBase" BasedOn="{StaticResource XRControlDiagramItem.DefaultStyleBase}" TargetType="{x:Type xrdiag:XRCrossBandBoxDiagramItem}">
        <Setter Property="SmartTagTemplate" Value="{DynamicResource {dxrudt:LWKey SmartTag.XRCrossBandBoxSmartTag}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xrdiag:XRCrossBandBoxDiagramItem}">
                    <dx:DXBorder Background="{x:Null}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="XRCrossBandLineDiagramItem.DefaultStyleBase" BasedOn="{StaticResource XRControlDiagramItem.DefaultStyleBase}" TargetType="{x:Type xrdiag:XRCrossBandLineDiagramItem}">
        <Setter Property="MinWidth" Value="1"/>
        <Setter Property="MinHeight" Value="1"/>
        <Setter Property="SmartTagTemplate" Value="{DynamicResource {dxrudt:LWKey SmartTag.XRCrossBandLineSmartTag}}" />
    </Style>
    <Style x:Key="XRGaugeDiagramItem.DefaultStyleBase" BasedOn="{StaticResource XRControlDiagramItem.DefaultStyleBase}" TargetType="{x:Type xrdiag:XRGaugeDiagramItem}">
        <Setter Property="SmartTagTemplate" Value="{DynamicResource {dxrudt:LWKey SmartTag.XRGaugeSmartTag}}" />
    </Style>
    <Style x:Key="XRLineDiagramItem.DefaultStyleBase" BasedOn="{StaticResource XRControlDiagramItem.DefaultStyleBase}" TargetType="{x:Type xrdiag:XRLineDiagramItem}">
        <Setter Property="SmartTagTemplate" Value="{DynamicResource {dxrudt:LWKey SmartTag.XRLineSmartTag}}" />
    </Style>
    <Style x:Key="XRLabelDiagramItem.DefaultStyleBase" BasedOn="{StaticResource XRControlDiagramItem.DefaultStyleBase}" TargetType="{x:Type xrdiag:XRLabelDiagramItem}">
        <Setter Property="SmartTagTemplate" Value="{DynamicResource {dxrudt:LWKey SmartTag.XRLabelSmartTag}}" />
    </Style>
    <Style x:Key="XRCharacterCombDiagramItem.DefaultStyleBase" BasedOn="{StaticResource XRControlDiagramItem.DefaultStyleBase}" TargetType="{x:Type xrdiag:XRCharacterCombDiagramItem}">
        <Setter Property="SmartTagTemplate" Value="{DynamicResource {dxrudt:LWKey SmartTag.XRCharacterCombSmartTag}}" />
    </Style>
    <Style x:Key="XRPageBreakDiagramItem.DefaultStyleBase" BasedOn="{StaticResource XRControlDiagramItem.DefaultStyleBase}" TargetType="{x:Type xrdiag:XRPageBreakDiagramItem}" />
    <Style x:Key="XRPageInfoDiagramItem.DefaultStyleBase" BasedOn="{StaticResource XRControlDiagramItem.DefaultStyleBase}" TargetType="{x:Type xrdiag:XRPageInfoDiagramItem}">
        <Setter Property="SmartTagTemplate" Value="{DynamicResource {dxrudt:LWKey SmartTag.XRPageInfoSmartTag}}" />
    </Style>
    <Style x:Key="XRPictureBoxDiagramItem.DefaultStyleBase" BasedOn="{StaticResource XRControlDiagramItem.DefaultStyleBase}" TargetType="{x:Type xrdiag:XRPictureBoxDiagramItem}">
        <Setter Property="SmartTagTemplate" Value="{DynamicResource {dxrudt:LWKey SmartTag.XRPictureBoxSmartTag}}" />
    </Style>
    <Style x:Key="XRPdfContentDiagramItem.DefaultStyleBase" BasedOn="{StaticResource XRControlDiagramItem.DefaultStyleBase}" TargetType="{x:Type xrdiag:XRPdfContentDiagramItem}">
        <Setter Property="SmartTagTemplate" Value="{DynamicResource {dxrudt:LWKey SmartTag.XRPdfContentSmartTag}}" />
    </Style>
    <Style x:Key="XRPdfSignatureDiagramItem.DefaultStyleBase" BasedOn="{StaticResource XRControlDiagramItem.DefaultStyleBase}" TargetType="{x:Type xrdiag:XRPdfSignatureDiagramItem}">
        <Setter Property="SmartTagTemplate" Value="{DynamicResource {dxrudt:LWKey SmartTag.XRPdfSignatureSmartTag}}" />
    </Style>
    <Style x:Key="XRPivotGridDiagramItem.DefaultStyleBase" BasedOn="{StaticResource XRControlDiagramItem.DefaultStyleBase}" TargetType="{x:Type xrdiag:XRPivotGridDiagramItem}">
        <Setter Property="SmartTagTemplate" Value="{DynamicResource {dxrudt:LWKey SmartTag.XRPivotGridSmartTag}}" />
    </Style>
    <Style x:Key="XRRichTextDiagramItem.DefaultStyleBase" BasedOn="{StaticResource XRControlDiagramItem.DefaultStyleBase}" TargetType="{x:Type xrdiag:XRRichTextDiagramItem}">
        <Setter Property="SmartTagTemplate" Value="{DynamicResource {dxrudt:LWKey SmartTag.XRRichTextSmartTag}}" />
    </Style>
    <Style x:Key="XRShapeDiagramItem.DefaultStyleBase" BasedOn="{StaticResource XRControlDiagramItem.DefaultStyleBase}" TargetType="{x:Type xrdiag:XRShapeDiagramItem}">
        <Setter Property="SmartTagTemplate" Value="{DynamicResource {dxrudt:LWKey SmartTag.XRShapeSmartTag}}" />
    </Style>
    <Style x:Key="XRSparklineDiagramItem.DefaultStyleBase" BasedOn="{StaticResource XRControlDiagramItem.DefaultStyleBase}" TargetType="{x:Type xrdiag:XRSparklineDiagramItem}">
        <Setter Property="SmartTagTemplate" Value="{DynamicResource {dxrudt:LWKey SmartTag.XRSparklineSmartTag}}" />
    </Style>
    <Style x:Key="XRSubreportDiagramItem.DefaultStyleBase" BasedOn="{StaticResource XRControlDiagramItem.DefaultStyleBase}" TargetType="{x:Type xrdiag:XRSubreportDiagramItem}">
        <Setter Property="SmartTagTemplate" Value="{DynamicResource {dxrudt:LWKey SmartTag.XRSubreportSmartTag}}" />
    </Style>
    <Style x:Key="XRTableOfContentsDiagramItem.DefaultStyleBase" BasedOn="{StaticResource XRControlDiagramItem.DefaultStyleBase}" TargetType="{x:Type xrdiag:XRTableOfContentsDiagramItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="SmartTagTemplate" Value="{DynamicResource {dxrudt:LWKey SmartTag.XRTableOfContentsSmartTag}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xrdiag:XRTableOfContentsDiagramItem}">
                    <Grid>
                        <dx:DXBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                        <Canvas x:Name="ItemsPanel" Background="{TemplateBinding Background}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--<Style x:Key="XRTableOfContentsLevelDiagramItemBase.DefaultStyleBase" TargetType="{x:Type xrdiag:XRTableOfContentsLevelDiagramItemBase}" BasedOn="{StaticResource XRControlDiagramItem.DefaultStyleBase}"/>-->
    <Style x:Key="XRTableOfContentsLevelDiagramItemBase.DefaultStyleBase" BasedOn="{StaticResource XRDiagramItem.DefaultStyleBase}" TargetType="{x:Type xrdiag:XRTableOfContentsLevelDiagramItemBase}"/>
    <Style x:Key="XRZipCodeDiagramItem.DefaultStyleBase" BasedOn="{StaticResource XRControlDiagramItem.DefaultStyleBase}" TargetType="{x:Type xrdiag:XRZipCodeDiagramItem}" />
    <Style x:Key="XRTableDiagramItem.DefaultStyleBase" BasedOn="{StaticResource XRDiagramList.DefaultStyleBase}" TargetType="{x:Type xrdiag:XRTableDiagramItem}" />
    <Style x:Key="XRTableRowDiagramItem.DefaultStyleBase" BasedOn="{StaticResource XRDiagramList.DefaultStyleBase}" TargetType="{x:Type xrdiag:XRTableRowDiagramItem}" />
    <Style x:Key="XRTableCellDiagramItem.DefaultStyleBase" BasedOn="{StaticResource XRControlDiagramContainer.DefaultStyleBase}" TargetType="{x:Type xrdiag:XRTableCellDiagramItem}">
        <Setter Property="SmartTagTemplate" Value="{DynamicResource {dxrudt:LWKey SmartTag.XRTableCellSmartTag}}" />
    </Style>
    <Style x:Key="XRDiagramRoot.DefaultStyleBase" TargetType="{x:Type xrdiag:XRDiagramRoot}">
        <Setter Property="xrdiag:XRDiagramItemBase.ContextMenuTemplate" Value="{Binding RelativeSource={RelativeSource Self}, Converter={dxrudi:ComponentToContextMenuTemplateConverter}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="SmartTagTemplate" Value="{DynamicResource {dxrudt:LWKey SmartTag.XtraReportSmartTag}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xrdiag:XRDiagramRoot}">
                    <Grid>
                        <dx:DXBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                        <Canvas x:Name="ItemsPanel" Background="{TemplateBinding Background}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="XRPivotGridFieldDiagramItem.DefaultStyleBase" BasedOn="{StaticResource XRDiagramItem.DefaultStyleBase}" TargetType="{x:Type xrdiag:XRPivotGridFieldDiagramItem}" />
    <Style x:Key="XRCrossTabDiagramItem.DefaultStyleBase" BasedOn="{StaticResource XRControlDiagramContainerBase.DefaultStyleBase}" TargetType="{x:Type xrdiag:XRCrossTabDiagramItem}">
        <Setter Property="SmartTagTemplate" Value="{DynamicResource {dxrudt:LWKey SmartTag.XRCrossTabSmartTag}}" />
    </Style>
    <Style x:Key="XRCrossTabCellDiagramItem.DefaultStyleBase" BasedOn="{StaticResource XRControlDiagramItem.DefaultStyleBase}" TargetType="{x:Type xrdiag:XRCrossTabCellDiagramItem}">
        <Setter Property="SmartTagTemplate" Value="{DynamicResource {dxrudt:LWKey SmartTag.XRCrossTabCellSmartTag}}" />
    </Style>
    <Style x:Key="XRPanelDiagramItem.DefaultStyleBase" BasedOn="{StaticResource XRControlDiagramContainer.DefaultStyleBase}" TargetType="{x:Type xrdiag:XRPanelDiagramItem}" />
    <Style x:Key="XRHorizontalRulerScale.DefaultStyleBase" TargetType="{x:Type xrdiag:XRHorizontalRulerScale}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xrdiag:XRHorizontalRulerScale}">
                    <dxdiag:RulerScalePresenter
                        Margin="0,3,0,0"
                        AlwaysPositiveValues="True"
                        LabelOffset="3,-3"
                        MeasureUnit="{TemplateBinding MeasureUnit}"
                        Orientation="Horizontal"
                        Style="{StaticResource XRRulerScalePresenter}"
                        Zoom="{TemplateBinding Zoom}"
                        Offset="{Binding Padding.Left, RelativeSource={RelativeSource TemplatedParent}, Converter={dx:NegativeConverter}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="XRVerticalRulerScale.DefaultStyleBase" TargetType="{x:Type xrdiag:XRVerticalRulerScale}">
        <Setter Property="Visibility" Value="{Binding DiagramItem.IsVisible, Converter={dx:BooleanToVisibilityConverter}, RelativeSource={RelativeSource Self}}" />
    </Style>
    <Style x:Key="XRVerticalRulerScaleBackground.DefaultStyleBase" TargetType="{x:Type xrdiag:XRVerticalRulerScaleBackground}">
        <Setter Property="Background" Value="#FFFEE7AB" />
        <Setter Property="BorderThickness" Value="0,0,1,0" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="Visibility" Value="{Binding DiagramItem.IsVisible, Converter={dx:BooleanToVisibilityConverter}, RelativeSource={RelativeSource Self}}" />
    </Style>
    <Style x:Key="XRHorizontalRulerScaleBackground.DefaultStyleBase" TargetType="{x:Type xrdiag:XRHorizontalRulerScaleBackground}">
        <Setter Property="Background" Value="#FFFEE7AB" />
        <Setter Property="BorderThickness" Value="0,1,1,1" />
        <Setter Property="BorderBrush" Value="Black" />
    </Style>
    <Style x:Key="XRLayersHost.DefaultStyleBase" TargetType="{x:Type xrdiag:XRLayersHost}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xrdiag:XRLayersHost}">
                    <Grid>
                        <Decorator x:Name="ViewportArea" />
                        <Canvas x:Name="DiagramArea" Background="Transparent" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ReportDesignerToolboxControl.DefaultStyleBase" TargetType="udtb:ReportDesignerToolboxControl">
        <Setter Property="Tools" Value="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel.ToolboxTools, RelativeSource={RelativeSource Self}}" />
        <Setter Property="SelectedTool" Value="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel.SelectedToolboxTool, RelativeSource={RelativeSource Self}}" />
        <Setter Property="IsEnabled" Value="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel.XRLanguage, Converter={dxrudi:ReportLanguageToBooleanConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=Self}}" />
        <Setter Property="Visibility" Value="{Binding Path=(dxrud:ReportDesigner.Document), Converter={dxrudi:DocumentToVisibilityConverter ConvertNullValue=True}, RelativeSource={RelativeSource Mode=Self}}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="udtb:ReportDesignerToolboxControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <dxrudi:FlatToggleButton Margin="6,6,6,4" IsChecked="{Binding Path=(dxrud:ReportDesigner.Designer).ToolBoxOptions.ToolBoxState, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}, Converter={udtbi:ToolBoxStateToBooleanConverter}}">
                            <dxrudi:FlatToggleButton.ContentTemplate>
                                <DataTemplate>
                                    <dx:DXImage
                                        Width="16"
                                        Height="16"
                                        Source="{Binding Path=(dxrud:ReportDesigner.Designer).ToolBoxOptions.ToolBoxState, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}, Converter={udtbi:ToolBoxButtonStateToImageConverter}}"
                                        Stretch="None" />
                                </DataTemplate>
                            </dxrudi:FlatToggleButton.ContentTemplate>
                        </dxrudi:FlatToggleButton>
                        <ScrollViewer
                            Grid.Row="1"
                            dx:ScrollBarExtensions.ScrollBarMode="TouchOverlap"
                            HorizontalScrollBarVisibility="Disabled"
                            VerticalScrollBarVisibility="Auto">
                            <ItemsControl ItemsSource="{Binding Groups, RelativeSource={RelativeSource TemplatedParent}}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Vertical">
                                            <dxlc:GroupSeparator Margin="0,-2,0,-2" />
                                            <dxe:ListBoxEdit
                                                AllowItemHighlighting="True"
                                                EditValue="{Binding SelectedTool, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type udtb:ReportDesignerToolboxControl}}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                ItemsSource="{Binding}"
                                                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                                ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                                ShowBorder="False"
                                                StyleSettings="{dxe:ListBoxEditStyleSettings SelectionEventMode=MouseUp}">
                                                <dxe:ListBoxEdit.ItemTemplate>
                                                    <DataTemplate>
                                                        <dx:DXBorder Padding="1,2,1,2">
                                                            <dx:DXImage
                                                                Width="32"
                                                                Height="32"
                                                                Source="{Binding Icon}"
                                                                Stretch="None" />
                                                        </dx:DXBorder>
                                                    </DataTemplate>
                                                </dxe:ListBoxEdit.ItemTemplate>

                                                <dxe:ListBoxEdit.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <UniformGrid Margin="3,2,3,2" Columns="{Binding Path=(dxrud:ReportDesigner.Designer).ToolBoxOptions.ToolBoxState, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}, Converter={udtbi:ToolBoxStateToColumnsCountConverter}}" />
                                                    </ItemsPanelTemplate>
                                                </dxe:ListBoxEdit.ItemsPanel>
                                                <dxe:ListBoxEdit.ItemContainerStyle>
                                                    <Style TargetType="dxe:ListBoxEditItem">
                                                        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
                                                            <Setter.Value>
                                                                <DataTemplate>
                                                                    <ItemsControl>
                                                                        <dxdiag:DiagramToolBehavior Diagram="{Binding Diagram}" DiagramTool="{Binding Tool}" />
                                                                    </ItemsControl>
                                                                </DataTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Margin" Value="3" />
                                                        <Setter Property="ToolTip" Value="{Binding Tool.ToolName}" />
                                                    </Style>
                                                </dxe:ListBoxEdit.ItemContainerStyle>
                                            </dxe:ListBoxEdit>
                                        </StackPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </ScrollViewer>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ReportExplorerControl.DefaultStyleBase" TargetType="reportexplorer:ReportExplorerControl">
        <Setter Property="Items" Value="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel.ReportExplorerItems, RelativeSource={RelativeSource Self}}" />
        <Setter Property="SelectedItem" Value="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel.SelectedModel, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Diagram" Value="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel.Diagram, RelativeSource={RelativeSource Self}}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="reportexplorer:ReportExplorerControl">
                    <dxg:TreeListControl
                        dx:DXSerializer.SerializationID="ReportExplorer"
                        CurrentItem="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                        ItemsSource="{TemplateBinding Items}"
                        SelectionMode="None"
                        ShowBorder="False"
                        Style="{DynamicResource {dxrudt:LWKey ReportDesigner.FieldListStyle}}">
                        <dxg:TreeListControl.View>
                            <dxg:TreeListView
                                Name="PART_TreeListView"
                                AllowDragDrop="True"
                                AllowEditing="False"
                                AutoWidth="True"
                                ChildNodesPath="ChildItems"
                                EnableDynamicLoading="False"
                                ExpandCollapseNodesOnNavigation="True"
                                IncrementalSearchMode="Enabled"
                                NavigationStyle="Row"
                                SearchPanelAllowFilter="False"
                                ShowColumnHeaders="False"
                                ShowDragDropHint="True"
                                ShowHorizontalLines="False"
                                ShowIndicator="False"
                                ShowSearchPanelNavigationButtons="True"
                                ShowVerticalLines="False"
                                TreeDerivationMode="ChildNodesSelector"
                                VerticalScrollbarVisibility="Auto">
                                <dxg:TreeListView.DragDropHintTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <dxe:ListBoxEdit ShowBorder="True" />
                                            <StackPanel Orientation="Horizontal">
                                                <dx:DXImage
                                                    Width="{dxrudi:ThemeImageSize Size=16, TouchThemeSize=32}"
                                                    Height="{dxrudi:ThemeImageSize Size=16, TouchThemeSize=32}"
                                                    Margin="0,0,5,0"
                                                    VerticalAlignment="Center"
                                                    Source="{Binding Records, Converter={dxrudi:DraggedItemToIconConverter}}"
                                                    Stretch="Fill" />
                                                <Label
                                                    HorizontalContentAlignment="Center"
                                                    VerticalContentAlignment="Center"
                                                    BorderThickness="1"
                                                    Content="{Binding Records, Converter={dxrudi:DraggedItemToComponentNameConverter}}" />
                                            </StackPanel>
                                        </Grid>
                                    </DataTemplate>
                                </dxg:TreeListView.DragDropHintTemplate>
                                <dxg:TreeListView.RowStyle>
                                    <Style TargetType="{x:Type dxg:RowControl}">
                                        <Setter Property="reportexplorernative:ReportExplorerHelper.ContextMenuTemplate" Value="{Binding Row, Converter={dxrudi:ComponentToContextMenuTemplateConverter}}" />
                                        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <ItemsControl>
                                                        <dxrudi:ContextMenuBehavior>
                                                            <dxrudi:ContextMenuBehavior.DataContext>
                                                                <MultiBinding Converter="{dxrudi:ReportExplorerContextMenuDataContextConverter}">
                                                                    <Binding Path="View.(dxrud:ReportDesigner.Document).ReportModel.Diagram" />
                                                                    <Binding Path="Row" />
                                                                </MultiBinding>
                                                            </dxrudi:ContextMenuBehavior.DataContext>
                                                        </dxrudi:ContextMenuBehavior>
                                                    </ItemsControl>
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </dxg:TreeListView.RowStyle>
                                <dxmvvm:Interaction.Behaviors>
                                    <dxdai:ExpandTreeListNodeBehavior />
                                    <reportexplorernative:ReportExplorerDragDropBehavior Diagram="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Document).ReportModel.Diagram, RelativeSource={RelativeSource Self}}" />
                                </dxmvvm:Interaction.Behaviors>
                            </dxg:TreeListView>
                        </dxg:TreeListControl.View>
                        <dxg:TreeListControl.Columns>
                            <dxg:TreeListColumn FieldName="ControlName" ReadOnly="True">
                                <dxg:TreeListColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <Grid VerticalAlignment="Center">
                                                <dx:DXImage
                                                    Width="{dxrudi:ThemeImageSize Size=16, TouchThemeSize=32}"
                                                    Height="{dxrudi:ThemeImageSize Size=16, TouchThemeSize=32}"
                                                    Source="{Binding RowData.Row.Icon}"
                                                    Stretch="Fill" />
                                                <dx:DXImage
                                                    Width="{dxrudi:ThemeImageSize Size=8, TouchThemeSize=16}"
                                                    Height="{dxrudi:ThemeImageSize Size=10, TouchThemeSize=20}"
                                                    HorizontalAlignment="Right"
                                                    VerticalAlignment="Bottom"
                                                    Source="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/Misc/Bound.svg'}"
                                                    Stretch="Fill"
                                                    Visibility="{Binding Data.HasDataBindings, Converter={dxmvvm:BooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}" />
                                            </Grid>
                                            <dxe:TextEdit
                                                x:Name="PART_Editor"
                                                VerticalAlignment="Center"
                                                IsHitTestVisible="False"
                                                IsReadOnly="True" />
                                        </StackPanel>
                                    </DataTemplate>
                                </dxg:TreeListColumn.CellTemplate>
                            </dxg:TreeListColumn>
                        </dxg:TreeListControl.Columns>
                    </dxg:TreeListControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ReportGalleryControl.DefaultStyleBase" TargetType="dxrg:ReportGalleryControl">
        <Setter Property="ReportGalleryOptions" Value="{Binding Path=(dxrud:ReportDesigner.Designer).ReportGalleryOptions, RelativeSource={RelativeSource Self}}" />
        <Setter Property="DesignerUI" Value="{Binding Path=(dxrud:ReportDesigner.Designer), RelativeSource={RelativeSource Self}}" />
        <Setter Property="Storage" Value="{Binding Path=(dxrud:ReportDesigner.Designer).ReportGalleryOptions.Storage, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Items" Value="{Binding Path=(dxrud:ReportDesigner.Designer).ReportGalleryOptions.ReportGalleryItems, RelativeSource={RelativeSource Self}}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxrg:ReportGalleryControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <dxb:ToolBarControl
                            Margin="0,0,0,3"
                            AllowCustomizationMenu="False"
                            AllowQuickCustomization="False"
                            GlyphSize="Custom">
                            <dxb:BarButtonItem
                                Command="{Binding LoadReportGalleryCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                CustomGlyphSize="20,20"
                                Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/ReportGallery/ImportGallery.svg'}"
                                Hint="{dxrudl:ReportStringId StringId=Cmd_ImportGallery}" />
                            <dxb:BarButtonItem
                                Command="{Binding SaveReportGalleryCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                CustomGlyphSize="20,20"
                                Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/ReportGallery/ExportGallery.svg'}"
                                Hint="{dxrudl:ReportStringId StringId=Cmd_ExportGallery}" />
                            <dxb:BarButtonItem
                                Command="{Binding RefreshReportGalleryCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                CustomGlyphSize="20,20"
                                Glyph="{dx:SvgImageSource Uri='/DevExpress.Xpf.ReportDesigner.v24.1;component/Images/SVG/ReportGallery/RefreshGallery.svg'}"
                                Hint="{dxrudl:ReportStringId StringId=Cmd_RefreshGallery}"
                                IsVisible="{Binding Path=(dxrud:ReportDesigner.Designer).ReportGalleryOptions.Storage.EnableSynchronization, RelativeSource={RelativeSource Self}}" />
                        </dxb:ToolBarControl>
                        <dxg:GridControl
                            Grid.Row="1"
                            dx:DXSerializer.SerializationID="ReportGalleryGridControl"
                            CurrentItem="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                            ItemsSource="{TemplateBinding Items}"
                            ShowBorder="False">
                            <dxg:GridControl.Columns>
                                <dxg:GridColumn
                                    Binding="{Binding ID, Converter={dxrudi:StringToIntegerConverter}}"
                                    SortIndex="0"
                                    SortMode="Value"
                                    SortOrder="Ascending"
                                    Visible="False" />
                                <dxg:GridColumn FieldName="DisplayName">
                                    <dxg:GridColumn.CellTemplate>
                                        <DataTemplate>
                                            <dxe:TextEdit x:Name="PART_Editor" VerticalAlignment="Center" IsHitTestVisible="False" />
                                        </DataTemplate>
                                    </dxg:GridColumn.CellTemplate>
                                    <dxmvvm:Interaction.BehaviorsTemplate>
                                        <DataTemplate>
                                            <ItemsControl>
                                                <dxrgi:ReportGalleryValidateColumnBehavior />
                                            </ItemsControl>
                                        </DataTemplate>
                                    </dxmvvm:Interaction.BehaviorsTemplate>
                                </dxg:GridColumn>
                            </dxg:GridControl.Columns>
                            <dxg:GridControl.View>
                                <dxg:TreeListView
                                    Name="PART_TreeListView"
                                    AllowDragDrop="True"
                                    AllowEditing="True"
                                    AllowSortedDataDragDrop="True"
                                    AutoWidth="True"
                                    ErrorsWatchMode="Rows"
                                    ExpandCollapseNodesOnNavigation="True"
                                    ExpandStateFieldName="IsExpanded"
                                    IncrementalSearchMode="Enabled"
                                    KeyFieldName="ID"
                                    NavigationStyle="Row"
                                    NodeImageSelector="{dxrgi:GalleryItemImageSelector}"
                                    ParentFieldName="ParentId"
                                    ShowColumnHeaders="False"
                                    ShowDragDropHint="True"
                                    ShowEditFormOnDoubleClick="False"
                                    ShowHorizontalLines="False"
                                    ShowIndicator="False"
                                    ShowNodeImages="True"
                                    ShowTargetInfoInDragDropHint="True"
                                    ShowVerticalLines="False"
                                    VerticalScrollbarVisibility="Auto">
                                    <dxmvvm:Interaction.BehaviorsTemplate>
                                        <DataTemplate>
                                            <ItemsControl>
                                                <dxrgi:ReportGalleryTreeListViewBehavior />
                                                <dxrgi:ReportGalleryDragItemDropBehavior Diagram="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Designer).ActiveDocument.Diagram, RelativeSource={RelativeSource Self}}" ReportGalleryControl="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxrg:ReportGalleryControl}}}" />
                                            </ItemsControl>
                                        </DataTemplate>
                                    </dxmvvm:Interaction.BehaviorsTemplate>
                                    <dxb:BarManager.DXContextMenu>
                                        <dxb:PopupMenu>
                                            <dxb:PopupMenu.Items>
                                                <dxb:BarButtonItem
                                                    Command="{Binding NewFolderCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                                    Content="{dxrudl:ReportStringId StringId=Cmd_AddGalleryFolder}"
                                                    Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/ReportGallery/AddGalleryFolder.svg'}"
                                                    Style="{StaticResource InteractiveBarItem}" />
                                                <dxb:BarItemLinkSeparator />
                                                <dxb:BarButtonItem
                                                    Command="{Binding CutCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                                    Content="{dxrudl:ReportDesignerStringId StringId=Cut}"
                                                    Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/EditGroup/Cut.svg'}"
                                                    KeyGesture="CTRL+X"
                                                    Style="{StaticResource InteractiveBarItem}" />
                                                <dxb:BarButtonItem
                                                    Command="{Binding CopyCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                                    Content="{dxrudl:ReportDesignerStringId StringId=Copy}"
                                                    Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/EditGroup/Copy.svg'}"
                                                    KeyGesture="CTRL+C"
                                                    Style="{StaticResource InteractiveBarItem}" />
                                                <dxb:BarButtonItem
                                                    Command="{Binding PasteCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                                    Content="{dxrudl:ReportDesignerStringId StringId=Paste}"
                                                    Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/EditGroup/Paste.svg'}"
                                                    KeyGesture="CTRL+V"
                                                    Style="{StaticResource InteractiveBarItem}" />
                                                <dxb:BarButtonItem
                                                    Command="{Binding DeleteCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                                    Content="{dxrudl:ReportDesignerStringId StringId=Delete}"
                                                    Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/EditGroup/Delete.svg'}"
                                                    KeyGesture="Delete"
                                                    Style="{StaticResource InteractiveBarItem}" />
                                                <dxb:BarButtonItem
                                                    Command="{Binding RenameCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                                    Content="{dxrudl:ReportStringId StringId=Cmd_RenameGalleryItem}"
                                                    KeyGesture="F2"
                                                    Style="{StaticResource InteractiveBarItem}" />
                                                <dxb:BarItemLinkSeparator />
                                                <dxb:BarButtonItem
                                                    Command="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.ApplyGalleryTemplateCommand, RelativeSource={RelativeSource Self}}"
                                                    CommandParameter="{Binding SelectedItem.GalleryItem, RelativeSource={RelativeSource TemplatedParent}}"
                                                    Content="{Binding SelectedItem, Converter={dxrgi:ReportGalleryKindToApplyCommandTextConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                                                    Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/ReportGallery/ApplyLayoutToReport.svg'}"
                                                    IsVisible="True"
                                                    Style="{StaticResource InteractiveBarItem}" />
                                            </dxb:PopupMenu.Items>
                                        </dxb:PopupMenu>
                                    </dxb:BarManager.DXContextMenu>
                                </dxg:TreeListView>
                            </dxg:GridControl.View>
                        </dxg:GridControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RibbonPageSelector.DefaultStyleBase" TargetType="dxrud:RibbonPageSelector">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxrud:RibbonPageSelector">
                    <Grid ClipToBounds="True">
                        <dx:DXTabControl
                            Name="ViewKindSwitch"
                            Margin="0,0,0,-2"
                            Padding="0"
                            VerticalAlignment="Bottom"
                            BorderThickness="0">
                            <dxmvvm:Interaction.Behaviors>
                                <dxrudi:TabControlRibbonPageSelectorBehavior Ribbon="{Binding Path=Ribbon, RelativeSource={RelativeSource TemplatedParent}}" />
                            </dxmvvm:Interaction.Behaviors>
                            <dx:DXTabControl.ItemContainerStyle>
                                <Style TargetType="dx:DXTabItem">
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Setter Property="IsEnabled" Value="{Binding Path=(dxrud:ReportDesigner.Document), RelativeSource={RelativeSource Self}, Converter={dxmvvm:ObjectToBooleanConverter}}" />
                                    <Setter Property="Visibility" Value="{Binding RibbonPage.IsVisible, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
                                </Style>
                            </dx:DXTabControl.ItemContainerStyle>
                            <dx:DXTabControl.ItemHeaderTemplate>
                                <DataTemplate>
                                    <ContentControl Content="{Binding RibbonPage.Caption}" />
                                </DataTemplate>
                            </dx:DXTabControl.ItemHeaderTemplate>
                            <dx:DXTabControl.ContentHostTemplate>
                                <DataTemplate />
                            </dx:DXTabControl.ContentHostTemplate>
                        </dx:DXTabControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScriptingControl.DefaultStyleBase" TargetType="dxrud:ScriptingControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxrud:ScriptingControl">
                    <dxdo:DockLayoutManager>
                        <dxdo:LayoutGroup Orientation="Vertical">
                            <dxdo:LayoutControlItem ItemHeight="*">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>

                                    <Grid Visibility="{Binding Path=(dxrud:ReportDesigner.Designer).UseOfficeInspiredRibbonStyle, Converter={dxmvvm:BooleanToVisibilityConverter Inverse=True}, RelativeSource={RelativeSource Self}}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="auto" />
                                        </Grid.ColumnDefinitions>

                                        <dxe:ComboBoxEdit
                                            Margin="0,0,0,12"
                                            AutoComplete="True"
                                            DisplayMember="Name"
                                            Grid.IsSharedSizeScope="True"
                                            IsTextEditable="False"
                                            ItemsSource="{Binding ReportModel.ScriptingModel.ComponentModels, RelativeSource={RelativeSource TemplatedParent}}"
                                            SelectedItem="{Binding ReportModel.ScriptingModel.SelectedComponentModel, RelativeSource={RelativeSource TemplatedParent}}">
                                            <dxe:ComboBoxEdit.ItemTemplate>
                                                <DataTemplate>
                                                    <Grid HorizontalAlignment="Stretch">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="auto" SharedSizeGroup="scripting-components" />
                                                            <ColumnDefinition Width="*" />
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock Text="{Binding Name}" />
                                                        <TextBlock
                                                            Grid.Column="1"
                                                            Margin="72,0"
                                                            FontStyle="Italic"
                                                            Text="{Binding TypeName}" />
                                                    </Grid>
                                                </DataTemplate>
                                            </dxe:ComboBoxEdit.ItemTemplate>
                                        </dxe:ComboBoxEdit>

                                        <dxe:ComboBoxEdit
                                            Grid.Column="1"
                                            Margin="12,0,0,12"
                                            AutoComplete="True"
                                            DisplayMember="EventName"
                                            Grid.IsSharedSizeScope="True"
                                            IsTextEditable="False"
                                            ItemsSource="{Binding Path=ReportModel.ScriptingModel.SelectedComponentEventModels, RelativeSource={RelativeSource TemplatedParent}}"
                                            SelectedItem="{Binding Path=ReportModel.ScriptingModel.SelectedComponentEventModel, RelativeSource={RelativeSource TemplatedParent}}">
                                            <dxe:ComboBoxEdit.ItemTemplate>
                                                <DataTemplate>
                                                    <Grid HorizontalAlignment="Stretch">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="auto" SharedSizeGroup="scripting-events" />
                                                            <ColumnDefinition Width="*" />
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock Text="{Binding DisplayName}" />
                                                        <TextBlock
                                                            Grid.Column="1"
                                                            Margin="72,0"
                                                            FontStyle="Italic"
                                                            Text="{Binding DefaultSuffix}" />
                                                    </Grid>
                                                </DataTemplate>
                                            </dxe:ComboBoxEdit.ItemTemplate>
                                        </dxe:ComboBoxEdit>

                                        <Button
                                            Grid.Column="2"
                                            Margin="12,0,0,12"
                                            Padding="10,0"
                                            Command="{Binding ReportModel.ScriptingModel.ValidateCommand, RelativeSource={RelativeSource TemplatedParent}}">
                                            <StackPanel Orientation="Horizontal">
                                                <dx:DXImage Width="16" Source="{dxrud:ReportDesignerResourceImage ResourceName=Images/Svg/ValidateScripts.svg}">
                                                    <dx:DXImage.Margin>
                                                        <Thickness Right="8" />
                                                    </dx:DXImage.Margin>
                                                </dx:DXImage>
                                                <TextBlock Text="Validate" />
                                            </StackPanel>
                                        </Button>
                                    </Grid>
                                    <dxe:TextEdit
                                        x:Name="XAX"
                                        Grid.Row="1"
                                        Margin="0,-1"
                                        Focusable="False"
                                        IsReadOnly="True" />
                                    <ScrollViewer
                                        Grid.Row="1"
                                        CanContentScroll="True"
                                        Focusable="False"
                                        HorizontalScrollBarVisibility="Auto"
                                        VerticalScrollBarVisibility="Auto">
                                        <dxcv:ScrollableView Name="codeView" Content="{Binding Path=ReportModel.ScriptsSource, RelativeSource={RelativeSource TemplatedParent}}">
                                            <dxcv:ScrollableView.Options>
                                                <dxcv:DocumentViewOptions FontName="Consolas" />
                                            </dxcv:ScrollableView.Options>
                                            <dxmvvm:Interaction.Behaviors>
                                                <dxcv:EditingBehavior />
                                                <dxcv:CodeHighlightingBehavior Language="{Binding Path=ReportModel.ScriptLanguage, RelativeSource={RelativeSource TemplatedParent}, Converter={dxrudi:ScriptLanguageXRToCodeHighlightingConverter}}">
                                                    <dxcv:CodeHighlightingBehavior.HighlightingSpans>
                                                        <MultiBinding Converter="{dxrudi:CompilerErrorsToHighlightingSpansConverter}">
                                                            <Binding Path="ReportModel.ScriptingModel.HighlightedErrors" RelativeSource="{RelativeSource TemplatedParent}" />
                                                            <Binding ElementName="codeView" Path="Model" />
                                                        </MultiBinding>
                                                    </dxcv:CodeHighlightingBehavior.HighlightingSpans>
                                                </dxcv:CodeHighlightingBehavior>
                                                <dxcv:HighlightSpansBehavior />
                                                <dxcv:LineNumbersBehavior />
                                                <dxrudi:SetCommandBindingProviderBehavior ScriptsCommandBindingProvider="{Binding Path=ReportModel.(dxrudi:ReportModelPropertiesExtensions.ScriptsCommandBindingProvider), Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}" />
                                                <dxrudi:CursorNavigationBehavior ScriptingModel="{Binding Path=ReportModel.ScriptingModel, RelativeSource={RelativeSource TemplatedParent}}" />
                                            </dxmvvm:Interaction.Behaviors>
                                            <dxb:BarManager.DXContextMenu>
                                                <dxb:PopupMenu ItemLinksSource="{Binding Path=PlacementTarget.Model.CommandBindingProvider, Converter={dxrudi:SelectiveInputMultiBindingCommandInfoConverter}, RelativeSource={RelativeSource Self}}">
                                                    <dxb:PopupMenu.ItemTemplate>
                                                        <DataTemplate>
                                                            <ContentControl>
                                                                <dxb:BarButtonItem
                                                                    Command="{Binding Command}"
                                                                    Content="{Binding Caption}"
                                                                    Glyph="{Binding Name, Converter={dxrudi:CodeViewCommandToGlyphConverter}}"
                                                                    KeyGesture="{Binding KeyGesture}" />
                                                            </ContentControl>
                                                        </DataTemplate>
                                                    </dxb:PopupMenu.ItemTemplate>
                                                </dxb:PopupMenu>
                                            </dxb:BarManager.DXContextMenu>
                                        </dxcv:ScrollableView>
                                    </ScrollViewer>
                                </Grid>
                            </dxdo:LayoutControlItem>
                        </dxdo:LayoutGroup>
                    </dxdo:DockLayoutManager>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ReportDesignerFieldListControl.DefaultStyleBase" TargetType="dxrudfl:ReportDesignerFieldListControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxrudfl:ReportDesignerFieldListControl">
                    <dxg:TreeListControl
                        dx:DXSerializer.SerializationID="FieldList"
                        ItemsSource="{TemplateBinding Nodes}"
                        SelectedItem="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}}"
                        SelectionMode="None"
                        ShowBorder="{TemplateBinding ShowBorder}"
                        Style="{DynamicResource {dxrudt:LWKey ReportDesigner.FieldListStyle}}">
                        <dxg:TreeListControl.View>
                            <dxg:TreeListView
                                ExpandStateBinding="{Binding IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                IncrementalSearchMode="Enabled"
                                MultiSelectMode="Row"
                                NavigationStyle="Row"
                                ShowDragDropHint="False"
                                Style="{DynamicResource {dxrudt:LWKey ReportDesigner.FieldListViewStyle}}">
                                <dxmvvm:Interaction.Behaviors>
                                    <dxdai:ExpandTreeListNodeBehavior />
                                </dxmvvm:Interaction.Behaviors>
                            </dxg:TreeListView>
                        </dxg:TreeListControl.View>
                        <dxg:TreeListControl.Columns>
                            <dxg:TreeListColumn FieldName="DisplayName" CellTemplate="{DynamicResource {dxrudt:LWKey ReportDesigner.FieldListNodeTemplate}}" Style="{DynamicResource {dxrudt:LWKey ReportDesigner.FieldListNodeBehaviorTemplate}}" />
                        </dxg:TreeListControl.Columns>
                        <dxmvvm:Interaction.Behaviors>
                            <dxdai:ScrollIntoSelectedRowBehavior />
                        </dxmvvm:Interaction.Behaviors>
                    </dxg:TreeListControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="InteractiveReportDesignerFieldListControl.DefaultStyleBase" BasedOn="{StaticResource ReportDesignerFieldListControl.DefaultStyleBase}" TargetType="dxrudfl:InteractiveReportDesignerFieldListControl">
        <Setter Property="Nodes" Value="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel.FieldListNodes, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Report" Value="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel.XRObjectBase, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Diagram" Value="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel.Diagram, RelativeSource={RelativeSource Self}}" />
        <Setter Property="SelectedDiagramItem" Value="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel.SelectedModel, RelativeSource={RelativeSource Self}, Mode=OneWay}" />
    </Style>
    <Style x:Key="ReportDesignerPropertyGridControl.DefaultStyleBase" TargetType="propertygrid:ReportDesignerPropertyGridControl">
        <Setter Property="Items" Value="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel, RelativeSource={RelativeSource Self}, Converter={dxrudi:YieldConverter UseEnumerableConverter=True}}" />
        <Setter Property="SelectedItem" Value="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel.SelectedModel, RelativeSource={RelativeSource Self}, Mode=TwoWay}" />
        <Setter Property="SelectedObjectModel" Value="{Binding Path=(dxrud:ReportDesigner.Document).Diagram.SelectionModel, RelativeSource={RelativeSource Self}}" />
        <Setter Property="xrdiag:XtraReportDiagramItem.ReportModel" Value="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel, RelativeSource={RelativeSource Self}}" />
        <Setter Property="MessageBoxServiceTemplate" Value="{DynamicResource {dxrudt:LWKey ReportDesigner.DefaultMessageBoxServiceTemplate}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="propertygrid:ReportDesignerPropertyGridControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.Resources>
                            <dxrudi:HierarchyCollectionViewSource x:Key="ItemsSource" ItemsSource="{TemplateBinding Items}">
                                <dxmvvm:Interaction.Behaviors>
                                    <dxrudi:SetFakeContainerFilterBehavior />
                                </dxmvvm:Interaction.Behaviors>
                                <dxrudi:HierarchyCollectionViewSource.ItemTemplateSelector>
                                    <reportexplorernative:ReportExplorerItemTemplateSelector>
                                        <reportexplorernative:ReportExplorerItemTemplateSelector.ContainerTemplate>
                                            <DataTemplate>
                                                <dxrudi:HierarchyCollectionViewSourceNode ItemsSource="{Binding Components}" />
                                            </DataTemplate>
                                        </reportexplorernative:ReportExplorerItemTemplateSelector.ContainerTemplate>
                                        <reportexplorernative:ReportExplorerItemTemplateSelector.ItemTemplate>
                                            <DataTemplate>
                                                <dxrudi:HierarchyCollectionViewSourceNode />
                                            </DataTemplate>
                                        </reportexplorernative:ReportExplorerItemTemplateSelector.ItemTemplate>
                                    </reportexplorernative:ReportExplorerItemTemplateSelector>
                                </dxrudi:HierarchyCollectionViewSource.ItemTemplateSelector>
                                <dxrudi:HierarchyCollectionViewSource.SortDescriptions>
                                    <scm:SortDescription Direction="Ascending" PropertyName="ControlName" />
                                </dxrudi:HierarchyCollectionViewSource.SortDescriptions>
                            </dxrudi:HierarchyCollectionViewSource>
                        </Grid.Resources>
                        <dxe:ComboBoxEdit
                            Name="controlsList"
                            Margin="4"
                            EditValue="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Grid.IsSharedSizeScope="True"
                            IsTextEditable="False"
                            ItemsSource="{Binding Source={StaticResource ItemsSource}}">
                            <dxe:ComboBoxEdit.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto" />
                                            <ColumnDefinition Width="auto" SharedSizeGroup="controlName" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <dx:DXImage Width="16" Margin="0,0,4,0" Source="{Binding Icon}" />
                                        <TextBlock Grid.Column="1" Margin="0,0,18,0" Text="{Binding ControlName}" />
                                        <TextBlock Grid.Column="2" Text="{Binding Converter={reportexplorernative:ReportExplorerItemToTypeStringConverter}}" />
                                    </Grid>
                                </DataTemplate>
                            </dxe:ComboBoxEdit.ItemTemplate>
                            <dxe:ComboBoxEdit.EditNonEditableTemplate>
                                <ControlTemplate>
                                    <Grid Margin="4,2">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto" />
                                            <ColumnDefinition Width="auto" SharedSizeGroup="controlName" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <dx:DXImage Width="16" Margin="0,0,4,0" Source="{Binding EditValue.Icon}" />
                                        <TextBlock
                                            Name="PART_Name"
                                            Grid.Column="1"
                                            Margin="0,0,18,0"
                                            Text="{Binding EditValue.ControlName}" />
                                        <TextBlock Grid.Column="2" Text="{Binding EditValue, Converter={reportexplorernative:ReportExplorerItemToTypeStringConverter}}" />
                                    </Grid>
                                </ControlTemplate>
                            </dxe:ComboBoxEdit.EditNonEditableTemplate>
                        </dxe:ComboBoxEdit>

                        <propertygrid:ReportDesignerPropertyGrid
                            x:Name="propertyGrid"
                            Grid.Row="1"
                            dxrudi:PropertyGridHelper.SelectedObject="{Binding SelectedObject, RelativeSource={RelativeSource Self}}"
                            IsEnabled="{Binding SelectedObjectModel, Converter={dxrudi:SelectedItemsLockedInEUDToBooleanConverter Inverse=True}, RelativeSource={RelativeSource TemplatedParent}}"
                            SelectedObject="{TemplateBinding SelectedObjectModel}"
                            ShowExpressionsInSeparateTab="{Binding Path=(dxrud:ReportDesigner.Designer).PropertyGridOptions.ShowExpressionsInSeparateTab, RelativeSource={RelativeSource Self}}"
                            ShowFavoriteProperties="{Binding Path=(dxrud:ReportDesigner.Designer).PropertyGridOptions.ShowFavoriteProperties, Mode=TwoWay, RelativeSource={RelativeSource Self}}"
                            Style="{StaticResource propertyGridStyle}"
                            UseTabbedView="{Binding Path=(dxrud:ReportDesigner.Designer).PropertyGridOptions.UseTabbedView, RelativeSource={RelativeSource Self}}">

                            <propertygrid:ReportDesignerPropertyGrid.Resources>
                                <ResourceDictionary>
                                    <dxi:RenderTemplate x:Key="{dxprgt:LWKey VSViewRenderTemplate.RowControl}">
                                        <dxi:RenderBorder Name="PART_Root" BorderBrush="{dx:TargetStaticResource {dxprgt:LWKey VSViewBrush.BorderBrush}, TargetDictionary={dxi:ThemeResourceDictionary Path='PropertyGrid.xaml'}}" BorderThickness="0,0,0,1">
                                            <dxi:RenderPanel LayoutProvider="{dxi:StackPanelLayoutProvider Orientation=Vertical}">
                                                <dxprg:RenderResizingPanel Dock="Left">
                                                    <dxi:RenderBorder Name="PART_HeaderBackground" Background="Transparent">
                                                        <dxi:RenderControl Name="PART_HeaderHost" RenderTemplate="{dx:TargetStaticResource {dxprgt:LWKey VSViewRenderTemplate.HeaderHost}, TargetDictionary={dxi:ThemeResourceDictionary Path='PropertyGrid.xaml'}}" />
                                                    </dxi:RenderBorder>
                                                    <dxi:RenderBorder Name="PART_EditorBackground" Background="Transparent">
                                                        <dxi:RenderPanel Dock="Right" LayoutProvider="{dxi:DockPanelLayoutProvider LastChildFill=True}">
                                                            <dxi:RenderBorder
                                                                Name="PART_CommandsContainer"
                                                                Padding="0,5"
                                                                VerticalAlignment="Top"
                                                                Background="Transparent"
                                                                Dock="Right">
                                                                <dxi:RenderPanel Dock="Right" LayoutProvider="{dxi:StackPanelLayoutProvider Orientation=Horizontal}">
                                                                    <dxprg:RenderCommandButton
                                                                        Name="PART_CommandButton"
                                                                        VerticalAlignment="Center"
                                                                        PreferRenderTemplate="False"
                                                                        RenderTemplate="{dx:TargetStaticResource {dxprgt:LWKey VSViewRenderTemplate.RowCommandButton}, TargetDictionary={dxi:ThemeResourceDictionary Path='PropertyGrid.xaml'}}"
                                                                        RenderTemplateSelector="{x:Null}"
                                                                        UsePropagatedIsMouseOver="True" />
                                                                    <propertygrid:RenderExpressionCommandButton
                                                                        Name="PART_ExpressionButton"
                                                                        VerticalAlignment="Center"
                                                                        PreferRenderTemplate="False"
                                                                        RenderTemplate="{StaticResource ExpressionCommandButton}"
                                                                        RenderTemplateSelector="{x:Null}"
                                                                        UsePropagatedIsMouseOver="True" />
                                                                </dxi:RenderPanel>
                                                            </dxi:RenderBorder>

                                                            <dxprg:RenderCollectionButton
                                                                Name="PART_CollectionButton"
                                                                Dock="Right"
                                                                RenderTemplate="{dx:TargetStaticResource {dxprgt:LWKey VSViewRenderTemplate.RowCollectionButton}, TargetDictionary={dxi:ThemeResourceDictionary Path='PropertyGrid.xaml'}}"
                                                                RenderTemplateSelector="{x:Null}"
                                                                UsePropagatedIsMouseOver="True"
                                                                Visibility="Collapsed" />
                                                            <dxi:RenderPanel Dock="Left" LayoutProvider="{dxi:DockPanelLayoutProvider LastChildFill=True}">
                                                                <dxi:RenderPanel
                                                                    Name="PART_OnlyExpanderModePanel"
                                                                    Dock="Left"
                                                                    LayoutProvider="{dxi:DockPanelLayoutProvider LastChildFill=True}"
                                                                    Visibility="Collapsed">
                                                                    <dxi:RenderBorder Name="PART_Indent" Dock="Left" />
                                                                    <dxprg:RenderExpander
                                                                        Name="PART_CheckBox"
                                                                        Width="{dx:TargetStaticResource {dxprgt:LWKey DataRow.ExpanderWidth}, TargetDictionary={dxi:ThemeResourceDictionary Path='PropertyGrid.xaml'}}"
                                                                        HorizontalAlignment="Center"
                                                                        VerticalAlignment="Center"
                                                                        Dock="Left"
                                                                        RenderTemplate="{dx:TargetStaticResource {dxprgt:LWKey VSViewRenderTemplate.Expander}, TargetDictionary={dxi:ThemeResourceDictionary Path='PropertyGrid.xaml'}}"
                                                                        RenderTemplateSelector="{x:Null}"
                                                                        UsePropagatedIsMouseOver="True"
                                                                        Visibility="Collapsed" />
                                                                </dxi:RenderPanel>
                                                                <dxi:RenderContentControl
                                                                    Name="PART_ContentHost"
                                                                    HorizontalContentAlignment="Stretch"
                                                                    VerticalContentAlignment="Stretch"
                                                                    Dock="Right"
                                                                    PreferRenderTemplate="False" />
                                                            </dxi:RenderPanel>
                                                        </dxi:RenderPanel>
                                                    </dxi:RenderBorder>
                                                    <dxi:RenderControl
                                                        Name="PART_Separator"
                                                        HorizontalAlignment="Stretch"
                                                        VerticalAlignment="Stretch"
                                                        RenderTemplate="{dx:TargetStaticResource {dxprgt:LWKey VSViewRenderTemplate.Separator}, TargetDictionary={dxi:ThemeResourceDictionary Path='PropertyGrid.xaml'}}" />
                                                </dxprg:RenderResizingPanel>
                                                <dxi:RenderPanel Name="PART_AdditionalContentPanel" LayoutProvider="{dxi:DockPanelLayoutProvider LastChildFill=True}">
                                                    <dxi:RenderBorder Name="PART_AdditionalContentIndent" Dock="Left" />
                                                    <dxi:RenderButton
                                                        Name="PART_AssitionalContentStub"
                                                        VerticalAlignment="Center"
                                                        Dock="Right"
                                                        PreferRenderTemplate="False"
                                                        RenderTemplate="{dx:TargetStaticResource {dxprgt:LWKey VSViewRenderTemplate.RowCommandButton}, TargetDictionary={dxi:ThemeResourceDictionary Path='PropertyGrid.xaml'}}"
                                                        RenderTemplateSelector="{x:Null}"
                                                        UsePropagatedIsMouseOver="True"
                                                        Visibility="Hidden" />
                                                    <dxi:RenderContentControl
                                                        Name="PART_AdditionalContentHost"
                                                        HorizontalContentAlignment="Stretch"
                                                        VerticalContentAlignment="Stretch"
                                                        Dock="Right"
                                                        PreferRenderTemplate="False" />
                                                </dxi:RenderPanel>
                                            </dxi:RenderPanel>
                                        </dxi:RenderBorder>
                                        <dxi:RenderTemplate.Triggers>
                                            <dxi:RenderBinding DependencyProperty="{x:Static dxprg:RowControl.HeaderPaddingProperty}" TargetProperty="Padding" TargetName="PART_HeaderBackground" />

                                            <dxi:RenderBinding DependencyProperty="{x:Static propertygrid:BindableRowControl.ExpressionButtonVisibilityProperty}" TargetProperty="Visibility" TargetName="PART_ExpressionButton" />
                                            <dxi:RenderBinding DependencyProperty="{x:Static dxprg:RowControlBase.ActualIndentProperty}" TargetProperty="Width" TargetName="PART_AdditionalContentIndent" />
                                            <dxi:RenderBinding DependencyProperty="{x:Static dxprg:RowControl.RowDataProperty}" TargetProperty="Content" TargetName="PART_AdditionalContentHost" />
                                            <dxi:RenderBinding DependencyProperty="{x:Static propertygrid:BindableRowControl.AdditionalContentTemplateProperty}" TargetProperty="ContentTemplate" TargetName="PART_AdditionalContentHost" />
                                            <dxi:RenderTrigger DependencyProperty="{x:Static propertygrid:BindableRowControl.IsSelectedProperty}" Value="False">
                                                <dxi:RenderSetter TargetName="PART_AdditionalContentPanel" Property="Visibility" Value="Collapsed" />
                                            </dxi:RenderTrigger>
                                            <dxi:RenderTrigger DependencyProperty="{x:Static propertygrid:BindableRowControl.AdditionalContentTemplateProperty}" Value="{x:Null}">
                                                <dxi:RenderSetter TargetName="PART_AdditionalContentPanel" Property="Visibility" Value="Collapsed" />
                                            </dxi:RenderTrigger>

                                            <dxi:RenderBinding DependencyProperty="{x:Static dxprg:RowControl.ContentPaddingProperty}" TargetProperty="Padding" TargetName="PART_EditorBackground" />
                                            <dxi:RenderBinding DependencyProperty="{x:Static dxprg:RowControlBase.ExpandButtonWidthProperty}" TargetProperty="Width" TargetName="PART_CheckBox" />
                                            <dxi:RenderTrigger DependencyProperty="{x:Static dxprg:RowControl.ShowGridLinesProperty}" Value="False">
                                                <dxi:RenderSetter TargetName="PART_Root" Property="BorderThickness" Value="0" />
                                                <dxi:RenderSetter TargetName="PART_Separator" Property="Visibility" Value="Collapsed" />
                                            </dxi:RenderTrigger>
                                            <dxi:RenderTrigger DependencyProperty="{x:Static dxprg:RowControl.HeaderShowModeProperty}" Value="OnlyHeader">
                                                <dxi:RenderSetter TargetName="PART_EditorBackground" Property="Visibility" Value="Collapsed" />
                                            </dxi:RenderTrigger>
                                            <dxi:RenderTrigger DependencyProperty="{x:Static dxprg:RowControl.HeaderShowModeProperty}" Value="OnlyExpander">
                                                <dxi:RenderSetter TargetName="PART_OnlyExpanderModePanel" Property="Visibility" Value="Visible" />
                                            </dxi:RenderTrigger>
                                            <dxi:RenderTrigger DependencyProperty="{x:Static dxprg:RowControl.CanExpandProperty}" Value="True">
                                                <dxi:RenderSetter TargetName="PART_CheckBox" Property="Visibility" Value="Visible" />
                                            </dxi:RenderTrigger>
                                            <dxi:MultiRenderTrigger>
                                                <dxi:MultiRenderTrigger.Conditions>
                                                    <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControl.CanExpandProperty}" Value="False" />
                                                    <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControl.CategoriesShowModeProperty}" Value="Tabbed" />
                                                    <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControl.ExpandButtonVisibilityProperty}" Value="Visible" />
                                                </dxi:MultiRenderTrigger.Conditions>
                                                <dxi:RenderSetter TargetName="PART_CheckBox" Property="Visibility" Value="Hidden" />
                                            </dxi:MultiRenderTrigger>
                                            <dxi:RenderTrigger DependencyProperty="{x:Static dxprg:RowControl.ExpandButtonVisibilityProperty}" Value="Hidden">
                                                <dxi:RenderSetter TargetName="PART_CheckBox" Property="Visibility" Value="Hidden" />
                                            </dxi:RenderTrigger>
                                            <dxi:RenderTrigger DependencyProperty="{x:Static dxprg:RowControl.ExpandButtonVisibilityProperty}" Value="Collapsed">
                                                <dxi:RenderSetter TargetName="PART_CheckBox" Property="Visibility" Value="Collapsed" />
                                            </dxi:RenderTrigger>
                                            <dxi:RenderBinding DependencyProperty="{x:Static dxprg:RowControlBase.ActualIndentProperty}" TargetProperty="Width" TargetName="PART_Indent" />
                                            <dxi:RenderBinding DependencyProperty="{x:Static dxprg:RowControl.RowDataProperty}" TargetProperty="Content" TargetName="PART_ContentHost" />
                                            <dxi:RenderBinding DependencyProperty="{x:Static dxprg:RowControl.EditorHorizontalAlignmentProperty}" TargetProperty="HorizontalContentAlignment" TargetName="PART_ContentHost" />
                                            <dxi:RenderBinding DependencyProperty="{x:Static dxprg:RowControl.ContentTemplateSelectorProperty}" TargetProperty="ContentTemplateSelector" TargetName="PART_ContentHost" />

                                            <dxi:RenderBinding DependencyProperty="{x:Static dxprg:RowControl.MenuButtonTemplateProperty}" TargetProperty="ContentTemplate" TargetName="PART_CommandButton" />
                                            <dxi:RenderTrigger DependencyProperty="{x:Static dxprg:RowControlBase.ActualShowCommandButtonProperty}" Value="False">
                                                <dxi:RenderSetter TargetName="PART_CommandButton" Property="Visibility" Value="Collapsed" />
                                            </dxi:RenderTrigger>
                                            <dxi:RenderTrigger DependencyProperty="{x:Static dxprg:RowControlBase.ShowCollectionButtonProperty}" Value="True">
                                                <dxi:RenderSetter TargetName="PART_CollectionButton" Property="Visibility" Value="Visible" />
                                            </dxi:RenderTrigger>

                                            <dxi:MultiRenderTrigger>
                                                <dxi:MultiRenderTrigger.Conditions>
                                                    <dxi:RenderConditionGroup Operator="And">
                                                        <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControlBase.StateProperty}" Value="Normal" />
                                                        <dxi:RenderConditionGroup Operator="Or">
                                                            <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControl.HighlightingModeProperty}" Value="HeaderAndContent" />
                                                            <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControl.HighlightingModeProperty}" Value="OnlyHeader" />
                                                        </dxi:RenderConditionGroup>
                                                    </dxi:RenderConditionGroup>
                                                </dxi:MultiRenderTrigger.Conditions>
                                                <dxi:RenderSetter TargetName="PART_HeaderBackground" Property="Background" Value="{dx:TargetStaticResource {dxprgt:LWKey VSViewBrush.Background_Header_Normal}, TargetDictionary={dxi:ThemeResourceDictionary Path='PropertyGrid.xaml'}}" />
                                                <dxi:RenderSetter TargetName="PART_HeaderBackground" Property="Foreground" Value="{dx:TargetStaticResource {dxprgt:LWKey VSViewBrush.Foreground_Header_Normal}, TargetDictionary={dxi:ThemeResourceDictionary Path='PropertyGrid.xaml'}}" />
                                            </dxi:MultiRenderTrigger>
                                            <dxi:MultiRenderTrigger>
                                                <dxi:MultiRenderTrigger.Conditions>
                                                    <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControlBase.StateProperty}" Value="Normal" />
                                                    <dxi:RenderConditionGroup Operator="Or">
                                                        <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControl.HighlightingModeProperty}" Value="HeaderAndContent" />
                                                        <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControl.HighlightingModeProperty}" Value="OnlyContent" />
                                                    </dxi:RenderConditionGroup>
                                                </dxi:MultiRenderTrigger.Conditions>
                                                <dxi:RenderSetter TargetName="PART_EditorBackground" Property="Background" Value="{dx:TargetStaticResource {dxprgt:LWKey VSViewBrush.Background_Editor_Normal}, TargetDictionary={dxi:ThemeResourceDictionary Path='PropertyGrid.xaml'}}" />
                                                <dxi:RenderSetter TargetName="PART_EditorBackground" Property="Foreground" Value="{dx:TargetStaticResource {dxprgt:LWKey VSViewBrush.Foreground_Editor_Normal}, TargetDictionary={dxi:ThemeResourceDictionary Path='PropertyGrid.xaml'}}" />
                                            </dxi:MultiRenderTrigger>

                                            <dxi:MultiRenderTrigger>
                                                <dxi:MultiRenderTrigger.Conditions>
                                                    <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControlBase.StateProperty}" Value="Selected" />
                                                    <dxi:RenderConditionGroup Operator="Or">
                                                        <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControl.HighlightingModeProperty}" Value="HeaderAndContent" />
                                                        <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControl.HighlightingModeProperty}" Value="OnlyHeader" />
                                                    </dxi:RenderConditionGroup>
                                                </dxi:MultiRenderTrigger.Conditions>
                                                <dxi:RenderSetter TargetName="PART_HeaderBackground" Property="Background" Value="{dx:TargetStaticResource {dxprgt:LWKey VSViewBrush.Background_Header_Selected}, TargetDictionary={dxi:ThemeResourceDictionary Path='PropertyGrid.xaml'}}" />
                                                <dxi:RenderSetter TargetName="PART_HeaderBackground" Property="Foreground" Value="{dx:TargetStaticResource {dxprgt:LWKey VSViewBrush.Foreground_Header_Selected}, TargetDictionary={dxi:ThemeResourceDictionary Path='PropertyGrid.xaml'}}" />
                                            </dxi:MultiRenderTrigger>
                                            <dxi:MultiRenderTrigger>
                                                <dxi:MultiRenderTrigger.Conditions>
                                                    <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControlBase.StateProperty}" Value="Selected" />
                                                    <dxi:RenderConditionGroup Operator="Or">
                                                        <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControl.HighlightingModeProperty}" Value="HeaderAndContent" />
                                                        <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControl.HighlightingModeProperty}" Value="OnlyContent" />
                                                    </dxi:RenderConditionGroup>
                                                </dxi:MultiRenderTrigger.Conditions>
                                                <dxi:RenderSetter TargetName="PART_EditorBackground" Property="Background" Value="{dx:TargetStaticResource {dxprgt:LWKey VSViewBrush.Background_Editor_Selected}, TargetDictionary={dxi:ThemeResourceDictionary Path='PropertyGrid.xaml'}}" />
                                                <dxi:RenderSetter TargetName="PART_EditorBackground" Property="Foreground" Value="{dx:TargetStaticResource {dxprgt:LWKey VSViewBrush.Foreground_Editor_Selected}, TargetDictionary={dxi:ThemeResourceDictionary Path='PropertyGrid.xaml'}}" />
                                            </dxi:MultiRenderTrigger>

                                            <dxi:MultiRenderTrigger>
                                                <dxi:MultiRenderTrigger.Conditions>
                                                    <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControlBase.StateProperty}" Value="SelectedInactive" />
                                                    <dxi:RenderConditionGroup Operator="Or">
                                                        <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControl.HighlightingModeProperty}" Value="HeaderAndContent" />
                                                        <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControl.HighlightingModeProperty}" Value="OnlyHeader" />
                                                    </dxi:RenderConditionGroup>
                                                </dxi:MultiRenderTrigger.Conditions>
                                                <dxi:RenderSetter TargetName="PART_HeaderBackground" Property="Background" Value="{dx:TargetStaticResource {dxprgt:LWKey VSViewBrush.Background_Header_SelectedInactive}, TargetDictionary={dxi:ThemeResourceDictionary Path='PropertyGrid.xaml'}}" />
                                                <dxi:RenderSetter TargetName="PART_HeaderBackground" Property="Foreground" Value="{dx:TargetStaticResource {dxprgt:LWKey VSViewBrush.Foreground_Header_SelectedInactive}, TargetDictionary={dxi:ThemeResourceDictionary Path='PropertyGrid.xaml'}}" />
                                            </dxi:MultiRenderTrigger>
                                            <dxi:MultiRenderTrigger>
                                                <dxi:MultiRenderTrigger.Conditions>
                                                    <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControlBase.StateProperty}" Value="SelectedInactive" />
                                                    <dxi:RenderConditionGroup Operator="Or">
                                                        <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControl.HighlightingModeProperty}" Value="HeaderAndContent" />
                                                        <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControl.HighlightingModeProperty}" Value="OnlyContent" />
                                                    </dxi:RenderConditionGroup>
                                                </dxi:MultiRenderTrigger.Conditions>
                                                <dxi:RenderSetter TargetName="PART_EditorBackground" Property="Background" Value="{dx:TargetStaticResource {dxprgt:LWKey VSViewBrush.Background_Editor_SelectedInactive}, TargetDictionary={dxi:ThemeResourceDictionary Path='PropertyGrid.xaml'}}" />
                                                <dxi:RenderSetter TargetName="PART_EditorBackground" Property="Foreground" Value="{dx:TargetStaticResource {dxprgt:LWKey VSViewBrush.Foreground_Editor_SelectedInactive}, TargetDictionary={dxi:ThemeResourceDictionary Path='PropertyGrid.xaml'}}" />
                                            </dxi:MultiRenderTrigger>

                                            <dxi:MultiRenderTrigger>
                                                <dxi:MultiRenderTrigger.Conditions>
                                                    <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControlBase.StateProperty}" Value="SelectedInactiveReadOnly" />
                                                    <dxi:RenderConditionGroup Operator="Or">
                                                        <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControl.HighlightingModeProperty}" Value="HeaderAndContent" />
                                                        <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControl.HighlightingModeProperty}" Value="OnlyHeader" />
                                                    </dxi:RenderConditionGroup>
                                                </dxi:MultiRenderTrigger.Conditions>
                                                <dxi:RenderSetter TargetName="PART_HeaderBackground" Property="Background" Value="{dx:TargetStaticResource {dxprgt:LWKey VSViewBrush.Background_Header_SelectedInactiveReadOnly}, TargetDictionary={dxi:ThemeResourceDictionary Path='PropertyGrid.xaml'}}" />
                                                <dxi:RenderSetter TargetName="PART_HeaderBackground" Property="Foreground" Value="{dx:TargetStaticResource {dxprgt:LWKey VSViewBrush.Foreground_Header_SelectedInactiveReadOnly}, TargetDictionary={dxi:ThemeResourceDictionary Path='PropertyGrid.xaml'}}" />
                                            </dxi:MultiRenderTrigger>
                                            <dxi:MultiRenderTrigger>
                                                <dxi:MultiRenderTrigger.Conditions>
                                                    <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControlBase.StateProperty}" Value="SelectedInactiveReadOnly" />
                                                    <dxi:RenderConditionGroup Operator="Or">
                                                        <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControl.HighlightingModeProperty}" Value="HeaderAndContent" />
                                                        <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControl.HighlightingModeProperty}" Value="OnlyContent" />
                                                    </dxi:RenderConditionGroup>
                                                </dxi:MultiRenderTrigger.Conditions>
                                                <dxi:RenderSetter TargetName="PART_EditorBackground" Property="Background" Value="{dx:TargetStaticResource {dxprgt:LWKey VSViewBrush.Background_Editor_SelectedInactiveReadOnly}, TargetDictionary={dxi:ThemeResourceDictionary Path='PropertyGrid.xaml'}}" />
                                                <dxi:RenderSetter TargetName="PART_EditorBackground" Property="Foreground" Value="{dx:TargetStaticResource {dxprgt:LWKey VSViewBrush.Foreground_Editor_SelectedInactiveReadOnly}, TargetDictionary={dxi:ThemeResourceDictionary Path='PropertyGrid.xaml'}}" />
                                            </dxi:MultiRenderTrigger>

                                            <dxi:MultiRenderTrigger>
                                                <dxi:MultiRenderTrigger.Conditions>
                                                    <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControlBase.StateProperty}" Value="SelectedReadOnly" />
                                                    <dxi:RenderConditionGroup Operator="Or">
                                                        <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControl.HighlightingModeProperty}" Value="HeaderAndContent" />
                                                        <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControl.HighlightingModeProperty}" Value="OnlyHeader" />
                                                    </dxi:RenderConditionGroup>
                                                </dxi:MultiRenderTrigger.Conditions>
                                                <dxi:RenderSetter TargetName="PART_HeaderBackground" Property="Background" Value="{dx:TargetStaticResource {dxprgt:LWKey VSViewBrush.Background_Header_SelectedReadOnly}, TargetDictionary={dxi:ThemeResourceDictionary Path='PropertyGrid.xaml'}}" />
                                                <dxi:RenderSetter TargetName="PART_HeaderBackground" Property="Foreground" Value="{dx:TargetStaticResource {dxprgt:LWKey VSViewBrush.Foreground_Header_SelectedReadOnly}, TargetDictionary={dxi:ThemeResourceDictionary Path='PropertyGrid.xaml'}}" />
                                            </dxi:MultiRenderTrigger>
                                            <dxi:MultiRenderTrigger>
                                                <dxi:MultiRenderTrigger.Conditions>
                                                    <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControlBase.StateProperty}" Value="SelectedReadOnly" />
                                                    <dxi:RenderConditionGroup Operator="Or">
                                                        <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControl.HighlightingModeProperty}" Value="HeaderAndContent" />
                                                        <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControl.HighlightingModeProperty}" Value="OnlyContent" />
                                                    </dxi:RenderConditionGroup>
                                                </dxi:MultiRenderTrigger.Conditions>
                                                <dxi:RenderSetter TargetName="PART_EditorBackground" Property="Background" Value="{dx:TargetStaticResource {dxprgt:LWKey VSViewBrush.Background_Editor_SelectedReadOnly}, TargetDictionary={dxi:ThemeResourceDictionary Path='PropertyGrid.xaml'}}" />
                                                <dxi:RenderSetter TargetName="PART_EditorBackground" Property="Foreground" Value="{dx:TargetStaticResource {dxprgt:LWKey VSViewBrush.Foreground_Editor_SelectedReadOnly}, TargetDictionary={dxi:ThemeResourceDictionary Path='PropertyGrid.xaml'}}" />
                                            </dxi:MultiRenderTrigger>

                                            <dxi:MultiRenderTrigger>
                                                <dxi:MultiRenderTrigger.Conditions>
                                                    <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControlBase.StateProperty}" Value="ReadOnly" />
                                                    <dxi:RenderConditionGroup Operator="Or">
                                                        <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControl.HighlightingModeProperty}" Value="HeaderAndContent" />
                                                        <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControl.HighlightingModeProperty}" Value="OnlyHeader" />
                                                    </dxi:RenderConditionGroup>
                                                </dxi:MultiRenderTrigger.Conditions>
                                                <dxi:RenderSetter TargetName="PART_HeaderBackground" Property="Background" Value="{dx:TargetStaticResource {dxprgt:LWKey VSViewBrush.Background_Header_ReadOnly}, TargetDictionary={dxi:ThemeResourceDictionary Path='PropertyGrid.xaml'}}" />
                                                <dxi:RenderSetter TargetName="PART_HeaderBackground" Property="Foreground" Value="{dx:TargetStaticResource {dxprgt:LWKey VSViewBrush.Foreground_Header_ReadOnly}, TargetDictionary={dxi:ThemeResourceDictionary Path='PropertyGrid.xaml'}}" />
                                            </dxi:MultiRenderTrigger>
                                            <dxi:MultiRenderTrigger>
                                                <dxi:MultiRenderTrigger.Conditions>
                                                    <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControlBase.StateProperty}" Value="ReadOnly" />
                                                    <dxi:RenderConditionGroup Operator="Or">
                                                        <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControl.HighlightingModeProperty}" Value="HeaderAndContent" />
                                                        <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControl.HighlightingModeProperty}" Value="OnlyContent" />
                                                    </dxi:RenderConditionGroup>
                                                </dxi:MultiRenderTrigger.Conditions>
                                                <dxi:RenderSetter TargetName="PART_EditorBackground" Property="Background" Value="{dx:TargetStaticResource {dxprgt:LWKey VSViewBrush.Background_Editor_ReadOnly}, TargetDictionary={dxi:ThemeResourceDictionary Path='PropertyGrid.xaml'}}" />
                                                <dxi:RenderSetter TargetName="PART_EditorBackground" Property="Foreground" Value="{dx:TargetStaticResource {dxprgt:LWKey VSViewBrush.Foreground_Editor_ReadOnly}, TargetDictionary={dxi:ThemeResourceDictionary Path='PropertyGrid.xaml'}}" />
                                            </dxi:MultiRenderTrigger>
                                            <dxi:MultiRenderTrigger>
                                                <dxi:MultiRenderTrigger.Conditions>
                                                    <dxi:RenderConditionGroup Operator="Or">
                                                        <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControl.HighlightingModeProperty}" Value="None" />
                                                        <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControl.HighlightingModeProperty}" Value="OnlyHeader" />
                                                    </dxi:RenderConditionGroup>
                                                    <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControl.ShowGridLinesProperty}" Value="False" />
                                                    <dxi:RenderConditionGroup Operator="Or">
                                                        <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControlBase.StateProperty}" Operator="Not" Value="ReadOnly" />
                                                        <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControlBase.StateProperty}" Operator="Not" Value="SelectedReadOnly" />
                                                    </dxi:RenderConditionGroup>
                                                </dxi:MultiRenderTrigger.Conditions>
                                                <dxi:RenderSetter TargetName="PART_EditorBackground" Property="Foreground" Value="{dx:TargetStaticResource {dxprgt:LWKey VSViewBrush.Foreground_Editor_Normal}, TargetDictionary={dxi:ThemeResourceDictionary Path='PropertyGrid.xaml'}}" />
                                            </dxi:MultiRenderTrigger>
                                            <dxi:MultiRenderTrigger>
                                                <dxi:MultiRenderTrigger.Conditions>
                                                    <dxi:RenderConditionGroup Operator="Or">
                                                        <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControl.HighlightingModeProperty}" Value="None" />
                                                        <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControl.HighlightingModeProperty}" Value="OnlyHeader" />
                                                    </dxi:RenderConditionGroup>
                                                    <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControl.ShowGridLinesProperty}" Value="False" />
                                                    <dxi:RenderConditionGroup Operator="Or">
                                                        <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControlBase.StateProperty}" Value="ReadOnly" />
                                                        <dxi:RenderCondition DependencyProperty="{x:Static dxprg:RowControlBase.StateProperty}" Value="SelectedReadOnly" />
                                                    </dxi:RenderConditionGroup>
                                                </dxi:MultiRenderTrigger.Conditions>
                                                <dxi:RenderSetter TargetName="PART_EditorBackground" Property="Foreground" Value="{dx:TargetStaticResource {dxprgt:LWKey VSViewBrush.Foreground_Editor_ReadOnly}, TargetDictionary={dxi:ThemeResourceDictionary Path='PropertyGrid.xaml'}}" />
                                            </dxi:MultiRenderTrigger>
                                        </dxi:RenderTemplate.Triggers>
                                    </dxi:RenderTemplate>
                                    <ControlTemplate x:Key="{dxprgt:LWKey PropertyGridView.ControlTemplate}" TargetType="{x:Type dxprg:PropertyGridView}">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="*" />
                                            </Grid.RowDefinitions>
                                            <ScrollViewer
                                                x:Name="PART_ScrollViewer"
                                                Grid.Row="1"
                                                CanContentScroll="True"
                                                Focusable="false"
                                                HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                                VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                                <dxmvvm:Interaction.Behaviors>
                                                    <dx:ScrollViewerTouchBehavior Orientation="Vertical" />
                                                </dxmvvm:Interaction.Behaviors>
                                                <ItemsPresenter x:Name="PART_ItemsPresenter" />
                                            </ScrollViewer>
                                        </Grid>
                                    </ControlTemplate>
                                    <ItemsPanelTemplate x:Key="{dxprgt:LWKey PropertyGridView.ItemsPanelTemplate}">
                                        <propertygrid:ReportDesignerVirtualizingStackPanel />
                                    </ItemsPanelTemplate>
                                </ResourceDictionary>
                            </propertygrid:ReportDesignerPropertyGrid.Resources>
                            <dxmvvm:Interaction.Behaviors>
                                <dxrudi:CustomSortAndExpandBehavior />
                            </dxmvvm:Interaction.Behaviors>
                            <dxrudi:PropertyGridHelper.SelectedObjectDelayedBinding>

                                <MultiBinding Converter="{propertygrid:SelectedObjectToPropertiesSelectorConverter}">
                                    <Binding Path="SelectedObjectModel" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ActualPropertiesShowMode" RelativeSource="{RelativeSource Self}" />
                                </MultiBinding>
                            </dxrudi:PropertyGridHelper.SelectedObjectDelayedBinding>

                            <propertygrid:CustomPropertyDefinition HeaderShowMode="OnlyExpander" Type="{x:Type sys:Boolean}">
                                <propertygrid:CustomPropertyDefinition.CellTemplate>
                                    <DataTemplate>
                                        <dxe:CheckEdit
                                            Name="PART_Editor"
                                            HorizontalAlignment="Left"
                                            Content="{Binding Header}"
                                            ContentTemplate="{StaticResource simpleHeaderTemplate}"
                                            EditValue="{Binding Value, Mode=TwoWay}"
                                            Foreground="{Binding Path=(dxprg:PropertyGridHelper.PropertyGrid).Foreground, RelativeSource={RelativeSource Self}}"
                                            IsEnabled="{Binding IsReadOnly, Converter={dxmvvm:BooleanNegationConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    </DataTemplate>
                                </propertygrid:CustomPropertyDefinition.CellTemplate>
                            </propertygrid:CustomPropertyDefinition>

                            <dxprg:PropertyDefinition HeaderShowMode="OnlyExpander" Type="{x:Type utils:DefaultBoolean}">
                                <dxprg:PropertyDefinition.CellTemplate>
                                    <DataTemplate>
                                        <dxe:CheckEdit
                                            Content="{Binding Header}"
                                            ContentTemplate="{StaticResource simpleHeaderTemplate}"
                                            EditValue="{Binding Value, Mode=TwoWay, Converter={dx:DefaultBooleanToNullableBooleanConverter}}"
                                            IsThreeState="True"
                                            Foreground="{Binding Path=(dxprg:PropertyGridHelper.PropertyGrid).Foreground, RelativeSource={RelativeSource Self}}" />
                                    </DataTemplate>
                                </dxprg:PropertyDefinition.CellTemplate>
                            </dxprg:PropertyDefinition>

                            <propertygrid:CustomPropertyDefinition IsReadOnly="False" Path="Shape.ArrowWidth">
                                <propertygrid:CustomPropertyDefinition.Style>
                                    <Style TargetType="dxprg:PropertyDefinition">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=(dxrud:ReportDesigner.Designer).PropertyGridOptions.UseOfficeInspiredPropertyGrid, RelativeSource={RelativeSource Self}}" Value="True">
                                                <Setter Property="EditSettings" Value="{x:Null}" />
                                                <Setter Property="CellTemplate">
                                                    <Setter.Value>
                                                        <DataTemplate>
                                                            <dxe:TrackBarEdit Grid.Column="1" EditValue="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TrackBarEditItemStyle}" />
                                                        </DataTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </propertygrid:CustomPropertyDefinition.Style>
                            </propertygrid:CustomPropertyDefinition>

                            <dxprg:PropertyDefinition IsReadOnly="False" Path="Shape.ArrowHeight">
                                <dxprg:PropertyDefinition.Style>
                                    <Style TargetType="dxprg:PropertyDefinition">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=(dxrud:ReportDesigner.Designer).PropertyGridOptions.UseOfficeInspiredPropertyGrid, RelativeSource={RelativeSource Self}}" Value="True">
                                                <Setter Property="EditSettings" Value="{x:Null}" />
                                                <Setter Property="CellTemplate">
                                                    <Setter.Value>
                                                        <DataTemplate>
                                                            <dxe:TrackBarEdit Grid.Column="1" EditValue="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TrackBarEditItemStyle}" />
                                                        </DataTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </dxprg:PropertyDefinition.Style>
                            </dxprg:PropertyDefinition>

                            <dxprg:PropertyDefinition IsReadOnly="False" Path="Shape.NumberOfSides">
                                <dxprg:PropertyDefinition.Style>
                                    <Style TargetType="dxprg:PropertyDefinition">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=(dxrud:ReportDesigner.Designer).PropertyGridOptions.UseOfficeInspiredPropertyGrid, RelativeSource={RelativeSource Self}}" Value="True">
                                                <Setter Property="EditSettings" Value="{x:Null}" />
                                                <Setter Property="CellTemplate">
                                                    <Setter.Value>
                                                        <DataTemplate>
                                                            <dxe:SpinEdit
                                                                Grid.Column="1"
                                                                EditValue="{Binding Value, UpdateSourceTrigger=PropertyChanged}"
                                                                MaxValue="9999"
                                                                MinValue="3"
                                                                NullValue="3"
                                                                Style="{StaticResource ShapeBaseEditItem}" />
                                                        </DataTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </dxprg:PropertyDefinition.Style>
                            </dxprg:PropertyDefinition>

                            <dxprg:PropertyDefinition IsReadOnly="False" Path="Shape.Concavity">
                                <dxprg:PropertyDefinition.Style>
                                    <Style TargetType="dxprg:PropertyDefinition">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=(dxrud:ReportDesigner.Designer).PropertyGridOptions.UseOfficeInspiredPropertyGrid, RelativeSource={RelativeSource Self}}" Value="True">
                                                <Setter Property="EditSettings" Value="{x:Null}" />
                                                <Setter Property="CellTemplate">
                                                    <Setter.Value>
                                                        <DataTemplate>
                                                            <dxe:TrackBarEdit Grid.Column="1" EditValue="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TrackBarEditItemStyle}" />
                                                        </DataTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </dxprg:PropertyDefinition.Style>
                            </dxprg:PropertyDefinition>

                            <dxprg:PropertyDefinition IsReadOnly="False" Path="Shape.TipLength">
                                <dxprg:PropertyDefinition.Style>
                                    <Style TargetType="dxprg:PropertyDefinition">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=(dxrud:ReportDesigner.Designer).PropertyGridOptions.UseOfficeInspiredPropertyGrid, RelativeSource={RelativeSource Self}}" Value="True">
                                                <Setter Property="EditSettings" Value="{x:Null}" />
                                                <Setter Property="CellTemplate">
                                                    <Setter.Value>
                                                        <DataTemplate>
                                                            <dxe:TrackBarEdit Grid.Column="1" EditValue="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TrackBarEditItemStyle}" />
                                                        </DataTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </dxprg:PropertyDefinition.Style>
                            </dxprg:PropertyDefinition>

                            <dxprg:PropertyDefinition IsReadOnly="False" Path="Shape.TailLength">
                                <dxprg:PropertyDefinition.Style>
                                    <Style TargetType="dxprg:PropertyDefinition">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=(dxrud:ReportDesigner.Designer).PropertyGridOptions.UseOfficeInspiredPropertyGrid, RelativeSource={RelativeSource Self}}" Value="True">
                                                <Setter Property="EditSettings" Value="{x:Null}" />
                                                <Setter Property="CellTemplate">
                                                    <Setter.Value>
                                                        <DataTemplate>
                                                            <dxe:TrackBarEdit Grid.Column="1" EditValue="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TrackBarEditItemStyle}" />
                                                        </DataTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </dxprg:PropertyDefinition.Style>
                            </dxprg:PropertyDefinition>

                            <dxprg:PropertyDefinition IsReadOnly="False" Path="Shape.HorizontalLineWidth">
                                <dxprg:PropertyDefinition.Style>
                                    <Style TargetType="dxprg:PropertyDefinition">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=(dxrud:ReportDesigner.Designer).PropertyGridOptions.UseOfficeInspiredPropertyGrid, RelativeSource={RelativeSource Self}}" Value="True">
                                                <Setter Property="EditSettings" Value="{x:Null}" />
                                                <Setter Property="CellTemplate">
                                                    <Setter.Value>
                                                        <DataTemplate>
                                                            <dxe:TrackBarEdit Grid.Column="1" EditValue="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TrackBarEditItemStyle}" />
                                                        </DataTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </dxprg:PropertyDefinition.Style>
                            </dxprg:PropertyDefinition>

                            <dxprg:PropertyDefinition IsReadOnly="False" Path="Shape.VerticalLineWidth">
                                <dxprg:PropertyDefinition.Style>
                                    <Style TargetType="dxprg:PropertyDefinition">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=(dxrud:ReportDesigner.Designer).PropertyGridOptions.UseOfficeInspiredPropertyGrid, RelativeSource={RelativeSource Self}}" Value="True">
                                                <Setter Property="EditSettings" Value="{x:Null}" />
                                                <Setter Property="CellTemplate">
                                                    <Setter.Value>
                                                        <DataTemplate>
                                                            <dxe:TrackBarEdit Grid.Column="1" EditValue="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TrackBarEditItemStyle}" />
                                                        </DataTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </dxprg:PropertyDefinition.Style>
                            </dxprg:PropertyDefinition>

                            <dxprg:PropertyDefinition IsReadOnly="False" Path="Shape.Fillet">
                                <dxprg:PropertyDefinition.Style>
                                    <Style TargetType="dxprg:PropertyDefinition">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=(dxrud:ReportDesigner.Designer).PropertyGridOptions.UseOfficeInspiredPropertyGrid, RelativeSource={RelativeSource Self}}" Value="True">
                                                <Setter Property="EditSettings" Value="{x:Null}" />
                                                <Setter Property="CellTemplate">
                                                    <Setter.Value>
                                                        <DataTemplate>
                                                            <dxe:TrackBarEdit
                                                                Grid.Column="1"
                                                                EditValue="{Binding Value, Mode=TwoWay}"
                                                                EditValueType="{x:Type sys:Int32}"
                                                                Maximum="100"
                                                                Minimum="0" />
                                                        </DataTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </dxprg:PropertyDefinition.Style>
                            </dxprg:PropertyDefinition>

                            <dxprg:PropertyDefinition IsReadOnly="False" Path="Shape.StarPointCount">
                                <dxprg:PropertyDefinition.Resources>
                                    <Style x:Key="ShapeBaseEditItem" TargetType="{x:Type dxe:SpinEdit}">
                                        <Setter Property="MinValue" Value="0" />
                                        <Setter Property="MaxValue" Value="100" />
                                        <Setter Property="IsFloatValue" Value="False" />
                                        <Setter Property="EditValueType" Value="{x:Type sys:Int32}" />
                                    </Style>
                                </dxprg:PropertyDefinition.Resources>
                                <dxprg:PropertyDefinition.Style>
                                    <Style TargetType="dxprg:PropertyDefinition">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=(dxrud:ReportDesigner.Designer).PropertyGridOptions.UseOfficeInspiredPropertyGrid, RelativeSource={RelativeSource Self}}" Value="True">
                                                <Setter Property="EditSettings" Value="{x:Null}" />
                                                <Setter Property="CellTemplate">
                                                    <Setter.Value>
                                                        <DataTemplate>
                                                            <dxe:SpinEdit
                                                                Grid.Column="1"
                                                                EditValue="{Binding Value}"
                                                                MaxValue="9999"
                                                                MinValue="3"
                                                                NullValue="3"
                                                                Style="{StaticResource ShapeBaseEditItem}" />
                                                        </DataTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </dxprg:PropertyDefinition.Style>
                            </dxprg:PropertyDefinition>

                            <dxprg:PropertyDefinition Path="Name">
                                <dxprg:PropertyDefinition.MenuCustomizations>
                                    <dxb:RemoveAction ElementName="{x:Static dxprg:BarItemNames.Reset}" />
                                </dxprg:PropertyDefinition.MenuCustomizations>
                            </dxprg:PropertyDefinition>

                            <dxprg:PropertyDefinition Path="StylePriority" UseTypeConverterToStringConversion="True">
                                <dxprg:PropertyDefinition.MenuCustomizations>
                                    <dxb:RemoveAction ElementName="{x:Static dxprg:BarItemNames.Reset}" />
                                </dxprg:PropertyDefinition.MenuCustomizations>
                            </dxprg:PropertyDefinition>

                            <dxprg:PropertyDefinition Path="StylePriority.UseFont">
                                <dxprg:PropertyDefinition.MenuCustomizations>
                                    <dxb:RemoveAction ElementName="{x:Static dxprg:BarItemNames.Reset}" />
                                </dxprg:PropertyDefinition.MenuCustomizations>
                            </dxprg:PropertyDefinition>

                            <dxprg:PropertyDefinition Path="ControlLocationF" UseTypeConverterToStringConversion="True">
                                <dxprg:PropertyDefinition.MenuCustomizations>
                                    <dxb:RemoveAction ElementName="{x:Static dxprg:BarItemNames.Reset}" />
                                </dxprg:PropertyDefinition.MenuCustomizations>
                            </dxprg:PropertyDefinition>

                            <dxprg:PropertyDefinition Path="ControlLocationF.X">
                                <dxprg:PropertyDefinition.MenuCustomizations>
                                    <dxb:RemoveAction ElementName="{x:Static dxprg:BarItemNames.Reset}" />
                                </dxprg:PropertyDefinition.MenuCustomizations>
                            </dxprg:PropertyDefinition>

                            <dxprg:PropertyDefinition Path="ControlLocationF.Y">
                                <dxprg:PropertyDefinition.MenuCustomizations>
                                    <dxb:RemoveAction ElementName="{x:Static dxprg:BarItemNames.Reset}" />
                                </dxprg:PropertyDefinition.MenuCustomizations>
                            </dxprg:PropertyDefinition>

                            <dxprg:PropertyDefinition Path="ControlSizeF" UseTypeConverterToStringConversion="True">
                                <dxprg:PropertyDefinition.MenuCustomizations>
                                    <dxb:RemoveAction ElementName="{x:Static dxprg:BarItemNames.Reset}" />
                                </dxprg:PropertyDefinition.MenuCustomizations>
                            </dxprg:PropertyDefinition>

                            <dxprg:PropertyDefinition Path="ControlSizeF.Width">
                                <dxprg:PropertyDefinition.MenuCustomizations>
                                    <dxb:RemoveAction ElementName="{x:Static dxprg:BarItemNames.Reset}" />
                                </dxprg:PropertyDefinition.MenuCustomizations>
                            </dxprg:PropertyDefinition>

                            <dxprg:PropertyDefinition Path="ControlSizeF.Height">
                                <dxprg:PropertyDefinition.MenuCustomizations>
                                    <dxb:RemoveAction ElementName="{x:Static dxprg:BarItemNames.Reset}" />
                                </dxprg:PropertyDefinition.MenuCustomizations>
                            </dxprg:PropertyDefinition>

                            <dxprg:PropertyDefinition Path="BandHeightF">
                                <dxprg:PropertyDefinition.MenuCustomizations>
                                    <dxb:RemoveAction ElementName="{x:Static dxprg:BarItemNames.Reset}" />
                                </dxprg:PropertyDefinition.MenuCustomizations>
                            </dxprg:PropertyDefinition>

                            <dxprg:PropertyGridControl.MenuCustomizations>
                                <dxb:RemoveAction ElementName="{x:Static dxprg:BarItemNames.Refresh}" />
                            </dxprg:PropertyGridControl.MenuCustomizations>
                        </propertygrid:ReportDesignerPropertyGrid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PopupTreeListEdit.DefaultStyleBase" BasedOn="{dx:TargetStaticResource PopupBaseEdit.DefaultStyleBase, TargetDictionary={dxi:ThemeResourceDictionary Path='Core/Editors/Editors.Generic.xaml'}}" TargetType="{x:Type dxrude:PopupTreeListEdit}">
        <Setter Property="PopupContentTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <dxg:GridControl x:Name="PART_GridControl" ShowBorder="False">
                        <dxg:GridControl.View>
                            <dxg:TreeListView
                                AllowEditing="False"
                                AutoWidth="True"
                                ExpandCollapseNodesOnNavigation="True"
                                ShowColumnHeaders="False"
                                ShowHorizontalLines="False"
                                ShowIndicator="False"
                                ShowVerticalLines="False"
                                TreeDerivationMode="ChildNodesSelector"
                                VerticalScrollbarVisibility="Auto">
                                <dxmvvm:Interaction.Behaviors>
                                    <dxdai:ExpandTreeListNodeBehavior Depth="{Binding Path=AssociatedObject.(dxe:BaseEdit.OwnerEdit).TreeListAutoExpandDepth, RelativeSource={RelativeSource Self}}" />
                                </dxmvvm:Interaction.Behaviors>
                            </dxg:TreeListView>
                        </dxg:GridControl.View>
                    </dxg:GridControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ToolTip" Value="{Binding DisplayText, RelativeSource={RelativeSource Self}, Converter={dxrudi:EmptyStringToNullConverter}}" />
    </Style>
    <Style x:Key="ReportWizardControl.DefaultStyleBase" BasedOn="{dx:TargetStaticResource DataSourceWizardControlBase.DefaultStyleBase, TargetDictionary={dxi:ThemeResourceDictionary Path='DataAccess/Generic.DataAccess.xaml'}}" TargetType="dxrudw:ReportWizardControl">
        <Setter Property="PageTemplateSelector">
            <Setter.Value>
                <dxrudw:ReportWizardPageTemplateSelector />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FlyoutColorChooserControl.DefaultStyleBase" TargetType="{x:Type dxrudwi:FlyoutColorChooserControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxrudwi:FlyoutColorChooserControl}">
                    <Grid Margin="6">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <dxe:ColorChooser
                            Width="300"
                            Margin="0"
                            Padding="0"
                            Color="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Converter={dxrudi:DrawingColorToMediaColorConverter}}" />
                        <StackPanel
                            Grid.Row="1"
                            Margin="0,9,0,0"
                            HorizontalAlignment="Right"
                            Orientation="Horizontal">
                            <Button
                                MinWidth="75"
                                Margin="3,3,3,0"
                                Command="{Binding ApplyCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                Content="Ok" />
                            <Button
                                MinWidth="75"
                                Margin="3,3,0,0"
                                Command="{Binding CancelCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                Content="Cancel" />
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TemplatesGallery.DefaultStyleBase" TargetType="{x:Type dxrudwi:TemplatesGallery}">
        <Style.Resources>
            <Style x:Key="EmptyButton" TargetType="Button">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid Background="Transparent">
                                <ContentPresenter
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="Focusable" Value="False" />
            </Style>
            <dxrudwi:ColumnScrollPanelVisibilityConverter x:Key="ColumnScrollPanelVisibilityConverter" />
        </Style.Resources>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxrudwi:TemplatesGallery}">
                    <Grid x:Name="rootPanel" VerticalAlignment="Stretch" Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                        <Button
                            x:Name="prevButton"
                            Grid.Column="0"
                            VerticalAlignment="Stretch"
                            VerticalContentAlignment="Center"
                            DockPanel.Dock="Left"
                            Opacity="0"
                            Style="{StaticResource EmptyButton}"
                            Visibility="{TemplateBinding Pages, Converter={StaticResource ColumnScrollPanelVisibilityConverter}}">
                            <Image
                                Opacity="1"
                                Source="{dxrud:ReportDesignerResourceImage ResourceName=Images/Svg/Wizard/Prev.svg}"
                                Stretch="None"
                                Visibility="{TemplateBinding Pages, Converter={StaticResource ColumnScrollPanelVisibilityConverter}}" />
                        </Button>
                        <Button
                            x:Name="nextButton"
                            Grid.Column="2"
                            VerticalAlignment="Stretch"
                            VerticalContentAlignment="Center"
                            DockPanel.Dock="Right"
                            Opacity="0"
                            Style="{StaticResource EmptyButton}">
                            <Image
                                Opacity="1"
                                Source="{dxrud:ReportDesignerResourceImage ResourceName=Images/Svg/Wizard/Next.svg}"
                                Stretch="None"
                                Visibility="{TemplateBinding Pages, Converter={StaticResource ColumnScrollPanelVisibilityConverter}}" />
                        </Button>
                        <dxrudwi:ColumnScrollPanel x:Name="PART_ColumnsPanel" Grid.Column="1">
                            <dx:DXBorder x:Name="scrollViewerContainer">
                                <ScrollViewer
                                    x:Name="PART_ScrollViewer"
                                    Focusable="False"
                                    HorizontalScrollBarVisibility="Hidden"
                                    VerticalScrollBarVisibility="Disabled">
                                    <StackPanel Orientation="Horizontal">
                                        <dx:DXBorder Width="10000" />
                                        <dxrudwi:Carousel
                                            x:Name="PART_Carousel"
                                            VerticalAlignment="Center"
                                            Focusable="False"
                                            ItemsSource="{TemplateBinding ItemsSource}"
                                            SelectedItem="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
                                        <dx:DXBorder Width="10000" />
                                    </StackPanel>
                                </ScrollViewer>
                            </dx:DXBorder>
                            <ItemsControl
                                x:Name="pageButtonsControl"
                                Margin="0,0,0,0"
                                HorizontalAlignment="Center"
                                Focusable="False"
                                ItemsSource="{TemplateBinding Pages}"
                                Visibility="{TemplateBinding Pages, Converter={StaticResource ColumnScrollPanelVisibilityConverter}}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <RadioButton Focusable="False" IsChecked="{Binding IsChecked, Mode=TwoWay}">
                                            <RadioButton.Template>
                                                <ControlTemplate TargetType="{x:Type RadioButton}">
                                                    <Grid Margin="2,0" Background="Transparent">
                                                        <Ellipse
                                                            x:Name="optionMark"
                                                            MinWidth="8"
                                                            MinHeight="8"
                                                            Opacity="1"
                                                            Stroke="#838383" />
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsChecked" Value="true">
                                                            <Setter TargetName="optionMark" Property="Fill" Value="#838383" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </RadioButton.Template>
                                        </RadioButton>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </dxrudwi:ColumnScrollPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="prevButton" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.4" />
                                        <DoubleAnimation Storyboard.TargetName="nextButton" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.4" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="prevButton" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.4" />
                                        <DoubleAnimation Storyboard.TargetName="nextButton" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.4" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Carousel.DefaultStyleBase" BasedOn="{dx:TargetStaticResource ListBoxEdit.DefaultStyleBase, TargetDictionary={dxi:ThemeResourceDictionary Path='Core/Editors/Editors.Generic.xaml'}}" TargetType="{x:Type dxrudwi:Carousel}">
        <Style.Resources>
            <Style x:Key="EmptyButton" TargetType="ContentControl">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ContentControl">
                            <Grid Background="Transparent">
                                <ContentPresenter
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="Focusable" Value="False" />
            </Style>
        </Style.Resources>
        <Setter Property="AllowItemHighlighting" Value="True" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ShowBorder" Value="False" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type dxe:ListBoxEditItem}">
                    <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <ContentControl>
                                    <dxdai:DoubleClickCommandExecutor Command="{Binding Path=AssociatedObject.(dxda:DataSourceWizardControlBase.NavigationModel).NextCommand, RelativeSource={RelativeSource Self}}" />
                                </ContentControl>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Margin="6">
                        <Image
                            Width="200"
                            RenderOptions.BitmapScalingMode="Fant"
                            RenderOptions.EdgeMode="Aliased"
                            Source="{Binding PreviewImage, Converter={dxrudi:ImageToImageSourceConverter}}"
                            Stretch="Uniform" />
                        <TextBlock Margin="0,6,0,0" Text="{Binding Name}" TextAlignment="Center" />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ReportDesignerRichEditControl.DefaultStyleBase" TargetType="dxrud:ReportDesignerRichEditControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxrud:ReportDesignerRichEditControl">
                    <dxrude:DialogEditorView>
                        <dxre:RichEditControl x:Name="PART_RichEditControl" ActiveViewType="Simple" CommandBarStyle="Ribbon">
                            <dxre:RichEditControl.MenuCustomizations>
                                <dxremenu:RichEditMenuCustomization>
                                    <dxremenu:RemoveRichEditCommandAction Id="{x:Static MemberType=dxrecore:RichEditCommandId, Member=IncreaseIndent}" />
                                    <dxremenu:RemoveRichEditCommandAction Id="{x:Static MemberType=dxrecore:RichEditCommandId, Member=DecreaseIndent}" />
                                    <dxremenu:RemoveRichEditCommandAction Id="{x:Static MemberType=dxrecore:RichEditCommandId, Member=CreateHyperlink}" />
                                    <dxremenu:RemoveRichEditCommandAction Id="{x:Static MemberType=dxrecore:RichEditCommandId, Member=CreateBookmark}" />
                                    <dxremenu:RemoveRichEditCommandAction Id="{x:Static MemberType=dxrecore:RichEditCommandId, Member=ShowParagraphForm}" />
                                    <dxremenu:RemoveRichEditCommandAction Id="{x:Static MemberType=dxrecore:RichEditCommandId, Member=NewCommentContentMenu}" />
                                </dxremenu:RichEditMenuCustomization>
                            </dxre:RichEditControl.MenuCustomizations>

                            <dxre:RichEditControl.RibbonActions>
                                <dxb:UpdateAction ElementName="{x:Static dxre:DefaultBarItemNames.RibbonControl}" Property="{x:Static dxr:RibbonControl.ToolbarShowCustomizationButtonProperty}" Value="False" />
                                <dxb:UpdateAction ElementName="{x:Static dxre:DefaultBarItemNames.RibbonControl}" Property="{x:Static dxr:RibbonControl.AllowCustomizationProperty}" Value="False" />
                                <dxb:UpdateAction ElementName="{x:Static dxre:DefaultBarItemNames.RibbonControl}" Property="{x:Static dxr:RibbonControl.AllowMinimizeRibbonProperty}" Value="False" />
                                <dxb:BarButtonItem dxb:CollectionAction.ContainerName="{x:Static dxre:DefaultBarItemNames.RibbonControl}" dxb:CollectionAction.Index="0" Style="{DynamicResource {dxret:LWKey BarItemStyle.RibbonItem_File_Common_Undo}}" />
                                <dxb:BarButtonItem dxb:CollectionAction.ContainerName="{x:Static dxre:DefaultBarItemNames.RibbonControl}" dxb:CollectionAction.Index="1" Style="{DynamicResource {dxret:LWKey BarItemStyle.RibbonItem_File_Common_Redo}}" />

                                <dxb:UpdateAction ElementName="{x:Static dxre:DefaultBarItemNames.RibbonPage_Home}" PropertyName="Caption" Value="Text Settings" />
                                <dxb:RemoveAction ElementName="{x:Static dxre:DefaultBarItemNames.RibbonPage_File}" />
                                <dxb:RemoveAction ElementName="{x:Static dxre:DefaultBarItemNames.RibbonGroup_Home_Styles}" />
                                <dxb:RemoveAction ElementName="{x:Static dxre:DefaultBarItemNames.RibbonItem_Home_Styles_GalleryStyle}" />
                                <dxb:RemoveAction ElementName="{x:Static dxre:DefaultBarItemNames.RibbonCategory_HeaderFooterTools}" />
                                <!--<dxb:RemoveAction ElementName="{x:Static dxre:DefaultBarItemNames.RibbonCategory_TableTools}" />-->
                                <!--<dxb:RemoveAction ElementName="{x:Static dxre:DefaultBarItemNames.RibbonGroup_Insert_Tables}" />-->
                                <dxb:RemoveAction ElementName="{x:Static dxre:DefaultBarItemNames.RibbonCategory_PictureTools}" />
                                <dxb:RemoveAction ElementName="{x:Static dxre:DefaultBarItemNames.RibbonGroup_File_Info}" />
                                <dxb:RemoveAction ElementName="{x:Static dxre:DefaultBarItemNames.RibbonItem_File_Common_New}" />
                                <dxb:RemoveAction ElementName="{x:Static dxre:DefaultBarItemNames.RibbonItem_File_Common_Open}" />
                                <dxb:RemoveAction ElementName="{x:Static dxre:DefaultBarItemNames.RibbonItem_File_Common_Save}" />
                                <dxb:RemoveAction ElementName="{x:Static dxre:DefaultBarItemNames.RibbonItem_File_Common_SaveAs}" />
                                <dxb:RemoveAction ElementName="{x:Static dxre:DefaultBarItemNames.RibbonItem_File_Common_QuickPrint}" />
                                <dxb:RemoveAction ElementName="{x:Static dxre:DefaultBarItemNames.RibbonItem_File_Common_Print}" />
                                <dxb:RemoveAction ElementName="{x:Static dxre:DefaultBarItemNames.RibbonItem_File_Common_PrintPreview}" />
                                <dxb:UpdateAction ElementName="{x:Static dxre:DefaultBarItemNames.RibbonPage_Home}" PropertyName="IsSelected" Value="True" />
                                <dxb:RemoveAction ElementName="{x:Static dxre:DefaultBarItemNames.RibbonGroup_Home_Paragraph}" />
                                <dxb:RemoveAction ElementName="{x:Static dxre:DefaultBarItemNames.RibbonGroup_Home_Editing}" />
                                <dxb:RemoveAction ElementName="{x:Static dxre:DefaultBarItemNames.RibbonItem_Home_Clipboard_PasteSpecial}" />
                                <dxb:RemoveAction ElementName="{x:Static dxre:DefaultBarItemNames.RibbonGroup_Insert_Pages}" />
                                <dxb:RemoveAction ElementName="{x:Static dxre:DefaultBarItemNames.RibbonGroup_Insert_Links}" />
                                <dxb:RemoveAction ElementName="{x:Static dxre:DefaultBarItemNames.RibbonGroup_Insert_HeaderFooter}" />
                                <dxb:UpdateAction ElementName="{x:Static dxre:DefaultBarItemNames.RibbonControl}" PropertyName="ShowApplicationButton" Value="False" />
                                <dxb:UpdateAction ElementName="{x:Static dxre:DefaultBarItemNames.RibbonPage_PageLayout}" PropertyName="IsVisible" Value="False" />
                                <dxb:UpdateAction ElementName="{x:Static dxre:DefaultBarItemNames.RibbonPage_References}" PropertyName="IsVisible" Value="False" />
                                <dxb:UpdateAction ElementName="{x:Static dxre:DefaultBarItemNames.RibbonPage_MailMerge}" PropertyName="IsVisible" Value="False" />
                                <dxb:UpdateAction ElementName="{x:Static dxre:DefaultBarItemNames.RibbonPage_Review}" PropertyName="IsVisible" Value="False" />
                                <dxb:UpdateAction ElementName="{x:Static dxre:DefaultBarItemNames.RibbonPage_View}" PropertyName="IsVisible" Value="False" />
                            </dxre:RichEditControl.RibbonActions>
                        </dxre:RichEditControl>
                    </dxrude:DialogEditorView>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GroupSortControl.DefaultStyleBase" TargetType="dxrudgs:GroupSortControl">
        <Setter Property="ReportModel" Value="{Binding Path=(dxrud:ReportDesigner.Document).ReportModel, RelativeSource={RelativeSource Self}}" />

        <Setter Property="MessageBoxServiceTemplate" Value="{DynamicResource {dxrudt:LWKey ReportDesigner.DefaultMessageBoxServiceTemplate}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxrudgs:GroupSortControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <dxb:ToolBarControl
                            AllowCustomizationMenu="False"
                            AllowHide="False"
                            BarItemDisplayMode="ContentAndGlyph"
                            GlyphSize="Small">
                            <dxb:BarSplitButtonItem
                                ActAsDropDown="True"
                                Content="{dxrudl:ReportDesignerStringId StringId=GroupAndSort_AddGroup}"
                                Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/GroupAndSort/AddGroup.svg'}"
                                IsEnabled="{Binding DataSource, RelativeSource={RelativeSource TemplatedParent}, Converter={dxrudi:HasItemsConverter}}"
                                LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/GroupAndSort/AddGroup.svg'}">
                                <dxb:BarSplitButtonItem.PopupControl>
                                    <dxb:PopupControlContainer>
                                        <dxg:GridControl
                                            Name="groupFieldList"
                                            Width="400"
                                            MinHeight="250"
                                            MaxHeight="300"
                                            dx:DXSerializer.SerializationID="groupFieldList"
                                            ItemsSource="{TemplateBinding DataSource}"
                                            SelectionMode="Row"
                                            ShowBorder="False">
                                            <dxg:GridControl.View>
                                                <dxg:TreeListView
                                                    AllowEditing="False"
                                                    AutoWidth="True"
                                                    ChildNodesPath="Children"
                                                    ExpandCollapseNodesOnNavigation="True"
                                                    HorizontalScrollbarVisibility="Auto"
                                                    ShowColumnHeaders="False"
                                                    ShowHorizontalLines="False"
                                                    ShowIndicator="False"
                                                    ShowVerticalLines="False"
                                                    TreeDerivationMode="ChildNodesSelector"
                                                    VerticalScrollbarVisibility="Auto">
                                                    <dxmvvm:Interaction.Behaviors>
                                                        <dxdai:ExpandTreeListNodeBehavior />
                                                    </dxmvvm:Interaction.Behaviors>
                                                </dxg:TreeListView>
                                            </dxg:GridControl.View>
                                            <dxg:GridControl.Columns>
                                                <dxg:GridColumn FieldName="DisplayName" CellTemplate="{DynamicResource {dxrudt:LWKey ReportDesigner.FieldListNodeTemplate}}" />
                                            </dxg:GridControl.Columns>
                                        </dxg:GridControl>
                                        <dxmvvm:Interaction.Behaviors>
                                            <dxrudgs:ExecuteCommandOnFieldSelectedBehavior Command="{Binding AddGroupCommand, RelativeSource={RelativeSource TemplatedParent}}" SelectedItem="{Binding SelectedItem, ElementName=groupFieldList, Mode=TwoWay}" />
                                        </dxmvvm:Interaction.Behaviors>
                                    </dxb:PopupControlContainer>
                                </dxb:BarSplitButtonItem.PopupControl>
                            </dxb:BarSplitButtonItem>

                            <dxb:BarSplitButtonItem
                                ActAsDropDown="True"
                                Content="{dxrudl:ReportDesignerStringId StringId=GroupAndSort_AddSort}"
                                Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/GroupAndSort/AddSort.svg'}"
                                IsEnabled="{Binding DataSource, RelativeSource={RelativeSource TemplatedParent}, Converter={dxrudi:HasItemsConverter}}"
                                LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/GroupAndSort/AddSort.svg'}">
                                <dxb:BarSplitButtonItem.PopupControl>
                                    <dxb:PopupControlContainer>
                                        <dxg:GridControl
                                            Name="sortFieldList"
                                            Width="400"
                                            MinHeight="250"
                                            MaxHeight="300"
                                            dx:DXSerializer.SerializationID="sortFieldList"
                                            ItemsSource="{TemplateBinding DataSource}"
                                            SelectionMode="Row"
                                            ShowBorder="False">
                                            <dxg:GridControl.View>
                                                <dxg:TreeListView
                                                    AllowEditing="False"
                                                    AutoWidth="True"
                                                    ChildNodesPath="Children"
                                                    ExpandCollapseNodesOnNavigation="True"
                                                    ShowColumnHeaders="False"
                                                    ShowHorizontalLines="False"
                                                    ShowIndicator="False"
                                                    ShowVerticalLines="False"
                                                    TreeDerivationMode="ChildNodesSelector"
                                                    VerticalScrollbarVisibility="Auto">
                                                    <dxmvvm:Interaction.Behaviors>
                                                        <dxdai:ExpandTreeListNodeBehavior />
                                                    </dxmvvm:Interaction.Behaviors>
                                                </dxg:TreeListView>
                                            </dxg:GridControl.View>
                                            <dxg:GridControl.Columns>
                                                <dxg:GridColumn FieldName="DisplayName" CellTemplate="{DynamicResource {dxrudt:LWKey ReportDesigner.FieldListNodeTemplate}}" />
                                            </dxg:GridControl.Columns>
                                        </dxg:GridControl>
                                        <dxmvvm:Interaction.Behaviors>
                                            <dxrudgs:ExecuteCommandOnFieldSelectedBehavior Command="{Binding AddSortCommand, RelativeSource={RelativeSource TemplatedParent}}" SelectedItem="{Binding SelectedItem, ElementName=sortFieldList, Mode=TwoWay}" />
                                        </dxmvvm:Interaction.Behaviors>
                                    </dxb:PopupControlContainer>
                                </dxb:BarSplitButtonItem.PopupControl>
                            </dxb:BarSplitButtonItem>

                            <dxb:BarButtonItem
                                Command="{Binding RemoveCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                Content="{dxrudl:ReportDesignerStringId StringId=Remove}"
                                Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/GroupAndSort/Delete.svg'}"
                                LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/GroupAndSort/Delete.svg'}" />
                            <dxb:BarButtonItem
                                Command="{Binding MoveUpCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                Content="{dxrudl:ReportDesignerStringId StringId=MoveUp}"
                                Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/GroupAndSort/MoveUp.svg'}"
                                LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/GroupAndSort/MoveUp.svg'}" />
                            <dxb:BarButtonItem
                                Command="{Binding MoveDownCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                Content="{dxrudl:ReportDesignerStringId StringId=MoveDown}"
                                Glyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/GroupAndSort/MoveDown.svg'}"
                                LargeGlyph="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/GroupAndSort/MoveDown.svg'}" />
                        </dxb:ToolBarControl>

                        <dxg:GridControl
                            Grid.Row="1"
                            dx:DXSerializer.SerializationID="GroupSortPanelGridControl"
                            CurrentItem="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                            ItemsSource="{TemplateBinding Items}"
                            UseLayoutRounding="True">
                            <dxg:GridControl.View>
                                <dxg:TreeListView
                                    Name="PART_TreeList"
                                    AutoExpandAllNodes="True"
                                    EditorShowMode="MouseDownFocused"
                                    EnableImmediatePosting="True"
                                    KeyFieldName="Id"
                                    ParentFieldName="ParentId"
                                    ShowColumnHeaders="True">
                                    <dxmvvm:Interaction.Behaviors>
                                        <dxdai:ExpandTreeListNodeBehavior Depth="{x:Static sys:Int32.MaxValue}" />
                                        <dxrudgs:ShowBandEditorUpdateBehavior />
                                    </dxmvvm:Interaction.Behaviors>
                                </dxg:TreeListView>
                            </dxg:GridControl.View>
                            <dxg:GridControl.Columns>
                                <dxg:GridColumn FieldName="BindingData" Width="300" Header="{dxrudl:ReportDesignerStringId StringId=Field}">
                                    <dxg:GridColumn.CellStyle>
                                        <Style TargetType="dxg:CellEditor">
                                            <Setter Property="IsEnabled" Value="{Binding RowData.Row.BindingData.Source, Converter={dxmvvm:ObjectToBooleanConverter}}" />
                                        </Style>
                                    </dxg:GridColumn.CellStyle>

                                    <dxg:GridColumn.CellTemplate>
                                        <DataTemplate>
                                            <dxrude:PopupTreeListEdit
                                                x:Name="PART_Editor"
                                                ChildNodesPath="Children"
                                                DisplayTextConverter="{dxrudgsi:GroupSortItemToDisplayNameConverter}"
                                                ItemsSource="{Binding DataSource, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxrudgs:GroupSortControl}}"
                                                PopupDisplayMember="DisplayName"
                                                PopupSelectionValidator="{dxrude:BindingDataPopupSelectionValidator}"
                                                TreeListCellTemplate="{DynamicResource {dxrudt:LWKey ReportDesigner.FieldListNodeTemplate}}"
                                                ValueMember="BindingData">
                                                <dxmvvm:Interaction.Behaviors>
                                                    <dxrudi:EffectiveDataSourceHierarchicalPathProviderBehavior />
                                                </dxmvvm:Interaction.Behaviors>
                                            </dxrude:PopupTreeListEdit>
                                        </DataTemplate>
                                    </dxg:GridColumn.CellTemplate>
                                </dxg:GridColumn>
                                <dxg:GridColumn FieldName="SortOrder" Header="{dxrudl:ReportDesignerStringId StringId=SortOrder}">
                                    <dxg:GridColumn.EditSettings>
                                        <dxe:ComboBoxEditSettings
                                            DisplayMember="DisplayName"
                                            IsTextEditable="False"
                                            ItemsSource="{dxrudi:XRColumnSortOrdersProvider}"
                                            ValueMember="SortOrder" />
                                    </dxg:GridColumn.EditSettings>
                                </dxg:GridColumn>
                                <dxg:GridColumn FieldName="ShowHeader" Header="{dxrudl:ReportDesignerStringId StringId=GroupAndSort_ShowHeader}">
                                    <dxg:GridColumn.EditSettings>
                                        <dxe:CheckEditSettings />
                                    </dxg:GridColumn.EditSettings>
                                </dxg:GridColumn>
                                <dxg:GridColumn FieldName="ShowFooter" Header="{dxrudl:ReportDesignerStringId StringId=GroupAndSort_ShowFooter}">
                                    <dxg:GridColumn.CellStyle>
                                        <Style TargetType="dxg:CellEditor">
                                            <Setter Property="IsEnabled" Value="{Binding RowData.Row.ShowHeader}" />
                                        </Style>
                                    </dxg:GridColumn.CellStyle>
                                    <dxg:GridColumn.EditSettings>
                                        <dxe:CheckEditSettings />
                                    </dxg:GridColumn.EditSettings>
                                </dxg:GridColumn>
                            </dxg:GridControl.Columns>
                        </dxg:GridControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PivotGridDesigner.DefaultStyleBase" TargetType="{x:Type dxrudpgd:PivotGridDesigner}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxrudpgd:PivotGridDesigner}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid>
                            <Grid.Resources>
                                <Style x:Key="NavBarItemStyle" TargetType="{x:Type dxn:NavBarItem}">
                                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <TextBlock Margin="35,3,0,3" Text="{Binding Header}" />
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                                <Style x:Key="NavBarGroupStyle" TargetType="{x:Type dxn:NavBarGroup}">
                                    <Setter Property="HeaderTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <StackPanel DataContext="{Binding DataContext}" Orientation="Horizontal">
                                                    <dx:DXImage Margin="2" Source="{Binding Icon}" />
                                                    <TextBlock
                                                        Margin="7,0,0,0"
                                                        VerticalAlignment="Center"
                                                        FontSize="18"
                                                        Text="{Binding Header}" />
                                                </StackPanel>
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="ItemStyle" Value="{StaticResource NavBarItemStyle}" />
                                </Style>
                            </Grid.Resources>
                            <dxn:NavBarControl
                                x:Name="PART_NavBarControl"
                                Width="250"
                                GroupDescription="Group"
                                ItemStyle="{StaticResource NavBarGroupStyle}"
                                ItemsSource="{Binding Views, RelativeSource={RelativeSource TemplatedParent}}"
                                SelectedGroup="{Binding SelectedGroup, RelativeSource={RelativeSource TemplatedParent}}">
                                <dxn:NavBarControl.View>
                                    <dxn:ExplorerBarView />
                                </dxn:NavBarControl.View>
                            </dxn:NavBarControl>
                        </Grid>
                        <Grid Grid.Column="1">
                            <ContentControl Grid.Row="1" Content="{TemplateBinding SelectedPageViewModel}" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="OpenFileDialogServiceTemplate" Value="{DynamicResource {dxrudt:LWKey ReportDesigner.DefaultOpenFileDialogServiceTemplate}}" />
        <Setter Property="SaveFileDialogServiceTemplate" Value="{DynamicResource {dxrudt:LWKey ReportDesigner.DefaultSaveFileDialogServiceTemplate}}" />
        <Setter Property="MessageBoxServiceTemplate" Value="{DynamicResource {dxrudt:LWKey ReportDesigner.DefaultMessageBoxServiceTemplate}}" />
    </Style>
    <!--#endregion DEFAULT STYLES-->
</ResourceDictionary>