<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:barcode="clr-namespace:DevExpress.XtraPrinting.BarCode;assembly=DevExpress.Printing.v24.1.Core"
    xmlns:barcodenative="clr-namespace:DevExpress.XtraPrinting.BarCode.Native;assembly=DevExpress.Printing.v24.1.Core"
    xmlns:drawing2d="clr-namespace:System.Drawing.Drawing2D;assembly=System.Drawing"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
    xmlns:dxda="http://schemas.devexpress.com/winfx/2008/xaml/dataaccess"
    xmlns:dxdat="http://schemas.devexpress.com/winfx/2008/xaml/dataaccess/themekeys"
    xmlns:dxdai="http://schemas.devexpress.com/winfx/2008/xaml/dataaccess/internal"
    xmlns:dxdaw="http://schemas.devexpress.com/winfx/2008/xaml/dataaccess"
    xmlns:dxdiag="http://schemas.devexpress.com/winfx/2008/xaml/diagram"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
    xmlns:dxpt="http://schemas.devexpress.com/winfx/2008/xaml/printing/themekeys"
    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
    xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol"
    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
    xmlns:dxrud="clr-namespace:DevExpress.Xpf.Reports.UserDesigner;assembly=DevExpress.Xpf.ReportDesigner.v24.1"
    xmlns:dxrudcd="clr-namespace:DevExpress.Xpf.Reports.UserDesigner.ChartDesigner;assembly=DevExpress.Xpf.ReportDesigner.v24.1"
    xmlns:dxrude="clr-namespace:DevExpress.Xpf.Reports.UserDesigner.Editors;assembly=DevExpress.Xpf.ReportDesigner.v24.1"
    xmlns:dxrudei="clr-namespace:DevExpress.Xpf.Reports.UserDesigner.Editors.Native;assembly=DevExpress.Xpf.ReportDesigner.v24.1"
    xmlns:dxrudfli="clr-namespace:DevExpress.Xpf.Reports.UserDesigner.FieldList.Native;assembly=DevExpress.Xpf.ReportDesigner.v24.1"
    xmlns:dxrudi="clr-namespace:DevExpress.Xpf.Reports.UserDesigner.Native;assembly=DevExpress.Xpf.ReportDesigner.v24.1"
    xmlns:dxrudl="clr-namespace:DevExpress.Xpf.Reports.UserDesigner.Localization;assembly=DevExpress.Xpf.ReportDesigner.v24.1"
    xmlns:dxrudpgd="clr-namespace:DevExpress.Xpf.Reports.UserDesigner.PivotGridDesigner;assembly=DevExpress.Xpf.ReportDesigner.v24.1"
    xmlns:dxrudt="clr-namespace:DevExpress.Xpf.Reports.UserDesigner.Themes;assembly=DevExpress.Xpf.ReportDesigner.v24.1"
    xmlns:dxrudw="clr-namespace:DevExpress.Xpf.Reports.UserDesigner.ReportWizard;assembly=DevExpress.Xpf.ReportDesigner.v24.1"
    xmlns:forms="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"
    xmlns:gauges="clr-namespace:DevExpress.XtraGauges.Core.Customization;assembly=DevExpress.XtraGauges.v24.1.Core"
    xmlns:printingcorereportsui="clr-namespace:DevExpress.XtraReports.UI;assembly=DevExpress.Printing.v24.1.Core"
    xmlns:printingthemes="http://schemas.devexpress.com/winfx/2008/xaml/printing/themekeys"
    xmlns:propertyeditors="clr-namespace:DevExpress.Xpf.Reports.UserDesigner.Parts.PropertyEditors;assembly=DevExpress.Xpf.ReportDesigner.v24.1"
    xmlns:propertygrid="clr-namespace:DevExpress.Xpf.Reports.UserDesigner.PropertyGrid;assembly=DevExpress.Xpf.ReportDesigner.v24.1"
    xmlns:reportexplorernative="clr-namespace:DevExpress.Xpf.Reports.UserDesigner.ReportExplorer.Native;assembly=DevExpress.Xpf.ReportDesigner.v24.1"
    xmlns:reportsui="clr-namespace:DevExpress.XtraReports.UI;assembly=DevExpress.XtraReports.v24.1"
    xmlns:xpc="clr-namespace:DevExpress.XtraPrinting;assembly=DevExpress.Printing.v24.1.Core"
    xmlns:xpd="clr-namespace:DevExpress.XtraPrinting;assembly=DevExpress.Data.v24.1"
    xmlns:xrdiag="clr-namespace:DevExpress.Xpf.Reports.UserDesigner.XRDiagram;assembly=DevExpress.Xpf.ReportDesigner.v24.1"
    xmlns:local="http://schemas.devexpress.com/winfx/2008/xaml/reports/userdesigner/internal">

    <DataTemplate x:Key="pressed">
        <Grid HorizontalAlignment="Stretch" Width="Auto">
            <dx:DXBorder x:Name="pressed_border1" Background="#FF5379AE" CornerRadius="2" Padding="1" SnapsToDevicePixels="True">
                <dx:DXBorder x:Name="pressed_border2" CornerRadius="1" Height="Auto" Padding="1" SnapsToDevicePixels="True" Width="Auto">
                    <dx:DXBorder.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FF7B9CCB" Offset="0" />
                            <GradientStop Color="#FF7B9CCB" Offset="1" />
                            <GradientStop Color="#FF9EBBE1" Offset="0.5" />
                        </LinearGradientBrush>
                    </dx:DXBorder.Background>
                    <dx:DXBorder x:Name="pressed_border3" Background="#FF7B9CCB" CornerRadius="1" Height="Auto" SnapsToDevicePixels="True" Width="Auto" />
                </dx:DXBorder>
            </dx:DXBorder>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="HideBorderSide">
                    <VisualState x:Name="None" />
                    <VisualState x:Name="Left">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pressed_shadow" Storyboard.TargetProperty="Margin" dxi:ValueSetter.Thickness="0,2,1,0"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pressed_border1" Storyboard.TargetProperty="Margin" dxi:ValueSetter.Thickness="0,1,1,1"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pressed_border1" Storyboard.TargetProperty="Padding" dxi:ValueSetter.Thickness="0,1,1,1"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pressed_shadow" Storyboard.TargetProperty="CornerRadius" dxi:ValueSetter.CornerRadius="0,2,2,0"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pressed_border1" Storyboard.TargetProperty="CornerRadius" dxi:ValueSetter.CornerRadius="0,2,2,0"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pressed_border2" Storyboard.TargetProperty="CornerRadius" dxi:ValueSetter.CornerRadius="0,1,1,0"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pressed_border3" Storyboard.TargetProperty="CornerRadius" dxi:ValueSetter.CornerRadius="0,1,1,0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Right">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pressed_border1" Storyboard.TargetProperty="Margin" dxi:ValueSetter.Thickness="1,1,0,1"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pressed_shadow" Storyboard.TargetProperty="CornerRadius" dxi:ValueSetter.CornerRadius="2,0,0,2"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pressed_border1" Storyboard.TargetProperty="CornerRadius" dxi:ValueSetter.CornerRadius="2,0,0,2"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pressed_border2" Storyboard.TargetProperty="CornerRadius" dxi:ValueSetter.CornerRadius="1,0,0,1"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pressed_border3" Storyboard.TargetProperty="CornerRadius" dxi:ValueSetter.CornerRadius="1,0,0,1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Top">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pressed_shadow" Storyboard.TargetProperty="Margin" dxi:ValueSetter.Thickness="2,0,1,1"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pressed_border1" Storyboard.TargetProperty="Margin" dxi:ValueSetter.Thickness="1,0,1,1"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pressed_border1" Storyboard.TargetProperty="Padding" dxi:ValueSetter.Thickness="1,0,1,1"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pressed_border1" Storyboard.TargetProperty="CornerRadius" dxi:ValueSetter.CornerRadius="0,0,2,2"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pressed_border2" Storyboard.TargetProperty="CornerRadius" dxi:ValueSetter.CornerRadius="0,0,1,1"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pressed_border3" Storyboard.TargetProperty="CornerRadius" dxi:ValueSetter.CornerRadius="0,0,1,1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Bottom">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pressed_border1" Storyboard.TargetProperty="Margin" dxi:ValueSetter.Thickness="1,1,1,0"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pressed_shadow" Storyboard.TargetProperty="CornerRadius" dxi:ValueSetter.CornerRadius="2,2,0,0"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pressed_border1" Storyboard.TargetProperty="CornerRadius" dxi:ValueSetter.CornerRadius="2,2,0,0"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pressed_border2" Storyboard.TargetProperty="CornerRadius" dxi:ValueSetter.CornerRadius="1,1,0,0"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pressed_border3" Storyboard.TargetProperty="CornerRadius" dxi:ValueSetter.CornerRadius="1,1,0,0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="All" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="hovered">
        <Grid HorizontalAlignment="Stretch" Width="Auto">
            <dx:DXBorder x:Name="hover_border1" Background="#FF5379AE"
						CornerRadius="2,2,2,2"
						Padding="1,1,1,1"
						SnapsToDevicePixels="True"
						>
                <dx:DXBorder x:Name="hover_border2" CornerRadius="1,1,1,1" Padding="1,1,1,1" SnapsToDevicePixels="True">
                    <dx:DXBorder.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFD0E3FB" Offset="0" />
                            <GradientStop Color="#FFADD0F6" Offset="1" />
                            <GradientStop Color="#FFD5E6FA" Offset="0.5" />
                        </LinearGradientBrush>
                    </dx:DXBorder.Background>
                    <dx:DXBorder x:Name="hover_border3" CornerRadius="1,1,1,1" SnapsToDevicePixels="True">
                        <dx:DXBorder.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFD1E4FC" Offset="0" />
                                <GradientStop Color="#FFAED1F6" Offset="1" />
                                <GradientStop Color="#FFB5D0F1" Offset="0.5" />
                                <GradientStop Color="#FFA4C5ED" Offset="0.5" />
                            </LinearGradientBrush>
                        </dx:DXBorder.Background>
                    </dx:DXBorder>
                </dx:DXBorder>
            </dx:DXBorder>
            <dx:DXBorder x:Name="disabled_border1"
						Background="#FF5379AE"
						CornerRadius="2,2,2,2"
						Margin="1,1,1,1"
						Padding="1,1,1,1"
						SnapsToDevicePixels="True"
						Opacity="0.0"
						Visibility="Visible">
                <dx:DXBorder x:Name="disabled_border2" CornerRadius="1,1,1,1" Padding="1,1,1,1" SnapsToDevicePixels="True">
                    <dx:DXBorder.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFA9C4E5" Offset="0" />
                            <GradientStop Color="#FF96B8DE" Offset="1" />
                            <GradientStop Color="#FFA1BFE1" Offset="0.5" />
                        </LinearGradientBrush>
                    </dx:DXBorder.Background>
                    <dx:DXBorder x:Name="disabled_border3" CornerRadius="1,1,1,1" SnapsToDevicePixels="True">
                        <dx:DXBorder.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FF9EBBDF" Offset="0" />
                                <GradientStop Color="#FF95B8DE" Offset="1" />
                                <GradientStop Color="#FF97B7DC" Offset="0.5" />
                                <GradientStop Color="#FF8AACD5" Offset="0.5" />
                            </LinearGradientBrush>
                        </dx:DXBorder.Background>
                    </dx:DXBorder>
                </dx:DXBorder>
            </dx:DXBorder>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="HideBorderSide">
                    <VisualState x:Name="None" />
                    <VisualState x:Name="Left">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hover_shadow" Storyboard.TargetProperty="Margin" dxi:ValueSetter.Thickness="0,2,0,0"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hover_border1" Storyboard.TargetProperty="Margin" dxi:ValueSetter.Thickness="0,1,1,1"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="disabled_border1" Storyboard.TargetProperty="Margin" dxi:ValueSetter.Thickness="0,1,1,1"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hover_border1" Storyboard.TargetProperty="Padding" dxi:ValueSetter.Thickness="0,1,1,1"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="disabled_border1" Storyboard.TargetProperty="Padding" dxi:ValueSetter.Thickness="0,1,1,1"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hover_shadow" Storyboard.TargetProperty="CornerRadius" dxi:ValueSetter.CornerRadius="0,2,2,0"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hover_border1" Storyboard.TargetProperty="CornerRadius" dxi:ValueSetter.CornerRadius="0,2,2,0"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="disabled_border1" Storyboard.TargetProperty="CornerRadius" dxi:ValueSetter.CornerRadius="0,2,2,0"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hover_border2" Storyboard.TargetProperty="CornerRadius" dxi:ValueSetter.CornerRadius="0,1,1,0"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="disabled_border2" Storyboard.TargetProperty="CornerRadius" dxi:ValueSetter.CornerRadius="0,1,1,0"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hover_border3" Storyboard.TargetProperty="CornerRadius" dxi:ValueSetter.CornerRadius="0,1,1,0"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="disabled_border3" Storyboard.TargetProperty="CornerRadius" dxi:ValueSetter.CornerRadius="0,1,1,0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Right">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hover_border1" Storyboard.TargetProperty="Margin" dxi:ValueSetter.Thickness="1,1,0,1"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="disabled_border1" Storyboard.TargetProperty="Margin" dxi:ValueSetter.Thickness="1,1,0,1"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hover_shadow" Storyboard.TargetProperty="CornerRadius" dxi:ValueSetter.CornerRadius="2,0,0,2"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hover_border1" Storyboard.TargetProperty="CornerRadius" dxi:ValueSetter.CornerRadius="2,0,0,2"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="disabled_border1" Storyboard.TargetProperty="CornerRadius" dxi:ValueSetter.CornerRadius="2,0,0,2"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hover_border2" Storyboard.TargetProperty="CornerRadius" dxi:ValueSetter.CornerRadius="1,0,0,1"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="disabled_border2" Storyboard.TargetProperty="CornerRadius" dxi:ValueSetter.CornerRadius="1,0,0,1"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hover_border3" Storyboard.TargetProperty="CornerRadius" dxi:ValueSetter.CornerRadius="1,0,0,1"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="disabled_border3" Storyboard.TargetProperty="CornerRadius" dxi:ValueSetter.CornerRadius="1,0,0,1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Top">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hover_shadow" Storyboard.TargetProperty="Margin" dxi:ValueSetter.Thickness="2,0,0,0"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hover_border1" Storyboard.TargetProperty="Margin" dxi:ValueSetter.Thickness="1,0,1,1"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="disabled_border1" Storyboard.TargetProperty="Margin" dxi:ValueSetter.Thickness="1,0,1,1"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hover_border1" Storyboard.TargetProperty="Padding" dxi:ValueSetter.Thickness="1,0,1,1"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="disabled_border1" Storyboard.TargetProperty="Padding" dxi:ValueSetter.Thickness="1,0,1,1"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hover_shadow" Storyboard.TargetProperty="CornerRadius" dxi:ValueSetter.CornerRadius="0,0,2,2"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hover_border1" Storyboard.TargetProperty="CornerRadius" dxi:ValueSetter.CornerRadius="0,0,2,2"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="disabled_border1" Storyboard.TargetProperty="CornerRadius" dxi:ValueSetter.CornerRadius="0,0,2,2"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hover_border2" Storyboard.TargetProperty="CornerRadius" dxi:ValueSetter.CornerRadius="0,0,1,1"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="disabled_border2" Storyboard.TargetProperty="CornerRadius" dxi:ValueSetter.CornerRadius="0,0,1,1"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hover_border3" Storyboard.TargetProperty="CornerRadius" dxi:ValueSetter.CornerRadius="0,0,1,1"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="disabled_border3" Storyboard.TargetProperty="CornerRadius" dxi:ValueSetter.CornerRadius="0,0,1,1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Bottom">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hover_border1" Storyboard.TargetProperty="Margin" dxi:ValueSetter.Thickness="1,1,1,0"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="disabled_border1" Storyboard.TargetProperty="Margin" dxi:ValueSetter.Thickness="1,1,1,0"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hover_shadow" Storyboard.TargetProperty="CornerRadius" dxi:ValueSetter.CornerRadius="2,2,0,0"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hover_border1" Storyboard.TargetProperty="CornerRadius" dxi:ValueSetter.CornerRadius="2,2,0,0"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="disabled_border1" Storyboard.TargetProperty="CornerRadius" dxi:ValueSetter.CornerRadius="2,2,0,0"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hover_border2" Storyboard.TargetProperty="CornerRadius" dxi:ValueSetter.CornerRadius="1,1,0,0"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="disabled_border2" Storyboard.TargetProperty="CornerRadius" dxi:ValueSetter.CornerRadius="1,1,0,0"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hover_border3" Storyboard.TargetProperty="CornerRadius" dxi:ValueSetter.CornerRadius="1,1,0,0"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="disabled_border3" Storyboard.TargetProperty="CornerRadius" dxi:ValueSetter.CornerRadius="1,1,0,0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="All" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="ActiveState">
                    <VisualState x:Name="Active">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="disabled_border1" Storyboard.TargetProperty="Opacity" To="0" Duration="0"/>
                            <DoubleAnimation Storyboard.TargetName="hover_border1" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Inactive">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="disabled_border1" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                            <DoubleAnimation Storyboard.TargetName="hover_border1" Storyboard.TargetProperty="Opacity" To="0" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="normal"/>

    <ControlTemplate TargetType="local:PGToggleButton" x:Key="{dxrudt:LWKey ReportDesignerNative.PGToggleButtonTemplate}">
        <Grid>
            <ContentControl Name="root" Content="{x:Null}" ContentTemplate="{StaticResource normal}" />
            <ContentPresenter Margin="2" VerticalAlignment="Center" HorizontalAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="root" Property="ContentTemplate" Value="{StaticResource pressed}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="root" Property="ContentTemplate" Value="{StaticResource hovered}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <dx:ObjectToVisibilityConverter x:Key="objectToVisibilityConverter" HandleList="False" />

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\BaseStyles.xaml-->
    <Style x:Key="ThemedWindowDialogStyleBase" TargetType="{x:Type dx:ThemedWindow}">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="ShowIcon" Value="False" />
        <Setter Property="ShowInTaskbar" Value="False" />
        <Setter Property="ResizeMode" Value="CanResize" />
        <Setter Property="ControlBoxButtonSet" Value="Close" />
    </Style>
    <Style x:Key="DXDialogWindowStyleBase" TargetType="{x:Type dx:DXDialogWindow}">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="ShowIcon" Value="False" />
        <Setter Property="ShowInTaskbar" Value="False" />
        <Setter Property="ResizeMode" Value="CanResize" />
    </Style>
    <Style x:Key="XRRulerScalePresenter" TargetType="{x:Type dxdiag:RulerScalePresenter}">
        <Setter Property="TextBlock.FontSize" Value="9" />
        <Setter Property="TextBlock.Foreground" Value="Black" />
        <Setter Property="TickBrush" Value="Black" />
    </Style>
    <Style x:Key="ReportDesignerFielsListControlStyleBase" TargetType="{x:Type dxg:TreeListView}">
        <Setter Property="AllowEditing" Value="False" />
        <Setter Property="TreeDerivationMode" Value="ChildNodesSelector" />
        <Setter Property="AutoWidth" Value="True" />
        <Setter Property="ShowHorizontalLines" Value="False" />
        <Setter Property="ShowVerticalLines" Value="False" />
        <Setter Property="ShowColumnHeaders" Value="False" />
        <Setter Property="ShowIndicator" Value="False" />
        <Setter Property="VerticalScrollbarVisibility" Value="Auto" />
        <Setter Property="ExpandCollapseNodesOnNavigation" Value="True" />
    </Style>
    <Style x:Key="FieldListTreeListViewRowStyleTemplate" TargetType="{x:Type dxg:RowControl}">
        <Setter Property="reportexplorernative:ReportExplorerHelper.ContextMenuTemplate" Value="{Binding Row, Converter={dxrudfli:FieldListNodeToContextMenuTemplateConverter}}" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxrudi:ContextMenuBehavior>
                            <dxrudi:ContextMenuBehavior.DataContext>
                                <MultiBinding Converter="{dxrudfli:FieldListContextMenuDataContextConverter}">
                                    <Binding Path="View.(dxrud:ReportDesigner.Document).ReportModel.Diagram" />
                                    <Binding Path="Row" />
                                </MultiBinding>
                            </dxrudi:ContextMenuBehavior.DataContext>
                        </dxrudi:ContextMenuBehavior>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RibbonFontSizeSelectorStyle" TargetType="dxb:BarEditItem">
        <Style.Setters>
            <Setter Property="EditWidth" Value="50" />
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="EditWidth" Value="100" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                <Setter Property="EditWidth" Value="100" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RibbonFontNameSelectorStyle" TargetType="dxb:BarEditItem">
        <Style.Setters>
            <Setter Property="EditWidth" Value="120" />
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="EditWidth" Value="200" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                <Setter Property="EditWidth" Value="200" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <DataTemplate x:Key="checkBoxSvgGlyphStyle">
        <Grid DataContext="{Binding Id, Converter={dxrudi:CheckBoxGlyphStyleToModelConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" SharedSizeGroup="Glyphs" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <ItemsControl Margin="0,0,3,0" ItemsSource="{Binding Glyphs}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <dx:DXImage Margin="0,0,3,0" Source="{Binding}" />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{Binding DisplayName}" />
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="checkBoxDefaultGlyphStyle">
        <Grid DataContext="{Binding Id, Converter={dxrudi:CheckBoxGlyphStyleToModelConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" SharedSizeGroup="Glyphs" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <StackPanel Margin="0,0,3,0" VerticalAlignment="Center" Orientation="Horizontal">
                <StackPanel.Resources>
                    <Style TargetType="Grid">
                        <Setter Property="Height" Value="13" />
                        <Setter Property="Width" Value="13" />
                        <Setter Property="Margin" Value="0,0,4,0" />
                    </Style>
                </StackPanel.Resources>
                <Grid>
                    <Rectangle Fill="White" Stroke="Gray" StrokeThickness="1" />
                </Grid>
                <Grid>
                    <Rectangle Fill="White" Stroke="Gray" StrokeThickness="1" />
                    <Path Data="M 2.88,4.33 L 5.77,7.22 L 10.11,2.88 L 10.11,5.77 L 5.77,10.11 L 2.88,7.22 L 2.28 4.33 Z" Fill="Black" />
                </Grid>
                <Grid>
                    <Rectangle Fill="White" Stroke="Gray" StrokeThickness="1" />
                    <Rectangle Margin="4" Fill="Black" />
                </Grid>
            </StackPanel>
            <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{Binding DisplayName}" />
        </Grid>
    </DataTemplate>
    <Style x:Key="collectionItemButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <dx:DXBorder Name="container" Background="Transparent">
                        <dx:DXImage Name="icon" Opacity="0.8" Source="{TemplateBinding Content}" />
                    </dx:DXBorder>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="icon" Property="Opacity" Value="1" />
                            <Setter TargetName="container" Property="Background" Value="#8FFFFFFF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <Style x:Key="collectionEditorToolBarStyle" TargetType="{x:Type dxb:ToolBarControl}">
        <Setter Property="AllowCustomizationMenu" Value="False" />
        <Setter Property="AllowQuickCustomization" Value="False" />
        <Setter Property="ShowBackground" Value="False" />
        <Setter Property="GlyphSize" Value="{dxrudi:ThemeGlyphSize}" />
        <Setter Property="ShowDragWidget" Value="False" />
        <Setter Property="UseLayoutRounding" Value="True" />
    </Style>


    <Style x:Key="CustomFooterThemedWindowDialogStyle" BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="{x:Type dx:ThemedWindow}">
        <Setter Property="dxi:ThemedWindowOptions.UseCustomDialogFooter" Value="True" />
    </Style>

    <Style x:Key="LegacyCustomFooterThemedWindowDialogStyle" BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="{x:Type dx:ThemedWindow}">
        <Setter Property="dxi:ThemedWindowOptions.UseLegacyDialogFooter" Value="True" />
    </Style>

    <ControlTemplate x:Key="PopupExpressionEditorTemplate">
        <dxg:GridControl
            MinHeight="100"
            MaxHeight="300"
            ItemsSource="{Binding ReportModel, Converter={dxrudi:ReportModelToExpressionNodesConverter}}"
            SelectionMode="Cell"
            ShowBorder="False">
            <dxg:GridControl.View>
                <dxg:TreeListView
                    AllowEditing="False"
                    AutoWidth="False"
                    ChildNodesPath="Children"
                    ExpandCollapseNodesOnNavigation="True"
                    HorizontalScrollbarVisibility="Auto"
                    ShowColumnHeaders="False"
                    ShowHorizontalLines="False"
                    ShowIndicator="False"
                    ShowVerticalLines="False"
                    TreeDerivationMode="ChildNodesSelector"
                    VerticalScrollbarVisibility="Auto">
                    <dxmvvm:Interaction.Behaviors>
                        <dxdai:ExpandTreeListNodeBehavior />
                    </dxmvvm:Interaction.Behaviors>
                </dxg:TreeListView>
            </dxg:GridControl.View>
            <dxg:GridControl.Columns>
                <dxg:GridColumn FieldName="DisplayName" Width="*" CellTemplate="{DynamicResource {dxrudt:LWKey ReportDesigner.FieldListNodeTemplate}}" />
            </dxg:GridControl.Columns>
            <dxmvvm:Interaction.Behaviors>
                <dxrudi:CloseEditorOnExpressionSelectedBehavior Popup="{Binding Path=AssociatedObject.(dxe:BaseEdit.OwnerEdit), RelativeSource={RelativeSource Self}, UpdateSourceTrigger=PropertyChanged}" ReportModel="{Binding ReportModel}" />
            </dxmvvm:Interaction.Behaviors>
        </dxg:GridControl>
    </ControlTemplate>


    <Style x:Key="FormatStringDialogStyle" BasedOn="{StaticResource CustomFooterThemedWindowDialogStyle}" TargetType="{x:Type dx:ThemedWindow}">
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="SizeToContent" Value="Width" />
        <Setter Property="Height" Value="360" />
        <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=FormatStringEditor_Title}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(dx:ThemeManager.IsTouchlineTheme), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Height" Value="550" />
                <Setter Property="MinWidth" Value="700" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dx:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Height" Value="550" />
                <Setter Property="MinWidth" Value="700" />
            </DataTrigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="WatermarkDialogStyle" BasedOn="{StaticResource CustomFooterThemedWindowDialogStyle}" TargetType="{x:Type dx:ThemedWindow}">
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="SizeToContent" Value="WidthAndHeight" />
        <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=Watermark_Caption}" />
    </Style>
    <Style x:Key="{dxrudt:LWKey ReportDesignerDialog.DataSourceWizardDialogStyle}" BasedOn="{StaticResource CustomFooterThemedWindowDialogStyle}" TargetType="{x:Type dx:ThemedWindow}">
        <Setter Property="Width" Value="750" />
        <Setter Property="Height" Value="515" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="Title" Value="Data Source Wizard" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(dx:ThemeManager.IsTouchlineTheme), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Width" Value="980" />
                <Setter Property="Height" Value="780" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dx:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Width" Value="980" />
                <Setter Property="Height" Value="780" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxrudt:LWKey ReportDesignerDialog.ChartDesignerDialogViewStyle}" BasedOn="{StaticResource CustomFooterThemedWindowDialogStyle}" TargetType="{x:Type dx:ThemedWindow}">
        <Setter Property="Width" Value="1175" />
        <Setter Property="Height" Value="715" />
        <Setter Property="MinWidth" Value="780" />
        <Setter Property="MinHeight" Value="480" />
        <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=ChartDesigner_Dialog_Title}" />
    </Style>

    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerDialog.ChartDesignerDialogServiceTemplate}">
        <ContentControl>
            <dxrudi:UITypeEditorDialogService DialogStyle="{DynamicResource {dxrudt:LWKey ReportDesignerDialog.ChartDesignerDialogViewStyle}}" DialogWindowStartupLocation="CenterScreen">
                <dxrudi:UITypeEditorDialogService.ViewTemplate>
                    <DataTemplate>
                        <dxrudcd:ChartDesigner ReportModel="{Binding ReportModel}" XRChartDiagramItem="{Binding XRChartDiagramItem}" />
                    </DataTemplate>
                </dxrudi:UITypeEditorDialogService.ViewTemplate>
            </dxrudi:UITypeEditorDialogService>
        </ContentControl>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerDialog.StyleSheetDialogServiceTemplate}">
        <ContentControl>
            <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                <dxrudi:UITypeEditorDialogService.DialogStyle>
                    <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                        <Setter Property="Width" Value="730" />
                        <Setter Property="Height" Value="450" />
                        <Setter Property="MinWidth" Value="420" />
                        <Setter Property="MinHeight" Value="240" />
                        <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=StyleSheetEditor_Title}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=(dx:ThemeManager.IsTouchlineTheme), RelativeSource={RelativeSource Self}}" Value="True">
                                <Setter Property="Width" Value="900" />
                                <Setter Property="MinWidth" Value="650" />
                                <Setter Property="Height" Value="600" />
                                <Setter Property="MinHeight" Value="413" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=(dx:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource Self}}" Value="True">
                                <Setter Property="Width" Value="900" />
                                <Setter Property="MinWidth" Value="650" />
                                <Setter Property="Height" Value="600" />
                                <Setter Property="MinHeight" Value="413" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </dxrudi:UITypeEditorDialogService.DialogStyle>
                <dxrudi:UITypeEditorDialogService.ViewTemplate>
                    <DataTemplate>
                        <dxrude:XRControlStyleSheetUITypeEditor EditValue="{Binding Content.PropertiesModel[StyleSheet]}" ReportModel="{Binding Content}" />
                    </DataTemplate>
                </dxrudi:UITypeEditorDialogService.ViewTemplate>
            </dxrudi:UITypeEditorDialogService>
        </ContentControl>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerDialog.PivotGridDesignerDialogServiceTemplate}">
        <ContentControl>
            <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterScreen">
                <dxrudi:UITypeEditorDialogService.DialogStyle>
                    <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                        <Setter Property="Width" Value="1175" />
                        <Setter Property="Height" Value="715" />
                        <Setter Property="MinWidth" Value="780" />
                        <Setter Property="MinHeight" Value="480" />
                        <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=PivotGrid_Designer_Title}" />
                    </Style>
                </dxrudi:UITypeEditorDialogService.DialogStyle>
                <dxrudi:UITypeEditorDialogService.ViewTemplate>
                    <DataTemplate>
                        <dxrudpgd:PivotGridDesigner ReportModel="{Binding ReportModel}" />
                    </DataTemplate>
                </dxrudi:UITypeEditorDialogService.ViewTemplate>
            </dxrudi:UITypeEditorDialogService>
        </ContentControl>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerDialog.BandsCollectionEditorDialogServiceTemplate}">
        <ContentControl>
            <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterScreen">
                <dxrudi:UITypeEditorDialogService.DialogStyle>
                    <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                        <Setter Property="Width" Value="750" />
                        <Setter Property="Height" Value="515" />
                        <Setter Property="MinWidth" Value="420" />
                        <Setter Property="MinHeight" Value="240" />
                        <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=BandCollectionEditor_Title}" />
                    </Style>
                </dxrudi:UITypeEditorDialogService.DialogStyle>
                <dxrudi:UITypeEditorDialogService.ViewTemplate>
                    <DataTemplate>
                        <dxrude:BandCollectionUITypeEditor dxrud:ReportDesigner.Document="{Binding Document}" EditValue="{Binding Document.ReportModel.PropertiesModel[Bands]}" ReportModel="{Binding Document.ReportModel}" />
                    </DataTemplate>
                </dxrudi:UITypeEditorDialogService.ViewTemplate>
            </dxrudi:UITypeEditorDialogService>
        </ContentControl>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerDialog.ConfigureConnectionDialogServiceTemplate}">
        <ContentControl>
            <dxrudi:UITypeEditorDialogService DialogStyle="{DynamicResource {dxrudt:LWKey ReportDesignerDialog.DataSourceWizardDialogStyle}}" DialogWindowStartupLocation="CenterScreen">
                <dxrudi:UITypeEditorDialogService.ViewTemplate>
                    <DataTemplate>
                        <dxdaw:DataSourceWizardControl
                            DataSourceModel="{Binding DataSourceModel, Mode=TwoWay}"
                            DataSourceWizardSettings="{Binding DataSourceWizardSettings}"
                            ParameterService="{Binding ParameterService}"
                            ServicesRegistry="{Binding ServicesRegistry}"
                            StartPage="{Binding StartPage}" />
                    </DataTemplate>
                </dxrudi:UITypeEditorDialogService.ViewTemplate>
            </dxrudi:UITypeEditorDialogService>
        </ContentControl>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerDialog.RichTextEditorDialogServiceTemplate}">
        <ContentControl>
            <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterScreen">
                <dxrudi:UITypeEditorDialogService.DialogStyle>
                    <Style BasedOn="{StaticResource CustomFooterThemedWindowDialogStyle}" TargetType="{x:Type dx:ThemedWindow}">
                        <Setter Property="Width" Value="650" />
                        <Setter Property="Height" Value="500" />
                        <Setter Property="MinWidth" Value="350" />
                        <Setter Property="MinHeight" Value="300" />
                        <Setter Property="Title" Value="Rich Text Editor" />
                        <Setter Property="dx:ScrollBarExtensions.ScrollBarMode" Value="TouchOverlap" />
                    </Style>
                </dxrudi:UITypeEditorDialogService.DialogStyle>
                <dxrudi:UITypeEditorDialogService.ViewTemplate>
                    <DataTemplate>
                        <dxrud:ReportDesignerRichEditControl EditValue="{Binding Rtf, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </DataTemplate>
                </dxrudi:UITypeEditorDialogService.ViewTemplate>
            </dxrudi:UITypeEditorDialogService>
        </ContentControl>
    </DataTemplate>

    <Style x:Key="ReportDesignerFielsListControlStyleWithSearchPanel" BasedOn="{StaticResource ReportDesignerFielsListControlStyleBase}" TargetType="{x:Type dxg:TreeListView}">
        <Setter Property="ShowSearchPanelCloseButton" Value="False" />
        <Setter Property="ShowSearchPanelFindButton" Value="False" />
        <Setter Property="ShowSearchPanelMode" Value="Always" />
        <Setter Property="ShowSearchPanelMRUButton" Value="False" />
        <Setter Property="ShowSearchPanelNavigationButtons" Value="False" />
        <Setter Property="SearchPanelFindMode" Value="Always" />
        <Setter Property="SearchPanelHorizontalAlignment" Value="Stretch" />
        <Setter Property="SearchPanelNullText" Value="Enter text to search..." />
        <Setter Property="SearchDelay" Value="0" />
    </Style>

    <Style x:Key="ReportDesigner_DataBindingStyleBase" TargetType="{x:Type dxrude:PopupTreeListEdit}">
        <Setter Property="ValueMember" Value="BindingData" />
        <Setter Property="DisplayMember" Value="FullPath" />
        <Setter Property="ChildNodesPath" Value="Children" />
        <Setter Property="PopupDisplayMember" Value="DisplayName" />
        <Setter Property="HierarchicalPathProvider" Value="{dxrude:BindingDataHierarchicalPathProvider}" />
        <Setter Property="PopupSelectionValidator" Value="{dxrude:BindingDataPopupSelectionValidator CanSelectParameters=True}" />
        <Setter Property="TreeListCellTemplate" Value="{DynamicResource {dxrudt:LWKey ReportDesigner.FieldListNodeTemplate}}" />
    </Style>

    <Style x:Key="dataMemberPropertyEditorStyle" BasedOn="{StaticResource ReportDesigner_DataBindingStyleBase}" TargetType="{x:Type dxrude:PopupTreeListEdit}">
        <Setter Property="DisplayMember" Value="DisplayName" />
        <Setter Property="NullText" Value="{dxrudl:ReportDesignerStringId StringId=Editors_NullValue_Text}" />
        <!--<Setter Property="ItemsSource" Value="{Binding Path=(reportModel:XtraReportDiagramItem.ReportModel), Converter={dxrudi:ReportModelToDataMemberNodesConverter}, RelativeSource={RelativeSource Self}}" />-->
        <Setter Property="ItemsSource">
            <Setter.Value>
                <MultiBinding Converter="{dxrudi:ReportModelToDataMemberNodesConverter}">
                    <Binding Path="(xrdiag:XtraReportDiagramItem.ReportModel)" RelativeSource="{RelativeSource Mode=Self}" />
                    <Binding Path="(xrdiag:XtraReportDiagramItem.ReportModel).SelectedModel" RelativeSource="{RelativeSource Mode=Self}" />
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="PopupSelectionValidator" Value="{dxrude:SimpleDataMemberPopupSelectionValidator}" />
    </Style>

    <Style x:Key="{dxrudt:LWKey ReportDesigner.FieldListNodeBehaviorTemplate}" TargetType="{x:Type dxg:TreeListColumn}" />

    <Style x:Key="{dxrudt:LWKey ReportDesigner.FieldListStyle}" TargetType="{x:Type dxg:TreeListControl}" />

    <Style x:Key="ExpressionEditorDialogStyle" BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="{x:Type dx:ThemedWindow}">
        <Setter Property="Width" Value="750" />
        <Setter Property="MinWidth" Value="750" />
        <Setter Property="Height" Value="580" />
        <Setter Property="MinHeight" Value="580" />
        <Setter Property="ResizeMode" Value="CanResize" />
        <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=ExpressionEditor_Title}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(dx:ThemeManager.IsTouchlineTheme), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Width" Value="980" />
                <Setter Property="Height" Value="780" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dx:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Width" Value="980" />
                <Setter Property="Height" Value="780" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <DataTemplate x:Key="borderDashStyleContentTemplate">
        <Grid
            Height="{dxrudi:ThemeImageSize Size=14, TouchThemeSize=22}"
            Background="Transparent"
            DataContext="{Binding Converter={dxrudi:BorderDashStyleConverter}}"
            ToolTip="{Binding Style, Converter={dxrudi:EnumToDisplayNameConverter}}">
            <TextBlock IsHitTestVisible="False" Text=" " Visibility="Hidden" />
            <StackPanel Margin="4,0,4,0" VerticalAlignment="Center" Visibility="{Binding Converter={StaticResource objectToVisibilityConverter}}">
                <Line
                    Stroke="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}"
                    StrokeDashArray="{Binding Style, Converter={dxrudi:BorderDashStyleToDoubleCollectionConverter}}"
                    StrokeThickness="2"
                    X1="0"
                    X2="{Binding Parent.ActualWidth, RelativeSource={RelativeSource Self}}"
                    Y1="0"
                    Y2="0" />
                <Line
                    Margin="0,4,0,0"
                    Stroke="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}"
                    StrokeDashArray="{Binding Style, Converter={dxrudi:BorderDashStyleToDoubleCollectionConverter}}"
                    StrokeThickness="2"
                    Visibility="{Binding DoubleLine, Converter={dx:BooleanToVisibilityConverter}}"
                    X1="0"
                    X2="{Binding Parent.ActualWidth, RelativeSource={RelativeSource Self}}"
                    Y1="0"
                    Y2="0" />
            </StackPanel>
        </Grid>
    </DataTemplate>

    <dxrudi:CheckBoxStyleEditorTemplateSelector x:Key="checkBoxGlyphTemplateSelector" DefaultGlyph="{StaticResource checkBoxDefaultGlyphStyle}" SvgGlyph="{StaticResource checkBoxSvgGlyphStyle}" />

    <Style x:Key="collectionEditorGridRowButtonStyle" BasedOn="{StaticResource collectionItemButtonStyle}" TargetType="Button">
        <Setter Property="CommandParameter" Value="{Binding Row}" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxrude:SelectGridRowOnButtonClickBehavior />
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Visibility">
            <Setter.Value>
                <MultiBinding Converter="{dxrudi:CollectionEditorItemToCanDeleteVisibilityConverter}">
                    <Binding Path="IsEnabled" RelativeSource="{RelativeSource Self}" />
                    <Binding Converter="{dxrudi:RowControlSelectionStateToBooleanConverter}" Path="SelectionState" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type dxg:RowControl}}" />
                    <Binding Path="IsMouseOver" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type dxg:RowControl}}" />
                </MultiBinding>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="collectionEditorListBoxItemButtonStyle" BasedOn="{StaticResource collectionItemButtonStyle}" TargetType="Button">
        <Setter Property="Visibility">
            <Setter.Value>
                <MultiBinding Converter="{dxrudi:CollectionEditorItemToCanDeleteVisibilityConverter}">
                    <Binding Path="IsEnabled" RelativeSource="{RelativeSource Self}" />
                    <Binding Path="IsSelected" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type dxe:ListBoxEditItem}}" />
                    <Binding Path="IsMouseOver" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type dxe:ListBoxEditItem}}" />
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxrude:SelectListBoxItemOnButtonClickBehavior />
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="collectionEditorListBoxItemRemoveButtonStyle" BasedOn="{StaticResource collectionEditorListBoxItemButtonStyle}" TargetType="Button">
        <Setter Property="Content" Value="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/Trash.svg'}" />
    </Style>
    <Style x:Key="collectionEditorGridRowRemoveButtonStyle" BasedOn="{StaticResource collectionEditorGridRowButtonStyle}" TargetType="Button">
        <Setter Property="Content" Value="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/Trash.svg'}" />
    </Style>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\BaseStyles.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\XRDiagram\LinkStyle.xaml-->
    <Style x:Key="ContextMenuBaseItem" TargetType="{x:Type dxb:BarItem}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dx:DXBorder MinWidth="150" Margin="0,0,15,0">
                        <ContentPresenter Content="{Binding}" />
                    </dx:DXBorder>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="ContextMenuItemTemplate">
        <ContentControl>
            <dxb:BarButtonItem
                Command="{Binding Command}"
                CommandParameter="{Binding CommandParameter}"
                Content="{Binding Name}"
                Glyph="{Binding Icon}" />
        </ContentControl>
    </DataTemplate>


    <Style x:Key="ContextMenuSubMenuItem" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="{x:Type dxb:BarItem}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dx:DXBorder Margin="0,0,15,0">
                        <ContentPresenter Content="{Binding}" />
                    </dx:DXBorder>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ContextMenuEditItem" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="{x:Type dxb:BarEditItem}">
        <Setter Property="EditWidth" Value="170" />
        <Setter Property="EditHorizontalAlignment" Value="Right" />
    </Style>
    <!--<Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.SmartTag}" TargetType="{x:Type dxb:BarButtonItem}" BasedOn="{StaticResource ContextMenuBaseItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.SmartTag}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=ContextMenu_Edit}" />
        <Setter Property="IsEnabled" Value="{Binding Diagram, Converter={dxrudi:SmartTagIsEnabledConverter}, Mode=OneWay}" />
    </Style>-->
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.Cut}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="dxb:BarButtonItem">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.Cut}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=Cut}" />
        <Setter Property="Glyph" Value="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/EditGroup/Cut.svg'}" />
        <Setter Property="Command" Value="{Binding Path=Diagram.(dxrud:ReportDesigner.Designer).ActualCommands.CutCommand}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.Copy}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="dxb:BarButtonItem">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.Copy}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=Copy}" />
        <Setter Property="Glyph" Value="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/EditGroup/Copy.svg'}" />
        <Setter Property="Command" Value="{Binding Path=Diagram.(dxrud:ReportDesigner.Designer).ActualCommands.CopyCommand}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.Paste}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="dxb:BarButtonItem">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.Paste}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=Paste}" />
        <Setter Property="Glyph" Value="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/EditGroup/Paste.svg'}" />
        <Setter Property="Command" Value="{Binding Path=Diagram.(dxrud:ReportDesigner.Designer).ActualCommands.PasteCommand}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.Delete}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="dxb:BarButtonItem">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.Delete}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=Delete}" />
        <Setter Property="Glyph" Value="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/EditGroup/Delete.svg'}" />
        <Setter Property="Command" Value="{Binding Path=Diagram.(dxrud:ReportDesigner.Designer).ActualCommands.DeleteCommand}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.Properties}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="dxb:BarButtonItem">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.Properties}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=Properties}" />
        <Setter Property="Glyph" Value="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/ContextMenus/Properties.svg'}" />
        <Setter Property="Command" Value="{Binding Diagram.XRCommands.ShowProperties}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.FormattingRules}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="dxb:BarButtonItem">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.FormattingRules}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=EditFormattingRules}" />
        <Setter Property="IsEnabled" Value="{Binding Diagram.SelectionToolsModel[FormattingRules], Converter={dxmvvm:ObjectToBooleanConverter}}" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxe:DialogServiceEditorBehavior
                            x:Name="dialogServiceEditorBehaviorName"
                            Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}"
                            Content="{Binding Path=Diagram.(dxrud:ReportDesigner.Document).ReportModel}"
                            Value="{Binding Diagram.SelectionToolsModel[FormattingRules]}">
                            <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                <DataTemplate>
                                    <ContentControl>
                                        <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                            <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                                                    <Setter Property="Width" Value="600" />
                                                    <Setter Property="Height" Value="400" />
                                                    <Setter Property="MinWidth" Value="500" />
                                                    <Setter Property="MinHeight" Value="400" />
                                                    <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=FormattingRulesEditor_Title}" />
                                                </Style>
                                            </dxrudi:UITypeEditorDialogService.DialogStyle>
                                            <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                <DataTemplate>
                                                    <dxrude:FormattingRulesUITypeEditor EditValue="{Binding Value}" ReportModel="{Binding Content}" />
                                                </DataTemplate>
                                            </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                        </dxrudi:UITypeEditorDialogService>
                                    </ContentControl>
                                </DataTemplate>
                            </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                        </dxe:DialogServiceEditorBehavior>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--<Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.EditAndReorderBands}" TargetType="dxb:BarButtonItem" BasedOn="{StaticResource ContextMenuBaseItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.EditAndReorderBands}" />
        <Setter Property="Content" Value="Edit and Reorder Bands..." />
    </Style>-->

    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.ExpandAllBands}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="dxb:BarButtonItem">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.ExpandAllBands}" />
        <Setter Property="Content" Value="{dxrudl:ReportStringId StringId=Cmd_BandExpandAll}" />
        <Setter Property="Command" Value="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.ExpandAllBandsCommand, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Glyph" Value="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/BandExpandAll.svg'}" />
    </Style>

    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.CollapseAllBands}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="dxb:BarButtonItem">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.CollapseAllBands}" />
        <Setter Property="Content" Value="{dxrudl:ReportStringId StringId=Cmd_BandCollapseAll}" />
        <Setter Property="Command" Value="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.CollapseAllBandsCommand, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Glyph" Value="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/BandCollapseAll.svg'}" />
    </Style>

    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.CollapseAllBandsButSelected}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="dxb:BarButtonItem">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.CollapseAllBandsButSelected}" />
        <Setter Property="Content" Value="{dxrudl:ReportStringId StringId=Cmd_BandCollapseAllButSelected}" />
        <Setter Property="Command" Value="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.CollapseAllBandsButSelectedCommand, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Glyph" Value="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/BandCollapseAllButSelected.svg'}" />
    </Style>

    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.ConvertLabelsToTable}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="dxb:BarButtonItem">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.ConvertLabelsToTable}" />
        <Setter Property="Content" Value="{dxrudl:ReportStringId StringId=Cmd_LabelsConvertToTable}" />
        <Setter Property="Command" Value="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.ConvertLabelsToTableCommand, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Glyph" Value="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/LabelsConvertToTable.svg'}" />
    </Style>

    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.NavigateToControl}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="dxb:BarButtonItem">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.NavigateToControl}" />
        <Setter Property="Content" Value="{dxrudl:ReportStringId StringId=Cmd_NavigateToControl}" />
        <Setter Property="Command" Value="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.NavigateToControlCommand, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Glyph" Value="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/NavigateToControl.svg'}" />
        <Setter Property="IsVisible" Value="False" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Owner, Converter={dxrudi:ContextMenuOwnerToBooleanConverter Owner=ReportExplorer}}" Value="True">
                <Setter Property="IsVisible" Value="True" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.AddSubBand}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="dxb:BarButtonItem">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.AddSubBand}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=AddSubBand}" />
        <Setter Property="Command" Value="{Binding Diagram.XRCommands.InsertSubBand}" />
        <Setter Property="Glyph" Value="{dxrudi:ComponentIcon Type={x:Type reportsui:SubBand}}" />
    </Style>
    <Style x:Key="ActionMenuItem" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="{x:Type dxb:BarSubItem}">
        <Setter Property="ItemStyle" Value="{StaticResource ContextMenuSubMenuItem}" />
        <Setter Property="ItemTemplate" Value="{StaticResource ContextMenuItemTemplate}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.InsertBand}" BasedOn="{StaticResource ActionMenuItem}" TargetType="dxb:BarSubItem">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.InsertBand}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=InsertBand}" />
        <Setter Property="ItemLinksSource" Value="{Binding Diagram, Converter={dxrudi:InsertBandMenuItemsConverter}}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.InsertVerticalBand}" BasedOn="{StaticResource ActionMenuItem}" TargetType="dxb:BarSubItem">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.InsertVerticalBand}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=InsertVerticalBand}" />
        <Setter Property="ItemLinksSource" Value="{Binding Diagram, Converter={dxrudi:InsertVerticalBandMenuItemsConverter}}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.InsertDetailReport}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="{x:Type dxb:BarSubItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.InsertDetailReport}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=InsertDetailReport}" />
        <Setter Property="ItemStyle" Value="{StaticResource ContextMenuSubMenuItem}" />
        <Setter Property="ItemLinksSource">
            <Setter.Value>
                <MultiBinding Converter="{dxrudi:RelationNamesToMenuItemsConverter}">
                    <Binding Path="Diagram.(dxrud:ReportDesigner.Document).ReportModel.SelectedModel.XRObjectBase" />
                    <Binding Path="Diagram" />
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplateSelector">
            <Setter.Value>
                <dxrudi:RelationNamesMenuItemTemplateSelector>
                    <dxrudi:RelationNamesMenuItemTemplateSelector.ItemTemplate>
                        <DataTemplate>
                            <ContentControl>
                                <dxb:BarButtonItem
                                    Command="{Binding Command}"
                                    CommandParameter="{Binding CommandParameter}"
                                    Content="{Binding Name}"
                                    Glyph="{Binding Icon}" />
                            </ContentControl>
                        </DataTemplate>
                    </dxrudi:RelationNamesMenuItemTemplateSelector.ItemTemplate>
                    <dxrudi:RelationNamesMenuItemTemplateSelector.SeparatorTemplate>
                        <DataTemplate>
                            <ContentControl>
                                <dxb:BarItemSeparator />
                            </ContentControl>
                        </DataTemplate>
                    </dxrudi:RelationNamesMenuItemTemplateSelector.SeparatorTemplate>
                </dxrudi:RelationNamesMenuItemTemplateSelector>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.FitTextToBounds}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="dxb:BarButtonItem">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.FitTextToBounds}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=FitTextToBounds}" />
        <Setter Property="Command" Value="{Binding Diagram.XRCommands.FitTextToBounds}" />
        <Setter Property="Glyph" Value="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/FitTextToBounds.svg'}" />
    </Style>

    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.FitBoundsToText}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="{x:Type dxb:BarButtonItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.FitBoundsToText}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=FitBoundsToText}" />
        <Setter Property="Command" Value="{Binding Diagram.XRCommands.FitBoundsToText}" />
        <Setter Property="CommandParameter" Value="{x:Static forms:BoundsSpecified.All}" />
        <Setter Property="Glyph" Value="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/FitBoundsToText.svg'}" />
    </Style>

    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.AddToGallery}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="dxb:BarButtonItem">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.AddToGallery}" />
        <Setter Property="Content" Value="{dxrudl:ReportStringId StringId=Cmd_AddToGallery}" />
        <Setter Property="Command" Value="{Binding Path=(dxrud:ReportDesigner.Designer).ActualCommands.AddToReportGalleryCommand, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Glyph" Value="{dxrud:ReportDesignerResourceImage ResourceName='Images/SVG/ReportGallery/AddToGallery.svg'}" />
    </Style>

    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.RunPivotGridDesigner}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="dxb:BarButtonItem">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.RunPivotGridDesigner}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=Pivot_RunDesigner}" />
        <Setter Property="Command" Value="{Binding Diagram.XREditorCommands.RunPivotGridDesignerCommand}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.RunChartDesigner}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="dxb:BarButtonItem">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.RunChartDesigner}" />
        <Setter Property="Content" Value="Run Designer..." />
        <Setter Property="Command" Value="{Binding Diagram.XREditorCommands.RunChartDesignerCommand}" />
        <Setter Property="IsEnabled" Value="{Binding Diagram.SelectedItems, Converter={dxrudi:SelectedItemsToContextMenuItemIsEnabledConverter}}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.Clear}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="dxb:BarButtonItem">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.Clear}" />
        <Setter Property="Content" Value="Clear" />
        <Setter Property="Command" Value="{Binding Diagram.XRCommands.Clear}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.LoadFile}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="dxb:BarButtonItem">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.LoadFile}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=LoadFile}" />
        <Setter Property="Command" Value="{Binding Diagram.XREditorCommands.LoadFile}" />
        <Setter Property="CommandParameter" Value="{Binding Path=Diagram.(dxrud:ReportDesigner.Designer)}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.EditParameterBindings}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="dxb:BarButtonItem">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.EditParameterBindings}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=SubReport_EditParameterBindings}" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxe:DialogServiceEditorBehavior
                            x:Name="dialogServiceEditorBehaviorName"
                            Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}"
                            Content="{Binding Path=Diagram.(dxrud:ReportDesigner.Document).ReportModel}"
                            DialogServiceTemplate="{DynamicResource {dxrudt:LWKey ReportDesignerDialog.SubreportParameterBindingsEditorDialogServiceTemplate}}"
                            Value="{Binding Diagram.SelectionToolsModel[ParameterBindings]}" />
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.ConvertToLabels}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="dxb:BarButtonItem">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.ConvertToLabels}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=Table_ConvertToLabels}" />
        <Setter Property="Command" Value="{Binding Diagram.XRCommands.ConvertToLabels}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.InsertTableCell}" BasedOn="{StaticResource ActionMenuItem}" TargetType="{x:Type dxb:BarSubItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.InsertTableCell}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=Insert}" />
        <Setter Property="ItemLinksSource" Value="{Binding Diagram, Converter={dxrudi:InsertTableItemMenuItemsConverter}}" />
        <Setter Property="IsVisible" Value="{Binding Diagram, Converter={dxrudi:RowSpanningCellToContextMenuItemIsVisibleConverter}}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.DeleteTableItem}" BasedOn="{StaticResource ActionMenuItem}" TargetType="{x:Type dxb:BarSubItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.DeleteTableItem}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=Delete}" />
        <Setter Property="ItemLinksSource" Value="{Binding Diagram, Converter={dxrudi:DeleteTableItemMenuItemsConverter}}" />
        <Setter Property="IsVisible" Value="{Binding Diagram, Converter={dxrudi:RowSpanningCellToContextMenuItemIsVisibleConverter}}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.InsertTableRow}" BasedOn="{StaticResource ActionMenuItem}" TargetType="{x:Type dxb:BarSubItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.InsertTableRow}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=Insert}" />
        <Setter Property="ItemLinksSource" Value="{Binding Diagram, Converter={dxrudi:InsertTableRowMenuItemsConverter}}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.DeleteTableRow}" BasedOn="{StaticResource ActionMenuItem}" TargetType="{x:Type dxb:BarSubItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.DeleteTableRow}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=Delete}" />
        <Setter Property="ItemLinksSource" Value="{Binding Diagram, Converter={dxrudi:DeleteTableRowMenuItemsConverter}}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.Levels}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="dxb:BarButtonItem">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.Levels}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=EditLevels}" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxe:DialogServiceEditorBehavior
                            x:Name="dialogServiceEditorBehaviorName"
                            Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}"
                            Content="{Binding Diagram}"
                            Value="{Binding Diagram.SelectionToolsModel[Levels]}">
                            <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                <DataTemplate>
                                    <ContentControl>
                                        <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                            <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                                                    <Setter Property="Width" Value="600" />
                                                    <Setter Property="Height" Value="350" />
                                                    <Setter Property="MinWidth" Value="420" />
                                                    <Setter Property="MinHeight" Value="240" />
                                                    <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=ToC_LevelsEditor_Title}" />
                                                </Style>
                                            </dxrudi:UITypeEditorDialogService.DialogStyle>
                                            <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                <DataTemplate>
                                                    <dxrude:XRTableOfContentsLevelCollectionEditor EditValue="{Binding Value}" />
                                                </DataTemplate>
                                            </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                        </dxrudi:UITypeEditorDialogService>
                                    </ContentControl>
                                </DataTemplate>
                            </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                        </dxe:DialogServiceEditorBehavior>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DevExpress_Xpf_Reports_ContextMenu_Level_Levels" BasedOn="{StaticResource {x:Static dxrud:DefaultContextMenuItemNames.Levels}}" TargetType="dxb:BarButtonItem">
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxe:DialogServiceEditorBehavior
                            x:Name="dialogServiceEditorBehaviorName"
                            Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}"
                            Content="{Binding Diagram}"
                            Value="{Binding Diagram.SelectionModel, Converter={dxrudi:SelectionModelToLevelsCollectionModelConverter}}">
                            <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                <DataTemplate>
                                    <ContentControl>
                                        <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                            <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                                                    <Setter Property="Width" Value="600" />
                                                    <Setter Property="Height" Value="350" />
                                                    <Setter Property="MinWidth" Value="420" />
                                                    <Setter Property="MinHeight" Value="240" />
                                                    <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=ToC_LevelsEditor_Title}" />
                                                </Style>
                                            </dxrudi:UITypeEditorDialogService.DialogStyle>
                                            <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                <DataTemplate>
                                                    <dxrude:XRTableOfContentsLevelCollectionEditor EditValue="{Binding Value}" />
                                                </DataTemplate>
                                            </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                        </dxrudi:UITypeEditorDialogService>
                                    </ContentControl>
                                </DataTemplate>
                            </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                        </dxe:DialogServiceEditorBehavior>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.EditBindings}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="dxb:BarButtonItem">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.EditBindings}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=EditBindings}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.GroupFields}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="dxb:BarButtonItem">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.GroupFields}" />
        <Setter Property="IsEnabled" Value="{Binding Diagram.SelectionToolsModel[GroupFields], Converter={dxmvvm:ObjectToBooleanConverter}}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=EditGroupFields}" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxe:DialogServiceEditorBehavior
                            x:Name="dialogServiceEditorBehaviorName"
                            Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}"
                            Content="{Binding Path=Diagram.(dxrud:ReportDesigner.Document).ReportModel}"
                            Value="{Binding Diagram.SelectionToolsModel[GroupFields]}">
                            <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                <DataTemplate>
                                    <ContentControl>
                                        <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                            <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                                                    <Setter Property="Width" Value="600" />
                                                    <Setter Property="Height" Value="350" />
                                                    <Setter Property="MinWidth" Value="420" />
                                                    <Setter Property="MinHeight" Value="240" />
                                                    <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=GroupFieldsEditor_Title}" />
                                                </Style>
                                            </dxrudi:UITypeEditorDialogService.DialogStyle>
                                            <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                <DataTemplate>
                                                    <dxrude:GroupFieldCollectionUITypeEditor EditValue="{Binding Value}" />
                                                </DataTemplate>
                                            </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                        </dxrudi:UITypeEditorDialogService>
                                    </ContentControl>
                                </DataTemplate>
                            </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                        </dxe:DialogServiceEditorBehavior>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.MoveUp}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="dxb:BarButtonItem">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.MoveUp}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=MoveUp}" />
        <Setter Property="Command" Value="{Binding Diagram.XRCommands.MoveBandUp}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.MoveDown}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="dxb:BarButtonItem">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.MoveDown}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=MoveDown}" />
        <Setter Property="Command" Value="{Binding Diagram.XRCommands.MoveBandDown}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.SortFields}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="dxb:BarButtonItem">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.SortFields}" />
        <Setter Property="IsEnabled" Value="{Binding Diagram.SelectionToolsModel[SortFields], Converter={dxmvvm:ObjectToBooleanConverter}}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=EditSortFields}" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxe:DialogServiceEditorBehavior
                            x:Name="dialogServiceEditorBehaviorName"
                            Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}"
                            Content="{Binding Path=Diagram.(dxrud:ReportDesigner.Document).ReportModel}"
                            Value="{Binding Diagram.SelectionToolsModel[SortFields]}">
                            <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                <DataTemplate>
                                    <ContentControl>
                                        <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                            <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                                                    <Setter Property="Width" Value="600" />
                                                    <Setter Property="Height" Value="350" />
                                                    <Setter Property="MinWidth" Value="420" />
                                                    <Setter Property="MinHeight" Value="240" />
                                                    <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=SortFieldsEditor_Title}" />
                                                </Style>
                                            </dxrudi:UITypeEditorDialogService.DialogStyle>
                                            <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                <DataTemplate>
                                                    <dxrude:GroupFieldCollectionUITypeEditor EditValue="{Binding Value}" />
                                                </DataTemplate>
                                            </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                        </dxrudi:UITypeEditorDialogService>
                                    </ContentControl>
                                </DataTemplate>
                            </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                        </dxe:DialogServiceEditorBehavior>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.FormattingRuleSheet}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="dxb:BarButtonItem">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.FormattingRuleSheet}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=EditFormattingRuleSheet}" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxe:DialogServiceEditorBehavior
                            x:Name="dialogServiceEditorBehaviorName"
                            Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}"
                            Content="{Binding Path=Diagram.(dxrud:ReportDesigner.Document).ReportModel}"
                            Value="{Binding Diagram.SelectionToolsModel[FormattingRuleSheet]}">
                            <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                <DataTemplate>
                                    <ContentControl>
                                        <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                            <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                                                    <Setter Property="Width" Value="600" />
                                                    <Setter Property="Height" Value="350" />
                                                    <Setter Property="MinWidth" Value="420" />
                                                    <Setter Property="MinHeight" Value="240" />
                                                    <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=FormattingRuleSheetEditor_Title}" />
                                                </Style>
                                            </dxrudi:UITypeEditorDialogService.DialogStyle>
                                            <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                <DataTemplate>
                                                    <dxrude:FormattingRuleSheetUITypeEditor EditValue="{Binding Value}" ReportModel="{Binding Content}" />
                                                </DataTemplate>
                                            </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                        </dxrudi:UITypeEditorDialogService>
                                    </ContentControl>
                                </DataTemplate>
                            </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                        </dxe:DialogServiceEditorBehavior>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.StyleSheet}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="dxb:BarButtonItem">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.StyleSheet}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=EditStyleSheet}" />
        <Setter Property="IsEnabled" Value="{Binding Diagram.SelectionToolsModel[StyleSheet], Converter={dxmvvm:ObjectToBooleanConverter}}" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxe:DialogServiceEditorBehavior
                            x:Name="dialogServiceEditorBehaviorName"
                            Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}"
                            Content="{Binding Path=Diagram.(dxrud:ReportDesigner.Document).ReportModel}"
                            DialogServiceTemplate="{DynamicResource {dxrudt:LWKey ReportDesignerDialog.StyleSheetDialogServiceTemplate}}"
                            Value="{Binding Diagram.SelectionToolsModel[StyleSheet]}" />
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.Watermark}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="dxb:BarButtonItem">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.Watermark}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=EditWatermark}" />
        <Setter Property="Command" Value="{Binding Diagram.XREditorCommands.RunWatermarkEditorCommand}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.Series}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="{x:Type dxb:BarButtonItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.Series}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=Chart_Series}" />
        <Setter Property="Command" Value="{Binding Diagram.XREditorCommands.RunSeriesCollectionEditorCommand}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.Annotations}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="{x:Type dxb:BarButtonItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.Annotations}" />
        <Setter Property="Content" Value="Annotations..." />
        <Setter Property="IsEnabled" Value="{Binding Diagram.SelectionToolsModel[Annotations], Converter={dxmvvm:ObjectToBooleanConverter}}" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxe:DialogServiceEditorBehavior
                            x:Name="dialogServiceEditorBehaviorName"
                            Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}"
                            Content="{Binding Path=Diagram.(dxrud:ReportDesigner.Document).ReportModel}"
                            Value="{Binding Diagram.SelectionToolsModel[Annotations]}">
                            <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                <DataTemplate>
                                    <ContentControl>
                                        <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                            <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                                                    <Setter Property="Width" Value="600" />
                                                    <Setter Property="Height" Value="350" />
                                                    <Setter Property="MinWidth" Value="420" />
                                                    <Setter Property="MinHeight" Value="240" />
                                                    <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=Chart_AnnotationsEditor_Title}" />
                                                </Style>
                                            </dxrudi:UITypeEditorDialogService.DialogStyle>
                                            <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                <DataTemplate>
                                                    <dxrude:AnnotationCollectionUITypeEditor EditValue="{Binding Value}" ReportModel="{Binding Content}" />
                                                </DataTemplate>
                                            </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                        </dxrudi:UITypeEditorDialogService>
                                    </ContentControl>
                                </DataTemplate>
                            </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                        </dxe:DialogServiceEditorBehavior>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.AddStyle}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="{x:Type dxb:BarButtonItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.AddStyle}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=AddStyle}" />
        <Setter Property="Command" Value="{Binding Diagram.XRCommands.AddStyle}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.EditStyles}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="{x:Type dxb:BarButtonItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.EditStyles}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=EditStyles}" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxe:DialogServiceEditorBehavior
                            x:Name="dialogServiceEditorBehaviorName"
                            Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}"
                            Content="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Document).ReportModel, RelativeSource={RelativeSource Self}}"
                            DialogServiceTemplate="{DynamicResource {dxrudt:LWKey ReportDesignerDialog.StyleSheetDialogServiceTemplate}}" />
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.CloneStyle}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="{x:Type dxb:BarButtonItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.CloneStyle}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=CloneStyle}" />
        <Setter Property="Command" Value="{Binding Diagram.XRCommands.CloneStyle}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.SelectControlsWithStyle}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="{x:Type dxb:BarButtonItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.SelectControlsWithStyle}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=SelectControlsWithStyle}" />
        <Setter Property="Command" Value="{Binding Diagram.XRCommands.SelectControlsWithStyle}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.AddFormattingRule}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="{x:Type dxb:BarButtonItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.AddFormattingRule}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=AddFormattingRule}" />
        <Setter Property="Command" Value="{Binding Diagram.XRCommands.AddFormattingRule}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.AddDataSource}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="{x:Type dxb:BarButtonItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.AddDataSource}" />
        <Setter Property="Content" Value="{dxrudl:ReportStringId StringId=Cmd_AddDataSource}" />
        <Setter Property="Command" Value="{Binding Path=Diagram.(dxrud:ReportDesigner.Designer).ActualCommands.RunDataSourceWizardCommand}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.EditFormattingRules}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="{x:Type dxb:BarButtonItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.EditFormattingRules}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=EditFormattingRules}" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxe:DialogServiceEditorBehavior x:Name="dialogServiceEditorBehaviorName" Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" Content="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Document).ReportModel, RelativeSource={RelativeSource Self}}">
                            <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                <DataTemplate>
                                    <ContentControl>
                                        <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                            <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                                                    <Setter Property="Width" Value="600" />
                                                    <Setter Property="Height" Value="350" />
                                                    <Setter Property="MinWidth" Value="420" />
                                                    <Setter Property="MinHeight" Value="240" />
                                                    <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=FormattingRuleSheetEditor_Title}" />
                                                </Style>
                                            </dxrudi:UITypeEditorDialogService.DialogStyle>
                                            <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                <DataTemplate>
                                                    <dxrude:FormattingRuleSheetUITypeEditor EditValue="{Binding Content.PropertiesModel[FormattingRuleSheet]}" ReportModel="{Binding Content}" />
                                                </DataTemplate>
                                            </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                        </dxrudi:UITypeEditorDialogService>
                                    </ContentControl>
                                </DataTemplate>
                            </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                        </dxe:DialogServiceEditorBehavior>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.CloneFormattingRule}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="{x:Type dxb:BarButtonItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.CloneFormattingRule}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=CloneFormattingRule}" />
        <Setter Property="Command" Value="{Binding Diagram.XRCommands.CloneFormattingRule}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.SelectControlsWithFormattingRule}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="{x:Type dxb:BarButtonItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.SelectControlsWithFormattingRule}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=SelectControlsWithFormattingRule}" />
        <Setter Property="Command" Value="{Binding Diagram.XRCommands.SelectControlsWithFormattingRule}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.PurgeStyles}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="{x:Type dxb:BarButtonItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.PurgeStyles}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=RemoveUnusedStyles}" />
        <Setter Property="Command" Value="{Binding Diagram.XRCommands.PurgeStyles}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.ClearStyles}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="{x:Type dxb:BarButtonItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.ClearStyles}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=RemoveAllStyles}" />
        <Setter Property="Command" Value="{Binding Diagram.XRCommands.ClearStyles}" />
        <Setter Property="CommandParameter" Value="{Binding Path=Diagram.(dxrud:ReportDesigner.Designer)}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.PurgeFormattingRules}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="{x:Type dxb:BarButtonItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.PurgeFormattingRules}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=RemoveUnusedFormattingRules}" />
        <Setter Property="Command" Value="{Binding Diagram.XRCommands.PurgeFormattingRules}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.ClearFormattingRules}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="{x:Type dxb:BarButtonItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.ClearFormattingRules}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=RemoveAllFormattingRules}" />
        <Setter Property="Command" Value="{Binding Diagram.XRCommands.ClearFormattingRules}" />
        <Setter Property="CommandParameter" Value="{Binding Path=Diagram.(dxrud:ReportDesigner.Designer)}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.ConfigureConnection}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="{x:Type dxb:BarButtonItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.ConfigureConnection}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=DataSource_ConfigureConnection}" />
        <Setter Property="Command" Value="{Binding Diagram.XREditorCommands.ConfigureConnectionCommand}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.ManageMongoDBQueries}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="{x:Type dxb:BarButtonItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.ManageMongoDBQueries}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=DataSource_ManageQueries}" />
        <Setter Property="Command" Value="{Binding Diagram.XREditorCommands.RunEditMongoDBQueriesEditorCommand}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.ManageQueries}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="{x:Type dxb:BarButtonItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.ManageQueries}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=DataSource_ManageQueries}" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" DialogServiceTemplate="{DynamicResource {dxrudt:LWKey ReportDesignerDialog.ManageQueriesDialogTemplate}}">
                            <dxe:DialogServiceEditorBehavior.Content>
                                <MultiBinding Converter="{dxrudei:CollectionPropertyEditorViewModelConverter}">
                                    <Binding Path="AssociatedObject.(dxrud:ReportDesigner.Document).ReportModel" RelativeSource="{RelativeSource Self}" />
                                    <Binding Path="AssociatedObject.(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[EditableQueries]" RelativeSource="{RelativeSource Self}" />
                                </MultiBinding>
                            </dxe:DialogServiceEditorBehavior.Content>
                        </dxe:DialogServiceEditorBehavior>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.ManageFederatedQueries}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="{x:Type dxb:BarButtonItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.ManageFederatedQueries}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=DataSource_ManageQueries}" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" DialogServiceTemplate="{DynamicResource {dxrudt:LWKey ReportDesignerDialog.ManageFederatedQueriesDialogTemplate}}">
                            <dxe:DialogServiceEditorBehavior.Content>
                                <MultiBinding Converter="{dxrudei:CollectionPropertyEditorViewModelConverter}">
                                    <Binding Path="AssociatedObject.(dxrud:ReportDesigner.Document).ReportModel" RelativeSource="{RelativeSource Self}" />
                                    <Binding Path="AssociatedObject.(dxrud:ReportDesigner.Document).Diagram.SelectionToolsModel[EditableQueries]" RelativeSource="{RelativeSource Self}" />
                                </MultiBinding>
                            </dxe:DialogServiceEditorBehavior.Content>
                        </dxe:DialogServiceEditorBehavior>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.ManageRelations}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="{x:Type dxb:BarButtonItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.ManageRelations}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=DataSource_ManageRelations}" />
        <Setter Property="Command" Value="{Binding Path=Diagram.(dxrud:ReportDesigner.Designer).ActualCommands.RunManageRelationsEditorCommand}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.RebuildSchema}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="{x:Type dxb:BarButtonItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.RebuildSchema}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=DataSource_RebuildSchema}" />
        <Setter Property="Command" Value="{Binding Diagram.XRCommands.RebuildSchema}" />
        <Setter Property="CommandParameter" Value="{Binding Path=Diagram.(dxrud:ReportDesigner.Designer)}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.RebuildFederationDataSourceSchema}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="{x:Type dxb:BarButtonItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.RebuildSchema}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=DataSource_RebuildSchema}" />
        <Setter Property="Command" Value="{Binding Diagram.XRCommands.RebuildFederationDataSourceSchema}" />
        <Setter Property="CommandParameter" Value="{Binding Path=Diagram.(dxrud:ReportDesigner.Designer)}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.RequestDatabaseSchema}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="{x:Type dxb:BarButtonItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.RequestDatabaseSchema}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=DataSource_RebuildDatabaseSchema}" />
        <Setter Property="Command" Value="{Binding Diagram.XRCommands.RequestDatabaseSchema}" />
        <Setter Property="CommandParameter" Value="{Binding Path=Diagram.(dxrud:ReportDesigner.Designer)}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.EditEFDataSource}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="{x:Type dxb:BarButtonItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.EditEFDataSource}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=ContextMenu_Edit}" />
        <Setter Property="Command" Value="{Binding Diagram.XRCommands.EditEFDataSource}" />
        <Setter Property="CommandParameter" Value="{Binding Path=Diagram.(dxrud:ReportDesigner.Designer)}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.EditJsonDataSource}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="{x:Type dxb:BarButtonItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.EditJsonDataSource}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=ContextMenu_Edit}" />
        <Setter Property="Command" Value="{Binding Diagram.XREditorCommands.RunJsonSourceEditorCommand}" />
    </Style>

    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.EditExcelDataSource}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="{x:Type dxb:BarButtonItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.EditExcelDataSource}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=ContextMenu_Edit}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.EditSchema}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="{x:Type dxb:BarButtonItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.EditSchema}" />
        <Setter Property="Content" Value="{dxda:DataAccessUIStringId StringId=ExcelDataSourceDesignerVerbEditSchema}" />
        <Setter Property="Command" Value="{Binding Diagram.XREditorCommands.RunExcelSchemaEditorCommand}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.UpdateSchema}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="{x:Type dxb:BarButtonItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.UpdateSchema}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=DataSource_UpdateSchema}" />
        <Setter Property="Command" Value="{Binding Diagram.XRCommands.UpdateSchema}" />
        <Setter Property="CommandParameter" Value="{Binding Path=Diagram.(dxrud:ReportDesigner.Designer)}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.AddCalculatedField}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="{x:Type dxb:BarButtonItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.AddCalculatedField}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=AddCalculatedField}" />
        <Setter Property="Command" Value="{Binding Diagram.XRCommands.AddCalculatedField}" />
        <Setter Property="CommandParameter" Value="{Binding Node}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.EditCalculatedFields}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="{x:Type dxb:BarButtonItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.EditCalculatedFields}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=EditCalculatedFields}" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" Content="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Document).ReportModel, RelativeSource={RelativeSource Self}}" DialogServiceTemplate="{DynamicResource {dxrudt:LWKey ReportDesignerDialog.CalculatedFieldsDialogTemplate}}" />
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.RemoveAllCalculatedFields}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="{x:Type dxb:BarButtonItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.RemoveAllCalculatedFields}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=RemoveCalculatedFields}" />
        <Setter Property="Command" Value="{Binding Diagram.XRCommands.RemoveAllCalculatedFields}" />
        <Setter Property="CommandParameter" Value="{Binding Path=Diagram.(dxrud:ReportDesigner.Designer)}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.EditExpression}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="{x:Type dxb:BarButtonItem}">
        <!--<Setter Property="IsEnabled" Value="{Binding Diagram.SelectionToolsModel[Expression], Converter={dxmvvm:ObjectToBooleanConverter}}" />-->
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.EditExpression}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=ContextMenu_EditExpression}" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}">
                            <dxe:DialogServiceEditorBehavior.Content>
                                <MultiBinding Converter="{dxrudei:CalculatedFieldExpressionPropertyDataConverter}">
                                    <Binding Path="AssociatedObject.(dxrud:ReportDesigner.Document).ReportModel" RelativeSource="{RelativeSource Self}" />
                                    <Binding Path="AssociatedObject.(dxrud:ReportDesigner.Document).ReportModel.SelectedModel.XRObjectBase" RelativeSource="{RelativeSource Self}" />
                                </MultiBinding>
                            </dxe:DialogServiceEditorBehavior.Content>
                            <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                <DataTemplate>
                                    <ContentControl>
                                        <dxrudi:UITypeEditorDialogService>
                                            <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                <Style BasedOn="{dx:TargetStaticResource {dxdat:LWKey ExpressionEditorWindowTemplate.ExpressionEditorControlWindowStyle}, TargetDictionary={dxi:ThemeResourceDictionary Path='DataAccess/Generic.BaseStyles.xaml'}}" TargetType="dx:ThemedWindow">
                                                    <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=ExpressionEditor_Title}" />
                                                </Style>
                                            </dxrudi:UITypeEditorDialogService.DialogStyle>
                                            <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                <DataTemplate>
                                                    <dxrudei:ReportExpressionEditorControl
                                                        Context="{Binding Content.ExpressionEditorContext}"
                                                        ContextInstance="{Binding Content.SelectedComponent, Mode=OneTime}"
                                                        EditValue="{Binding Content.ReportModel.Diagram.SelectionToolsModel[Expression]}"
                                                        ReportModel="{Binding Content.ReportModel}" />
                                                </DataTemplate>
                                            </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                        </dxrudi:UITypeEditorDialogService>
                                    </ContentControl>
                                </DataTemplate>
                            </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                        </dxe:DialogServiceEditorBehavior>
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.AddParameter}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="{x:Type dxb:BarButtonItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.AddParameter}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=AddParameter}" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" Content="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Document).ReportModel, RelativeSource={RelativeSource Self}}" DialogServiceTemplate="{DynamicResource {dxrudt:LWKey ReportDesignerDialog.AddNewParameterDialogServiceTemplate}}" />
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.EditParameters}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="{x:Type dxb:BarButtonItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.EditParameters}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=EditParameters}" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" Content="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Document).ReportModel, RelativeSource={RelativeSource Self}}" DialogServiceTemplate="{DynamicResource {dxrudt:LWKey ReportDesignerDialog.EditParametersDialogServiceTemplate}}" />
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.RemoveAllParameters}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="{x:Type dxb:BarButtonItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.RemoveAllParameters}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=RemoveAllParameters}" />
        <Setter Property="Command" Value="{Binding Diagram.XRCommands.RemoveAllParameters}" />
        <Setter Property="CommandParameter" Value="{Binding Path=Diagram.(dxrud:ReportDesigner.Designer)}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.Palettes}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="{x:Type dxb:BarButtonItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.Palettes}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=Chart_EditPalettes}" />
        <Setter Property="Command" Value="{Binding Diagram.XREditorCommands.RunChartPaletteEditorCommand}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.SaveChartLayout}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="{x:Type dxb:BarButtonItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.SaveChartLayout}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=Save}" />
        <Setter Property="Command" Value="{Binding Diagram.XREditorCommands.SaveChartLayout}" />
    </Style>
    <Style x:Key="{x:Static dxrud:DefaultContextMenuItemNames.LoadChartLayout}" BasedOn="{StaticResource ContextMenuBaseItem}" TargetType="{x:Type dxb:BarButtonItem}">
        <Setter Property="dx:XamlHelper.Name" Value="{x:Static dxrud:DefaultContextMenuItemNames.LoadChartLayout}" />
        <Setter Property="Content" Value="{dxrudl:ReportDesignerStringId StringId=Load}" />
        <Setter Property="Command" Value="{Binding Diagram.XREditorCommands.LoadChartLayout}" />
    </Style>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\XRDiagram\LinkStyle.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\DialogEditors.xaml-->
    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerDialog.WatermarkDialogServiceTemplate}">
        <ContentControl>
            <dxrudi:UITypeEditorDialogService DialogStyle="{StaticResource WatermarkDialogStyle}" DialogWindowStartupLocation="CenterOwner" ViewTemplate="{DynamicResource {dxpt:LWKey NewDocumentViewer.WatermarkDialogTemplate}}" />
        </ContentControl>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerDialog.PageSetupDialogServiceTemplate}">
        <ContentControl>
            <dxrudi:UITypeEditorDialogService ViewTemplate="{DynamicResource {dxpt:LWKey NewDocumentViewer.PageSetupDialogTemplate}}">
                <dxrudi:UITypeEditorDialogService.DialogStyle>
                    <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                        <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=PageSetup_Caption}" />
                        <Setter Property="SizeToContent" Value="WidthAndHeight" />
                        <Setter Property="ResizeMode" Value="NoResize" />
                    </Style>
                </dxrudi:UITypeEditorDialogService.DialogStyle>

            </dxrudi:UITypeEditorDialogService>
        </ContentControl>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerDialog.ChartPaletteEditorServiceTemplate}">
        <ContentControl>
            <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                <dxrudi:UITypeEditorDialogService.DialogStyle>
                    <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="{x:Type dx:ThemedWindow}">
                        <Setter Property="Width" Value="570" />
                        <Setter Property="Height" Value="430" />
                        <Setter Property="MinWidth" Value="420" />
                        <Setter Property="MinHeight" Value="240" />
                        <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=Chart_PalettesEditor_Title}" />
                    </Style>
                </dxrudi:UITypeEditorDialogService.DialogStyle>
                <dxrudi:UITypeEditorDialogService.ViewTemplate>
                    <DataTemplate>
                        <dxrude:PaletteCollectionUITypeEditor EditValue="{Binding Content.Diagram.SelectionToolsModel[Palettes]}" PaletteRepository="{Binding Content.SelectedModel, Converter={dxrudi:XRChartDiagramItemToPaletteRepositoryConverter ChartRepository=PaletteRepository}}" ReportModel="{Binding Content}" />
                    </DataTemplate>
                </dxrudi:UITypeEditorDialogService.ViewTemplate>
            </dxrudi:UITypeEditorDialogService>
        </ContentControl>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerDialog.ChartSeriesCollectionEditorDialogServiceTemplate}">
        <ContentControl>
            <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                <dxrudi:UITypeEditorDialogService.DialogStyle>
                    <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                        <Setter Property="Width" Value="930" />
                        <Setter Property="Height" Value="550" />
                        <Setter Property="MinWidth" Value="420" />
                        <Setter Property="MinHeight" Value="240" />
                        <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=Chart_SeriesEditor_Title}" />
                    </Style>
                </dxrudi:UITypeEditorDialogService.DialogStyle>
                <dxrudi:UITypeEditorDialogService.ViewTemplate>
                    <DataTemplate>
                        <dxrude:SeriesCollectionUITypeEditor EditValue="{Binding Content.Diagram.SelectionToolsModel[Series]}" ReportModel="{Binding Content}" />
                    </DataTemplate>
                </dxrudi:UITypeEditorDialogService.ViewTemplate>
            </dxrudi:UITypeEditorDialogService>
        </ContentControl>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerDialog.ChartAnnotationsEditorDialogServiceTemplate}">
        <ContentControl>
            <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                <dxrudi:UITypeEditorDialogService.DialogStyle>
                    <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                        <Setter Property="Width" Value="600" />
                        <Setter Property="Height" Value="350" />
                        <Setter Property="MinWidth" Value="420" />
                        <Setter Property="MinHeight" Value="240" />
                        <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=Chart_AnnotationsEditor_Title}" />
                    </Style>
                </dxrudi:UITypeEditorDialogService.DialogStyle>
                <dxrudi:UITypeEditorDialogService.ViewTemplate>
                    <DataTemplate>
                        <dxrude:AnnotationCollectionUITypeEditor AnnotatedComponent="{Binding Content.SelectedComponent}" EditValue="{Binding Content.Value}" ReportModel="{Binding Content.ReportModel}" />
                    </DataTemplate>
                </dxrudi:UITypeEditorDialogService.ViewTemplate>
            </dxrudi:UITypeEditorDialogService>
        </ContentControl>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerDialog.DataSourceWizardDialogTemplate}">
        <ContentControl>
            <dxrudi:UITypeEditorDialogService DialogStyle="{DynamicResource {dxrudt:LWKey ReportDesignerDialog.DataSourceWizardDialogStyle}}" DialogWindowStartupLocation="CenterOwner">
                <dxrudi:UITypeEditorDialogService.ViewTemplate>
                    <DataTemplate>
                        <dxrudw:ReportDataSourceWizardControl
                            DataSourceWizardExtensions="{Binding Path=Content.DataSourceWizardExtensions, Mode=OneWay}"
                            DataSourceWizardSettings="{Binding Content.DataSourceWizardSettings, Mode=OneWay}"
                            ParameterService="{Binding Path=Content.ParameterService, Mode=OneWay}"
                            ServicesRegistry="{Binding Path=Content.ServicesRegistry, Mode=OneWay}" />
                    </DataTemplate>
                </dxrudi:UITypeEditorDialogService.ViewTemplate>
            </dxrudi:UITypeEditorDialogService>
        </ContentControl>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerDialog.CalculatedFieldsDialogTemplate}">
        <ContentControl>
            <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                <dxrudi:UITypeEditorDialogService.DialogStyle>
                    <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                        <Setter Property="Width" Value="600" />
                        <Setter Property="Height" Value="350" />
                        <Setter Property="MinWidth" Value="420" />
                        <Setter Property="MinHeight" Value="240" />
                        <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=CalculatedFields_Editor_Title}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=(dx:ThemeManager.IsTouchlineTheme), RelativeSource={RelativeSource Self}}" Value="True">
                                <Setter Property="Width" Value="900" />
                                <Setter Property="Height" Value="600" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=(dx:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource Self}}" Value="True">
                                <Setter Property="Width" Value="900" />
                                <Setter Property="Height" Value="600" />
                            </DataTrigger>
                        </Style.Triggers>


                    </Style>
                </dxrudi:UITypeEditorDialogService.DialogStyle>
                <dxrudi:UITypeEditorDialogService.ViewTemplate>
                    <DataTemplate>
                        <dxrude:CalculatedFieldCollectionUITypeEditor EditValue="{Binding Content.PropertiesModel[CalculatedFields]}" ReportModel="{Binding Content}" />
                    </DataTemplate>
                </dxrudi:UITypeEditorDialogService.ViewTemplate>
            </dxrudi:UITypeEditorDialogService>
        </ContentControl>
    </DataTemplate>


    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerDialog.ManageFederatedQueriesDialogTemplate}">
        <ContentControl>
            <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                <dxrudi:UITypeEditorDialogService.DialogStyle>
                    <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="{x:Type dx:ThemedWindow}">
                        <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=DataSource_ManageQueries}" />
                        <Setter Property="MinWidth" Value="1000" />
                        <Setter Property="MinHeight" Value="650" />
                        <Setter Property="Width" Value="1440" />
                        <Setter Property="Height" Value="780" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=(dx:ThemeManager.IsTouchlineTheme), RelativeSource={RelativeSource Self}}" Value="True">
                                <Setter Property="Width" Value="780" />
                                <Setter Property="Height" Value="620" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=(dx:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource Self}}" Value="True">
                                <Setter Property="Width" Value="780" />
                                <Setter Property="Height" Value="620" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </dxrudi:UITypeEditorDialogService.DialogStyle>
                <dxrudi:UITypeEditorDialogService.ViewTemplate>
                    <DataTemplate>
                        <dxrude:FederatedQueryCollectionEditor EditValue="{Binding Content.SelectedObject}" ReportModel="{Binding Content.Report}" />
                    </DataTemplate>
                </dxrudi:UITypeEditorDialogService.ViewTemplate>
            </dxrudi:UITypeEditorDialogService>
        </ContentControl>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerDialog.ManageQueriesDialogTemplate}">
        <ContentControl>
            <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                <dxrudi:UITypeEditorDialogService.DialogStyle>
                    <Style BasedOn="{StaticResource DXDialogWindowStyleBase}" TargetType="{x:Type dx:DXDialogWindow}">
                        <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=DataSource_ManageQueries}" />
                        <Setter Property="MinWidth" Value="1000" />
                        <Setter Property="MinHeight" Value="650" />
                        <Setter Property="Width" Value="1440" />
                        <Setter Property="Height" Value="780" />
                    </Style>
                </dxrudi:UITypeEditorDialogService.DialogStyle>
                <dxrudi:UITypeEditorDialogService.ViewTemplate>
                    <DataTemplate>
                        <dxrude:SqlQueryCollectionUITypeEditor EditValue="{Binding Content.SelectedObject}" ReportModel="{Binding Content.Report}" />
                    </DataTemplate>
                </dxrudi:UITypeEditorDialogService.ViewTemplate>
            </dxrudi:UITypeEditorDialogService>
        </ContentControl>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerDialog.MasterDetailEditorDialogTemplate}">
        <ContentControl>
            <dx:DialogService>
                <dx:DialogService.DialogStyle>
                    <Style BasedOn="{StaticResource CustomFooterThemedWindowDialogStyle}" TargetType="{x:Type dx:ThemedWindow}">
                        <Setter Property="Width" Value="600" />
                        <Setter Property="Height" Value="430" />
                        <Setter Property="MinWidth" Value="420" />
                        <Setter Property="MinHeight" Value="240" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=(dx:ThemeManager.IsTouchlineTheme), RelativeSource={RelativeSource Self}}" Value="True">
                                <Setter Property="Width" Value="1350" />
                                <Setter Property="Height" Value="750" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=(dx:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource Self}}" Value="True">
                                <Setter Property="Width" Value="1350" />
                                <Setter Property="Height" Value="750" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </dx:DialogService.DialogStyle>
                <dx:DialogService.ViewTemplate>
                    <DataTemplate>
                        <dxdai:MasterDetailEditor />
                    </DataTemplate>
                </dx:DialogService.ViewTemplate>
            </dx:DialogService>
        </ContentControl>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerDialog.AddNewParameterDialogServiceTemplate}">
        <ContentControl>
            <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                <dxrudi:UITypeEditorDialogService.DialogStyle>
                    <Style BasedOn="{StaticResource CustomFooterThemedWindowDialogStyle}" TargetType="{x:Type dx:ThemedWindow}">
                        <Setter Property="ResizeMode" Value="NoResize" />
                        <Setter Property="SizeToContent" Value="WidthAndHeight" />
                        <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=AddParameter}" />

                    </Style>
                </dxrudi:UITypeEditorDialogService.DialogStyle>
                <dxrudi:UITypeEditorDialogService.ViewTemplate>
                    <DataTemplate>
                        <dxrude:ReportParameterEditorControl ReportModel="{Binding Content}" />
                    </DataTemplate>
                </dxrudi:UITypeEditorDialogService.ViewTemplate>
            </dxrudi:UITypeEditorDialogService>
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerDialog.EditParametersDialogServiceTemplate}">
        <ContentControl>
            <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                <dxrudi:UITypeEditorDialogService.DialogStyle>
                    <Style BasedOn="{StaticResource CustomFooterThemedWindowDialogStyle}" TargetType="dx:ThemedWindow">
                        <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=ParametersEditor_Title}" />
                        <Setter Property="Width" Value="900" />
                        <Setter Property="SizeToContent" Value="Height" />
                        <Setter Property="ResizeMode" Value="NoResize" />
                    </Style>
                </dxrudi:UITypeEditorDialogService.DialogStyle>
                <dxrudi:UITypeEditorDialogService.ViewTemplate>
                    <DataTemplate>
                        <dxrude:ReportParameterCollectionEditorControl ReportModel="{Binding Content}" />
                    </DataTemplate>
                </dxrudi:UITypeEditorDialogService.ViewTemplate>
            </dxrudi:UITypeEditorDialogService>
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerDialog.FavoritePropertiesEditorDialogServiceTemplate}">
        <ContentControl>
            <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                <dxrudi:UITypeEditorDialogService.DialogStyle>
                    <Style BasedOn="{StaticResource CustomFooterThemedWindowDialogStyle}" TargetType="{x:Type dx:ThemedWindow}">
                        <Setter Property="SizeToContent" Value="Width" />
                        <Setter Property="MinWidth" Value="560" />
                        <Setter Property="MinHeight" Value="460" />
                        <Setter Property="Height" Value="530" />
                        <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=FavoritePropertiesEditor}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=(dx:ThemeManager.IsTouchlineTheme), RelativeSource={RelativeSource Self}}" Value="True">
                                <Setter Property="MinWidth" Value="900" />
                                <Setter Property="Height" Value="750" />
                                <Setter Property="MinHeight" Value="700" />

                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=(dx:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource Self}}" Value="True">
                                <Setter Property="MinWidth" Value="900" />
                                <Setter Property="Height" Value="750" />
                                <Setter Property="MinHeight" Value="700" />
                            </DataTrigger>
                        </Style.Triggers>

                    </Style>
                </dxrudi:UITypeEditorDialogService.DialogStyle>
                <dxrudi:UITypeEditorDialogService.ViewTemplate>
                    <DataTemplate>
                        <propertygrid:FavoritePropertiesEditor ReportModel="{Binding Content}" />
                    </DataTemplate>
                </dxrudi:UITypeEditorDialogService.ViewTemplate>
            </dxrudi:UITypeEditorDialogService>
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerDialog.SplitTableCellsEditorDialogTemplate}">
        <ContentControl>
            <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                <dxrudi:UITypeEditorDialogService.DialogStyle>
                    <Style BasedOn="{StaticResource CustomFooterThemedWindowDialogStyle}" TargetType="{x:Type dx:ThemedWindow}">
                        <Setter Property="Width" Value="230" />
                        <Setter Property="Height" Value="180" />
                        <Setter Property="MinWidth" Value="100" />
                        <Setter Property="MinHeight" Value="50" />
                        <Setter Property="ResizeMode" Value="NoResize" />
                        <Setter Property="SizeToContent" Value="WidthAndHeight" />
                        <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=SplitCells}" />
                    </Style>
                </dxrudi:UITypeEditorDialogService.DialogStyle>
                <dxrudi:UITypeEditorDialogService.ViewTemplate>
                    <DataTemplate>
                        <StackPanel>
                            <StackPanel.Resources>
                                <Style x:Key="editStyle" TargetType="dxe:TextEdit">
                                    <Setter Property="Margin" Value="6,0,0,4" />
                                    <Setter Property="MinWidth" Value="90" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=(dx:ThemeManager.IsTouchlineTheme), RelativeSource={RelativeSource Self}}" Value="True">
                                            <Setter Property="MinWidth" Value="160" />
                                            <Setter Property="Margin" Value="12,0,0,8" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=(dx:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource Self}}" Value="True">
                                            <Setter Property="MinWidth" Value="160" />
                                            <Setter Property="Margin" Value="12,0,0,8" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Resources>
                            <Grid Margin="12,12,12,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>
                                <TextBlock VerticalAlignment="Center" Text="Number of columns:" />
                                <dxe:SpinEdit
                                    Grid.Column="1"
                                    EditValue="{Binding ColumnCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                    EditValueType="{x:Type sys:Int32}"
                                    MaxValue="64"
                                    MinValue="1"
                                    Style="{StaticResource editStyle}" />
                                <TextBlock Grid.Row="1" VerticalAlignment="Center" Text="Number of rows:" />
                                <dxe:ButtonEdit
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    HorizontalContentAlignment="Right"
                                    AllowDefaultButton="False"
                                    AllowSpinOnMouseWheel="True"
                                    EditValue="{Binding RowCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                    EditValueType="{x:Type sys:Int32}"
                                    MaskType="Numeric"
                                    Style="{StaticResource editStyle}">
                                    <dxe:ButtonEdit.Buttons>
                                        <dxe:SpinButtonInfo SpinDownCommand="{Binding SpinDownCommand}" SpinStyle="Vertical" SpinUpCommand="{Binding SpinUpCommand}" />
                                    </dxe:ButtonEdit.Buttons>
                                    <dxe:ButtonEdit.IsEnabled>
                                        <MultiBinding Converter="{dxrudi:SelectedCellsRowCountEditorEnabledConverter}">
                                            <Binding Path="SelectedRowCount" />
                                            <Binding Path="SelectedCells" />
                                            <Binding Path="MergeCellsBeforeSplit" />
                                        </MultiBinding>
                                    </dxe:ButtonEdit.IsEnabled>
                                </dxe:ButtonEdit>

                                <dxe:CheckEdit
                                    Grid.Row="2"
                                    Grid.ColumnSpan="2"
                                    Content="Merge cells before split"
                                    EditValue="{Binding MergeCellsBeforeSplit, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    IsEnabled="{Binding MergeCellsBeforeSplitEnabled}" />
                            </Grid>

                            <dx:ThemedWindowDialogButtonsControl>
                                <dxrudi:LocalizedDialogButton Command="{Binding SaveCommand}" DialogResult="OK" />
                                <dxrudi:LocalizedDialogButton DialogResult="Cancel" />
                            </dx:ThemedWindowDialogButtonsControl>
                        </StackPanel>
                    </DataTemplate>
                </dxrudi:UITypeEditorDialogService.ViewTemplate>
            </dxrudi:UITypeEditorDialogService>
        </ContentControl>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerDialog.ExpressionCollectionDialogTemplate}">
        <ContentControl>
            <dxrudi:UITypeEditorDialogService>
                <dxrudi:UITypeEditorDialogService.DialogStyle>
                    <Style BasedOn="{StaticResource CustomFooterThemedWindowDialogStyle}" TargetType="dx:ThemedWindow">
                        <Setter Property="Width" Value="900" />
                        <Setter Property="Height" Value="600" />
                        <Setter Property="MinWidth" Value="800" />
                        <Setter Property="MinHeight" Value="600" />
                        <Setter Property="Title" Value="{Binding Title}" />
                    </Style>
                </dxrudi:UITypeEditorDialogService.DialogStyle>
                <dxrudi:UITypeEditorDialogService.ViewTemplate>
                    <DataTemplate>
                        <propertyeditors:ReportExpressionCollectionEditor DefaultPropertyPath="{Binding SelectionPath}" ReportModel="{Binding ReportModel}" />
                    </DataTemplate>
                </dxrudi:UITypeEditorDialogService.ViewTemplate>
            </dxrudi:UITypeEditorDialogService>
        </ContentControl>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerDialog.SetExpressionDialogTemplate}">
        <ContentControl>
            <dxrudi:UITypeEditorDialogService>
                <dxrudi:UITypeEditorDialogService.DialogStyle>
                    <Style BasedOn="{StaticResource ExpressionEditorDialogStyle}" TargetType="dx:ThemedWindow" />
                </dxrudi:UITypeEditorDialogService.DialogStyle>
                <dxrudi:UITypeEditorDialogService.ViewTemplate>
                    <DataTemplate>
                        <dxrudei:ReportExpressionEditorControl
                            Context="{Binding ExpressionEditorContext}"
                            ContextInstance="{Binding SelectedComponent, Mode=OneTime}"
                            EditValue="{Binding Value, Mode=TwoWay}"
                            ReportModel="{Binding ReportModel}"
                            ResultType="{Binding ResultType}"
                            Settings="{Binding Settings}" />
                    </DataTemplate>
                </dxrudi:UITypeEditorDialogService.ViewTemplate>
            </dxrudi:UITypeEditorDialogService>
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerDialog.ConvertBindingsQuestionDialogServiceTemplate}">
        <ContentControl>
            <dx:DialogService>
                <dx:DialogService.DialogStyle>
                    <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                        <Setter Property="Title" Value="{dxrudl:ReportStringId StringId=UD_ReportDesigner}" />
                        <Setter Property="SizeToContent" Value="WidthAndHeight" />
                        <!--<Setter Property="CommandButtonsPanel">
                            <Setter.Value>
                                <ItemsPanelTemplate>
                                    <StackPanel HorizontalAlignment="Center" Orientation="Horizontal"/>
                                </ItemsPanelTemplate>
                            </Setter.Value>
                        </Setter>-->
                    </Style>

                </dx:DialogService.DialogStyle>
                <dx:DialogService.ViewTemplate>
                    <DataTemplate>
                        <Grid Margin="24,16,24,22">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <dx:DXImage
                                x:Name="PART_MessageBoxImage"
                                Width="48"
                                Height="48"
                                Margin="-6,-1,4,-4"
                                VerticalAlignment="Top"
                                SnapsToDevicePixels="True"
                                Source="{dx:SvgImageSource Uri={dx:UtilsResource Core/Window/Icons/Question_48x48.svg}}"
                                Stretch="UniformToFill" />
                            <StackPanel Grid.Column="1" VerticalAlignment="Center">
                                <TextBlock
                                    Grid.Column="1"
                                    MaxWidth="{x:Static SystemParameters.MaximizedPrimaryScreenWidth}"
                                    VerticalAlignment="Center"
                                    Background="Transparent"
                                    Focusable="False"
                                    Text="{Binding Message}"
                                    TextWrapping="Wrap" />
                                <dxe:HyperlinkEdit
                                    Margin="0,0,4,0"
                                    AllowAutoNavigate="True"
                                    NavigationUrl="{Binding LinkUrl}"
                                    Text="{Binding LinkText}"
                                    ToolTip="{x:Null}" />
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                </dx:DialogService.ViewTemplate>
            </dx:DialogService>
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerDialog.EditSqlQueryDialogServiceTemplate}">
        <ContentControl>
            <dx:DialogService DialogStyle="{DynamicResource {dxrudt:LWKey ReportDesignerDialog.DataSourceWizardDialogStyle}}" DialogWindowStartupLocation="CenterOwner">
                <dx:DialogService.ViewTemplate>
                    <DataTemplate>
                        <dxdaw:DataSourceWizardControl
                            DataSourceModel="{Binding DataSourceModel, Mode=TwoWay}"
                            DataSourceWizardSettings="{Binding DataSourceWizardSettings}"
                            ParameterService="{Binding ParameterService}"
                            ServicesRegistry="{Binding ServicesRegistry}"
                            StartPage="{Binding StartPage}" />
                    </DataTemplate>
                </dx:DialogService.ViewTemplate>
            </dx:DialogService>
        </ContentControl>
    </DataTemplate>


    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerDialog.LocalizationEditorTemplate}">
        <ContentControl>
            <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                <dxrudi:UITypeEditorDialogService.DialogStyle>
                    <Style BasedOn="{StaticResource CustomFooterThemedWindowDialogStyle}" TargetType="dx:ThemedWindow">
                        <Setter Property="Width" Value="900" />
                        <Setter Property="Height" Value="550" />
                        <Setter Property="MinWidth" Value="370" />
                        <Setter Property="MinHeight" Value="350" />
                        <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=LocalizationEditor_Title}" />
                    </Style>
                </dxrudi:UITypeEditorDialogService.DialogStyle>
                <dxrudi:UITypeEditorDialogService.ViewTemplate>
                    <DataTemplate>
                        <propertyeditors:LocalizationCollectionEditor ReportModel="{Binding Content.ReportModel}" />
                    </DataTemplate>
                </dxrudi:UITypeEditorDialogService.ViewTemplate>
            </dxrudi:UITypeEditorDialogService>
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerDialog.BindingsEditorTemplate}">
        <ContentControl>
            <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                <dxrudi:UITypeEditorDialogService.DialogStyle>
                    <Style BasedOn="{StaticResource CustomFooterThemedWindowDialogStyle}" TargetType="dx:ThemedWindow">
                        <Setter Property="Width" Value="800" />
                        <Setter Property="Height" Value="500" />
                        <Setter Property="MinWidth" Value="500" />
                        <Setter Property="MinHeight" Value="300" />
                        <Setter Property="ResizeMode" Value="NoResize" />
                        <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=BindingsEditor_Title}" />
                    </Style>
                </dxrudi:UITypeEditorDialogService.DialogStyle>
                <dxrudi:UITypeEditorDialogService.ViewTemplate>
                    <DataTemplate>
                        <dxrude:BindingsEditor ReportModel="{Binding Content.ReportModel}" />
                    </DataTemplate>
                </dxrudi:UITypeEditorDialogService.ViewTemplate>
            </dxrudi:UITypeEditorDialogService>
        </ContentControl>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerDialog.SubreportParameterBindingsEditorDialogServiceTemplate}">
        <ContentControl>
            <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterScreen">
                <dxrudi:UITypeEditorDialogService.DialogStyle>
                    <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                        <Setter Property="Width" Value="650" />
                        <Setter Property="Height" Value="350" />
                        <Setter Property="MinWidth" Value="420" />
                        <Setter Property="MinHeight" Value="240" />
                    </Style>
                </dxrudi:UITypeEditorDialogService.DialogStyle>
                <dxrudi:UITypeEditorDialogService.ViewTemplate>
                    <DataTemplate>
                        <dxrude:ParameterBindingCollectionUITypeEditor EditValue="{Binding Value}" ReportModel="{Binding Content}" />
                    </DataTemplate>
                </dxrudi:UITypeEditorDialogService.ViewTemplate>
            </dxrudi:UITypeEditorDialogService>
        </ContentControl>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerDialog.FormattingRuleSheetDialogServiceTemplate}">
        <ContentControl>
            <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                <dxrudi:UITypeEditorDialogService.DialogStyle>
                    <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="{x:Type dx:ThemedWindow}">
                        <Setter Property="Width" Value="600" />
                        <Setter Property="Height" Value="350" />
                        <Setter Property="MinWidth" Value="420" />
                        <Setter Property="MinHeight" Value="240" />
                        <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=FormattingRuleSheetEditor_Title}" />
                    </Style>
                </dxrudi:UITypeEditorDialogService.DialogStyle>
                <dxrudi:UITypeEditorDialogService.ViewTemplate>
                    <DataTemplate>
                        <dxrude:FormattingRuleSheetUITypeEditor EditValue="{Binding Value}" ReportModel="{Binding Content}" />
                    </DataTemplate>
                </dxrudi:UITypeEditorDialogService.ViewTemplate>
            </dxrudi:UITypeEditorDialogService>
        </ContentControl>
    </DataTemplate>


    <DataTemplate x:Key="mongoDBParametersCollectionEditorTemplate">
        <ContentControl>
            <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                <dxrudi:UITypeEditorDialogService.DialogStyle>
                    <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="{x:Type dx:ThemedWindow}">
                        <Setter Property="Width" Value="600" />
                        <Setter Property="Height" Value="410" />
                        <Setter Property="MinWidth" Value="600" />
                        <Setter Property="MinHeight" Value="410" />
                        <Setter Property="Title" Value="Query Parameters" />
                    </Style>
                </dxrudi:UITypeEditorDialogService.DialogStyle>
                <dxrudi:UITypeEditorDialogService.ViewTemplate>
                    <DataTemplate>
                        <dxrude:MongoDBParameterCollectionUITypeEditor EditValue="{Binding Value}" MongoQuery="{Binding Content.SelectedComponent}" />
                    </DataTemplate>
                </dxrudi:UITypeEditorDialogService.ViewTemplate>
            </dxrudi:UITypeEditorDialogService>
        </ContentControl>
    </DataTemplate>

    <DataTemplate x:Key="mongoDBFilterStringEditorTemplate">
        <ContentControl>
            <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                <dxrudi:UITypeEditorDialogService.DialogStyle>
                    <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="{x:Type dx:ThemedWindow}">
                        <Setter Property="Width" Value="650" />
                        <Setter Property="Height" Value="400" />
                        <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=FilterStringEditor_Title}" />
                    </Style>
                </dxrudi:UITypeEditorDialogService.DialogStyle>
                <dxrudi:UITypeEditorDialogService.ViewTemplate>
                    <DataTemplate>
                        <dxrude:MongoDBQueryFilterStringEditor EditValue="{Binding Value}" MongoQuery="{Binding Content.SelectedComponent}" ReportModel="{Binding Content.ReportModel}" />
                    </DataTemplate>
                </dxrudi:UITypeEditorDialogService.ViewTemplate>
            </dxrudi:UITypeEditorDialogService>
        </ContentControl>
    </DataTemplate>

    <DataTemplate x:Key="sqlQueryFilterStringEditorTemplate">
        <ContentControl>
            <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                <dxrudi:UITypeEditorDialogService.DialogStyle>
                    <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="{x:Type dx:ThemedWindow}">
                        <Setter Property="Width" Value="650" />
                        <Setter Property="Height" Value="400" />
                        <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=FilterStringEditor_Title}" />
                    </Style>
                </dxrudi:UITypeEditorDialogService.DialogStyle>
                <dxrudi:UITypeEditorDialogService.ViewTemplate>
                    <DataTemplate>
                        <dxrude:SelectQueryFilterStringEditor EditValue="{Binding Value}" ReportModel="{Binding Content.ReportModel}" SelectQuery="{Binding Content.SelectedComponent}" />
                    </DataTemplate>
                </dxrudi:UITypeEditorDialogService.ViewTemplate>
            </dxrudi:UITypeEditorDialogService>
        </ContentControl>
    </DataTemplate>

    <DataTemplate x:Key="sqlParametersCollectionEditorTemplate">
        <ContentControl>
            <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                <dxrudi:UITypeEditorDialogService.DialogStyle>
                    <Style BasedOn="{StaticResource CustomFooterThemedWindowDialogStyle}" TargetType="{x:Type dx:ThemedWindow}">
                        <Setter Property="Width" Value="600" />
                        <Setter Property="Height" Value="410" />
                        <Setter Property="MinWidth" Value="600" />
                        <Setter Property="MinHeight" Value="410" />
                        <Setter Property="Title" Value="Query Parameters" />
                    </Style>
                </dxrudi:UITypeEditorDialogService.DialogStyle>
                <dxrudi:UITypeEditorDialogService.ViewTemplate>
                    <DataTemplate>
                        <dxrude:QueryParameterCollectionUITypeEditor EditValue="{Binding Value}" SqlQuery="{Binding Content.SelectedComponent}" />
                    </DataTemplate>
                </dxrudi:UITypeEditorDialogService.ViewTemplate>
            </dxrudi:UITypeEditorDialogService>
        </ContentControl>
    </DataTemplate>

    <DataTemplate x:Key="crossTabFieldCollectionEditorTemplate">
        <ContentControl>
            <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterScreen">
                <dxrudi:UITypeEditorDialogService.DialogStyle>
                    <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="{x:Type dx:ThemedWindow}">
                        <Setter Property="Width" Value="550" />
                        <Setter Property="Height" Value="400" />
                        <Setter Property="Title" Value="Collection Editor" />
                    </Style>
                </dxrudi:UITypeEditorDialogService.DialogStyle>
                <dxrudi:UITypeEditorDialogService.ViewTemplate>
                    <DataTemplate>
                        <dxrude:CrossTabFieldCollectionEditor EditValue="{Binding Value}" ReportModel="{Binding Content}" />
                    </DataTemplate>
                </dxrudi:UITypeEditorDialogService.ViewTemplate>
            </dxrudi:UITypeEditorDialogService>
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="controlParametersEditorDialogServiceTemplate">
        <ContentControl>
            <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                <dxrudi:UITypeEditorDialogService.DialogStyle>
                    <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                        <Setter Property="Width" Value="600" />
                        <Setter Property="Height" Value="350" />

                        <Setter Property="MinWidth" Value="420" />
                        <Setter Property="MinHeight" Value="240" />
                        <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=ParametersEditor_Title}" />
                    </Style>
                </dxrudi:UITypeEditorDialogService.DialogStyle>
                <dxrudi:UITypeEditorDialogService.ViewTemplate>
                    <DataTemplate>
                        <dxrude:XRControlParameterCollectionUITypeEditor xrdiag:XtraReportDiagramItem.ReportModel="{Binding ReportModel, RelativeSource={RelativeSource Self}}" EditValue="{Binding Value}" ReportModel="{Binding Content}" />
                    </DataTemplate>
                </dxrudi:UITypeEditorDialogService.ViewTemplate>
            </dxrudi:UITypeEditorDialogService>
        </ContentControl>
    </DataTemplate>
    <Style x:Key="filterStringDialogStyle" BasedOn="{StaticResource DXDialogWindowStyleBase}" TargetType="{x:Type dx:DXDialogWindow}">
        <Setter Property="Width" Value="600" />
        <Setter Property="Height" Value="350" />
        <Setter Property="MinWidth" Value="300" />
        <Setter Property="MinHeight" Value="200" />
        <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=FilterStringEditor_Title}" />
    </Style>
    <DataTemplate x:Key="controlFilterStringDialogServiceTemplate">
        <ContentControl>
            <dxrudi:UITypeEditorDialogService DialogStyle="{StaticResource filterStringDialogStyle}" DialogWindowStartupLocation="CenterOwner">
                <dxrudi:UITypeEditorDialogService.ViewTemplate>
                    <DataTemplate>
                        <dxrude:ReportFilterStringEditor
                            x:Name="filterControl"
                            DataContainer="{Binding Path=Content.SelectedComponent, Converter={dxrudi:SelectionModelToDataContainerConverter}}"
                            EditValue="{Binding Value, Mode=TwoWay}"
                            ParameterService="{Binding Path=Content.SelectedComponent, Converter={dxrudei:ControlToParameterServiceConverter}}"
                            ReportModel="{Binding Content.ReportModel}" />
                    </DataTemplate>
                </dxrudi:UITypeEditorDialogService.ViewTemplate>
            </dxrudi:UITypeEditorDialogService>
        </ContentControl>
    </DataTemplate>

    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerDialog.ParameterFilterStringEditorDialogTemplate}">
        <ContentControl>
            <dxrudi:UITypeEditorDialogService DialogStyle="{StaticResource filterStringDialogStyle}" DialogWindowStartupLocation="CenterOwner">
                <dxrudi:UITypeEditorDialogService.ViewTemplate>
                    <DataTemplate>
                        <dxrude:ParametersFilterStringEditor
                            x:Name="filterControl"
                            EditValue="{Binding Value, Mode=TwoWay}"
                            ParameterService="{Binding Path=Content.ReportModel, Converter={dxrudei:ReportModelToParameterServiceConverter}}"
                            ReportModel="{Binding Content.ReportModel}"
                            SelectedParameter="{Binding Content.SelectedComponent}" />
                    </DataTemplate>
                </dxrudi:UITypeEditorDialogService.ViewTemplate>
            </dxrudi:UITypeEditorDialogService>
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerDialog.GroupFieldCollectionDialogTemplate}">
        <ContentControl>
            <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                <dxrudi:UITypeEditorDialogService.DialogStyle>
                    <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="dx:ThemedWindow">
                        <Setter Property="Width" Value="600" />
                        <Setter Property="Height" Value="350" />
                        <Setter Property="MinWidth" Value="420" />
                        <Setter Property="MinHeight" Value="240" />
                        <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=GroupFieldsEditor_Title}" />
                    </Style>
                </dxrudi:UITypeEditorDialogService.DialogStyle>
                <dxrudi:UITypeEditorDialogService.ViewTemplate>
                    <DataTemplate>
                        <dxrude:GroupFieldCollectionUITypeEditor xrdiag:XtraReportDiagramItem.ReportModel="{Binding Content}" EditValue="{Binding Value}" />
                    </DataTemplate>
                </dxrudi:UITypeEditorDialogService.ViewTemplate>
            </dxrudi:UITypeEditorDialogService>
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="summaryExpressionModeDialogTemplate">
        <ContentControl>
            <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                <dxrudi:UITypeEditorDialogService.ViewTemplate>
                    <DataTemplate>
                        <propertyeditors:SummaryExpressionUITypeEditor EditValue="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ReportModel="{Binding Content.ReportModel}" />
                    </DataTemplate>
                </dxrudi:UITypeEditorDialogService.ViewTemplate>
                <dxrudi:UITypeEditorDialogService.DialogStyle>
                    <Style BasedOn="{StaticResource CustomFooterThemedWindowDialogStyle}" TargetType="{x:Type dx:ThemedWindow}">
                        <Setter Property="ResizeMode" Value="NoResize" />
                        <Setter Property="Width" Value="500" />
                        <Setter Property="Height" Value="300" />
                        <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=SummaryEditor_Title}" />
                    </Style>
                </dxrudi:UITypeEditorDialogService.DialogStyle>
            </dxrudi:UITypeEditorDialogService>
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="summaryBindingModeDialogTemplate">
        <ContentControl>
            <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                <dxrudi:UITypeEditorDialogService.ViewTemplate>
                    <DataTemplate>
                        <dxrude:SummaryUITypeEditor EditValue="{Binding Value}" ReportModel="{Binding Content.ReportModel}" />
                    </DataTemplate>
                </dxrudi:UITypeEditorDialogService.ViewTemplate>
                <dxrudi:UITypeEditorDialogService.DialogStyle>
                    <Style BasedOn="{StaticResource CustomFooterThemedWindowDialogStyle}" TargetType="{x:Type dx:ThemedWindow}">
                        <Setter Property="ResizeMode" Value="NoResize" />
                        <Setter Property="Width" Value="485" />
                        <Setter Property="Height" Value="416" />
                        <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=SummaryEditor_Title}" />
                    </Style>
                </dxrudi:UITypeEditorDialogService.DialogStyle>
            </dxrudi:UITypeEditorDialogService>
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="{dxrudt:LWKey ReportDesignerDialog.FormatStringEditorDialogTemplate}">
        <ContentControl>
            <dxrudi:UITypeEditorDialogService DialogStyle="{StaticResource FormatStringDialogStyle}" DialogWindowStartupLocation="CenterOwner">
                <dxrudi:UITypeEditorDialogService.ViewTemplate>
                    <DataTemplate>
                        <dxrude:FormatStringUITypeEditor EditValue="{Binding Value}" PrimarySelection="{Binding Content}" />
                    </DataTemplate>
                </dxrudi:UITypeEditorDialogService.ViewTemplate>
            </dxrudi:UITypeEditorDialogService>
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="SortingSummaryEditorDialogTemplate">
        <ContentControl>
            <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                <dxrudi:UITypeEditorDialogService.DialogStyle>
                    <Style BasedOn="{StaticResource CustomFooterThemedWindowDialogStyle}" TargetType="dx:ThemedWindow">
                        <Setter Property="SizeToContent" Value="WidthAndHeight" />
                        <Setter Property="ResizeMode" Value="NoResize" />
                        <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=SortingSummaryEditor_Title}" />
                    </Style>
                </dxrudi:UITypeEditorDialogService.DialogStyle>
                <dxrudi:UITypeEditorDialogService.ViewTemplate>
                    <DataTemplate>
                        <dxrude:SortingSummaryUITypeEditor EditValue="{Binding Value}" FieldListNodes="{Binding Content.FieldListNodes, Mode=OneWay}" />
                    </DataTemplate>
                </dxrudi:UITypeEditorDialogService.ViewTemplate>
            </dxrudi:UITypeEditorDialogService>
        </ContentControl>
    </DataTemplate>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\DialogEditors.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\GroupBox.xaml-->
    <Style x:Key="LayoutGroupWithStandardGroupBoxWithMargins" TargetType="dxlc:LayoutGroup">
        <Setter Property="View" Value="GroupBox" />
        <Setter Property="GroupBoxStyle">
            <Setter.Value>
                <Style TargetType="dxlc:GroupBox">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="dxlc:GroupBox">
                                <GroupBox Header="{TemplateBinding Header}" HeaderTemplate="{TemplateBinding HeaderTemplate}">
                                    <dx:DXContentPresenter
                                        x:Name="ContentElement"
                                        Margin="{TemplateBinding Padding}"
                                        Content="{TemplateBinding Content}"
                                        ContentTemplate="{TemplateBinding CurrentContentTemplate}" />
                                </GroupBox>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LayoutGroupWithStandardGroupBox" TargetType="dxlc:LayoutGroup">
        <Setter Property="View" Value="GroupBox" />
        <Setter Property="GroupBoxStyle">
            <Setter.Value>
                <Style TargetType="dxlc:GroupBox">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="dxlc:GroupBox">
                                <GroupBox Header="{TemplateBinding Header}" HeaderTemplate="{TemplateBinding HeaderTemplate}">
                                    <dx:DXContentPresenter x:Name="ContentElement" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding CurrentContentTemplate}" />
                                </GroupBox>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LayoutGroupWithInvisibleStandardGroupBoxWithMargins" TargetType="dxlc:LayoutGroup">
        <Setter Property="View" Value="GroupBox" />
        <Setter Property="GroupBoxStyle">
            <Setter.Value>
                <Style TargetType="dxlc:GroupBox">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="dxlc:GroupBox">
                                <GroupBox BorderBrush="Transparent">
                                    <dx:DXContentPresenter
                                        x:Name="ContentElement"
                                        Margin="{TemplateBinding Padding}"
                                        Content="{TemplateBinding Content}"
                                        ContentTemplate="{TemplateBinding CurrentContentTemplate}" />
                                </GroupBox>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\Editors\GroupBox.xaml-->

    <!--#region c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\XRDiagram\SubContextMenuStyles.xaml-->
    <Style x:Key="BaseEditItem" TargetType="{x:Type dxe:BaseEdit}">

        <Setter Property="Width" Value="170" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>
    <Style x:Key="ShapeBaseEditItem" TargetType="{x:Type dxe:SpinEdit}">
        <Setter Property="MinValue" Value="0" />
        <Setter Property="MaxValue" Value="100" />
        <Setter Property="IsFloatValue" Value="False" />
    </Style>
    <Style x:Key="CheckEditBaseItem" TargetType="{x:Type dxe:CheckEdit}">
        <Setter Property="ShowBorder" Value="False" />
    </Style>


    <Style x:Key="SmartTagDialogStyle" BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="{x:Type dx:ThemedWindow}">
        <Setter Property="SizeToContent" Value="WidthAndHeight" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=ContextMenu_Edit}" />
    </Style>
    <Style x:Key="ComboBoxEditBaseItem" BasedOn="{StaticResource BaseEditItem}" TargetType="{x:Type dxe:ComboBoxEdit}">
        <Setter Property="IsTextEditable" Value="False" />
    </Style>
    <Style x:Key="ReportDesigner_DataBindingSubContextMenuStyleBase" BasedOn="{StaticResource ReportDesigner_DataBindingStyleBase}" TargetType="{x:Type dxrude:PopupTreeListEdit}">
        <Setter Property="Width" Value="170" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="ItemsSource" Value="{Binding Path=Diagram.(dxrud:ReportDesigner.Document).ReportModel.FieldListNodes}" />
    </Style>
    <Style x:Key="NumericBaseEditItem" BasedOn="{StaticResource BaseEditItem}" TargetType="{x:Type dxe:TextEdit}">
        <Setter Property="MaskType" Value="Numeric" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.Symbology}" BasedOn="{StaticResource ComboBoxEditBaseItem}" TargetType="{x:Type dxe:ComboBoxEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[EditableSymbology], Converter={dxrudi:BarCodeGeneratorBaseToBarCodeSymbologyConverter}, UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="ItemsSource" Value="{dxe:EnumItemsSource NameConverter={dxrudi:EnumToDisplayNameConverter}, EnumType={x:Type barcodenative:BarCodeSymbology}}" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.Module}" BasedOn="{StaticResource NumericBaseEditItem}" TargetType="{x:Type dxe:TextEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[Module], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="EditValueType" Value="{x:Type sys:Single}" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.Orientation}" BasedOn="{StaticResource ComboBoxEditBaseItem}" TargetType="{x:Type dxe:ComboBoxEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[BarCodeOrientation], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="ItemsSource" Value="{dxe:EnumItemsSource EnumType={x:Type barcode:BarCodeOrientation}, NameConverter={dxrudi:EnumNameConverter}}" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.Text}" BasedOn="{StaticResource BaseEditItem}" TargetType="{x:Type dxe:TextEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[Text], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="EditValuePostMode" Value="Delayed" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.DataBinding}" BasedOn="{StaticResource ReportDesigner_DataBindingSubContextMenuStyleBase}" TargetType="{x:Type dxrude:PopupTreeListEdit}">
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxrudi:SyncPropertyBehavior x:Name="syncPropertyBehaviorName" Parameters="{Binding Diagram.SelectionModel, Mode=OneWay, Converter={dxrudi:SyncPropertyBehaviorConverter}, ConverterParameter='DataBindings.Text.Data'}" />
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.FormatString}" x:Shared="False" BasedOn="{StaticResource BaseEditItem}" TargetType="{x:Type dxe:ButtonEdit}">
        <Setter Property="AllowDefaultButton" Value="False" />
        <Setter Property="Buttons">
            <Setter.Value>
                <dxe:ButtonInfoCollection>
                    <dxe:ButtonInfo GlyphKind="Regular">
                        <dxmvvm:Interaction.Behaviors>
                            <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" Content="{Binding Path=Diagram.(dxrud:ReportDesigner.Document).ReportModel.SelectedModel.XRObjectBase}" DialogServiceTemplate="{DynamicResource {dxrudt:LWKey ReportDesignerDialog.FormatStringEditorDialogTemplate}}" />
                        </dxmvvm:Interaction.Behaviors>
                    </dxe:ButtonInfo>
                </dxe:ButtonInfoCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dxrudi:SyncPropertyBehavior x:Name="syncPropertyBehaviorName" Parameters="{Binding Diagram.SelectionModel, Mode=OneWay, Converter={dxrudi:SyncPropertyBehaviorConverter}, ConverterParameter='DataBindings.Text.FormatString'}" />
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--<Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.SummaryFormatString}" TargetType="{x:Type dxe:ButtonEdit}" BasedOn="{StaticResource {x:Static xrdiag:XRDiagramControlBarItemNames.FormatString}}" x:Shared="False">
        <Setter Property="NullValue" Value="" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dxrudi:FormatStringValidationBehavior />
                        <dxrudi:SyncPropertyBehavior x:Name="syncPropertyBehaviorName" Parameters="{Binding Diagram.SelectionModel, Mode=OneWay, Converter={dxrudi:SyncPropertyBehaviorConverter}, ConverterParameter='Summary.FormatString'}" />
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.Bookmark}" BasedOn="{StaticResource BaseEditItem}" TargetType="{x:Type dxe:TextEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[Bookmark], UpdateSourceTrigger=PropertyChanged}" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.ParentBookmark}" BasedOn="{StaticResource BaseEditItem}" TargetType="{x:Type dxrude:PopupTreeListEdit}">
        <Setter Property="ValueMember" Value="XRObjectBase" />
        <Setter Property="DisplayMember" Value="ControlName" />
        <Setter Property="PopupDisplayMember" Value="ControlName" />
        <Setter Property="ChildNodesPath" Value="ChildItems" />
        <Setter Property="ChildNodesSelector" Value="{Binding Path=Diagram.SelectionToolsModel, Converter={dxrude:ParentBookmarkChildNodesSelectorConverter}}" />
        <Setter Property="HierarchicalPathProvider" Value="{dxrude:ReportExplorerHierarchicalPathProvider}" />
        <Setter Property="PopupSelectionValidator" Value="{dxrude:ParentBookmarkPopupSelectionValidator}" />
        <Setter Property="ItemsSource" Value="{Binding Path=Diagram.(dxrud:ReportDesigner.Document).ReportModel, Converter={dxrudi:YieldConverter}}" />
        <Setter Property="TreeListAutoExpandDepth" Value="2" />
        <Setter Property="TreeListCellTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <dx:DXImage Source="{Binding RowData.Row.Icon}" />
                        <TextBlock Text="{Binding RowData.Row.ControlName}" />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="EditValue">
            <Setter.Value>
                <Binding Mode="TwoWay" Path="Diagram.SelectionToolsModel[BookmarkParent]" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <ExceptionValidationRule />
                    </Binding.ValidationRules>
                </Binding>
            </Setter.Value>
        </Setter>
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dxrudi:EditValueErrorMessageBehavior DesignerUI="{Binding Path=Diagram.(dxrud:ReportDesigner.Designer)}" />
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.CheckState}" BasedOn="{StaticResource ComboBoxEditBaseItem}" TargetType="{x:Type dxe:ComboBoxEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[CheckState], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="ItemsSource" Value="{dxe:EnumItemsSource EnumType=forms:CheckState}" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.DataBindingCheckState}" BasedOn="{StaticResource ReportDesigner_DataBindingSubContextMenuStyleBase}" TargetType="{x:Type dxrude:PopupTreeListEdit}">
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxrudi:SyncPropertyBehavior x:Name="syncPropertyBehaviorName" Parameters="{Binding Diagram.SelectionModel, Mode=OneWay, Converter={dxrudi:SyncPropertyBehaviorConverter}, ConverterParameter='DataBindings.CheckState.Data'}" />
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.AnchorVertically}" BasedOn="{StaticResource ComboBoxEditBaseItem}" TargetType="{x:Type dxe:ComboBoxEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[AnchorVertical], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="ItemsSource" Value="{dxe:EnumItemsSource EnumType=printingcorereportsui:VerticalAnchorStyles}" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.LineStyle}" BasedOn="{StaticResource ComboBoxEditBaseItem}" TargetType="{x:Type dxe:ComboBoxEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[LineStyle], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="ItemsSource" Value="{dxe:EnumItemsSource EnumType=drawing2d:DashStyle}" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.DataSource}" x:Shared="False" BasedOn="{StaticResource ComboBoxEditBaseItem}" TargetType="{x:Type dxrudi:ComboBoxEditEx}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[DataSource], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="PopupMinHeight" Value="100" />
        <Setter Property="AllowNullInput" Value="True" />
        <Setter Property="ShowNullText" Value="False" />
        <Setter Property="AddNewButtonPlacement" Value="Popup" />
        <Setter Property="NullValueButtonPlacement" Value="Popup" />
        <Setter Property="ShowPopupOnEmptyItemsSource" Value="True" />
        <Setter Property="ItemsSource">
            <Setter.Value>
                <MultiBinding Converter="{dxrudi:SelectedItemToDataSourceConverter}">
                    <Binding Path="Diagram.(xrdiag:XtraReportDiagramItem.ReportModel).DataSources" />
                    <Binding Path="Diagram.(xrdiag:XtraReportDiagramItem.ReportModel)" />
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="ValueMember" Value="DataSource" />
        <Setter Property="DisplayMember" Value="DisplayName" />
        <Setter Property="IsTextEditable" Value="False" />
        <Setter Property="PopupBottomAreaTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Grid x:Name="PART_Root" Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).PopupViewModel.FooterVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                        <ContentPresenter />
                        <ContentControl dx:FocusHelper2.Focusable="False" Template="{DynamicResource {dxt:LWKey PopupBaseEdit.FooterTemplate}}" />
                        <dx:UniformStackPanel
                            Width="Auto"
                            Margin="15,0,15,0"
                            HorizontalAlignment="Center"
                            ChildSpacing="0"
                            Orientation="Horizontal">
                            <Button
                                x:Name="PART_AddNewButton"
                                MinWidth="80"
                                Margin="3,6,3,6"
                                HorizontalAlignment="Left"
                                Style="{DynamicResource {dxt:LWKey PopupBaseEdit.AddNewButtonStyle}}"
                                Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).PopupViewModel.AddNewButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                                <dxmvvm:Interaction.Behaviors>
                                    <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}">
                                        <dxe:DialogServiceEditorBehavior.Content>
                                            <MultiBinding Converter="{dxrudei:DataSourcePropertyEditorViewModelConverter}">
                                                <Binding Path="AssociatedObject.DataContext.Diagram.(dxrud:ReportDesigner.Document).ReportModel" RelativeSource="{RelativeSource Self}" />
                                                <Binding Path="AssociatedObject.DataContext.Diagram.SelectionModel" RelativeSource="{RelativeSource Self}" />
                                            </MultiBinding>
                                        </dxe:DialogServiceEditorBehavior.Content>
                                        <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                            <DataTemplate>
                                                <ContentControl>
                                                    <dxrudi:UITypeEditorDialogService DialogStyle="{DynamicResource {dxrudt:LWKey ReportDesignerDialog.DataSourceWizardDialogStyle}}" DialogWindowStartupLocation="CenterOwner">
                                                        <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                            <DataTemplate>
                                                                <dxrudw:ReportDataSourceWizardControl
                                                                    DataSourceWizardExtensions="{Binding Path=Content.DataSourceWizardExtensions, Mode=OneWay}"
                                                                    DataSourceWizardSettings="{Binding Content.DataSourceWizardSettings, Mode=OneWay}"
                                                                    ParameterService="{Binding Path=Content.ParameterService, Mode=OneWay}"
                                                                    ServicesRegistry="{Binding Path=Content.ServicesRegistry, Mode=OneWay}" />
                                                            </DataTemplate>
                                                        </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                    </dxrudi:UITypeEditorDialogService>
                                                </ContentControl>
                                            </DataTemplate>
                                        </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                    </dxe:DialogServiceEditorBehavior>
                                </dxmvvm:Interaction.Behaviors>
                            </Button>
                            <Button
                                x:Name="PART_NullValueButton"
                                MinWidth="80"
                                Margin="3,6,3,6"
                                HorizontalAlignment="Left"
                                Command="{Binding Path=(dxe:BaseEdit.OwnerEdit).SetNullValueCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{DynamicResource {dxt:LWKey PopupBaseEdit.NullValueButtonStyle}}"
                                Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).PopupViewModel.NullValueButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}" />
                        </dx:UniformStackPanel>
                        <dxe:PopupSizeGrip
                            x:Name="PART_SizeGrip"
                            Margin="2,3,2,2"
                            HorizontalAlignment="Right"
                            VerticalAlignment="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).ResizeGripViewModel.VerticalAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                            dx:FocusHelper2.Focusable="False"
                            Style="{DynamicResource {dxt:LWKey PopupBaseEdit.ResizeGripStyle}}"
                            Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).ResizeGripViewModel.Visibility, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.DataMember}" BasedOn="{StaticResource ReportDesigner_DataBindingSubContextMenuStyleBase}" TargetType="{x:Type dxrude:PopupTreeListEdit}">
        <Setter Property="DisplayMember" Value="DataMember" />
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[DataMember], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dxrudi:SetDataMemberSelectionValidatorBehavior SelectedItem="{Binding Path=Diagram.SelectionToolsModel, UpdateSourceTrigger=PropertyChanged}" />
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.FilterString}" x:Shared="False" BasedOn="{StaticResource BaseEditItem}" TargetType="{x:Type dxe:ButtonEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[FilterString], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="AllowDefaultButton" Value="False" />
        <Setter Property="Buttons">
            <Setter.Value>
                <dxe:ButtonInfoCollection>
                    <dxe:ButtonInfo GlyphKind="Regular">
                        <dxmvvm:Interaction.Behaviors>
                            <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" Content="{Binding Path=Diagram.(dxrud:ReportDesigner.Document).ReportModel}">
                                <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                    <DataTemplate>
                                        <ContentControl>
                                            <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                    <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="{x:Type dx:ThemedWindow}">
                                                        <Setter Property="Width" Value="400" />
                                                        <Setter Property="Height" Value="300" />
                                                        <Setter Property="MinWidth" Value="300" />
                                                        <Setter Property="MinHeight" Value="200" />
                                                        <Setter Property="ResizeMode" Value="CanResize" />
                                                        <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=FilterStringEditor_Title}" />
                                                    </Style>
                                                </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                    <DataTemplate>
                                                        <dxrude:ReportFilterStringEditor EditValue="{Binding Value}" ParameterService="{Binding Content, Converter={dxrudei:ReportModelToParameterServiceConverter}}" ReportModel="{Binding Content}" />
                                                    </DataTemplate>
                                                </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                            </dxrudi:UITypeEditorDialogService>
                                        </ContentControl>
                                    </DataTemplate>
                                </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                            </dxe:DialogServiceEditorBehavior>
                        </dxmvvm:Interaction.Behaviors>
                    </dxe:ButtonInfo>
                </dxe:ButtonInfoCollection>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.DetailCountAtDesignTime}" BasedOn="{StaticResource BaseEditItem}" TargetType="{x:Type dxe:SpinEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[DetailCountAtDesignTime], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="EditValueType" Value="{x:Type sys:Int32}" />
        <Setter Property="MinValue" Value="0" />
        <Setter Property="IsFloatValue" Value="False" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.ReportUnit}" BasedOn="{StaticResource ComboBoxEditBaseItem}" TargetType="{x:Type dxe:ComboBoxEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[ReportUnit], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="ItemsSource" Value="{dxe:EnumItemsSource EnumType=reportsui:ReportUnit, NameConverter={dxrudi:EnumNameConverter}}" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.Angle}" BasedOn="{StaticResource BaseEditItem}" TargetType="{x:Type dxe:SpinEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[Angle], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="EditValueType" Value="{x:Type sys:Single}" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.LineDirection}" BasedOn="{StaticResource ComboBoxEditBaseItem}" TargetType="{x:Type dxe:ComboBoxEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[LineDirection], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="ItemsSource" Value="{dxe:EnumItemsSource EnumType=printingcorereportsui:LineDirection}" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.LineWidth}" BasedOn="{StaticResource BaseEditItem}" TargetType="{x:Type dxe:SpinEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[LineWidth], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="EditValueType" Value="{x:Type sys:Int32}" />
        <Setter Property="MinValue" Value="0" />
        <Setter Property="IsFloatValue" Value="False" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.PageInformation}" BasedOn="{StaticResource ComboBoxEditBaseItem}" TargetType="{x:Type dxe:ComboBoxEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[PageInfo], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="ItemsSource" Value="{dxe:EnumItemsSource EnumType=xpd:PageInfo, NameConverter={dxrudi:EnumNameConverter}}" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.StartPageNumber}" BasedOn="{StaticResource BaseEditItem}" TargetType="{x:Type dxe:SpinEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[StartPageNumber], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="EditValueType" Value="{x:Type sys:Int32}" />
        <Setter Property="MinValue" Value="0" />
        <Setter Property="IsFloatValue" Value="False" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.Format}" x:Shared="False" BasedOn="{StaticResource BaseEditItem}" TargetType="{x:Type dxe:ButtonEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[Format], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="AllowDefaultButton" Value="False" />
        <Setter Property="Buttons">
            <Setter.Value>
                <dxe:ButtonInfoCollection>
                    <dxe:ButtonInfo GlyphKind="Regular">
                        <dxmvvm:Interaction.Behaviors>
                            <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" Content="{Binding Path=AssociatedObject.(dxrud:ReportDesigner.Document).ReportModel.SelectedModel.XRObject, RelativeSource={RelativeSource Self}}" DialogServiceTemplate="{DynamicResource {dxrudt:LWKey ReportDesignerDialog.FormatStringEditorDialogTemplate}}" />
                        </dxmvvm:Interaction.Behaviors>
                    </dxe:ButtonInfo>
                </dxe:ButtonInfoCollection>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.RunningBand}" BasedOn="{StaticResource ComboBoxEditBaseItem}" TargetType="{x:Type dxe:ComboBoxEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[RunningBand], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="ItemsSource" Value="{Binding Path=Diagram.(dxrud:ReportDesigner.Document).Report, Converter={dxrudi:ControlsToRunningBandsConverter}, UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="ShowNullText" Value="False" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.Image}" x:Shared="False" BasedOn="{StaticResource BaseEditItem}" TargetType="{x:Type dxe:ButtonEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[Image], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="IsTextEditable" Value="False" />
        <Setter Property="AllowDefaultButton" Value="False" />
        <Setter Property="Buttons">
            <Setter.Value>
                <dxe:ButtonInfoCollection>
                    <dxe:ButtonInfo GlyphKind="Regular">
                        <dxmvvm:Interaction.Behaviors>
                            <dxe:CustomDialogServiceEditorBehavior Content="{Binding Path=Diagram.(dxrud:ReportDesigner.Designer)}">
                                <dxe:CustomDialogServiceEditorBehavior.DialogServiceTemplate>
                                    <DataTemplate>
                                        <ContentControl>
                                            <dxrude:ImageDialogService />
                                        </ContentControl>
                                    </DataTemplate>
                                </dxe:CustomDialogServiceEditorBehavior.DialogServiceTemplate>
                            </dxe:CustomDialogServiceEditorBehavior>
                        </dxmvvm:Interaction.Behaviors>
                    </dxe:ButtonInfo>
                </dxe:ButtonInfoCollection>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.DataBindingImage}" BasedOn="{StaticResource ReportDesigner_DataBindingSubContextMenuStyleBase}" TargetType="{x:Type dxrude:PopupTreeListEdit}">
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxrudi:SyncPropertyBehavior x:Name="syncPropertyBehaviorName" Parameters="{Binding Diagram.SelectionModel, Mode=OneWay, Converter={dxrudi:SyncPropertyBehaviorConverter}, ConverterParameter='DataBindings.Image.Data'}" />
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.ImageUrl}" x:Shared="False" BasedOn="{StaticResource BaseEditItem}" TargetType="{x:Type dxe:ButtonEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[ImageUrl], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="AllowDefaultButton" Value="False" />
        <Setter Property="Buttons">
            <Setter.Value>
                <dxe:ButtonInfoCollection>
                    <dxe:ButtonInfo GlyphKind="Regular">
                        <dxmvvm:Interaction.Behaviors>
                            <dxe:CustomDialogServiceEditorBehavior Content="{Binding Path=Diagram.(dxrud:ReportDesigner.Designer)}">
                                <dxe:CustomDialogServiceEditorBehavior.DialogServiceTemplate>
                                    <DataTemplate>
                                        <ContentControl>
                                            <dxrude:ImageUrlDialogService />
                                        </ContentControl>
                                    </DataTemplate>
                                </dxe:CustomDialogServiceEditorBehavior.DialogServiceTemplate>
                            </dxe:CustomDialogServiceEditorBehavior>
                        </dxmvvm:Interaction.Behaviors>
                    </dxe:ButtonInfo>
                </dxe:ButtonInfoCollection>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.DataBindingImageUrl}" BasedOn="{StaticResource ReportDesigner_DataBindingSubContextMenuStyleBase}" TargetType="{x:Type dxrude:PopupTreeListEdit}">
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxrudi:SyncPropertyBehavior x:Name="syncPropertyBehaviorName" Parameters="{Binding Diagram.SelectionModel, Mode=OneWay, Converter={dxrudi:SyncPropertyBehaviorConverter}, ConverterParameter='DataBindings.ImageUrl.Data'}" />
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.Sizing}" BasedOn="{StaticResource ComboBoxEditBaseItem}" TargetType="{x:Type dxe:ComboBoxEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[Sizing], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="ItemsSource" Value="{dxe:EnumItemsSource EnumType={x:Type xpd:ImageSizeMode}, NameConverter={dxrudi:EnumNameConverter}}" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.ImageAlignment}" BasedOn="{StaticResource ComboBoxEditBaseItem}" TargetType="{x:Type dxe:ComboBoxEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[ImageAlignment], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="ItemsSource" Value="{dxe:EnumItemsSource EnumType=xpd:ImageAlignment}" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.OlapConnectionString}" x:Shared="False" BasedOn="{StaticResource BaseEditItem}" TargetType="{x:Type dxe:ButtonEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[OLAPConnectionString], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="AllowDefaultButton" Value="False" />
        <Setter Property="Buttons">
            <Setter.Value>
                <dxe:ButtonInfoCollection>
                    <dxe:ButtonInfo GlyphKind="Regular">
                        <dxmvvm:Interaction.Behaviors>
                            <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}">
                                <dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                                    <DataTemplate>
                                        <ContentControl>
                                            <dxrudi:UITypeEditorDialogService DialogWindowStartupLocation="CenterOwner">
                                                <dxrudi:UITypeEditorDialogService.DialogStyle>
                                                    <Style BasedOn="{StaticResource ThemedWindowDialogStyleBase}" TargetType="{x:Type dx:ThemedWindow}">
                                                        <Setter Property="Width" Value="400" />
                                                        <Setter Property="Height" Value="400" />
                                                        <Setter Property="ResizeMode" Value="NoResize" />
                                                        <Setter Property="Title" Value="{dxrudl:ReportDesignerStringId StringId=PivotGrid_OLAPConStringEditor_Title}" />
                                                    </Style>
                                                </dxrudi:UITypeEditorDialogService.DialogStyle>
                                                <dxrudi:UITypeEditorDialogService.ViewTemplate>
                                                    <DataTemplate>
                                                        <dxrude:OLAPConnectionStringUITypeEditor EditValue="{Binding Value}" />
                                                    </DataTemplate>
                                                </dxrudi:UITypeEditorDialogService.ViewTemplate>
                                            </dxrudi:UITypeEditorDialogService>
                                        </ContentControl>
                                    </DataTemplate>
                                </dxe:DialogServiceEditorBehavior.DialogServiceTemplate>
                            </dxe:DialogServiceEditorBehavior>
                        </dxmvvm:Interaction.Behaviors>
                    </dxe:ButtonInfo>
                </dxe:ButtonInfoCollection>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.DataBindingRtf}" BasedOn="{StaticResource ReportDesigner_DataBindingSubContextMenuStyleBase}" TargetType="{x:Type dxrude:PopupTreeListEdit}">
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxrudi:SyncPropertyBehavior x:Name="syncPropertyBehaviorName" Parameters="{Binding Diagram.SelectionModel, Mode=OneWay, Converter={dxrudi:SyncPropertyBehaviorConverter}, ConverterParameter='DataBindings.Rtf.Data'}" />
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.FillColor}" BasedOn="{StaticResource BaseEditItem}" TargetType="{x:Type dxe:PopupColorEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[FillColor], UpdateSourceTrigger=PropertyChanged}" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.AngleShape}" BasedOn="{StaticResource BaseEditItem}" TargetType="{x:Type dxe:SpinEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[Angle], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="EditValueType" Value="{x:Type sys:Int32}" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.ValueMember}" BasedOn="{StaticResource ReportDesigner_DataBindingSubContextMenuStyleBase}" TargetType="{x:Type dxrude:PopupTreeListEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[ValueMember], UpdateSourceTrigger=PropertyChanged}" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.View}" BasedOn="{StaticResource ComboBoxEditBaseItem}" TargetType="{x:Type dxe:ComboBoxEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[EditableSparklineView], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="ItemsSource" Value="{dxrudi:SparklineViewTypes}" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.ReportSourceUrl}" x:Shared="False" BasedOn="{StaticResource BaseEditItem}" TargetType="{x:Type dxe:ButtonEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[ReportSourceUrl], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="AllowDefaultButton" Value="False" />
        <Setter Property="Buttons">
            <Setter.Value>
                <dxe:ButtonInfoCollection>
                    <dxe:ButtonInfo GlyphKind="Regular">
                        <dxmvvm:Interaction.Behaviors>
                            <dxe:CustomDialogServiceEditorBehavior Content="{Binding Path=Diagram.(dxrud:ReportDesigner.Designer)}">
                                <dxe:CustomDialogServiceEditorBehavior.DialogServiceTemplate>
                                    <DataTemplate>
                                        <ContentControl>
                                            <dxrude:ReportSourceUrlDialogService />
                                        </ContentControl>
                                    </DataTemplate>
                                </dxe:CustomDialogServiceEditorBehavior.DialogServiceTemplate>
                            </dxe:CustomDialogServiceEditorBehavior>
                        </dxmvvm:Interaction.Behaviors>
                    </dxe:ButtonInfo>
                </dxe:ButtonInfoCollection>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.SegmentWidth}" BasedOn="{StaticResource BaseEditItem}" TargetType="{x:Type dxe:SpinEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[SegmentWidth], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="EditValueType" Value="{x:Type sys:Int32}" />
        <Setter Property="MinValue" Value="0" />
        <Setter Property="IsFloatValue" Value="False" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.PageBreak}" BasedOn="{StaticResource ComboBoxEditBaseItem}" TargetType="{x:Type dxe:ComboBoxEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[PageBreak], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="ItemsSource" Value="{dxe:EnumItemsSource EnumType={x:Type reportsui:PageBreak}, NameConverter={dxrudi:EnumNameConverter}}" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.ViewType}" BasedOn="{StaticResource ComboBoxEditBaseItem}" TargetType="{x:Type dxe:ComboBoxEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[ViewType], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="ItemsSource" Value="{dxe:EnumItemsSource EnumType=gauges:DashboardGaugeType}" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.ViewStyle}" BasedOn="{StaticResource ComboBoxEditBaseItem}" TargetType="{x:Type dxe:ComboBoxEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[ViewStyle], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="ItemsSource" Value="{Binding Diagram.SelectionToolsModel[ViewType], Converter={dxrudi:DashboardGaugeTypeToDashboardGaugeStylesConverter}}" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.ViewTheme}" BasedOn="{StaticResource ComboBoxEditBaseItem}" TargetType="{x:Type dxe:ComboBoxEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[ViewTheme], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="ItemsSource" Value="{dxe:EnumItemsSource EnumType=gauges:DashboardGaugeTheme}" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.ActualValue}" BasedOn="{StaticResource NumericBaseEditItem}" TargetType="{x:Type dxe:TextEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[ActualValue], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="EditValueType" Value="{x:Type sys:Single}" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.DataBindingActualValue}" BasedOn="{StaticResource ReportDesigner_DataBindingSubContextMenuStyleBase}" TargetType="{x:Type dxrude:PopupTreeListEdit}">
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxrudi:SyncPropertyBehavior x:Name="syncPropertyBehaviorName" Parameters="{Binding Diagram.SelectionModel, Mode=OneWay, Converter={dxrudi:SyncPropertyBehaviorConverter}, ConverterParameter='DataBindings.ActualValue.Data'}" />
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.TargetValue}" BasedOn="{StaticResource NumericBaseEditItem}" TargetType="{x:Type dxe:TextEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[TargetValue], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="EditValueType" Value="{x:Type sys:Single}" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.DataBindingTargetValue}" BasedOn="{StaticResource ReportDesigner_DataBindingSubContextMenuStyleBase}" TargetType="{x:Type dxrude:PopupTreeListEdit}">
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxrudi:SyncPropertyBehavior x:Name="syncPropertyBehaviorName" Parameters="{Binding Diagram.SelectionModel, Mode=OneWay, Converter={dxrudi:SyncPropertyBehaviorConverter}, ConverterParameter='DataBindings.TargetValue.Data'}" />
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.Minimum}" BasedOn="{StaticResource NumericBaseEditItem}" TargetType="{x:Type dxe:TextEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[Minimum], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="EditValueType" Value="{x:Type sys:Single}" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.DataBindingMinimum}" BasedOn="{StaticResource ReportDesigner_DataBindingSubContextMenuStyleBase}" TargetType="{x:Type dxrude:PopupTreeListEdit}">
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxrudi:SyncPropertyBehavior x:Name="syncPropertyBehaviorName" Parameters="{Binding Diagram.SelectionModel, Mode=OneWay, Converter={dxrudi:SyncPropertyBehaviorConverter}, ConverterParameter='DataBindings.Minimum.Data'}" />
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.Maximum}" BasedOn="{StaticResource NumericBaseEditItem}" TargetType="{x:Type dxe:TextEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[Maximum], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="EditValueType" Value="{x:Type sys:Single}" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.DataBindingMaximum}" BasedOn="{StaticResource ReportDesigner_DataBindingSubContextMenuStyleBase}" TargetType="{x:Type dxrude:PopupTreeListEdit}">
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl>
                        <dxrudi:SyncPropertyBehavior x:Name="syncPropertyBehaviorName" Parameters="{Binding Diagram.SelectionModel, Mode=OneWay, Converter={dxrudi:SyncPropertyBehaviorConverter}, ConverterParameter='DataBindings.Maximum.Data'}" />
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.MultiColumnMode}" BasedOn="{StaticResource ComboBoxEditBaseItem}" TargetType="{x:Type dxe:ComboBoxEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[MultiColumnMode], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="ItemsSource" Value="{dxe:EnumItemsSource EnumType={x:Type reportsui:MultiColumnMode}}" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.MultiColumnLayout}" BasedOn="{StaticResource ComboBoxEditBaseItem}" TargetType="{x:Type dxe:ComboBoxEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[MultiColumnLayout], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="ItemsSource" Value="{dxe:EnumItemsSource EnumType={x:Type xpc:ColumnLayout}, NameConverter={dxrudi:EnumNameConverter}}" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.ColumnCount}" BasedOn="{StaticResource BaseEditItem}" TargetType="{x:Type dxe:SpinEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[MultiColumnColumnCount], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="EditValueType" Value="{x:Type sys:Int32}" />
        <Setter Property="MinValue" Value="0" />
        <Setter Property="IsFloatValue" Value="False" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.ColumnWidth}" BasedOn="{StaticResource BaseEditItem}" TargetType="{x:Type dxe:SpinEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[MultiColumnColumnWidth], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="EditValueType" Value="{x:Type sys:Single}" />
        <Setter Property="MinValue" Value="0" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.ColumnSpacing}" BasedOn="{StaticResource BaseEditItem}" TargetType="{x:Type dxe:SpinEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[MultiColumnColumnSpacing], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="EditValueType" Value="{x:Type sys:Single}" />
        <Setter Property="MinValue" Value="0" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.PrintOn}" BasedOn="{StaticResource ComboBoxEditBaseItem}" TargetType="{x:Type dxe:ComboBoxEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[PrintOn], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="ItemsSource" Value="{dxe:EnumItemsSource EnumType={x:Type printingcorereportsui:PrintOnPages}, NameConverter={dxrudi:EnumNameConverter}}" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.GroupUnion}" BasedOn="{StaticResource ComboBoxEditBaseItem}" TargetType="{x:Type dxe:ComboBoxEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[GroupUnion], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="ItemsSource" Value="{dxe:EnumItemsSource EnumType=reportsui:GroupUnion}" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.GroupFooterUnion}" BasedOn="{StaticResource ComboBoxEditBaseItem}" TargetType="{x:Type dxe:ComboBoxEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[GroupUnion], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="ItemsSource" Value="{dxe:EnumItemsSource EnumType=reportsui:GroupFooterUnion}" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.Level}" BasedOn="{StaticResource BaseEditItem}" TargetType="{x:Type dxe:SpinEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[Level], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="EditValueType" Value="{x:Type sys:Int32}" />
        <Setter Property="MinValue" Value="0" />
        <Setter Property="IsFloatValue" Value="False" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.SortingSummary}" x:Shared="False" BasedOn="{StaticResource BaseEditItem}" TargetType="{x:Type dxe:ButtonEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[SortingSummary], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="IsTextEditable" Value="False" />
        <Setter Property="AllowDefaultButton" Value="False" />
        <Setter Property="DisplayTextConverter" Value="{dxrude:SortingSummaryToDisplayTextConverter}" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="Buttons">
            <Setter.Value>
                <dxe:ButtonInfoCollection>
                    <dxe:ButtonInfo GlyphKind="Regular">
                        <dxmvvm:Interaction.Behaviors>
                            <dxe:DialogServiceEditorBehavior Commands="{dxe:UICommandContainerGenerator Buttons=OKCancel}" Content="{Binding Path=Diagram.(dxrud:ReportDesigner.Document).ReportModel}" DialogServiceTemplate="{StaticResource SortingSummaryEditorDialogTemplate}" />
                        </dxmvvm:Interaction.Behaviors>
                    </dxe:ButtonInfo>
                </dxe:ButtonInfoCollection>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.AutoWidth}" BasedOn="{StaticResource CheckEditBaseItem}" TargetType="{x:Type dxe:CheckEdit}">
        <Setter Property="IsChecked" Value="{Binding Diagram.SelectionToolsModel[AutoWidth], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="Content" Value="Auto Width" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.CanGrow}" BasedOn="{StaticResource CheckEditBaseItem}" TargetType="{x:Type dxe:CheckEdit}">
        <Setter Property="IsChecked" Value="{Binding Diagram.SelectionToolsModel[CanGrow], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="Content" Value="Can Grow" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.CanShrink}" BasedOn="{StaticResource CheckEditBaseItem}" TargetType="{x:Type dxe:CheckEdit}">
        <Setter Property="IsChecked" Value="{Binding Diagram.SelectionToolsModel[CanShrink], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="Content" Value="Can Shrink" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.Multiline}" BasedOn="{StaticResource CheckEditBaseItem}" TargetType="{x:Type dxe:CheckEdit}">
        <Setter Property="IsChecked" Value="{Binding Diagram.SelectionToolsModel[Multiline], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="Content" Value="Multiline" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.WordWrap}" BasedOn="{StaticResource CheckEditBaseItem}" TargetType="{x:Type dxe:CheckEdit}">
        <Setter Property="IsChecked" Value="{Binding Diagram.SelectionToolsModel[WordWrap], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="Content" Value="Word Wrap" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.AutoModule}" BasedOn="{StaticResource CheckEditBaseItem}" TargetType="{x:Type dxe:CheckEdit}">
        <Setter Property="IsChecked" Value="{Binding Diagram.SelectionToolsModel[AutoModule], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="Content" Value="Auto-Module" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.ShowText}" BasedOn="{StaticResource CheckEditBaseItem}" TargetType="{x:Type dxe:CheckEdit}">
        <Setter Property="IsChecked" Value="{Binding Diagram.SelectionToolsModel[ShowText], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="Content" Value="Show Text" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.Stretch}" BasedOn="{StaticResource CheckEditBaseItem}" TargetType="{x:Type dxe:CheckEdit}">
        <Setter Property="IsChecked" Value="{Binding Diagram.SelectionToolsModel[Stretch], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="Content" Value="Stretch" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.KeepTogether}" BasedOn="{StaticResource CheckEditBaseItem}" TargetType="{x:Type dxe:CheckEdit}">
        <Setter Property="IsChecked" Value="{Binding Diagram.SelectionToolsModel[KeepTogether], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="Content" Value="Keep Together" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.KeepTogetherWithDetailReports}" BasedOn="{StaticResource CheckEditBaseItem}" TargetType="{x:Type dxe:CheckEdit}">
        <Setter Property="IsChecked" Value="{Binding Diagram.SelectionToolsModel[KeepTogetherWithDetailReports], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="Content" Value="Keep Together with Detail Reports" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.RepeatEveryPage}" BasedOn="{StaticResource CheckEditBaseItem}" TargetType="{x:Type dxe:CheckEdit}">
        <Setter Property="IsChecked" Value="{Binding Diagram.SelectionToolsModel[RepeatEveryPage], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="Content" Value="Repeat Every Page" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.PrintAtBottom}" BasedOn="{StaticResource CheckEditBaseItem}" TargetType="{x:Type dxe:CheckEdit}">
        <Setter Property="IsChecked" Value="{Binding Diagram.SelectionToolsModel[PrintAtBottom], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="Content" Value="Print at Bottom" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.Shape}" BasedOn="{StaticResource ComboBoxEditBaseItem}" TargetType="{x:Type dxe:ComboBoxEdit}">
        <Setter Property="EditValue" Value="{Binding Diagram.SelectionToolsModel[EditableShape], UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="ItemsSource" Value="{x:Static dxrudi:RotatedShapeViewModelHelper.Shapes}" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel DataContext="{Binding Converter={dxrudi:RotatedShapeViewModelConverter}}" Orientation="Horizontal">
                        <dx:DXImage Margin="0,0,5,0" Source="{Binding Icon}" />
                        <TextBlock VerticalAlignment="Center" Text="{Binding DisplayName}" />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.Fillet}" BasedOn="{StaticResource ShapeBaseEditItem}" TargetType="{x:Type dxe:SpinEdit}">
        <Setter Property="EditValueType" Value="{x:Type sys:Int32}" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dxrudi:SyncPropertyBehavior x:Name="syncPropertyBehaviorName" Parameters="{Binding Diagram.SelectionModel, Mode=OneWay, Converter={dxrudi:SyncPropertyBehaviorConverter}, ConverterParameter='Shape.Fillet'}" />
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.ArrowHeight}" BasedOn="{StaticResource ShapeBaseEditItem}" TargetType="{x:Type dxe:SpinEdit}">
        <Setter Property="EditValueType" Value="{x:Type sys:Int32}" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dxrudi:SyncPropertyBehavior x:Name="syncPropertyBehaviorName" Parameters="{Binding Diagram.SelectionModel, Mode=OneWay, Converter={dxrudi:SyncPropertyBehaviorConverter}, ConverterParameter='Shape.ArrowHeight'}" />
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.ArrowWidth}" BasedOn="{StaticResource ShapeBaseEditItem}" TargetType="{x:Type dxe:SpinEdit}">
        <Setter Property="EditValueType" Value="{x:Type sys:Int32}" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dxrudi:SyncPropertyBehavior x:Name="syncPropertyBehaviorName" Parameters="{Binding Diagram.SelectionModel, Mode=OneWay, Converter={dxrudi:SyncPropertyBehaviorConverter}, ConverterParameter='Shape.ArrowWidth'}" />
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.NumberOfSides}" BasedOn="{StaticResource ShapeBaseEditItem}" TargetType="{x:Type dxe:SpinEdit}">
        <Setter Property="EditValueType" Value="{x:Type sys:Int32}" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dxrudi:SyncPropertyBehavior x:Name="syncPropertyBehaviorName" Parameters="{Binding Diagram.SelectionModel, Mode=OneWay, Converter={dxrudi:SyncPropertyBehaviorConverter}, ConverterParameter='Shape.NumberOfSides'}" />
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="NullValue" Value="3" />
        <Setter Property="MinValue" Value="3" />
        <Setter Property="MaxValue" Value="9999" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.StarPointCount}" BasedOn="{StaticResource ShapeBaseEditItem}" TargetType="{x:Type dxe:SpinEdit}">
        <Setter Property="EditValueType" Value="{x:Type sys:Int32}" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dxrudi:SyncPropertyBehavior x:Name="syncPropertyBehaviorName" Parameters="{Binding Diagram.SelectionModel, Mode=OneWay, Converter={dxrudi:SyncPropertyBehaviorConverter}, ConverterParameter='Shape.StarPointCount'}" />
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="NullValue" Value="3" />
        <Setter Property="MinValue" Value="3" />
        <Setter Property="MaxValue" Value="9999" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.Concavity}" BasedOn="{StaticResource ShapeBaseEditItem}" TargetType="{x:Type dxe:SpinEdit}">
        <Setter Property="EditValueType" Value="{x:Type sys:Single}" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dxrudi:SyncPropertyBehavior x:Name="syncPropertyBehaviorName" Parameters="{Binding Diagram.SelectionModel, Mode=OneWay, Converter={dxrudi:SyncPropertyBehaviorConverter}, ConverterParameter='Shape.Concavity'}" />
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsFloatValue" Value="True" />
        <Setter Property="ShowEditorButtons" Value="False" />
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.HorizontalLineWidth}" BasedOn="{StaticResource ShapeBaseEditItem}" TargetType="{x:Type dxe:SpinEdit}">
        <Setter Property="EditValueType" Value="{x:Type sys:Int32}" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dxrudi:SyncPropertyBehavior x:Name="syncPropertyBehaviorName" Parameters="{Binding Diagram.SelectionModel, Mode=OneWay, Converter={dxrudi:SyncPropertyBehaviorConverter}, ConverterParameter='Shape.HorizontalLineWidth'}" />
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.VerticalLineWidth}" BasedOn="{StaticResource ShapeBaseEditItem}" TargetType="{x:Type dxe:SpinEdit}">
        <Setter Property="EditValueType" Value="{x:Type sys:Int32}" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dxrudi:SyncPropertyBehavior x:Name="syncPropertyBehaviorName" Parameters="{Binding Diagram.SelectionModel, Mode=OneWay, Converter={dxrudi:SyncPropertyBehaviorConverter}, ConverterParameter='Shape.VerticalLineWidth'}" />
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.TipLength}" BasedOn="{StaticResource ShapeBaseEditItem}" TargetType="{x:Type dxe:SpinEdit}">
        <Setter Property="EditValueType" Value="{x:Type sys:Int32}" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dxrudi:SyncPropertyBehavior x:Name="syncPropertyBehaviorName" Parameters="{Binding Diagram.SelectionModel, Mode=OneWay, Converter={dxrudi:SyncPropertyBehaviorConverter}, ConverterParameter='Shape.TipLength'}" />
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static xrdiag:XRDiagramControlBarItemNames.TailLength}" BasedOn="{StaticResource ShapeBaseEditItem}" TargetType="{x:Type dxe:SpinEdit}">
        <Setter Property="EditValueType" Value="{x:Type sys:Int32}" />
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl>
                        <dxrudi:SyncPropertyBehavior x:Name="syncPropertyBehaviorName" Parameters="{Binding Diagram.SelectionModel, Mode=OneWay, Converter={dxrudi:SyncPropertyBehaviorConverter}, ConverterParameter='Shape.TailLength'}" />
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion c:\work\2023.1\XPF\DevExpress.Xpf.ReportDesigner\DevExpress.Xpf.ReportDesigner\Themes\Generic\XRDiagram\SubContextMenuStyles.xaml-->

</ResourceDictionary>