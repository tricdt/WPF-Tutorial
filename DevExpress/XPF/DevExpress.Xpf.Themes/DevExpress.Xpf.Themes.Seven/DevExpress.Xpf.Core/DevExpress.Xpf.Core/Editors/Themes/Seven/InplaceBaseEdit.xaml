<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxeh="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
                    xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
                    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
                    xmlns:dxn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxtEx="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--BEGIN WPF-->

    <ResourceDictionary.MergedDictionaries>
        <dxtEx:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Seven.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/Seven/ButtonEdit.xaml"/>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Seven.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/Seven/Brushes.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--END WPF-->

    <Thickness x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=TextEditBorderThickness}">0,1</Thickness>

    <Thickness x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=CommonBorderThickness}">1</Thickness>

    <dxn:RenderTemplate x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=HoverBorderTemplate}">
        <dxn:RenderPanel>
            <dxn:RenderPanel Name="PART_Focus" Visibility="Collapsed">
                <dxn:RenderBorder BorderBrush="#FF66CCFF"
                                  BorderThickness="2"
                                  CornerRadius="2"
                                  Margin="-2"
                                  Opacity="0.35"/>
            </dxn:RenderPanel>
        </dxn:RenderPanel>
        <dxn:RenderTemplate.Triggers>
            <dxn:RenderTrigger DependencyProperty="{x:Static dxeh:ControlHelper.ShowFocusedStateProperty}"
                               Value="True"
                               ValueSource="Chrome">
                <dxn:RenderSetter Property="Visibility"
                                  TargetName="PART_Focus"
                                  Value="Visible"/>
            </dxn:RenderTrigger>
        </dxn:RenderTemplate.Triggers>
    </dxn:RenderTemplate>

    <dxn:RenderTemplate x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=TextEditBorderTemplate}">
        <dxn:RenderPanel Name="PART_Root">
            <dxn:RenderPanel Name="PART_Border">
                <dxn:RenderBorder CornerRadius="2" Padding="1">
                    <dxn:RenderBorder.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFABADB3" Offset="0"/>
                            <GradientStop Color="#FFE3E9EF" Offset="1"/>
                        </LinearGradientBrush>
                    </dxn:RenderBorder.Background>
                    <dxn:RenderBorder Background="#FFFFFFFF" CornerRadius="1"/>
                </dxn:RenderBorder>
            </dxn:RenderPanel>
        </dxn:RenderPanel>
    </dxn:RenderTemplate>

    <dxn:RenderTemplate x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=CommonBorderTemplate}">
        <dxn:RenderPanel Name="PART_Root">
            <dxn:RenderPanel Name="PART_Border">
                <dxn:RenderBorder Background="#FFFFFFFF"
                                  BorderBrush="#FF828790"
                                  BorderThickness="1">
                </dxn:RenderBorder>
            </dxn:RenderPanel>
        </dxn:RenderPanel>
    </dxn:RenderTemplate>

    <ControlTemplate x:Key="{dxet:BaseEditThemeKey ResourceKey=EmptyBorderTemplate}" TargetType="ContentControl">
        <ContentPresenter/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:BaseEditThemeKey ResourceKey=TextEditBorderTemplate}" TargetType="ContentControl">
        <Grid>
            <dxn:Chrome RenderTemplate="{StaticResource {dxet:InplaceBaseEditThemeKey ResourceKey=TextEditBorderTemplate}}"/>
            <ContentPresenter Margin="{StaticResource ResourceKey={dxet:InplaceBaseEditThemeKey ResourceKey=TextEditBorderThickness}}"/>
            <dxn:Chrome dxeh:ControlHelper.ShowFocusedState="{Binding Path=(dxeh:ControlHelper.ShowFocusedState), RelativeSource={RelativeSource TemplatedParent}}"
                        IsHitTestVisible="False"
                        RenderTemplate="{StaticResource {dxet:InplaceBaseEditThemeKey ResourceKey=HoverBorderTemplate}}"/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:BaseEditThemeKey ResourceKey=CommonBorderTemplate}" TargetType="ContentControl">
        <Grid>
            <dxn:Chrome RenderTemplate="{StaticResource {dxet:InplaceBaseEditThemeKey ResourceKey=CommonBorderTemplate}}"/>
            <ContentPresenter Margin="{StaticResource ResourceKey={dxet:InplaceBaseEditThemeKey ResourceKey=CommonBorderThickness}}"/>
            <dxn:Chrome dxeh:ControlHelper.ShowFocusedState="{Binding Path=(dxeh:ControlHelper.ShowFocusedState), RelativeSource={RelativeSource TemplatedParent}}"
                        IsHitTestVisible="False"
                        RenderTemplate="{StaticResource {dxet:InplaceBaseEditThemeKey ResourceKey=HoverBorderTemplate}}"/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:BaseEditThemeKey ResourceKey=CommonBorderDecorationTemplate}" TargetType="Control">
        <dxn:Chrome RenderTemplate="{StaticResource {dxet:InplaceBaseEditThemeKey ResourceKey=CommonBorderTemplate}}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:BaseEditThemeKey ResourceKey=TextEditBorderDecorationTemplate}" TargetType="Control">
        <dxn:Chrome RenderTemplate="{StaticResource {dxet:InplaceBaseEditThemeKey ResourceKey=TextEditBorderTemplate}}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:BaseEditThemeKey ResourceKey=HoverBorderDecorationTemplate}" TargetType="Control">
        <dxn:Chrome dxeh:ControlHelper.ShowFocusedState="{Binding Path=(dxeh:ControlHelper.ShowFocusedState), RelativeSource={RelativeSource TemplatedParent}}"
                    IsHitTestVisible="False"
                    RenderTemplate="{StaticResource {dxet:InplaceBaseEditThemeKey ResourceKey=HoverBorderTemplate}}"/>
    </ControlTemplate>

    <!--normal-->

    <SolidColorBrush x:Key="CheckEdit.Normal.FocusBorder.Background">#FF66CCFF</SolidColorBrush>

    <SolidColorBrush x:Key="CheckEdit.Normal.OuterBorder.Background">#FFF4F4F4</SolidColorBrush>

    <SolidColorBrush x:Key="CheckEdit.Normal.OuterBorder.BorderBrush">#FF8E8F8F</SolidColorBrush>

    <LinearGradientBrush x:Key="CheckEdit.Normal.InnerBorder.Background"
                         EndPoint="1,1"
                         StartPoint="0,0">
        <GradientStop Color="#FFCBCFD5" Offset="0"/>
        <GradientStop Color="#FFF6F6F6" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="CheckEdit.Normal.InnerBorder.BorderBrush"
                         EndPoint="1,1"
                         StartPoint="0,0">
        <GradientStop Color="#FFAEB3B9" Offset="0"/>
        <GradientStop Color="#FFE9E9EA" Offset="1"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="CheckEdit.Normal.TriState.BorderBrush">#FF18354A</SolidColorBrush>

    <LinearGradientBrush x:Key="CheckEdit.Normal.TriState.Background"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFA0CDF2" Offset="0"/>
        <GradientStop Color="#FF5AB6EA" Offset="1"/>
        <GradientStop Color="#FF177FC7" Offset="0.5"/>
    </LinearGradientBrush>

    <!--hover-->

    <SolidColorBrush x:Key="CheckEdit.Hover.OuterBorder.Background">#FFDEF9FA</SolidColorBrush>

    <SolidColorBrush x:Key="CheckEdit.Hover.OuterBorder.BorderBrush">#FF5586A3</SolidColorBrush>

    <LinearGradientBrush x:Key="CheckEdit.Hover.InnerBorder.Background"
                         EndPoint="1,1"
                         StartPoint="0,0">
        <GradientStop Color="#FFB1DFFD" Offset="0"/>
        <GradientStop Color="#FFE7F7FE" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="CheckEdit.Hover.InnerBorder.BorderBrush"
                         EndPoint="1,1"
                         StartPoint="0,0">
        <GradientStop Color="#FF79C6F9" Offset="0"/>
        <GradientStop Color="#FFCFECFD" Offset="1"/>
    </LinearGradientBrush>

    <Visibility x:Key="Visible">Visible</Visibility>

    <dxn:RenderTemplate x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=RenderCheckBoxTemplate}">
        <dxn:RenderPanel LayoutProvider="{dxn:DockPanelLayoutProvider LastChildFill=True}">
            <dxn:RenderPanel Name="CheckBox"
                             Dock="Left"
                             FlowDirection="LeftToRight"
                             Height="14"
                             Margin="{StaticResource {dxet:InplaceBaseEditThemeKey ResourceKey=CheckEditPadding}}"
                             ShouldCalcDpiAwareThickness="False"
                             VerticalAlignment="Center"
                             Width="14">
                <dxn:RenderBorder Name="FocusBorder"
                                  Background="{StaticResource CheckEdit.Normal.FocusBorder.Background}"
                                  CornerRadius="1"
                                  Margin="-1"
                                  Opacity="0.5"
                                  Visibility="Collapsed"/>
                <dxn:RenderBorder Name="OuterBorder"
                                  Background="{StaticResource CheckEdit.Normal.OuterBorder.Background}"
                                  BorderBrush="{StaticResource CheckEdit.Normal.OuterBorder.BorderBrush}"
                                  BorderThickness="1"
                                  Padding="1">
                    <dxn:RenderBorder Name="InnerBorder"
                                      Background="{StaticResource CheckEdit.Normal.InnerBorder.Background}"
                                      BorderBrush="{StaticResource CheckEdit.Normal.InnerBorder.BorderBrush}"
                                      BorderThickness="1"/>
                </dxn:RenderBorder>
                <dxn:RenderBorder Name="TriState"
                                  Background="{StaticResource CheckEdit.Normal.TriState.Background}"
                                  BorderBrush="{StaticResource CheckEdit.Normal.TriState.BorderBrush}"
                                  BorderThickness="1"
                                  CornerRadius="1"
                                  Height="10"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Visibility="Collapsed"
                                  Width="10"/>
                <dxn:RenderPath Name="CheckElement"
                                Data="M102.03442,598.79645 L105.22962,597.78918 L106.78825,600.42358 C106.78825,600.42358 108.51028,595.74304 110.21724,593.60419 C112.00967,591.35822 114.89314,591.42316 114.89314,591.42316 C114.89314,591.42316 112.67844,593.42645 111.93174,594.44464 C110.7449,596.06293 107.15683,604.13837 107.15683,604.13837 z"
                                Fill="#FF4C6198"
                                Height="10"
                                HorizontalAlignment="Center"
                                Stretch="Fill"
                                VerticalAlignment="Center"
                                Visibility="Collapsed"
                                Width="10"/>
            </dxn:RenderPanel>
            <dxn:RenderContentPresenter Name="PART_ContentPresenter" Visibility="Collapsed"/>
        </dxn:RenderPanel>
        <dxn:RenderTemplate.Triggers>
            <dxn:RenderStateGroup Name="CommonStates">
                <dxn:RenderStateTrigger Name="Normal"/>
                <dxn:RenderStateTrigger Name="Pressed"/>
                <dxn:RenderStateTrigger Name="MouseOver">
                    <dxn:RenderSetter Property="Background"
                                      TargetName="OuterBorder"
                                      Value="{StaticResource CheckEdit.Hover.OuterBorder.Background}"/>
                    <dxn:RenderSetter Property="BorderBrush"
                                      TargetName="OuterBorder"
                                      Value="{StaticResource CheckEdit.Hover.OuterBorder.BorderBrush}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="InnerBorder"
                                      Value="{StaticResource CheckEdit.Hover.InnerBorder.Background}"/>
                    <dxn:RenderSetter Property="BorderBrush"
                                      TargetName="InnerBorder"
                                      Value="{StaticResource CheckEdit.Hover.InnerBorder.BorderBrush}"/>
                </dxn:RenderStateTrigger>
                <dxn:RenderStateTrigger Name="Disabled">
                    <dxn:RenderSetter Property="Opacity"
                                      TargetName="CheckBox"
                                      Value="0.35"/>
                    <dxn:RenderSetter Property="Opacity"
                                      TargetName="PART_ContentPresenter"
                                      Value="0.35"/>
                </dxn:RenderStateTrigger>
            </dxn:RenderStateGroup>
            <dxn:RenderStateGroup Name="CheckStates">
                <dxn:RenderStateTrigger Name="Checked">
                    <dxn:RenderSetter Property="Visibility"
                                      TargetName="CheckElement"
                                      Value="{StaticResource Visible}"/>
                </dxn:RenderStateTrigger>
                <dxn:RenderStateTrigger Name="Unchecked"/>
                <dxn:RenderStateTrigger Name="Indeterminate">
                    <dxn:RenderSetter Property="Visibility"
                                      TargetName="TriState"
                                      Value="{StaticResource Visible}"/>
                </dxn:RenderStateTrigger>
            </dxn:RenderStateGroup>
            <dxn:RenderStateGroup Name="FocusStates">
                <dxn:RenderStateTrigger Name="Unfocused"/>
                <dxn:RenderStateTrigger Name="Focused">
                    <dxn:RenderSetter Property="Visibility"
                                      TargetName="FocusBorder"
                                      Value="{StaticResource Visible}"/>
                </dxn:RenderStateTrigger>
            </dxn:RenderStateGroup>
            <dxn:RenderStateGroup Name="ContentStates">
                <dxn:RenderStateTrigger Name="HasNoContent"/>
                <dxn:RenderStateTrigger Name="HasContent">
                    <dxn:RenderSetter Property="Visibility"
                                      TargetName="PART_ContentPresenter"
                                      Value="{StaticResource Visible}"/>
                </dxn:RenderStateTrigger>
            </dxn:RenderStateGroup>
        </dxn:RenderTemplate.Triggers>
    </dxn:RenderTemplate>

    <SolidColorBrush x:Key="HoverBrush" Color="#FF000000"/>

    <!--NORMAL-->

    <SolidColorBrush x:Key="Button.Normal.Outer.BorderBrush" Color="#00000000"/>

    <SolidColorBrush x:Key="Button.Normal.Outer.Background" Color="#00000000"/>

    <SolidColorBrush x:Key="Button.Normal.Inner.Background" Color="#00000000"/>

    <!--MOUSEOVER-->

    <SolidColorBrush x:Key="Button.MouseOver.Outer.BorderBrush" Color="#FF3C7FB1"/>

    <LinearGradientBrush x:Key="Button.MouseOver.Outer.Background"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFFAFDFE" Offset="0"/>
        <GradientStop Color="#FFE8F5FC" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Button.MouseOver.Inner.Background"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFEAF6FD" Offset="0"/>
        <GradientStop Color="#FFA7D9F5" Offset="1"/>
        <GradientStop Color="#FFD9F0FC" Offset="0.5"/>
        <GradientStop Color="#FFBEE6FD" Offset="0.5"/>
    </LinearGradientBrush>

    <!--PRESSED\CHECKED-->

    <SolidColorBrush x:Key="Button.Pressed.Outer.BorderBrush" Color="#FF2C628B"/>

    <LinearGradientBrush x:Key="Button.Pressed.Outer.Background"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FF9EB0BA" Offset="0"/>
        <GradientStop Color="#FF68B3DB" Offset="1"/>
        <GradientStop Color="#FF9ABACB" Offset="0.5"/>
        <GradientStop Color="#FF78AAC5" Offset="0.5"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Button.Pressed.Inner.Background"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFE5F4FC" Offset="0"/>
        <GradientStop Color="#FF68B3DB" Offset="1"/>
        <GradientStop Color="#FFC4E5F6" Offset="0.5"/>
        <GradientStop Color="#FF98D1EF" Offset="0.5"/>
    </LinearGradientBrush>

    <dxn:RenderTemplate x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=RenderButtonTemplate}">
        <dxn:RenderPanel>
            <dxn:RenderBorder Name="Outer"
                              Background="{StaticResource Button.Normal.Outer.Background}"
                              BorderBrush="{StaticResource Button.Normal.Outer.BorderBrush}"
                              BorderThickness="1"
                              Padding="1">
                <dxn:RenderBorder Name="Inner" Background="{StaticResource Button.Normal.Inner.Background}"/>
            </dxn:RenderBorder>
            <dxn:RenderContentPresenter Name="PART_ContentPresenter"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"/>
        </dxn:RenderPanel>
        <dxn:RenderTemplate.Triggers>
            <dxn:RenderStateGroup Name="CommonStates">
                <dxn:RenderStateTrigger Name="Normal"/>
                <dxn:RenderStateTrigger Name="MouseOver">
                    <dxn:RenderSetter Property="BorderBrush"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.MouseOver.Outer.BorderBrush}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.MouseOver.Outer.Background}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Inner"
                                      Value="{StaticResource Button.MouseOver.Inner.Background}"/>
                </dxn:RenderStateTrigger>
                <dxn:RenderStateTrigger Name="Pressed">
                    <dxn:RenderSetter Property="BorderBrush"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.Pressed.Outer.BorderBrush}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.Pressed.Outer.Background}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Inner"
                                      Value="{StaticResource Button.Pressed.Inner.Background}"/>
                    <dxn:RenderSetter Property="Padding"
                                      TargetName="Outer"
                                      Value="1,1,1,0"/>
                </dxn:RenderStateTrigger>
                <dxn:RenderStateTrigger Name="Disabled"/>
            </dxn:RenderStateGroup>
            <dxn:RenderStateGroup Name="CheckedStates">
                <dxn:RenderStateTrigger Name="Unchecked"/>
                <dxn:RenderStateTrigger Name="Checked">
                    <dxn:RenderSetter Property="BorderBrush"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.Pressed.Outer.BorderBrush}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.Pressed.Outer.Background}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Inner"
                                      Value="{StaticResource Button.Pressed.Inner.Background}"/>
                    <dxn:RenderSetter Property="Padding"
                                      TargetName="Outer"
                                      Value="1,1,1,0"/>
                </dxn:RenderStateTrigger>
            </dxn:RenderStateGroup>
            <dxn:RenderTrigger DependencyProperty="{x:Static dxe:ButtonInfo.GlyphKindProperty}" Value="User">
                <dxn:RenderSetter Property="Margin"
                                  TargetName="PART_ContentPresenter"
                                  Value="5,0"/>
            </dxn:RenderTrigger>
            <dxn:RenderTrigger DependencyProperty="{x:Static dxe:ButtonInfo.GlyphKindProperty}" Value="None">
                <dxn:RenderSetter Property="Margin"
                                  TargetName="PART_ContentPresenter"
                                  Value="5,0"/>
            </dxn:RenderTrigger>
        </dxn:RenderTemplate.Triggers>
    </dxn:RenderTemplate>

    <dxn:RenderTemplate x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=RenderSpinDownButtonTemplate}">
        <dxn:RenderPanel>
            <dxn:RenderBorder Name="Outer"
                              Background="{StaticResource Button.Normal.Outer.Background}"
                              BorderBrush="{StaticResource Button.Normal.Outer.BorderBrush}"
                              BorderThickness="1"
                              Padding="1">
                <dxn:RenderBorder Name="Inner" Background="{StaticResource Button.Normal.Inner.Background}"/>
            </dxn:RenderBorder>
            <dxn:RenderContentPresenter Name="PART_ContentPresenter"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"/>
        </dxn:RenderPanel>
        <dxn:RenderTemplate.Triggers>
            <dxn:RenderStateGroup Name="CommonStates">
                <dxn:RenderStateTrigger Name="Normal"/>
                <dxn:RenderStateTrigger Name="MouseOver">
                    <dxn:RenderSetter Property="BorderBrush"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.MouseOver.Outer.BorderBrush}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.MouseOver.Outer.Background}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Inner"
                                      Value="{StaticResource Button.MouseOver.Inner.Background}"/>
                    <dxn:RenderSetter Property="Content"
                                      TargetName="PART_ContentPresenter"
                                      Value="{StaticResource HoverBrush}"/>
                </dxn:RenderStateTrigger>
                <dxn:RenderStateTrigger Name="Pressed">
                    <dxn:RenderSetter Property="BorderBrush"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.Pressed.Outer.BorderBrush}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.Pressed.Outer.Background}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Inner"
                                      Value="{StaticResource Button.Pressed.Inner.Background}"/>
                    <dxn:RenderSetter Property="Content"
                                      TargetName="PART_ContentPresenter"
                                      Value="{StaticResource HoverBrush}"/>
                    <dxn:RenderSetter Property="Padding"
                                      TargetName="Outer"
                                      Value="1,1,1,0"/>
                </dxn:RenderStateTrigger>
                <dxn:RenderStateTrigger Name="Disabled"/>
            </dxn:RenderStateGroup>
            <dxn:RenderStateGroup Name="CheckedStates">
                <dxn:RenderStateTrigger Name="Unchecked"/>
                <dxn:RenderStateTrigger Name="Checked">
                    <dxn:RenderSetter Property="BorderBrush"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.Pressed.Outer.BorderBrush}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.Pressed.Outer.Background}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Inner"
                                      Value="{StaticResource Button.Pressed.Inner.Background}"/>
                    <dxn:RenderSetter Property="Padding"
                                      TargetName="Outer"
                                      Value="1,1,1,0"/>
                </dxn:RenderStateTrigger>
            </dxn:RenderStateGroup>
        </dxn:RenderTemplate.Triggers>
    </dxn:RenderTemplate>

    <dxn:RenderTemplate x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=RenderSpinUpButtonTemplate}">
        <dxn:RenderPanel>
            <dxn:RenderBorder Name="Outer"
                              Background="{StaticResource Button.Normal.Outer.Background}"
                              BorderBrush="{StaticResource Button.Normal.Outer.BorderBrush}"
                              BorderThickness="1"
                              Padding="1">
                <dxn:RenderBorder Name="Inner" Background="{StaticResource Button.Normal.Inner.Background}"/>
            </dxn:RenderBorder>
            <dxn:RenderContentPresenter Name="PART_ContentPresenter"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"/>
        </dxn:RenderPanel>
        <dxn:RenderTemplate.Triggers>
            <dxn:RenderStateGroup Name="CommonStates">
                <dxn:RenderStateTrigger Name="Normal"/>
                <dxn:RenderStateTrigger Name="MouseOver">
                    <dxn:RenderSetter Property="BorderBrush"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.MouseOver.Outer.BorderBrush}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.MouseOver.Outer.Background}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Inner"
                                      Value="{StaticResource Button.MouseOver.Inner.Background}"/>
                    <dxn:RenderSetter Property="Content"
                                      TargetName="PART_ContentPresenter"
                                      Value="{StaticResource HoverBrush}"/>
                </dxn:RenderStateTrigger>
                <dxn:RenderStateTrigger Name="Pressed">
                    <dxn:RenderSetter Property="BorderBrush"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.Pressed.Outer.BorderBrush}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.Pressed.Outer.Background}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Inner"
                                      Value="{StaticResource Button.Pressed.Inner.Background}"/>
                    <dxn:RenderSetter Property="Content"
                                      TargetName="PART_ContentPresenter"
                                      Value="{StaticResource HoverBrush}"/>
                    <dxn:RenderSetter Property="Padding"
                                      TargetName="Outer"
                                      Value="1,1,1,0"/>
                </dxn:RenderStateTrigger>
                <dxn:RenderStateTrigger Name="Disabled"/>
            </dxn:RenderStateGroup>
            <dxn:RenderStateGroup Name="CheckedStates">
                <dxn:RenderStateTrigger Name="Unchecked"/>
                <dxn:RenderStateTrigger Name="Checked">
                    <dxn:RenderSetter Property="BorderBrush"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.Pressed.Outer.BorderBrush}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.Pressed.Outer.Background}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Inner"
                                      Value="{StaticResource Button.Pressed.Inner.Background}"/>
                    <dxn:RenderSetter Property="Padding"
                                      TargetName="Outer"
                                      Value="1,1,1,0"/>
                </dxn:RenderStateTrigger>
            </dxn:RenderStateGroup>
        </dxn:RenderTemplate.Triggers>
    </dxn:RenderTemplate>

    <dxn:RenderTemplate x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=RenderSpinLeftButtonTemplate}">
        <dxn:RenderPanel>
            <dxn:RenderBorder Name="Outer"
                              Background="{StaticResource Button.Normal.Outer.Background}"
                              BorderBrush="{StaticResource Button.Normal.Outer.BorderBrush}"
                              BorderThickness="1"
                              Padding="1">
                <dxn:RenderBorder Name="Inner" Background="{StaticResource Button.Normal.Inner.Background}"/>
            </dxn:RenderBorder>
            <dxn:RenderContentPresenter Name="PART_ContentPresenter"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"/>
        </dxn:RenderPanel>
        <dxn:RenderTemplate.Triggers>
            <dxn:RenderStateGroup Name="CommonStates">
                <dxn:RenderStateTrigger Name="Normal"/>
                <dxn:RenderStateTrigger Name="MouseOver">
                    <dxn:RenderSetter Property="BorderBrush"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.MouseOver.Outer.BorderBrush}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.MouseOver.Outer.Background}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Inner"
                                      Value="{StaticResource Button.MouseOver.Inner.Background}"/>
                    <dxn:RenderSetter Property="Content"
                                      TargetName="PART_ContentPresenter"
                                      Value="{StaticResource HoverBrush}"/>
                </dxn:RenderStateTrigger>
                <dxn:RenderStateTrigger Name="Pressed">
                    <dxn:RenderSetter Property="BorderBrush"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.Pressed.Outer.BorderBrush}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.Pressed.Outer.Background}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Inner"
                                      Value="{StaticResource Button.Pressed.Inner.Background}"/>
                    <dxn:RenderSetter Property="Content"
                                      TargetName="PART_ContentPresenter"
                                      Value="{StaticResource HoverBrush}"/>
                    <dxn:RenderSetter Property="Padding"
                                      TargetName="Outer"
                                      Value="1,1,1,0"/>
                </dxn:RenderStateTrigger>
                <dxn:RenderStateTrigger Name="Disabled"/>
            </dxn:RenderStateGroup>
            <dxn:RenderStateGroup Name="CheckedStates">
                <dxn:RenderStateTrigger Name="Unchecked"/>
                <dxn:RenderStateTrigger Name="Checked">
                    <dxn:RenderSetter Property="BorderBrush"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.Pressed.Outer.BorderBrush}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.Pressed.Outer.Background}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Inner"
                                      Value="{StaticResource Button.Pressed.Inner.Background}"/>
                    <dxn:RenderSetter Property="Padding"
                                      TargetName="Outer"
                                      Value="1,1,1,0"/>
                </dxn:RenderStateTrigger>
            </dxn:RenderStateGroup>
        </dxn:RenderTemplate.Triggers>
    </dxn:RenderTemplate>

    <dxn:RenderTemplate x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=RenderSpinRightButtonTemplate}">
        <dxn:RenderPanel>
            <dxn:RenderBorder Name="Outer"
                              Background="{StaticResource Button.Normal.Outer.Background}"
                              BorderBrush="{StaticResource Button.Normal.Outer.BorderBrush}"
                              BorderThickness="1"
                              Padding="1">
                <dxn:RenderBorder Name="Inner" Background="{StaticResource Button.Normal.Inner.Background}"/>
            </dxn:RenderBorder>
            <dxn:RenderContentPresenter Name="PART_ContentPresenter"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"/>
        </dxn:RenderPanel>
        <dxn:RenderTemplate.Triggers>
            <dxn:RenderStateGroup Name="CommonStates">
                <dxn:RenderStateTrigger Name="Normal"/>
                <dxn:RenderStateTrigger Name="MouseOver">
                    <dxn:RenderSetter Property="BorderBrush"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.MouseOver.Outer.BorderBrush}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.MouseOver.Outer.Background}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Inner"
                                      Value="{StaticResource Button.MouseOver.Inner.Background}"/>
                    <dxn:RenderSetter Property="Content"
                                      TargetName="PART_ContentPresenter"
                                      Value="{StaticResource HoverBrush}"/>
                </dxn:RenderStateTrigger>
                <dxn:RenderStateTrigger Name="Pressed">
                    <dxn:RenderSetter Property="BorderBrush"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.Pressed.Outer.BorderBrush}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.Pressed.Outer.Background}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Inner"
                                      Value="{StaticResource Button.Pressed.Inner.Background}"/>
                    <dxn:RenderSetter Property="Content"
                                      TargetName="PART_ContentPresenter"
                                      Value="{StaticResource HoverBrush}"/>
                    <dxn:RenderSetter Property="Padding"
                                      TargetName="Outer"
                                      Value="1,1,1,0"/>
                </dxn:RenderStateTrigger>
                <dxn:RenderStateTrigger Name="Disabled"/>
            </dxn:RenderStateGroup>
            <dxn:RenderStateGroup Name="CheckedStates">
                <dxn:RenderStateTrigger Name="Unchecked"/>
                <dxn:RenderStateTrigger Name="Checked">
                    <dxn:RenderSetter Property="BorderBrush"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.Pressed.Outer.BorderBrush}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.Pressed.Outer.Background}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Inner"
                                      Value="{StaticResource Button.Pressed.Inner.Background}"/>
                    <dxn:RenderSetter Property="Padding"
                                      TargetName="Outer"
                                      Value="1,1,1,0"/>
                </dxn:RenderStateTrigger>
            </dxn:RenderStateGroup>
        </dxn:RenderTemplate.Triggers>
    </dxn:RenderTemplate>

</ResourceDictionary>