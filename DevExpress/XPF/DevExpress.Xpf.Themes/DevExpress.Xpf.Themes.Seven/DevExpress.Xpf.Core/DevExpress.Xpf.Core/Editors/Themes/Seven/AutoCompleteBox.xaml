<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
                    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
                    xmlns:dxn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Seven.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/Generic/AutoCompleteBox.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <SolidColorBrush x:Key="TokenBox.BorderBrush" Color="#FFA5A5A5"/>

    <SolidColorBrush x:Key="{dxet:TokenEditorThemeKey ResourceKey=TokenForeground}" Color="Black"/>

    <LinearGradientBrush x:Key="TokenBox.HighlightedBorder"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFF4F4F4" Offset="0"/>
        <GradientStop Color="#FFECECEC" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="TokenBox.Background"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFEBEBEB" Offset="0"/>
        <GradientStop Color="#FFE0E0E0" Offset="1"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="TokenBox.Hover.BorderBrush" Color="#FF7DA2CE"/>

    <LinearGradientBrush x:Key="TokenBox.Hover.HighlightedBorder"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFEBF4FD" Offset="0"/>
        <GradientStop Color="#FFDBEAFD" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="TokenBox.Hover.Background"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFDCEBFC" Offset="0"/>
        <GradientStop Color="#FFC1DBFC" Offset="1"/>
    </LinearGradientBrush>

    <ControlTemplate x:Key="{dxet:TokenEditorThemeKey ResourceKey=CellPresenterTemplate}" TargetType="{x:Type dxei:TokenEditorPresenter}">
        <Grid x:Name="Root" Background="Transparent">
            <ContentControl Focusable="False" Template="{TemplateBinding BorderTemplate}"/>
            <dxei:CellEditor x:Name="cell"
                             Focusable="False"
                             TextElement.Foreground="{TemplateBinding Foreground}"/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:TokenEditorThemeKey ResourceKey=TokenContainerTemplate}" TargetType="{x:Type ContentControl}">
        <Grid x:Name="grid" Margin="0,1,1,1">
            <Grid x:Name="default">
                <Border Background="{StaticResource TokenBox.BorderBrush}"
                        CornerRadius="1"
                        Opacity="0.5"
                        Padding="1">
                    <Border Background="{StaticResource TokenBox.HighlightedBorder}" Padding="1">
                        <Border Background="{StaticResource TokenBox.Background}"/>
                    </Border>
                </Border>
            </Grid>
            <Grid x:Name="hover" Opacity="0">
                <Border Background="{StaticResource TokenBox.Hover.BorderBrush}"
                        CornerRadius="1"
                        Padding="1">
                    <Border Background="{StaticResource TokenBox.Hover.HighlightedBorder}" Padding="1">
                        <Border Background="{StaticResource TokenBox.Hover.Background}"/>
                    </Border>
                </Border>
            </Grid>
            <Grid x:Name="pressed" Opacity="0">
                <Border Background="{StaticResource TokenBox.Hover.BorderBrush}"
                        CornerRadius="1"
                        Padding="1">
                    <Border Background="{StaticResource TokenBox.Hover.HighlightedBorder}" Padding="1">
                        <Border Background="{StaticResource TokenBox.Hover.Background}"/>
                    </Border>
                </Border>
            </Grid>
            <Grid x:Name="editable" Opacity="0"></Grid>
            <Grid x:Name="focused" Opacity="0">
                <Border Background="{StaticResource TokenBox.Hover.BorderBrush}"
                        CornerRadius="1"
                        Padding="1">
                    <Border Background="{StaticResource TokenBox.Hover.HighlightedBorder}" Padding="1">
                        <Border Background="{StaticResource TokenBox.Hover.Background}"/>
                    </Border>
                </Border>
            </Grid>
            <Grid x:Name="focusedunselected" Opacity="0">
                <Border Background="#00000000"
                        BorderBrush="#FF66CCFF"
                        BorderThickness="1"
                        CornerRadius="1"/>
                <Border Background="#00000000"
                        BorderBrush="#FF66CCFF"
                        BorderThickness="2"
                        CornerRadius="1"
                        Opacity="0.35"/>
            </Grid>
            <ContentPresenter/>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Opacity"
                        TargetName="default"
                        Value="0"/>
                <Setter Property="Opacity"
                        TargetName="hover"
                        Value="1"/>
                <Setter Property="Opacity"
                        TargetName="pressed"
                        Value="0"/>
                <Setter Property="Opacity"
                        TargetName="editable"
                        Value="0"/>
                <Setter Property="Opacity"
                        TargetName="focused"
                        Value="0"/>
                <Setter Property="Opacity"
                        TargetName="focusedunselected"
                        Value="0"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsSelected, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Opacity"
                        TargetName="default"
                        Value="0"/>
                <Setter Property="Opacity"
                        TargetName="hover"
                        Value="0"/>
                <Setter Property="Opacity"
                        TargetName="pressed"
                        Value="1"/>
                <Setter Property="Opacity"
                        TargetName="editable"
                        Value="0"/>
                <Setter Property="Opacity"
                        TargetName="focused"
                        Value="0"/>
                <Setter Property="Opacity"
                        TargetName="focusedunselected"
                        Value="0"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsSelected, RelativeSource={RelativeSource Self}}" Value="True"/>
                    <Condition Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsTokenFocused, RelativeSource={RelativeSource Self}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Opacity"
                        TargetName="default"
                        Value="0"/>
                <Setter Property="Opacity"
                        TargetName="hover"
                        Value="0"/>
                <Setter Property="Opacity"
                        TargetName="pressed"
                        Value="0"/>
                <Setter Property="Opacity"
                        TargetName="editable"
                        Value="0"/>
                <Setter Property="Opacity"
                        TargetName="focused"
                        Value="1"/>
                <Setter Property="Opacity"
                        TargetName="focusedunselected"
                        Value="0"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsSelected, RelativeSource={RelativeSource Self}}" Value="False"/>
                    <Condition Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsTokenFocused, RelativeSource={RelativeSource Self}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Opacity"
                        TargetName="focused"
                        Value="0"/>
                <Setter Property="Opacity"
                        TargetName="focusedunselected"
                        Value="1"/>
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsEditorActivated, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Opacity"
                        TargetName="default"
                        Value="0"/>
                <Setter Property="Opacity"
                        TargetName="hover"
                        Value="0"/>
                <Setter Property="Opacity"
                        TargetName="pressed"
                        Value="0"/>
                <Setter Property="Opacity"
                        TargetName="editable"
                        Value="1"/>
                <Setter Property="Opacity"
                        TargetName="focused"
                        Value="0"/>
                <Setter Property="Opacity"
                        TargetName="focusedunselected"
                        Value="0"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{dxet:TokenEditorThemeKey ResourceKey=DeleteButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                            Background="Transparent"
                            Height="16"
                            HorizontalAlignment="Center"
                            Margin="0,0,2,0"
                            VerticalAlignment="Center"
                            Width="16">
                        <Path x:Name="Path"
                              Data="F1 M 385,283L 386,283L 388,285L 390,283L 391,283L 391,284L 389,286L 391,288L 391,289L 390,289L 388,287L 386,289L 385,289L 385,288L 387,286L 385,284L 385,283 Z "
                              Fill="#FF4C6198"
                              Height="6"
                              Stretch="Fill"
                              Width="6"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter Property="Fill"
                                    TargetName="Path"
                                    Value="#FF4C6198"/>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill"
                                    TargetName="Path"
                                    Value="#FF042271"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill"
                                    TargetName="Path"
                                    Value="#FF042271"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>