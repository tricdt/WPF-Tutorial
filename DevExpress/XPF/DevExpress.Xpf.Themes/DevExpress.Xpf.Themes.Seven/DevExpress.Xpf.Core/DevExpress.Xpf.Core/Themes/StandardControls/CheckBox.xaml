<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Seven.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/StandardControls/Brushes.xaml"/>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Seven.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/StandardControls/SharedResources.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=System.Windows.Controls.CheckBox}" TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{StaticResource Text.Foreground}"/>
        <Setter Property="Background" Value="{StaticResource Button.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="0,3,0,3"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="StoryboardHover.Enter">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="HoverState" Storyboard.TargetProperty="Opacity">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.20" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0:0:0.20" Value="#FF042271"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="StoryboardHover.Exit">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="HoverState" Storyboard.TargetProperty="Opacity">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.20" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0:0:0.20" Value="#FF4C6198"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="StoryboardPressed.Enter">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PressedState" Storyboard.TargetProperty="Opacity">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0:0:0.15" Value="#FF4C6198"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="StoryboardPressed.Exit">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PressedState" Storyboard.TargetProperty="Opacity">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Background="{TemplateBinding Background}"
                          HorizontalAlignment="Left"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="IndeterminateState" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0"
                                  Grid.ColumnSpan="1"
                                  Height="14"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  Margin="0,1,0,1"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  Width="14">
                                <Grid x:Name="FocusedState" Opacity="0">
                                    <Border Style="{StaticResource CheckBoxFocusTemplate}"/>
                                </Grid>
                                <Grid x:Name="DefaultState">
                                    <Border Background="{StaticResource CheckBox.DefaultState.Border2}"
                                            BorderBrush="{StaticResource CheckBox.DefaultState.Border1}"
                                            BorderThickness="1">
                                        <Border Background="{StaticResource CheckBox.DefaultState.Border4}"
                                                BorderBrush="{StaticResource CheckBox.DefaultState.Border3}"
                                                BorderThickness="1"
                                                Margin="1"/>
                                    </Border>
                                </Grid>
                                <Grid x:Name="HoverState" Opacity="0">
                                    <Border Background="{StaticResource CheckBox.HoverState.Border2}"
                                            BorderBrush="{StaticResource CheckBox.HoverState.Border1}"
                                            BorderThickness="1">
                                        <Border Background="{StaticResource CheckBox.HoverState.Border4}"
                                                BorderBrush="{StaticResource CheckBox.HoverState.Border3}"
                                                BorderThickness="1"
                                                Margin="1"/>
                                    </Border>
                                </Grid>
                                <Grid x:Name="PressedState" Opacity="0">
                                    <Border Background="{StaticResource CheckBox.PressedState.Border2}"
                                            BorderBrush="{StaticResource CheckBox.PressedState.Border1}"
                                            BorderThickness="1">
                                        <Border Background="{StaticResource CheckBox.PressedState.Border4}"
                                                BorderBrush="{StaticResource CheckBox.PressedState.Border3}"
                                                BorderThickness="1"
                                                Margin="1"/>
                                    </Border>
                                </Grid>
                                <Grid x:Name="DisabledState" Opacity="0">
                                    <Border Background="{StaticResource CheckBox.DisabledState.Border2}"
                                            BorderBrush="{StaticResource CheckBox.DisabledState.Border1}"
                                            BorderThickness="1"/>
                                </Grid>
                                <Border x:Name="IndeterminateState"
                                        Background="{StaticResource CheckBox.IndeterminateState.Border2}"
                                        BorderBrush="{StaticResource CheckBox.IndeterminateState.Border1}"
                                        BorderThickness="1"
                                        CornerRadius="1"
                                        Height="10"
                                        HorizontalAlignment="Center"
                                        Opacity="0"
                                        Padding="1"
                                        VerticalAlignment="Center"
                                        Width="10"/>
                                <Path x:Name="CheckIcon"
                                      Fill="#FF4C6198"
                                      Opacity="0"
                                      Style="{StaticResource CheckBoxIconTemplate}"/>
                            </Grid>
                            <ContentPresenter x:Name="ContentPresenter"
                                              Grid.Column="1"
                                              Grid.ColumnSpan="1"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="4,0,0,0"
                                              RecognizesAccessKey="True"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <RemoveStoryboard BeginStoryboardName="StoryboardHoverExit_BeginStoryboard"/>
                                <BeginStoryboard x:Name="StoryboardHoverEnter_BeginStoryboard" Storyboard="{StaticResource StoryboardHover.Enter}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="StoryboardHoverEnter_BeginStoryboard"/>
                                <BeginStoryboard x:Name="StoryboardHoverExit_BeginStoryboard" Storyboard="{StaticResource StoryboardHover.Exit}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <RemoveStoryboard BeginStoryboardName="StoryboardPressedExit_BeginStoryboard"/>
                                <BeginStoryboard x:Name="StoryboardPressedEnter_BeginStoryboard" Storyboard="{StaticResource StoryboardPressed.Enter}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="StoryboardPressedEnter_BeginStoryboard"/>
                                <BeginStoryboard x:Name="StoryboardPressedExit_BeginStoryboard" Storyboard="{StaticResource StoryboardPressed.Exit}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Opacity"
                                    TargetName="FocusedState"
                                    Value="1"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity"
                                    TargetName="DisabledState"
                                    Value="1"/>
                            <Setter Property="Opacity"
                                    TargetName="ContentPresenter"
                                    Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>