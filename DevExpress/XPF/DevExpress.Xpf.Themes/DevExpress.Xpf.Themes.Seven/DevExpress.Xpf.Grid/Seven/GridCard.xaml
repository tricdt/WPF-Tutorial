<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
                    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
                    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
                    xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ExpandButtonTemplate}" TargetType="{x:Type dx:ToggleStateButton}">
        <Grid Background="Transparent" SnapsToDevicePixels="True">
            <Border x:Name="HoverHighlight"
                    Height="14"
                    Opacity="0"
                    Width="14">
                <Border.Background>
                    <RadialGradientBrush>
                        <GradientStop Color="#FF1CC4F7"/>
                        <GradientStop Color="#001CC4F7" Offset="1"/>
                    </RadialGradientBrush>
                </Border.Background>
            </Border>
            <Grid x:Name="GlyphClose"
                  Height="7"
                  Margin="1,0,0,1"
                  Width="7">
                <Path x:Name="GlyphClosePath1"
                      Data="F1 M 15.8421,49L 8.88364,49L 7.90432,48.0207L 7.90432,40.9152L 15.8421,49 Z"
                      Fill="#FF303336"
                      Stretch="Fill"/>
                <Path x:Name="GlyphClosePath2"
                      Data="F1 M 15.8421,49L 8.88364,49L 7.90432,48.0207L 7.90432,40.9152L 15.8421,49 Z"
                      Fill="#FF303336"
                      Stretch="Fill"/>
                <Path x:Name="GlyphClosePath3"
                      Data="F1 M 8.75877,48L 8.75877,43.0409L 13.7593,48.0415L 8.75877,48 Z"
                      Fill="#FF87898A"
                      Margin="1,2,2,1"
                      Stretch="Fill"/>
            </Grid>
            <Grid x:Name="GlyphOpen"
                  Height="10"
                  Margin="0,0,1,0"
                  Visibility="Hidden"
                  Width="5">
                <Path x:Name="GlyphOpenPath1"
                      Data="F1 M 29,36.0956L 29,46.0956L 24,41.0956L 29,36.0956 Z"
                      Fill="#FF818181"
                      Stretch="Fill"/>
                <Path x:Name="GlyphOpenPath2"
                      Data="F1 M 29,36.0956L 29,46.0956L 24,41.0956L 29,36.0956 Z"
                      Fill="#FF818181"
                      Stretch="Fill"/>
                <Path x:Name="GlyphOpenPath3"
                      Data="F1 M 28,38.0956L 28,44.0956L 25,41.0956L 28,38.0956 Z"
                      Fill="#FFF8F8F8"
                      Margin="1,2,1,2"
                      Stretch="Fill"/>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="True"/>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill"
                        TargetName="GlyphClosePath1"
                        Value="#FF1CC4F7"/>
                <Setter Property="Fill"
                        TargetName="GlyphClosePath2"
                        Value="#FF1CC4F7"/>
                <Setter Property="Fill"
                        TargetName="GlyphClosePath3"
                        Value="#FFCDEEFB"/>
                <Setter Property="Fill"
                        TargetName="GlyphOpenPath1"
                        Value="#FF1CC4F7"/>
                <Setter Property="Fill"
                        TargetName="GlyphOpenPath2"
                        Value="#FF1CC4F7"/>
                <Setter Property="Fill"
                        TargetName="GlyphOpenPath3"
                        Value="#FFCDEEFB"/>
                <Setter Property="Opacity"
                        TargetName="HoverHighlight"
                        Value="0.15"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Visibility"
                        TargetName="GlyphOpen"
                        Value="Visible"/>
                <Setter Property="Visibility"
                        TargetName="GlyphClose"
                        Value="Hidden"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{dxgt:CardTemplatesThemeKey ResourceKey=CardStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="dxg:GridViewBase.IsFocusedRow" Value="False"/>
                </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Property="dxg:GridViewBase.IsFocusedRow" Value="True"/>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ContainerTemplate}" TargetType="{x:Type ContentControl}">
        <Grid>
            <Border x:Name="Shadow" Opacity="0">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#14000000" Offset="0"/>
                        <GradientStop Color="#40000000" Offset="1"/>
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <Border x:Name="Focus"
                    Background="#FF66CCFF"
                    Margin="-2"
                    Opacity="0"/>
            <Border Background="#FF979797"
                    Grid.RowSpan="1"
                    Margin="1"
                    Padding="1">
                <ContentPresenter/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="dxg:GridViewBase.IsFocusedRow" Value="False"/>
                </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Property="dxg:GridViewBase.IsFocusedRow" Value="True">
                <Setter Property="Opacity"
                        TargetName="Shadow"
                        Value="0.25"/>
                <Setter Property="Opacity"
                        TargetName="Shadow"
                        Value="0.35"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{dxgt:GridCardThemeKey ResourceKey=HeaderPresenterStyle}" TargetType="{x:Type dxg:GridCardHeaderContentPresenter}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="TextBlock.Foreground" Value="#FF000000"/>
    </Style>

    <Style x:Key="{dxgt:GridCardThemeKey ResourceKey=ContentExpandButtonStyle}" TargetType="{x:Type dxg:GridCardExpandButton}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,3,0"/>
    </Style>

    <Style x:Key="{dxgt:GridCardThemeKey ResourceKey=ContentPresenterStyle}" TargetType="{x:Type dxg:GridCardContentPresenter}">
        <Setter Property="Margin" Value="11"/>
    </Style>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=HeaderContentTemplate}" TargetType="{x:Type ContentControl}">
        <ContentPresenter Margin="11,3,11,3"/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ExpanderContentTemplate}" TargetType="{x:Type ContentControl}">
        <ContentPresenter/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=DataContentTemplate}" TargetType="{x:Type ContentControl}">
        <Border x:Name="Root"
                Background="#FFF0F0F0"
                BorderBrush="#FFD6D6D6"
                BorderThickness="0,1,0,0">
            <ContentPresenter/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="dxg:GridViewBase.IsFocusedRow" Value="True">
                <Setter Property="BorderBrush"
                        TargetName="Root"
                        Value="#FF93C9E3"/>
                <Setter Property="Background"
                        TargetName="Root"
                        Value="#FFFAFAFA"/>
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(dxg:RowData.RowData).IsSelected, RelativeSource={RelativeSource TemplatedParent}}" Value="False"/>
                    <Condition Binding="{Binding Path=(dxg:GridViewBase.IsFocusedRow), RelativeSource={RelativeSource TemplatedParent}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="BorderBrush"
                        TargetName="Root"
                        Value="#FFD6D6D6"/>
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:RowData.RowData).SelectionState, RelativeSource={RelativeSource TemplatedParent}}" Value="Selected">
                <Setter Property="Background"
                        TargetName="Root"
                        Value="#FFFAFAFA"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsExpanded}" Value="False"/>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=HeaderPanelTemplate}" TargetType="{x:Type ContentControl}">
        <Grid Background="White">
            <Border x:Name="Root"
                    dxg:FadeSelectionHelper.FadeSelectionOnLostFocus="{Binding Path=View.ActualFadeSelectionOnLostFocus}"
                    dxg:FadeSelectionHelper.IsKeyboardFocusWithinView="{Binding Path=View.IsKeyboardFocusWithinView}">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFFFFFFF" Offset="0"/>
                        <GradientStop Color="#FFE9E9E9" Offset="1"/>
                        <GradientStop Color="#FFF1F1F1" Offset="0.5"/>
                        <GradientStop Color="#FFE8E8E8" Offset="0.5"/>
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <ContentPresenter/>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="dxg:GridViewBase.IsFocusedRow" Value="False"/>
                </MultiTrigger.Conditions>
            </MultiTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:RowData.RowData).SelectionState, RelativeSource={RelativeSource TemplatedParent}}" Value="Focused">
                <Setter Property="dxg:FadeSelectionHelper.Opacity"
                        TargetName="Root"
                        Value="1"/>
                <Setter Property="Background" TargetName="Root">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFE3F7FF" Offset="0"/>
                            <GradientStop Color="#FFB7E7FB" Offset="1"/>
                            <GradientStop Color="#FFE3F7FF" Offset="0.5"/>
                            <GradientStop Color="#FFBDEDFF" Offset="0.5"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:RowData.RowData).SelectionState, RelativeSource={RelativeSource TemplatedParent}}" Value="Selected">
                <Setter Property="Background" TargetName="Root">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                            <GradientStop Color="#FFECF7FC" Offset="0"/>
                            <GradientStop Color="#FFCFEAF5" Offset="1"/>
                            <GradientStop Color="#FFECF7FC" Offset="0.5"/>
                            <GradientStop Color="#FFD3EEF8" Offset="0.5"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:RowData.RowData).IsSelected, RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                <Setter Property="dxg:FadeSelectionHelper.Opacity"
                        TargetName="Root"
                        Value="1"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ControlTemplate}">
        <ContentControl x:Name="card"
                        Style="{Binding Path=(dxg:GridControl.ActiveView).CardStyle, RelativeSource={RelativeSource TemplatedParent}}"
                        Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ContainerTemplate}}">
            <dxg:GridCardPanel x:Name="gridCardPanel" IsExpanded="{Binding Path=IsExpanded}">
                <dxg:GridCardPanel.Header>
                    <dxg:GridCardHeaderControl>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ContentControl Grid.Column="0" Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=HeaderContentTemplate}}">
                                <dxg:GridCardHeaderContentPresenter Style="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=HeaderPresenterStyle}}"/>
                            </ContentControl>
                            <ContentControl Grid.Column="1"
                                            Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ExpanderContentTemplate}}"
                                            Visibility="{Binding Path=View.ShowCardExpandButton, Converter={StaticResource BoolToVisibilityConverter}}">
                                <dxg:GridCardExpandButton Style="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ContentExpandButtonStyle}}"/>
                            </ContentControl>
                        </Grid>
                    </dxg:GridCardHeaderControl>
                </dxg:GridCardPanel.Header>
                <dxg:GridCardPanel.Body>
                    <ContentControl Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=DataContentTemplate}}">
                        <dxg:GridCardContentPresenter x:Name="presenter" Style="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ContentPresenterStyle}}"/>
                    </ContentControl>
                </dxg:GridCardPanel.Body>
            </dxg:GridCardPanel>
        </ContentControl>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=View.CollapsedCardOrientation}" Value="Vertical">
                <Setter Property="RotateOnCollapse"
                        TargetName="gridCardPanel"
                        Value="True"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="LoadingIndicator" TargetType="{x:Type ProgressBar}">
        <Grid SnapsToDevicePixels="True">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Determinate"/>
                    <VisualState x:Name="Indeterminate">
                        <Storyboard>
                            <DoubleAnimation Duration="00:00:2"
                                             RepeatBehavior="Forever"
                                             Storyboard.TargetName="borderLoading"
                                             Storyboard.TargetProperty="(Panel.Background).(Brush.RelativeTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
                                             To="360"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border CornerRadius="128"
                    Margin="-1"
                    Opacity="0.35">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFF0F0F0" Offset="0"/>
                        <GradientStop Color="#FFD0D0D0" Offset="1"/>
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <Border Background="#FF888888" CornerRadius="128">
                <Border Background="#FFFFFFFF"
                        CornerRadius="128"
                        Margin="1">
                    <Grid Margin="1">
                        <Border Background="#FFE0E0E0" CornerRadius="128"/>
                        <Border x:Name="borderLoading" CornerRadius="128">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <LinearGradientBrush.RelativeTransform>
                                        <TransformGroup>
                                            <ScaleTransform CenterX="0.5" CenterY="0.5"/>
                                            <SkewTransform CenterX="0.5" CenterY="0.5"/>
                                            <RotateTransform CenterX="0.5" CenterY="0.5"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </LinearGradientBrush.RelativeTransform>
                                    <GradientStop Color="#BFFFFFFF" Offset="0"/>
                                    <GradientStop Color="#00FFFFFF" Offset="0.5"/>
                                    <GradientStop Color="#00FFFFFF" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border Background="#FFFFFFFF"
                                CornerRadius="128"
                                Margin="{TemplateBinding Padding}">
                            <Border Background="#FF999999"
                                    CornerRadius="128"
                                    Margin="1">
                                <Border Background="{TemplateBinding Background}"
                                        CornerRadius="128"
                                        Margin="1"/>
                            </Border>
                        </Border>
                    </Grid>
                </Border>
            </Border>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=LoadingCardTemplate}" TargetType="dxg:LoadingCardControl">
        <Grid x:Name="Root"
              Margin="1"
              MinHeight="216"
              MinWidth="216">
            <ProgressBar x:Name="Indicator"
                         Background="#FFFFFFFF"
                         Height="16"
                         HorizontalAlignment="Center"
                         IsIndeterminate="{Binding ShowLoadingIndicator}"
                         Margin="8"
                         MinHeight="4"
                         MinWidth="4"
                         Padding="1"
                         Template="{StaticResource LoadingIndicator}"
                         VerticalAlignment="Center"
                         Width="16"/>
            <dxg:LoadingRowButton Click="{DXEvent 'LoadMoreRows()'}"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Visibility="{Binding AllowLoadMore, Converter={StaticResource BoolToVisibilityConverter}}">
                <StackPanel Margin="15,0,9,1" Orientation="Horizontal">
                    <Label Content="{dxg:GridControlStringId LoadingRowLoadMore}"/>
                    <Grid Height="16"
                          Margin="3"
                          Width="16">
                        <Path Data="F1 M 10,5L 5,10L 0,5L 3,5L 3,3L 7,3L 7,5L 10,5 Z M 3,2L 3,0L 7,0L 7,2L 3,2 Z "
                              Fill="#FF000000"
                              Height="10"
                              HorizontalAlignment="Stretch"
                              Margin="0,1,0,0"
                              Stretch="Fill"
                              VerticalAlignment="Stretch"
                              Width="10"/>
                    </Grid>
                </StackPanel>
            </dxg:LoadingRowButton>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=LoadingCardErrorTemplate}" TargetType="dxg:LoadingCardControl">
        <Grid x:Name="Root"
              Margin="1"
              MinHeight="216"
              MinWidth="216">
            <Grid HorizontalAlignment="Center"
                  Margin="12,0,12,0"
                  MaxWidth="216"
                  VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Path Data="F1 M 7,0C 10.866,0 14,3.13401 14,7C 14,10.866 10.866,14 7,14C 3.13401,14 -6.35783e-007,10.866 -6.35783e-007,7C -6.35783e-007,3.13401 3.13401,0 7,0 Z M 2.75736,4.17157L 5.58579,7L 2.75736,9.82843L 4.17157,11.2426L 7,8.41422L 9.82843,11.2426L 11.2426,9.82843L 8.41421,7L 11.2426,4.17157L 9.82843,2.75736L 7,5.58579L 4.17157,2.75736L 2.75736,4.17157 Z "
                      Fill="#FFCC0000"
                      Height="14"
                      HorizontalAlignment="Center"
                      Margin="4"
                      Stretch="Fill"
                      VerticalAlignment="Top"
                      Width="14"/>
                <StackPanel Grid.Column="1" Orientation="Vertical">
                    <TextBlock HorizontalAlignment="Left"
                               Margin="4,3,4,3"
                               Text="{Binding ErrorText}"
                               TextWrapping="Wrap"/>
                    <TextBlock HorizontalAlignment="Center" Visibility="{Binding IsLoadingButtonVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                        <dxe:HyperlinkEdit Command="{Binding LoadRowsCommand}" Text="{Binding LoadingButtonText}"/>
                    </TextBlock>
                </StackPanel>
            </Grid>
        </Grid>
    </ControlTemplate>

</ResourceDictionary>