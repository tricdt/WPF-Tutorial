<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Win10Light.v24.1;component/Core/Core/Editors/Themes/Generic/TextEditBase.xaml" />
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Win10Light.v24.1;component/Core/Core/Editors/Themes/Generic/TextEdit.xaml" />
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Win10Light.v24.1;component/Core/Core/Editors/Themes/Win10Light/ErrorPresenter.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <!-- General -->
  <sys:Boolean x:Key="{dxet:TextEditThemeKey ResourceKey=UseLightweightTemplates}">True</sys:Boolean>
  <Style x:Key="{dxet:TextEditThemeKey ResourceKey=WatermarkTextBlockStyle}" BasedOn="{StaticResource BaseWatermarkTextBlockStyle}" TargetType="{x:Type TextBlock}">
    <Style.Triggers>
      <DataTrigger Binding="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxi:AppearanceOptions.HasPadding), RelativeSource={RelativeSource TemplatedParent}}" Value="True">
        <Setter Property="Margin" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).Padding, RelativeSource={RelativeSource TemplatedParent}}" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxet:TextEditThemeKey ResourceKey=TextBlockStyle}" BasedOn="{StaticResource BaseTextBlockStyle}" TargetType="{x:Type TextBlock}">
    <Setter Property="Background" Value="{x:Null}" />
    <!--T1038586-->
    <Setter Property="Margin" Value="4,2,4,2" />
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Margin" Value="13,13,13,13" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxet:TextEditThemeKey ResourceKey=TextBlockInplaceStyle}" BasedOn="{StaticResource BaseTextBlockInplaceStyle}" TargetType="{x:Type TextBlock}">
    <Setter Property="dxei:EditorMarginHelper.Margin" Value="4,2,4,2,0,2,4,2" />
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="dxei:EditorMarginHelper.Margin" Value="13,13,13,13,13,13,13,13" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxet:TextEditThemeKey ResourceKey=TextStyle}" BasedOn="{StaticResource BaseTextStyle}" TargetType="{x:Type TextBox}">
    <Setter Property="dxei:EditorMarginHelper.Margin" Value="2,2,2,2,0,2,2,2" />
    <Setter Property="CaretBrush" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxei:BaseEditAppearanceOptions.CaretBrush), RelativeSource={RelativeSource Self}}" />
    <Setter Property="SelectionBrush" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxei:BaseEditAppearanceOptions.SelectionBrush), RelativeSource={RelativeSource Self}}" />
    <Setter Property="SelectionOpacity" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxei:BaseEditAppearanceOptions.SelectionOpacity), RelativeSource={RelativeSource Self}}" />
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="dxei:EditorMarginHelper.Margin" Value="13,13,13,13,0,13,13,13" />
      </Trigger>
      <DataTrigger Binding="{Binding Path=ShowBorder, RelativeSource={RelativeSource AncestorType={x:Type dxe:BaseEdit}}}" Value="True">
        <Setter Property="Background" Value="Transparent" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxet:TextEditThemeKey ResourceKey=TextInplaceStyle}" BasedOn="{StaticResource BaseTextInplaceStyle}" TargetType="{x:Type TextBox}">
    <Setter Property="dxei:EditorMarginHelper.Margin" Value="2,2,2,2,0,2,2,2" />
    <Setter Property="CaretBrush" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxei:BaseEditAppearanceOptions.CaretBrush), RelativeSource={RelativeSource Self}}" />
    <Setter Property="SelectionBrush" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxei:BaseEditAppearanceOptions.SelectionBrush), RelativeSource={RelativeSource Self}}" />
    <Setter Property="SelectionOpacity" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxei:BaseEditAppearanceOptions.SelectionOpacity), RelativeSource={RelativeSource Self}}" />
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="dxei:EditorMarginHelper.Margin" Value="13,13,13,13,0,13,13,13" />
      </Trigger>
      <DataTrigger Binding="{Binding Path=ShowBorderInInplaceMode, RelativeSource={RelativeSource AncestorType={x:Type dxe:BaseEdit}}}" Value="True">
        <Setter Property="Background" Value="Transparent" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Thickness x:Key="{dxet:EmbeddedEditorLabelsThemeKey ResourceKey=Margin}">4,2,0,0</Thickness>
  <Thickness x:Key="{dxet:EmbeddedEditorLabelsThemeKey ResourceKey=Padding}">0</Thickness>
  <sys:Double x:Key="{dxet:EmbeddedEditorLabelsThemeKey ResourceKey=FontSize}">12</sys:Double>
  <SolidColorBrush x:Key="{dxet:EmbeddedEditorLabelsThemeKey ResourceKey=Foreground}" Color="Gray" />
  <Thickness x:Key="{dxet:EmbeddedEditorLabelsThemeKey ResourceKey=ContentMargin}">0,0,0,2</Thickness>
</ResourceDictionary>