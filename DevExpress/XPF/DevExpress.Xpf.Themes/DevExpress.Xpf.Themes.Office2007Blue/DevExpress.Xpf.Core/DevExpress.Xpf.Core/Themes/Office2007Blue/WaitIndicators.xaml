<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <dx:EditorStringIdConverter x:Key="EditorStringIdConverter"/>

    <dx:BoolToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

    <ControlTemplate x:Key="DefaultWaitIndicator" TargetType="{x:Type ProgressBar}">
        <Grid SnapsToDevicePixels="True">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Determinate"/>
                    <VisualState x:Name="Indeterminate">
                        <Storyboard Timeline.DesiredFrameRate="{x:Static dx:WaitIndicator.DesiredFrameRate}">
                            <DoubleAnimation Duration="00:00:2"
                                             RepeatBehavior="Forever"
                                             Storyboard.TargetName="borderLoading"
                                             Storyboard.TargetProperty="(Panel.Background).(Brush.RelativeTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
                                             To="360"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border CornerRadius="128">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF7DA3CD" Offset="0"/>
                        <GradientStop Color="#FF5473AE" Offset="1"/>
                    </LinearGradientBrush>
                </Border.Background>
                <Border CornerRadius="128" Margin="1">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFF4F9FD" Offset="0"/>
                            <GradientStop Color="#FFE3EEF9" Offset="1"/>
                            <GradientStop Color="#FFC7D8F1" Offset="0.5"/>
                        </LinearGradientBrush>
                    </Border.Background>
                    <Grid Margin="1">
                        <Border CornerRadius="128">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFDBE9F9" Offset="0"/>
                                    <GradientStop Color="#FFFAFCFE" Offset="1"/>
                                    <GradientStop Color="#FF8CB0E5" Offset="0.5"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border x:Name="borderLoading" CornerRadius="128">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <LinearGradientBrush.RelativeTransform>
                                        <TransformGroup>
                                            <ScaleTransform CenterX="0.5" CenterY="0.5"/>
                                            <SkewTransform CenterX="0.5" CenterY="0.5"/>
                                            <RotateTransform CenterX="0.5" CenterY="0.5"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </LinearGradientBrush.RelativeTransform>
                                    <GradientStop Color="#7FFFFFFF" Offset="0"/>
                                    <GradientStop Color="Transparent" Offset="0.5"/>
                                    <GradientStop Color="Transparent" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border CornerRadius="128" Margin="{TemplateBinding Padding}">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFF4F9FD" Offset="0"/>
                                    <GradientStop Color="#FFE3EEF9" Offset="1"/>
                                    <GradientStop Color="#FFC7D8F1" Offset="0.5"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border CornerRadius="128" Margin="1">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF7DA3CD" Offset="1"/>
                                        <GradientStop Color="#FF5473AE"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border Background="{TemplateBinding Background}"
                                        CornerRadius="128"
                                        Margin="1"/>
                            </Border>
                        </Border>
                    </Grid>
                </Border>
            </Border>
        </Grid>
    </ControlTemplate>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.ColumnWaitIndicator}" TargetType="{x:Type dx:ColumnWaitIndicator}">
        <Setter Property="IsHitTestVisible" Value="{Binding IsHitTestVisible, FallbackValue=true, TargetNullValue=true}"/>
        <Setter Property="IsIndeterminate" Value="True"/>
        <Setter Property="Width" Value="32"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" Value="#FFF0F1F2"/>
        <Setter Property="Margin" Value="25"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="MinWidth" Value="8"/>
        <Setter Property="MinHeight" Value="8"/>
        <Setter Property="Template" Value="{StaticResource DefaultWaitIndicator}"/>
    </Style>

    <ControlTemplate x:Key="{dx:WaitIndicatorThemeKey ResourceKey=WaitIndicatorContainerTemplate}" TargetType="{x:Type dx:WaitIndicatorContainer}">
        <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
            <Border CornerRadius="8" Visibility="{Binding ShowShadow, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource AncestorType=dx:WaitIndicator}}">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#0C000000" Offset="0"/>
                        <GradientStop Color="#19000000" Offset="1"/>
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <Border Background="#FFB1C8EA"
                    BorderThickness="0"
                    CornerRadius="8"
                    Margin="1">
                <Border Background="#FFE3EFFF"
                        BorderThickness="0"
                        CornerRadius="7"
                        Margin="1">
                    <ContentPresenter/>
                </Border>
            </Border>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dx:WaitIndicatorThemeKey ResourceKey=WaitIndicatorTemplate}" TargetType="{x:Type dx:WaitIndicator}">
        <Grid x:Name="root"
              HorizontalAlignment="Center"
              Margin="{TemplateBinding ContentPadding}"
              Opacity="0.9"
              VerticalAlignment="Center"
              Visibility="Collapsed">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="Visibility">
                    <VisualState x:Name="Visible">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="root" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.1">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <!--BEGIN WPF-->
                            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="progressBar" Storyboard.TargetProperty="IsIndeterminate">
                                <DiscreteBooleanKeyFrame KeyTime="0:0:0.1" Value="True"/>
                            </BooleanAnimationUsingKeyFrames>
                            <!--END WPF-->
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Collapsed">
                        <Storyboard>
                            <DoubleAnimation BeginTime="0:0:0.1"
                                             Duration="0:0:0.1"
                                             From="1"
                                             Storyboard.TargetName="root"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="root" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <!--BEGIN WPF-->
                            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="progressBar" Storyboard.TargetProperty="IsIndeterminate">
                                <DiscreteBooleanKeyFrame KeyTime="0:0:0.1" Value="False"/>
                            </BooleanAnimationUsingKeyFrames>
                            <!--END WPF-->
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <dx:WaitIndicatorContainer>
                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <ProgressBar x:Name="progressBar"
                                 Background="#FFCFDDEE"
                                 BorderBrush="{x:Null}"
                                 Foreground="{x:Null}"
                                 Height="31"
                                 HorizontalAlignment="Center"
                                 IsIndeterminate="True"
                                 Margin="12,12,8,12"
                                 MinHeight="8"
                                 MinWidth="8"
                                 Padding="4"
                                 Template="{StaticResource DefaultWaitIndicator}"
                                 VerticalAlignment="Center"
                                 Width="31"/>
                    <ContentPresenter Content="{TemplateBinding ActualContent}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      Grid.Column="1"
                                      Margin="{TemplateBinding Padding}"
                                      VerticalAlignment="Center"/>
                </Grid>
            </dx:WaitIndicatorContainer>
        </Grid>
    </ControlTemplate>

    <DataTemplate x:Key="{dx:WaitIndicatorThemeKey ResourceKey=WaitIndicatorContentTemplate}">
        <TextBlock Text="{Binding}"
                   TextWrapping="Wrap"
                   VerticalAlignment="Center"/>
    </DataTemplate>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.WaitIndicatorContainer}" TargetType="{x:Type dx:WaitIndicatorContainer}">
        <Setter Property="Template" Value="{DynamicResource {dx:WaitIndicatorThemeKey ResourceKey=WaitIndicatorContainerTemplate}}"/>
        <Setter Property="Foreground" Value="Black"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.WaitIndicator}" TargetType="{x:Type dx:WaitIndicator}">
        <Setter Property="Template" Value="{DynamicResource {dx:WaitIndicatorThemeKey ResourceKey=WaitIndicatorTemplate}}"/>
        <Setter Property="Padding" Value="0,0,12,0"/>
        <Setter Property="ContentPadding" Value="25"/>
        <Setter Property="Content" Value="{x:Null}"/>
        <Setter Property="ContentTemplate" Value="{DynamicResource {dx:WaitIndicatorThemeKey ResourceKey=WaitIndicatorContentTemplate}}"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
    </Style>

    <dxcn:WaitIndicatorSizeToPointSizeConverter x:Key="waitIndicatorSizeToPointSizeConverter" />

    <ControlTemplate x:Key="{dxdst:ButtonThemeKey ResourceKey=ButtonWaitIndicatorTemplate}" TargetType="{x:Type dx:WaitIndicator}">
        <Grid>
            <ContentPresenter x:Name="content" Content="{TemplateBinding Content}" />
            <Grid x:Name="root" Visibility="Collapsed">
                <ProgressBar x:Name="progressBar" IsEnabled="True"
                             Template="{StaticResource DefaultWaitIndicator}"
                             IsIndeterminate="True" 
                             Padding="4"
                             MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource Self}, Converter={StaticResource waitIndicatorSizeToPointSizeConverter}}"
                             MinHeight="{Binding ActualHeight, RelativeSource={RelativeSource Self}, Converter={StaticResource waitIndicatorSizeToPointSizeConverter}}">
                </ProgressBar>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="DeferedVisibility" Value="True">
                <Setter Property="Visibility" Value="Visible" TargetName="root" />
                <Setter Property="Visibility" Value="Collapsed" TargetName="content" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>