<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxtEx="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:dxeh="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
  <ResourceDictionary.MergedDictionaries>
    <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2007Blue.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/Generic/TextEditBase.xaml" />
    <dxdst:ResourceDictionaryEx Source="{dx:DynamicEditorsResource InplaceBaseEdit.xaml}" />
  </ResourceDictionary.MergedDictionaries>
  <Thickness x:Key="{dxet:TextEditThemeKey ResourceKey=WatermarkTextBlockMargin}">2,0</Thickness>
  <sys:Boolean x:Key="{dxet:TextEditThemeKey ResourceKey=UseLightweightTemplates}">False</sys:Boolean>
  <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
  <ControlTemplate x:Key="{dxet:BaseEditThemeKey ResourceKey=EmptyBorderTemplate}" TargetType="ContentControl">
    <ContentPresenter />
  </ControlTemplate>
  <ControlTemplate x:Key="{dxet:BaseEditThemeKey ResourceKey=TextEditBorderTemplate}" TargetType="ContentControl">
    <Grid>
      <dxn:Chrome RenderTemplate="{StaticResource {dxet:InplaceBaseEditThemeKey ResourceKey=TextEditBorderTemplate}}" />
      <ContentPresenter Name="borderContainer" Margin="{StaticResource {dxet:InplaceBaseEditThemeKey ResourceKey=TextEditBorderThickness}}" />
      <dxn:Chrome RenderTemplate="{StaticResource {dxet:InplaceBaseEditThemeKey ResourceKey=HoverBorderTemplate}}" dxei:ControlHelper.ShowFocusedState="{Binding Path=(dxeh:ControlHelper.ShowFocusedState), RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="dxn:AppearanceOptions.HasBorderThickness" Value="True">
        <Setter TargetName="borderContainer" Property="Margin" Value="{Binding Path=(dxn:AppearanceOptions.BorderThickness), RelativeSource={RelativeSource TemplatedParent}}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxet:BaseEditThemeKey ResourceKey=CommonBorderTemplate}" TargetType="ContentControl">
    <Grid>
      <dxn:Chrome RenderTemplate="{StaticResource {dxet:InplaceBaseEditThemeKey ResourceKey=CommonBorderTemplate}}" />
      <ContentPresenter Name="borderContainer" Margin="{StaticResource {dxet:InplaceBaseEditThemeKey ResourceKey=CommonBorderThickness}}" />
      <dxn:Chrome RenderTemplate="{StaticResource {dxet:InplaceBaseEditThemeKey ResourceKey=HoverBorderTemplate}}" dxei:ControlHelper.ShowFocusedState="{Binding Path=(dxeh:ControlHelper.ShowFocusedState), RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="dxn:AppearanceOptions.HasBorderThickness" Value="True">
        <Setter TargetName="borderContainer" Property="Margin" Value="{Binding Path=(dxn:AppearanceOptions.BorderThickness), RelativeSource={RelativeSource TemplatedParent}}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxet:BaseEditThemeKey ResourceKey=CommonBorderDecorationTemplate}" TargetType="Control">
    <dxn:Chrome RenderTemplate="{StaticResource {dxet:InplaceBaseEditThemeKey ResourceKey=CommonBorderTemplate}}" />
  </ControlTemplate>
  <ControlTemplate x:Key="{dxet:BaseEditThemeKey ResourceKey=TextEditBorderDecorationTemplate}" TargetType="Control">
    <dxn:Chrome RenderTemplate="{StaticResource {dxet:InplaceBaseEditThemeKey ResourceKey=TextEditBorderTemplate}}" />
  </ControlTemplate>
  <ControlTemplate x:Key="{dxet:BaseEditThemeKey ResourceKey=HoverBorderDecorationTemplate}" TargetType="Control">
    <dxn:Chrome RenderTemplate="{StaticResource {dxet:InplaceBaseEditThemeKey ResourceKey=HoverBorderTemplate}}" dxei:ControlHelper.ShowFocusedState="{Binding Path=(dxeh:ControlHelper.ShowFocusedState), RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" />
  </ControlTemplate>
  <ControlTemplate x:Key="{dxet:TextEditThemeKey ResourceKey=ErrorControlTemplate}" TargetType="{x:Type dxe:ErrorControl}">
    <ContentPresenter Margin="3,0,3,0" x:Name="content" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" RenderTransformOrigin="0.5,0.5">
      <ContentPresenter.Resources>
        <Storyboard x:Key="showErrorStoryboard">
          <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.2000000" Storyboard.TargetName="content" Storyboard.TargetProperty="Opacity" From="0" To="1" />
          <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.1000000" Storyboard.TargetName="content" Storyboard.TargetProperty="RenderTransform.ScaleX" From="1" To="1.2" />
          <DoubleAnimation BeginTime="00:00:00.1000000" Duration="00:00:00.1000000" Storyboard.TargetName="content" Storyboard.TargetProperty="RenderTransform.ScaleX" From="1.2" To="1" />
          <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.1000000" Storyboard.TargetName="content" Storyboard.TargetProperty="RenderTransform.ScaleY" From="1" To="1.2" />
          <DoubleAnimation BeginTime="00:00:00.1000000" Duration="00:00:00.1000000" Storyboard.TargetName="content" Storyboard.TargetProperty="RenderTransform.ScaleY" From="1.2" To="1" />
        </Storyboard>
        <Storyboard x:Key="hideErrorStoryboard">
          <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="content" Storyboard.TargetProperty="Opacity" To="0" />
        </Storyboard>
      </ContentPresenter.Resources>
      <ContentPresenter.RenderTransform>
        <ScaleTransform />
      </ContentPresenter.RenderTransform>
    </ContentPresenter>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxet:TextEditThemeKey ResourceKey=Template}" TargetType="{x:Type dxe:TextEdit}">
    <ContentControl Template="{TemplateBinding ActualBorderTemplate}" x:Name="PART_Root" dx:FocusHelper2.Focusable="False" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" dxn:AppearanceOptions.CornerRadius="{Binding Path=(dxn:AppearanceOptions.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" dxn:AppearanceOptions.HasCornerRadius="{Binding Path=(dxn:AppearanceOptions.HasCornerRadius), RelativeSource={RelativeSource TemplatedParent}}" dxn:AppearanceOptions.BorderThickness="{Binding Path=(dxn:AppearanceOptions.BorderThickness), RelativeSource={RelativeSource TemplatedParent}}" dxn:AppearanceOptions.HasBorderThickness="{Binding Path=(dxn:AppearanceOptions.HasBorderThickness), RelativeSource={RelativeSource TemplatedParent}}" dxe:EditorAppearanceProperties.FocusedBorderBrush="{Binding Path=(dxe:EditorAppearanceProperties.FocusedBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" dxe:EditorAppearanceProperties.ReadOnlyBorderBrush="{Binding Path=(dxe:EditorAppearanceProperties.ReadOnlyBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" dxe:EditorAppearanceProperties.ReadOnlyBackground="{Binding Path=(dxe:EditorAppearanceProperties.ReadOnlyBackground), RelativeSource={RelativeSource TemplatedParent}}" dxei:ControlHelper.IsReadOnly="{TemplateBinding IsReadOnly}" dxei:ControlHelper.ShowFocusedState="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource TemplatedParent}}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
      <Grid SnapsToDevicePixels="True">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto" x:Name="PART_FirstRow" />
          <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Label Grid.Row="0" Grid.Column="1" x:Name="PART_Label" Content="{TemplateBinding Label}" Visibility="Collapsed" VerticalAlignment="Bottom" Margin="{DynamicResource {dxet:EmbeddedEditorLabelsThemeKey ResourceKey=Margin}}" Padding="{DynamicResource {dxet:EmbeddedEditorLabelsThemeKey ResourceKey=Padding}}" FontSize="{DynamicResource {dxet:EmbeddedEditorLabelsThemeKey ResourceKey=FontSize}}" Foreground="{DynamicResource {dxet:EmbeddedEditorLabelsThemeKey ResourceKey=Foreground}}" />
        <dxe:ErrorControl Grid.Row="0" Grid.RowSpan="2" Grid.Column="0" x:Name="PART_ErrorPresenter" />
        <dxe:EditorControl Grid.Row="1" Grid.Column="1" x:Name="PART_Content" Template="{TemplateBinding ActualEditorControlTemplate}" />
      </Grid>
    </ContentControl>
    <ControlTemplate.Triggers>
      <DataTrigger Binding="{Binding Path=ShowBorder, RelativeSource={RelativeSource Self}}" Value="true">
        <Setter TargetName="PART_ErrorPresenter" Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxet:InplaceBaseEditThemeKey ResourceKey=ValidationErrorSvgPalette}}" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=Label, RelativeSource={RelativeSource Self}, Converter={StaticResource StringIsNotNullOrEmptyConverter}}" Value="True">
        <Setter TargetName="PART_Label" Property="Visibility" Value="Visible" />
        <Setter TargetName="PART_Content" Property="Margin" Value="{DynamicResource {dxet:EmbeddedEditorLabelsThemeKey ResourceKey=ContentMargin}}" />
      </DataTrigger>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter TargetName="PART_Label" Property="Margin" Value="15,2,0,7" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
</ResourceDictionary>