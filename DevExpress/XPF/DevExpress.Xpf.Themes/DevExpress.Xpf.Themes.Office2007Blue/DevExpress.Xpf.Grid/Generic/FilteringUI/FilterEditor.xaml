<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys" xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxfui="http://schemas.devexpress.com/winfx/2008/xaml/core/filteringui" xmlns:dxfuit="http://schemas.devexpress.com/winfx/2008/xaml/core/filteringui/themekeys" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:dxfui_local="http://schemas.devexpress.com/winfx/2008/xaml/core/filteringui" xmlns:dxfui_local_native="http://schemas.devexpress.com/winfx/2008/xaml/core/filteringui/internal" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
  <!--#region Resources-->
  <dxmvvm:ObjectToObjectConverter x:Key="TopBottomValueTypeConverter">
    <dxmvvm:MapItem Source="Items" Target="{dxe:EditorStringId TopBottomValueTypeItems}" />
    <dxmvvm:MapItem Source="Percent" Target="{dxe:EditorStringId TopBottomValueTypePercent}" />
  </dxmvvm:ObjectToObjectConverter>
  <Style x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=AddChildSplitButtonPathStyle}" TargetType="{x:Type Path}">
    <Setter Property="Data" Value="F1 M 0,0 8,0 4,4 0,0 Z " />
    <Setter Property="Fill" Value="#7B7B7B" />
    <Setter Property="Height" Value="4" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="Margin" Value="0,1,0,0" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Stretch" Value="Fill" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="Width" Value="8" />
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Fill" Value="{DynamicResource ResourceKey={dxfuit:FilterEditorThemeKey ResourceKey=AddChildSplitButtonMouseOverFill}}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <sys:Double x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=IconButtonWidth}">18</sys:Double>
  <Thickness x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=EditorBorderThickness}">1</Thickness>
  <Thickness x:Key="filterEditorMargin">6,2,6,6</Thickness>
  <Thickness x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorItemMargin}">0,0,4,0</Thickness>
  <Thickness x:Key="filterEditorRowMargin">0,2</Thickness>
  <Thickness x:Key="filterEditorButtonMargin">0,0,0,-1</Thickness>
  <Style x:Key="filterEditorButtonStyle" TargetType="Button">
    <Setter Property="MaxWidth" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=IconButtonWidth}}" />
    <Setter Property="Margin" Value="{StaticResource filterEditorButtonMargin}" />
    <Setter Property="VerticalAlignment" Value="Center" />
  </Style>
  <Style x:Key="removeButtonStyle" BasedOn="{StaticResource filterEditorButtonStyle}" TargetType="Button">
    <Setter Property="ToolTipService.ToolTip">
      <Setter.Value>
        <ToolTip>
          <StackPanel Orientation="Vertical">
            <TextBlock Text="{dxe:EditorStringId FilterToolTipKeysRemove}" FontWeight="Bold" Margin="0,0,0,4" />
            <TextBlock Text="{dxe:EditorStringId FilterToolTipNodeRemove}" />
          </StackPanel>
        </ToolTip>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="addChildButtonStyle" BasedOn="{StaticResource filterEditorButtonStyle}" TargetType="Button">
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Visibility" Value="Collapsed" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <!--#endregion-->
  <!--#region OperationModelTemplateSelector-->
  <Style x:Key="menuOwner" TargetType="{x:Type FrameworkElement}">
    <Setter Property="Focusable" Value="True" />
    <Setter Property="dxb:BarManager.MenuShowMouseButton" Value="LeftButton" />
    <Setter Property="dxb:BarManager.DXContextMenuPlacement" Value="Bottom" />
  </Style>
  <dxfui_local_native:PaletteForegroundConverter x:Key="PaletteConverter" />
  <DataTemplate x:Key="OperandTypeContentTemplate">
    <dx:DXImage x:Name="PART_OperandType" Source="{Binding Image}" Width="10" Height="10" VerticalAlignment="Center" Margin="6,0,0,0" dx:WpfSvgPalette.Palette="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}, Converter={StaticResource PaletteConverter}}">
      <dx:DXImage.Style>
        <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=FrameworkElement}" TargetType="{x:Type FrameworkElement}" BasedOn="{StaticResource menuOwner}">
          <Setter Property="FocusVisualStyle" Value="{x:Null}" />
          <Setter Property="dxb:BarManager.DXContextMenu">
            <Setter.Value>
              <dxb:PopupMenu ItemLinksSource="{Binding Path=(dxfui_local_native:FilterElementHelper.ValueItem).OperandMenuItems, RelativeSource={RelativeSource Self}}">
                <dxb:PopupMenu.ItemTemplate>
                  <DataTemplate>
                    <dxb:BarButtonItem Glyph="{Binding Image}" Content="{Binding DisplayText}" GlyphSize="Custom" CustomGlyphSize="10,10" Command="{Binding Path=Command}" />
                  </DataTemplate>
                </dxb:PopupMenu.ItemTemplate>
              </dxb:PopupMenu>
            </Setter.Value>
          </Setter>
        </Style>
      </dx:DXImage.Style>
      <dxmvvm:Interaction.Behaviors>
        <dxfui_local:FilterEditorContextMenuBehavior />
      </dxmvvm:Interaction.Behaviors>
    </dx:DXImage>
  </DataTemplate>
  <Style x:Key="operandTypeStyle" TargetType="{x:Type ContentControl}">
    <Setter Property="DataContext" Value="{Binding Path=(dxfui_local_native:FilterElementHelper.ValueItem), RelativeSource={RelativeSource Self}}" />
    <Setter Property="Content" Value="{Binding SelectedOperandMenuItem}" />
    <Setter Property="Margin" Value="0,0,4,0" />
    <Setter Property="ContentTemplate" Value="{StaticResource OperandTypeContentTemplate}" />
  </Style>
  <dxfui_local_native:OperandMenuItemsVisibilityConverter x:Key="OperandMenuItemsVisibilityConverter" />
  <DataTemplate x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorCancelGlyph}">
    <Grid x:Name="Root" MinWidth="16">
      <Path Fill="{TemplateBinding TextElement.Foreground}" Data="F1 M 0,1 1,0 4,3 7,0 8,1 5,4 8,7 7,8 4,5 1,8 0,7 3,4 0,1 Z " Height="8" HorizontalAlignment="Center" SnapsToDevicePixels="True" Stretch="Fill" VerticalAlignment="Center" Width="8" />
    </Grid>
    <DataTemplate.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="MinWidth" TargetName="Root" Value="42" />
      </Trigger>
    </DataTemplate.Triggers>
  </DataTemplate>
  <Style x:Key="removeOperandButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Command" Value="{Binding RemoveCommand}" />
    <Setter Property="ClickMode" Value="Press" />
    <Setter Property="Foreground" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=OperatorSelectorForeground}}" />
    <Setter Property="Visibility" Value="{Binding AllowRemoving, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <ContentPresenter ContentTemplate="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorCancelGlyph}}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <DataTemplate x:Key="OperandEditorValueTemplate">
    <dxfui_local:InplaceEditorCell DataContext="{Binding Path=(dxfui_local_native:FilterElementHelper.ValueItem), RelativeSource={RelativeSource Self}}" FilterModel="{Binding Path=(dxfui_local_native:FilterElementHelper.FilterModel), RelativeSource={RelativeSource Self}}" Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditSettings="{Binding EditSettings}" dxfui_local:FilterEditorNavigation.Index="{Binding Index}" Margin="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorItemMargin}}">
      <dxfui_local:InplaceEditorCell.Template>
        <ControlTemplate TargetType="dxfui_local:InplaceEditorCell">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=ItemCornerRadius}}">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <ContentControl Style="{StaticResource operandTypeStyle}">
                <ContentControl.Visibility>
                  <MultiBinding Converter="{StaticResource OperandMenuItemsVisibilityConverter}">
                    <Binding Path="OperandMenuItems" />
                    <Binding Path="SelectedOperandMenuItem" />
                  </MultiBinding>
                </ContentControl.Visibility>
              </ContentControl>
              <ContentPresenter Grid.Column="1" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
              <Button x:Name="RemoveVariadicItemButton" Grid.Column="2" DataContext="{Binding Path=(dxfui_local_native:FilterElementHelper.ValueItem), RelativeSource={RelativeSource Self}}" Visibility="{DXBinding 'AllowRemoving and !(@p.IsActive) ? $Visibility.Visible : $Visibility.Collapsed'}" Style="{StaticResource removeOperandButtonStyle}" />
            </Grid>
          </Border>
        </ControlTemplate>
      </dxfui_local:InplaceEditorCell.Template>
    </dxfui_local:InplaceEditorCell>
  </DataTemplate>
  <DataTemplate x:Key="OperandEditorPropertyTemplate">
    <ContentControl Style="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorItemStyle}}" Background="{DynamicResource ResourceKey={dxfuit:FilterEditorThemeKey ResourceKey=PropertySelectorBackground}}" Margin="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorItemMargin}}">
      <StackPanel Orientation="Horizontal" DataContext="{Binding Path=(dxfui_local_native:FilterElementHelper.ValueItem), RelativeSource={RelativeSource Self}}">
        <ContentControl Style="{StaticResource operandTypeStyle}" TextElement.Foreground="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=PropertySelectorForeground}}" />
        <dxfui_local:FilterEditorPropertySelector x:Name="RightPropertySelector" EditValue="{Binding SelectedProperty}" ItemsSource="{Binding Properties}" SelectedItem="{Binding SelectedProperty}" NullText="{dxe:EditorStringId FilterEmptyPropertyText}" IsEnabled="{DXBinding Expr='Properties.Count gt 0'}" dxfui_local:FilterEditorNavigation.Index="0" Style="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=PropertySelectorStyle}}" />
        <Button x:Name="RemoveVariadicItemButton" Style="{StaticResource removeOperandButtonStyle}" />
      </StackPanel>
    </ContentControl>
  </DataTemplate>
  <Style x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=OperandEditorParameterStyle}" TargetType="{x:Type FrameworkElement}" BasedOn="{StaticResource menuOwner}">
    <Setter Property="dxb:BarManager.DXContextMenu">
      <Setter.Value>
        <dxmvvm:ValueFactory>
          <DataTemplate>
            <dxb:PopupMenu ItemLinksSource="{Binding Path=(dxfui_local_native:FilterElementHelper.ValueItem).Parameters, RelativeSource={RelativeSource Self}}">
              <dxb:PopupMenu.ItemTemplate>
                <DataTemplate>
                  <dxb:BarButtonItem Content="{Binding}" Command="{Binding Path=(dxfui_local_native:FilterElementHelper.ValueItem).SelectParameterCommand, RelativeSource={RelativeSource Self}}" CommandParameter="{Binding}" />
                </DataTemplate>
              </dxb:PopupMenu.ItemTemplate>
            </dxb:PopupMenu>
          </DataTemplate>
        </dxmvvm:ValueFactory>
      </Setter.Value>
    </Setter>
  </Style>
  <DataTemplate x:Key="OperandEditorParameterTemplate">
    <ContentControl Style="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorItemStyle}}" Background="{DynamicResource ResourceKey={dxfuit:FilterEditorThemeKey ResourceKey=PropertySelectorBackground}}" Margin="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorItemMargin}}">
      <StackPanel Orientation="Horizontal" DataContext="{Binding Path=(dxfui_local_native:FilterElementHelper.ValueItem), RelativeSource={RelativeSource Self}}">
        <ContentControl Style="{StaticResource operandTypeStyle}" TextElement.Foreground="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=PropertySelectorForeground}}" />
        <TextBlock x:Name="PART_Parameter" Text="{DXBinding 'SelectedParameter ?? $dxe:EditorLocalizer.GetString($dxe:EditorStringId.FilterEmptyParameterText)'}" Margin="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorItemMargin}}" VerticalAlignment="Center" Foreground="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=PropertySelectorForeground}}" Style="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=OperandEditorParameterStyle}}" />
        <Button x:Name="RemoveVariadicItemButton" Style="{StaticResource removeOperandButtonStyle}" />
      </StackPanel>
    </ContentControl>
  </DataTemplate>
  <Style x:Key="OperandEditorDateTimeFunctionStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource menuOwner}">
    <Setter Property="dxb:BarManager.DXContextMenu">
      <Setter.Value>
        <dxmvvm:ValueFactory>
          <DataTemplate>
            <dxb:PopupMenu ItemLinksSource="{Binding Path=(dxfui_local_native:FilterElementHelper.ValueItem).DateTimeFunctions, RelativeSource={RelativeSource Self}}">
              <dxb:PopupMenu.ItemTemplate>
                <DataTemplate>
                  <dxb:BarButtonItem Content="{Binding Converter={dxfui_local_native:DateTimeFunctionTypeTextConverter}}" Command="{Binding Path=(dxfui_local_native:FilterElementHelper.ValueItem).SelectDateTimeFunctionCommand, RelativeSource={RelativeSource Self}}" CommandParameter="{Binding}" />
                </DataTemplate>
              </dxb:PopupMenu.ItemTemplate>
            </dxb:PopupMenu>
          </DataTemplate>
        </dxmvvm:ValueFactory>
      </Setter.Value>
    </Setter>
  </Style>
  <DataTemplate x:Key="OperandEditorLocalDateTimeFunctionTemplate">
    <ContentControl Style="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorItemStyle}}" Background="{DynamicResource ResourceKey={dxfuit:FilterEditorThemeKey ResourceKey=PropertySelectorBackground}}" Margin="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorItemMargin}}">
      <StackPanel Orientation="Horizontal" DataContext="{Binding Path=(dxfui_local_native:FilterElementHelper.ValueItem), RelativeSource={RelativeSource Self}}">
        <ContentControl TextElement.Foreground="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=PropertySelectorForeground}}" Style="{StaticResource operandTypeStyle}" />
        <TextBlock x:Name="PART_LocalDateTimeFunction" Text="{Binding SelectedDateTimeFunction, Converter={dxfui_local_native:DateTimeFunctionTypeTextConverter}}" Margin="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorItemMargin}}" VerticalAlignment="Center" Foreground="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=PropertySelectorForeground}}" Style="{StaticResource OperandEditorDateTimeFunctionStyle}" />
        <Button x:Name="RemoveVariadicItemButton" Style="{StaticResource removeOperandButtonStyle}" />
      </StackPanel>
    </ContentControl>
  </DataTemplate>
  <dxfui_local:OperandEditorTemplateSelector x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=OperandEditorTemplateSelector}" ValueTemplate="{StaticResource OperandEditorValueTemplate}" PropertyTemplate="{StaticResource OperandEditorPropertyTemplate}" ParameterTemplate="{StaticResource OperandEditorParameterTemplate}" LocalDateTimeFunctionTemplate="{StaticResource OperandEditorLocalDateTimeFunctionTemplate}" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.FilteringUI.FilterModelValueItemContentPresenter}" TargetType="{x:Type dxfui_local:FilterModelValueItemContentPresenter}">
    <Setter Property="dxfui_local_native:FilterElementHelper.ValueItem" Value="{Binding}" />
    <Setter Property="ContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <ContentControl Content="{Binding Path=SelectedOperandMenuItem}" ContentTemplateSelector="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=OperandEditorTemplateSelector}}" />
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <DataTemplate x:Key="FilterEditorConstantTemplate" />
  <DataTemplate x:Key="FilterEditorBinaryTemplate">
    <dxfui_local:FilterModelValueItemContentPresenter Content="{Binding ValueItem}" />
  </DataTemplate>
  <DataTemplate x:Key="FilterEditorTernaryTemplate">
    <StackPanel Orientation="Horizontal">
      <dxfui_local:FilterModelValueItemContentPresenter Content="{Binding LeftValueItem}" dxfui_local:FilterEditorNavigation.Index="0" />
      <TextBlock Text="{dxe:EditorStringId FilterClauseBetweenAnd}" VerticalAlignment="Center" Margin="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorItemMargin}}" />
      <dxfui_local:FilterModelValueItemContentPresenter Content="{Binding RightValueItem}" dxfui_local:FilterEditorNavigation.Index="1" />
    </StackPanel>
  </DataTemplate>
  <DataTemplate x:Key="FilterEditorVariadicItemTemplate">
    <dxfui_local:FilterModelValueItemContentPresenter Content="{Binding}" dxfui_local:FilterEditorNavigation.Index="{Binding Index}" />
  </DataTemplate>
  <DataTemplate x:Key="FilterEditorVariadicTemplate">
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>
      <ItemsControl x:Name="filterItems" ItemsSource="{Binding Items}" ItemTemplate="{StaticResource FilterEditorVariadicItemTemplate}">
        <ItemsControl.ItemsPanel>
          <ItemsPanelTemplate>
            <VirtualizingStackPanel ClipToBounds="True" Orientation="Horizontal" MaxWidth="3000" IsVirtualizing="True" VirtualizationMode="Recycling">
              <dxmvvm:Interaction.Behaviors>
                <dxfui_local_native:AttachParentScrollViewerBehavior />
              </dxmvvm:Interaction.Behaviors>
            </VirtualizingStackPanel>
          </ItemsPanelTemplate>
        </ItemsControl.ItemsPanel>
        <ItemsControl.Template>
          <ControlTemplate TargetType="ItemsControl">
            <ItemsPresenter />
          </ControlTemplate>
        </ItemsControl.Template>
        <dxmvvm:Interaction.Behaviors>
          <dxfui_local:FilterEditorVariadicBehavior AddCommand="{Binding AddCommand}" />
        </dxmvvm:Interaction.Behaviors>
      </ItemsControl>
      <Rectangle HorizontalAlignment="Right" IsHitTestVisible="False" Focusable="False" VerticalAlignment="Stretch" Width="40" Visibility="{Binding ActualWidth, ElementName=filterItems, Converter={dxfui_local_native:ValueEqualsParameterToVisibilityConverter}, ConverterParameter=3000}">
        <Rectangle.Fill>
          <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
            <GradientStop Offset="0" Color="Transparent" />
            <GradientStop Offset="1" Color="White" />
          </LinearGradientBrush>
        </Rectangle.Fill>
      </Rectangle>
      <Button Grid.Column="1" x:Name="AddButton" Command="{Binding AddCommand}" Style="{StaticResource addChildButtonStyle}" Template="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=NewOperandButtonControlTemplate}}">
        <ToolTipService.ToolTip>
          <ToolTip>
            <StackPanel Orientation="Vertical">
              <TextBlock Text="{dxe:EditorStringId FilterToolTipKeysAdd}" FontWeight="Bold" Margin="0,0,0,4" />
              <TextBlock Text="{dxe:EditorStringId FilterToolTipElementAdd}" />
            </StackPanel>
          </ToolTip>
        </ToolTipService.ToolTip>
      </Button>
    </Grid>
  </DataTemplate>
  <DataTemplate x:Key="FilterEditorPredefinedFormatConditionTemplate">
    <DataTemplate.Resources>
      <DataTemplate x:Key="valueEditSettingsItemsTemplate">
        <dxe:SpinEditSettings MaskType="Numeric" MaskUseAsDisplayFormat="True" Mask="d" MinValue="1" AllowRoundOutOfRangeValue="True" MaxValue="2147483647" />
        <!--{x:Static sys:Int32.MaxValue}-->
      </DataTemplate>
      <DataTemplate x:Key="valueEditSettingsPercentTemplate">
        <dxe:SpinEditSettings MaskType="Numeric" MaskUseAsDisplayFormat="True" MinValue="0" MaxValue="100" AllowRoundOutOfRangeValue="True" />
      </DataTemplate>
      <DataTemplate x:Key="valueTypeEditSettingsTemplate">
        <dxe:ComboBoxEditSettings ApplyItemTemplateToSelectedItem="True" IsTextEditable="False">
          <dxe:ComboBoxEditSettings.ItemTemplate>
            <DataTemplate>
              <TextBlock Text="{Binding Converter={StaticResource TopBottomValueTypeConverter}}" />
            </DataTemplate>
          </dxe:ComboBoxEditSettings.ItemTemplate>
          <dxe:ComboBoxEditSettings.ItemsSource>
            <x:Array Type="{x:Type dxfui:TopBottomValueType}">
              <dxfui_local:TopBottomValueType>Items</dxfui_local:TopBottomValueType>
              <dxfui_local:TopBottomValueType>Percent</dxfui_local:TopBottomValueType>
            </x:Array>
          </dxe:ComboBoxEditSettings.ItemsSource>
        </dxe:ComboBoxEditSettings>
      </DataTemplate>
      <dxfui_local_native:FormatConditionValueEditSettingsConverter x:Key="valueEditSettingsConverter" EditSettingsItemTemplate="{StaticResource valueEditSettingsItemsTemplate}" EditSettingsPercentTemplate="{StaticResource valueEditSettingsPercentTemplate}" />
      <dxfui_local_native:FormatConditionValueTypeEditSettingsConverter x:Key="valueTypeEditSettingsConverter" EditSettingsTemplate="{StaticResource valueTypeEditSettingsTemplate}" />
      <Style x:Key="editorCellStyle" TargetType="{x:Type dxfui_local:InplaceEditorCell}">
        <Setter Property="FilterModel" Value="{Binding Path=(dxfui_local_native:FilterElementHelper.FilterModel), RelativeSource={RelativeSource Self}}" />
        <Setter Property="Margin" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorItemMargin}}" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="dxfui_local:InplaceEditorCell">
              <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=ItemCornerRadius}}">
                <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
              </Border>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
    </DataTemplate.Resources>
    <StackPanel Orientation="Horizontal">
      <dxfui_local:InplaceEditorCell x:Name="PART_Value" Value="{Binding Value, Mode=TwoWay, Converter={dxmvvm:TypeCastConverter}}" dxfui_local:FilterEditorNavigation.Index="0" EditSettings="{Binding ValueType, Converter={StaticResource valueEditSettingsConverter}}" Style="{StaticResource editorCellStyle}" />
      <dxfui_local:InplaceEditorCell x:Name="PART_ValueType" Value="{Binding ValueType, Mode=TwoWay}" dxfui_local:FilterEditorNavigation.Index="1" EditSettings="{Binding Converter={StaticResource valueTypeEditSettingsConverter}}" Style="{StaticResource editorCellStyle}" />
    </StackPanel>
  </DataTemplate>
  <dxfui_local:OperationModelTemplateSelector x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=OperatorTemplateSelector}" ConstantTemplate="{StaticResource FilterEditorConstantTemplate}" BinaryTemplate="{StaticResource FilterEditorBinaryTemplate}" TernaryTemplate="{StaticResource FilterEditorTernaryTemplate}" VariadicTemplate="{StaticResource FilterEditorVariadicTemplate}" PredefinedFormatConditionTemplate="{StaticResource FilterEditorPredefinedFormatConditionTemplate}" />
  <!--#endregion-->
  <!--#region FilterEditorPropertySelector-->
  <ControlTemplate x:Key="propertySelectorPopupContentTemplate">
    <Grid>
      <Grid.Resources>
        <ControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=RowTemplate, IsThemeIndependent=True}" TargetType="dxg:RowControl">
          <Grid Margin="1,0,1,0">
            <Border x:Name="Background" Background="{TemplateBinding Background}" />
            <Grid x:Name="PART_LayoutPanel" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="FadeSelection" Value="True">
              <Setter Property="Opacity" Value="0.5" TargetName="Background" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Grid.Resources>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="*" />
      </Grid.RowDefinitions>
      <Border Background="{DynamicResource ResourceKey={dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=FilterValueContainerTopAreaBackground}}" BorderBrush="{DynamicResource ResourceKey={dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=FilterValueContainerTopAreaBorderColor}}" Visibility="{Binding ShowSearchPanel, Converter={dxmvvm:BooleanToVisibilityConverter}}" BorderThickness="0,0,0,1">
        <dxg:GridSearchControl View="{Binding ElementName=view}" Margin="4" />
      </Border>
      <dxg:GridControl x:Name="PART_GridControl" Grid.Row="1" MinHeight="50">
        <dxg:GridControl.Columns>
          <dxg:GridColumn FieldName="ContentString">
            <dxg:GridColumn.CellTemplate>
              <DataTemplate>
                <ContentPresenter Content="{Binding RowData.Row.Content}" ContentTemplateSelector="{Binding DataContext.RowData.Row.CaptionTemplateSelector, RelativeSource={RelativeSource Mode=TemplatedParent}}" VerticalAlignment="Center" Margin="3" />
              </DataTemplate>
            </dxg:GridColumn.CellTemplate>
          </dxg:GridColumn>
        </dxg:GridControl.Columns>
        <dxg:GridControl.View>
          <dxg:TreeListView x:Name="view" ShowColumnHeaders="False" AutoWidth="True" ShowIndicator="False" ShowHorizontalLines="False" FilterMode="Extended" ShowVerticalLines="False" ShowSearchPanelMode="Never" VerticalScrollbarVisibility="Auto" TreeLineStyle="Solid" ShowExpandButtons="False" SearchDelay="0" ParentFieldName="ParentID" KeyFieldName="ID" AutoExpandAllNodes="True" ShowRootIndent="False" ShowEmptyText="True" RowMinHeight="22">
            <dxg:TreeListView.Style>
              <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.TreeListView}" TargetType="{x:Type dxg:TreeListView}">
                <Style.Resources>
                  <Style x:Key="{dxgt:TableViewThemeKey ResourceKey=NoRecordsControlStyle}" TargetType="{x:Type dxg:NoRecordsControl}">
                    <Setter Property="NoRecordsFoundText" Value="{DXBinding '$dxe:EditorLocalizer.GetString($dxe:EditorStringId.FilterNoPropertiesFoundText)'}" />
                  </Style>
                </Style.Resources>
                <Style.Triggers>
                  <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                    <Setter Property="RowMinHeight" Value="42" />
                  </Trigger>
                </Style.Triggers>
              </Style>
            </dxg:TreeListView.Style>
          </dxg:TreeListView>
        </dxg:GridControl.View>
      </dxg:GridControl>
    </Grid>
  </ControlTemplate>
  <Style x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=PropertySelectorStyle}" TargetType="dxfui_local:FilterEditorPropertySelector">
    <Setter Property="AutoPopulateColumns" Value="False" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="PopupContentTemplate" Value="{StaticResource propertySelectorPopupContentTemplate}" />
    <Setter Property="FilterCondition" Value="Contains" />
    <Setter Property="Foreground" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=PropertySelectorForeground}}" />
    <Setter Property="IsTextEditable" Value="False" />
    <Setter Property="ShowBorder" Value="False" />
    <Setter Property="ShowEditorButtons" Value="False" />
    <Setter Property="PopupMinHeight" Value="{x:Static sys:Double.NaN}" />
    <Setter Property="PopupMaxHeight" Value="300" />
    <Setter Property="ShowSizeGrip" Value="False" />
    <Setter Property="IncrementalSearch" Value="False" />
    <Setter Property="AllowSpinOnMouseWheel" Value="False" />
    <Setter Property="AllowUpdateTwoWayBoundPropertiesOnSynchronization" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxfui_local:FilterEditorPropertySelector}">
          <Grid>
            <TextBlock Text="{TemplateBinding NullText}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="{Binding EditValue, Converter={dx:NullableToVisibilityConverter Invert=True}, RelativeSource={RelativeSource TemplatedParent}}" />
            <ContentPresenter Content="{Binding Path=EditValue.Content, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" ContentTemplateSelector="{Binding Path=EditValue.SelectedCaptionTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=EditValue, Converter={dx:NullableToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
            <Grid.Style>
              <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=FrameworkElement}" TargetType="{x:Type FrameworkElement}">
                <Style.Setters>
                  <Setter Property="Margin" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=PropertySelectorContentMargin}}" />
                </Style.Setters>
                <Style.Triggers>
                  <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                    <Setter Property="Margin" Value="13,14,13,13" />
                  </Trigger>
                </Style.Triggers>
              </Style>
            </Grid.Style>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!--#endregion-->
  <!--#region Buttons-->
  <ControlTemplate x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=AddButtonControlTemplate}" TargetType="Button">
    <dx:DXImage x:Name="image" Source="{dxfui_local:FilterImageSource Name=Add_Inactive}" />
    <ControlTemplate.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter TargetName="image" Property="Source" Value="{dxfui_local:FilterImageSource Name=Add_Active}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=NewOperandButtonControlTemplate}" TargetType="Button">
    <Border MinWidth="16" Background="Transparent">
      <Path>
        <Path.Style>
          <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=Path}" TargetType="{x:Type Path}">
            <Setter Property="Data" Value="F1 M 0,3 3,3 3,0 5,0 5,3 8,3 8,5 5,5 5,8 3,8 3,5 0,5 0,3 Z " />
            <Setter Property="Fill" Value="#7B7B7B" />
            <Setter Property="Height" Value="8" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Stretch" Value="Fill" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Width" Value="8" />
            <Style.Triggers>
              <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="0.62" />
              </Trigger>
            </Style.Triggers>
          </Style>
        </Path.Style>
      </Path>
    </Border>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=RemoveButtonControlTemplate}" TargetType="Button">
    <dx:DXImage x:Name="image" Source="{dxfui_local:FilterImageSource Name=Close_Inactive}" />
    <ControlTemplate.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter TargetName="image" Property="Source" Value="{dxfui_local:FilterImageSource Name=Close_Active}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=EditButtonControlTemplate}" TargetType="Button">
    <dx:DXImage x:Name="image" Source="{dxfui_local:FilterImageSource Name=Edit_Inactive}" />
    <ControlTemplate.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter TargetName="image" Property="Source" Value="{dxfui_local:FilterImageSource Name=Edit_Active}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <!--#endregion-->
  <!--#region Row Controls-->
  <DataTemplate x:Key="MenuItemTemplate">
    <dxb:BarButtonItem Content="{Binding DisplayName}" Glyph="{Binding Icon}" Command="{Binding Command}" />
  </DataTemplate>
  <DataTemplate x:Key="FormatConditionMenuItemTemplate">
    <dxb:BarButtonItem Content="{Binding}" Command="{Binding Command}" GlyphSize="Custom" CustomGlyphSize="20,20">
      <dxb:BarButtonItem.GlyphTemplate>
        <DataTemplate>
          <dxg:FormatPreviewControl Content="{Binding FormatCondition.Format}" PreviewString="Aa">
            <dxg:FormatPreviewControl.SimpleFormatTemplate>
              <DataTemplate>
                <TextBlock Text="{Binding PreviewString, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxg:FormatPreviewControl}}}" TextDecorations="{Binding TextDecorations}" />
              </DataTemplate>
            </dxg:FormatPreviewControl.SimpleFormatTemplate>
          </dxg:FormatPreviewControl>
        </DataTemplate>
      </dxb:BarButtonItem.GlyphTemplate>
      <dxb:BarButtonItem.ContentTemplate>
        <DataTemplate>
          <StackPanel Orientation="Horizontal">
            <dxg:FormatPreviewControl DataContext="{Binding FormatCondition}" Content="{Binding Format}" Margin="0,0,2,0" Background="Transparent" Visibility="{Binding Format.Icon, Converter={dx:NullableToVisibilityConverter}}">
              <dxg:FormatPreviewControl.Template>
                <ControlTemplate TargetType="{x:Type dxg:FormatPreviewControl}">
                  <dx:DXImage Source="{Binding Format.Icon, RelativeSource={RelativeSource TemplatedParent}}" Stretch="None" HorizontalAlignment="Center" />
                </ControlTemplate>
              </dxg:FormatPreviewControl.Template>
            </dxg:FormatPreviewControl>
            <TextBlock Text="{Binding DisplayName}" VerticalAlignment="Center" />
          </StackPanel>
        </DataTemplate>
      </dxb:BarButtonItem.ContentTemplate>
    </dxb:BarButtonItem>
  </DataTemplate>
  <ControlTemplate x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=RowControlTemplate}" TargetType="ContentControl">
    <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
  </ControlTemplate>
  <dxfui_local:NodeModelTemplateSelector x:Key="FilterEditorNodeTemplateSelector">
    <dxfui_local:NodeModelTemplateSelector.LeafTemplate>
      <DataTemplate>
        <dxfui_local:FilterEditorLeafControl Content="{Binding}" HorizontalContentAlignment="Stretch" />
      </DataTemplate>
    </dxfui_local:NodeModelTemplateSelector.LeafTemplate>
    <dxfui_local:NodeModelTemplateSelector.GroupTemplate>
      <DataTemplate>
        <dxfui_local:FilterEditorGroupControl Content="{Binding}" HorizontalContentAlignment="Stretch" />
      </DataTemplate>
    </dxfui_local:NodeModelTemplateSelector.GroupTemplate>
    <dxfui_local:NodeModelTemplateSelector.CustomExpressionTemplate>
      <DataTemplate>
        <dxfui_local:FilterEditorCustomExpressionControl Content="{Binding}" HorizontalContentAlignment="Stretch" />
      </DataTemplate>
    </dxfui_local:NodeModelTemplateSelector.CustomExpressionTemplate>
  </dxfui_local:NodeModelTemplateSelector>
  <Style x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorItemStyle}" TargetType="ContentControl">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ContentControl">
          <Grid>
            <Border x:Name="BackgroundBorder" Background="{TemplateBinding Background}" TextBlock.Foreground="{TemplateBinding Foreground}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=ItemCornerRadius}}" BorderThickness="{TemplateBinding BorderThickness}">
              <ContentPresenter x:Name="Content" Content="{TemplateBinding Content}" />
            </Border>
            <Border x:Name="BottomBorder" CornerRadius="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=ItemCornerRadius}}" BorderThickness="0,0,0,2" IsHitTestVisible="False" BorderBrush="{TemplateBinding Background}" Visibility="Collapsed" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Trigger.Setters>
                <Setter Property="Opacity" Value="0.62" TargetName="BackgroundBorder" />
              </Trigger.Setters>
            </Trigger>
            <DataTrigger Binding="{Binding Path=Content.(dxfui_local:FilterEditorNavigation.IsFocused), RelativeSource={RelativeSource Mode=Self}}" Value="True">
              <DataTrigger.Setters>
                <Setter Property="Opacity" Value="0.62" TargetName="BackgroundBorder" />
                <Setter Property="Visibility" Value="Visible" TargetName="BottomBorder" />
              </DataTrigger.Setters>
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <DataTemplate x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=LeafTemplate}">
    <Grid Background="Transparent">
      <Grid.RowDefinitions>
        <RowDefinition />
        <RowDefinition />
      </Grid.RowDefinitions>
      <StackPanel Grid.Row="0" Orientation="Horizontal" dxfui_local:FilterEditorNavigation.Node="{Binding}" Margin="{StaticResource filterEditorRowMargin}" MinHeight="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=RowMinHeight}}">
        <ContentControl x:Name="PART_PropertySelector" Style="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorItemStyle}}" Background="{DynamicResource ResourceKey={dxfuit:FilterEditorThemeKey ResourceKey=PropertySelectorBackground}}" Margin="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorItemMargin}}">
          <dxfui_local:FilterEditorPropertySelector x:Name="PropertySelector" EditValue="{Binding SelectedProperty}" ItemsSource="{Binding Properties}" SelectedItem="{Binding SelectedProperty}" IsEnabled="{DXBinding Expr='Properties.Count gt 0'}" dxfui_local:FilterEditorNavigation.Index="0" Style="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=PropertySelectorStyle}}" />
        </ContentControl>
        <ContentControl x:Name="PART_OperatorSelector" Style="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorItemStyle}}" Background="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=OperatorSelectorBackground}}" Foreground="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=OperatorSelectorForeground}}" Margin="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorItemMargin}}">
          <StackPanel x:Name="OperatorSelector" Orientation="Horizontal" dxfui_local:FilterEditorNavigation.Index="1">
            <StackPanel.Style>
              <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=FrameworkElement}" TargetType="{x:Type FrameworkElement}" BasedOn="{StaticResource menuOwner}">
                <Style.Resources>
                  <DataTemplate x:Key="operatorMenuSubItemTemplate">
                    <dxb:BarSplitButtonItem Content="{Binding DisplayName}" ActAsDropDown="True">
                      <dxb:PopupMenu ItemLinksSource="{Binding Children}" ItemTemplateSelector="{DynamicResource operatorMenuTemplateSelector}" />
                    </dxb:BarSplitButtonItem>
                  </DataTemplate>
                  <dxfui_local:MenuItemTemplateSelector x:Key="operatorMenuTemplateSelector" Button="{StaticResource MenuItemTemplate}" FormatConditionButton="{StaticResource FormatConditionMenuItemTemplate}" Group="{StaticResource operatorMenuSubItemTemplate}" />
                </Style.Resources>
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Style.Triggers>
                  <Trigger Property="dxfui_local:FilterEditorNavigation.IsFocused" Value="True">
                    <Setter Property="dxb:BarManager.DXContextMenu">
                      <Setter.Value>
                        <dxb:PopupMenu ItemLinksSource="{Binding MultiModel.ItemsMenu}" ItemTemplateSelector="{StaticResource operatorMenuTemplateSelector}" />
                      </Setter.Value>
                    </Setter>
                  </Trigger>
                </Style.Triggers>
              </Style>
            </StackPanel.Style>
            <dxmvvm:Interaction.Behaviors>
              <dxfui_local:FilterEditorContextMenuBehavior />
            </dxmvvm:Interaction.Behaviors>
            <Grid DataContext="{Binding MultiModel.SelectedItem.FormatCondition}" Visibility="{Binding Converter={dx:NullableToVisibilityConverter}}">
              <dxg:FormatPreviewControl x:Name="FormatPreviewControl" PreviewString="Aa" Content="{Binding Format}" BorderBrush="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=OperatorSelectorBackground}}" CornerRadius="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FormatConditionCornerRadius}}" />
            </Grid>
            <dxe:TextEdit EditValue="{Binding MultiModel.SelectedItem.DisplayName, Mode=OneWay}" EditMode="InplaceInactive" />
          </StackPanel>
        </ContentControl>
        <ContentControl Style="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorItemStyle}}" Background="{DynamicResource ResourceKey={dxfuit:FilterEditorThemeKey ResourceKey=PropertySelectorBackground}}" Margin="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorItemMargin}}" x:Name="PART_AggregatePropertySelector" Visibility="Collapsed">
          <dxfui_local:FilterEditorPropertySelector x:Name="AggregatePropertySelector" EditValue="{Binding AggregateSelectedProperty}" ItemsSource="{Binding SelectedProperty.Properties}" SelectedItem="{Binding AggregateSelectedProperty}" IsEnabled="{DXBinding Expr='SelectedProperty.Properties.Count gt 0'}" dxfui_local:FilterEditorNavigation.Index="2" Style="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=PropertySelectorStyle}}" />
        </ContentControl>
        <ContentControl Style="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorItemStyle}}" Background="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=OperatorSelectorBackground}}" Foreground="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=OperatorSelectorForeground}}" Margin="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorItemMargin}}" x:Name="PART_AggregateOperatorSelector" Visibility="Collapsed">
          <StackPanel x:Name="AggregateOperatorSelector" Orientation="Horizontal" dxfui_local:FilterEditorNavigation.Index="3">
            <StackPanel.Style>
              <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=FrameworkElement}" TargetType="{x:Type FrameworkElement}" BasedOn="{StaticResource menuOwner}">
                <Style.Resources>
                  <DataTemplate x:Key="operatorMenuSubItemTemplate">
                    <dxb:BarSplitButtonItem Content="{Binding DisplayName}" ActAsDropDown="True">
                      <dxb:PopupMenu ItemLinksSource="{Binding Children}" ItemTemplateSelector="{DynamicResource operatorMenuTemplateSelector}" />
                    </dxb:BarSplitButtonItem>
                  </DataTemplate>
                  <dxfui_local:MenuItemTemplateSelector x:Key="operatorMenuTemplateSelector" Button="{StaticResource MenuItemTemplate}" FormatConditionButton="{StaticResource FormatConditionMenuItemTemplate}" Group="{StaticResource operatorMenuSubItemTemplate}" />
                </Style.Resources>
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Style.Triggers>
                  <Trigger Property="dxfui_local:FilterEditorNavigation.IsFocused" Value="True">
                    <Setter Property="dxb:BarManager.DXContextMenu">
                      <Setter.Value>
                        <dxb:PopupMenu ItemLinksSource="{Binding MultiModel.SubItemsMultiModel.ItemsMenu}" ItemTemplateSelector="{StaticResource operatorMenuTemplateSelector}" />
                      </Setter.Value>
                    </Setter>
                  </Trigger>
                </Style.Triggers>
              </Style>
            </StackPanel.Style>
            <dxmvvm:Interaction.Behaviors>
              <dxfui_local:FilterEditorContextMenuBehavior />
            </dxmvvm:Interaction.Behaviors>
            <Grid DataContext="{Binding MultiModel.SubItemsMultiModel.SelectedItem.FormatCondition}" Visibility="{Binding Converter={dx:NullableToVisibilityConverter}}">
              <dxg:FormatPreviewControl x:Name="AggregateFormatPreviewControl" PreviewString="Aa" Content="{Binding Format}" BorderBrush="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=OperatorSelectorBackground}}" CornerRadius="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FormatConditionCornerRadius}}" />
            </Grid>
            <dxe:TextEdit EditValue="{Binding MultiModel.SubItemsMultiModel.SelectedItem.DisplayName, Mode=OneWay}" EditMode="InplaceInactive" />
          </StackPanel>
        </ContentControl>
        <ContentPresenter Content="{Binding MultiModel.SubItemsMultiModel.Model}" x:Name="PART_AggregateValuePresenter" Visibility="Collapsed" dxfui_local_native:FilterElementHelper.FilterModel="{Binding}" ContentTemplateSelector="{Binding DataContext.MultiModel.SubItemsMultiModel.ModelTemplateSelector, RelativeSource={RelativeSource Mode=TemplatedParent}}" dxfui_local:FilterEditorNavigation.Index="4" VerticalAlignment="Stretch" />
        <ContentPresenter Content="{Binding MultiModel.Model}" x:Name="PART_ValuePresenter" dxfui_local_native:FilterElementHelper.FilterModel="{Binding}" ContentTemplateSelector="{Binding DataContext.MultiModel.ModelTemplateSelector, RelativeSource={RelativeSource Mode=TemplatedParent}}" dxfui_local:FilterEditorNavigation.Index="5" VerticalAlignment="Stretch" />
        <Button x:Name="RemoveButton" Command="{Binding RemoveCommand}" Style="{StaticResource removeButtonStyle}" Template="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=RemoveButtonControlTemplate}}" Margin="4,0,0,0" MinWidth="18" Visibility="Hidden" />
      </StackPanel>
      <dxfui_local:FilterEditorGroupControl x:Name="PART_AggregateGroup" Grid.Row="1" Content="{Binding AggregateGroup}" Margin="24,0,0,0" MinHeight="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=RowMinHeight}}" Visibility="Collapsed" />
    </Grid>
    <DataTemplate.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
          <Condition Property="IsEnabled" SourceName="RemoveButton" Value="True" />
        </MultiTrigger.Conditions>
        <MultiTrigger.Setters>
          <Setter TargetName="RemoveButton" Property="Visibility" Value="Visible" />
        </MultiTrigger.Setters>
      </MultiTrigger>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Padding" Value="12" TargetName="FormatPreviewControl" />
      </Trigger>
      <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
        <Setter Property="Padding" Value="12" TargetName="FormatPreviewControl" />
      </Trigger>
      <DataTrigger Binding="{Binding IsCollectionProperty}" Value="True">
        <Setter Property="Visibility" Value="Visible" TargetName="PART_AggregatePropertySelector" />
        <Setter Property="Visibility" Value="Visible" TargetName="PART_AggregateOperatorSelector" />
        <Setter Property="Visibility" Value="Visible" TargetName="PART_AggregateValuePresenter" />
        <Setter Property="Visibility" Value="Collapsed" TargetName="PART_ValuePresenter" />
      </DataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding IsCollectionProperty}" Value="True" />
          <Condition Binding="{Binding ShowConditionGroupProperty}" Value="True" />
        </MultiDataTrigger.Conditions>
        <Setter Property="Visibility" Value="Visible" TargetName="PART_AggregateGroup" />
      </MultiDataTrigger>
      <DataTrigger Binding="{Binding MultiModel.SelectedItem.DisplayName, Mode=OneWay}" Value="Exists">
        <Setter Property="Visibility" Value="Collapsed" TargetName="PART_AggregatePropertySelector" />
        <Setter Property="Visibility" Value="Collapsed" TargetName="PART_AggregateOperatorSelector" />
        <Setter Property="Visibility" Value="Collapsed" TargetName="PART_AggregateValuePresenter" />
        <Setter Property="Visibility" Value="Collapsed" TargetName="PART_ValuePresenter" />
      </DataTrigger>
      <DataTrigger Binding="{Binding MultiModel.SelectedItem.DisplayName, Mode=OneWay}" Value="Single">
        <Setter Property="Visibility" Value="Collapsed" TargetName="PART_AggregatePropertySelector" />
        <Setter Property="Visibility" Value="Collapsed" TargetName="PART_AggregateOperatorSelector" />
        <Setter Property="Visibility" Value="Collapsed" TargetName="PART_AggregateValuePresenter" />
        <Setter Property="Visibility" Value="Collapsed" TargetName="PART_ValuePresenter" />
      </DataTrigger>
      <DataTrigger Binding="{Binding MultiModel.SelectedItem.DisplayName, Mode=OneWay}" Value="Count">
        <Setter Property="Visibility" Value="Collapsed" TargetName="PART_AggregatePropertySelector" />
      </DataTrigger>
    </DataTemplate.Triggers>
  </DataTemplate>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.FilteringUI.FilterEditorLeafControl}" TargetType="{x:Type dxfui_local:FilterEditorLeafControl}">
    <Setter Property="ContentTemplate" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=LeafTemplate}}" />
    <Setter Property="Template" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=RowControlTemplate}}" />
  </Style>
  <DataTemplate x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=GroupTemplate}">
    <StackPanel Orientation="Vertical">
      <ContentPresenter>
        <ContentPresenter.ContentTemplate>
          <DataTemplate>
            <Grid Background="Transparent">
              <StackPanel Orientation="Horizontal" dxfui_local:FilterEditorNavigation.Node="{Binding}" Margin="{StaticResource filterEditorRowMargin}" MinHeight="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=RowMinHeight}}">
                <ContentControl Style="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorItemStyle}}" Background="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=GroupOperatorSelectorBackground}}" Foreground="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=GroupOperatorSelectorForeground}}" Margin="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorItemMargin}}">
                  <dxe:TextEdit x:Name="OperatorSelector" EditValue="{Binding GroupOperator.DisplayName, Mode=OneWay}" EditMode="InplaceInactive" dxfui_local:FilterEditorNavigation.Index="0">
                    <dxe:TextEdit.Style>
                      <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=FrameworkElement}" TargetType="{x:Type FrameworkElement}" BasedOn="{StaticResource menuOwner}">
                        <Style.Triggers>
                          <Trigger Property="dxfui_local:FilterEditorNavigation.IsFocused" Value="True">
                            <Setter Property="dxb:BarManager.DXContextMenu">
                              <Setter.Value>
                                <dxb:PopupMenu ItemLinksSource="{Binding OperatorTypeMenu}" ItemTemplate="{StaticResource MenuItemTemplate}" />
                              </Setter.Value>
                            </Setter>
                          </Trigger>
                        </Style.Triggers>
                      </Style>
                    </dxe:TextEdit.Style>
                    <dxmvvm:Interaction.Behaviors>
                      <dxfui_local:FilterEditorContextMenuBehavior />
                    </dxmvvm:Interaction.Behaviors>
                  </dxe:TextEdit>
                </ContentControl>
                <Button x:Name="AddButton" Command="{Binding AddCommand}" Template="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=AddButtonControlTemplate}}" Style="{StaticResource addChildButtonStyle}">
                  <ToolTipService.ToolTip>
                    <ToolTip>
                      <StackPanel Orientation="Vertical">
                        <TextBlock Text="{dxe:EditorStringId FilterToolTipKeysAdd}" FontWeight="Bold" Margin="0,0,0,4" />
                        <TextBlock Text="{dxe:EditorStringId FilterToolTipNodeAdd}" />
                      </StackPanel>
                    </ToolTip>
                  </ToolTipService.ToolTip>
                </Button>
                <Border x:Name="AddChildSplitButton" MinWidth="12" Background="Transparent" Style="{StaticResource menuOwner}" Visibility="{DXBinding Expr='AddChildMenu.Count gt 0 ? `Visible` : `Collapsed`'}">
                  <dxb:BarManager.DXContextMenu>
                    <dxb:PopupMenu ItemLinksSource="{Binding AddChildMenu}" ItemTemplate="{StaticResource MenuItemTemplate}" />
                  </dxb:BarManager.DXContextMenu>
                  <Path Style="{DynamicResource ResourceKey={dxfuit:FilterEditorThemeKey ResourceKey=AddChildSplitButtonPathStyle}}" />
                </Border>
                <Button x:Name="RemoveButton" Command="{Binding RemoveCommand}" Style="{StaticResource removeButtonStyle}" Template="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=RemoveButtonControlTemplate}}" Margin="4,0,0,0" MinWidth="18" Visibility="Hidden" />
              </StackPanel>
            </Grid>
            <DataTemplate.Triggers>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="IsMouseOver" Value="True" />
                  <Condition Property="IsEnabled" SourceName="RemoveButton" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                  <Setter TargetName="RemoveButton" Property="Visibility" Value="Visible" />
                </MultiTrigger.Setters>
              </MultiTrigger>
            </DataTemplate.Triggers>
          </DataTemplate>
        </ContentPresenter.ContentTemplate>
      </ContentPresenter>
      <ItemsControl Margin="24,0,0,0" ItemsSource="{Binding Children}" ItemTemplateSelector="{StaticResource FilterEditorNodeTemplateSelector}" />
    </StackPanel>
  </DataTemplate>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.FilteringUI.FilterEditorGroupControl}" TargetType="{x:Type dxfui_local:FilterEditorGroupControl}">
    <Setter Property="ContentTemplate" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=GroupTemplate}}" />
    <Setter Property="Template" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=RowControlTemplate}}" />
  </Style>
  <DataTemplate x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=CustomExpressionNodeBehaviorsTemplate}">
    <ItemsControl>
      <dx:DialogService DialogWindowStartupLocation="CenterOwner">
        <dx:DialogService.DialogStyle>
          <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=Window}" TargetType="{x:Type Window}">
            <Setter Property="ShowInTaskbar" Value="False" />
            <Setter Property="WindowStyle" Value="ToolWindow" />
            <Setter Property="UseLayoutRounding" Value="True" />
            <Setter Property="Width" Value="600" />
            <Setter Property="Height" Value="450" />
          </Style>
        </dx:DialogService.DialogStyle>
        <dx:DialogService.ViewTemplate>
          <DataTemplate>
            <dxe:ExpressionEditorContainer CurrentColumnInfo="{Binding Column, Mode=OneTime}" BindableExpression="{Binding Expression, Mode=OneWayToSource}" />
          </DataTemplate>
        </dx:DialogService.ViewTemplate>
      </dx:DialogService>
    </ItemsControl>
  </DataTemplate>
  <DataTemplate x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=CustomExpressionTemplate}">
    <Grid Background="Transparent">
      <StackPanel Orientation="Horizontal" dxfui_local:FilterEditorNavigation.Node="{Binding}" Margin="{StaticResource filterEditorRowMargin}" MinHeight="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=RowMinHeight}}" dxmvvm:Interaction.BehaviorsTemplate="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=CustomExpressionNodeBehaviorsTemplate}}">
        <ContentControl Style="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorItemStyle}}" VerticalAlignment="Center" BorderBrush="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=InplaceEditorInactiveBorderBrush}}" BorderThickness="1">
          <dxe:TextEdit x:Name="CustomFilterTextEdit" EditValue="{Binding FilterText, Mode=OneWay}" IsReadOnly="True" NullText="{dxe:EditorStringId FilterExpressionEmptyValueText}" EditMode="InplaceInactive" dxfui_local:FilterEditorNavigation.Index="0" />
          <ContentControl.InputBindings>
            <KeyBinding Command="{Binding ShowExpressionEditorCommand}" Key="Space" />
            <KeyBinding Command="{Binding ShowExpressionEditorCommand}" Key="Enter" />
          </ContentControl.InputBindings>
          <dxmvvm:Interaction.Behaviors>
            <dxmvvm:EventToCommand EventName="MouseLeftButtonDown" Command="{Binding ShowExpressionEditorCommand}" />
          </dxmvvm:Interaction.Behaviors>
        </ContentControl>
        <Button x:Name="RemoveButton" Command="{Binding RemoveCommand}" Style="{StaticResource removeButtonStyle}" Template="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=RemoveButtonControlTemplate}}" Margin="4,0,0,0" MinWidth="18" Visibility="Hidden" />
      </StackPanel>
    </Grid>
    <DataTemplate.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
          <Condition Property="IsEnabled" SourceName="RemoveButton" Value="True" />
        </MultiTrigger.Conditions>
        <MultiTrigger.Setters>
          <Setter TargetName="RemoveButton" Property="Visibility" Value="Visible" />
        </MultiTrigger.Setters>
      </MultiTrigger>
    </DataTemplate.Triggers>
  </DataTemplate>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.FilteringUI.FilterEditorCustomExpressionControl}" TargetType="{x:Type dxfui_local:FilterEditorCustomExpressionControl}">
    <Setter Property="ContentTemplate" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=CustomExpressionTemplate}}" />
    <Setter Property="Template" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=RowControlTemplate}}" />
  </Style>
  <!--#endregion-->
  <ControlTemplate x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=ControlTemplate}" TargetType="{x:Type dxfui_local:FilterEditorControl}">
    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
      <Grid>
        <ScrollViewer x:Name="PART_ScrollViewer" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Focusable="False" Visibility="{TemplateBinding AllowEditFilter, Converter={dxmvvm:BooleanToVisibilityConverter}}">
          <ContentPresenter Margin="{StaticResource filterEditorMargin}" Content="{Binding RootNode, RelativeSource={RelativeSource Mode=TemplatedParent}}" ContentTemplateSelector="{StaticResource FilterEditorNodeTemplateSelector}" />
        </ScrollViewer>
        <TextBlock x:Name="PART_Placeholder" VerticalAlignment="Center" HorizontalAlignment="Center" Text="{dxg:GridControlStringIdExtension FilterEditorNotEditableMessage}" Visibility="{TemplateBinding AllowEditFilter, Converter={dxmvvm:BooleanToVisibilityConverter Inverse=True}}" />
      </Grid>
    </Border>
  </ControlTemplate>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.FilteringUI.FilterEditorControl}" TargetType="{x:Type dxfui_local:FilterEditorControl}">
    <Setter Property="Template" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=ControlTemplate}}" />
    <Setter Property="Background" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=Background}}" />
    <Setter Property="BorderBrush" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=BorderBrush}}" />
    <Setter Property="Foreground" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=Foreground}}" />
  </Style>
  <DataTemplate x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=InplaceEditorTemplate}">
    <dxfui_local:FilterValueEditor x:Name="PART_Editor" NullText="{dxe:EditorStringId FilterEmptyValueText}" FilterModel="{Binding Model}" EditSettings="{Binding EditSettings}" />
  </DataTemplate>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.FilteringUI.InplaceEditorCell}" TargetType="{x:Type dxfui_local:InplaceEditorCell}">
    <Setter Property="TextElement.Foreground" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=InplaceEditorInactiveForeground}}" />
    <Setter Property="EditorTemplate" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=InplaceEditorTemplate}}" />
    <Setter Property="MinHeight" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=RowMinHeight}}" />
    <Setter Property="MinWidth" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=InplaceEditorCellMinWidth}}" />
    <Setter Property="Background" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=InplaceEditorInactiveBackground}}" />
    <Setter Property="BorderBrush" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=InplaceEditorInactiveBorderBrush}}" />
    <Setter Property="BorderThickness" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=EditorBorderThickness}}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="dxfui_local:InplaceEditorCell">
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=ItemCornerRadius}}">
            <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="dxfui_local:FilterEditorNavigation.IsFocused" Value="True">
        <Setter Property="BorderBrush" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=InplaceEditorActiveBorderBrush}}" />
      </Trigger>
      <Trigger Property="IsActive" Value="True">
        <Setter Property="Background" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=InplaceEditorActiveBackground}}" />
        <Setter Property="TextElement.Foreground" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=InplaceEditorActiveForeground}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=InplaceEditorActiveBorderBrush}}" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
          <Condition Property="IsActive" Value="False" />
        </MultiTrigger.Conditions>
        <MultiTrigger.Setters>
          <Setter Property="Opacity" Value="0.62" />
        </MultiTrigger.Setters>
      </MultiTrigger>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="MinHeight" Value="44" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorStyle}" TargetType="{x:Type dxfui_local:FilterEditorControl}">
    <Style.Setters>
      <Setter Property="Context" Value="{Binding Context}" />
      <Setter Property="PropertyName" Value="{Binding PropertyName}" />
      <Setter Property="RespondToContextFiltersChanges" Value="False" />
      <Setter Property="AllowFieldOperand" Value="{Binding AllowFieldOperand}" />
      <!-- <Setter Property="AllowAggregateOperands" Value="{Binding AllowAggregateOperands}" /> -->
      <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
        <Setter.Value>
          <DataTemplate>
            <ItemsControl>
              <dxfui_local:FilterEditorApplyService />
              <dxmvvm:EventToCommand Event="Loaded" Command="{DXCommand Execute='@a($dxfui_local:FilterEditorControl).Focus()'}" />
            </ItemsControl>
          </DataTemplate>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <DataTemplate x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorTemplate}">
    <dxfui_local:FilterEditorControl />
  </DataTemplate>
  <DataTemplate x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorDialogServiceViewTemplate}">
    <DataTemplate.Resources>
      <Style x:Key="{x:Type dxfui_local:FilterEditorControl}" TargetType="{x:Type dxfui_local:FilterEditorControl}" BasedOn="{StaticResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorStyle}}" />
    </DataTemplate.Resources>
    <ContentPresenter Content="{Binding}" ContentTemplate="{Binding FilterEditorTemplate}" />
  </DataTemplate>
  <DataTemplate x:Key="{dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorDialogServiceTemplate}">
    <ContentControl>
      <dx:DialogService DialogWindowStartupLocation="CenterOwner" ViewTemplate="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorDialogServiceViewTemplate}}">
        <dx:DialogService.DialogStyle>
          <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=http://schemas.devexpress.com/winfx/2008/xaml/core.ThemedWindow}" TargetType="{x:Type dx:ThemedWindow}">
            <Setter Property="dxn:ThemedWindowOptions.ShowOverPopups" Value="True" />
            <Setter Property="ShowInTaskbar" Value="False" />
            <Setter Property="WindowStyle" Value="ToolWindow" />
            <Setter Property="ShowIcon" Value="False" />
            <Setter Property="UseLayoutRounding" Value="True" />
            <Setter Property="Width" Value="500" />
            <Setter Property="Height" Value="350" />
            <Setter Property="MinWidth" Value="500" />
            <Setter Property="MinHeight" Value="350" />
          </Style>
        </dx:DialogService.DialogStyle>
      </dx:DialogService>
    </ContentControl>
  </DataTemplate>
</ResourceDictionary>