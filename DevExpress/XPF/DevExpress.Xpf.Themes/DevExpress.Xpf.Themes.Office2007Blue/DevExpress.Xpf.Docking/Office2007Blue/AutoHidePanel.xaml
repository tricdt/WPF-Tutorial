<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:collections="clr-namespace:System.Collections;assembly=mscorlib"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxdo="http://schemas.devexpress.com/winfx/2008/xaml/docking"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxp="http://schemas.devexpress.com/winfx/2008/xaml/docking/platform"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/docking/themekeys"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:ve="http://schemas.devexpress.com/winfx/2008/xaml/docking/visualelements"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- AutoHide Theme Elements -->

    <Thickness x:Key="{dxt:AutoHideTrayHeadersGroupElementsThemeKey ResourceKey=LeftMargin}">0,3</Thickness>

    <Thickness x:Key="{dxt:AutoHideTrayHeadersGroupElementsThemeKey ResourceKey=TopMargin}">3,0</Thickness>

    <Thickness x:Key="{dxt:AutoHideTrayHeadersGroupElementsThemeKey ResourceKey=RightMargin}">0,3</Thickness>

    <Thickness x:Key="{dxt:AutoHideTrayHeadersGroupElementsThemeKey ResourceKey=BottomMargin}">3,0</Thickness>

    <Thickness x:Key="{dxt:AutoHideTrayElementsThemeKey ResourceKey=CaptionBorderThickness}">1,0,1,1</Thickness>

    <Thickness x:Key="{dxt:AutoHideTrayElementsThemeKey ResourceKey=BorderThickness}">0,0,0,1</Thickness>

    <ControlTemplate x:Key="{dxt:AutoHideTrayElementsThemeKey ResourceKey=Caption}" TargetType="ve:AutoHidePaneHeaderItem">
        <Grid x:Name="itemHeader"
              Background="#00000000"
              ve:DockPane.HitTestType="Header"
              Visibility="{Binding Path=Visibility}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Control.Background)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="#FFC9DAEE"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="back" Storyboard.TargetProperty="(Control.Background)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="#FF8EA7C4"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_CaptionControlPresenter" Storyboard.TargetProperty="(Control.Foreground)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="#FF000000"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Selected">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="(Control.Background)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="#FFB8CFE9"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="back" Storyboard.TargetProperty="(Control.Background)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="#FF8EA7C4"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_CaptionControlPresenter" Storyboard.TargetProperty="(Control.Foreground)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="#FF294C82"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Normal"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="LocationStates">
                    <VisualState x:Name="Left">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemHeader" Storyboard.TargetProperty="(Control.Margin)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Thickness>0,0,0,-1</Thickness>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Right">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemHeader" Storyboard.TargetProperty="(Control.Margin)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Thickness>0,0,0,-1</Thickness>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Top">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemHeader" Storyboard.TargetProperty="(Control.Margin)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Thickness>0,0,-1,0</Thickness>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Bottom">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemHeader" Storyboard.TargetProperty="(Control.Margin)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Thickness>0,0,-1,0</Thickness>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="back"
                    Background="#FFAAC0DA"
                    Opacity="1"
                    Padding="{TemplateBinding ActualBorderThickness}">
                <Border x:Name="border" Background="#FFD6E5F9"/>
            </Border>
            <ve:AutoHideTransformPanel x:Name="PART_TransformPanel">
                <ve:AutoHideTransformPanel.Orientation>
                    <Binding Path="(ve:AutoHideTray.Orientation)" RelativeSource="{RelativeSource TemplatedParent}">
                        <Binding.Converter>
                            <ve:OrientationInvertConverter/>
                        </Binding.Converter>
                    </Binding>
                </ve:AutoHideTransformPanel.Orientation>
                <Border x:Name="front">
                    <ve:TemplatedTabCaptionControl x:Name="PART_CaptionControlPresenter"
                                                   Foreground="#FF71849F"
                                                   LayoutItem="{Binding}"
                                                   Padding="5,3"/>
                </Border>
            </ve:AutoHideTransformPanel>
        </Grid>
    </ControlTemplate>

    <sys:Double x:Key="{dxt:AutoHidePaneElementsThemeKey ResourceKey=SizerThickness}">6</sys:Double>

    <sys:Double x:Key="{dxt:AutoHidePaneElementsThemeKey ResourceKey=TouchSizerThickness}">24</sys:Double>

    <Thickness x:Key="{dxt:AutoHidePaneElementsThemeKey ResourceKey=ContentMargin}">2</Thickness>

    <ve:DockTypeToThicknessConverter x:Key="dockTypeToThicknessLightConverter"
                                     All="1"
                                     Inverted="True"/>

    <ControlTemplate x:Key="{dxt:AutoHidePaneElementsThemeKey ResourceKey=Template}" TargetType="ve:AutoHidePane">
        <ve:AutoHidePanePresenter x:Name="PART_Presenter">
            <DockPanel Background="Transparent">
                <DockPanel.Resources>
                    <ve:DockToVerticalAlignmentConverter x:Key="dockToVerticalAlignmentConverter"/>
                    <ve:DockToHorizontalAlignmentConverter x:Key="dockToHorizontalAlignmentConverter"/>
                    <ve:DockTypeToThicknessConverter x:Key="dockTypeToThicknessConverter"
                                                     All="7"
                                                     Inverted="True"/>
                    <dx:BoolToVisibilityConverter x:Key="boolToVisibilityConverter"/>
                    <dx:BoolToVisibilityInverseConverter x:Key="boolToVisibilityInverseConverter"/>
                    <ve:DockInverseConverter x:Key="dockInverseConverter"/>
                </DockPanel.Resources>
                <Grid Background="Transparent"
                      Cursor="{Binding ElementName=PART_Sizer, Path=Cursor}"
                      DockPanel.Dock="{Binding DockType,RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource dockInverseConverter}}"
                      HorizontalAlignment="{Binding DockType, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ResourceKey=dockToHorizontalAlignmentConverter}}"
                      ve:DockPane.HitTestType="Border"
                      VerticalAlignment="{Binding DockType, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ResourceKey=dockToVerticalAlignmentConverter}}"
                      Visibility="{Binding IsSizerVisible,RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}">
                    <ve:ElementSizer x:Name="PART_Sizer"
                                     Orientation="{Binding Path=(ve:AutoHideTray.Orientation), RelativeSource={RelativeSource TemplatedParent}}"
                                     Thickness="{DynamicResource {dxt:AutoHidePaneElementsThemeKey ResourceKey=SizerThickness}}"/>
                </Grid>
                <Grid x:Name="PART_PaneContent" Background="Transparent">
                    <Grid ve:DockPane.HitTestType="Border">
                        <Border Background="#FF000000"
                                CornerRadius="2"
                                IsHitTestVisible="False"
                                Margin="5,5,1,1"
                                Opacity="0.15"
                                Visibility="{Binding IsSizerVisible,RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityInverseConverter}}"/>
                        <ContentPresenter x:Name="Content"
                                          Content="{TemplateBinding Content}"
                                          Margin="{DynamicResource {dxt:AutoHidePaneElementsThemeKey ResourceKey=ContentMargin}}"/>
                    </Grid>
                    <Border x:Name="PART_PaneBorder"
                            BorderBrush="Transparent"
                            BorderThickness="{Binding DockType, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ResourceKey=dockTypeToThicknessConverter}}"
                            ve:DockPane.HitTestType="Border"
                            Visibility="{Binding IsSizerVisible,RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityInverseConverter}}">
                    </Border>
                </Grid>
            </DockPanel>
        </ve:AutoHidePanePresenter>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxdo:DockLayoutManager.DockLayoutManager).EnableWin32Compatibility, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Margin"
                        TargetName="Content"
                        Value="0"/>
            </DataTrigger>
            <Trigger Property="ViewStyle" Value="Light">
                <Setter Property="BorderThickness"
                        TargetName="PART_PaneBorder"
                        Value="{Binding DockType, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ResourceKey=dockTypeToThicknessLightConverter}}"/>
                <Setter Property="BorderBrush"
                        TargetName="PART_PaneBorder"
                        Value="{DynamicResource {dxt:DockPaneElementsThemeKey ResourceKey=BorderBrush}}"/>
                <Setter Property="Thickness"
                        TargetName="PART_Sizer"
                        Value="1"/>
                <Setter Property="Background"
                        TargetName="PART_Sizer"
                        Value="{DynamicResource {dxt:DockPaneElementsThemeKey ResourceKey=BorderBrush}}"/>
                <Setter Property="Margin"
                        TargetName="Content"
                        Value="0"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- AutoHide Theme Elements -->

    <ControlTemplate x:Key="{dxt:DockElementsThemeKey ResourceKey=ElementSizer}" TargetType="ve:ElementSizer">
        <dx:Container Background="{TemplateBinding Background}" UseLayoutRounding="True">
            <dx:Container x:Name="HorizontalRootElement"
                          Cursor="SizeNS"
                          Height="{TemplateBinding Thickness}"
                          Width="16"/>
            <dx:Container x:Name="VerticalRootElement"
                          Cursor="SizeWE"
                          Height="16"
                          Width="{TemplateBinding Thickness}"/>
        </dx:Container>
    </ControlTemplate>

</ResourceDictionary>