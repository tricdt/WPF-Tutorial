<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxeh="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2010Blue.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/Office2010Blue/Brushes.xaml" />
    <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2010Blue.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/Generic/CheckEdit.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <ControlTemplate x:Key="{dxet:CheckEditThemeKey ResourceKey=CheckEditBoxTemplate}" TargetType="{x:Type dxe:CheckEditBox}">
    <Grid Background="Transparent" SnapsToDevicePixels="True">
      <Grid.Resources>
        <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
      </Grid.Resources>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="MouseOver">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="MultiContentControl" Storyboard.TargetProperty="VisibleChildIndex">
                <DiscreteObjectKeyFrame KeyTime="0" Value="1" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed" />
          <VisualState x:Name="Disabled">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Opacity" To="0.35" />
              <DoubleAnimation Duration="0" Storyboard.TargetName="CheckBox" Storyboard.TargetProperty="Opacity" To="0.35" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
        <VisualStateGroup x:Name="CheckStates">
          <VisualState x:Name="Checked">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="check" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Unchecked" />
          <VisualState x:Name="Indeterminate">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="IndeterminateState" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
        <VisualStateGroup x:Name="InternalFocusStates">
          <VisualState x:Name="InternalFocused">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="FocusElement" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="InternalUnfocused" />
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Grid Margin="{TemplateBinding Padding}">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid x:Name="CheckBox" Height="14" Margin="0,3,0,3" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="14">
          <Border x:Name="FocusElement" Background="#7FFFCC00" CornerRadius="1" Margin="-1" Opacity="0" />
          <dxcn:MultiContentControl x:Name="MultiContentControl" VisibleChildIndex="0">
            <Border Background="#FFE1EDFA" BorderBrush="#FF94ADCC" BorderThickness="1">
              <Border Background="#FFFFFFFF" BorderThickness="1" Margin="1">
                <Border.BorderBrush>
                  <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                    <GradientStop Color="#FFADB1B7" Offset="0" />
                    <GradientStop Color="#FFD9DBDE" Offset="1" />
                  </LinearGradientBrush>
                </Border.BorderBrush>
              </Border>
            </Border>
            <Border Background="#FFFCF1C2" BorderBrush="#FFF1D449" BorderThickness="1">
              <Border BorderThickness="1" Margin="1">
                <Border.BorderBrush>
                  <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                    <GradientStop Color="#FFF4BF23" Offset="0" />
                    <GradientStop Color="#FFFDCC9B" Offset="1" />
                  </LinearGradientBrush>
                </Border.BorderBrush>
                <Border.Background>
                  <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                    <GradientStop Color="#FFF8EBB2" Offset="0" />
                    <GradientStop Color="#FFF8EBB2" Offset="1" />
                  </LinearGradientBrush>
                </Border.Background>
              </Border>
            </Border>
          </dxcn:MultiContentControl>
          <Border x:Name="IndeterminateState" Background="#FFD0923B" CornerRadius="1" Height="10" HorizontalAlignment="Center" Opacity="0" Padding="1" VerticalAlignment="Center" Width="10">
            <Border>
              <Border.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                  <GradientStop Color="#FFFCDF85" Offset="0" />
                  <GradientStop Color="#FFFCDF85" Offset="1" />
                  <GradientStop Color="#FFF4BF23" Offset="0.5" />
                </LinearGradientBrush>
              </Border.Background>
            </Border>
          </Border>
          <Path x:Name="check" Data="F1 M 1231,852L 1233,852L 1229,860L 1227,860L 1225,856L 1227,856L 1228,858L 1231,852 Z" Fill="#FF515D7A" Height="8" HorizontalAlignment="Center" Opacity="0" Stretch="Fill" VerticalAlignment="Center" Width="8" />
        </Grid>
        <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="{Binding HasContent, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
      </Grid>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="FlowDirection" Value="RightToLeft">
        <Setter Property="LayoutTransform" TargetName="CheckBox">
          <Setter.Value>
            <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="-1" ScaleY="1" />
          </Setter.Value>
        </Setter>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{dxet:CheckEditThemeKey ResourceKey=CheckEditBoxStyle}" BasedOn="{StaticResource BaseCheckEditBoxStyle}" TargetType="{x:Type dxe:CheckEditBox}">
    <Setter Property="FocusVisualStyle" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).FocusVisualStyle, RelativeSource={RelativeSource TemplatedParent}}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Template" Value="{DynamicResource {dxet:CheckEditThemeKey ResourceKey=CheckEditBoxTemplate}}" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
  </Style>
  <Style x:Key="{dxet:CheckEditThemeKey ResourceKey=CheckEditBoxInplaceStyle}" BasedOn="{StaticResource BaseCheckEditBoxInplaceStyle}" TargetType="{x:Type dxe:CheckEditBox}">
    <Setter Property="Foreground" Value="#FF1E395B" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Template" Value="{DynamicResource {dxet:CheckEditThemeKey ResourceKey=CheckEditBoxTemplate}}" />
    <Setter Property="HorizontalAlignment" Value="Center" />
  </Style>
  <Thickness x:Key="{dxet:CheckEditThemeKey ResourceKey=Padding}">0,1,0,1</Thickness>
  <ControlTemplate x:Key="{dxet:CheckEditThemeKey ResourceKey=DisplayTemplate}">
    <dxe:CheckEditBox x:Name="PART_Editor" Style="{DynamicResource {dxet:CheckEditThemeKey ResourceKey=CheckEditBoxStyle}}" />
  </ControlTemplate>
  <ControlTemplate x:Key="{dxet:CheckEditThemeKey ResourceKey=EditTemplate}">
    <dxe:CheckEditBox x:Name="PART_Editor" Style="{DynamicResource {dxet:CheckEditThemeKey ResourceKey=CheckEditBoxStyle}}" />
  </ControlTemplate>
  <ControlTemplate x:Key="{dxet:CheckEditThemeKey ResourceKey=DisplayInplaceTemplate}">
    <dxe:CheckEditBox x:Name="PART_Editor" Style="{DynamicResource {dxet:CheckEditThemeKey ResourceKey=CheckEditBoxInplaceStyle}}" />
  </ControlTemplate>
  <ControlTemplate x:Key="{dxet:CheckEditThemeKey ResourceKey=EditInplaceTemplate}">
    <dxe:CheckEditBox x:Name="PART_Editor" Style="{DynamicResource {dxet:CheckEditThemeKey ResourceKey=CheckEditBoxInplaceStyle}}" />
  </ControlTemplate>
  <ControlTemplate x:Key="{dxet:CheckEditThemeKey ResourceKey=Template}" TargetType="{x:Type dxe:CheckEdit}">
    <dxe:EditorControl x:Name="PART_Content" Grid.Column="0" Template="{TemplateBinding ActualEditorControlTemplate}"></dxe:EditorControl>
    <ControlTemplate.Triggers>
      <Trigger Property="EditMode" Value="InplaceInactive">
        <Setter Property="HorizontalAlignment" Value="Center" />
      </Trigger>
      <Trigger Property="EditMode" Value="InplaceActive">
        <Setter Property="HorizontalAlignment" Value="Center" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
</ResourceDictionary>