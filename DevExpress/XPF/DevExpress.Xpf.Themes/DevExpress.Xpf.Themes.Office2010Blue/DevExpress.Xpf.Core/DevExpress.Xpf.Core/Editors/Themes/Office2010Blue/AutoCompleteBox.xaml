<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:dxn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2010Blue.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/Generic/AutoCompleteBox.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <SolidColorBrush x:Key="{dxet:TokenEditorThemeKey ResourceKey=TokenForeground}" Color="#FF000000" />
  <ControlTemplate x:Key="{dxet:TokenEditorThemeKey ResourceKey=CellPresenterTemplate}" TargetType="{x:Type dxei:TokenEditorPresenter}">
    <Grid Background="Transparent">
      <Border UseLayoutRounding="True">
        <ContentControl Focusable="False" Template="{TemplateBinding BorderTemplate}" />
      </Border>
      <dxei:CellEditor x:Name="cell" Focusable="False" TextElement.Foreground="{TemplateBinding Foreground}" />
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxet:TokenEditorThemeKey ResourceKey=TokenContainerTemplate}" TargetType="{x:Type ContentControl}">
    <Grid x:Name="grid" Margin="0,1,1,1">
      <Border x:Name="default" Background="#FF95ABC3" Opacity="0.5" />
      <Border x:Name="hover" Opacity="0">
        <Border.Background>
          <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFE6B763" Offset="0" />
            <GradientStop Color="#FFFFE48A" Offset="1" />
            <GradientStop Color="#FFFCDF85" Offset="0.1" />
          </LinearGradientBrush>
        </Border.Background>
      </Border>
      <Border x:Name="pressed" Opacity="0">
        <Border.Background>
          <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#7FF6C867" Offset="0" />
            <GradientStop Color="#7FFFE48A" Offset="1" />
            <GradientStop Color="#7FFFE48A" Offset="0.5" />
          </LinearGradientBrush>
        </Border.Background>
      </Border>
      <Border x:Name="editable" Opacity="0" />
      <Border x:Name="focused" Opacity="0">
        <Border.Background>
          <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFF6C867" Offset="0" />
            <GradientStop Color="#FFFFE48A" Offset="1" />
            <GradientStop Color="#FFFFE48A" Offset="0.5" />
          </LinearGradientBrush>
        </Border.Background>
      </Border>
      <Border BorderBrush="#3F000000" BorderThickness="1" />
      <Grid x:Name="focusedunselected" Opacity="0">
        <Border BorderBrush="#7FFFCC00" BorderThickness="2" />
        <Border BorderBrush="#BF866D0C" BorderThickness="1" />
      </Grid>
      <ContentPresenter />
    </Grid>
    <ControlTemplate.Triggers>
      <DataTrigger Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True">
        <Setter Property="Opacity" TargetName="default" Value="0" />
        <Setter Property="Opacity" TargetName="hover" Value="1" />
        <Setter Property="Opacity" TargetName="pressed" Value="0" />
        <Setter Property="Opacity" TargetName="editable" Value="0" />
        <Setter Property="Opacity" TargetName="focused" Value="0" />
        <Setter Property="Opacity" TargetName="focusedunselected" Value="0" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsSelected, RelativeSource={RelativeSource Self}}" Value="True">
        <Setter Property="Opacity" TargetName="default" Value="0" />
        <Setter Property="Opacity" TargetName="hover" Value="0" />
        <Setter Property="Opacity" TargetName="pressed" Value="1" />
        <Setter Property="Opacity" TargetName="editable" Value="0" />
        <Setter Property="Opacity" TargetName="focused" Value="0" />
        <Setter Property="Opacity" TargetName="focusedunselected" Value="0" />
      </DataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
          <Condition Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsTokenFocused, RelativeSource={RelativeSource Self}}" Value="True" />
        </MultiDataTrigger.Conditions>
        <Setter Property="Opacity" TargetName="default" Value="0" />
        <Setter Property="Opacity" TargetName="hover" Value="0" />
        <Setter Property="Opacity" TargetName="pressed" Value="0" />
        <Setter Property="Opacity" TargetName="editable" Value="0" />
        <Setter Property="Opacity" TargetName="focused" Value="1" />
        <Setter Property="Opacity" TargetName="focusedunselected" Value="0" />
      </MultiDataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsSelected, RelativeSource={RelativeSource Self}}" Value="False" />
          <Condition Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsTokenFocused, RelativeSource={RelativeSource Self}}" Value="True" />
        </MultiDataTrigger.Conditions>
        <Setter Property="Opacity" TargetName="focused" Value="0" />
        <Setter Property="Opacity" TargetName="focusedunselected" Value="1" />
      </MultiDataTrigger>
      <DataTrigger Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsEditorActivated, RelativeSource={RelativeSource Self}}" Value="True">
        <Setter Property="Opacity" TargetName="default" Value="0" />
        <Setter Property="Opacity" TargetName="hover" Value="0" />
        <Setter Property="Opacity" TargetName="pressed" Value="0" />
        <Setter Property="Opacity" TargetName="editable" Value="1" />
        <Setter Property="Opacity" TargetName="focused" Value="0" />
        <Setter Property="Opacity" TargetName="focusedunselected" Value="0" />
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{dxet:TokenEditorThemeKey ResourceKey=DeleteButtonStyle}" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border x:Name="Border" Background="Transparent" Height="16" HorizontalAlignment="Center" Margin="0,0,2,0" VerticalAlignment="Center" Width="16">
            <Grid>
              <Border x:Name="hoverState" Background="#FFCC0000" CornerRadius="32" Margin="2" Opacity="0" />
              <Path x:Name="Path" Data="F1 M 385,283L 386,283L 388,285L 390,283L 391,283L 391,284L 389,286L 391,288L 391,289L 390,289L 388,287L 386,289L 385,289L 385,288L 387,286L 385,284L 385,283 Z " Fill="#FF515D7A" Height="6" Stretch="Fill" Width="6" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True">
              <Setter Property="Fill" TargetName="Path" Value="#FF515D7A" />
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Opacity" TargetName="hoverState" Value="1" />
              <Setter Property="Fill" TargetName="Path" Value="#FFFFFFFF" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Opacity" TargetName="hoverState" Value="0.75" />
              <Setter Property="Fill" TargetName="Path" Value="#BFFFFFFF" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>