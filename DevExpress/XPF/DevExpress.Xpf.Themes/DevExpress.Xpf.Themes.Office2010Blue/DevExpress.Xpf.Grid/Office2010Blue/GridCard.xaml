<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
  <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ExpandButtonTemplate}" TargetType="{x:Type dx:ToggleStateButton}">
    <Grid Background="Transparent" Height="14" SnapsToDevicePixels="True" Width="14">
      <Grid x:Name="HoverState" Opacity="0">
        <Border CornerRadius="2">
          <Border.Background>
            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
              <GradientStop Color="#FFECC757" Offset="0" />
              <GradientStop Color="#FFF1D449" Offset="1" />
            </LinearGradientBrush>
          </Border.Background>
          <Border CornerRadius="1" Margin="1">
            <Border.Background>
              <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FFFCF7E4" Offset="0" />
                <GradientStop Color="#FFFCF8E7" Offset="1" />
              </LinearGradientBrush>
            </Border.Background>
            <Border Margin="1">
              <Border.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                  <GradientStop Color="#FFF8EBB2" Offset="0" />
                  <GradientStop Color="#FFFCF7E4" Offset="1" />
                  <GradientStop Color="#FFFFE575" Offset="0.5" />
                </LinearGradientBrush>
              </Border.Background>
            </Border>
          </Border>
        </Border>
      </Grid>
      <Grid x:Name="PressedState" Opacity="0">
        <Border CornerRadius="2">
          <Border.Background>
            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
              <GradientStop Color="#FFBF7E3B" Offset="0" />
              <GradientStop Color="#FFBF7E3B" Offset="1" />
            </LinearGradientBrush>
          </Border.Background>
          <Border CornerRadius="1" Margin="1">
            <Border.Background>
              <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FFFFE575" Offset="0" />
                <GradientStop Color="#FFF8EBB2" Offset="1" />
                <GradientStop Color="#FFFFD86C" Offset="0.5" />
              </LinearGradientBrush>
            </Border.Background>
          </Border>
        </Border>
      </Grid>
      <Path x:Name="GlyphExpanded" Data="F1 M 259,112L 259,113L 257,113L 255,111L 253,113L 251,113L 251,112L 255,108L 259,112 Z " Fill="#FF515D7A" Height="5" Margin="0,0,0,1" Stretch="Fill" Width="8" />
      <Path x:Name="GlyphCollapsed" Data="F1 M 259,116L 259,115L 257,115L 255,117L 253,115L 251,115L 251,116L 255,120L 259,116 Z " Fill="#FF515D7A" Height="5" Margin="0,1,0,0" Stretch="Fill" Visibility="Collapsed" Width="8" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Fill" TargetName="GlyphCollapsed" Value="#FF515D7A" />
        <Setter Property="Fill" TargetName="GlyphExpanded" Value="#FF515D7A" />
        <Setter Property="Opacity" TargetName="HoverState" Value="1" />
      </Trigger>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Fill" TargetName="GlyphCollapsed" Value="#FF515D7A" />
        <Setter Property="Fill" TargetName="GlyphExpanded" Value="#FF515D7A" />
        <Setter Property="Opacity" TargetName="HoverState" Value="1" />
      </Trigger>
      <DataTrigger Binding="{Binding Path=SelectionState}" Value="Selected">
        <Setter Property="Fill" TargetName="GlyphCollapsed" Value="#FF515D7A" />
        <Setter Property="Fill" TargetName="GlyphExpanded" Value="#FF515D7A" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=SelectionState}" Value="Focused">
        <Setter Property="Fill" TargetName="GlyphCollapsed" Value="#FF515D7A" />
        <Setter Property="Fill" TargetName="GlyphExpanded" Value="#FF515D7A" />
      </DataTrigger>
      <Trigger Property="IsChecked" Value="False">
        <Setter Property="Visibility" TargetName="GlyphCollapsed" Value="Visible" />
        <Setter Property="Visibility" TargetName="GlyphExpanded" Value="Hidden" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{dxgt:CardTemplatesThemeKey ResourceKey=CardStyle}" TargetType="{x:Type ContentControl}">
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Style.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
          <Condition Property="dxg:GridViewBase.IsFocusedRow" Value="False" />
        </MultiTrigger.Conditions>
      </MultiTrigger>
      <Trigger Property="dxg:GridViewBase.IsFocusedRow" Value="True" />
    </Style.Triggers>
  </Style>
  <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ContainerTemplate}" TargetType="{x:Type ContentControl}">
    <Grid x:Name="Root">
      <Grid x:Name="Shadow" Margin="-2">
        <Grid.OpacityMask>
          <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#7F000000" Offset="0" />
            <GradientStop Color="#FF000000" Offset="1" />
          </LinearGradientBrush>
        </Grid.OpacityMask>
        <Border Background="#0C000000" CornerRadius="5" Padding="1">
          <Border Background="#0C000000" CornerRadius="4" />
        </Border>
      </Grid>
      <Border x:Name="Border" Background="#FF849DBD" CornerRadius="3" Grid.RowSpan="1" Padding="1">
        <ContentPresenter />
      </Border>
    </Grid>
    <ControlTemplate.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
          <Condition Property="dxg:GridViewBase.IsFocusedRow" Value="False" />
        </MultiTrigger.Conditions>
      </MultiTrigger>
      <Trigger Property="dxg:GridViewBase.IsFocusedRow" Value="True">
        <Setter Property="Background" TargetName="Border" Value="#FFC0A46E" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{dxgt:GridCardThemeKey ResourceKey=HeaderPresenterStyle}" TargetType="{x:Type dxg:GridCardHeaderContentPresenter}">
    <Setter Property="VerticalAlignment" Value="Center" />
  </Style>
  <Style x:Key="{dxgt:GridCardThemeKey ResourceKey=ContentExpandButtonStyle}" TargetType="{x:Type dxg:GridCardExpandButton}">
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="Margin" Value="0,0,4,0" />
  </Style>
  <Style x:Key="{dxgt:GridCardThemeKey ResourceKey=ContentPresenterStyle}" TargetType="{x:Type dxg:GridCardContentPresenter}">
    <Setter Property="Margin" Value="11" />
  </Style>
  <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=HeaderContentTemplate}" TargetType="{x:Type ContentControl}">
    <ContentPresenter Margin="11,3,11,3" />
  </ControlTemplate>
  <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ExpanderContentTemplate}" TargetType="{x:Type ContentControl}">
    <ContentPresenter />
  </ControlTemplate>
  <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=DataContentTemplate}" TargetType="{x:Type ContentControl}">
    <Border x:Name="Root" Background="#FFE1EDFA" BorderBrush="#FF849DBD" BorderThickness="0,1,0,0" CornerRadius="0,0,2,2">
      <ContentPresenter />
    </Border>
    <ControlTemplate.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
          <Condition Property="dxg:GridViewBase.IsFocusedRow" Value="False" />
        </MultiTrigger.Conditions>
      </MultiTrigger>
      <Trigger Property="dxg:GridViewBase.IsFocusedRow" Value="True"></Trigger>
      <DataTrigger Binding="{Binding Path=IsExpanded}" Value="False" />
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=HeaderPanelTemplate}" TargetType="{x:Type ContentControl}">
    <Grid>
      <Border x:Name="Root" CornerRadius="2,2,0,0">
        <Border.Background>
          <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFEFF5FB" Offset="0" />
            <GradientStop Color="#FFE1EDFA" Offset="1" />
          </LinearGradientBrush>
        </Border.Background>
      </Border>
      <ContentPresenter />
    </Grid>
    <ControlTemplate.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
          <Condition Property="dxg:GridViewBase.IsFocusedRow" Value="False" />
        </MultiTrigger.Conditions>
      </MultiTrigger>
      <DataTrigger Binding="{Binding Path=(dxg:RowData.RowData).SelectionState, RelativeSource={RelativeSource TemplatedParent}}" Value="Focused">
        <Setter Property="Background" TargetName="Root">
          <Setter.Value>
            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
              <GradientStop Color="#FFFCDF85" Offset="0" />
              <GradientStop Color="#FFF4BF23" Offset="1" />
            </LinearGradientBrush>
          </Setter.Value>
        </Setter>
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=(dxg:RowData.RowData).SelectionState, RelativeSource={RelativeSource TemplatedParent}}" Value="Selected">
        <Setter Property="Background" TargetName="Root">
          <Setter.Value>
            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
              <GradientStop Color="#FFFFE575" Offset="1" />
              <GradientStop Color="#FFFFE575" Offset="0" />
              <GradientStop Color="#FFFFE575" Offset="0.5" />
            </LinearGradientBrush>
          </Setter.Value>
        </Setter>
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=IsExpanded}" Value="False">
        <Setter Property="CornerRadius" TargetName="Root" Value="2" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=(dxg:RowData.RowData).IsSelected, RelativeSource={RelativeSource TemplatedParent}}" Value="False">
        <Setter Property="dxg:FadeSelectionHelper.Opacity" TargetName="Root" Value="1" />
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ControlTemplate}">
    <ContentControl x:Name="card" Style="{Binding Path=(dxg:GridControl.ActiveView).CardStyle, RelativeSource={RelativeSource TemplatedParent}}" Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ContainerTemplate}}">
      <dxg:GridCardPanel x:Name="gridCardPanel" IsExpanded="{Binding Path=IsExpanded}">
        <dxg:GridCardPanel.Header>
          <dxg:GridCardHeaderControl x:Name="cardHeader" Foreground="#FF1E395B">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <ContentControl Grid.Column="0" Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=HeaderContentTemplate}}">
                <dxg:GridCardHeaderContentPresenter Style="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=HeaderPresenterStyle}}" />
              </ContentControl>
              <ContentControl Grid.Column="1" Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ExpanderContentTemplate}}" Visibility="{Binding Path=View.ShowCardExpandButton, Converter={StaticResource BoolToVisibilityConverter}}">
                <dxg:GridCardExpandButton Style="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ContentExpandButtonStyle}}" />
              </ContentControl>
            </Grid>
          </dxg:GridCardHeaderControl>
        </dxg:GridCardPanel.Header>
        <dxg:GridCardPanel.Body>
          <ContentControl Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=DataContentTemplate}}">
            <dxg:GridCardContentPresenter x:Name="presenter" Style="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ContentPresenterStyle}}" />
          </ContentControl>
        </dxg:GridCardPanel.Body>
      </dxg:GridCardPanel>
    </ContentControl>
    <ControlTemplate.Triggers>
      <DataTrigger Binding="{Binding Path=View.CollapsedCardOrientation}" Value="Vertical">
        <Setter Property="RotateOnCollapse" TargetName="gridCardPanel" Value="True" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=SelectionState}" Value="Selected">
        <Setter Property="Foreground" TargetName="cardHeader" Value="#FF1E395B" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=SelectionState}" Value="Focused">
        <Setter Property="Foreground" TargetName="cardHeader" Value="#FF1E395B" />
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="LoadingIndicator" TargetType="{x:Type ProgressBar}">
    <Grid SnapsToDevicePixels="True">
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Determinate" />
          <VisualState x:Name="Indeterminate">
            <Storyboard>
              <DoubleAnimation Duration="00:00:2" RepeatBehavior="Forever" Storyboard.TargetName="borderLoading" Storyboard.TargetProperty="(Panel.Background).(Brush.RelativeTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" To="360" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Border Background="#FF9CB2CE" CornerRadius="128">
        <Grid Margin="1">
          <Border Background="#FFD0DCE7" CornerRadius="128">
            <Border Background="#FFE1EDFA" CornerRadius="128" Margin="1" />
          </Border>
          <Border x:Name="borderLoading" CornerRadius="128">
            <Border.Background>
              <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                <LinearGradientBrush.RelativeTransform>
                  <TransformGroup>
                    <ScaleTransform CenterX="0.5" CenterY="0.5" />
                    <SkewTransform CenterX="0.5" CenterY="0.5" />
                    <RotateTransform CenterX="0.5" CenterY="0.5" />
                    <TranslateTransform />
                  </TransformGroup>
                </LinearGradientBrush.RelativeTransform>
                <GradientStop Color="#BFFFCC00" Offset="0" />
                <GradientStop Color="#00FFCC00" Offset="0.5" />
                <GradientStop Color="#00FFCC00" Offset="1" />
              </LinearGradientBrush>
            </Border.Background>
          </Border>
          <Border Background="#FFD0DCE7" CornerRadius="128" Margin="{TemplateBinding Padding}">
            <Border Background="#FF9CB2CE" CornerRadius="128" Margin="1">
              <Border Background="{TemplateBinding Background}" CornerRadius="128" Margin="1" />
            </Border>
          </Border>
        </Grid>
      </Border>
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=LoadingCardTemplate}" TargetType="dxg:LoadingCardControl">
    <Grid x:Name="Root" Margin="1" MinHeight="216" MinWidth="216">
      <ProgressBar x:Name="Indicator" Background="#FFFFFFFF" Height="16" HorizontalAlignment="Center" IsIndeterminate="{Binding ShowLoadingIndicator}" Margin="8" MinHeight="4" MinWidth="4" Padding="2" Template="{StaticResource LoadingIndicator}" VerticalAlignment="Center" Visibility="{Binding ShowLoadingIndicator, Converter={StaticResource BoolToVisibilityConverter}}" Width="16" />
      <dxg:LoadingRowButton Click="{DXEvent 'LoadMoreRows()'}" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding AllowLoadMore, Converter={StaticResource BoolToVisibilityConverter}}">
        <StackPanel Margin="15,0,9,1" Orientation="Horizontal">
          <Label Content="{dxg:GridControlStringId LoadingRowLoadMore}" Foreground="#FF1E395B" />
          <Grid Height="16" Margin="3" Width="16">
            <Path Data="F1 M 10,5L 5,10L 0,5L 3,5L 3,3L 7,3L 7,5L 10,5 Z M 3,2L 3,0L 7,0L 7,2L 3,2 Z " Fill="#FF1E395B" Height="10" HorizontalAlignment="Stretch" Margin="0,1,0,0" Stretch="Fill" VerticalAlignment="Stretch" Width="10" />
          </Grid>
        </StackPanel>
      </dxg:LoadingRowButton>
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=LoadingCardErrorTemplate}" TargetType="dxg:LoadingCardControl">
    <Grid x:Name="Root" Margin="1" MinHeight="216" MinWidth="216">
      <Grid HorizontalAlignment="Center" Margin="12,0,12,0" MaxWidth="216" VerticalAlignment="Center">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Path Data="F1 M 7,0C 10.866,0 14,3.13401 14,7C 14,10.866 10.866,14 7,14C 3.13401,14 -6.35783e-007,10.866 -6.35783e-007,7C -6.35783e-007,3.13401 3.13401,0 7,0 Z M 2.75736,4.17157L 5.58579,7L 2.75736,9.82843L 4.17157,11.2426L 7,8.41422L 9.82843,11.2426L 11.2426,9.82843L 8.41421,7L 11.2426,4.17157L 9.82843,2.75736L 7,5.58579L 4.17157,2.75736L 2.75736,4.17157 Z " Fill="#FFCC0000" Height="14" HorizontalAlignment="Center" Margin="4" Stretch="Fill" VerticalAlignment="Top" Width="14" />
        <StackPanel Grid.Column="1" Orientation="Vertical">
          <TextBlock Foreground="#FF1E395B" HorizontalAlignment="Left" Margin="4,3,4,3" Text="{Binding ErrorText}" TextWrapping="Wrap" />
          <TextBlock HorizontalAlignment="Center" Visibility="{Binding IsLoadingButtonVisible, Converter={StaticResource BoolToVisibilityConverter}}">
            <dxe:HyperlinkEdit Command="{Binding LoadRowsCommand}" Text="{Binding LoadingButtonText}" />
          </TextBlock>
        </StackPanel>
      </Grid>
    </Grid>
  </ControlTemplate>
</ResourceDictionary>