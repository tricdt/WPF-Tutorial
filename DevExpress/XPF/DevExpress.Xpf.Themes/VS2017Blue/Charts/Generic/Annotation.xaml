<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="http://schemas.devexpress.com/winfx/2008/xaml/charts" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/charts/themekeys" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
  <dx:BoolToVisibilityConverter x:Key="boolToVisibilityConverter" />
  <local:TransformXToDoubleConverter x:Key="transformXToDoubleConverter" />
  <local:TransformYToDoubleConverter x:Key="transformYToDoubleConverter" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.Annotation}" TargetType="{x:Type local:Annotation}">
    <Setter Property="Foreground" Value="{DynamicResource {dxt:ChartBrushesThemeKey ResourceKey=AnnotationForeground}}" />
    <Setter Property="Background" Value="{DynamicResource {dxt:ChartBrushesThemeKey ResourceKey=AnnotationBackground}}" />
    <Setter Property="BorderBrush" Value="{DynamicResource {dxt:ChartBrushesThemeKey ResourceKey=AnnotationBorderBrush}}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:Annotation}">
          <Grid ClipToBounds="False" Visibility="{TemplateBinding Visible, Converter={StaticResource boolToVisibilityConverter}}">
            <Canvas UseLayoutRounding="True">
              <Path x:Name="PART_Path" Stroke="{TemplateBinding BorderBrush}" StrokeDashArray="{Binding BorderStyle.DashStyle.Dashes, RelativeSource={RelativeSource TemplatedParent}}" StrokeDashCap="{Binding BorderStyle.DashCap, RelativeSource={RelativeSource TemplatedParent}}" StrokeDashOffset="{Binding BorderStyle.DashStyle.Offset, RelativeSource={RelativeSource TemplatedParent}}" StrokeLineJoin="{Binding BorderStyle.LineJoin, RelativeSource={RelativeSource TemplatedParent}}" StrokeMiterLimit="{Binding BorderStyle.MiterLimit, RelativeSource={RelativeSource TemplatedParent}}" StrokeThickness="{Binding BorderStyle.Thickness, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="True" Fill="{TemplateBinding Background}">
                <Path.Data>
                  <CombinedGeometry GeometryCombineMode="Union">
                    <CombinedGeometry.Geometry1>
                      <RectangleGeometry x:Name="PART_ShapeGeometry" RadiusX="{Binding ShapeTransform, RelativeSource={RelativeSource TemplatedParent},                                                 Converter={StaticResource transformXToDoubleConverter}, ConverterParameter=3}" RadiusY="{Binding ShapeTransform, RelativeSource={RelativeSource TemplatedParent},                                                 Converter={StaticResource transformYToDoubleConverter}, ConverterParameter=3}" Transform="{Binding ShapeTransform, RelativeSource={RelativeSource AncestorType={x:Type local:Annotation}}}">
                        <RectangleGeometry.Rect>
                          <Rect X="0" Y="0" Width="100" Height="40" />
                        </RectangleGeometry.Rect>
                      </RectangleGeometry>
                    </CombinedGeometry.Geometry1>
                    <CombinedGeometry.Geometry2>
                      <PathGeometry x:Name="PART_TailGeometry" Transform="{Binding TailTransform, RelativeSource={RelativeSource AncestorType={x:Type local:Annotation}}}">
                        <PathFigure>
                          <PolyLineSegment IsSmoothJoin="True">
                            <PolyLineSegment.Points>
                              <Point X="0" Y="0" />
                              <Point X="100" Y="5" />
                              <Point X="100" Y="-5" />
                              <Point X="0" Y="0" />
                            </PolyLineSegment.Points>
                          </PolyLineSegment>
                        </PathFigure>
                      </PathGeometry>
                    </CombinedGeometry.Geometry2>
                  </CombinedGeometry>
                </Path.Data>
              </Path>
            </Canvas>
            <local:ChartContentPresenter Margin="5" x:Name="PART_Content" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" RenderTransformOrigin="0.5, 0.5">
              <local:ChartContentPresenter.RenderTransform>
                <RotateTransform x:Name="contentTransform" Angle="{Binding Angle, RelativeSource={RelativeSource TemplatedParent}}" />
              </local:ChartContentPresenter.RenderTransform>
            </local:ChartContentPresenter>
            <Grid RenderTransformOrigin="0.5, 0.5">
              <Grid.RenderTransform>
                <RotateTransform x:Name="interactivityTransform" Angle="{Binding Angle, RelativeSource={RelativeSource TemplatedParent}}" />
              </Grid.RenderTransform>
              <Grid Margin="-5,-5,0,0" Visibility="{Binding ResizeThumbVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                <Canvas HorizontalAlignment="Left" VerticalAlignment="Top" Margin="-1,-1,0,0">
                  <local:AnnotationResizeThumb Template="{DynamicResource {dxt:ChartControlThemeKey ResourceKey=AnnotationResizeThumbTemplate}}" Annotation="{Binding RelativeSource={RelativeSource TemplatedParent}}" Direction="LeftTop" AnnotationAngle="{TemplateBinding Angle}" />
                </Canvas>
                <Canvas HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-1,-1,0">
                  <local:AnnotationResizeThumb Template="{DynamicResource {dxt:ChartControlThemeKey ResourceKey=AnnotationResizeThumbTemplate}}" Annotation="{Binding RelativeSource={RelativeSource TemplatedParent}}" Direction="RightTop" AnnotationAngle="{TemplateBinding Angle}" />
                </Canvas>
                <Canvas HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,-1,-1">
                  <local:AnnotationResizeThumb Template="{DynamicResource {dxt:ChartControlThemeKey ResourceKey=AnnotationResizeThumbTemplate}}" Annotation="{Binding RelativeSource={RelativeSource TemplatedParent}}" Direction="RightBottom" AnnotationAngle="{TemplateBinding Angle}" />
                </Canvas>
                <Canvas HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="-1,0,0,-1">
                  <local:AnnotationResizeThumb Template="{DynamicResource {dxt:ChartControlThemeKey ResourceKey=AnnotationResizeThumbTemplate}}" Annotation="{Binding RelativeSource={RelativeSource TemplatedParent}}" Direction="LeftBottom" AnnotationAngle="{TemplateBinding Angle}" />
                </Canvas>
                <Canvas HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,-2,0,0">
                  <local:AnnotationResizeThumb Template="{DynamicResource {dxt:ChartControlThemeKey ResourceKey=AnnotationResizeThumbTemplate}}" Annotation="{Binding RelativeSource={RelativeSource TemplatedParent}}" Direction="CenterTop" AnnotationAngle="{TemplateBinding Angle}" />
                </Canvas>
                <Canvas HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,-1">
                  <local:AnnotationResizeThumb Template="{DynamicResource {dxt:ChartControlThemeKey ResourceKey=AnnotationResizeThumbTemplate}}" Annotation="{Binding RelativeSource={RelativeSource TemplatedParent}}" Direction="CenterBottom" AnnotationAngle="{TemplateBinding Angle}" />
                </Canvas>
                <Canvas HorizontalAlignment="Left" VerticalAlignment="Center" Margin="-2,0,0,0">
                  <local:AnnotationResizeThumb Template="{DynamicResource {dxt:ChartControlThemeKey ResourceKey=AnnotationResizeThumbTemplate}}" Annotation="{Binding RelativeSource={RelativeSource TemplatedParent}}" Direction="LeftCenter" AnnotationAngle="{TemplateBinding Angle}" />
                </Canvas>
                <Canvas HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,-1,0">
                  <local:AnnotationResizeThumb Template="{DynamicResource {dxt:ChartControlThemeKey ResourceKey=AnnotationResizeThumbTemplate}}" Annotation="{Binding RelativeSource={RelativeSource TemplatedParent}}" Direction="RightCenter" AnnotationAngle="{TemplateBinding Angle}" />
                </Canvas>
              </Grid>
              <Grid Margin="-10,-10,0,0">
                <Canvas HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,-32,0,0">
                  <local:AnnotationRotateThumb Template="{DynamicResource {dxt:ChartControlThemeKey ResourceKey=AnnotationRotateThumbTemplate}}" Background="Green" Width="24" Height="24" HorizontalAlignment="Left" VerticalAlignment="Top" Annotation="{Binding RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding RotateThumbVisibility, RelativeSource={RelativeSource TemplatedParent}}" />
                </Canvas>
              </Grid>
              <local:SelectionControl IsSelected="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectionInfo.IsSelected}" IsHighlighted="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectionInfo.IsHighlighted}" />
            </Grid>
            <Canvas>
              <local:AnnotationAnchorThumb Template="{DynamicResource {dxt:ChartControlThemeKey ResourceKey=AnnotationAnchorThumbTemplate}}" Margin="-5,-5,0,0" Background="Red" Width="24" Height="24" Annotation="{Binding RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding AnchorThumbVisibility, RelativeSource={RelativeSource TemplatedParent}}" Canvas.Left="{Binding AnchorThumbX, RelativeSource={RelativeSource TemplatedParent}}" Canvas.Top="{Binding AnchorThumbY, RelativeSource={RelativeSource TemplatedParent}}" />
            </Canvas>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.EditableTextContent}" TargetType="{x:Type local:EditableTextContent}">
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid>
            <TextBlock x:Name="PART_TextBlock" Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=EditModeEnabled, Converter={dx:BooleanToVisibilityConverter Invert=True}}" TextAlignment="Center" VerticalAlignment="Center" Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Text}" />
            <TextBox x:Name="PART_TextBox" AcceptsReturn="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Multiline}" TextWrapping="Wrap" Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=EditModeEnabled, Mode=TwoWay, Converter={dx:BooleanToVisibilityConverter}}" VerticalAlignment="Center" HorizontalAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" TextAlignment="Center" BorderThickness="0" Foreground="{Binding ElementName=PART_TextBlock, Path=Foreground}" Background="Transparent" Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Text, Mode=TwoWay}">
              <TextBox.Style>
                <Style>
                  <Style.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsVisible}" Value="true">
                      <Setter Property="FocusManager.FocusedElement" Value="{Binding RelativeSource={RelativeSource Mode=Self}}" />
                    </DataTrigger>
                  </Style.Triggers>
                  <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
                    <Setter.Value>
                      <DataTemplate>
                        <ContentControl>
                          <local:TextBoxFocusSelectionBehavior />
                        </ContentControl>
                      </DataTemplate>
                    </Setter.Value>
                  </Setter>
                </Style>
              </TextBox.Style>
            </TextBox>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.EditableImageContent}" TargetType="{x:Type local:EditableImageContent}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Image x:Name="PART_Image" Source="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ImageSource}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>