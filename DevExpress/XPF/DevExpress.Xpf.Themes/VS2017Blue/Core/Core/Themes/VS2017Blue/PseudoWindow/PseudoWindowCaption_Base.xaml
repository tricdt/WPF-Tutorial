<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:input="clr-namespace:System.Windows.Input;assembly=PresentationCore" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.VS2017Blue.v24.1;component/Core/Core/Themes/Generic/PseudoWindow.xaml" />
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.VS2017Blue.v24.1;component/Core/Core/Themes/UICore.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <!-- General -->
  <DataTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCaptionTemplate}">
    <dx:DXWindowSmartCenteringPanel HorizontalAlignment="Stretch">
      <TextBlock x:Name="PART_Text" FontWeight="Bold" Foreground="#FF1E1E1E" IsHitTestVisible="False" Margin="8" Text="{Binding Path=(dx:FloatingContainer.FloatingContainer).Caption, RelativeSource={RelativeSource AncestorType=ContentPresenter}}" TextTrimming="WordEllipsis" cs:id="TextBlock_0000" x:Uid="@Foreground=Foreground" />
    </dx:DXWindowSmartCenteringPanel>
    <DataTemplate.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Margin" Value="14" />
      </Trigger>
    </DataTemplate.Triggers>
  </DataTemplate>
  <!-- Icon -->
  <Style x:Key="{dxt:FloatingContainerThemeKey ResourceKey=DXWindowIconStyle}" TargetType="{x:Type Image}">
    <Setter Property="Margin" Value="8" />
    <Setter Property="Stretch" Value="None" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Margin" Value="14" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <!--VS2017Blue HeaderItem Style-->
  <Style x:Key="headerItemControlStyle" BasedOn="{StaticResource headerItemControlBaseStyle}" TargetType="{x:Type dx:HeaderItemControl}">
    <Setter Property="MinWidth" Value="46" />
    <Setter Property="MinHeight" Value="32" />
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="MinWidth" Value="44" />
        <Setter Property="MinHeight" Value="44" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <!--FLOATING CONTAINER HEADER ITEMS STYLES-->
  <!--HeaderButtonStyle-->
  <Style x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderButtonStyle}" BasedOn="{StaticResource ResourceKey=headerItemControlStyle}" TargetType="{x:Type dx:HeaderItemControl}">
    <Setter Property="Width" Value="46" />
    <Setter Property="Height" Value="32" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
  </Style>
  <!--HeaderCloseButtonStyle-->
  <Style x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderCloseButtonStyle}" BasedOn="{StaticResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderButtonStyle}}" TargetType="{x:Type dx:HeaderItemControl}">
    <Setter Property="TemplateProvider" Value="{Binding Path=(dx:HeaderItemControl.CloseTemplateProvider), RelativeSource={RelativeSource Self}}" />
  </Style>
  <!--THEMEDWINDOW HEADER ITEMS STYLES-->
  <!--HeaderButtonStyle-->
  <Style x:Key="{dxt:ThemedWindowHeaderItemsThemeKey ResourceKey=HeaderButtonStyle}" BasedOn="{StaticResource ResourceKey=headerItemControlStyle}" TargetType="{x:Type dx:HeaderItemControl}">
    <Setter Property="Width" Value="46" />
    <Setter Property="Height" Value="32" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
  </Style>
  <!--HeaderCloseButtonStyle-->
  <Style x:Key="{dxt:ThemedWindowHeaderItemsThemeKey ResourceKey=HeaderCloseButtonStyle}" BasedOn="{StaticResource ResourceKey={dxt:ThemedWindowHeaderItemsThemeKey ResourceKey=HeaderButtonStyle}}" TargetType="{x:Type dx:HeaderItemControl}"></Style>
</ResourceDictionary>