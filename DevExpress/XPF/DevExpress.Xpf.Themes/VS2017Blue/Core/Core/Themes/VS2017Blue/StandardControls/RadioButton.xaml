<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.VS2017Blue.v24.1;component/Core/Core/Themes/UICore.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <!-- General -->
  <Style x:Key="{dxt:DefaultStyleThemeKey FullName=System.Windows.Controls.RadioButton}" TargetType="{x:Type RadioButton}">
    <Setter Property="Background" Value="#FFFFFFFF" cs:id="Setter_0000" x:Uid="@Value=Editor.Background" />
    <Setter Property="BorderBrush" Value="#FF8E9BBC" cs:id="Setter_0001" x:Uid="@Value=Border" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Padding" Value="0,3,0,3" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RadioButton}">
          <Grid x:Name="Root" Background="Transparent" cs:id="Grid_0000">
            <Grid Margin="{TemplateBinding Padding}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <Grid x:Name="Field" Grid.Column="0" Grid.ColumnSpan="1" Height="14" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,1,0,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="14">
                <Border x:Name="IsDefault" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="14" />
                <Border x:Name="IsFocused" BorderBrush="#FFE5C365" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="14" Opacity="0" cs:id="Border_0001" x:Uid="@BorderBrush=Focused" />
                <Border x:Name="Checked" Background="#FF1E1E1E" CornerRadius="8" Margin="3" Visibility="Collapsed" cs:id="Border_0000" x:Uid="@Background=Foreground" />
              </Grid>
              <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Grid.ColumnSpan="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="4,0,0,0" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="InternalFocusStates">
                <VisualState x:Name="InternalFocused">
                  <Storyboard>
                    <DoubleAnimation Duration="0" Storyboard.TargetName="IsFocused" Storyboard.TargetProperty="Opacity" To="1" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="InternalUnfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" TargetName="Checked" Value="#FF1E1E1E" cs:id="Setter_0002" x:Uid="@Value=HoverForeground" />
              <Setter Property="Background" TargetName="IsDefault" Value="#FFFDF4BF" cs:id="Setter_0003" x:Uid="@Value=HoverBackground" />
              <Setter Property="BorderBrush" TargetName="IsDefault" Value="#FFE5C365" cs:id="Setter_0004" x:Uid="@Value=HoverBorder" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Background" TargetName="Checked" Value="#FF1E1E1E" cs:id="Setter_0005" x:Uid="@Value=SelectionForeground" />
              <Setter Property="Background" TargetName="IsDefault" Value="#FFFFF29D" cs:id="Setter_0006" x:Uid="@Value=SelectionBackground" />
              <Setter Property="BorderBrush" TargetName="IsDefault" Value="#FFE5C365" cs:id="Setter_0007" x:Uid="@Value=SelectionBorder" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
              <Setter Property="Background" TargetName="Checked" Value="#FF1E1E1E" cs:id="Setter_0008" x:Uid="@Value=Foreground" />
              <Setter Property="Background" TargetName="IsDefault" Value="#FFFFFFFF" cs:id="Setter_0009" x:Uid="@Value=Editor.Background" />
              <Setter Property="BorderBrush" TargetName="IsDefault" Value="#FFE5C365" cs:id="Setter_0010" x:Uid="@Value=Focused" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" Value="True" />
                <Condition Property="IsFocused" Value="True" />
              </MultiTrigger.Conditions>
              <Setter Property="Background" TargetName="Checked" Value="#FF1E1E1E" cs:id="Setter_0011" x:Uid="@Value=HoverForeground" />
              <Setter Property="Background" TargetName="IsDefault" Value="#FFFDF4BF" cs:id="Setter_0012" x:Uid="@Value=HoverBackground" />
              <Setter Property="BorderBrush" TargetName="IsDefault" Value="#FFE5C365" cs:id="Setter_0013" x:Uid="@Value=Focused" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsPressed" Value="True" />
                <Condition Property="IsFocused" Value="True" />
              </MultiTrigger.Conditions>
              <Setter Property="Background" TargetName="Checked" Value="#FF1E1E1E" cs:id="Setter_0014" x:Uid="@Value=SelectionForeground" />
              <Setter Property="Background" TargetName="IsDefault" Value="#FFFFF29D" cs:id="Setter_0015" x:Uid="@Value=SelectionBackground" />
              <Setter Property="BorderBrush" TargetName="IsDefault" Value="#FFE5C365" cs:id="Setter_0016" x:Uid="@Value=Focused" />
            </MultiTrigger>
            <Trigger Property="IsChecked" Value="True">
              <Setter Property="Visibility" TargetName="Checked" Value="Visible" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" TargetName="Root" Value="0.38" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
              <Setter Property="Height" TargetName="Checked" Value="16" />
              <Setter Property="Width" TargetName="Checked" Value="16" />
              <Setter Property="Height" TargetName="Field" Value="28" />
              <Setter Property="Width" TargetName="Field" Value="28" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="dxei:ControlHelper.ShowFocusedState" Value="{Binding IsFocused, RelativeSource={RelativeSource Self}}" />
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Padding" Value="0,13,0,13" />
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>