<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="Generic.Window.xaml" />
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.VS2017Blue.v24.1;component/Core/Core/TabControl/Themes/UICore.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <!-- Templates -->
  <DataTemplate x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=HeaderTemplate}" />
  <DataTemplate x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=BorderTemplate}">
    <Border x:Name="Root" Background="#FFD6DBE9" BorderBrush="#FF293955" BorderThickness="1" cs:id="Border_0001" x:Uid="@Background=Window.Background;BorderBrush=Backstage.Window.Background" />
    <DataTemplate.Triggers>
      <DataTrigger Binding="{Binding Path=(dx:FloatingContainer.IsActive)}" Value="False">
        <Setter Property="BorderBrush" TargetName="Root" Value="#FF8E9BBC" cs:id="Setter_0000" x:Uid="@Value=Border" />
      </DataTrigger>
    </DataTemplate.Triggers>
  </DataTemplate>
  <!-- Styles -->
  <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.DXTabbedWindow}" BasedOn="{StaticResource WindowDefaultStyle}" TargetType="{x:Type dx:DXTabbedWindow}">
    <Setter Property="Foreground" Value="#FF1E1E1E" cs:id="Setter_0000" x:Uid="@Value=Foreground" />
  </Style>
  <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=MainContainerStyle}" TargetType="Panel">
    <Setter Property="Margin" Value="1" />
  </Style>
  <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=CaptionPresenterStyle}" TargetType="ContentPresenter">
    <!--<Setter Property="Margin" Value="6,0,0,0" />-->
  </Style>
  <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=ContentBorderStyle}" TargetType="Border">
    <Setter Property="Margin" Value="6,0,6,6" />
  </Style>
  <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=ControlContainerStyle}" BasedOn="{StaticResource DefaultButtonContainerStyle}" TargetType="ItemsControl" />
  <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=ButtonContainerStyle}" BasedOn="{StaticResource DefaultButtonContainerStyle}" TargetType="ItemsControl">
    <!--<Setter Property="Margin" Value="0,0,6,6" />-->
  </Style>
  <Style x:Key="WindowButtonStyle" BasedOn="{StaticResource WindowButtonDefaultStyle}" TargetType="Button">
    <Setter Property="Height" Value="16" />
    <Setter Property="Width" Value="16" />
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="MinHeight" Value="44" />
        <Setter Property="MinWidth" Value="44" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <!-- Buttons -->
  <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=MinimizeButtonStyle}" BasedOn="{StaticResource WindowButtonStyle}" TargetType="{x:Type Button}" />
  <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=RestoreButtonStyle}" BasedOn="{StaticResource WindowButtonStyle}" TargetType="{x:Type Button}" />
  <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=MaximizeButtonStyle}" BasedOn="{StaticResource WindowButtonStyle}" TargetType="{x:Type Button}" />
  <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=CloseButtonStyle}" BasedOn="{StaticResource WindowButtonStyle}" TargetType="{x:Type Button}" />
</ResourceDictionary>