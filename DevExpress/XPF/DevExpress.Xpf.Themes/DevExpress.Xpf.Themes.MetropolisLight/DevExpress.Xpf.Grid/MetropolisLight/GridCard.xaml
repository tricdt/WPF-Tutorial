<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
  <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ExpandButtonTemplate}" TargetType="{x:Type dx:ToggleStateButton}">
    <Grid Background="#00000000" Height="14" SnapsToDevicePixels="True" Width="14">
      <Path x:Name="GlyphExpanded" Data="F1 M 227,30.4999C 227,26.91 224.09,24 220.5,24C 216.91,24 214,26.91 214,30.4999C 214,34.0897 216.91,36.9999 220.5,36.9999C 224.09,36.9999 227,34.0897 227,30.4999 Z M 226,30.5001C 226,33.5377 223.537,36.0001 220.5,36.0001C 217.462,36.0001 215,33.5377 215,30.5001C 215,27.4625 217.462,25.0001 220.5,25.0001C 223.537,25.0001 226,27.4625 226,30.5001 Z M 220,33.9999L 220,33.9999L 221,33.9999L 221,33.9999L 224,30.9999L 224,28.9999L 221,31.9999L 221,26.9999L 220,26.9999L 220,31.9999L 217,28.9999L 217,30.9999L 220,33.9999 Z " Fill="#FFFFFFFF" Height="13" Stretch="Fill" Width="13" />
      <Path x:Name="GlyphCollapsed" Data="F1 M 227,16.5C 227,20.0898 224.09,22.9999 220.5,22.9999C 216.91,22.9999 214,20.0898 214,16.5C 214,12.9102 216.91,10 220.5,10C 224.09,10 227,12.9102 227,16.5 Z M 226,16.4999C 226,13.4623 223.537,10.9999 220.5,10.9999C 217.462,10.9999 215,13.4623 215,16.4999C 215,19.5374 217.462,21.9998 220.5,21.9998C 223.537,21.9998 226,19.5374 226,16.4999 Z M 220,13L 220,13L 221,13L 221,13.0001L 224,16L 224,18L 221,15L 221,20L 220,20L 220,15L 217,18L 217,16L 220,13 Z " Fill="#FFFFFFFF" Height="13" Stretch="Fill" Visibility="Collapsed" Width="13" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Fill" TargetName="GlyphCollapsed" Value="#FFFFFFFF" />
        <Setter Property="Fill" TargetName="GlyphExpanded" Value="#FFFFFFFF" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Fill" TargetName="GlyphCollapsed" Value="#FFFFFFFF" />
        <Setter Property="Fill" TargetName="GlyphExpanded" Value="#FFFFFFFF" />
      </Trigger>
      <DataTrigger Binding="{Binding Path=SelectionState}" Value="Selected">
        <Setter Property="Fill" TargetName="GlyphCollapsed" Value="#FFFFFFFF" />
        <Setter Property="Fill" TargetName="GlyphExpanded" Value="#FFFFFFFF" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=SelectionState}" Value="Focused">
        <Setter Property="Fill" TargetName="GlyphCollapsed" Value="#FFFFFFFF" />
        <Setter Property="Fill" TargetName="GlyphExpanded" Value="#FFFFFFFF" />
      </DataTrigger>
      <Trigger Property="IsChecked" Value="False">
        <Setter Property="Visibility" TargetName="GlyphCollapsed" Value="Visible" />
        <Setter Property="Visibility" TargetName="GlyphExpanded" Value="Hidden" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{dxgt:CardTemplatesThemeKey ResourceKey=CardStyle}" TargetType="{x:Type ContentControl}">
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Style.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
          <Condition Property="dxg:GridViewBase.IsFocusedRow" Value="False" />
        </MultiTrigger.Conditions>
      </MultiTrigger>
      <Trigger Property="dxg:GridViewBase.IsFocusedRow" Value="True" />
    </Style.Triggers>
  </Style>
  <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ContainerTemplate}" TargetType="{x:Type ContentControl}">
    <Grid x:Name="Root">
      <Border x:Name="Focus" BorderBrush="#FFF78A09" BorderThickness="1" Margin="-2" Opacity="0" />
      <Border x:Name="Border" Grid.RowSpan="1">
        <ContentPresenter />
      </Border>
    </Grid>
    <ControlTemplate.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
          <Condition Property="dxg:GridViewBase.IsFocusedRow" Value="False" />
        </MultiTrigger.Conditions>
      </MultiTrigger>
      <Trigger Property="dxg:GridViewBase.IsFocusedRow" Value="True">
        <Setter Property="Background" TargetName="Border" Value="#FFFFFFFF" />
        <Setter Property="Opacity" TargetName="Focus" Value="1" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{dxgt:GridCardThemeKey ResourceKey=HeaderPresenterStyle}" TargetType="{x:Type dxg:GridCardHeaderContentPresenter}">
    <Setter Property="VerticalAlignment" Value="Center" />
  </Style>
  <Style x:Key="{dxgt:GridCardThemeKey ResourceKey=ContentExpandButtonStyle}" TargetType="{x:Type dxg:GridCardExpandButton}">
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="Margin" Value="0,0,4,0" />
  </Style>
  <Style x:Key="{dxgt:GridCardThemeKey ResourceKey=ContentPresenterStyle}" TargetType="{x:Type dxg:GridCardContentPresenter}">
    <Setter Property="Margin" Value="11" />
  </Style>
  <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=HeaderContentTemplate}" TargetType="{x:Type ContentControl}">
    <ContentPresenter Margin="11,3,11,3" />
  </ControlTemplate>
  <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ExpanderContentTemplate}" TargetType="{x:Type ContentControl}">
    <ContentPresenter />
  </ControlTemplate>
  <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=DataContentTemplate}" TargetType="{x:Type ContentControl}">
    <Border x:Name="Root" Background="#FFFFFFFF" BorderBrush="#FFB9B9B9" BorderThickness="1,0,1,1">
      <ContentPresenter />
    </Border>
    <ControlTemplate.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
          <Condition Property="dxg:GridViewBase.IsFocusedRow" Value="False" />
        </MultiTrigger.Conditions>
      </MultiTrigger>
      <DataTrigger Binding="{Binding Path=(dxg:RowData.RowData).SelectionState, RelativeSource={RelativeSource TemplatedParent}}" Value="Focused">
        <Setter Property="BorderBrush" TargetName="Root" Value="#FFFFFFFF" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=(dxg:RowData.RowData).SelectionState, RelativeSource={RelativeSource TemplatedParent}}" Value="Selected">
        <Setter Property="BorderBrush" TargetName="Root" Value="#FFB9B9B9" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=IsExpanded}" Value="False" />
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=HeaderPanelTemplate}" TargetType="{x:Type ContentControl}">
    <Grid Background="#FFF78A09">
      <Border x:Name="Root" Background="#FFB9B9B9" BorderBrush="#FFB9B9B9" BorderThickness="1,1,1,0" />
      <ContentPresenter />
    </Grid>
    <ControlTemplate.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
          <Condition Property="dxg:GridViewBase.IsFocusedRow" Value="False" />
        </MultiTrigger.Conditions>
      </MultiTrigger>
      <DataTrigger Binding="{Binding Path=(dxg:RowData.RowData).SelectionState, RelativeSource={RelativeSource TemplatedParent}}" Value="Focused">
        <Setter Property="Background" TargetName="Root" Value="#FFF78A09" />
        <Setter Property="BorderBrush" TargetName="Root" Value="#FFF78A09" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=(dxg:RowData.RowData).SelectionState, RelativeSource={RelativeSource TemplatedParent}}" Value="Selected">
        <Setter Property="Background" TargetName="Root" Value="#FFF78A09" />
        <Setter Property="BorderBrush" TargetName="Root" Value="#FFF78A09" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=IsExpanded}" Value="False">
        <Setter Property="BorderThickness" TargetName="Root" Value="1" />
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ControlTemplate}">
    <ContentControl x:Name="card" Style="{Binding Path=(dxg:GridControl.ActiveView).CardStyle, RelativeSource={RelativeSource TemplatedParent}}" Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ContainerTemplate}}">
      <Grid>
        <dxg:GridCardPanel x:Name="gridCardPanel" IsExpanded="{Binding Path=IsExpanded}">
          <dxg:GridCardPanel.Header>
            <dxg:GridCardHeaderControl x:Name="cardHeader" Foreground="#FFFFFFFF">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ContentControl Grid.Column="0" Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=HeaderContentTemplate}}">
                  <dxg:GridCardHeaderContentPresenter Style="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=HeaderPresenterStyle}}" />
                </ContentControl>
                <ContentControl Grid.Column="1" Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ExpanderContentTemplate}}" Visibility="{Binding Path=View.ShowCardExpandButton, Converter={StaticResource BoolToVisibilityConverter}}">
                  <dxg:GridCardExpandButton Style="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ContentExpandButtonStyle}}" />
                </ContentControl>
              </Grid>
            </dxg:GridCardHeaderControl>
          </dxg:GridCardPanel.Header>
          <dxg:GridCardPanel.Body>
            <ContentControl Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=DataContentTemplate}}">
              <dxg:GridCardContentPresenter x:Name="presenter" Style="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ContentPresenterStyle}}" />
            </ContentControl>
          </dxg:GridCardPanel.Body>
        </dxg:GridCardPanel>
      </Grid>
    </ContentControl>
    <ControlTemplate.Triggers>
      <DataTrigger Binding="{Binding Path=View.CollapsedCardOrientation}" Value="Vertical">
        <Setter Property="RotateOnCollapse" TargetName="gridCardPanel" Value="True" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=SelectionState}" Value="Selected">
        <Setter Property="Foreground" TargetName="cardHeader" Value="#FFFFFFFF" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=SelectionState}" Value="Focused">
        <Setter Property="Foreground" TargetName="cardHeader" Value="#FFFFFFFF" />
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="LoadingIndicator" TargetType="{x:Type ProgressBar}">
    <Grid x:Name="Root">
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Determinate" />
          <VisualState x:Name="Indeterminate">
            <Storyboard RepeatBehavior="Forever">
              <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Ellipse1" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0.38" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.26" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.26" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.38" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.62" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0.62" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Ellipse2" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0.62" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.38" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.26" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.26" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.38" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.62" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="1" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Ellipse3" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.62" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.38" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.26" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.26" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.38" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0.62" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="1" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Ellipse4" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.62" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.38" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.26" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.26" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0.38" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="0.62" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="1" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Ellipse5" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.62" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.38" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.26" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0.26" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="0.38" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0.62" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Grid>
        <StackPanel Orientation="Horizontal">
          <Ellipse x:Name="Ellipse1" Fill="{TemplateBinding Foreground}" Height="5" Margin="2" Width="5" />
          <Ellipse x:Name="Ellipse2" Fill="{TemplateBinding Foreground}" Height="5" Margin="2" Width="5" />
          <Ellipse x:Name="Ellipse3" Fill="{TemplateBinding Foreground}" Height="5" Margin="2" Width="5" />
          <Ellipse x:Name="Ellipse4" Fill="{TemplateBinding Foreground}" Height="5" Margin="2" Width="5" />
          <Ellipse x:Name="Ellipse5" Fill="{TemplateBinding Foreground}" Height="5" Margin="2" Width="5" />
        </StackPanel>
      </Grid>
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=LoadingCardTemplate}" TargetType="dxg:LoadingCardControl">
    <Grid x:Name="Root" Margin="1" MinHeight="216" MinWidth="216">
      <ProgressBar x:Name="Indicator" Foreground="#FFF78A09" HorizontalAlignment="Center" IsIndeterminate="{Binding ShowLoadingIndicator}" Template="{StaticResource LoadingIndicator}" VerticalAlignment="Center" Visibility="{Binding ShowLoadingIndicator, Converter={StaticResource BoolToVisibilityConverter}}" />
      <dxg:LoadingRowButton Click="{DXEvent 'LoadMoreRows()'}" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding AllowLoadMore, Converter={StaticResource BoolToVisibilityConverter}}">
        <StackPanel Margin="15,0,9,1" Orientation="Horizontal">
          <Label Content="{dxg:GridControlStringId LoadingRowLoadMore}" />
          <Grid Height="16" Margin="3" Width="16">
            <Path Data="F1 M 10,5L 5,10L 0,5L 3,5L 3,3L 7,3L 7,5L 10,5 Z M 3,2L 3,0L 7,0L 7,2L 3,2 Z " Fill="#FF666666" Height="10" HorizontalAlignment="Stretch" Margin="0,1,0,0" Stretch="Fill" VerticalAlignment="Stretch" Width="10" />
          </Grid>
        </StackPanel>
      </dxg:LoadingRowButton>
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=LoadingCardErrorTemplate}" TargetType="dxg:LoadingCardControl">
    <Grid x:Name="Root" Margin="1" MinHeight="216" MinWidth="216">
      <Grid HorizontalAlignment="Center" Margin="12,0,12,0" MaxWidth="216" VerticalAlignment="Center">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Path Data="F1 M 7,0C 10.866,0 14,3.13401 14,7C 14,10.866 10.866,14 7,14C 3.13401,14 -6.35783e-007,10.866 -6.35783e-007,7C -6.35783e-007,3.13401 3.13401,0 7,0 Z M 2.75736,4.17157L 5.58579,7L 2.75736,9.82843L 4.17157,11.2426L 7,8.41422L 9.82843,11.2426L 11.2426,9.82843L 8.41421,7L 11.2426,4.17157L 9.82843,2.75736L 7,5.58579L 4.17157,2.75736L 2.75736,4.17157 Z " Fill="#FFCC0000" Height="14" HorizontalAlignment="Center" Margin="4" Stretch="Fill" VerticalAlignment="Top" Width="14" />
        <StackPanel Grid.Column="1" Orientation="Vertical">
          <TextBlock HorizontalAlignment="Left" Margin="4,3,4,3" Text="{Binding ErrorText}" TextWrapping="Wrap" />
          <TextBlock HorizontalAlignment="Center" Visibility="{Binding IsLoadingButtonVisible, Converter={StaticResource BoolToVisibilityConverter}}">
            <dxe:HyperlinkEdit Command="{Binding LoadRowsCommand}" Text="{Binding LoadingButtonText}" />
          </TextBlock>
        </StackPanel>
      </Grid>
    </Grid>
  </ControlTemplate>
</ResourceDictionary>