<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon" xmlns:dxri="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/internal" xmlns:dxrt="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <sys:Boolean x:Key="{dxrt:BackstageThemeKey ResourceKey=DisableDefaultBackgroundGlyph}">True</sys:Boolean>
  <sys:Boolean x:Key="{dxrt:BackstageThemeKey ResourceKey=IsFullScreen}">False</sys:Boolean>
  <sys:Boolean x:Key="{dxrt:BackstageThemeKey ResourceKey=EnableWindowTitleShrink}">False</sys:Boolean>
  <Color x:Key="colorDefault">#BFFFFFFF</Color>
  <Color x:Key="colorHover">#FFFFFFFF</Color>
  <Color x:Key="colorPressed">#FFFFFFFF</Color>
  <Color x:Key="colorDisabled">#FFB9B9B9</Color>
  <SolidColorBrush x:Key="ellipseFillDefault" Color="#00515151" />
  <SolidColorBrush x:Key="ellipseFillHover" Color="#FFB9B9B9" />
  <SolidColorBrush x:Key="ellipseFillPressed" Color="#FFB9B9B9" />
  <SolidColorBrush x:Key="ellipseStrokeDefault" Color="#BFFFFFFF" />
  <SolidColorBrush x:Key="ellipseStrokeHover" Color="#FFFFFFFF" />
  <SolidColorBrush x:Key="ellipseStrokePressed" Color="#FFFFFFFF" />
  <SolidColorBrush x:Key="pathColorDefault" Color="{StaticResource colorDefault}" />
  <SolidColorBrush x:Key="pathColorHover" Color="{StaticResource colorHover}" />
  <SolidColorBrush x:Key="pathColorPressed" Color="{StaticResource colorPressed}" />
  <SolidColorBrush x:Key="brushDisabled" Color="{StaticResource colorDisabled}" />
  <ControlTemplate x:Key="{dxrt:BackstageThemeKey ResourceKey=BackgroundTemplate}" TargetType="{x:Type ContentControl}">
    <Border Background="#FFFFFFFF" />
  </ControlTemplate>
  <ControlTemplate x:Key="{dxrt:BackstageThemeKey ResourceKey=TabPaneTemplate}" TargetType="{x:Type ContentControl}">
    <Border>
      <ContentPresenter />
    </Border>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxrt:BackstageThemeKey ResourceKey=HeaderAndButtonsBackground}"></ControlTemplate>
  <ControlTemplate x:Key="{dxrt:BackstageThemeKey ResourceKey=LeftPartBackground}" TargetType="{x:Type Control}">
    <Border Background="#FFB9B9B9" Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
  </ControlTemplate>
  <Style x:Key="{dxrt:BackstageThemeKey ResourceKey=ControlBoxContainerStyle}" TargetType="{x:Type dxri:RibbonControlBoxContainer}">
    <Setter Property="Margin" Value="0,0,1,0" />
  </Style>
  <Style x:Key="{dxrt:BackstageThemeKey ResourceKey=HeaderPresenterStyle}" TargetType="{x:Type dxri:BackstageViewHeaderPresenter}">
    <Setter Property="Margin" Value="0,10,0,0" />
  </Style>
  <Style x:Key="{dxrt:BackstageThemeKey ResourceKey=BackstageViewBackGlyphTemplate}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
    <Setter Property="Height" Value="50" />
    <Setter Property="Width" Value="50" />
    <Setter Property="Margin" Value="16,16,16,14" />
    <Setter Property="dxr:BackstageViewContentHost.AnimationTime" Value="00:00:00.2" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
          <Grid Height="36" SnapsToDevicePixels="True" Width="36">
            <Ellipse x:Name="border" Fill="{StaticResource ellipseFillDefault}" Stroke="{StaticResource ellipseStrokeDefault}" StrokeThickness="2" UseLayoutRounding="True" />
            <Path x:Name="content" Data="F1 M 0,9L 9,0L 12,5.72205e-006L 4,8L 20,8L 20,10L 4,10L 12,18L 9,18L 0,9 Z " Fill="{StaticResource pathColorDefault}" Height="18" Stretch="Fill" Width="20" />
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Hover">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="Stroke">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ellipseStrokeHover}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ellipseFillHover}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="content" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource pathColorHover}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="Stroke">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ellipseStrokePressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ellipseFillPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="content" Storyboard.TargetProperty="Fill">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource pathColorPressed}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard></Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="{dxrt:BackstageThemeKey ResourceKey=ControlPaneTemplate}" TargetType="{x:Type ContentControl}">
    <ContentPresenter />
  </ControlTemplate>
  <Style x:Key="{dxrt:BackstageThemeKey ResourceKey=BackgroundGlyphStyle}" TargetType="{x:Type Image}">
    <Setter Property="HorizontalAlignment" Value="Right" />
    <Setter Property="VerticalAlignment" Value="Bottom" />
    <Setter Property="Stretch" Value="None" />
  </Style>
  <SolidColorBrush x:Key="{dxrt:BackstageThemeKey ResourceKey=Foreground}" Color="#FF373A3D" />
  <Style x:Key="{dxrt:BackstageThemeKey ResourceKey=BackgroundStyle}" TargetType="{x:Type ContentControl}">
    <Setter Property="Template" Value="{DynamicResource {dxrt:BackstageThemeKey ResourceKey=BackgroundTemplate}}" />
  </Style>
  <Style x:Key="{dxrt:BackstageThemeKey ResourceKey=TabPaneStyle}" TargetType="{x:Type ContentControl}">
    <Setter Property="Template" Value="{DynamicResource {dxrt:BackstageThemeKey ResourceKey=TabPaneTemplate}}" />
  </Style>
  <Style x:Key="{dxrt:BackstageThemeKey ResourceKey=ControlPaneStyle}" TargetType="{x:Type ContentControl}">
    <Setter Property="Template" Value="{DynamicResource {dxrt:BackstageThemeKey ResourceKey=ControlPaneTemplate}}" />
  </Style>
  <Style x:Key="{dxrt:BackstageThemeKey ResourceKey=ItemsPresenterStyle}" TargetType="{x:Type ItemsPresenter}">
    <Setter Property="Margin" Value="0,1,0,1" />
  </Style>
</ResourceDictionary>