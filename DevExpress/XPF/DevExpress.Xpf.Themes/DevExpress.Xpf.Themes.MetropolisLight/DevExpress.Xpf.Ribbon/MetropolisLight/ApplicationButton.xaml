<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon" xmlns:dxrt="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <dx:NullableToVisibilityConverter x:Key="converter" />
  <dx:NullableToVisibilityConverter x:Key="invertedConverter" Invert="True" />
  <Style x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=Style2007}" TargetType="{x:Type ContentControl}">
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="Margin" Value="0,16,8,8" />
  </Style>
  <Style x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=Style2007InPopup}" TargetType="{x:Type ContentControl}">
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Top" />
  </Style>
  <Style x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=Style2010}" TargetType="{x:Type ContentControl}">
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Bottom" />
    <Setter Property="Margin" Value="0,0,1,0" />
  </Style>
  <Style x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=Style2010InPopup}" TargetType="{x:Type ContentControl}">
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Bottom" />
  </Style>
  <Style x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=StyleTabletOffice}" TargetType="{x:Type ContentControl}">
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Center" />
  </Style>
  <Style x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=StyleTabletOfficeInPopup}" TargetType="{x:Type ContentControl}">
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Center" />
  </Style>
  <Style x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=StyleOfficeSlim}" TargetType="{x:Type ContentControl}">
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="VerticalAlignment" Value="Bottom" />
  </Style>
  <Style x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=StyleOfficeSlimInPopup}" TargetType="{x:Type ContentControl}">
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="VerticalAlignment" Value="Bottom" />
  </Style>
  <Style x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=NormalTextStyle}" TargetType="{x:Type ContentControl}">
    <Setter Property="Foreground" Value="#FF444444" />
    <Setter Property="Margin" Value="2" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Center" />
  </Style>
  <Style x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=SelectedTextStyle}" TargetType="{x:Type ContentControl}">
    <Setter Property="Foreground" Value="#FFFFFFFF" />
    <Setter Property="Margin" Value="2" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Center" />
  </Style>
  <Style x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=PressedTextStyle}" TargetType="{x:Type ContentControl}">
    <Setter Property="Foreground" Value="#FF444444" />
    <Setter Property="Margin" Value="2" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Center" />
  </Style>
  <Style x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=CheckedTextStyle}" TargetType="{x:Type ContentControl}">
    <Setter Property="Foreground" Value="#FFFFFFFF" />
    <Setter Property="Margin" Value="2" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Center" />
  </Style>
  <ControlTemplate x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=BorderTemplate2007}" TargetType="{x:Type ContentControl}">
    <Grid Background="#00000000" Height="46" Width="46">
      <Path x:Name="Glyph" Data="F1 M 220,233C 232.702,233 243,243.297 243,256C 243,268.702 232.703,279 220,279C 207.298,279 197,268.702 197,256C 197,243.297 207.298,233 220,233 Z M 220,236C 208.955,236 200,244.954 200,256C 200,267.046 208.955,276 220,276C 231.046,276 240,267.046 240,256C 240,244.954 231.046,236 220,236 Z M 218,244L 222,244L 222,263L 231,254L 231,259L 222,268L 221,269L 219,269L 218,268L 209,259L 209,254L 218,263L 218,244 Z " Fill="#FFB9B9B9" Stretch="Fill" Visibility="{Binding Path=Ribbon.ApplicationButtonLargeIcon, Converter={StaticResource invertedConverter}}" />
      <Border x:Name="bor" BorderBrush="#FFE3E3E3" BorderThickness="3" CornerRadius="64" Visibility="{Binding Path=Ribbon.ApplicationButtonLargeIcon, Converter={StaticResource converter}}">
        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
      </Border>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="Glyph" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FF373A3D" />
              <ColorAnimation Duration="0" Storyboard.TargetName="bor" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#FFE3E3E3" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Checked">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="Glyph" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFF78A09" />
              <ColorAnimation Duration="0" Storyboard.TargetName="bor" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#FFF78A09" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Hover">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="Glyph" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFF78A09" />
              <ColorAnimation Duration="0" Storyboard.TargetName="bor" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#FFF78A09" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Focused">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="Glyph" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFF78A09" />
              <ColorAnimation Duration="0" Storyboard.TargetName="bor" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#FFF78A09" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=BorderTemplate2007InPopup}" TargetType="{x:Type ContentControl}">
    <Grid Background="Transparent" Height="46" Width="46">
      <Path x:Name="Glyph" Data="F1 M 220,233C 232.702,233 243,243.297 243,256C 243,268.702 232.703,279 220,279C 207.298,279 197,268.702 197,256C 197,243.297 207.298,233 220,233 Z M 220,236C 208.955,236 200,244.954 200,256C 200,267.046 208.955,276 220,276C 231.046,276 240,267.046 240,256C 240,244.954 231.046,236 220,236 Z M 218,244L 222,244L 222,263L 231,254L 231,259L 222,268L 221,269L 219,269L 218,268L 209,259L 209,254L 218,263L 218,244 Z " Fill="#FFB9B9B9" Stretch="Fill" Visibility="{Binding Path=Ribbon.ApplicationButtonLargeIcon, Converter={StaticResource invertedConverter}}" />
      <Border x:Name="bor" BorderBrush="#FFE3E3E3" BorderThickness="3" CornerRadius="64" Visibility="{Binding Path=Ribbon.ApplicationButtonLargeIcon, Converter={StaticResource converter}}">
        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
      </Border>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="Glyph" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FF373A3D" />
              <ColorAnimation Duration="0" Storyboard.TargetName="bor" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#FFE3E3E3" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Checked">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="Glyph" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFF78A09" />
              <ColorAnimation Duration="0" Storyboard.TargetName="bor" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#FFF78A09" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Hover">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="Glyph" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFF78A09" />
              <ColorAnimation Duration="0" Storyboard.TargetName="bor" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#FFF78A09" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Focused">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="Glyph" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFF78A09" />
              <ColorAnimation Duration="0" Storyboard.TargetName="bor" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#FFF78A09" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=BorderTemplate2010}" TargetType="{x:Type ContentControl}">
    <Grid MinHeight="21" MinWidth="60">
      <Grid x:Name="NormalState" Opacity="0">
        <Border Background="#FFF78A09" BorderBrush="#FFF78A09" BorderThickness="1,1,1,0" />
      </Grid>
      <Grid x:Name="HoverState" Opacity="0">
        <Border Background="#FFB9B9B9" />
      </Grid>
      <Grid x:Name="CheckedState" Opacity="0">
        <Border Background="#FFB9B9B9" />
      </Grid>
      <ContentPresenter HorizontalAlignment="Center" Margin="8,1,8,1" VerticalAlignment="Center" />
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="NormalState" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Checked">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="CheckedState" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Hover">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="HoverState" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Focused">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="HoverState" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=BorderTemplate2010InPopup}" TargetType="{x:Type ContentControl}">
    <Grid MinHeight="23" MinWidth="60">
      <Border Background="#FFF78A09" BorderBrush="#FFF78A09" BorderThickness="1" />
      <ContentPresenter HorizontalAlignment="Center" Margin="8,-1,8,1" VerticalAlignment="Center" />
    </Grid>
  </ControlTemplate>
  <!--TabletOffice-->
  <ControlTemplate x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=BorderTemplateTablet}" TargetType="{x:Type ContentControl}">
    <Grid Background="Transparent" Margin="4,4,2,4">
      <Path x:Name="path" Data="F1 M 8,0C 12.4183,0 16,3.58172 16,8C 16,12.4183 12.4183,16 8,16C 3.58172,16 -6.35783e-007,12.4183 -6.35783e-007,8C -6.35783e-007,3.58172 3.58172,0 8,0 Z M 2,8L 7,13L 10,13L 6,9L 13,9L 13,7L 5.8984,7L 10,3L 7,3L 2,8 Z " Fill="#FFF78A09" Height="16" HorizontalAlignment="Stretch" Opacity="0.8" Stretch="Fill" VerticalAlignment="Stretch" Width="16" />
      <dx:DXImage x:Name="image" HorizontalAlignment="Center" Source="{Binding Path=(dxr:RibbonControl.Ribbon).ActualApplicationButtonSmallIcon, RelativeSource={RelativeSource Self}}" Stretch="None" VerticalAlignment="Center" Visibility="Collapsed" />
    </Grid>
    <ControlTemplate.Triggers>
      <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(dxr:RibbonControl.Ribbon).ActualApplicationButtonSmallIcon, Converter={dxmvvm:ObjectToBooleanConverter}}" Value="True">
        <Setter Property="Visibility" TargetName="path" Value="Collapsed" />
        <Setter Property="Visibility" TargetName="image" Value="Visible" />
      </DataTrigger>
      <Trigger Property="IsMouseOver" Value="true">
        <Setter Property="Opacity" TargetName="image" Value="1" />
        <Setter Property="Opacity" TargetName="path" Value="1" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=BorderTemplateTabletInPopup}" TargetType="{x:Type ContentControl}">
    <Grid Background="Transparent" Margin="4,4,2,4">
      <Path x:Name="path" Data="F1 M 8,0C 12.4183,0 16,3.58172 16,8C 16,12.4183 12.4183,16 8,16C 3.58172,16 -6.35783e-007,12.4183 -6.35783e-007,8C -6.35783e-007,3.58172 3.58172,0 8,0 Z M 2,8L 7,13L 10,13L 6,9L 13,9L 13,7L 5.8984,7L 10,3L 7,3L 2,8 Z " Fill="#FFF78A09" Height="16" HorizontalAlignment="Stretch" Opacity="0.8" Stretch="Fill" VerticalAlignment="Stretch" Width="16" />
      <dx:DXImage x:Name="image" HorizontalAlignment="Center" Source="{Binding Path=(dxr:RibbonControl.Ribbon).ActualApplicationButtonSmallIcon, RelativeSource={RelativeSource Self}}" Stretch="None" VerticalAlignment="Center" Visibility="Collapsed" />
    </Grid>
    <ControlTemplate.Triggers>
      <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(dxr:RibbonControl.Ribbon).ActualApplicationButtonSmallIcon, Converter={dxmvvm:ObjectToBooleanConverter}}" Value="True">
        <Setter Property="Visibility" TargetName="path" Value="Collapsed" />
        <Setter Property="Visibility" TargetName="image" Value="Visible" />
      </DataTrigger>
      <Trigger Property="IsMouseOver" Value="true">
        <Setter Property="Opacity" TargetName="image" Value="1" />
        <Setter Property="Opacity" TargetName="path" Value="1" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <!--OfficeSlim-->
  <ControlTemplate x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=BorderTemplateOfficeSlim}" TargetType="{x:Type ContentControl}">
    <Grid MinHeight="21" MinWidth="60">
      <Grid x:Name="NormalState" Opacity="0">
        <Border Background="#FFF0F0F0" BorderBrush="#FFB9B9B9" BorderThickness="1,1,1,0" />
      </Grid>
      <Grid x:Name="HoverState" Opacity="0">
        <Border Background="#FFF78A09" />
      </Grid>
      <Grid x:Name="CheckedState" Opacity="0">
        <Border Background="#FFB9B9B9" />
      </Grid>
      <ContentPresenter HorizontalAlignment="Center" Margin="8,1,8,1" VerticalAlignment="Center" />
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="NormalState" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Checked">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="CheckedState" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Hover">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="HoverState" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Focused">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="HoverState" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=BorderTemplateOfficeSlimInPopup}" TargetType="{x:Type ContentControl}">
    <Grid>
      <Border Background="#FFB9B9B9" Margin="1,0,0,0" MinHeight="24" MinWidth="60" />
      <ContentPresenter HorizontalAlignment="Center" Margin="7,-1,8,1" VerticalAlignment="Center" />
    </Grid>
  </ControlTemplate>
  <!--BEGIN WPF-->
  <Style x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=Style2007InAeroWindow}" TargetType="{x:Type ContentControl}">
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="Margin" Value="5,8,5,0" />
  </Style>
  <!--END WPF-->
</ResourceDictionary>