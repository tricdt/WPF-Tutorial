<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxn="http://schemas.devexpress.com/winfx/2008/xaml/navbar" xmlns:dxnt="http://schemas.devexpress.com/winfx/2008/xaml/navbar/themekeys" xmlns:interop="clr-namespace:System.Windows.Interop;assembly=PresentationFramework" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <!--END WPF-->
  <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
  <dx:BoolToVisibilityInverseConverter x:Key="BoolToVisibilityInverseConverter" />
  <dxn:BooleanToOpacityConverter x:Key="BooleanToOpacityConverter" />
  <Style x:Key="{dxnt:NavigationPaneHeaderThemeKey ResourceKey=OverflowButtonHeaderStyle}" TargetType="dx:XPFContentPresenter">
    <Setter Property="dxn:NavBarViewBase.ImageSettings" Value="{Binding ActualImageSettings}" />
    <Setter Property="dxn:NavBarViewBase.LayoutSettings" Value="{Binding ActualLayoutSettings}" />
    <Setter Property="dxn:NavBarViewBase.DisplayMode" Value="{Binding ActualDisplayMode}" />
  </Style>
  <Style x:Key="{dxnt:NavigationPaneHeaderThemeKey ResourceKey=GroupButtonHeaderStyle}" TargetType="dx:XPFContentPresenter">
    <Setter Property="dxn:NavBarViewBase.ImageSettings" Value="{Binding ActualImageSettings}" />
    <Setter Property="dxn:NavBarViewBase.LayoutSettings" Value="{Binding ActualLayoutSettings}" />
    <Setter Property="dxn:NavBarViewBase.DisplayMode" Value="{Binding ActualDisplayMode}" />
  </Style>
  <ControlTemplate x:Key="{dxnt:NavigationPanePopupThemeKey ResourceKey=ScrollUpButtonTemplate}" TargetType="dxn:NavBarRepeatButton">
    <dx:LayoutTransformPanel Orientation="{TemplateBinding ItemsPanelOrientation}">
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup Name="CommonStates">
          <VisualState Name="Normal" />
          <VisualState Name="MouseOver">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="Glyph" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFB9B9B9" />
            </Storyboard>
          </VisualState>
          <VisualState Name="Pressed">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="Glyph" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFE0E0E0" />
            </Storyboard>
          </VisualState>
          <VisualState Name="Disabled">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="Glyph" Storyboard.TargetProperty="Opacity" To="0.35" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Border Background="#00000000">
        <Path x:Name="Glyph" Data="F1M1323,792L1327,788 1331,792 1323,792z" Fill="#FFB9B9B9" Height="4" HorizontalAlignment="Center" Margin="5" RenderTransformOrigin="0.5,0.5" Stretch="Fill" VerticalAlignment="Center" Width="8" />
      </Border>
    </dx:LayoutTransformPanel>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxnt:NavigationPanePopupThemeKey ResourceKey=ScrollDownButtonTemplate}" TargetType="dxn:NavBarRepeatButton">
    <dx:LayoutTransformPanel Orientation="{TemplateBinding ItemsPanelOrientation}">
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup Name="CommonStates">
          <VisualState Name="Normal" />
          <VisualState Name="MouseOver">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="Glyph" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFB9B9B9" />
            </Storyboard>
          </VisualState>
          <VisualState Name="Pressed">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="Glyph" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FFE0E0E0" />
            </Storyboard>
          </VisualState>
          <VisualState Name="Disabled">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="Glyph" Storyboard.TargetProperty="Opacity" To="0.35" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Border Background="#00000000">
        <Path x:Name="Glyph" Data="F1M1316,795L1312,799 1308,795 1316,795z" Fill="#FFB9B9B9" Height="4" HorizontalAlignment="Center" Margin="5" Stretch="Fill" VerticalAlignment="Center" Width="8" />
      </Border>
    </dx:LayoutTransformPanel>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxnt:NavigationPaneSplitterThemeKey ResourceKey=SplitterTemplate}" TargetType="dxn:NavPaneSplitter">
    <Border>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="MouseOver" />
        </VisualStateGroup>
        <VisualStateGroup x:Name="OrientationStates">
          <VisualState x:Name="Vertical" />
          <VisualState x:Name="Horizontal" />
        </VisualStateGroup>
        <VisualStateGroup x:Name="DraggingStates">
          <VisualState x:Name="NotDragging" />
          <VisualState x:Name="Dragging" />
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <dx:LayoutTransformPanel Orientation="{TemplateBinding Orientation}">
        <Border x:Name="Border" BorderBrush="#FFB9B9B9" BorderThickness="1" Height="2" />
      </dx:LayoutTransformPanel>
    </Border>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxnt:NavigationPaneHeaderThemeKey ResourceKey=ExpandButtonTemplate}" TargetType="dxn:NavPaneExpandButton">
    <Grid Background="#00000000" Height="22" HorizontalAlignment="Center" Margin="1,2,1,2" VerticalAlignment="Center" Width="22">
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="MouseOver">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="GlyphExpanded" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FF373A3D" />
              <ColorAnimation Duration="0" Storyboard.TargetName="GlyphCollapsed" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FF373A3D" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="GlyphExpanded" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FF373A3D" />
              <ColorAnimation Duration="0" Storyboard.TargetName="GlyphCollapsed" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#FF373A3D" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
        <VisualStateGroup x:Name="ExpandModeStates">
          <VisualState x:Name="NormalMode" />
          <VisualState x:Name="Invert">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="glyphBorder" Storyboard.TargetProperty="RenderTransform">
                <DiscreteObjectKeyFrame KeyTime="0">
                  <DiscreteObjectKeyFrame.Value>
                    <ScaleTransform ScaleX="-1" />
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
        <VisualStateGroup x:Name="ExpandStates">
          <VisualState x:Name="Expanded" />
          <VisualState x:Name="Collapsed">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames dxcn:ValueSetter.Visibility="Visible" Storyboard.TargetName="GlyphExpanded" Storyboard.TargetProperty="(Control.Visibility)" />
              <ObjectAnimationUsingKeyFrames dxcn:ValueSetter.Visibility="Collapsed" Storyboard.TargetName="GlyphCollapsed" Storyboard.TargetProperty="(Control.Visibility)" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Grid x:Name="glyphBorder" HorizontalAlignment="Stretch" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Stretch">
        <Path x:Name="GlyphExpanded" Data="F1 M 373,189L 373,187L 384,187L 378,181L 381,181L 387,187L 387,189L 381,195L 378,195L 384,189L 373,189 Z M 391,188C 391,194.075 386.075,199 380,199C 373.925,199 369,194.075 369,188C 369,181.925 373.925,177 380,177C 386.075,177 391,181.925 391,188 Z M 389,188C 389,183.029 384.971,179 380,179C 375.03,179 371,183.029 371,188C 371,192.97 375.03,197 380,197C 384.971,197 389,192.971 389,188 Z " Fill="#FFB9B9B9" Height="22" Stretch="Fill" Visibility="Collapsed" Width="22" />
        <Path x:Name="GlyphCollapsed" Data="F1 M 360,189L 360,187L 349,187L 355,181L 352,181L 346,187L 346,189L 352,195L 355,195L 349,189L 360,189 Z M 342,188C 342,194.075 346.925,199 353,199C 359.075,199 364,194.075 364,188C 364,181.925 359.075,177 353,177C 346.925,177 342,181.925 342,188 Z M 344,188C 344,183.029 348.029,179 353,179C 357.971,179 362,183.029 362,188C 362,192.971 357.971,197 353,197C 348.029,197 344,192.971 344,188 Z " Fill="#FFB9B9B9" Height="22" Stretch="Fill" Width="22" />
      </Grid>
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxnt:NavigationPanePopupThemeKey ResourceKey=SizeGripTemplate}" TargetType="dxn:NavPanePopupSizeGrip">
    <Grid Background="#00000000" HorizontalAlignment="Right" Margin="1" SnapsToDevicePixels="True" VerticalAlignment="Bottom">
      <Path Data="F1 M 484,280L 485,280L 485,281L 486,281L 486,282L 485,282L 485,283L 484,283L 484,282L 483,282L 483,281L 484,281L 484,280 Z M 480,284L 481,284L 481,285L 482,285L 482,286L 481,286L 481,287L 480,287L 480,286L 479,286L 479,285L 480,285L 480,284 Z M 484,284L 485,284L 485,285L 486,285L 486,286L 485,286L 485,287L 484,287L 484,286L 483,286L 483,285L 484,285L 484,284 Z M 480,288L 481,288L 481,289L 482,289L 482,290L 481,290L 481,291L 480,291L 480,290L 479,290L 479,289L 480,289L 480,288 Z M 476,288L 477,288L 477,289L 478,289L 478,290L 477,290L 477,291L 476,291L 476,290L 475,290L 475,289L 476,289L 476,288 Z M 484,288L 485,288L 485,289L 486,289L 486,290L 485,290L 485,291L 484,291L 484,290L 483,290L 483,289L 484,289L 484,288 Z " Fill="#FFB9B9B9" Height="11" Stretch="Fill" Width="11" />
    </Grid>
  </ControlTemplate>
  <Style x:Key="{dxnt:NavigationPanePopupThemeKey ResourceKey=SizeGripStyle}" TargetType="dxn:NavPanePopupSizeGrip">
    <Setter Property="Background" Value="#00000000" />
    <Setter Property="HorizontalAlignment" Value="Right" />
    <Setter Property="VerticalAlignment" Value="Bottom" />
    <Setter Property="Cursor" Value="SizeWE" />
    <Setter Property="Height" Value="Auto" />
    <Setter Property="Width" Value="Auto" />
  </Style>
  <ControlTemplate x:Key="{dxnt:NavigationPanePopupThemeKey ResourceKey=PopupSideThumbTemplate}" TargetType="dxn:NavPanePopupSizeGrip">
    <Border Background="#00000000" />
  </ControlTemplate>
  <Style x:Key="{dxnt:NavigationPanePopupThemeKey ResourceKey=PopupSideThumbStyle}" TargetType="dxn:NavPanePopupSizeGrip">
    <Setter Property="HorizontalAlignment" Value="Right" />
    <Setter Property="Cursor" Value="SizeWE" />
    <Setter Property="Width" Value="3" />
  </Style>
  <ControlTemplate x:Key="{dxnt:NavigationPaneOverflowPanelThemeKey ResourceKey=DropDownButtonTemplate}" TargetType="{x:Type dxn:NavPaneDropDownMenuControl}">
    <Grid Background="#00000000">
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup Name="CommonStates">
          <VisualState Name="MouseOver">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="HoverState" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
          <VisualState Name="Pressed">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="PressedState" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
          <VisualState Name="Normal" />
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Grid x:Name="HoverState" Opacity="0">
        <Border Background="#FFB9B9B9" />
      </Grid>
      <Grid x:Name="PressedState" Opacity="0">
        <Border Background="#FFF0F0F0" BorderBrush="#FFB9B9B9" BorderThickness="1" />
      </Grid>
      <Grid Height="4" Margin="10,0,10,0" SnapsToDevicePixels="True" Width="8">
        <Path x:Name="Path2" Data="F1 M 50.5001,31.5001L 40.5,31.5001L 45.5,36.5001L 50.5001,31.5001 Z" Fill="#FF373A3D" Stretch="Fill" />
      </Grid>
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxnt:NavigationPanePopupThemeKey ResourceKey=PopupWindowFrameTemplate}" TargetType="dxn:NavPanePopupWindowFrame">
    <Border Background="#FFFFFFFF" BorderBrush="#FFB9B9B9" BorderThickness="1">
      <ContentPresenter />
    </Border>
    <ControlTemplate.Triggers>
      <DataTrigger Binding="{Binding Source={x:Static interop:BrowserInteropHelper.IsBrowserHosted}}" Value="True" />
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxnt:NavigationPanePopupThemeKey ResourceKey=PopupWindowContentTemplate}" TargetType="{x:Type dxn:NavPanePopupWindowContent}">
    <dxn:NavPanePopupWindowFrame>
      <Grid>
        <dxn:ScrollControl x:Name="scrollControl" dx:FocusHelper2.Focusable="False" ScrollBarControlTemplate="{DynamicResource {dxnt:CommonElementsThemeKey ResourceKey=NormalScrollTemplate}}" ScrollButtonsControlTemplate="{DynamicResource {dxnt:NavigationPanePopupThemeKey ResourceKey=SmoothScrollTemplate}}">
          <!--ONLY SL<dx:BackgroundPanel.PatchForeground>True</dx:BackgroundPanel.PatchForeground>ONLY SL-->
          <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
        </dxn:ScrollControl>
        <dxn:NavPanePopupSizeGrip Style="{DynamicResource {dxnt:NavigationPanePopupThemeKey ResourceKey=SizeGripStyle}}" Template="{DynamicResource {dxnt:NavigationPanePopupThemeKey ResourceKey=SizeGripTemplate}}" />
      </Grid>
    </dxn:NavPanePopupWindowFrame>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxnt:NavigationPaneGroupClientThemeKey ResourceKey=CollapsedActiveGroupTemplate}" TargetType="ToggleButton">
    <Border x:Name="Root" Margin="0,1,0,1">
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup Name="CommonStates">
          <VisualState Name="Normal" />
          <VisualState Name="MouseOver">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="HoverState" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
          <VisualState Name="Pressed">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="PressedState" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
        <VisualStateGroup Name="ForegroundStates">
          <VisualState Name="NormalForeground" />
          <VisualState Name="CustomForeground">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="content" Storyboard.TargetProperty="Foreground">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource {dxnt:NavigationPaneGroupClientThemeKey ResourceKey=CollapsedGroupForegroundBrush}}" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
        <VisualStateGroup Name="OrientationStates">
          <VisualState Name="Vertical" />
          <VisualState Name="Horizontal">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames dxcn:ValueSetter.Thickness="0,1,0,1" Storyboard.TargetName="Root" Storyboard.TargetProperty="Padding" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Grid>
        <Grid x:Name="HoverState" Opacity="0">
          <Border Background="#FFB9B9B9" />
        </Grid>
        <Grid x:Name="PressedState" Opacity="0">
          <Border Background="#FFF0F0F0" BorderBrush="#FFB9B9B9" BorderThickness="1" />
        </Grid>
        <dxn:ImageAndTextContentPresenter x:Name="content" Content="{Binding Converter={dxn:FrameworkElementInfoSLCompatibilityConverter}}" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Center" ImageFallbackSize="24" Orientation="{Binding NavBar.View.Orientation}" Style="{DynamicResource {dxnt:NavBarGroupControlThemeKey ResourceKey=HeaderStyle}}" VerticalAlignment="Center">
          <!--ONLY SL
                    <dxn:ImageAndTextContentPresenter.ContentTemplateSelector>
                        <Binding Path="ActualHeaderTemplateSelector"/>
                    </dxn:ImageAndTextContentPresenter.ContentTemplateSelector>ONLY SL-->
        </dxn:ImageAndTextContentPresenter>
      </Grid>
    </Border>
  </ControlTemplate>
  <!--BEGIN WPF-->
  <Style x:Key="{dxnt:NavigationPaneThemeKey ResourceKey=ItemBackgroundStyle}" TargetType="dxn:CollapsedActiveGroupItemContentPresenter">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="dxn:CollapsedActiveGroupItemContentPresenter">
          <Grid Margin="0,1,0,1">
            <Grid x:Name="Hover" Opacity="0">
              <Border Background="#FFB9B9B9" />
            </Grid>
            <Grid x:Name="Pressed" Opacity="0">
              <Border Background="#FFF78A09" />
            </Grid>
            <Grid x:Name="SelectedState" Opacity="0">
              <Border Background="#FFF78A09" />
            </Grid>
            <ContentPresenter />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter Property="Opacity" TargetName="Hover" Value="1" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
              <Setter Property="Opacity" TargetName="Pressed" Value="1" />
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
              <Setter Property="Opacity" TargetName="SelectedState" Value="1" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="{dxnt:NavigationPaneThemeKey ResourceKey=CollapsedActiveGroupBackgroundTemplate}">
    <Border Background="#FFFFFFFF" />
  </ControlTemplate>
  <!--END WPF-->
  <DataTemplate x:Key="{dxnt:NavigationPaneButtonPanelThemeKey ResourceKey=GroupContentTemplate}">
    <Grid>
      <Border Background="Transparent" Height="28" IsHitTestVisible="False" Width="0" />
      <dx:MeasurePixelSnapperContentControl Content="Wg" dx:FocusHelper2.Focusable="False" Margin="0,6,0,6" SnapperType="Around" Style="{DynamicResource {dxnt:NavBarGroupControlThemeKey ResourceKey=GroupTextStyle}}" Width="0" />
      <dxn:NavPaneImageAndTextDecorator x:Name="groupButtonContent" ContentSource="{Binding Path=Header}" ContentStyle="{DynamicResource {dxnt:NavBarGroupControlThemeKey ResourceKey=GroupTextStyle}}" DockingBottomContentMargin="6" DockingBottomImageMargin="4,2,4,2" DockingLeftContentMargin="6" DockingLeftImageMargin="4,2,0,2" DockingRightContentMargin="6" DockingRightImageMargin="4,2,4,2" DockingTopContentMargin="6" DockingTopImageMargin="4,2,4,2" GroupButtonCollapsedImageMargin="4,2,4,2" ImageDocking="{Binding Path=(dxn:NavBarViewBase.LayoutSettings).ImageDocking, RelativeSource={RelativeSource TemplatedParent}}" ImageFallbackSize="24" ImageSource="{Binding Path=ImageSource}" ImageStyle="{DynamicResource {dxnt:NavBarGroupControlThemeKey ResourceKey=GroupImageStyle}}" />
    </Grid>
  </DataTemplate>
  <ControlTemplate x:Key="{dxnt:NavigationPaneButtonPanelThemeKey ResourceKey=GroupTemplate}" TargetType="dxn:NavPaneGroupButton">
    <Grid x:Name="Root" Background="Transparent">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="1" />
      </Grid.RowDefinitions>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup Name="CommonStates">
          <VisualState Name="Normal" />
          <VisualState Name="IsMouseOver">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" To="#FF373A3D" />
            </Storyboard>
          </VisualState>
          <VisualState Name="IsPressed">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" To="#FFF78A09" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
        <VisualStateGroup Name="IsActiveStates">
          <VisualState Name="IsActiveTrue">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" To="#FFF78A09" />
            </Storyboard>
          </VisualState>
          <VisualState Name="IsActiveFalse" />
        </VisualStateGroup>
        <VisualStateGroup x:Name="ExpandStates">
          <VisualState x:Name="Expanded" />
          <VisualState x:Name="Collapsed" />
        </VisualStateGroup>
        <VisualStateGroup x:Name="OrientationStates">
          <VisualState x:Name="Vertical" />
          <VisualState x:Name="Horizontal" />
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Grid x:Name="ActiveState" Background="#FFFFFFFF" Visibility="{Binding Path=IsActive, Converter={StaticResource BoolToVisibilityConverter}}" />
      <dxn:ImageAndTextContentPresenter x:Name="Content" Foreground="{DynamicResource {dxnt:NavigationPaneButtonPanelThemeKey ResourceKey=GroupForegroundBrush}}" ImageFallbackSize="24" Margin="2" Style="{DynamicResource {dxnt:NavigationPaneHeaderThemeKey ResourceKey=GroupButtonHeaderStyle}}" />
      <Border x:Name="separator" BorderBrush="#FFB9B9B9" BorderThickness="0,0,0,1" />
    </Grid>
    <ControlTemplate.Triggers>
      <DataTrigger Binding="{Binding Path=NavBar.View.IsExpanded}" Value="False">
        <Setter Property="ToolTip" Value="{Binding Path=Header}" />
      </DataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Path=(dxn:NavBarPositionPanel.GroupPosition), RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxn:NavBarGroupControl}}}" Value="Last" />
          <Condition Binding="{Binding Path=ActualIsOverflowPanelVisible, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxn:NavigationPaneView}}}" Value="False" />
        </MultiDataTrigger.Conditions>
        <Setter Property="BorderBrush" TargetName="separator" Value="{x:Null}" />
      </MultiDataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxnt:NavigationPaneOverflowPanelThemeKey ResourceKey=DefaultIconTemplate}" TargetType="dxn:NavPaneDefaultIcon">
    <Grid Height="20" Width="20">
      <Path Data="F1M1.99994,5.00018L12.9999,5.00018C14.1045,5.00018,14.9999,5.89563,14.9999,7.00018L14.9999,18.0001C14.9999,19.1047,14.1045,20.0002,12.9999,20.0002L1.99994,20.0002C0.895386,20.0002,0,19.1047,0,18.0001L0,7.00018C0,5.89563,0.895386,5.00018,1.99994,5.00018z" Fill="#FFF78A09" Margin="0,5,5,0" Stretch="Fill" UseLayoutRounding="False" />
      <Path Data="F1M9.00012,0L18.0001,0C19.1047,0,20.0001,0.895477,20.0001,2L20.0001,11C20.0001,12.1046,19.1047,13,18.0001,13L16.0001,13.0001 16.0001,7.00009C16.0001,5.34323,14.6569,4.00009,13.0001,4.00009L7.00006,4.00009 7.00012,2C7.00012,0.895477,7.89557,0,9.00012,0z" Fill="#FFF78A09" Margin="7,0,0,7" Stretch="Fill" UseLayoutRounding="False" />
    </Grid>
  </ControlTemplate>
  <dxn:SourceToVisibilityConverter x:Key="SourceToVisibilityConverter" />
  <DataTemplate x:Key="{dxnt:NavigationPaneOverflowPanelThemeKey ResourceKey=OverflowGroupContentTemplate}">
    <Grid x:Name="overflowGroupContent">
      <!--BEGIN WPF-->
      <Grid.ToolTip>
        <Binding Path="Header" />
      </Grid.ToolTip>
      <Image x:Name="PART_Image" Margin="2" Source="{Binding Path=ImageSource}" Style="{DynamicResource {dxnt:NavBarGroupControlThemeKey ResourceKey=OverflowGroupItemStyle}}" Visibility="{Binding Path=Source, RelativeSource={RelativeSource Mode=Self}, ConverterParameter=Collapsed, Converter={StaticResource SourceToVisibilityConverter}}" />
      <!--END WPF-->
      <!--ONLY SL<Image Margin="2" x:Name="PART_Image" Source="{Binding Path=ImageSource}"
                    Visibility="{Binding Path=Source, RelativeSource={RelativeSource Mode=Self}, ConverterParameter=Collapsed, Converter={StaticResource SourceToVisibilityConverter}}"
                    Style="{DynamicResource {dxnt:NavBarGroupControlThemeKey ResourceKey=OverflowGroupItemStyle}}"/>
            ONLY SL-->
      <dxn:NavPaneDefaultIcon x:Name="defaultIcon" Height="{Binding Path=Height, ElementName=PART_Image}" Margin="2" Visibility="{Binding Path=Source, ElementName=PART_Image, ConverterParameter=Visible, Converter={StaticResource SourceToVisibilityConverter}}" Width="{Binding Path=Width, ElementName=PART_Image}" />
    </Grid>
  </DataTemplate>
  <ControlTemplate x:Key="{dxnt:NavigationPaneOverflowPanelThemeKey ResourceKey=OverflowGroupTemplate}" TargetType="Button">
    <Grid Background="#00000000" HorizontalAlignment="Center" Margin="2" VerticalAlignment="Center">
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup Name="CommonStates">
          <VisualState Name="Normal" />
          <VisualState Name="MouseOver">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="HoverState" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
          <VisualState Name="IsPressed">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="PressedState" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Grid x:Name="HoverState" Opacity="0">
        <Border Background="#FFB9B9B9" />
      </Grid>
      <Grid x:Name="PressedState" Opacity="{Binding Path=IsActive, Converter={StaticResource BooleanToOpacityConverter}}">
        <Border Background="#FFF0F0F0" BorderBrush="#FFB9B9B9" BorderThickness="1" />
      </Grid>
      <dxn:ImageAndTextContentPresenter Foreground="{TemplateBinding Foreground}" ImageFallbackSize="24" Style="{DynamicResource {dxnt:NavigationPaneHeaderThemeKey ResourceKey=OverflowButtonHeaderStyle}}" />
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxnt:NavigationPaneButtonPanelThemeKey ResourceKey=ButtonPanelTemplate}" TargetType="ContentControl">
    <Border Background="#FFFFFFFF">
      <dxn:NavPaneGroupButtonPanelContentPresenter WithSplitterThickness="0,1,0,0" />
    </Border>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxnt:NavigationPaneOverflowPanelThemeKey ResourceKey=OverflowPanelTemplate}" TargetType="dxn:NavPaneOverflowPanel">
    <dx:LayoutTransformPanel Orientation="{Binding View.Orientation}">
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="SplitterBehaviorStates">
          <VisualState x:Name="WithSplitter" />
          <VisualState x:Name="WithoutSplitter">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames dxcn:ValueSetter.Thickness="1" Storyboard.TargetName="overflowPanelBorder" Storyboard.TargetProperty="Padding" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Border x:Name="overflowPanelBorder" Background="#FFFFFFFF">
        <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" MinHeight="32" />
      </Border>
    </dx:LayoutTransformPanel>
  </ControlTemplate>
</ResourceDictionary>