<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxeh="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:dxn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <!--BEGIN WPF-->
  <ResourceDictionary.MergedDictionaries>
    <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.MetropolisLight.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/MetropolisLight/ButtonEdit.xaml" />
    <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.MetropolisLight.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/MetropolisLight/Brushes.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <!--END WPF-->
  <Thickness x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=TextEditBorderThickness}">0,1</Thickness>
  <Thickness x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=CommonBorderThickness}">1</Thickness>
  <dxn:RenderTemplate x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=HoverBorderTemplate}">
    <dxn:RenderPanel>
      <dxn:RenderPanel Name="PART_Focus" Visibility="Collapsed">
        <dxn:RenderBorder BorderBrush="#FFF78A09" BorderThickness="1" Opacity="0.9" />
      </dxn:RenderPanel>
    </dxn:RenderPanel>
    <dxn:RenderTemplate.Triggers>
      <dxn:RenderTrigger DependencyProperty="{x:Static dxeh:ControlHelper.ShowFocusedStateProperty}" Value="True" ValueSource="Chrome">
        <dxn:RenderSetter Property="Visibility" TargetName="PART_Focus" Value="Visible" />
      </dxn:RenderTrigger>
    </dxn:RenderTemplate.Triggers>
  </dxn:RenderTemplate>
  <dxn:RenderTemplate x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=TextEditBorderTemplate}">
    <dxn:RenderPanel Name="PART_Root">
      <dxn:RenderPanel Name="PART_Border">
        <dxn:RenderBorder Background="#FFFFFFFF" BorderBrush="#FFB9B9B9" BorderThickness="1" />
      </dxn:RenderPanel>
    </dxn:RenderPanel>
  </dxn:RenderTemplate>
  <dxn:RenderTemplate x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=CommonBorderTemplate}">
    <dxn:RenderPanel Name="PART_Root">
      <dxn:RenderPanel Name="PART_Border">
        <dxn:RenderBorder Background="#FFFFFFFF" BorderBrush="#FFB9B9B9" BorderThickness="1" />
      </dxn:RenderPanel>
    </dxn:RenderPanel>
  </dxn:RenderTemplate>
  <ControlTemplate x:Key="{dxet:BaseEditThemeKey ResourceKey=EmptyBorderTemplate}" TargetType="ContentControl">
    <ContentPresenter />
    <ControlTemplate.Triggers>
      <Trigger Property="IsEnabled" Value="false">
        <Setter Property="Opacity" Value="0.6" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxet:BaseEditThemeKey ResourceKey=TextEditBorderTemplate}" TargetType="ContentControl">
    <Grid>
      <dxn:Chrome RenderTemplate="{StaticResource {dxet:InplaceBaseEditThemeKey ResourceKey=TextEditBorderTemplate}}" />
      <ContentPresenter Margin="{StaticResource ResourceKey={dxet:InplaceBaseEditThemeKey ResourceKey=TextEditBorderThickness}}" />
      <dxn:Chrome dxeh:ControlHelper.ShowFocusedState="{Binding Path=(dxeh:ControlHelper.ShowFocusedState), RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" RenderTemplate="{StaticResource {dxet:InplaceBaseEditThemeKey ResourceKey=HoverBorderTemplate}}" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsEnabled" Value="false">
        <Setter Property="Opacity" Value="0.6" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxet:BaseEditThemeKey ResourceKey=CommonBorderTemplate}" TargetType="ContentControl">
    <Grid>
      <dxn:Chrome RenderTemplate="{StaticResource {dxet:InplaceBaseEditThemeKey ResourceKey=CommonBorderTemplate}}" />
      <ContentPresenter Margin="{StaticResource ResourceKey={dxet:InplaceBaseEditThemeKey ResourceKey=CommonBorderThickness}}" />
      <dxn:Chrome dxeh:ControlHelper.ShowFocusedState="{Binding Path=(dxeh:ControlHelper.ShowFocusedState), RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" RenderTemplate="{StaticResource {dxet:InplaceBaseEditThemeKey ResourceKey=HoverBorderTemplate}}" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsEnabled" Value="false">
        <Setter Property="Opacity" Value="0.6" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxet:BaseEditThemeKey ResourceKey=CommonBorderDecorationTemplate}" TargetType="Control">
    <dxn:Chrome RenderTemplate="{StaticResource {dxet:InplaceBaseEditThemeKey ResourceKey=CommonBorderTemplate}}" />
  </ControlTemplate>
  <ControlTemplate x:Key="{dxet:BaseEditThemeKey ResourceKey=TextEditBorderDecorationTemplate}" TargetType="Control">
    <dxn:Chrome RenderTemplate="{StaticResource {dxet:InplaceBaseEditThemeKey ResourceKey=TextEditBorderTemplate}}" />
  </ControlTemplate>
  <ControlTemplate x:Key="{dxet:BaseEditThemeKey ResourceKey=HoverBorderDecorationTemplate}" TargetType="Control">
    <dxn:Chrome dxeh:ControlHelper.ShowFocusedState="{Binding Path=(dxeh:ControlHelper.ShowFocusedState), RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" RenderTemplate="{StaticResource {dxet:InplaceBaseEditThemeKey ResourceKey=HoverBorderTemplate}}" />
  </ControlTemplate>
  <dxn:RenderTemplate x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=SpinUpGlyph}">
    <dxn:RenderPath Name="Path" Data="M 0 4 L 7 4 L 3.5 0 Z" Height="3" Margin="5,0,5,0" Stretch="Fill" Width="6" />
    <dxn:RenderTemplate.Triggers>
      <dxn:RenderBinding TargetName="Path" TargetProperty="Fill" ValueSource="DataContext" />
    </dxn:RenderTemplate.Triggers>
  </dxn:RenderTemplate>
  <dxn:RenderTemplate x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=SpinDownGlyph}">
    <dxn:RenderPath Name="Path" Data="M 0 0 L 3.5 4 L 7 0 Z" Height="3" Margin="5,0,5,0" Stretch="Fill" Width="6" />
    <dxn:RenderTemplate.Triggers>
      <dxn:RenderBinding TargetName="Path" TargetProperty="Fill" ValueSource="DataContext" />
    </dxn:RenderTemplate.Triggers>
  </dxn:RenderTemplate>
  <!--normal-->
  <SolidColorBrush x:Key="CheckEdit.Normal.FocusBorder.BorderBrush">#FFF78A09</SolidColorBrush>
  <SolidColorBrush x:Key="CheckEdit.Normal.OuterBorder.Background">#FFFFFFFF</SolidColorBrush>
  <SolidColorBrush x:Key="CheckEdit.Normal.OuterBorder.BorderBrush">#FFB9B9B9</SolidColorBrush>
  <SolidColorBrush x:Key="CheckEdit.Normal.TriState.Background">#FF222222</SolidColorBrush>
  <!--hover-->
  <SolidColorBrush x:Key="CheckEdit.Hover.OuterBorder.Background">#FFB9B9B9</SolidColorBrush>
  <SolidColorBrush x:Key="CheckEdit.Hover.OuterBorder.BorderBrush">#FFB9B9B9</SolidColorBrush>
  <Visibility x:Key="Visible">Visible</Visibility>
  <dxn:RenderTemplate x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=RenderCheckBoxTemplate}">
    <dxn:RenderPanel LayoutProvider="{dxn:DockPanelLayoutProvider LastChildFill=True}">
      <dxn:RenderPanel Name="CheckBox" Dock="Left" FlowDirection="LeftToRight" Height="14" Margin="{StaticResource {dxet:InplaceBaseEditThemeKey ResourceKey=CheckEditPadding}}" ShouldCalcDpiAwareThickness="False" VerticalAlignment="Center" Width="14">
        <dxn:RenderBorder Name="OuterBorder" Background="{StaticResource CheckEdit.Normal.OuterBorder.Background}" BorderBrush="{StaticResource CheckEdit.Normal.OuterBorder.BorderBrush}" BorderThickness="1"></dxn:RenderBorder>
        <dxn:RenderBorder Name="FocusBorder" BorderBrush="{StaticResource CheckEdit.Normal.FocusBorder.BorderBrush}" BorderThickness="1" Visibility="Collapsed" />
        <dxn:RenderBorder Name="TriState" Background="{StaticResource CheckEdit.Normal.TriState.Background}" Height="8" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed" Width="8" />
        <dxn:RenderPath Name="CheckElement" Data="F1 M 135,156L 135,159L 139,163L 145,156L 145,153L 139,160L 135,156 Z " Fill="#FF222222" Height="10" HorizontalAlignment="Center" Stretch="Fill" VerticalAlignment="Center" Visibility="Collapsed" Width="10" />
      </dxn:RenderPanel>
      <dxn:RenderContentPresenter Name="PART_ContentPresenter" Visibility="Collapsed" />
    </dxn:RenderPanel>
    <dxn:RenderTemplate.Triggers>
      <dxn:RenderStateGroup Name="CommonStates">
        <dxn:RenderStateTrigger Name="Normal" />
        <dxn:RenderStateTrigger Name="Pressed" />
        <dxn:RenderStateTrigger Name="MouseOver">
          <dxn:RenderSetter Property="Background" TargetName="OuterBorder" Value="{StaticResource CheckEdit.Hover.OuterBorder.Background}" />
          <dxn:RenderSetter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource CheckEdit.Hover.OuterBorder.BorderBrush}" />
        </dxn:RenderStateTrigger>
        <dxn:RenderStateTrigger Name="Disabled">
          <dxn:RenderSetter Property="Opacity" TargetName="CheckBox" Value="0.35" />
          <dxn:RenderSetter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.35" />
        </dxn:RenderStateTrigger>
      </dxn:RenderStateGroup>
      <dxn:RenderStateGroup Name="CheckStates">
        <dxn:RenderStateTrigger Name="Checked">
          <dxn:RenderSetter Property="Visibility" TargetName="CheckElement" Value="{StaticResource Visible}" />
        </dxn:RenderStateTrigger>
        <dxn:RenderStateTrigger Name="Unchecked" />
        <dxn:RenderStateTrigger Name="Indeterminate">
          <dxn:RenderSetter Property="Visibility" TargetName="TriState" Value="{StaticResource Visible}" />
        </dxn:RenderStateTrigger>
      </dxn:RenderStateGroup>
      <dxn:RenderStateGroup Name="FocusStates">
        <dxn:RenderStateTrigger Name="Unfocused" />
        <dxn:RenderStateTrigger Name="Focused">
          <dxn:RenderSetter Property="Visibility" TargetName="FocusBorder" Value="{StaticResource Visible}" />
        </dxn:RenderStateTrigger>
      </dxn:RenderStateGroup>
      <dxn:RenderStateGroup Name="ContentStates">
        <dxn:RenderStateTrigger Name="HasNoContent" />
        <dxn:RenderStateTrigger Name="HasContent">
          <dxn:RenderSetter Property="Visibility" TargetName="PART_ContentPresenter" Value="{StaticResource Visible}" />
        </dxn:RenderStateTrigger>
      </dxn:RenderStateGroup>
    </dxn:RenderTemplate.Triggers>
  </dxn:RenderTemplate>
  <!--NORMAL-->
  <SolidColorBrush x:Key="Button.Normal.Outer.BorderBrush" Color="#FFB9B9B9" />
  <SolidColorBrush x:Key="Button.Normal.Outer.Background" Color="#FFFFFFFF" />
  <!--MOUSEOVER-->
  <SolidColorBrush x:Key="Button.MouseOver.Outer.BorderBrush" Color="#FFB9B9B9" />
  <SolidColorBrush x:Key="Button.MouseOver.Outer.Background" Color="#FFB9B9B9" />
  <!--PRESSED\CHECKED-->
  <SolidColorBrush x:Key="Button.Pressed.Outer.BorderBrush" Color="#FFB9B9B9" />
  <SolidColorBrush x:Key="Button.Pressed.Outer.Background" Color="#FFF0F0F0" />
  <dxn:RenderTemplate x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=RenderButtonTemplate}">
    <dxn:RenderPanel>
      <dxn:RenderBorder Name="Outer" Background="{StaticResource Button.Normal.Outer.Background}" BorderBrush="{StaticResource Button.Normal.Outer.BorderBrush}" BorderThickness="1"></dxn:RenderBorder>
      <dxn:RenderContentPresenter Name="PART_ContentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center" />
    </dxn:RenderPanel>
    <dxn:RenderTemplate.Triggers>
      <dxn:RenderStateGroup Name="CommonStates">
        <dxn:RenderStateTrigger Name="Normal" />
        <dxn:RenderStateTrigger Name="MouseOver">
          <dxn:RenderSetter Property="BorderBrush" TargetName="Outer" Value="{StaticResource Button.MouseOver.Outer.BorderBrush}" />
          <dxn:RenderSetter Property="Background" TargetName="Outer" Value="{StaticResource Button.MouseOver.Outer.Background}" />
        </dxn:RenderStateTrigger>
        <dxn:RenderStateTrigger Name="Pressed">
          <dxn:RenderSetter Property="BorderBrush" TargetName="Outer" Value="{StaticResource Button.Pressed.Outer.BorderBrush}" />
          <dxn:RenderSetter Property="Background" TargetName="Outer" Value="{StaticResource Button.Pressed.Outer.Background}" />
        </dxn:RenderStateTrigger>
        <dxn:RenderStateTrigger Name="Disabled" />
      </dxn:RenderStateGroup>
      <dxn:RenderStateGroup Name="CheckedStates">
        <dxn:RenderStateTrigger Name="Unchecked" />
        <dxn:RenderStateTrigger Name="Checked">
          <dxn:RenderSetter Property="BorderBrush" TargetName="Outer" Value="{StaticResource Button.Pressed.Outer.BorderBrush}" />
          <dxn:RenderSetter Property="Background" TargetName="Outer" Value="{StaticResource Button.Pressed.Outer.Background}" />
        </dxn:RenderStateTrigger>
      </dxn:RenderStateGroup>
      <dxn:RenderTrigger DependencyProperty="{x:Static dxe:ButtonInfo.GlyphKindProperty}" Value="User">
        <dxn:RenderSetter Property="Margin" TargetName="PART_ContentPresenter" Value="5,0" />
      </dxn:RenderTrigger>
      <dxn:RenderTrigger DependencyProperty="{x:Static dxe:ButtonInfo.GlyphKindProperty}" Value="None">
        <dxn:RenderSetter Property="Margin" TargetName="PART_ContentPresenter" Value="5,0" />
      </dxn:RenderTrigger>
    </dxn:RenderTemplate.Triggers>
  </dxn:RenderTemplate>
  <dxn:RenderTemplate x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=RenderSpinDownButtonTemplate}">
    <dxn:RenderPanel>
      <dxn:RenderBorder Name="Outer" Background="{StaticResource Button.Normal.Outer.Background}" BorderBrush="{StaticResource Button.Normal.Outer.BorderBrush}" BorderThickness="1,0,1,1"></dxn:RenderBorder>
      <dxn:RenderContentPresenter Name="PART_ContentPresenter" HorizontalAlignment="Center" Margin="1,0,1,0" VerticalAlignment="Center" />
    </dxn:RenderPanel>
    <dxn:RenderTemplate.Triggers>
      <dxn:RenderStateGroup Name="CommonStates">
        <dxn:RenderStateTrigger Name="Normal" />
        <dxn:RenderStateTrigger Name="MouseOver">
          <dxn:RenderSetter Property="BorderBrush" TargetName="Outer" Value="{StaticResource Button.MouseOver.Outer.BorderBrush}" />
          <dxn:RenderSetter Property="Background" TargetName="Outer" Value="{StaticResource Button.MouseOver.Outer.Background}" />
        </dxn:RenderStateTrigger>
        <dxn:RenderStateTrigger Name="Pressed">
          <dxn:RenderSetter Property="BorderBrush" TargetName="Outer" Value="{StaticResource Button.Pressed.Outer.BorderBrush}" />
          <dxn:RenderSetter Property="Background" TargetName="Outer" Value="{StaticResource Button.Pressed.Outer.Background}" />
        </dxn:RenderStateTrigger>
        <dxn:RenderStateTrigger Name="Disabled" />
      </dxn:RenderStateGroup>
      <dxn:RenderStateGroup Name="CheckedStates">
        <dxn:RenderStateTrigger Name="Unchecked" />
        <dxn:RenderStateTrigger Name="Checked">
          <dxn:RenderSetter Property="BorderBrush" TargetName="Outer" Value="{StaticResource Button.Pressed.Outer.BorderBrush}" />
          <dxn:RenderSetter Property="Background" TargetName="Outer" Value="{StaticResource Button.Pressed.Outer.Background}" />
        </dxn:RenderStateTrigger>
      </dxn:RenderStateGroup>
    </dxn:RenderTemplate.Triggers>
  </dxn:RenderTemplate>
  <dxn:RenderTemplate x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=RenderSpinUpButtonTemplate}">
    <dxn:RenderPanel>
      <dxn:RenderBorder Name="Outer" Background="{StaticResource Button.Normal.Outer.Background}" BorderBrush="{StaticResource Button.Normal.Outer.BorderBrush}" BorderThickness="1,1,1,1"></dxn:RenderBorder>
      <dxn:RenderContentPresenter Name="PART_ContentPresenter" HorizontalAlignment="Center" Margin="1,0,1,0" MinWidth="15" VerticalAlignment="Center" />
    </dxn:RenderPanel>
    <dxn:RenderTemplate.Triggers>
      <dxn:RenderStateGroup Name="CommonStates">
        <dxn:RenderStateTrigger Name="Normal" />
        <dxn:RenderStateTrigger Name="MouseOver">
          <dxn:RenderSetter Property="BorderBrush" TargetName="Outer" Value="{StaticResource Button.MouseOver.Outer.BorderBrush}" />
          <dxn:RenderSetter Property="Background" TargetName="Outer" Value="{StaticResource Button.MouseOver.Outer.Background}" />
        </dxn:RenderStateTrigger>
        <dxn:RenderStateTrigger Name="Pressed">
          <dxn:RenderSetter Property="BorderBrush" TargetName="Outer" Value="{StaticResource Button.Pressed.Outer.BorderBrush}" />
          <dxn:RenderSetter Property="Background" TargetName="Outer" Value="{StaticResource Button.Pressed.Outer.Background}" />
        </dxn:RenderStateTrigger>
        <dxn:RenderStateTrigger Name="Disabled" />
      </dxn:RenderStateGroup>
      <dxn:RenderStateGroup Name="CheckedStates">
        <dxn:RenderStateTrigger Name="Unchecked" />
        <dxn:RenderStateTrigger Name="Checked">
          <dxn:RenderSetter Property="BorderBrush" TargetName="Outer" Value="{StaticResource Button.Pressed.Outer.BorderBrush}" />
          <dxn:RenderSetter Property="Background" TargetName="Outer" Value="{StaticResource Button.Pressed.Outer.Background}" />
        </dxn:RenderStateTrigger>
      </dxn:RenderStateGroup>
    </dxn:RenderTemplate.Triggers>
  </dxn:RenderTemplate>
  <dxn:RenderTemplate x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=RenderSpinLeftButtonTemplate}">
    <dxn:RenderPanel>
      <dxn:RenderBorder Name="Outer" Background="{StaticResource Button.Normal.Outer.Background}" BorderBrush="{StaticResource Button.Normal.Outer.BorderBrush}" BorderThickness="0,1,1,1"></dxn:RenderBorder>
      <dxn:RenderContentPresenter Name="PART_ContentPresenter" HorizontalAlignment="Center" Margin="1,0,1,0" MinWidth="15" VerticalAlignment="Center" />
    </dxn:RenderPanel>
    <dxn:RenderTemplate.Triggers>
      <dxn:RenderStateGroup Name="CommonStates">
        <dxn:RenderStateTrigger Name="Normal" />
        <dxn:RenderStateTrigger Name="MouseOver">
          <dxn:RenderSetter Property="BorderBrush" TargetName="Outer" Value="{StaticResource Button.MouseOver.Outer.BorderBrush}" />
          <dxn:RenderSetter Property="Background" TargetName="Outer" Value="{StaticResource Button.MouseOver.Outer.Background}" />
        </dxn:RenderStateTrigger>
        <dxn:RenderStateTrigger Name="Pressed">
          <dxn:RenderSetter Property="BorderBrush" TargetName="Outer" Value="{StaticResource Button.Pressed.Outer.BorderBrush}" />
          <dxn:RenderSetter Property="Background" TargetName="Outer" Value="{StaticResource Button.Pressed.Outer.Background}" />
        </dxn:RenderStateTrigger>
        <dxn:RenderStateTrigger Name="Disabled" />
      </dxn:RenderStateGroup>
      <dxn:RenderStateGroup Name="CheckedStates">
        <dxn:RenderStateTrigger Name="Unchecked" />
        <dxn:RenderStateTrigger Name="Checked">
          <dxn:RenderSetter Property="BorderBrush" TargetName="Outer" Value="{StaticResource Button.Pressed.Outer.BorderBrush}" />
          <dxn:RenderSetter Property="Background" TargetName="Outer" Value="{StaticResource Button.Pressed.Outer.Background}" />
        </dxn:RenderStateTrigger>
      </dxn:RenderStateGroup>
    </dxn:RenderTemplate.Triggers>
  </dxn:RenderTemplate>
  <dxn:RenderTemplate x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=RenderSpinRightButtonTemplate}">
    <dxn:RenderPanel>
      <dxn:RenderBorder Name="Outer" Background="{StaticResource Button.Normal.Outer.Background}" BorderBrush="{StaticResource Button.Normal.Outer.BorderBrush}" BorderThickness="1,1,1,1"></dxn:RenderBorder>
      <dxn:RenderContentPresenter Name="PART_ContentPresenter" HorizontalAlignment="Center" Margin="1,0,1,0" MinWidth="15" VerticalAlignment="Center" />
    </dxn:RenderPanel>
    <dxn:RenderTemplate.Triggers>
      <dxn:RenderStateGroup Name="CommonStates">
        <dxn:RenderStateTrigger Name="Normal" />
        <dxn:RenderStateTrigger Name="MouseOver">
          <dxn:RenderSetter Property="BorderBrush" TargetName="Outer" Value="{StaticResource Button.MouseOver.Outer.BorderBrush}" />
          <dxn:RenderSetter Property="Background" TargetName="Outer" Value="{StaticResource Button.MouseOver.Outer.Background}" />
        </dxn:RenderStateTrigger>
        <dxn:RenderStateTrigger Name="Pressed">
          <dxn:RenderSetter Property="BorderBrush" TargetName="Outer" Value="{StaticResource Button.Pressed.Outer.BorderBrush}" />
          <dxn:RenderSetter Property="Background" TargetName="Outer" Value="{StaticResource Button.Pressed.Outer.Background}" />
        </dxn:RenderStateTrigger>
        <dxn:RenderStateTrigger Name="Disabled" />
      </dxn:RenderStateGroup>
      <dxn:RenderStateGroup Name="CheckedStates">
        <dxn:RenderStateTrigger Name="Unchecked" />
        <dxn:RenderStateTrigger Name="Checked">
          <dxn:RenderSetter Property="BorderBrush" TargetName="Outer" Value="{StaticResource Button.Pressed.Outer.BorderBrush}" />
          <dxn:RenderSetter Property="Background" TargetName="Outer" Value="{StaticResource Button.Pressed.Outer.Background}" />
        </dxn:RenderStateTrigger>
      </dxn:RenderStateGroup>
    </dxn:RenderTemplate.Triggers>
  </dxn:RenderTemplate>
</ResourceDictionary>