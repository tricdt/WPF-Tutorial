<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2019DarkGray.v24.1;component/Core/Core/Themes/UICore.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <!-- General -->
  <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Height" Value="18" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid x:Name="Root" Background="Transparent" cs:id="Grid_0000">
            <Path x:Name="Collapsed" Fill="#FF262626" Style="{StaticResource UIShape.Right}" cs:id="Path_0000" x:Uid="@Fill=ControlLight.Foreground" />
            <Path x:Name="Expanded" Fill="#FF262626" Opacity="0" Style="{StaticResource UIShape.RightDown}" cs:id="Path_0001" x:Uid="@Fill=ControlLight.Foreground" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Fill" TargetName="Collapsed" Value="#FF262626" cs:id="Setter_0000" x:Uid="@Value=ControlLight.Foreground" />
              <Setter Property="Fill" TargetName="Expanded" Value="#FF262626" cs:id="Setter_0001" x:Uid="@Value=ControlLight.Foreground" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
              <Setter Property="Opacity" TargetName="Collapsed" Value="0" />
              <Setter Property="Opacity" TargetName="Expanded" Value="1" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Width" Value="18" />
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="MinHeight" Value="44" />
        <Setter Property="MinWidth" Value="44" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="TreeViewItemFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!-- Item -->
  <Style x:Key="{dxt:DefaultStyleThemeKey FullName=System.Windows.Controls.TreeViewItem}" TargetType="{x:Type TreeViewItem}">
    <Setter Property="dx:SvgImageHelper.State" Value="Normal" />
    <Setter Property="Background" Value="Transparent" cs:id="Setter_0000" />
    <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
    <Setter Property="Foreground" Value="#FF262626" cs:id="Setter_0001" x:Uid="@Value=ControlLight.Foreground" />
    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="Padding" Value="3,3,3,3" />
    <Setter Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxt:BrushesThemeKey ResourceKey=ContrastSvgPalette}}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TreeViewItem}">
          <Grid x:Name="Root">
            <Grid.ColumnDefinitions>
              <ColumnDefinition x:Name="ButtonColumn" MinWidth="16" Width="Auto" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition />
            </Grid.RowDefinitions>
            <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}" />
            <Border x:Name="IsDefault" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" Grid.Column="1" Grid.ColumnSpan="2" cs:id="Border_0000" />
            <Border x:Name="Content" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="1" Grid.ColumnSpan="2">
              <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" />
            </Border>
            <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="False">
              <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed" />
            </Trigger>
            <Trigger Property="HasItems" Value="False">
              <Setter Property="Visibility" TargetName="Expander" Value="Hidden" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
              <Setter Property="Foreground" Value="#FF000000" cs:id="Setter_0006" x:Uid="@Value=ControlLight.SelectionForeground" />
              <Setter Property="Background" TargetName="IsDefault" Value="#FFB3D3EC" cs:id="Setter_0002" x:Uid="@Value=SelectionAltBackground" />
              <Setter Property="BorderBrush" TargetName="IsDefault" Value="#FFB3D3EC" cs:id="Setter_0010" x:Uid="@Value=SelectionAltBorder" />
              <Setter Property="dx:SvgImageHelper.State" Value="Pressed" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="True" />
                <Condition Property="IsSelectionActive" Value="False" />
              </MultiTrigger.Conditions>
              <Setter Property="Foreground" Value="#FF000000" cs:id="Setter_0007" x:Uid="@Value=ControlLight.SelectionForeground" />
              <Setter Property="Background" TargetName="IsDefault" Value="#FFB3D3EC" cs:id="Setter_0003" x:Uid="@Value=SelectionAltBackground" />
              <Setter Property="BorderBrush" TargetName="IsDefault" Value="#FFB3D3EC" cs:id="Setter_0011" x:Uid="@Value=SelectionAltBorder" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" SourceName="Content" Value="True" />
                <Condition Property="IsSelected" Value="False" />
              </MultiTrigger.Conditions>
              <Setter Property="Foreground" Value="#FF000000" cs:id="Setter_0008" x:Uid="@Value=ControlLight.HoverForeground" />
              <Setter Property="Background" TargetName="IsDefault" Value="#FFB3D3EC" cs:id="Setter_0004" x:Uid="@Value=HoverAltBackground" />
              <Setter Property="BorderBrush" TargetName="IsDefault" Value="#FFB3D3EC" cs:id="Setter_0012" x:Uid="@Value=HoverAltBorder" />
              <Setter Property="dx:SvgImageHelper.State" Value="Hover" />
            </MultiTrigger>
            <Trigger Property="IsFocused" Value="True">
              <Setter Property="Foreground" Value="#FF000000" cs:id="Setter_0009" x:Uid="@Value=ControlLight.SelectionForeground" />
              <Setter Property="Background" TargetName="IsDefault" Value="#FFB3D3EC" cs:id="Setter_0005" x:Uid="@Value=SelectionAltBackground" />
              <Setter Property="BorderBrush" TargetName="IsDefault" Value="#FFB3D3EC" cs:id="Setter_0013" x:Uid="@Value=SelectionAltBorder" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" TargetName="Content" Value="0.38" />
              <Setter Property="Foreground" Value="#FF262626" x:Uid="@Value=ControlLight.Foreground" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
              <Setter Property="MinWidth" TargetName="ButtonColumn" Value="44" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Padding" Value="14,13,14,13" />
      </Trigger>
      <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="True">
        <Setter Property="ItemsPanel">
          <Setter.Value>
            <ItemsPanelTemplate>
              <VirtualizingStackPanel />
            </ItemsPanelTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>