<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2019DarkGray.v24.1;component/Core/Core/Editors/Themes/Generic/AutoCompleteBox.xaml" />
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2019DarkGray.v24.1;component/Core/Core/Editors/Themes/Office2019DarkGray/UICore.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <!-- General -->
  <ControlTemplate x:Key="{dxet:TokenEditorThemeKey ResourceKey=TokenContainerTemplate}" TargetType="{x:Type ContentControl}">
    <Grid x:Name="Root" Margin="0,1,1,1">
      <Border x:Name="IsDefault" Background="#FFBEBBB8" BorderBrush="#FFD4D4D4" BorderThickness="1" cs:id="Border_0000" x:Uid="@Background=ControlLight.Background;BorderBrush=Button.Background" />
      <ContentPresenter x:Name="Content" TextElement.Foreground="#FFEFEFEF" cs:id="ContentPresenter_0000" x:Uid="@TextElement.Foreground=Foreground" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="MinHeight" TargetName="Root" Value="40" />
      </Trigger>
      <DataTrigger Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True">
        <Setter Property="TextElement.Foreground" TargetName="Content" Value="#FFF5F5F5" cs:id="Setter_0005" x:Uid="@Value=HoverForeground" />
        <Setter Property="Background" TargetName="IsDefault" Value="#FF989694" cs:id="Setter_0000" x:Uid="@Value=ControlLight.HoverBackground" />
        <Setter Property="BorderBrush" TargetName="IsDefault" Value="#FF989694" cs:id="Setter_0010" x:Uid="@Value=ControlLight.HoverBackground" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsSelected, RelativeSource={RelativeSource Self}}" Value="True">
        <Setter Property="TextElement.Foreground" TargetName="Content" Value="#FFFFFFFF" cs:id="Setter_0006" x:Uid="@Value=SelectionForeground" />
        <Setter Property="Background" TargetName="IsDefault" Value="#FF898785" cs:id="Setter_0001" x:Uid="@Value=ControlLight.SelectionBackground" />
        <Setter Property="BorderBrush" TargetName="IsDefault" Value="#FF484848" cs:id="Setter_0011" x:Uid="@Value=HoverBackground" />
      </DataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
          <Condition Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsTokenFocused, RelativeSource={RelativeSource Self}}" Value="True" />
        </MultiDataTrigger.Conditions>
        <Setter Property="TextElement.Foreground" TargetName="Content" Value="#FF0072C6" cs:id="Setter_0007" x:Uid="@Value=Focused" />
        <Setter Property="Background" TargetName="IsDefault" Value="#FF898785" cs:id="Setter_0002" x:Uid="@Value=ControlLight.SelectionBackground" />
        <Setter Property="BorderBrush" TargetName="IsDefault" Value="#FF444444" cs:id="Setter_0012" x:Uid="@Value=SelectionBackground" />
      </MultiDataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsSelected, RelativeSource={RelativeSource Self}}" Value="False" />
          <Condition Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsTokenFocused, RelativeSource={RelativeSource Self}}" Value="True" />
        </MultiDataTrigger.Conditions>
        <Setter Property="TextElement.Foreground" TargetName="Content" Value="#FF0072C6" cs:id="Setter_0008" x:Uid="@Value=Focused" />
        <Setter Property="Background" TargetName="IsDefault" Value="#FF989694" cs:id="Setter_0003" x:Uid="@Value=ControlLight.HoverBackground" />
        <Setter Property="BorderBrush" TargetName="IsDefault" Value="#FF0072C6" cs:id="Setter_0013" x:Uid="@Value=Focused" />
      </MultiDataTrigger>
      <DataTrigger Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsEditorActivated, RelativeSource={RelativeSource Self}}" Value="True">
        <Setter Property="TextElement.Foreground" TargetName="Content" Value="#FF0072C6" cs:id="Setter_0009" x:Uid="@Value=Focused" />
        <Setter Property="Background" TargetName="IsDefault" Value="#FFD4D4D4" cs:id="Setter_0004" x:Uid="@Value=Editor.Background" />
        <Setter Property="BorderBrush" TargetName="IsDefault" Value="#FF0072C6" cs:id="Setter_0014" x:Uid="@Value=Focused" />
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
</ResourceDictionary>