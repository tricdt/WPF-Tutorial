<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxbi="http://schemas.devexpress.com/winfx/2008/xaml/bars/internal" xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys" xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2019DarkGray.v24.1;component/Core/Core/Bars/Themes/Office2019DarkGray/UICore.xaml" />
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2019DarkGray.v24.1;component/Core/Core/Bars/Themes/Office2019DarkGray/BarControl.xaml" />
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2019DarkGray.v24.1;component/Core/Core/Bars/Themes/Office2019DarkGray/BarItems/BarItemStyles.xaml" />
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2019DarkGray.v24.1;component/Core/Core/Bars/Themes/Office2019DarkGray/FloatingBarPopup.xaml" />
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2019DarkGray.v24.1;component/Core/Core/Bars/Themes/Office2019DarkGray/SubMenuBar/ScrollButtons.xaml" />
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2019DarkGray.v24.1;component/Core/Core/Bars/Themes/Generic/RenderTemplates.xaml" />
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2019DarkGray.v24.1;component/Core/Core/Bars/Themes/Generic/BarContainerControl.xaml" />
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2019DarkGray.v24.1;component/Core/Core/Bars/Themes/Generic/BarControl.xaml" />
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2019DarkGray.v24.1;component/Core/Core/Bars/Themes/Generic/BarItems.xaml" />
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2019DarkGray.v24.1;component/Core/Core/Bars/Themes/Generic/BarItemsInRadialMenu.xaml" />
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2019DarkGray.v24.1;component/Core/Core/Bars/Themes/Generic/RadialMenuControl.xaml" />
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2019DarkGray.v24.1;component/Core/Core/Bars/Themes/Generic/FloatingBarPopup.xaml" />
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2019DarkGray.v24.1;component/Core/Core/Bars/Themes/Generic/SubMenuBarControl.xaml" />
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2019DarkGray.v24.1;component/Core/Core/Bars/Themes/Generic/Gallery.xaml" />
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2019DarkGray.v24.1;component/Core/Core/Bars/Themes/Generic/BarItemLinkMenuHeader.xaml" />
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2019DarkGray.v24.1;component/Core/Core/Bars/Themes/Generic/BarItemSearchControl.xaml" />
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2019DarkGray.v24.1;component/Core/Core/Bars/Themes/Generic/DefaultStyles.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <!-- BarItemLinkMenuHeader -->
  <Style x:Key="{dxbt:BarItemLinkMenuHeaderThemeKey ResourceKey=HeaderStyle}" TargetType="{x:Type ContentControl}">
    <Setter Property="Foreground" Value="#FF262626" cs:id="Setter_0000" x:Uid="@Value=ControlLight.Foreground" />
  </Style>
  <ControlTemplate x:Key="{dxbt:BarItemLinkMenuHeaderThemeKey ResourceKey=HeaderTemplate}" TargetType="{x:Type dxb:BarItemLinkMenuHeaderContentControl}">
    <Border x:Name="PART_Border" Background="#FFBEBBB8" BorderBrush="#FF444444" BorderThickness="{TemplateBinding ContentBorderThickness}" CornerRadius="{TemplateBinding ContentCornerRadius}" Margin="-1,0,0,1" cs:id="Border_0001" x:Uid="@Background=ControlLight.Background;BorderBrush=Border">
      <ContentPresenter x:Name="Content" Margin="3" />
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="MinHeight" TargetName="PART_Border" Value="44" />
        <Setter Property="Margin" TargetName="Content" Value="14" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxbt:BarItemLinkMenuHeaderThemeKey ResourceKey=ItemsControlTemplate}" TargetType="{x:Type dxb:BarItemMenuHeaderItemsControl}">
    <Border x:Name="PART_SeparatorBorder" BorderThickness="{TemplateBinding ItemsBorderThickness}" VerticalAlignment="Stretch">
      <ItemsPresenter x:Name="PART_ItemsPresenter" Margin="{TemplateBinding ItemsPresenterThickness}" />
    </Border>
  </ControlTemplate>
  <!-- Gallery -->
  <Style x:Key="{dxbt:GalleryItemControlThemeKey ResourceKey=SplitLayoutStyle}" TargetType="{x:Type dxb:SplitLayoutPanel}">
    <Setter Property="BottomContent1Margin" Value="3,0,3,3" />
    <Setter Property="BottomContent2Margin" Value="3" />
    <Setter Property="LeftContent1Margin" Value="3,3,0,3" />
    <Setter Property="LeftContent2Margin" Value="3" />
    <Setter Property="RightContent1Margin" Value="0,3,3,3" />
    <Setter Property="RightContent2Margin" Value="3" />
    <Setter Property="SingleContent1Margin" Value="3" />
    <Setter Property="SingleContent2Margin" Value="3" />
    <Setter Property="TopContent1Margin" Value="3,3,3,0" />
    <Setter Property="TopContent2Margin" Value="3" />
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="BottomContent1Margin" Value="14,0,14,14" />
        <Setter Property="BottomContent2Margin" Value="14" />
        <Setter Property="LeftContent1Margin" Value="14,14,0,14" />
        <Setter Property="LeftContent2Margin" Value="14" />
        <Setter Property="RightContent1Margin" Value="0,14,14,14" />
        <Setter Property="RightContent2Margin" Value="14" />
        <Setter Property="SingleContent1Margin" Value="14" />
        <Setter Property="SingleContent2Margin" Value="14" />
        <Setter Property="TopContent1Margin" Value="14,14,14,0" />
        <Setter Property="TopContent2Margin" Value="14" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <!-- Caption -->
  <dxb:StatedStyleSelector x:Key="{dxbt:GalleryControlThemeKey ResourceKey=StandaloneCaptionTextStyleSelector}">
    <dxb:StatedStyleSelectorState IsDefault="True">
      <Style TargetType="{x:Type ContentControl}">
        <Setter Property="Foreground" Value="#FF262626" cs:id="Setter_0000" x:Uid="@Value=ControlLight.Foreground" />
      </Style>
    </dxb:StatedStyleSelectorState>
    <dxb:StatedStyleSelectorState State="Hover">
      <Style TargetType="{x:Type ContentControl}">
        <Setter Property="Foreground" Value="#FF000000" cs:id="Setter_0001" x:Uid="@Value=ControlLight.HoverForeground" />
      </Style>
    </dxb:StatedStyleSelectorState>
    <dxb:StatedStyleSelectorState State="Pressed">
      <Style TargetType="{x:Type ContentControl}">
        <Setter Property="Foreground" Value="#FF000000" cs:id="Setter_0002" x:Uid="@Value=ControlLight.SelectionForeground" />
      </Style>
    </dxb:StatedStyleSelectorState>
    <dxb:StatedStyleSelectorState State="Checked">
      <Style TargetType="{x:Type ContentControl}">
        <Setter Property="Foreground" Value="#FF000000" cs:id="Setter_0003" x:Uid="@Value=ControlLight.SelectionForeground" />
      </Style>
    </dxb:StatedStyleSelectorState>
    <dxb:StatedStyleSelectorState State="HoverChecked">
      <Style TargetType="{x:Type ContentControl}">
        <Setter Property="Foreground" Value="#FF000000" cs:id="Setter_0004" x:Uid="@Value=ControlLight.SelectionForeground" />
      </Style>
    </dxb:StatedStyleSelectorState>
  </dxb:StatedStyleSelector>
  <!-- Description -->
  <dxb:StatedStyleSelector x:Key="{dxbt:GalleryControlThemeKey ResourceKey=StandaloneDescriptionTextStyleSelector}">
    <dxb:StatedStyleSelectorState IsDefault="True">
      <Style TargetType="{x:Type ContentControl}">
        <Setter Property="Foreground" Value="#FF262626" cs:id="Setter_0000" x:Uid="@Value=ControlLight.Foreground" />
        <Setter Property="Opacity" Value="0.62" />
      </Style>
    </dxb:StatedStyleSelectorState>
    <dxb:StatedStyleSelectorState State="Hover">
      <Style TargetType="{x:Type ContentControl}">
        <Setter Property="Foreground" Value="#FF000000" cs:id="Setter_0001" x:Uid="@Value=ControlLight.HoverForeground" />
        <Setter Property="Opacity" Value="0.62" />
      </Style>
    </dxb:StatedStyleSelectorState>
    <dxb:StatedStyleSelectorState State="Pressed">
      <Style TargetType="{x:Type ContentControl}">
        <Setter Property="Foreground" Value="#FF000000" cs:id="Setter_0002" x:Uid="@Value=ControlLight.SelectionForeground" />
        <Setter Property="Opacity" Value="0.62" />
      </Style>
    </dxb:StatedStyleSelectorState>
    <dxb:StatedStyleSelectorState State="Checked">
      <Style TargetType="{x:Type ContentControl}">
        <Setter Property="Foreground" Value="#FF000000" cs:id="Setter_0003" x:Uid="@Value=ControlLight.SelectionForeground" />
        <Setter Property="Opacity" Value="0.62" />
      </Style>
    </dxb:StatedStyleSelectorState>
    <dxb:StatedStyleSelectorState State="HoverChecked">
      <Style TargetType="{x:Type ContentControl}">
        <Setter Property="Foreground" Value="#FF000000" cs:id="Setter_0004" x:Uid="@Value=ControlLight.SelectionForeground" />
        <Setter Property="Opacity" Value="0.62" />
      </Style>
    </dxb:StatedStyleSelectorState>
  </dxb:StatedStyleSelector>
  <!-- General -->
  <ControlTemplate x:Key="{dxbt:GalleryItemControlThemeKey ResourceKey=HoverContentControlTemplate}" TargetType="{x:Type ContentControl}">
    <Border Background="#FFD4D4D4" BorderBrush="#FF808080" BorderThickness="1" cs:id="Border_0001" x:Uid="@Background=Editor.Background;BorderBrush=Delimiter">
      <ContentPresenter Margin="3" />
    </Border>
  </ControlTemplate>
  <!-- ToolTip -->
  <ControlTemplate x:Key="{dxbt:GalleryItemControlThemeKey ResourceKey=ItemToolTipBackgroundTemplate}" TargetType="{x:Type ContentControl}">
    <Border BorderBrush="#FF444444" BorderThickness="1" Padding="2" cs:id="Border_0000" x:Uid="@BorderBrush=Border">
      <ContentPresenter />
    </Border>
  </ControlTemplate>
  <!-- Caption & Description -->
  <Style x:Key="{dxbt:GalleryItemControlThemeKey ResourceKey=DefaultItemCaptionTextStyle}" TargetType="{x:Type ContentControl}">
    <Setter Property="Foreground" Value="#FF262626" cs:id="Setter_0000" x:Uid="@Value=ControlLight.Foreground" />
  </Style>
  <Style x:Key="{dxbt:GalleryItemControlThemeKey ResourceKey=DefaultItemDescriptionTextStyle}" TargetType="{x:Type ContentControl}">
    <Setter Property="Foreground" Value="#FF262626" cs:id="Setter_0000" x:Uid="@Value=ControlLight.Foreground" />
    <Setter Property="Opacity" Value="0.62" />
  </Style>
  <Style x:Key="{dxbt:GalleryItemControlThemeKey ResourceKey=DefaultGroupCaptionTextStyle}" TargetType="{x:Type ContentControl}">
    <Setter Property="FontWeight" Value="Bold" />
    <Setter Property="Foreground" Value="#FF262626" cs:id="Setter_0000" x:Uid="@Value=ControlLight.Foreground" />
  </Style>
  <!-- Filter -->
  <Style x:Key="{dxbt:GalleryItemControlThemeKey ResourceKey=DefaultNormalFilterCaptionTextStyle}" TargetType="{x:Type ContentControl}">
    <Setter Property="FontWeight" Value="Bold" />
    <Setter Property="Foreground" Value="#FF262626" cs:id="Setter_0000" x:Uid="@Value=ControlLight.Foreground" />
    <Setter Property="Margin" Value="4" />
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Margin" Value="14" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxbt:GalleryItemControlThemeKey ResourceKey=DefaultSelectedFilterCaptionTextStyle}" TargetType="{x:Type ContentControl}">
    <Setter Property="FontWeight" Value="Bold" />
    <Setter Property="Foreground" Value="#FF262626" cs:id="Setter_0000" x:Uid="@Value=ControlLight.Foreground" />
    <Setter Property="Margin" Value="4" />
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Margin" Value="14" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <!-- Hint -->
  <Style x:Key="{dxbt:GalleryItemControlThemeKey ResourceKey=DefaultHintTextStyle}" TargetType="{x:Type ContentControl}">
    <Setter Property="Foreground" Value="#FF262626" cs:id="Setter_0000" x:Uid="@Value=ControlLight.Foreground" />
  </Style>
  <Style x:Key="{dxbt:GalleryItemControlThemeKey ResourceKey=DefaultHintCaptionTextStyle}" TargetType="{x:Type ContentControl}">
    <Setter Property="Foreground" Value="#FF262626" cs:id="Setter_0000" x:Uid="@Value=ControlLight.Foreground" />
  </Style>
  <!-- General -->
  <ControlTemplate x:Key="{dxbt:GalleryItemGroupControlThemeKey ResourceKey=CaptionTemplate}" TargetType="{x:Type ContentControl}">
    <Border Background="#FFBEBBB8" Margin="1,0,1,0" MinHeight="24" cs:id="Border_0000" x:Uid="@Background=ControlLight.Background">
      <ContentPresenter Margin="2,0,0,0" />
    </Border>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxbt:GalleryItemGroupControlThemeKey ResourceKey=BackgroundTemplate}" TargetType="{x:Type ContentControl}">
    <ContentPresenter />
  </ControlTemplate>
  <ControlTemplate x:Key="{dxbt:GalleryItemGroupControlThemeKey ResourceKey=ItemsBackgroundTemplate}" TargetType="{x:Type ContentControl}">
    <ContentPresenter />
  </ControlTemplate>
  <!-- General -->
  <Style x:Key="{dxbt:GalleryControlThemeKey ResourceKey=StandaloneContentStyle}" TargetType="{x:Type ContentControl}">
    <Setter Property="Foreground" Value="#FF262626" cs:id="Setter_0000" x:Uid="@Value=ControlLight.Foreground" />
    <Setter Property="Margin" Value="1" />
  </Style>
  <Style x:Key="{dxbt:GalleryControlThemeKey ResourceKey=StandaloneCaptionStyle}" TargetType="{x:Type ToggleButton}">
    <Setter Property="Foreground" Value="#FF262626" cs:id="Setter_0000" x:Uid="@Value=ControlLight.Foreground" />
  </Style>
  <Style x:Key="{dxbt:GalleryControlThemeKey ResourceKey=StandaloneGroupsBackgroundStyle}" TargetType="{x:Type ContentControl}" />
  <Style x:Key="{dxbt:GalleryControlThemeKey ResourceKey=StandaloneGroupsViewportStyle}" TargetType="{x:Type dxb:GalleryGroupsViewer}" />
  <Style x:Key="{dxbt:GalleryControlThemeKey ResourceKey=StandaloneVerticalScrollBarContainerStyle}" TargetType="{x:Type ContentControl}" />
  <!-- Caption -->
  <ControlTemplate x:Key="{dxbt:GalleryControlThemeKey ResourceKey=StandaloneCaptionTemplate}" TargetType="{x:Type ToggleButton}">
    <Grid>
      <Border x:Name="IsDefault" Background="#FFBEBBB8" BorderBrush="#FF808080" BorderThickness="0,0,0,1" Margin="1" cs:id="Border_0001" x:Uid="@Background=ControlLight.Background;BorderBrush=Delimiter">
        <ContentPresenter />
      </Border>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="MouseOver">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF989694" cs:id="ColorAnimation_0000" x:Uid="@To=ControlLight.HoverBackground" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF898785" cs:id="ColorAnimation_0001" x:Uid="@To=ControlLight.SelectionBackground" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
        <VisualStateGroup x:Name="CheckedStates">
          <VisualState x:Name="Unchecked" />
          <VisualState x:Name="Checked">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF898785" cs:id="ColorAnimation_0002" x:Uid="@To=ControlLight.SelectionBackground" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
  </ControlTemplate>
  <!-- Background -->
  <ControlTemplate x:Key="{dxbt:GalleryControlThemeKey ResourceKey=StandaloneBackgroundTemplate}" TargetType="{x:Type ContentControl}">
    <Border Background="#FFD4D4D4" BorderBrush="#FF444444" BorderThickness="1" cs:id="Border_0001" x:Uid="@Background=Editor.Background;BorderBrush=Border">
      <ContentPresenter />
    </Border>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxbt:GalleryControlThemeKey ResourceKey=StandaloneGroupsBackgroundTemplate}" TargetType="{x:Type ContentControl}">
    <ContentPresenter />
  </ControlTemplate>
  <!-- Item -->
  <ControlTemplate x:Key="{dxbt:GalleryItemControlThemeKey ResourceKey=StandaloneBorderTemplate}" TargetType="{x:Type dxb:ItemBorderControl}">
    <Grid x:Name="Root" Background="Transparent" cs:id="Grid_0000">
      <Border x:Name="IsDefault" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" cs:id="Border_0000" />
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="State">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="Hover">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF989694" cs:id="ColorAnimation_0000" x:Uid="@To=ControlLight.HoverBackground" />
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#FF989694" cs:id="ColorAnimation_0005" x:Uid="@To=ControlLight.HoverBackground" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF898785" cs:id="ColorAnimation_0001" x:Uid="@To=ControlLight.SelectionBackground" />
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#FF898785" cs:id="ColorAnimation_0006" x:Uid="@To=ControlLight.SelectionBackground" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Checked">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF898785" cs:id="ColorAnimation_0002" x:Uid="@To=ControlLight.SelectionBackground" />
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#FF898785" cs:id="ColorAnimation_0007" x:Uid="@To=ControlLight.SelectionBackground" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="HoverChecked">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF898785" cs:id="ColorAnimation_0003" x:Uid="@To=ControlLight.SelectionBackground" />
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#FF898785" cs:id="ColorAnimation_0008" x:Uid="@To=ControlLight.SelectionBackground" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Focused">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF989694" cs:id="ColorAnimation_0004" x:Uid="@To=ControlLight.HoverBackground" />
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="#FF989694" cs:id="ColorAnimation_0009" x:Uid="@To=ControlLight.HoverBackground" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxbt:GalleryItemControlThemeKey ResourceKey=StandaloneGlyphBorderTemplate}" TargetType="{x:Type dxb:ItemBorderControl}">
    <Grid x:Name="Root" Background="Transparent" cs:id="Grid_0000">
      <Border x:Name="IsDefault" Background="Transparent" cs:id="Border_0000" />
      <ContentPresenter />
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="State">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="Hover">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF989694" cs:id="ColorAnimation_0000" x:Uid="@To=ControlLight.HoverBackground" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF898785" cs:id="ColorAnimation_0001" x:Uid="@To=ControlLight.SelectionBackground" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Checked">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF898785" cs:id="ColorAnimation_0002" x:Uid="@To=ControlLight.SelectionBackground" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="HoverChecked">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF898785" cs:id="ColorAnimation_0003" x:Uid="@To=ControlLight.SelectionBackground" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Focused">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF989694" cs:id="ColorAnimation_0004" x:Uid="@To=ControlLight.HoverBackground" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
  </ControlTemplate>
  <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Bars.BarManagerThemeDependentValuesProvider}" BasedOn="{StaticResource BarManagerThemeDependentValuesProviderDefaultStyle}" TargetType="{x:Type dxb:BarManagerThemeDependentValuesProvider}" />
  <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Bars.SubMenuBarControl}" BasedOn="{StaticResource SubMenuBarControlDefaultStyle}" TargetType="{x:Type dxb:SubMenuBarControl}" />
  <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Bars.PopupMenuBarControl}" BasedOn="{StaticResource SubMenuBarControlDefaultStyle}" TargetType="{x:Type dxb:PopupMenuBarControl}" />
  <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Bars.MenuBarControl}" BasedOn="{StaticResource MenuBarControlDefaultStyle}" TargetType="{x:Type dxb:MenuBarControl}" />
  <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Bars.BarControl}" BasedOn="{StaticResource BarControlDefaultStyle}" TargetType="{x:Type dxb:BarControl}" />
  <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Bars.BarContainerControl}" BasedOn="{StaticResource BarContainerControlDefaultStyle}" TargetType="{x:Type dxb:BarContainerControl}" />
  <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Bars.FloatingBarPopup}" BasedOn="{StaticResource FloatingBarPopupDefaultStyle}" TargetType="{x:Type dxb:FloatingBarPopup}" />
  <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Bars.FloatingBarPopupContentControl}" BasedOn="{StaticResource FloatingBarPopupContentControlDefaultStyle}" TargetType="{x:Type dxb:FloatingBarPopupContentControl}" />
  <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Bars.ItemBorderControl}" BasedOn="{StaticResource ItemBorderControlDefaultStyle}" TargetType="{x:Type dxb:ItemBorderControl}" />
  <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Bars.BarButtonItemLinkControl}" BasedOn="{StaticResource BarButtonItemLinkControlDefaultStyle}" TargetType="{x:Type dxb:BarButtonItemLinkControl}" />
  <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Bars.BarSubItemLinkControl}" BasedOn="{StaticResource BarSubItemLinkControlDefaultStyle}" TargetType="{x:Type dxb:BarSubItemLinkControl}" />
  <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Bars.BarSplitButtonItemLinkControl}" BasedOn="{StaticResource BarSplitButtonItemLinkControlDefaultStyle}" TargetType="{x:Type dxb:BarSplitButtonItemLinkControl}" />
  <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Bars.BarCheckItemLinkControl}" BasedOn="{StaticResource BarCheckItemLinkControlDefaultStyle}" TargetType="{x:Type dxb:BarCheckItemLinkControl}" />
  <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Bars.BarEditItemLinkControl}" BasedOn="{StaticResource BarEditItemLinkControlDefaultStyle}" TargetType="{x:Type dxb:BarEditItemLinkControl}" />
  <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Bars.BarStaticItemLinkControl}" BasedOn="{StaticResource BarStaticItemLinkControlDefaultStyle}" TargetType="{x:Type dxb:BarStaticItemLinkControl}" />
  <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Bars.BarItemLinkSeparatorControl}" BasedOn="{StaticResource BarItemLinkSeparatorControlDefaultStyle}" TargetType="{x:Type dxb:BarItemLinkSeparatorControl}" />
  <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Bars.BarItemLinkMenuHeaderControl}" BasedOn="{StaticResource BarItemLinkMenuHeaderControlDefaultStyle}" TargetType="{x:Type dxb:BarItemLinkMenuHeaderControl}" />
  <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Bars.BarSplitCheckItemLinkControl}" BasedOn="{StaticResource BarSplitCheckItemLinkControlDefaultStyle}" TargetType="{x:Type dxb:BarSplitCheckItemLinkControl}" />
  <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Bars.Customization.BarItemDragElementContent}" BasedOn="{StaticResource BarItemDragElementContentDefaultStyle}" TargetType="{x:Type dxbi:BarItemDragElementContent}" />
  <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Bars.Customization.BarDragElementPopup}" BasedOn="{StaticResource BarDragElementPopupDefaultStyle}" TargetType="{x:Type dxbi:BarDragElementPopup}" />
  <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Bars.BarPopupBase}" BasedOn="{StaticResource BarPopupBaseDefaultStyle}" TargetType="{x:Type dxb:BarPopupBase}" />
  <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Bars.PopupContainer}" BasedOn="{StaticResource PopupContainerDefaultStyle}" TargetType="{x:Type dxb:PopupContainer}" />
  <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Bars.OfficeTabletItemsControl}" BasedOn="{StaticResource OfficeTabletItemsControlDefaultStyle}" TargetType="{x:Type dxb:OfficeTabletItemsControl}" />
  <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Bars.GalleryControl}" BasedOn="{StaticResource GalleryControlDefaultStyle}" TargetType="{x:Type dxb:GalleryControl}" />
  <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Bars.GalleryItemControl}" BasedOn="{StaticResource GalleryItemControlDefaultStyle}" TargetType="{x:Type dxb:GalleryItemControl}" />
  <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Bars.GalleryItemGroupControl}" BasedOn="{StaticResource GalleryItemGroupControlDefaultStyle}" TargetType="{x:Type dxb:GalleryItemGroupControl}" />
  <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Bars.GalleryItemGroupsControl}" BasedOn="{StaticResource GalleryItemGroupsControlDefaultStyle}" TargetType="{x:Type dxb:GalleryItemGroupsControl}" />
  <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Bars.GalleryItemHoverToolTip}" BasedOn="{StaticResource GalleryItemHoverToolTipDefaultStyle}" TargetType="{x:Type dxb:GalleryItemHoverToolTip}" />
  <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Bars.TextSplitterControl}" BasedOn="{StaticResource TextSplitterControlDefaultStyle}" TargetType="{x:Type dxb:TextSplitterControl}" />
  <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Bars.GlyphSideControl}" BasedOn="{StaticResource GlyphSideControlDefaultStyle}" TargetType="{x:Type dxb:GlyphSideControl}" />
  <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Bars.PopupMenuColumnSplitter}" BasedOn="{StaticResource PopupMenuColumnSplitterDefaultStyle}" TargetType="{x:Type dxb:PopupMenuColumnSplitter}" />
  <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Bars.RadialMenuControl}" BasedOn="{StaticResource RadialMenuControlDefaultStyle}" TargetType="{x:Type dxb:RadialMenuControl}" />
  <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Bars.RadialMenuLevelControl}" BasedOn="{StaticResource RadialMenuLevelControlDefaultStyle}" TargetType="{x:Type dxb:RadialMenuLevelControl}" />
  <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Bars.RadialMenuPopupBorderControl}" BasedOn="{StaticResource RadialMenuPopupBorderControlDefaultStyle}" TargetType="{x:Type dxb:RadialMenuPopupBorderControl}" />
  <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Bars.RadialContextMenu}" BasedOn="{StaticResource RadialContextMenuDefaultStyle}" TargetType="{x:Type dxb:RadialContextMenu}">
    <Setter Property="TextBlock.FontFamily" Value="Segoe UI" />
    <Setter Property="TextBlock.Foreground" Value="#FFEFEFEF" cs:id="Setter_0000" x:Uid="@Value=Foreground" />
    <Setter Property="TextElement.FontSize" Value="12" />
    <Setter Property="TextElement.FontStretch" Value="Normal" />
    <Setter Property="TextElement.FontStyle" Value="Normal" />
    <Setter Property="TextElement.FontWeight" Value="Normal" />
  </Style>
  <!-- BarItemSearchControl -->
  <SolidColorBrush x:Key="{dxbt:BarItemSearchControlThemeKey ResourceKey=BackgroundBrush}" Color="#FFD4D4D4" Opacity="0.7" x:Uid="@Color=Editor.Background" />
  <SolidColorBrush x:Key="{dxbt:BarItemSearchControlThemeKey ResourceKey=HoverBackgroundBrush}" Color="#FFD4D4D4" Opacity="1" x:Uid="@Color=Editor.Background" />
  <DataTemplate x:Key="{dxbt:BarItemSearchControlThemeKey ResourceKey=DescriptionTemplate}">
    <TextBlock Text="{Binding}" Opacity="0.75" />
  </DataTemplate>
  <!-- GlyphSideControl -->
  <ControlTemplate x:Key="{dxbt:GlyphSideControlThemeKey ResourceKey=Template}" TargetType="{x:Type dxb:GlyphSideControl}">
    <Border x:Name="PART_Border">
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="AlignmentStates">
          <VisualState x:Name="Top" />
          <VisualState x:Name="Center" />
          <VisualState x:Name="Bottom" />
          <VisualState x:Name="Stretch" />
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Border>
  </ControlTemplate>
  <!-- PopupControlContainer -->
  <ControlTemplate x:Key="{dxbt:PopupControlContainerThemeKey ResourceKey=ControlTemplate}" TargetType="{x:Type dxb:PopupContainer}">
    <dx:DXContentPresenter Background="{TemplateBinding Background}" Content="{TemplateBinding Content}" />
  </ControlTemplate>
  <Style x:Key="{dxbt:OfficeTabletItemsControlThemeKey ResourceKey=CaptionStyle}" TargetType="{x:Type TextBlock}">
    <Setter Property="Foreground" Value="#FFEFEFEF" cs:id="Setter_0000" x:Uid="@Value=Foreground" />
    <Setter Property="Margin" Value="12,3,12,3" />
  </Style>
  <Style x:Key="{dxbt:OfficeTabletItemsControlThemeKey ResourceKey=BackgroundStyle}" TargetType="{x:Type Border}">
    <Setter Property="Background" Value="#FF605E5C" cs:id="Setter_0000" x:Uid="@Value=Window.Background" />
    <Setter Property="BorderBrush" Value="#FF808080" cs:id="Setter_0001" x:Uid="@Value=Delimiter" />
    <Setter Property="BorderThickness" Value="0,0,0,1" />
    <Setter Property="MinHeight" Value="22" />
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="MinHeight" Value="44" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <!-- Back -->
  <Style x:Key="{dxbt:OfficeTabletItemsControlThemeKey ResourceKey=BackButtonStyle}" TargetType="{x:Type ButtonBase}">
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="MinHeight" Value="22" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <Grid x:Name="Root">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border x:Name="IsDefault" Background="Transparent" Grid.Column="0" cs:id="Border_0000">
              <Path Margin="9,7,9,7" Style="{StaticResource UIShape.Left}" />
            </Border>
            <TextBlock Foreground="#FFEFEFEF" Grid.Column="1" MaxWidth="60" Text="{TemplateBinding Content}" TextAlignment="Center" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" cs:id="TextBlock_0000" x:Uid="@Foreground=Foreground" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" TargetName="IsDefault" Value="#FF484848" cs:id="Setter_0000" x:Uid="@Value=HoverBackground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="MinWidth" Value="44" />
        <Setter Property="MinHeight" Value="44" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <!-- Customization -->
  <ControlTemplate x:Key="{dxbt:CustomizationThemeKey ResourceKey=DragElementTemplate}" TargetType="{x:Type dxbi:BarItemDragElementContent}">
    <Grid x:Name="Root">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <Grid>
        <Border Background="#FF605E5C" BorderBrush="#FF444444" BorderThickness="1" cs:id="Border_0001" x:Uid="@Background=Window.Background;BorderBrush=Border" />
        <StackPanel Orientation="Horizontal">
          <dx:DXImage Margin="6" Source="{Binding Path=Glyph}" />
          <TextBlock Foreground="#FFEFEFEF" Margin="0,6,10,6" Text="{Binding Path=Content}" cs:id="TextBlock_0000" x:Uid="@Foreground=Foreground" />
        </StackPanel>
      </Grid>
      <dx:DragIconControl x:Name="PART_DragIcon" DragType="{Binding Path=(dxb:BarDragProvider.DragType), RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Right" Margin="-12,-12,0,0" VerticalAlignment="Bottom" />
    </Grid>
  </ControlTemplate>
  <!-- TextSplitter -->
  <Style x:Key="{dxbt:TextSplitterThemeKey ResourceKey=BarSubItem}" TargetType="{x:Type dxb:TextSplitterControl}">
    <Setter Property="BottomSideArrowContainerStyle">
      <Setter.Value>
        <Style TargetType="{x:Type ContentControl}">
          <Setter Property="HorizontalAlignment" Value="Center" />
          <Setter Property="Margin" Value="4" />
          <Setter Property="VerticalAlignment" Value="Bottom" />
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="FirstStringHorizontalAlignment" Value="Center" />
    <Setter Property="FirstStringMargin" Value="0" />
    <Setter Property="Margin" Value="0,-4,0,-2" />
    <Setter Property="NormalArrowTemplate">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ContentControl}">
          <Path Fill="{TemplateBinding Foreground}" Style="{StaticResource UIShape.Down}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="NormalTextStyle">
      <Setter.Value>
        <Style TargetType="{x:Type ContentControl}" />
      </Setter.Value>
    </Setter>
    <Setter Property="RightSideArrowContainerStyle">
      <Setter.Value>
        <Style TargetType="{x:Type ContentControl}">
          <Setter Property="HorizontalAlignment" Value="Right" />
          <Setter Property="Margin" Value="2" />
          <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="SecondStringHorizontalAlignment" Value="Center" />
    <Setter Property="SecondStringMargin" Value="0,-1,0,0" />
    <Setter Property="SelectedArrowTemplate">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ContentControl}">
          <Path Style="{StaticResource UIShape.Down}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="SelectedTextStyle">
      <Setter.Value>
        <Style TargetType="{x:Type ContentControl}" />
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxbt:TextSplitterThemeKey ResourceKey=BarButtonItem}" BasedOn="{StaticResource {dxbt:TextSplitterThemeKey ResourceKey=BarSubItem}}" TargetType="{x:Type dxb:TextSplitterControl}" />
  <Style x:Key="{dxbt:TextSplitterThemeKey ResourceKey=BarCheckItem}" BasedOn="{StaticResource {dxbt:TextSplitterThemeKey ResourceKey=BarSubItem}}" TargetType="{x:Type dxb:TextSplitterControl}" />
  <Style x:Key="{dxbt:TextSplitterThemeKey ResourceKey=BarSplitButtonItem}" BasedOn="{StaticResource {dxbt:TextSplitterThemeKey ResourceKey=BarSubItem}}" TargetType="{x:Type dxb:TextSplitterControl}" />
  <!--#region brushes-->
  <SolidColorBrush x:Key="RadialMenuLevelControl_BackColor" Color="#FF444444" x:Uid="@Color=Backstage.Window.Background" />
  <SolidColorBrush x:Key="RadialMenuLevelControl_InnerColor" Color="#FF605E5C" x:Uid="@Color=Control.Background" />
  <SolidColorBrush x:Key="CenterButton_StrokeColor" Color="#FFEFEFEF" x:Uid="@Color=Foreground" />
  <SolidColorBrush x:Key="CenterButton_InnerColor" Color="#FF444444" x:Uid="@Color=Backstage.Window.Background" />
  <SolidColorBrush x:Key="CenterButton_HoverColor" Color="#FF484848" x:Uid="@Color=HoverBackground" />
  <SolidColorBrush x:Key="{dxbt:RadialMenuItemThemeKey ResourceKey=BackgroundBrush}" Color="#FF363636" x:Uid="@Color=Backstage.Button.Background" />
  <SolidColorBrush x:Key="{dxbt:RadialMenuItemThemeKey ResourceKey=PathBrush}" Color="#FFC2C2C2" x:Uid="@Color=ForegroundDark" />
  <SolidColorBrush x:Key="{dxbt:RadialMenuItemThemeKey ResourceKey=HoverPathBrush}" Color="#FF0067B0" x:Uid="@Color=Backstage.HoverBackground" />
  <Color x:Key="{dxbt:RadialMenuItemThemeKey ResourceKey=NormalImageColorizeColor}" x:Uid="@Content_Property=Foreground">#FFEFEFEF</Color>
  <Color x:Key="{dxbt:RadialMenuItemThemeKey ResourceKey=HoverImageColorizeColor}" x:Uid="@Content_Property=Foreground">#FFEFEFEF</Color>
  <Color x:Key="{dxbt:RadialMenuItemThemeKey ResourceKey=PressedImageColorizeColor}" x:Uid="@Content_Property=Foreground">#FFEFEFEF</Color>
  <Color x:Key="{dxbt:RadialMenuItemThemeKey ResourceKey=DisabledImageColorizeColor}" x:Uid="@Content_Property=Foreground">#FFEFEFEF</Color>
  <!--#endregion-->
  <!--#region styles and templates-->
  <Style x:Key="{dxbt:RadialMenuLevelControlThemeKey ResourceKey=CircleBorderStyle}" TargetType="{x:Type dxb:CircleBorder}">
    <Setter Property="Stroke" Value="{StaticResource RadialMenuLevelControl_BackColor}" />
    <Setter Property="Fill" Value="{StaticResource RadialMenuLevelControl_InnerColor}" />
    <Setter Property="StrokeThickness" Value="26" />
    <Setter Property="Margin" Value="13" />
  </Style>
  <DataTemplate x:Key="{dxbt:RadialMenuControlThemeKey ResourceKey=DefaultBackButtonGlyphTemplate}">
    <Path Data="F1 M 16,5L 16,7L 4,7L 9,12L 6,12L 0,6L 6,0L 9,0L 4,5L 16,5 Z " Fill="{StaticResource CenterButton_StrokeColor}" Height="12" Stretch="Fill" Width="16" />
  </DataTemplate>
  <DataTemplate x:Key="{dxbt:RadialMenuControlThemeKey ResourceKey=DefaultGlyphTemplate}">
    <Path Data="F1 M 0,0L 16,0L 16,2L 0,2L 0,0 Z M 0,5L 16,5L 16,7L 0,7L 0,5 Z M 0,10L 16,10L 16,12L 0,12L 0,10 Z " Fill="{StaticResource CenterButton_StrokeColor}" Height="12" Stretch="Fill" Width="16" />
  </DataTemplate>
  <ControlTemplate x:Key="{dxbt:RadialMenuControlThemeKey ResourceKey=CenterButtonTemplate}" TargetType="Button">
    <Border x:Name="border" Background="{StaticResource CenterButton_InnerColor}" BorderBrush="{StaticResource CenterButton_StrokeColor}" BorderThickness="3" CornerRadius="21" Height="42" Width="42">
      <ContentPresenter />
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="IsMouseOver" Value="true">
        <Setter Property="Background" TargetName="border" Value="{StaticResource CenterButton_HoverColor}" />
      </Trigger>
      <Trigger Property="IsKeyboardFocused" Value="true">
        <Setter Property="Background" TargetName="border" Value="{StaticResource CenterButton_HoverColor}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <sys:Boolean x:Key="{dxbt:BarItemRenderThemeKey ResourceKey=UseLightweightTemplates}">True</sys:Boolean>
</ResourceDictionary>