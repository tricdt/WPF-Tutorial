<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxbi="http://schemas.devexpress.com/winfx/2008/xaml/bars/internal" xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys" xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon" xmlns:dxri="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/internal" xmlns:dxrt="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/themekeys" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2019DarkGray.v24.1;component/Ribbon/Office2019DarkGray/RibbonApplicationMenu/ApplicationButtonStyles_Base.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <Style x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=StyleTabletOffice}" TargetType="{x:Type ContentControl}">
    <Setter Property="Height" Value="16" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="Margin" Value="8" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="Width" Value="16" />
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Margin" Value="14" />
        <Setter Property="MinHeight" Value="44" />
        <Setter Property="MinWidth" Value="44" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=StyleTabletOfficeInPopup}" BasedOn="{StaticResource {dxrt:ApplicationButtonThemeKey ResourceKey=StyleTabletOffice}}" TargetType="{x:Type ContentControl}" />
  <!--#region Application Button Text Style-->
  <Style x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=NormalTextStyle}" TargetType="{x:Type ContentControl}">
    <Setter Property="Foreground" Value="#FF262626" cs:id="Setter_0000" x:Uid="@Value=ControlLight.Foreground" />
    <Setter Property="ContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <Grid Background="Transparent" TextElement.FontSize="{Binding Path=(TextElement.FontSize), RelativeSource={RelativeSource TemplatedParent}, Converter={dxbi:DoubleAdditionConverter Argument=1}}" cs:id="Grid_0000">
            <TextBlock x:Name="normalText" HorizontalAlignment="Center" Text="{Binding}" />
            <TextBlock x:Name="boldText" FontWeight="SemiBold" HorizontalAlignment="Center" Text="{Binding}" Visibility="Hidden" cs:id="TextBlock_0000" />
          </Grid>
          <DataTemplate.Triggers>
            <Trigger Property="FontWeight" SourceName="normalText" Value="SemiBold">
              <Setter Property="FontWeight" TargetName="boldText" Value="Normal" />
            </Trigger>
          </DataTemplate.Triggers>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=PressedTextStyle}" BasedOn="{StaticResource {dxrt:ApplicationButtonThemeKey ResourceKey=NormalTextStyle}}" TargetType="{x:Type ContentControl}">
    <Setter Property="FontWeight" Value="SemiBold" />
  </Style>
  <Style x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=SelectedTextStyle}" BasedOn="{StaticResource {dxrt:ApplicationButtonThemeKey ResourceKey=PressedTextStyle}}" TargetType="{x:Type ContentControl}"></Style>
  <Style x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=CheckedTextStyle}" BasedOn="{StaticResource {dxrt:ApplicationButtonThemeKey ResourceKey=PressedTextStyle}}" TargetType="{x:Type ContentControl}"></Style>
  <!--#endregion-->
</ResourceDictionary>