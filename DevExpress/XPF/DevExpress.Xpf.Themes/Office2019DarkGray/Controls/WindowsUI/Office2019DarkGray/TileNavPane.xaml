<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxcop="clr-namespace:DevExpress.Xpf.Controls.Primitives;assembly=DevExpress.Xpf.Controls.v24.1" xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxnav="http://schemas.devexpress.com/winfx/2008/xaml/navigation" xmlns:dxnavi="clr-namespace:DevExpress.Xpf.Navigation.Internal;assembly=DevExpress.Xpf.Controls.v24.1" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxwuii="http://schemas.devexpress.com/winfx/2008/xaml/windowsui/internal" xmlns:dxwuit="http://schemas.devexpress.com/winfx/2008/xaml/windowsui/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2019DarkGray.v24.1;component/Controls/WindowsUI/Office2019DarkGray/UICore.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <!-- General -->
  <DataTemplate x:Key="{dxwuit:TileNavPaneElementsThemeKey ResourceKey=TileNavButtonSeparatorTemplate}">
    <Path Fill="#FFC2C2C2" Style="{StaticResource UIShape.Beak.Right}" cs:id="Path_0000" x:Uid="@Fill=ForegroundDark" />
  </DataTemplate>
  <DataTemplate x:Key="NavButtonDropDownTemplate">
    <Path RenderTransformOrigin="0.5, 0.5" Style="{StaticResource UIShape.Down}">
      <Path.RenderTransform>
        <RotateTransform CenterX="0.5" CenterY="0.5">
          <RotateTransform.Angle>
            <Binding Converter="{StaticResource orientationToAngleConverter}" Path="FlyoutShowDirection" RelativeSource="{RelativeSource AncestorType=dxnav:TileNavPane}" />
          </RotateTransform.Angle>
        </RotateTransform>
      </Path.RenderTransform>
    </Path>
  </DataTemplate>
  <!-- TileNavPane -->
  <ControlTemplate x:Key="{dxwuit:TileNavPaneElementsThemeKey ResourceKey=TileBarArrowTemplate}" TargetType="dxnavi:TileBarItemArrowControl">
    <Grid Background="{TemplateBinding Background}">
      <Grid.RowDefinitions>
        <RowDefinition />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <Border x:Name="IsDefault" Background="Transparent" cs:id="Border_0000" />
      <Path x:Name="Glyph" Fill="#FFC2C2C2" RenderTransformOrigin="0.5,0.5" Style="{StaticResource UIShape.Down}" cs:id="Path_0000" x:Uid="@Fill=ForegroundDark">
        <Path.RenderTransform>
          <RotateTransform x:Name="ArrowRotateTransform" CenterX="0.5" CenterY="0.5">
            <RotateTransform.Angle>
              <Binding Converter="{StaticResource arrowDirectionToAngleConverter}" Path="ArrowDirection" RelativeSource="{RelativeSource TemplatedParent}" />
            </RotateTransform.Angle>
          </RotateTransform>
        </Path.RenderTransform>
      </Path>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="MouseOver">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF0067B0" cs:id="ColorAnimation_0000" x:Uid="@To=Backstage.HoverBackground" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF0072C6" cs:id="ColorAnimation_0001" x:Uid="@To=Backstage.SelectionBackground" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
        <VisualStateGroup x:Name="CheckedStates">
          <VisualState x:Name="EmptyCheckedState" />
          <VisualState x:Name="Checked">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF0072C6" cs:id="ColorAnimation_0002" x:Uid="@To=Backstage.SelectionBackground" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Unchecked" />
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxwuit:TileNavPaneElementsThemeKey ResourceKey=TileButtonControlTemplate}" TargetType="dxnavi:TileButtonControl">
    <Grid x:Name="Root" Background="{TemplateBinding Background}">
      <Border x:Name="IsDefault" Background="Transparent" cs:id="Border_0000" />
      <Grid Margin="{TemplateBinding Padding}">
        <Image dxb:ImageColorizer.Color="{TemplateBinding ActualGlyphColor}" dxb:ImageColorizer.IsEnabled="{TemplateBinding AllowGlyphTheming}" HorizontalAlignment="{TemplateBinding HorizontalGlyphAlignment}" Source="{TemplateBinding Glyph}" Stretch="None" VerticalAlignment="{TemplateBinding VerticalGlyphAlignment}" />
        <ContentPresenter x:Name="Content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
      </Grid>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="MouseOver">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Opacity" To="0.62" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Opacity" To="0.62" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Disabled">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.38" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
  </ControlTemplate>
  <!-- TileNavButton -->
  <ControlTemplate x:Key="{dxwuit:TileNavPaneElementsThemeKey ResourceKey=TileNavButtonTemplate}" TargetType="dxnav:NavButton">
    <Border x:Name="Root" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
      <Grid>
        <Border x:Name="IsDefault" Background="Transparent" cs:id="Border_0000" />
        <dxnavi:NavButtonPanel Content1Location="{TemplateBinding GlyphAlignment}" GlyphSpace="{TemplateBinding GlyphSpace}" Margin="{TemplateBinding Padding}">
          <dxnavi:NavButtonPanel.Content1>
            <dx:PixelSnapper HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding IsGlyphActuallyVisible, Converter={StaticResource ResourceKey=BooleanToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}">
              <Image x:Name="Glyph" dxb:ImageColorizer.Color="{Binding Path=(dxb:ImageColorizer.Color), RelativeSource={RelativeSource TemplatedParent}}" dxb:ImageColorizer.IsEnabled="{TemplateBinding AllowGlyphTheming}" Source="{TemplateBinding Glyph}" Stretch="None" />
            </dx:PixelSnapper>
          </dxnavi:NavButtonPanel.Content1>
          <dxnavi:NavButtonPanel.Content2>
            <StackPanel HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Orientation="Horizontal" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
              <ContentControl x:Name="Content" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" Focusable="False" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" Visibility="{Binding IsContentActuallyVisible, Converter={StaticResource ResourceKey=BooleanToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
              <dxwuii:ShapeContentPresenter x:Name="DrowDownButton" ContentTemplate="{StaticResource NavButtonDropDownTemplate}" Foreground="{TemplateBinding Foreground}" Margin="{DynamicResource {dxwuit:TileNavPaneElementsThemeKey ResourceKey=TileNavButtonDropDownButtonMargin}}" Visibility="{Binding IsFlyoutButtonVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ResourceKey=BooleanToVisibilityConverter}}" />
            </StackPanel>
          </dxnavi:NavButtonPanel.Content2>
        </dxnavi:NavButtonPanel>
      </Grid>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="MouseOver">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF0067B0" cs:id="ColorAnimation_0000" x:Uid="@To=Backstage.HoverBackground" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF0072C6" cs:id="ColorAnimation_0001" x:Uid="@To=Backstage.SelectionBackground" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Disabled">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.38" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Normal" />
        </VisualStateGroup>
        <VisualStateGroup x:Name="CheckedStates">
          <VisualState x:Name="EmptyCheckedState" />
          <VisualState x:Name="Checked">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF0072C6" cs:id="ColorAnimation_0002" x:Uid="@To=Backstage.SelectionBackground" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Unchecked" />
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Border>
  </ControlTemplate>
  <!-- ScrollableControlButton -->
  <ControlTemplate x:Key="{dxwuit:WindowsUIElementsThemeKey ResourceKey=ScrollableControlButtonTemplate}" TargetType="dxcop:ScrollableControlButton">
    <Grid x:Name="Root" Background="Transparent" cs:id="Grid_0000">
      <Border x:Name="IsDefault" Background="Transparent" cs:id="Border_0000">
        <Grid x:Name="Content">
          <Path x:Name="Left" Fill="{TemplateBinding Foreground}" Opacity="0" Style="{StaticResource UIShape.Left}" cs:id="Path_0000" />
          <Path x:Name="Right" Fill="{TemplateBinding Foreground}" Opacity="0" Style="{StaticResource UIShape.Right}" />
          <Path x:Name="Up" Fill="{TemplateBinding Foreground}" Opacity="0" Style="{StaticResource UIShape.Up}" />
          <Path x:Name="Down" Fill="{TemplateBinding Foreground}" Opacity="0" Style="{StaticResource UIShape.Down}" />
        </Grid>
      </Border>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="MouseOver" />
          <VisualState x:Name="Pressed" />
          <VisualState x:Name="Disabled">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Visibility="Collapsed" Storyboard.TargetName="Root" Storyboard.TargetProperty="Visibility" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
        <VisualStateGroup x:Name="Rotations">
          <VisualState x:Name="Left">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="Left" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Right">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="Right" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Up">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="Up" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Down">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="Down" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Foreground" Value="#FFEFEFEF" cs:id="Setter_0000" x:Uid="@Value=Foreground" />
      </Trigger>
      <Trigger Property="ColorMode" Value="Inverted">
        <Setter Property="Foreground" Value="#FFEFEFEF" cs:id="Setter_0001" x:Uid="@Value=Backstage.Foreground" />
      </Trigger>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" TargetName="IsDefault" Value="#FF484848" cs:id="Setter_0002" x:Uid="@Value=HoverBackground" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
          <Condition Property="ColorMode" Value="Inverted" />
        </MultiTrigger.Conditions>
        <Setter Property="Background" TargetName="IsDefault" Value="#FF0067B0" cs:id="Setter_0004" x:Uid="@Value=Backstage.HoverBackground" />
      </MultiTrigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" TargetName="IsDefault" Value="#FF444444" cs:id="Setter_0003" x:Uid="@Value=SelectionBackground" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsPressed" Value="True" />
          <Condition Property="ColorMode" Value="Inverted" />
        </MultiTrigger.Conditions>
        <Setter Property="Background" TargetName="IsDefault" Value="#FF0072C6" cs:id="Setter_0005" x:Uid="@Value=Backstage.SelectionBackground" />
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
</ResourceDictionary>