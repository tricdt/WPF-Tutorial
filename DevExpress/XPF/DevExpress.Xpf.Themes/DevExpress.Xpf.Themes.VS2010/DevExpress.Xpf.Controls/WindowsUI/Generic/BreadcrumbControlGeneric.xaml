<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxco="http://schemas.devexpress.com/winfx/2008/xaml/controls" xmlns:dxcoi="http://schemas.devexpress.com/winfx/2008/xaml/controls/internal" xmlns:dxcot="http://schemas.devexpress.com/winfx/2008/xaml/controls/themekeys" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
  <BooleanToVisibilityConverter x:Key="VisibleIfTrueConverter" />
  <dxmvvm:NumericToVisibilityConverter x:Key="NumericToVisibilityConverter" />
  <dx:ObjectToVisibilityConverter x:Key="ObjectToVisibilityConverter" HandleList="False" />
  <DataTemplate x:Key="SelectedItemTemplate">
    <TextBlock x:Name="PART_Text" VerticalAlignment="Center" Text="{Binding Text}" TextTrimming="CharacterEllipsis" Visibility="{Binding Text, Converter={StaticResource ObjectToVisibilityConverter}}" />
  </DataTemplate>
  <DataTemplate x:Key="SubItemTemplate">
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition />
      </Grid.ColumnDefinitions>
      <dx:DXImage x:Name="PART_Image" Width="16" Height="16" Margin="0,0,10,0" Source="{Binding Image}" />
      <TextBlock x:Name="PART_Text" Grid.Column="1" VerticalAlignment="Center" Text="{Binding Text}" TextTrimming="CharacterEllipsis" />
    </Grid>
  </DataTemplate>
  <DataTemplate x:Key="SubItemWithoutImagesTemplate">
    <TextBlock x:Name="PART_Text" VerticalAlignment="Center" Text="{Binding Text}" TextTrimming="CharacterEllipsis" />
  </DataTemplate>
  <DataTemplate x:Key="PathEditItemTemplate">
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition />
      </Grid.ColumnDefinitions>
      <dx:DXImage x:Name="PART_Image" Width="16" Height="16" Margin="0,0,4,0" Source="{Binding Image}" />
      <TextBlock x:Name="PART_Text" Grid.Column="1" VerticalAlignment="Center" Text="{Binding Path}" TextTrimming="CharacterEllipsis" />
    </Grid>
  </DataTemplate>
  <DataTemplate x:Key="PathEditItemWithoutImagesTemplate">
    <TextBlock x:Name="PART_Text" VerticalAlignment="Center" Text="{Binding Path}" TextTrimming="CharacterEllipsis" />
  </DataTemplate>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Controls.BreadcrumbControl}" TargetType="{x:Type dxco:BreadcrumbControl}">
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxco:BreadcrumbControl}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <dxcoi:BreadcrumbPathEdit x:Name="PART_BreadcrumbPathEdit" Grid.ColumnSpan="2" AcceptValueOnPopupContentSelectionChanged="True" AllowDefaultButton="{TemplateBinding AllowFillHistory}" EditMode="Standalone" EditorLeftIndent="{Binding ActualWidth, ElementName=PART_SelectedItemImageBorder}" ImmediatePopup="True" InvalidValueBehavior="AllowLeaveEditor" ItemsSource="{TemplateBinding PathEditSource}" ItemTemplate="{StaticResource PathEditItemTemplate}" PopupHeight="{TemplateBinding PathEditPopupHeight}" PopupMaxHeight="{TemplateBinding PathEditPopupMaxHeight}" PopupMinHeight="{TemplateBinding PathEditPopupMinHeight}" ShowBorder="{TemplateBinding ShowBorder}" TextMember="Path" ValidateOnEnterKeyPressed="True" ValidateOnTextInput="False" />
            <Border x:Name="PART_SelectedItemImageBorder" Background="Transparent">
              <dxcoi:BreadcrumbSelectedItemImage x:Name="PART_BreadcrumbSelectedItemImage" ImageSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path='SelectedNode.Image'}" Style="{DynamicResource {dxcot:BreadcrumbControlThemeKey ResourceKey=SelectedItemImageStyle}}" />
            </Border>
            <dxcoi:BreadcrumbItemsControl x:Name="PART_BreadcrumbItemsControl" RightIndent="{Binding RightButtonsWidth, ElementName=PART_BreadcrumbPathEdit}" Grid.Column="1" ItemsSource="{TemplateBinding SelectedNodes}" ItemTemplate="{StaticResource SelectedItemTemplate}" PopupHeight="{TemplateBinding PopupHeight}" PopupMaxHeight="{TemplateBinding PopupMaxHeight}" PopupMaxWidth="{TemplateBinding PopupMaxWidth}" PopupMinHeight="{TemplateBinding PopupMinHeight}" PopupMinWidth="{TemplateBinding PopupMinWidth}" PopupWidth="{TemplateBinding PopupWidth}" ShowBorder="{TemplateBinding ShowBorder}" Style="{DynamicResource {dxcot:BreadcrumbControlThemeKey ResourceKey=ItemsControlStyle}}" SubItemTemplate="{StaticResource SubItemTemplate}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ShowItemImages" Value="False">
              <Setter TargetName="PART_BreadcrumbItemsControl" Property="SubItemTemplate" Value="{StaticResource SubItemWithoutImagesTemplate}" />
              <Setter TargetName="PART_BreadcrumbPathEdit" Property="ItemTemplate" Value="{StaticResource PathEditItemWithoutImagesTemplate}" />
            </Trigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Value="False" Binding="{Binding ItemTemplate, RelativeSource={RelativeSource Self}, Converter={dxmvvm:ObjectToBooleanConverter}}" />
                <Condition Value="True" Binding="{Binding ItemTemplateSelector, RelativeSource={RelativeSource Self}, Converter={dxmvvm:ObjectToBooleanConverter}}" />
              </MultiDataTrigger.Conditions>
              <MultiDataTrigger.Setters>
                <Setter TargetName="PART_BreadcrumbItemsControl" Property="SubItemTemplate" Value="{x:Null}" />
                <Setter TargetName="PART_BreadcrumbItemsControl" Property="SubItemTemplateSelector" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ItemTemplateSelector}" />
              </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <DataTrigger Value="True" Binding="{Binding ItemTemplate, RelativeSource={RelativeSource Self}, Converter={dxmvvm:ObjectToBooleanConverter}}">
              <Setter TargetName="PART_BreadcrumbItemsControl" Property="SubItemTemplate" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ItemTemplate}" />
            </DataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Value="False" Binding="{Binding SelectedItemTemplate, RelativeSource={RelativeSource Self}, Converter={dxmvvm:ObjectToBooleanConverter}}" />
                <Condition Value="True" Binding="{Binding SelectedItemTemplateSelector, RelativeSource={RelativeSource Self}, Converter={dxmvvm:ObjectToBooleanConverter}}" />
              </MultiDataTrigger.Conditions>
              <MultiDataTrigger.Setters>
                <Setter TargetName="PART_BreadcrumbItemsControl" Property="ItemTemplate" Value="{x:Null}" />
                <Setter TargetName="PART_BreadcrumbItemsControl" Property="ItemTemplateSelector" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedItemTemplateSelector}" />
              </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <DataTrigger Value="True" Binding="{Binding SelectedItemTemplate, RelativeSource={RelativeSource Self}, Converter={dxmvvm:ObjectToBooleanConverter}}">
              <Setter TargetName="PART_BreadcrumbItemsControl" Property="ItemTemplate" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedItemTemplate}" />
            </DataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Value="False" Binding="{Binding PathEditItemTemplate, RelativeSource={RelativeSource Self}, Converter={dxmvvm:ObjectToBooleanConverter}}" />
                <Condition Value="True" Binding="{Binding PathEditItemTemplateSelector, RelativeSource={RelativeSource Self}, Converter={dxmvvm:ObjectToBooleanConverter}}" />
              </MultiDataTrigger.Conditions>
              <MultiDataTrigger.Setters>
                <Setter TargetName="PART_BreadcrumbPathEdit" Property="ItemTemplate" Value="{x:Null}" />
                <Setter TargetName="PART_BreadcrumbPathEdit" Property="ItemTemplateSelector" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PathEditItemTemplateSelector}" />
              </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <DataTrigger Value="True" Binding="{Binding PathEditItemTemplate, RelativeSource={RelativeSource Self}, Converter={dxmvvm:ObjectToBooleanConverter}}">
              <Setter TargetName="PART_BreadcrumbPathEdit" Property="ItemTemplate" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PathEditItemTemplate}" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="{dxcot:BreadcrumbControlThemeKey ResourceKey=SelectedItemImageTemplate}" TargetType="{x:Type dxcoi:BreadcrumbSelectedItemImage}">
    <dx:DXImage Width="16" Height="16" Source="{TemplateBinding ImageSource}" />
  </ControlTemplate>
  <Style x:Key="{dxcot:BreadcrumbControlThemeKey ResourceKey=SelectedItemImageStyleBase}" TargetType="{x:Type dxcoi:BreadcrumbSelectedItemImage}">
    <Setter Property="Template" Value="{DynamicResource {dxcot:BreadcrumbControlThemeKey ResourceKey=SelectedItemImageTemplate}}" />
    <Setter Property="Margin" Value="4,2,2,2" />
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Margin" Value="20,13,13,13" />
      </Trigger>
      <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
        <Setter Property="Margin" Value="20,13,13,13" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxcot:BreadcrumbControlThemeKey ResourceKey=SelectedItemImageStyle}" BasedOn="{StaticResource {dxcot:BreadcrumbControlThemeKey ResourceKey=SelectedItemImageStyleBase}}" TargetType="{x:Type dxcoi:BreadcrumbSelectedItemImage}" />
  <ControlTemplate x:Key="{dxcot:BreadcrumbControlThemeKey ResourceKey=ItemsControlTemplate}" TargetType="{x:Type dxcoi:BreadcrumbItemsControl}">
    <Grid MinWidth="60">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition />
      </Grid.ColumnDefinitions>
      <dxcoi:BreadcrumbRootItem x:Name="PART_RootItem" PopupHeight="{TemplateBinding PopupHeight}" PopupMaxHeight="{TemplateBinding PopupMaxHeight}" PopupMaxWidth="{TemplateBinding PopupMaxWidth}" PopupMinHeight="{TemplateBinding PopupMinHeight}" PopupMinWidth="{TemplateBinding PopupMinWidth}" PopupWidth="{TemplateBinding PopupWidth}" PredefinedSubItems="{TemplateBinding PredefinedItemsSource}" ShowPredefinedSubItems="{TemplateBinding ShowPredefinedItemsSource}" Style="{DynamicResource {dxcot:BreadcrumbControlThemeKey ResourceKey=RootItemStyle}}" SubItems="{TemplateBinding CollapsedSource}" SubItemTemplate="{TemplateBinding SubItemTemplate}" SubItemTemplateSelector="{TemplateBinding SubItemTemplateSelector}" />
      <dxcoi:BreadcrumbItemsPanel x:Name="PART_ItemsHost" Grid.Column="1" IsItemsHost="True" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="ShowBorder" Value="True">
        <Setter Property="Foreground" Value="{DynamicResource {dxt:ThemeColorsThemeKey ResourceKey=BlackForegroundColor}}" />
      </Trigger>
      <Trigger Property="RotateArrow" Value="True">
        <Setter TargetName="PART_RootItem" Property="ArrowGlyphTransform">
          <Setter.Value>
            <RotateTransform Angle="-180" CenterX="0.5" CenterY="0.5" />
          </Setter.Value>
        </Setter>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{dxcot:BreadcrumbControlThemeKey ResourceKey=ItemsControlStyleBase}" TargetType="{x:Type dxcoi:BreadcrumbItemsControl}">
    <Setter Property="Template" Value="{DynamicResource {dxcot:BreadcrumbControlThemeKey ResourceKey=ItemsControlTemplate}}" />
    <Setter Property="ItemContainerStyle" Value="{DynamicResource {dxcot:BreadcrumbControlThemeKey ResourceKey=ItemStyle}}" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Style.Triggers>
      <Trigger Property="ShowBorder" Value="False">
        <Setter Property="Margin" Value="0" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxcot:BreadcrumbControlThemeKey ResourceKey=ItemsControlStyle}" BasedOn="{StaticResource {dxcot:BreadcrumbControlThemeKey ResourceKey=ItemsControlStyleBase}}" TargetType="{x:Type dxcoi:BreadcrumbItemsControl}" />
  <ControlTemplate x:Key="{dxcot:BreadcrumbControlThemeKey ResourceKey=ArrowTemplate}" TargetType="{x:Type dxcoi:BreadcrumbArrowControl}">
    <Border CornerRadius="{TemplateBinding CornerRadius}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
      <Decorator Width="8" Height="8">
        <Path HorizontalAlignment="Center" VerticalAlignment="Center" Data="{TemplateBinding ArrowGeometry}" Fill="{TemplateBinding Foreground}" LayoutTransform="{TemplateBinding GlyphTransform}" />
      </Decorator>
    </Border>
  </ControlTemplate>
  <Style x:Key="{dxcot:BreadcrumbControlThemeKey ResourceKey=ArrowStyleBase}" TargetType="{x:Type dxcoi:BreadcrumbArrowControl}">
    <Setter Property="Template" Value="{DynamicResource {dxcot:BreadcrumbControlThemeKey ResourceKey=ArrowTemplate}}" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Padding" Value="3" />
    <Setter Property="BorderThickness" Value="0,1,1,1" />
    <Setter Property="ArrowGeometry" Value="F1 M 2,0 6,4 2,8 Z" />
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Padding" Value="16" />
      </Trigger>
      <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
        <Setter Property="Padding" Value="16" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxcot:BreadcrumbControlThemeKey ResourceKey=ArrowStyle}" BasedOn="{StaticResource {dxcot:BreadcrumbControlThemeKey ResourceKey=ArrowStyleBase}}" TargetType="{x:Type dxcoi:BreadcrumbArrowControl}" />
  <Style x:Key="{dxcot:BreadcrumbControlThemeKey ResourceKey=RootItemArrowStyle}" BasedOn="{StaticResource {dxcot:BreadcrumbControlThemeKey ResourceKey=ArrowStyleBase}}" TargetType="{x:Type dxcoi:BreadcrumbArrowControl}">
    <Setter Property="BorderThickness" Value="1" />
  </Style>
  <ControlTemplate x:Key="{dxcot:BreadcrumbControlThemeKey ResourceKey=ButtonStyleTemplate}" TargetType="{x:Type dxcoi:BreadcrumbButton}">
    <Border CornerRadius="{TemplateBinding CornerRadius}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
      <dx:MeasurePixelSnapper SnapperType="Around">
        <ContentPresenter Content="{Binding}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
      </dx:MeasurePixelSnapper>
    </Border>
  </ControlTemplate>
  <Style x:Key="{dxcot:BreadcrumbControlThemeKey ResourceKey=ButtonStyleBase}" TargetType="{x:Type dxcoi:BreadcrumbButton}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Padding" Value="3,1" />
    <Setter Property="Template" Value="{DynamicResource {dxcot:BreadcrumbControlThemeKey ResourceKey=ButtonStyleTemplate}}" />
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Padding" Value="9,12" />
      </Trigger>
      <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
        <Setter Property="Padding" Value="9,12" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxcot:BreadcrumbControlThemeKey ResourceKey=ItemButtonStyle}" BasedOn="{StaticResource {dxcot:BreadcrumbControlThemeKey ResourceKey=ButtonStyleBase}}" TargetType="{x:Type dxcoi:BreadcrumbButton}" />
  <Style x:Key="{dxcot:BreadcrumbControlThemeKey ResourceKey=SubItemButtonStyle}" BasedOn="{StaticResource {dxcot:BreadcrumbControlThemeKey ResourceKey=ButtonStyleBase}}" TargetType="{x:Type dxcoi:BreadcrumbButton}">
    <Setter Property="Padding" Value="4,4" />
  </Style>
  <ControlTemplate x:Key="{dxcot:BreadcrumbControlThemeKey ResourceKey=RootItemTemplate}" TargetType="{x:Type dxcoi:BreadcrumbRootItem}">
    <Grid Background="{TemplateBinding Background}">
      <dxcoi:BreadcrumbArrowControl x:Name="PART_Arrow" Grid.Column="1" BorderBrush="{TemplateBinding BorderBrush}" Foreground="{TemplateBinding Foreground}" GlyphTransform="{TemplateBinding ArrowGlyphTransform}" Style="{DynamicResource {dxcot:BreadcrumbControlThemeKey ResourceKey=RootItemArrowStyle}}" Visibility="{TemplateBinding ShowArrow, Converter={StaticResource ResourceKey=VisibleIfTrueConverter}}" />
      <dxb:PopupControlContainer x:Name="PART_Popup" Width="{TemplateBinding PopupWidth}" MaxHeight="{TemplateBinding PopupMaxHeight}" Placement="Bottom">
        <Grid Background="{DynamicResource {dxcot:BreadcrumbControlThemeKey ResourceKey=PopupBackground}}">
          <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto" />
            <RowDefinition />
          </Grid.RowDefinitions>
          <dxcoi:BreadcrumbSubItemsControl x:Name="PART_SubItemsContainer" ItemsSource="{TemplateBinding SubItems}" ItemTemplate="{TemplateBinding SubItemTemplate}" ItemTemplateSelector="{TemplateBinding SubItemTemplateSelector}" Style="{DynamicResource {dxcot:BreadcrumbControlThemeKey ResourceKey=SubItemsControlStyle}}" />
          <Separator x:Name="PART_SubItemsSeparator" Grid.Row="1" Margin="1, 0" />
          <dxcoi:BreadcrumbSubItemsControl x:Name="PART_PredefinedSubItemsContainer" Grid.Row="2" ItemsSource="{TemplateBinding PredefinedSubItems}" ItemTemplate="{TemplateBinding SubItemTemplate}" ItemTemplateSelector="{TemplateBinding SubItemTemplateSelector}" Style="{DynamicResource {dxcot:BreadcrumbControlThemeKey ResourceKey=SubItemsControlStyle}}" Visibility="{TemplateBinding ShowPredefinedSubItems, Converter={StaticResource VisibleIfTrueConverter}}" />
        </Grid>
      </dxb:PopupControlContainer>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsPopupOpen" Value="True">
        <Setter Property="Background" Value="{DynamicResource {dxcot:BreadcrumbSelectedItemThemeKey ResourceKey=HoverBackground}}" />
        <Setter Property="Foreground" Value="{DynamicResource {dxcot:BreadcrumbSelectedItemThemeKey ResourceKey=HoverForeground}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxcot:BreadcrumbSelectedItemThemeKey ResourceKey=HoverBorderBrush}}" />
        <Setter TargetName="PART_Arrow" Property="GlyphTransform">
          <Setter.Value>
            <RotateTransform Angle="90" CenterX="0.5" CenterY="0.5" />
          </Setter.Value>
        </Setter>
      </Trigger>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{DynamicResource {dxcot:BreadcrumbSelectedItemThemeKey ResourceKey=HoverBackground}}" />
        <Setter Property="Foreground" Value="{DynamicResource {dxcot:BreadcrumbSelectedItemThemeKey ResourceKey=HoverForeground}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxcot:BreadcrumbSelectedItemThemeKey ResourceKey=HoverBorderBrush}}" />
      </Trigger>
      <Trigger Property="IsArrowMouseOver" Value="True">
        <Setter TargetName="PART_Arrow" Property="Background" Value="{DynamicResource {dxcot:BreadcrumbSelectedItemThemeKey ResourceKey=ArrowHoverBackground}}" />
      </Trigger>
      <Trigger Property="IsArrowPressed" Value="True">
        <Setter TargetName="PART_Arrow" Property="Background" Value="{DynamicResource {dxcot:BreadcrumbSelectedItemThemeKey ResourceKey=ArrowPressedBackground}}" />
        <Setter Property="Foreground" Value="{DynamicResource {dxcot:BreadcrumbSelectedItemThemeKey ResourceKey=PressedForeground}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxcot:BreadcrumbSelectedItemThemeKey ResourceKey=PressedBorderBrush}}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{dxcot:BreadcrumbControlThemeKey ResourceKey=RootItemStyleBase}" TargetType="{x:Type dxcoi:BreadcrumbRootItem}">
    <Setter Property="Template" Value="{DynamicResource {dxcot:BreadcrumbControlThemeKey ResourceKey=RootItemTemplate}}" />
  </Style>
  <Style x:Key="{dxcot:BreadcrumbControlThemeKey ResourceKey=RootItemStyle}" BasedOn="{StaticResource {dxcot:BreadcrumbControlThemeKey ResourceKey=RootItemStyleBase}}" TargetType="{x:Type dxcoi:BreadcrumbRootItem}" />
  <ControlTemplate x:Key="{dxcot:BreadcrumbControlThemeKey ResourceKey=SubItemsControlTemplate}" TargetType="{x:Type dxcoi:BreadcrumbSubItemsControl}">
    <Border x:Name="PART_DropDown" MinWidth="{TemplateBinding ActualWidth}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
      <ScrollViewer Padding="{TemplateBinding Padding}" VerticalScrollBarVisibility="Auto">
        <ItemsPresenter />
      </ScrollViewer>
    </Border>
  </ControlTemplate>
  <Style x:Key="{dxcot:BreadcrumbControlThemeKey ResourceKey=SubItemsControlStyleBase}" TargetType="{x:Type dxcoi:BreadcrumbSubItemsControl}">
    <Setter Property="Template" Value="{DynamicResource {dxcot:BreadcrumbControlThemeKey ResourceKey=SubItemsControlTemplate}}" />
    <Setter Property="ItemContainerStyle" Value="{DynamicResource {dxcot:BreadcrumbControlThemeKey ResourceKey=SubItemStyle}}" />
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <dxcoi:BreadcrumbSubItemsPanel />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxcot:BreadcrumbControlThemeKey ResourceKey=SubItemsControlStyle}" BasedOn="{StaticResource {dxcot:BreadcrumbControlThemeKey ResourceKey=SubItemsControlStyleBase}}" TargetType="{x:Type dxcoi:BreadcrumbSubItemsControl}" />
  <ControlTemplate x:Key="{dxcot:BreadcrumbControlThemeKey ResourceKey=SubItemTemplate}" TargetType="{x:Type dxcoi:BreadcrumbSubItem}">
    <dxcoi:BreadcrumbButton x:Name="PART_Button" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" ContentTemplate="{TemplateBinding ButtonContentTemplate}" ContentTemplateSelector="{TemplateBinding ButtonContentTemplateSelector}" Foreground="{TemplateBinding Foreground}" Style="{DynamicResource {dxcot:BreadcrumbControlThemeKey ResourceKey=SubItemButtonStyle}}" />
    <ControlTemplate.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{DynamicResource {dxcot:BreadcrumbItemThemeKey ResourceKey=HoverBackground}}" />
        <Setter Property="Foreground" Value="{DynamicResource {dxcot:BreadcrumbItemThemeKey ResourceKey=HoverForeground}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxcot:BreadcrumbItemThemeKey ResourceKey=HoverBorderBrush}}" />
      </Trigger>
      <DataTrigger Value="True" Binding="{Binding IsPressed, ElementName=PART_Button}">
        <Setter Property="Foreground" Value="{DynamicResource {dxcot:BreadcrumbItemThemeKey ResourceKey=PressedForeground}}" />
        <Setter Property="Background" Value="{DynamicResource {dxcot:BreadcrumbItemThemeKey ResourceKey=PressedBackground}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxcot:BreadcrumbItemThemeKey ResourceKey=PressedBorderBrush}}" />
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{dxcot:BreadcrumbControlThemeKey ResourceKey=SubItemStyleBase}" TargetType="{x:Type dxcoi:BreadcrumbSubItem}">
    <Setter Property="Margin" Value="1" />
    <Setter Property="Template" Value="{DynamicResource {dxcot:BreadcrumbControlThemeKey ResourceKey=SubItemTemplate}}" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Foreground" Value="{DynamicResource {dxcot:BreadcrumbItemThemeKey ResourceKey=Foreground}}" />
  </Style>
  <Style x:Key="{dxcot:BreadcrumbControlThemeKey ResourceKey=SubItemStyle}" BasedOn="{StaticResource {dxcot:BreadcrumbControlThemeKey ResourceKey=SubItemStyleBase}}" TargetType="{x:Type dxcoi:BreadcrumbSubItem}" />
  <ControlTemplate x:Key="{dxcot:BreadcrumbControlThemeKey ResourceKey=ItemTemplate}" TargetType="{x:Type dxcoi:BreadcrumbItem}">
    <Grid Background="{TemplateBinding Background}">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>
      <dxcoi:BreadcrumbButton x:Name="PART_Button" BorderBrush="{TemplateBinding BorderBrush}" ContentTemplate="{TemplateBinding ButtonContentTemplate}" ContentTemplateSelector="{TemplateBinding ButtonContentTemplateSelector}" Foreground="{TemplateBinding Foreground}" Style="{DynamicResource {dxcot:BreadcrumbControlThemeKey ResourceKey=ItemButtonStyle}}" />
      <dxcoi:BreadcrumbArrowControl x:Name="PART_Arrow" Grid.Column="1" BorderBrush="{TemplateBinding BorderBrush}" Foreground="{TemplateBinding Foreground}" GlyphTransform="{TemplateBinding ArrowGlyphTransform}" Style="{DynamicResource {dxcot:BreadcrumbControlThemeKey ResourceKey=ArrowStyle}}" Visibility="{TemplateBinding ShowArrow, Converter={StaticResource ResourceKey=VisibleIfTrueConverter}}" />
      <dxb:PopupControlContainer x:Name="PART_Popup" Width="{TemplateBinding PopupWidth}" Height="{TemplateBinding PopupHeight}" MinWidth="{TemplateBinding PopupMinWidth}" MinHeight="{TemplateBinding PopupMinHeight}" MaxWidth="{TemplateBinding PopupMaxWidth}" MaxHeight="{TemplateBinding PopupMaxHeight}" Placement="Bottom">
        <dxcoi:BreadcrumbSubItemsControl x:Name="PART_SubItemsContainer" Background="{DynamicResource {dxcot:BreadcrumbControlThemeKey ResourceKey=PopupBackground}}" ItemTemplate="{TemplateBinding SubItemTemplate}" ItemTemplateSelector="{TemplateBinding SubItemTemplateSelector}" Style="{DynamicResource {dxcot:BreadcrumbControlThemeKey ResourceKey=SubItemsControlStyle}}" />
      </dxb:PopupControlContainer>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsPopupOpen" Value="True">
        <Setter Property="Background" Value="{DynamicResource {dxcot:BreadcrumbSelectedItemThemeKey ResourceKey=HoverBackground}}" />
        <Setter Property="Foreground" Value="{DynamicResource {dxcot:BreadcrumbSelectedItemThemeKey ResourceKey=HoverForeground}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxcot:BreadcrumbSelectedItemThemeKey ResourceKey=HoverBorderBrush}}" />
        <Setter TargetName="PART_Arrow" Property="GlyphTransform">
          <Setter.Value>
            <RotateTransform Angle="90" CenterX="0.5" CenterY="0.5" />
          </Setter.Value>
        </Setter>
      </Trigger>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{DynamicResource {dxcot:BreadcrumbSelectedItemThemeKey ResourceKey=HoverBackground}}" />
        <Setter Property="Foreground" Value="{DynamicResource {dxcot:BreadcrumbSelectedItemThemeKey ResourceKey=HoverForeground}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxcot:BreadcrumbSelectedItemThemeKey ResourceKey=HoverBorderBrush}}" />
      </Trigger>
      <Trigger Property="IsArrowMouseOver" Value="True">
        <Setter TargetName="PART_Arrow" Property="Background" Value="{DynamicResource {dxcot:BreadcrumbSelectedItemThemeKey ResourceKey=ArrowHoverBackground}}" />
      </Trigger>
      <Trigger Property="IsButtonMouseOver" Value="True">
        <Setter TargetName="PART_Button" Property="Background" Value="{DynamicResource {dxcot:BreadcrumbSelectedItemThemeKey ResourceKey=ButtonHoverBackground}}" />
      </Trigger>
      <Trigger Property="IsArrowPressed" Value="True">
        <Setter TargetName="PART_Arrow" Property="Background" Value="{DynamicResource {dxcot:BreadcrumbSelectedItemThemeKey ResourceKey=ArrowPressedBackground}}" />
        <Setter Property="Foreground" Value="{DynamicResource {dxcot:BreadcrumbSelectedItemThemeKey ResourceKey=PressedForeground}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxcot:BreadcrumbSelectedItemThemeKey ResourceKey=PressedBorderBrush}}" />
      </Trigger>
      <Trigger Property="IsButtonPressed" Value="True">
        <Setter TargetName="PART_Button" Property="Background" Value="{DynamicResource {dxcot:BreadcrumbSelectedItemThemeKey ResourceKey=ButtonPressedBackground}}" />
        <Setter Property="Foreground" Value="{DynamicResource {dxcot:BreadcrumbSelectedItemThemeKey ResourceKey=PressedForeground}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxcot:BreadcrumbSelectedItemThemeKey ResourceKey=PressedBorderBrush}}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{dxcot:BreadcrumbControlThemeKey ResourceKey=ItemStyleBase}" TargetType="{x:Type dxcoi:BreadcrumbItem}">
    <Setter Property="Template" Value="{DynamicResource {dxcot:BreadcrumbControlThemeKey ResourceKey=ItemTemplate}}" />
  </Style>
  <Style x:Key="{dxcot:BreadcrumbControlThemeKey ResourceKey=ItemStyle}" BasedOn="{StaticResource {dxcot:BreadcrumbControlThemeKey ResourceKey=ItemStyleBase}}" TargetType="{x:Type dxcoi:BreadcrumbItem}" />
  <!--Default themekey values-->
  <SolidColorBrush x:Key="{dxcot:BreadcrumbItemThemeKey ResourceKey=HoverBackground}" Color="Transparent" />
  <SolidColorBrush x:Key="{dxcot:BreadcrumbItemThemeKey ResourceKey=PressedBackground}" Color="Transparent" />
  <SolidColorBrush x:Key="{dxcot:BreadcrumbItemThemeKey ResourceKey=Foreground}" Color="Transparent" />
  <SolidColorBrush x:Key="{dxcot:BreadcrumbItemThemeKey ResourceKey=HoverForeground}" Color="Transparent" />
  <SolidColorBrush x:Key="{dxcot:BreadcrumbItemThemeKey ResourceKey=PressedForeground}" Color="Transparent" />
  <SolidColorBrush x:Key="{dxcot:BreadcrumbItemThemeKey ResourceKey=HoverBorderBrush}" Color="Transparent" />
  <SolidColorBrush x:Key="{dxcot:BreadcrumbItemThemeKey ResourceKey=PressedBorderBrush}" Color="Transparent" />
  <SolidColorBrush x:Key="{dxcot:BreadcrumbControlThemeKey ResourceKey=PopupBackground}" Color="Transparent" />
  <SolidColorBrush x:Key="{dxcot:BreadcrumbSelectedItemThemeKey ResourceKey=HoverBackground}" Color="Transparent" />
  <SolidColorBrush x:Key="{dxcot:BreadcrumbSelectedItemThemeKey ResourceKey=HoverForeground}" Color="Transparent" />
  <SolidColorBrush x:Key="{dxcot:BreadcrumbSelectedItemThemeKey ResourceKey=PressedForeground}" Color="Transparent" />
  <SolidColorBrush x:Key="{dxcot:BreadcrumbSelectedItemThemeKey ResourceKey=ButtonHoverBackground}" Color="Transparent" />
  <SolidColorBrush x:Key="{dxcot:BreadcrumbSelectedItemThemeKey ResourceKey=ButtonPressedBackground}" Color="Transparent" />
  <SolidColorBrush x:Key="{dxcot:BreadcrumbSelectedItemThemeKey ResourceKey=ArrowHoverBackground}" Color="Transparent" />
  <SolidColorBrush x:Key="{dxcot:BreadcrumbSelectedItemThemeKey ResourceKey=ArrowPressedBackground}" Color="Transparent" />
  <SolidColorBrush x:Key="{dxcot:BreadcrumbSelectedItemThemeKey ResourceKey=HoverBorderBrush}" Color="Transparent" />
  <SolidColorBrush x:Key="{dxcot:BreadcrumbSelectedItemThemeKey ResourceKey=PressedBorderBrush}" Color="Transparent" />
</ResourceDictionary>