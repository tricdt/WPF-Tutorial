<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.VS2010.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/TabControl/Themes/Generic.xaml"/>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.VS2010.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/TabControl/Themes/Generic.Window.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--Tab Button Background Templates-->

    <SolidColorBrush x:Key="Button.Normal.Background" Color="Transparent"/>

    <SolidColorBrush x:Key="Button.Hover.BorderBrush1" Color="#FFA19D8D"/>

    <LinearGradientBrush x:Key="Button.Hover.BorderBrush2"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFFFFEF8" Offset="0"/>
        <GradientStop Color="#FFFFF4D3" Offset="1"/>
        <GradientStop Color="#FFFFF9E8" Offset="0.5"/>
        <GradientStop Color="#FFFFF4D3" Offset="0.5"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Button.Hover.Background"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFFFFBF0" Offset="0"/>
        <GradientStop Color="#FFFFE8A6" Offset="1"/>
        <GradientStop Color="#FFFFF4D2" Offset="0.5"/>
        <GradientStop Color="#FFFFE8A6" Offset="0.5"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="Button.Pressed.BorderBrush1" Color="#FF939EB0"/>

    <SolidColorBrush x:Key="Button.Pressed.BorderBrush2" Color="#FFACB9CC"/>

    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFB1BED1"/>

    <DataTemplate x:Key="{dxt:DXTabControlThemeKey ResourceKey=ButtonNormalBackground}">
        <Border Background="{StaticResource Button.Normal.Background}"/>
    </DataTemplate>

    <DataTemplate x:Key="{dxt:DXTabControlThemeKey ResourceKey=ButtonHoverBackground}">
        <Border Background="{StaticResource Button.Hover.BorderBrush1}"
                CornerRadius="2"
                Padding="1">
            <Border Background="{StaticResource Button.Hover.BorderBrush2}"
                    CornerRadius="1"
                    Padding="1">
                <Border Background="{StaticResource Button.Hover.Background}" CornerRadius="1"/>
            </Border>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="{dxt:DXTabControlThemeKey ResourceKey=ButtonPressedBackground}">
        <Border Background="{StaticResource Button.Pressed.BorderBrush1}"
                CornerRadius="2"
                Padding="1">
            <Border Background="{StaticResource Button.Pressed.BorderBrush2}"
                    CornerRadius="1"
                    Padding="1">
                <Border Background="{StaticResource Button.Pressed.Background}" CornerRadius="1"/>
            </Border>
        </Border>
    </DataTemplate>

    <!--Tab Button Styles-->

    <SolidColorBrush x:Key="Button.Normal.Foreground" Color="#FF1B293E"/>

    <SolidColorBrush x:Key="Button.Hover.Foreground" Color="#FF201F35"/>

    <SolidColorBrush x:Key="Button.Pressed.Foreground" Color="#FF201F35"/>

    <Style x:Key="CloseButtonStyle"
           BasedOn="{StaticResource ButtonDefaultStyle}"
           TargetType="{x:Type ButtonBase}">
        <Setter Property="Foreground" Value="{StaticResource Button.Normal.Foreground}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource Button.Hover.Foreground}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource Button.Pressed.Foreground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="HeaderPanelButtonStyle"
           BasedOn="{StaticResource ButtonDefaultStyle}"
           TargetType="{x:Type ButtonBase}">
        <Setter Property="dxcn:TabOrientablePanel.ChildMargin" Value="2,0,2,0"/>
        <Setter Property="Width" Value="17"/>
        <Setter Property="Height" Value="17"/>
        <Setter Property="Foreground" Value="{StaticResource Button.Normal.Foreground}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource Button.Hover.Foreground}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource Button.Pressed.Foreground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxt:DXTabItemThemeKey ResourceKey=CloseButtonStyle}"
           BasedOn="{StaticResource CloseButtonStyle}"
           TargetType="{x:Type Button}">
        <Style.Resources>
            <SolidColorBrush x:Key="CloseButton.Hover.BorderBrush" Color="#FFECD698"/>
            <LinearGradientBrush x:Key="CloseButton.Hover.Background"
                                 EndPoint="0.5,1"
                                 StartPoint="0.5,0">
                <GradientStop Color="#FFFFFEF9" Offset="0"/>
                <GradientStop Color="#FFFFF2CC" Offset="1"/>
                <GradientStop Color="#FFFFF9E5" Offset="0.5"/>
                <GradientStop Color="#FFFFF2CC" Offset="0.5"/>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="CloseButton.Pressed.BorderBrush" Color="#FFE4C97F"/>
            <SolidColorBrush x:Key="CloseButton.Pressed.Background" Color="#FFF9E3A4"/>
            <DataTemplate x:Key="{dxt:DXTabControlThemeKey ResourceKey=ButtonHoverBackground}">
                <Border Background="{StaticResource CloseButton.Hover.BorderBrush}"
                        CornerRadius="2"
                        Padding="1">
                    <Border Background="{StaticResource CloseButton.Hover.Background}"
                            CornerRadius="1"
                            Padding="1"/>
                </Border>
            </DataTemplate>
            <DataTemplate x:Key="{dxt:DXTabControlThemeKey ResourceKey=ButtonPressedBackground}">
                <Border Background="{StaticResource CloseButton.Pressed.BorderBrush}"
                        CornerRadius="2"
                        Padding="1">
                    <Border Background="{StaticResource CloseButton.Pressed.Background}" CornerRadius="1"/>
                </Border>
            </DataTemplate>
        </Style.Resources>
        <Setter Property="Width" Value="14"/>
        <Setter Property="Height" Value="14"/>
        <Setter Property="Margin" Value="7,0,-3,0"/>
        <Setter Property="Content" Value="{dxcn:GlyphControlViewInfo Size=-1}"/>
    </Style>

    <Style x:Key="{dxt:DXTabControlThemeKey ResourceKey=CloseButtonStyle}"
           BasedOn="{StaticResource HeaderPanelButtonStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="Content" Value="{dxcn:GlyphControlViewInfo Size=0}"/>
    </Style>

    <Style x:Key="{dxt:DXTabControlThemeKey ResourceKey=PanelNewButtonStyle}"
           BasedOn="{StaticResource HeaderPanelButtonStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="dxcn:TabOrientablePanel.ChildMargin" Value="5,0,4,0"/>
        <Setter Property="Content" Value="{dxcn:GlyphControlViewInfo Size=0}"/>
    </Style>

    <Style x:Key="{dxt:DXTabControlThemeKey ResourceKey=MainNewButtonStyle}"
           BasedOn="{StaticResource HeaderPanelButtonStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="Content" Value="{dxcn:GlyphControlViewInfo Size=0}"/>
    </Style>

    <Style x:Key="{dxt:DXTabControlThemeKey ResourceKey=PrevButtonStyle}"
           BasedOn="{StaticResource HeaderPanelButtonStyle}"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="Content" Value="{dxcn:GlyphControlViewInfo Size=0, GlyphLeftPadding='0,0,1,0'}"/>
    </Style>

    <Style x:Key="{dxt:DXTabControlThemeKey ResourceKey=NextButtonStyle}"
           BasedOn="{StaticResource HeaderPanelButtonStyle}"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="Content" Value="{dxcn:GlyphControlViewInfo Size=0, GlyphRightPadding='1,0,0,0'}"/>
    </Style>

    <Style x:Key="{dxt:DXTabControlThemeKey ResourceKey=MenuButtonStyle}"
           BasedOn="{StaticResource HeaderPanelButtonStyle}"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Content" Value="{dxcn:GlyphControlViewInfo Size=0}"/>
    </Style>

    <!--TabControl and TabItem Background Templates-->

    <SolidColorBrush x:Key="TabControl.BorderBrush1" Color="#FF98A4B8"/>

    <SolidColorBrush x:Key="TabControl.BorderBrush2" Color="#FFFFE8A6"/>

    <SolidColorBrush x:Key="TabControl.Background" Color="#FFC9D2E2"/>

    <LinearGradientBrush x:Key="TabItem.Normal.Background"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFF7F8F9" Offset="0"/>
        <GradientStop Color="#FFEBEBEB" Offset="1"/>
        <GradientStop Color="#FFD6DBE4" Offset="0.5"/>
        <GradientStop Color="#FFCED4DF" Offset="0.5"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="TabItem.Hover.Background"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFFFFBEE" Offset="0"/>
        <GradientStop Color="#FFFFE8A6" Offset="1"/>
        <GradientStop Color="#FFFFF2CD" Offset="0.5"/>
        <GradientStop Color="#FFFFE8A6" Offset="0.5"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="TabItem.Selected.Background"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFFFFBEE" Offset="0"/>
        <GradientStop Color="#FFFFE8A6" Offset="1"/>
        <GradientStop Color="#FFFFF2CD" Offset="0.5"/>
        <GradientStop Color="#FFFFE8A6" Offset="0.5"/>
    </LinearGradientBrush>

    <DataTemplate x:Key="{dxt:DXTabControlThemeKey ResourceKey=Background}">
        <dxcn:TabBorder BorderBrush="{StaticResource TabControl.BorderBrush1}"
                        BorderCornerRadius="3"
                        BorderMode="BorderBrush"
                        BorderThickness="1"
                        ViewInfo="{Binding}">
            <dxcn:TabBorder BackgroundMode="BorderBrush"
                            BorderBrush="{StaticResource TabControl.BorderBrush2}"
                            BorderCornerRadius="2"
                            BorderThickness="0,4,0,4">
                <dxcn:TabBorder BorderBackground="{StaticResource TabControl.Background}"/>
            </dxcn:TabBorder>
        </dxcn:TabBorder>
    </DataTemplate>

    <DataTemplate x:Key="{dxt:DXTabItemThemeKey ResourceKey=NormalBackground}">
        <dxcn:TabBorder BorderBrush="{StaticResource TabControl.BorderBrush1}"
                        BorderCornerRadius="3,3,0,0"
                        BorderMargin="0,0,-1,0"
                        BorderMode="BorderBrush"
                        BorderThickness="1,1,1,0"
                        HoldBorderCornerRadius="3"
                        HoldBorderMargin="0,0,1,1"
                        HoldBorderThickness="1"
                        ViewInfo="{Binding}">
            <dxcn:TabBorder BackgroundMode="BorderBackground"
                            BorderBackground="{StaticResource TabItem.Normal.Background}"
                            BorderCornerRadius="1,1,0,0"
                            CustomBackgroundBrightness="-0.1"
                            HoldBorderCornerRadius="1"/>
        </dxcn:TabBorder>
    </DataTemplate>

    <DataTemplate x:Key="{dxt:DXTabItemThemeKey ResourceKey=HoverBackground}">
        <dxcn:TabBorder BorderBrush="{StaticResource TabControl.BorderBrush1}"
                        BorderCornerRadius="3,3,0,0"
                        BorderMargin="0,0,-1,0"
                        BorderMode="BorderBrush"
                        BorderThickness="1,1,1,0"
                        HoldBorderCornerRadius="3"
                        HoldBorderMargin="0,0,1,1"
                        HoldBorderThickness="1"
                        ViewInfo="{Binding}">
            <dxcn:TabBorder BackgroundMode="BorderBrush"
                            BorderBrush="{StaticResource TabControl.BorderBrush2}"
                            BorderCornerRadius="2,2,0,0"
                            BorderThickness="1,1,1,0"
                            CustomBorderBrightness="0.4"
                            HoldBorderCornerRadius="2"
                            HoldBorderThickness="1">
                <dxcn:TabBorder BackgroundMode="BorderBackground"
                                BorderBackground="{StaticResource TabItem.Hover.Background}"
                                BorderCornerRadius="1,1,0,0"
                                CustomBackgroundBrightness="0.4"
                                HoldBorderCornerRadius="1"/>
            </dxcn:TabBorder>
        </dxcn:TabBorder>
    </DataTemplate>

    <DataTemplate x:Key="{dxt:DXTabItemThemeKey ResourceKey=SelectedBackground}">
        <dxcn:TabBorder BorderBrush="{StaticResource TabControl.BorderBrush1}"
                        BorderCornerRadius="3,3,0,0"
                        BorderMargin="0,-1,-1,-1"
                        BorderMode="BorderBrush"
                        BorderThickness="1,1,1,0"
                        HoldBorderCornerRadius="3"
                        HoldBorderMargin="0,0,1,1"
                        HoldBorderThickness="1"
                        ViewInfo="{Binding}">
            <dxcn:TabBorder BackgroundMode="BorderBrush"
                            BorderBrush="{StaticResource TabControl.BorderBrush2}"
                            BorderCornerRadius="2,2,0,0"
                            BorderThickness="1,1,1,0"
                            HoldBorderCornerRadius="2"
                            HoldBorderThickness="1">
                <dxcn:TabBorder BackgroundMode="BorderBackground"
                                BorderBackground="{StaticResource TabItem.Selected.Background}"
                                BorderCornerRadius="1,1,0,0"
                                HoldBorderCornerRadius="1"/>
            </dxcn:TabBorder>
        </dxcn:TabBorder>
    </DataTemplate>

    <DataTemplate x:Key="{dxt:DXTabItemThemeKey ResourceKey=FocusedBackground}"/>

    <!--TabControl and TabItem Styles-->

    <SolidColorBrush x:Key="TabControl.Foreground" Color="#FF1B293E"/>

    <Style x:Key="{dxt:DXTabControlThemeKey ResourceKey=PanelContainerStyle}"
           BasedOn="{StaticResource PanelContainerDefaultStyle}"
           TargetType="{x:Type dxcn:TabPanelContainer}">
        <Setter Property="NormalMargin" Value="4,0,4,-1"/>
        <Setter Property="NormalPadding" Value="0,2,1,1"/>
        <Setter Property="HoldMargin" Value="0,0,0,0"/>
        <Setter Property="HoldPadding" Value="0,0,1,0"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.DXTabControl}"
           BasedOn="{StaticResource TabControlDefaultStyle}"
           TargetType="{x:Type dx:DXTabControl}">
        <Setter Property="Padding" Value="12"/>
        <Setter Property="Foreground" Value="{StaticResource TabControl.Foreground}"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.DXTabItem}"
           BasedOn="{StaticResource TabItemDefaultStyle}"
           TargetType="{x:Type dx:DXTabItem}">
        <Setter Property="Padding" Value="9,3,9,3"/>
        <Setter Property="Foreground" Value="{StaticResource TabControl.Foreground}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ViewInfo.IsHeaderOrientationDifferent, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Padding" Value="8,4,8,4"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxt:DXTabItemThemeKey ResourceKey=SeparatorStyle}" TargetType="{x:Type ContentPresenter}">
        <Setter Property="Visibility" Value="Collapsed"/>
    </Style>

    <Style x:Key="{dxt:DXTabControlThemeKey ResourceKey=ContentStyle}"/>

    <!--TabbedWindow-->

    <LinearGradientBrush x:Key="Window.Header.Active.Background"
                         EndPoint="0.5,0.5"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFA3B0C7" Offset="0"/>
        <GradientStop Color="#FFCAD2DF" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Window.Header.InActive.Background"
                         EndPoint="0.5,0.5"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFBFCDDB" Offset="0"/>
        <GradientStop Color="#FFD7E4F2" Offset="1"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="Window.Border.Active.BorderBrush" Color="#FF283141"/>

    <LinearGradientBrush x:Key="Window.Border.Active.Background"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFCAD2DF" Offset="0"/>
        <GradientStop Color="#FFC7CFDD" Offset="1"/>
        <GradientStop Color="#FFE3E7EE" Offset="0.75"/>
        <GradientStop Color="#FFC7CFDD" Offset="0.75"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="Window.Border.InActive.BorderBrush" Color="#FF4C4C4C"/>

    <LinearGradientBrush x:Key="Window.Border.InActive.Background"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFDAE5F2" Offset="0"/>
        <GradientStop Color="#FFDAE5F2" Offset="1"/>
        <GradientStop Color="#FFDAE5F2" Offset="0.75"/>
        <GradientStop Color="#FFDAE5F2" Offset="0.75"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="Window.Foreground" Color="#FF000000"/>

    <DataTemplate x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=HeaderTemplate}">
        <Border x:Name="border" Background="{StaticResource Window.Header.Active.Background}"/>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dx:FloatingContainer.IsActive), RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                <Setter Property="Background"
                        TargetName="border"
                        Value="{StaticResource Window.Header.InActive.Background}"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=BorderTemplate}">
        <Grid>
            <Grid x:Name="Shadow" Margin="-1,-1,-1,-2">
                <Border Background="#FF000000"
                        CornerRadius="2"
                        Opacity="0.05"/>
                <Border Background="#FF000000"
                        CornerRadius="1"
                        Margin="1"
                        Opacity="0.05"/>
            </Grid>
            <Border x:Name="border"
                    Background="{StaticResource Window.Border.Active.Background}"
                    BorderBrush="{StaticResource Window.Border.Active.BorderBrush}"
                    BorderThickness="1"/>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dx:FloatingContainer.IsActive), RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                <Setter Property="BorderBrush"
                        TargetName="border"
                        Value="{StaticResource Window.Border.InActive.BorderBrush}"/>
                <Setter Property="Background"
                        TargetName="border"
                        Value="{StaticResource Window.Border.InActive.Background}"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=MainContainerStyle}" TargetType="Panel">
        <Setter Property="Margin" Value="1"/>
    </Style>

    <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=CaptionPresenterStyle}" TargetType="ContentPresenter">
        <!--<Setter Property="Margin" Value="6,6,3,0"/>-->
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(dx:FloatingContainer.IsActive), RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=ContentBorderStyle}" TargetType="Border">
        <Setter Property="Margin" Value="6,0,6,6"/>
    </Style>

    <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=ControlContainerStyle}"
           BasedOn="{StaticResource DefaultButtonContainerStyle}"
           TargetType="ItemsControl">
        <!--<Setter Property="Margin" Value="2,3,0,2"/>-->
    </Style>

    <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=ButtonContainerStyle}"
           BasedOn="{StaticResource DefaultButtonContainerStyle}"
           TargetType="ItemsControl">
        <Setter Property="Margin" Value="0,3,6,2"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(dx:FloatingContainer.IsActive), RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="WindowButtonStyle"
           BasedOn="{StaticResource WindowButtonDefaultStyle}"
           TargetType="Button">
        <Setter Property="Width" Value="33"/>
        <Setter Property="Height" Value="19"/>
    </Style>

    <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=MinimizeButtonStyle}"
           BasedOn="{StaticResource WindowButtonStyle}"
           TargetType="{x:Type Button}"/>

    <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=RestoreButtonStyle}"
           BasedOn="{StaticResource WindowButtonStyle}"
           TargetType="{x:Type Button}"/>

    <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=MaximizeButtonStyle}"
           BasedOn="{StaticResource WindowButtonStyle}"
           TargetType="{x:Type Button}"/>

    <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=CloseButtonStyle}"
           BasedOn="{StaticResource WindowButtonStyle}"
           TargetType="{x:Type Button}"/>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.DXTabbedWindow}"
           BasedOn="{StaticResource WindowDefaultStyle}"
           TargetType="{x:Type dx:DXTabbedWindow}">
        <Setter Property="Foreground" Value="{StaticResource Window.Foreground}"/>
    </Style>

</ResourceDictionary>