<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxeh="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
                    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.VS2010.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/VS2010/ErrorPresenter.xaml"/>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.VS2010.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/VS2010/TextEditBase.xaml"/>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.VS2010.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/Generic/TextEdit.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <dx:WpfSvgPalette x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=ValidationErrorSvgPalette}">
        <SolidColorBrush x:Key="BlackColor">#FF394251</SolidColorBrush>
        <SolidColorBrush x:Key="WhiteColor">#FFE3E8EF</SolidColorBrush>
        <SolidColorBrush x:Key="RedColor">#FFBE4735</SolidColorBrush>
        <SolidColorBrush x:Key="YellowColor">#FF9E5F31</SolidColorBrush>
        <SolidColorBrush x:Key="GreenColor">#FF377E2B</SolidColorBrush>
        <SolidColorBrush x:Key="BlueColor">#FF4F7BA9</SolidColorBrush>
    </dx:WpfSvgPalette>

    <dx:WpfSvgPalette x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=ConditionalFormattingSvgPalette}">
        <SolidColorBrush x:Key="BlackColor">#FF394251</SolidColorBrush>
        <SolidColorBrush x:Key="WhiteColor">#FFE3E8EF</SolidColorBrush>
        <SolidColorBrush x:Key="RedColor">#FFBE4735</SolidColorBrush>
        <SolidColorBrush x:Key="YellowColor">#FF9E5F31</SolidColorBrush>
        <SolidColorBrush x:Key="GreenColor">#FF377E2B</SolidColorBrush>
        <SolidColorBrush x:Key="BlueColor">#FF4F7BA9</SolidColorBrush>
    </dx:WpfSvgPalette>

    <SolidColorBrush x:Key="{dxet:TextEditThemeKey ResourceKey=NullTextForeground}" Color="#9C9C9C"/>

    <Style x:Key="{dxet:TextEditThemeKey ResourceKey=TextStyle}"
           BasedOn="{StaticResource BaseTextStyle}"
           TargetType="{x:Type TextBox}"/>

    <Style x:Key="{dxet:TextEditThemeKey ResourceKey=TextInplaceStyle}"
           BasedOn="{StaticResource BaseTextInplaceStyle}"
           TargetType="{x:Type TextBox}">
        <Setter Property="dxeh:EditorMarginHelper.Margin" Value="2,2,2,2,0,2,2,2"/>
    </Style>

    <Style x:Key="{dxet:TextEditThemeKey ResourceKey=TextBlockStyle}"
           BasedOn="{StaticResource BaseTextBlockStyle}"
           TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="5,2,5,2"/>
    </Style>

    <Style x:Key="{dxet:TextEditThemeKey ResourceKey=TextBlockInplaceStyle}"
           BasedOn="{StaticResource BaseTextBlockInplaceStyle}"
           TargetType="{x:Type TextBlock}">
        <Setter Property="dxeh:EditorMarginHelper.Margin" Value="4,2,4,2,2,2,4,2"/>
    </Style>

    <ControlTemplate x:Key="{dxet:TextEditThemeKey ResourceKey=DisplayInplaceTemplate}">
        <TextBlock x:Name="PART_Editor"
                   dx:FocusHelper2.Focusable="False"
                   Style="{DynamicResource {dxet:TextEditThemeKey ResourceKey=TextBlockInplaceStyle}}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:TextEditThemeKey ResourceKey=EditNonEditableTemplate}">
        <TextBlock x:Name="PART_Editor" Style="{DynamicResource {dxet:TextEditThemeKey ResourceKey=TextBlockStyle}}">
            <TextBlock.FocusVisualStyle>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate/>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TextBlock.FocusVisualStyle>
        </TextBlock>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:TextEditThemeKey ResourceKey=EditNonEditableInplaceTemplate}">
        <TextBlock x:Name="PART_Editor" Style="{DynamicResource {dxet:TextEditThemeKey ResourceKey=TextBlockInplaceStyle}}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:TextEditThemeKey ResourceKey=EditInplaceTemplate}">
        <TextBox x:Name="PART_Editor" Style="{DynamicResource {dxet:TextEditThemeKey ResourceKey=TextInplaceStyle}}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:TextEditThemeKey ResourceKey=EditTemplate}">
        <TextBox x:Name="PART_Editor"
                 dxeh:EditorMarginHelper.Margin="3,2,3,2,0,2,3,2"
                 Style="{DynamicResource {dxet:TextEditThemeKey ResourceKey=TextStyle}}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:TextEditThemeKey ResourceKey=EmptyBorderTemplate}" TargetType="{x:Type ContentControl}">
        <Border x:Name="TextEditEmptyBorder">
            <ContentPresenter Content="{TemplateBinding Content}"
                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"/>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:TextEditThemeKey ResourceKey=ErrorControlTemplate}" TargetType="{x:Type dxe:ErrorControl}">
        <ContentPresenter x:Name="content"
                          Content="{TemplateBinding Content}"
                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                          ContentTemplate="{TemplateBinding ContentTemplate}"
                          Margin="3,0,3,0"
                          RenderTransformOrigin="0.5,0.5">
            <ContentPresenter.Resources>
                <Storyboard x:Key="showErrorStoryboard">
                    <DoubleAnimation BeginTime="00:00:00"
                                     Duration="00:00:00.2000000"
                                     From="0"
                                     Storyboard.TargetName="content"
                                     Storyboard.TargetProperty="Opacity"
                                     To="1"/>
                    <DoubleAnimation BeginTime="00:00:00"
                                     Duration="00:00:00.1000000"
                                     From="1"
                                     Storyboard.TargetName="content"
                                     Storyboard.TargetProperty="RenderTransform.ScaleX"
                                     To="1.2"/>
                    <DoubleAnimation BeginTime="00:00:00.1000000"
                                     Duration="00:00:00.1000000"
                                     From="1.2"
                                     Storyboard.TargetName="content"
                                     Storyboard.TargetProperty="RenderTransform.ScaleX"
                                     To="1"/>
                    <DoubleAnimation BeginTime="00:00:00"
                                     Duration="00:00:00.1000000"
                                     From="1"
                                     Storyboard.TargetName="content"
                                     Storyboard.TargetProperty="RenderTransform.ScaleY"
                                     To="1.2"/>
                    <DoubleAnimation BeginTime="00:00:00.1000000"
                                     Duration="00:00:00.1000000"
                                     From="1.2"
                                     Storyboard.TargetName="content"
                                     Storyboard.TargetProperty="RenderTransform.ScaleY"
                                     To="1"/>
                </Storyboard>
                <Storyboard x:Key="hideErrorStoryboard">
                    <DoubleAnimation BeginTime="00:00:00"
                                     Duration="00:00:00"
                                     Storyboard.TargetName="content"
                                     Storyboard.TargetProperty="Opacity"
                                     To="0"/>
                </Storyboard>
            </ContentPresenter.Resources>
            <ContentPresenter.RenderTransform>
                <ScaleTransform/>
            </ContentPresenter.RenderTransform>
        </ContentPresenter>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:TextEditThemeKey ResourceKey=BorderTemplate}" TargetType="{x:Type ContentControl}">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="InternalFocusStates">
                    <VisualState x:Name="InternalFocused">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="FocusElement"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.9"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="InternalUnfocused"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Border" Padding="1">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#7F525F74" Offset="0"/>
                        <GradientStop Color="#7F9AA8BD" Offset="1"/>
                    </LinearGradientBrush>
                </Border.Background>
                <Border Background="#FFFFFFFF"/>
            </Border>
            <Border x:Name="FocusElement"
                    BorderBrush="#FFE1BD29"
                    BorderThickness="1"
                    Opacity="0"/>
            <ContentPresenter Margin="0,1"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity"
                        TargetName="Border"
                        Value="0.35">
                </Setter>
            </Trigger>
            <DataTrigger Binding="{Binding Path=(dxe:BaseEdit.OwnerEdit).IsReadOnly, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Opacity"
                        TargetName="Border"
                        Value="0.62"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Thickness x:Key="{dxet:EmbeddedEditorLabelsThemeKey ResourceKey=Margin}">4,2,0,0</Thickness>
    <Thickness x:Key="{dxet:EmbeddedEditorLabelsThemeKey ResourceKey=Padding}">0</Thickness>
    <sys:Double x:Key="{dxet:EmbeddedEditorLabelsThemeKey ResourceKey=FontSize}">12</sys:Double>
    <SolidColorBrush x:Key="{dxet:EmbeddedEditorLabelsThemeKey ResourceKey=Foreground}" Color="Gray"/>
    <Thickness x:Key="{dxet:EmbeddedEditorLabelsThemeKey ResourceKey=ContentMargin}">0,0,0,2</Thickness>

</ResourceDictionary>