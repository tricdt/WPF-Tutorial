<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" xmlns:dxpg="http://schemas.devexpress.com/winfx/2008/xaml/pivotgrid" xmlns:dxpgi="http://schemas.devexpress.com/winfx/2008/xaml/pivotgrid/internal" xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol" xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:dxcn="clr-namespace:DevExpress.Xpf.Core.Native;assembly=DevExpress.Xpf.Core.v24.1" xmlns:themes="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
  <themes:BooleanToVisibilityConverter x:Key="invertBoolToVisibilityConverter" Invert="True" />
  <themes:BooleanToVisibilityConverter x:Key="boolToVisibilityConverter" />
  <themes:ObjectToStringConverter x:Key="objectToStringConverter" />
  <dxpgi:FieldListAllowedLayoutsToBoolConverter x:Key="fieldListAllowedLayoutsToBoolConverter" />
  <themes:BoolToObjectConverter x:Key="hiddenFieldsShowAllConverter" FalseValue="{dxpgi:PivotGridStringId StringId=CustomizationFormHiddenFields}" TrueValue="{dxpgi:PivotGridStringId StringId=CustomizationFormAvailableFields}" />
  <dxpgi:FieldListActualAreaToAreaTextConverter x:Key="fieldListActualAreaToAreaTextConverter" />
  <dxpgi:FieldListActualAreaToAreaLabelConverter x:Key="fieldListActualAreaToAreaLabelConverter" />
  <dxpgi:FieldListActualAreaToAreaImageConverter x:Key="fieldListActualAreaToAreaImageConverter" />
  <themes:BoolInverseConverter x:Key="boolInverseConverter" />
  <themes:VisibilityInverseConverter x:Key="inverseVisibilityConverter" />
  <dxpgi:TreeViewFieldHeaderToFieldTreeViewContentConverter x:Key="treeViewFieldHeaderToFieldTreeViewContentConverter" />
  <dxpgi:ObjectToThicknessConverter x:Key="headerImageMarginConverter" NullValue="0" NotNullValue="0,0,3,0" />
  <!--BEGIN TOSLONLY REPLACE 'TextTrimming="CharacterEllipsis"''-->
  <Style x:Key="{dxpgi:PivotGridThemeKey ResourceKey=FieldListDragTextStyle}" TargetType="TextBlock">
    <Setter Property="TextWrapping" Value="Wrap" />
    <Setter Property="FontSize" Value="11" />
    <Setter Property="Foreground" Value="{DynamicResource {dxpgi:AppearanceThemeKey ResourceKey=FieldListDragTextForeground}}" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="TextAlignment" Value="Center" />
    <Setter Property="Margin" Value="35,4" />
  </Style>
  <ControlTemplate x:Key="{dxpgi:FieldHeaderThemeKey ResourceKey=FieldListTemplate}" TargetType="dxpgi:FieldHeader">
    <themes:SimplePanel>
      <Grid Name="dropPlaceGrid">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition Height="*" />
          <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Border Background="Transparent" dxpgi:FieldHeadersBase.DropPlace="Previous" />
        <Border Background="Transparent" Grid.Row="1" dxpgi:FieldHeadersBase.DropPlace="Next" />
      </Grid>
      <Button themes:DragManager.IsStartDragPlace="true" Name="PART_HeaderButton" Focusable="False" IsTabStop="False" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Margin="0,0,0,1" Command="{TemplateBinding ChangeFieldSortOrder}" dxpgi:FieldHeader.Field="{Binding Path=(dxpgi:FieldHeader.Field), RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{Binding Path=(dxpgi:FieldHeader.Field), RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource {dxpgi:FieldHeaderThemeKey ResourceKey=ButtonStyle}}" dxpgi:FieldHeadersBase.FieldListArea="{Binding Path=(dxpgi:FieldHeadersBase.FieldListArea), RelativeSource={RelativeSource TemplatedParent}}" />
    </themes:SimplePanel>
  </ControlTemplate>
  <DataTemplate x:Key="{dxpgi:PivotGridThemeKey ResourceKey=ExcelFieldListItemTemplate}">
    <Border themes:DragManager.IsStartDragPlace="false" DataContext="{Binding Path=Content.Content, RelativeSource={RelativeSource TemplatedParent}}">
      <dxpgi:FieldHeader x:Name="fieldListHeader" IsTabStop="False" SnapsToDevicePixels="True" dxpgi:FieldHeadersBase.FieldListArea="All" Template="{DynamicResource {dxpgi:FieldHeaderThemeKey ResourceKey=FieldListTemplate}}" />
    </Border>
  </DataTemplate>
  <ControlTemplate x:Key="{dxpgi:PivotGridThemeKey ResourceKey=FieldListTemplate}">
    <themes:NonLogicalDecorator>
      <dxpg:PivotFieldListControl Owner="{Binding Path=(dxpg:PivotGridControl.PivotGrid), RelativeSource={RelativeSource TemplatedParent}}" dxpgi:InnerFieldListControl.IsInWindow="True" ShowBorder="True" ScrollViewer.VerticalScrollBarVisibility="Disabled" IsExternal="False" ScrollViewer.HorizontalScrollBarVisibility="Disabled" />
    </themes:NonLogicalDecorator>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxpgi:PivotGridThemeKey ResourceKey=ExcelFieldListTemplate}">
    <themes:NonLogicalDecorator>
      <dxpg:PivotExcelFieldListControl x:Name="ExcelFieldList" Padding="12,4,12,10" IsExternal="False" dxpgi:InnerFieldListControl.IsInWindow="True" Owner="{Binding Path=(dxpg:PivotGridControl.PivotGrid), RelativeSource={RelativeSource TemplatedParent}}" />
    </themes:NonLogicalDecorator>
  </ControlTemplate>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.PivotGrid.PivotFieldListControl}" TargetType="{x:Type dxpg:PivotFieldListControl}">
    <Setter Property="GroupFields" Value="{Binding Path=Owner.GroupFieldsInFieldList, RelativeSource={RelativeSource Self}}" />
    <Setter Property="IncludeVisibleFields" Value="{Binding Path=Owner.FieldListIncludeVisibleFields, RelativeSource={RelativeSource Self}}" />
    <Setter Property="ShowHeaderMenu" Value="{DXBinding '@s.ActualOrientation eq $dxpg:FieldListOrientation.Horizontal and @s.Area ne $dxpg:FieldListArea.All'}" />
    <Setter Property="Template">
      <Setter.Value>
        <Binding Path="ActualOrientation" RelativeSource="{RelativeSource Self}">
          <Binding.Converter>
            <themes:EnumToObjectConverter>
              <themes:EnumToObjectConverter.Values>
                <themes:EnumObjectProvider x:Key="Vertical">
                  <themes:EnumObjectProvider.Value>
                    <ControlTemplate TargetType="{x:Type dxpg:PivotFieldListControl}">
                      <Grid>
                        <VisualStateManager.VisualStateGroups>
                          <VisualStateGroup x:Name="EnableDragOver">
                            <VisualState x:Name="Disable" />
                            <VisualState x:Name="Enable">
                              <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hoverBorder" Storyboard.TargetProperty="Margin" dxcn:ValueSetter.Thickness="-2" />
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hoverBorder" Storyboard.TargetProperty="BorderThickness" dxcn:ValueSetter.Thickness="2" />
                              </Storyboard>
                            </VisualState>
                          </VisualStateGroup>
                          <VisualStateGroup x:Name="Drag">
                            <VisualState x:Name="DragOver">
                              <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hoverBorder" Storyboard.TargetProperty="Visibility" dxcn:ValueSetter.Visibility="Visible" />
                              </Storyboard>
                            </VisualState>
                            <VisualState x:Name="DragLeave" />
                          </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.RowDefinitions>
                          <RowDefinition Height="Auto" />
                          <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Border x:Name="hoverBorder" Visibility="Collapsed" Style="{DynamicResource ResourceKey={dxpgi:AppearanceThemeKey ResourceKey=FieldListDragOverBorderStyle}}" Grid.Row="1" />
                        <dxpgi:InnerFieldListControl ShowBorder="{TemplateBinding ShowBorder}" x:Name="FieldListHeaders" Opacity="1" Grid.Row="1" Area="{TemplateBinding Area}" GroupFields="{TemplateBinding GroupFields}" Background="{TemplateBinding Background}" ShowAll="{TemplateBinding IncludeVisibleFields}" PivotGrid="{TemplateBinding Owner}" />
                        <Grid x:Name="innerGrid" SnapsToDevicePixels="True" Height="21" Visibility="{TemplateBinding LabelVisibility}">
                          <!--SPECIFICTHEME TouchlineDark <Grid.MinHeight>22</Grid.MinHeight> SPECIFICTHEME-->
                          <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                          </Grid.ColumnDefinitions>
                          <themes:DXImage VerticalAlignment="Center" Margin="0,0,0,5" Source="{Binding Path=ActualArea, Converter={StaticResource fieldListActualAreaToAreaImageConverter}, ElementName=FieldListHeaders}" Width="16" Height="16">
                            <!--BEGIN WPF-->
                            <RenderOptions.BitmapScalingMode>NearestNeighbor</RenderOptions.BitmapScalingMode>
                            <!--END WPF-->
                          </themes:DXImage>
                          <TextBlock Grid.Column="1" VerticalAlignment="Center" Margin="4,0,4,5" TextTrimming="CharacterEllipsis" HorizontalAlignment="Left" Text="{Binding Path=ActualArea, Converter={StaticResource fieldListActualAreaToAreaLabelConverter}, ElementName=FieldListHeaders}" />
                        </Grid>
                        <Border Grid.Row="1" Visibility="{TemplateBinding EmptyTextVisibility}">
                          <TextBlock x:Name="FieldListDragText" Text="{Binding Path=ActualArea, ElementName=FieldListHeaders, Converter={StaticResource ResourceKey=fieldListActualAreaToAreaTextConverter}}" Visibility="{Binding ElementName=FieldListHeaders, Path=IsEmpty, Converter={StaticResource boolToVisibilityConverter}}" Style="{DynamicResource {dxpgi:PivotGridThemeKey ResourceKey=FieldListDragTextStyle}}" />
                        </Border>
                      </Grid>
                      <ControlTemplate.Triggers>
                        <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                          <Setter TargetName="innerGrid" Property="Height" Value="43" />
                        </Trigger>
                      </ControlTemplate.Triggers>
                    </ControlTemplate>
                  </themes:EnumObjectProvider.Value>
                </themes:EnumObjectProvider>
                <themes:EnumObjectProvider x:Key="Horizontal">
                  <themes:EnumObjectProvider.Value>
                    <ControlTemplate TargetType="{x:Type dxpg:PivotFieldListControl}">
                      <Border BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" BorderBrush="{DynamicResource ResourceKey={dxpgi:AppearanceThemeKey ResourceKey=PivotBorderBrush}}">
                        <Grid>
                          <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                          </Grid.ColumnDefinitions>
                          <dxpgi:FieldHeaders Grid.Column="1" Margin="0,-1,0,-2" ShowListSource="True" EnableDragDrop="True" Area="{TemplateBinding Area}" Padding="{DynamicResource {dxpgi:FieldHeadersThemeKey ResourceKey=DataAreaPopupPadding}}" Foreground="{DynamicResource ResourceKey={dxpgi:AppearanceThemeKey ResourceKey=FieldListDragTextForeground}}" PivotGrid="{TemplateBinding Owner}" x:Name="FieldListHeaders" EmptyTextVisibility="{TemplateBinding EmptyTextVisibility}" ContentTemplate="{DynamicResource {dxpgi:FieldHeadersThemeKey ResourceKey=RowAreaContentTemplate}}" Style="{DynamicResource {dxpgi:FieldHeadersThemeKey ResourceKey=DataAreaStyle}}" />
                          <Grid SnapsToDevicePixels="True" MinHeight="16" MinWidth="{Binding FontSize,RelativeSource={RelativeSource TemplatedParent},Converter={dxpgi:FontSizeToFieldListLabelMinWidth}}" VerticalAlignment="Center" Visibility="{TemplateBinding LabelVisibility}">
                            <Grid.ColumnDefinitions>
                              <ColumnDefinition Width="Auto" />
                              <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <themes:DXImage VerticalAlignment="Center" Source="{Binding Path=ActualArea, Converter={StaticResource fieldListActualAreaToAreaImageConverter}, ElementName=FieldListHeaders}" Width="16" Height="16">
                              <!--BEGIN WPF-->
                              <RenderOptions.BitmapScalingMode>NearestNeighbor</RenderOptions.BitmapScalingMode>
                              <!--END WPF-->
                            </themes:DXImage>
                            <TextBlock Grid.Column="1" VerticalAlignment="Center" Margin="4,0" TextTrimming="CharacterEllipsis" HorizontalAlignment="Left" Text="{Binding Path=ActualArea, Converter={StaticResource fieldListActualAreaToAreaLabelConverter}, ElementName=FieldListHeaders}" />
                          </Grid>
                        </Grid>
                      </Border>
                    </ControlTemplate>
                  </themes:EnumObjectProvider.Value>
                </themes:EnumObjectProvider>
                <themes:EnumObjectProvider x:Key="Auto" />
              </themes:EnumToObjectConverter.Values>
            </themes:EnumToObjectConverter>
          </Binding.Converter>
        </Binding>
      </Setter.Value>
    </Setter>
    <Setter Property="dx:DragManager.DropTargetFactory" Value="{dxpgi:PivotGridDropTargetFactory}" />
    <Setter Property="IsEnabled" Value="{Binding Owner.IsEnabled, RelativeSource={RelativeSource Self}}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Background" Value="{DynamicResource {dxpgi:PivotGridThemeKey ResourceKey=FieldListBackgroundBrush}}" />
    <Setter Property="EmptyTextVisibility" Value="{Binding LabelVisibility, RelativeSource={RelativeSource Self}, Converter={StaticResource ResourceKey=inverseVisibilityConverter}}" />
    <Setter Property="dxpgi:InnerFieldListControl.FieldListStyle" Value="Simple" />
  </Style>
  <Style x:Key="ItemContainerStyle" TargetType="{x:Type ListBoxItem}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBoxItem}">
          <ContentPresenter ContentTemplate="{DynamicResource {dxpgi:PivotGridThemeKey ResourceKey=ExcelFieldListItemTemplate}}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="IsTabStop" Value="False" />
  </Style>
  <dxpgi:PivotGridFieldDataListConverter x:Key="PivotGridFieldDataListConverter" />
  <dxpgi:CustomFieldsToColumnProviderConverter x:Key="customFieldsToColumnProviderConverter" />
  <Style TargetType="{x:Type dxe:SearchControl}" x:Key="searchFieldStyle">
    <Setter Property="DockPanel.Dock" Value="Top" />
    <Setter Property="FilterCondition" Value="Contains" />
    <Setter Property="FilterByColumnsMode" Value="Custom" />
    <Setter Property="FindMode" Value="Always" />
    <Setter Property="Visibility" Value="{DXBinding '@p.Area == $dxpg:FieldListArea.All ? `Visible` : `Collapsed`'}" />
    <Setter Property="NullText" Value="{dxpgi:PivotGridStringId StringId=SearchForField}" />
    <Setter Property="ShowMRUButton" Value="False" />
    <Setter Property="ColumnProvider" Value="{Binding Tag, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource customFieldsToColumnProviderConverter}}" />
    <Setter Property="Margin" Value="{DynamicResource {dxpgi:PivotGridThemeKey ResourceKey=FieldListSearchMargin}}" />
    <Style.Triggers>
      <DataTrigger Binding="{Binding Path=(dxpgi:InnerFieldListControl.FieldListStyle), RelativeSource={RelativeSource Self}}" Value="Excel2007">
        <Setter Property="Margin" Value="0,0,0,4" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=(dxpgi:InnerFieldListControl.IsInWindow), RelativeSource={RelativeSource Self}}" Value="True">
        <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
          <Setter.Value>
            <DataTemplate>
              <ItemsControl>
                <dxmvvm:FocusBehavior />
              </ItemsControl>
            </DataTemplate>
          </Setter.Value>
        </Setter>
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="Border" x:Key="searchBorderStyle">
    <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey={dxpgi:PivotGridThemeKey ResourceKey=FieldListSearchBorderBrush}}" />
    <Setter Property="BorderThickness" Value="{DynamicResource ResourceKey={dxpgi:PivotGridThemeKey ResourceKey=FieldListSearchBorderThickness}}" />
    <Setter Property="DockPanel.Dock" Value="Top" />
    <Style.Triggers>
      <DataTrigger Binding="{Binding Path=(dxpgi:InnerFieldListControl.FieldListStyle), RelativeSource={RelativeSource Self}}" Value="Excel2007">
        <Setter Property="BorderThickness" Value="0" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.PivotGrid.Internal.InnerFieldListControl}" TargetType="{x:Type dxpgi:InnerFieldListControl}">
    <Setter Property="dx:DragManager.DropTargetFactory" Value="{dxpgi:PivotGridDropTargetFactory}" />
    <Setter Property="StandartTemplate">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxpgi:InnerFieldListControl}">
          <DockPanel Margin="{TemplateBinding Padding}">
            <Border Style="{StaticResource searchBorderStyle}">
              <dxe:SearchControl x:Name="search" Style="{StaticResource searchFieldStyle}" Tag="DisplayText" />
            </Border>
            <dxe:ListBoxEdit ShowBorder="{TemplateBinding ShowBorder}" ItemContainerStyle="{StaticResource ItemContainerStyle}" FilterCriteria="{Binding ElementName=search, Path=FilterCriteria}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Background="{TemplateBinding Background}" ScrollViewer.VerticalScrollBarVisibility="Auto" x:Name="lb" Focusable="False" BorderThickness="{TemplateBinding BorderThickness}" ItemsSource="{Binding ItemsSource, Converter={StaticResource PivotGridFieldDataListConverter}, RelativeSource={RelativeSource TemplatedParent}}" ItemTemplate="{DynamicResource {dxpgi:PivotGridThemeKey ResourceKey=ExcelFieldListItemTemplate}}">
              <dxe:ListBoxEdit.ItemsPanel>
                <ItemsPanelTemplate>
                  <VirtualizingStackPanel />
                </ItemsPanelTemplate>
              </dxe:ListBoxEdit.ItemsPanel>
            </dxe:ListBoxEdit>
          </DockPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="TreeViewTemplate">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxpgi:InnerFieldListControl}">
          <DockPanel Margin="{TemplateBinding Padding}">
            <Border Style="{StaticResource searchBorderStyle}">
              <dxe:SearchControl x:Name="search" Style="{StaticResource searchFieldStyle}" Tag="DisplayText;DisplayFolder" />
            </Border>
            <dxpgi:TreeViewFieldsPresenter BorderThickness="{TemplateBinding BorderThickness}" themes:DragManager.IsStartDragPlace="True" FilterCriteria="{Binding ElementName=search, Path=FilterCriteria}" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto" x:Name="lb" Background="{TemplateBinding Background}" ShowCheckBoxes="{TemplateBinding ActualShowAll}" GroupFields="{TemplateBinding GroupFields}" CoreFields="{TemplateBinding ItemsSource}" dxpg:PivotGridControl.PivotGrid="{Binding Path=(dxpg:PivotGridControl.PivotGrid), RelativeSource={RelativeSource TemplatedParent}}">
              <!--BEGIN WPF-->
              <ScrollViewer.PanningMode>None</ScrollViewer.PanningMode>
              <!--END WPF-->
            </dxpgi:TreeViewFieldsPresenter>
          </DockPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template" Value="{Binding StandartTemplate, RelativeSource={RelativeSource Self}}" />
    <Setter Property="BorderThickness" Value="{DynamicResource {dxpgi:PivotGridThemeKey ResourceKey=InnerFieldListBorderThickness}}" />
    <Setter Property="ShowListSource" Value="True" />
    <Setter Property="Background" Value="{DynamicResource {dxpgi:PivotGridThemeKey ResourceKey=FieldListBackgroundBrush}}" />
    <Setter Property="Padding" Value="{DynamicResource {dxpgi:PivotGridThemeKey ResourceKey=InnerFieldListPadding}}" />
    <Style.Triggers>
      <DataTrigger Binding="{Binding Path=(dxpgi:InnerFieldListControl.FieldListStyle), RelativeSource={RelativeSource Self}}" Value="Excel2007">
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="1" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.PivotGrid.PivotExcelFieldListControl}" TargetType="{x:Type dxpg:PivotExcelFieldListControl}">
    <Setter Property="GroupFields" Value="{Binding Path=Owner.GroupFieldsInFieldList, RelativeSource={RelativeSource Self}}" />
    <Setter Property="IncludeVisibleFields" Value="{Binding Path=Owner.FieldListIncludeVisibleFields, RelativeSource={RelativeSource Self}}" />
    <Setter Property="IsHitTestVisible" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxpg:PivotExcelFieldListControl}">
          <dxb:BarManager>
            <dxb:BarManager.Items>
              <dxpgi:ExcelMenuBarButtonItem x:Name="StackedDefault" GlyphSize="Large" LargeGlyph="{dxpgi:PivotImage ImageName=StackedDefault}" Content="{dxpgi:PivotGridStringId StringId=CustomizationFormStackedDefault}" PivotGrid="{Binding Path=Owner}" IsVisible="{Binding Path=Owner.FieldListAllowedLayouts, Converter={StaticResource  ResourceKey=fieldListAllowedLayoutsToBoolConverter}, ConverterParameter=StackedDefault}">
                <dxpgi:ExcelMenuBarButtonItem.CommandParameter>
                  <dxpg:FieldListLayout>StackedDefault</dxpg:FieldListLayout>
                </dxpgi:ExcelMenuBarButtonItem.CommandParameter>
              </dxpgi:ExcelMenuBarButtonItem>
              <dxpgi:ExcelMenuBarButtonItem x:Name="StackedSideBySide" GlyphSize="Large" LargeGlyph="{dxpgi:PivotImage ImageName=StackedSideBySide}" Content="{dxpgi:PivotGridStringId StringId=CustomizationFormStackedSideBySide}" PivotGrid="{Binding Path=Owner}" IsVisible="{Binding Path=Owner.FieldListAllowedLayouts, Converter={StaticResource  ResourceKey=fieldListAllowedLayoutsToBoolConverter}, ConverterParameter=StackedSideBySide}">
                <dxpgi:ExcelMenuBarButtonItem.CommandParameter>
                  <dxpg:FieldListLayout>StackedSideBySide</dxpg:FieldListLayout>
                </dxpgi:ExcelMenuBarButtonItem.CommandParameter>
              </dxpgi:ExcelMenuBarButtonItem>
              <dxpgi:ExcelMenuBarButtonItem x:Name="TopPanelOnly" GlyphSize="Large" LargeGlyph="{dxpgi:PivotImage ImageName=TopPanelOnly}" Content="{dxpgi:PivotGridStringId StringId=CustomizationFormTopPanelOnly}" PivotGrid="{Binding Path=Owner}" IsVisible="{Binding Path=Owner.FieldListAllowedLayouts, Converter={StaticResource  ResourceKey=fieldListAllowedLayoutsToBoolConverter}, ConverterParameter=TopPanelOnly}">
                <dxpgi:ExcelMenuBarButtonItem.CommandParameter>
                  <dxpg:FieldListLayout>TopPanelOnly</dxpg:FieldListLayout>
                </dxpgi:ExcelMenuBarButtonItem.CommandParameter>
              </dxpgi:ExcelMenuBarButtonItem>
              <dxpgi:ExcelMenuBarButtonItem x:Name="BottomPanelOnly2by2" GlyphSize="Large" LargeGlyph="{dxpgi:PivotImage ImageName=BottomPanelOnly2by2}" Content="{dxpgi:PivotGridStringId StringId=CustomizationFormBottomPanelOnly2by2}" PivotGrid="{Binding Path=Owner}" IsVisible="{Binding Path=Owner.FieldListAllowedLayouts, Converter={StaticResource  ResourceKey=fieldListAllowedLayoutsToBoolConverter}, ConverterParameter=BottomPanelOnly2by2}">
                <dxpgi:ExcelMenuBarButtonItem.CommandParameter>
                  <dxpg:FieldListLayout>BottomPanelOnly2by2</dxpg:FieldListLayout>
                </dxpgi:ExcelMenuBarButtonItem.CommandParameter>
              </dxpgi:ExcelMenuBarButtonItem>
              <dxpgi:ExcelMenuBarButtonItem x:Name="BottomPanelOnly1by4" GlyphSize="Large" LargeGlyph="{dxpgi:PivotImage ImageName=BottomPanelOnly1by4}" Content="{dxpgi:PivotGridStringId StringId=CustomizationFormBottomPanelOnly1by4}" PivotGrid="{Binding Path=Owner}" IsVisible="{Binding Path=Owner.FieldListAllowedLayouts, Converter={StaticResource  ResourceKey=fieldListAllowedLayoutsToBoolConverter}, ConverterParameter=BottomPanelOnly1by4}">
                <dxpgi:ExcelMenuBarButtonItem.CommandParameter>
                  <dxpg:FieldListLayout>BottomPanelOnly1by4</dxpg:FieldListLayout>
                </dxpgi:ExcelMenuBarButtonItem.CommandParameter>
              </dxpgi:ExcelMenuBarButtonItem>
            </dxb:BarManager.Items>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="ShowLayoutListGroup">
                <VisualState x:Name="MouseEnter">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="ShowLayoutList2" Storyboard.TargetProperty="Opacity" To="1" BeginTime="00:00:00" Duration="00:00:00.5" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="MouseLeave">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="ShowLayoutList2" Storyboard.TargetProperty="Opacity" To="0" BeginTime="00:00:00" Duration="00:00:00.5" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid Margin="{TemplateBinding Padding}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="33*" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="24" />
                <RowDefinition Height="50*" />
                <RowDefinition Height="0" />
              </Grid.RowDefinitions>
              <themes:SimplePanel SnapsToDevicePixels="True" Grid.Row="0" Panel.ZIndex="100" MinWidth="200" x:Name="ShowLayoutListPanel" Visibility="{Binding Path=Owner.IsFieldListMenuEnabled, Converter={StaticResource boolToVisibilityConverter}}">
                <Button ToolTipService.ToolTip="{dxpgi:PivotGridStringId StringId=CustomizationFormLayoutButtonTooltip}" Name="ShowLayoutList2" HorizontalAlignment="Right" Width="40" Height="23" Margin="0,0,0,1" Opacity="0">
                  <dxb:BarManager.DXContextMenu>
                    <dxb:PopupMenuInfo>
                      <dxb:PopupMenuInfo.ItemLinks>
                        <dxb:BarButtonItemLink BarItemName="StackedDefault" />
                        <dxb:BarButtonItemLink BarItemName="StackedSideBySide" />
                        <dxb:BarButtonItemLink BarItemName="TopPanelOnly" />
                        <dxb:BarButtonItemLink BarItemName="BottomPanelOnly2by2" />
                        <dxb:BarButtonItemLink BarItemName="BottomPanelOnly1by4" />
                      </dxb:PopupMenuInfo.ItemLinks>
                    </dxb:PopupMenuInfo>
                  </dxb:BarManager.DXContextMenu>
                </Button>
                <Button Name="ShowLayoutList" HorizontalAlignment="Right" Width="40" Height="23" Margin="0,0,0,1">
                  <Button.Template>
                    <ControlTemplate>
                      <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="-2,0,0,1">
                        <themes:DXImage Margin="1,1.7,0,0" VerticalAlignment="Center" Source="{dxpgi:PivotImage ImageName=Customization2007Button}" Width="16" Height="16" HorizontalAlignment="Left">
                          <!--BEGIN WPF-->
                          <RenderOptions.BitmapScalingMode>NearestNeighbor</RenderOptions.BitmapScalingMode>
                          <!--END WPF-->
                        </themes:DXImage>
                        <Path Margin="2,0,0,0" Fill="{DynamicResource {dxpgi:AppearanceThemeKey ResourceKey=HeaderControlsColor}}" Width="5" Height="3" Stretch="Fill" Data="F1 M 278,308L 282,312L 283,312L 287,308L 278,308 Z " HorizontalAlignment="Left" />
                      </StackPanel>
                    </ControlTemplate>
                  </Button.Template>
                  <dxb:BarManager.DXContextMenu>
                    <dxb:PopupMenuInfo>
                      <dxb:PopupMenuInfo.ItemLinks>
                        <dxb:BarButtonItemLink BarItemName="StackedDefault" />
                        <dxb:BarButtonItemLink BarItemName="StackedSideBySide" />
                        <dxb:BarButtonItemLink BarItemName="TopPanelOnly" />
                        <dxb:BarButtonItemLink BarItemName="BottomPanelOnly2by2" />
                        <dxb:BarButtonItemLink BarItemName="BottomPanelOnly1by4" />
                      </dxb:PopupMenuInfo.ItemLinks>
                    </dxb:PopupMenuInfo>
                  </dxb:BarManager.DXContextMenu>
                </Button>
              </themes:SimplePanel>
              <dxpgi:FieldListLayoutSelector x:Name="LayoutSelector" Grid.Row="1" Layout="{Binding Path=Owner.PivotGrid.FieldListLayout, RelativeSource={RelativeSource TemplatedParent}}" ShowAll="{Binding Path=Owner.PivotGrid.FieldListIncludeVisibleFields, RelativeSource={RelativeSource TemplatedParent}}" FieldListSplitterX="{Binding Path=Owner.PivotGrid.FieldListSplitterX, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" FieldListSplitterY="{Binding Path=Owner.PivotGrid.FieldListSplitterY, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
                <dxpgi:FieldListLayoutSelector.StackedDefaultTemplate>
                  <ControlTemplate TargetType="{x:Type dxpgi:FieldListLayoutSelector}">
                    <dxlc:DockLayoutControl Margin="0,-24,0,0">
                      <Grid dxlc:DockLayoutControl.Dock="Top" SnapsToDevicePixels="True" MinHeight="{DynamicResource {dxpgi:AppearanceThemeKey ResourceKey=FieldListHiddenFieldsShowGridMinHeight}}">
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="Auto" />
                          <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <themes:DXImage VerticalAlignment="Top" Margin="0,3,0,0" Source="{dxpgi:PivotImage ImageName=Customization2007HiddenFields}" Width="16" Height="16">
                          <!--BEGIN WPF-->
                          <RenderOptions.BitmapScalingMode>NearestNeighbor</RenderOptions.BitmapScalingMode>
                          <!--END WPF-->
                        </themes:DXImage>
                        <TextBlock VerticalAlignment="Top" HorizontalAlignment="Left" Margin="4,2" TextTrimming="CharacterEllipsis" Text="{Binding Path=ShowAll, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource hiddenFieldsShowAllConverter}}" Grid.Column="1" />
                      </Grid>
                      <ContentPresenter dxlc:DockLayoutControl.Dock="Top" Margin="0,0,0,8" dxlc:DockLayoutControl.AllowVerticalSizing="True" MaxHeight="{Binding Path=ActualHeightCore, RelativeSource={RelativeSource TemplatedParent}, Converter={dxpgi:MaxWidthConverter}}" Content="{TemplateBinding FieldListAreaContent}" Height="{Binding FieldListSplitterY, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
                      <Grid dxlc:DockLayoutControl.Dock="Client" dxlc:DockLayoutControl.AllowVerticalSizing="True" Margin="0,8,0,0">
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="*" />
                          <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                          <RowDefinition Height="*" />
                          <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <ContentPresenter Margin="0,0,4,4" Content="{TemplateBinding FilterAreaContent}" Grid.Column="0" Grid.Row="0" />
                        <ContentPresenter Margin="4,0,0,4" Content="{TemplateBinding ColumnAreaContent}" Grid.Column="1" Grid.Row="0" />
                        <ContentPresenter Margin="0,4,4,0" Content="{TemplateBinding RowAreaContent}" Grid.Column="0" Grid.Row="1" />
                        <ContentPresenter Margin="4,4,0,0" Content="{TemplateBinding DataAreaContent}" Grid.Column="1" Grid.Row="1" />
                      </Grid>
                      <ContentPresenter dxlc:DockLayoutControl.Dock="Bottom" Margin="0,8,0,0" Content="{TemplateBinding DefereUpdatesContent}" />
                    </dxlc:DockLayoutControl>
                  </ControlTemplate>
                </dxpgi:FieldListLayoutSelector.StackedDefaultTemplate>
                <dxpgi:FieldListLayoutSelector.StackedSideBySideTemplate>
                  <ControlTemplate TargetType="{x:Type dxpgi:FieldListLayoutSelector}">
                    <dxlc:DockLayoutControl Margin="0,2,0,0">
                      <ContentPresenter dxlc:DockLayoutControl.Dock="Bottom" Margin="0,0,0,0" Content="{TemplateBinding DefereUpdatesContent}" />
                      <Grid dxlc:DockLayoutControl.Dock="Client" Margin="8,0,0,0">
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="1*" />
                          <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                          <RowDefinition Height="*" />
                          <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <ContentPresenter Margin="0,0,4,4" Content="{TemplateBinding FilterAreaContent}" Grid.Column="0" Grid.Row="0" />
                        <ContentPresenter Margin="4,0,0,4" Content="{TemplateBinding ColumnAreaContent}" Grid.Column="1" Grid.Row="0" />
                        <ContentPresenter Margin="0,4,4,0" Content="{TemplateBinding RowAreaContent}" Grid.Column="0" Grid.Row="1" />
                        <ContentPresenter Margin="4,4,0,0" Content="{TemplateBinding DataAreaContent}" Grid.Column="1" Grid.Row="1" />
                      </Grid>
                      <Grid dxlc:DockLayoutControl.AllowHorizontalSizing="True" Width="{Binding FieldListSplitterX, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" MaxWidth="{Binding Path=ActualWidthCore, RelativeSource={RelativeSource TemplatedParent}, Converter={dxpgi:MaxWidthConverter}}" dxlc:DockLayoutControl.Dock="Left">
                        <Grid.RowDefinitions>
                          <RowDefinition Height="Auto" />
                          <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid SnapsToDevicePixels="True" Height="16" dxlc:DockLayoutControl.Dock="Top" Margin="0,0,8,0">
                          <!--SPECIFICTHEME TouchlineDark <Grid.MinHeight>20</Grid.MinHeight> SPECIFICTHEME-->
                          <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                          </Grid.ColumnDefinitions>
                          <themes:DXImage VerticalAlignment="Top" Source="{dxpgi:PivotImage ImageName=Customization2007HiddenFields}" Width="16" Height="16">
                            <!--BEGIN WPF-->
                            <RenderOptions.BitmapScalingMode>NearestNeighbor</RenderOptions.BitmapScalingMode>
                            <!--END WPF-->
                          </themes:DXImage>
                          <TextBlock VerticalAlignment="Center" HorizontalAlignment="Left" Margin="4,2" TextTrimming="CharacterEllipsis" Text="{Binding Path=ShowAll, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource hiddenFieldsShowAllConverter}}" Grid.Column="1" />
                        </Grid>
                        <ContentPresenter Grid.Row="1" Content="{TemplateBinding FieldListAreaContent}" Margin="0,4,8,0" dxlc:DockLayoutControl.Dock="Client" dxlc:DockLayoutControl.AllowHorizontalSizing="True" />
                      </Grid>
                    </dxlc:DockLayoutControl>
                  </ControlTemplate>
                </dxpgi:FieldListLayoutSelector.StackedSideBySideTemplate>
                <dxpgi:FieldListLayoutSelector.TopPanelOnlyTemplate>
                  <ControlTemplate TargetType="{x:Type dxpgi:FieldListLayoutSelector}">
                    <ContentPresenter Margin="0,2,0,0" Content="{TemplateBinding FieldListAreaContent}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                  </ControlTemplate>
                </dxpgi:FieldListLayoutSelector.TopPanelOnlyTemplate>
                <dxpgi:FieldListLayoutSelector.BottomPanelOnly2by2Template>
                  <ControlTemplate TargetType="{x:Type dxpgi:FieldListLayoutSelector}">
                    <Grid Margin="0,2,0,0">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                      </Grid.ColumnDefinitions>
                      <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                      </Grid.RowDefinitions>
                      <ContentPresenter Margin="0,0,4,4" Content="{TemplateBinding FilterAreaContent}" Grid.Column="0" Grid.Row="0" />
                      <ContentPresenter Margin="4,0,0,4" Content="{TemplateBinding ColumnAreaContent}" Grid.Column="1" Grid.Row="0" />
                      <ContentPresenter Margin="0,4,4,0" Content="{TemplateBinding RowAreaContent}" Grid.Column="0" Grid.Row="1" />
                      <ContentPresenter Margin="4,4,0,0" Content="{TemplateBinding DataAreaContent}" Grid.Column="1" Grid.Row="1" />
                      <ContentPresenter Content="{TemplateBinding DefereUpdatesContent}" Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="2" Margin="0,8,0,0" />
                    </Grid>
                  </ControlTemplate>
                </dxpgi:FieldListLayoutSelector.BottomPanelOnly2by2Template>
                <dxpgi:FieldListLayoutSelector.BottomPanelOnly1by4Template>
                  <ControlTemplate TargetType="{x:Type dxpgi:FieldListLayoutSelector}">
                    <Grid Margin="0,2,0,0">
                      <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                      </Grid.RowDefinitions>
                      <ContentPresenter Content="{TemplateBinding FilterAreaContent}" Grid.Row="0" Margin="0,0,0,4" />
                      <ContentPresenter Content="{TemplateBinding ColumnAreaContent}" Grid.Row="1" Margin="0,4,0,4" />
                      <ContentPresenter Content="{TemplateBinding RowAreaContent}" Grid.Row="2" Margin="0,4,0,4" />
                      <ContentPresenter Content="{TemplateBinding DataAreaContent}" Grid.Row="3" Margin="0,4,0,0" />
                      <ContentPresenter Content="{TemplateBinding DefereUpdatesContent}" Grid.Row="4" Margin="0,8,0,0" />
                    </Grid>
                  </ControlTemplate>
                </dxpgi:FieldListLayoutSelector.BottomPanelOnly1by4Template>
                <dxpgi:FieldListLayoutSelector.FieldListAreaContent>
                  <dxpgi:InnerFieldListControl Area="All" GroupFields="{TemplateBinding GroupFields}" ShowAll="{TemplateBinding IncludeVisibleFields}" dxpgi:InnerFieldListControl.FieldListStyle="Excel2007" PivotGrid="{TemplateBinding Owner}" />
                </dxpgi:FieldListLayoutSelector.FieldListAreaContent>
                <dxpgi:FieldListLayoutSelector.FilterAreaContent>
                  <dxpg:PivotFieldListControl Area="FilterArea" IsExternal="False" LabelVisibility="Visible" GroupFields="False" EmptyTextVisibility="Collapsed" IncludeVisibleFields="False" ShowBorder="True" Owner="{TemplateBinding Owner}" dxpgi:InnerFieldListControl.FieldListStyle="Excel2007" Foreground="{TemplateBinding Foreground}" />
                </dxpgi:FieldListLayoutSelector.FilterAreaContent>
                <dxpgi:FieldListLayoutSelector.ColumnAreaContent>
                  <dxpg:PivotFieldListControl Area="ColumnArea" IsExternal="False" LabelVisibility="Visible" GroupFields="False" EmptyTextVisibility="Collapsed" IncludeVisibleFields="False" ShowBorder="True" Owner="{TemplateBinding Owner}" dxpgi:InnerFieldListControl.FieldListStyle="Excel2007" Foreground="{TemplateBinding Foreground}" />
                </dxpgi:FieldListLayoutSelector.ColumnAreaContent>
                <dxpgi:FieldListLayoutSelector.RowAreaContent>
                  <dxpg:PivotFieldListControl Area="RowArea" IsExternal="False" LabelVisibility="Visible" GroupFields="False" EmptyTextVisibility="Collapsed" IncludeVisibleFields="False" ShowBorder="True" Owner="{TemplateBinding Owner}" dxpgi:InnerFieldListControl.FieldListStyle="Excel2007" Foreground="{TemplateBinding Foreground}" />
                </dxpgi:FieldListLayoutSelector.RowAreaContent>
                <dxpgi:FieldListLayoutSelector.DataAreaContent>
                  <dxpg:PivotFieldListControl Area="DataArea" IsExternal="False" LabelVisibility="Visible" GroupFields="False" EmptyTextVisibility="Collapsed" IncludeVisibleFields="False" ShowBorder="True" Owner="{TemplateBinding Owner}" dxpgi:InnerFieldListControl.FieldListStyle="Excel2007" Foreground="{TemplateBinding Foreground}" />
                </dxpgi:FieldListLayoutSelector.DataAreaContent>
                <dxpgi:FieldListLayoutSelector.DefereUpdatesContent>
                  <themes:SimplePanel HorizontalAlignment="Stretch" MinWidth="215">
                    <dxe:CheckEdit Content="{dxpgi:PivotGridStringId StringId=CustomizationFormDeferLayoutUpdate}" Name="DefereUpdatesCheck" VerticalAlignment="Center" IsChecked="{Binding Path=Owner.PivotGrid.DeferredUpdates, Mode=TwoWay}" HorizontalAlignment="Left" />
                    <Button Name="Update" IsEnabled="{Binding Path=Owner.PivotGrid.DeferredUpdates}" Content="{dxpgi:PivotGridStringId StringId=CustomizationFormUpdate}" MinWidth="{DynamicResource {dxpgi:AppearanceThemeKey ResourceKey=FieldListUpdateButtonMinWidth}}" MinHeight="{DynamicResource {dxpgi:AppearanceThemeKey ResourceKey=FieldListUpdateButtonMinHeight}}" VerticalAlignment="Center" HorizontalAlignment="Right" />
                  </themes:SimplePanel>
                </dxpgi:FieldListLayoutSelector.DefereUpdatesContent>
              </dxpgi:FieldListLayoutSelector>
            </Grid>
          </dxb:BarManager>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="dx:DragManager.DropTargetFactory" Value="{dxpgi:PivotGridDropTargetFactory}" />
    <Setter Property="IsEnabled" Value="{Binding Owner.IsEnabled, RelativeSource={RelativeSource Self}}" />
  </Style>
  <DataTemplate x:Key="{dxpgi:FieldHeaderThemeKey ResourceKey=FieldHeaderTreeViewTemplate}">
    <StackPanel Orientation="Horizontal" Background="Transparent">
      <dxe:CheckEdit Visibility="{Binding CheckBoxVisibility}" IsChecked="{Binding IsChecked, Mode=TwoWay}" VerticalAlignment="Center" Margin="0,0,3,0" Padding="0" />
      <themes:DXImage Source="{Binding ImageSource}" MaxWidth="16" MaxHeight="16" Margin="{Binding ImageSource, Converter={StaticResource headerImageMarginConverter}}" VerticalAlignment="Center" />
      <TextBlock Text="{Binding DisplayText}" VerticalAlignment="Center" Margin="0,0,0,0" Foreground="{Binding Foreground}" />
    </StackPanel>
  </DataTemplate>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.PivotGrid.Internal.TreeViewFieldHeader}" TargetType="{x:Type dxpgi:TreeViewFieldHeader}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxpgi:TreeViewFieldHeader}">
          <themes:XPFContentControl DataContext="{Binding Content, RelativeSource={RelativeSource Self}}" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource treeViewFieldHeaderToFieldTreeViewContentConverter}}" ContentTemplate="{Binding Content.ContentTemplate, RelativeSource={RelativeSource Self}}" ContentTemplateSelector="{Binding Content.ContentTemplateSelector, RelativeSource={RelativeSource Self}}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="DragElementTemplate">
      <Setter.Value>
        <DataTemplate>
          <Grid VerticalAlignment="Top" HorizontalAlignment="Left">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Border Padding="3,2,4,3" Background="{DynamicResource {dxpgi:PivotGridThemeKey ResourceKey=FieldListBackgroundBrush}}" Opacity="0.5" BorderBrush="{DynamicResource ResourceKey={dxpgi:AppearanceThemeKey ResourceKey=PivotBorderBrush}}" MinWidth="60" BorderThickness="1">
              <dxpgi:DragTreeViewFieldHeader Node="{Binding Content.Content.Node, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{Binding Content.Content, RelativeSource={RelativeSource TemplatedParent}, Converter={dxpgi:TreeFieldHeaderToDragHeaderForegroundConverter}}" dxpgi:FieldHeadersBase.FieldListArea="{Binding Path=(dxpgi:FieldHeadersBase.FieldListArea), RelativeSource={RelativeSource TemplatedParent}}" />
            </Border>
          </Grid>
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <DataTrigger Binding="{Binding Path=IsFocused, RelativeSource={RelativeSource FindAncestor, AncestorType=TreeViewItem}}" Value="True">
        <Setter Property="dx:SvgImageHelper.State" Value="Pressed" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <!--END TOSLONLY REPLACE 'TextTrimming="CharacterEllipsis"''-->
</ResourceDictionary>