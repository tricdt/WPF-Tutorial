<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxn="http://schemas.devexpress.com/winfx/2008/xaml/navbar"
                    xmlns:dxnt="http://schemas.devexpress.com/winfx/2008/xaml/navbar/themekeys"
                    xmlns:interop="clr-namespace:System.Windows.Interop;assembly=PresentationFramework"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--END WPF-->

    <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

    <dx:BoolToVisibilityInverseConverter x:Key="BoolToVisibilityInverseConverter"/>

    <dxn:BooleanToOpacityConverter x:Key="BooleanToOpacityConverter"/>

    <Style x:Key="{dxnt:NavigationPaneHeaderThemeKey ResourceKey=OverflowButtonHeaderStyle}" TargetType="dx:XPFContentPresenter">
        <Setter Property="dxn:NavBarViewBase.ImageSettings" Value="{Binding ActualImageSettings}"/>
        <Setter Property="dxn:NavBarViewBase.LayoutSettings" Value="{Binding ActualLayoutSettings}"/>
        <Setter Property="dxn:NavBarViewBase.DisplayMode" Value="{Binding ActualDisplayMode}"/>
    </Style>

    <Style x:Key="{dxnt:NavigationPaneHeaderThemeKey ResourceKey=GroupButtonHeaderStyle}" TargetType="dx:XPFContentPresenter">
        <Setter Property="dxn:NavBarViewBase.ImageSettings" Value="{Binding ActualImageSettings}"/>
        <Setter Property="dxn:NavBarViewBase.LayoutSettings" Value="{Binding ActualLayoutSettings}"/>
        <Setter Property="dxn:NavBarViewBase.DisplayMode" Value="{Binding ActualDisplayMode}"/>
    </Style>

    <!--BEGIN WPF-->

    <SolidColorBrush x:Key="BackgroundSquare" Color="#FF2D3F5D"/>

    <SolidColorBrush x:Key="DarkSquare" Color="#FF35496A"/>

    <SolidColorBrush x:Key="LightSquare" Color="#FF293955"/>

    <DrawingBrush x:Key="PanelBackground"
                  Stretch="None"
                  TileMode="Tile"
                  Viewport="0,0,4,4"
                  ViewportUnits="Absolute">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="{StaticResource BackgroundSquare}">
                    <GeometryDrawing.Geometry>
                        <GeometryGroup>
                            <RectangleGeometry Rect="0,0,0,0"/>
                            <RectangleGeometry Rect="0,0,4,4"/>
                        </GeometryGroup>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
                <GeometryDrawing Brush="{StaticResource LightSquare}">
                    <GeometryDrawing.Geometry>
                        <GeometryGroup>
                            <RectangleGeometry Rect="0,0,1,1"/>
                            <RectangleGeometry Rect="2,2,1,1"/>
                        </GeometryGroup>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
                <GeometryDrawing Brush="{StaticResource DarkSquare}">
                    <GeometryDrawing.Geometry>
                        <GeometryGroup>
                            <RectangleGeometry Rect="0,1,1,1"/>
                            <RectangleGeometry Rect="2,3,1,1"/>
                        </GeometryGroup>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <!--END WPF-->

    <!--ONLY SL
    <SolidColorBrush x:Key="PanelBackground" Color="#FF2D3F5D" />
    ONLY SL-->

    <ControlTemplate x:Key="{dxnt:NavigationPanePopupThemeKey ResourceKey=ScrollUpButtonTemplate}" TargetType="dxn:NavBarRepeatButton">
        <dx:LayoutTransformPanel Orientation="{TemplateBinding ItemsPanelOrientation}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                    <VisualState Name="Normal"/>
                    <VisualState Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="ActiveState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                            <ColorAnimation Duration="0"
                                            Storyboard.TargetName="Glyph"
                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                            To="#FFFFFFFF"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="Pressed">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="ActiveState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.5"/>
                            <ColorAnimation Duration="0"
                                            Storyboard.TargetName="Glyph"
                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                            To="#FFFFFFFF"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="Glyph"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.35"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid Background="Transparent">
                <Border x:Name="ActiveState" Opacity="0">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FF4D6082" Offset="0"/>
                            <GradientStop Color="#FF3D5277" Offset="1"/>
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
                <Path x:Name="Glyph"
                      Data="F1M1323,792L1327,788 1331,792 1323,792z"
                      Fill="#FFCAD1DA"
                      Height="4"
                      HorizontalAlignment="Center"
                      Margin="5"
                      RenderTransformOrigin="0.5,0.5"
                      Stretch="Fill"
                      VerticalAlignment="Center"
                      Width="8"/>
            </Grid>
        </dx:LayoutTransformPanel>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxnt:NavigationPanePopupThemeKey ResourceKey=ScrollDownButtonTemplate}" TargetType="dxn:NavBarRepeatButton">
        <dx:LayoutTransformPanel Orientation="{TemplateBinding ItemsPanelOrientation}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                    <VisualState Name="Normal"/>
                    <VisualState Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="ActiveState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                            <ColorAnimation Duration="0"
                                            Storyboard.TargetName="Glyph"
                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                            To="#FFFFFFFF"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="Pressed">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="ActiveState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.5"/>
                            <ColorAnimation Duration="0"
                                            Storyboard.TargetName="Glyph"
                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                            To="#FFFFFFFF"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="Glyph"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.35"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid Background="Transparent">
                <Border x:Name="ActiveState" Opacity="0">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FF4D6082" Offset="0"/>
                            <GradientStop Color="#FF3D5277" Offset="1"/>
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
                <Path x:Name="Glyph"
                      Data="F1M1316,795L1312,799 1308,795 1316,795z"
                      Fill="#FFCAD1DA"
                      Height="4"
                      HorizontalAlignment="Center"
                      Margin="5"
                      Stretch="Fill"
                      VerticalAlignment="Center"
                      Width="8"/>
            </Grid>
        </dx:LayoutTransformPanel>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxnt:NavigationPaneSplitterThemeKey ResourceKey=SplitterTemplate}" TargetType="dxn:NavPaneSplitter">
        <Border Background="#FF2B3B58"
                Height="6"
                Padding="0,0,0,1">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                           Storyboard.TargetName="Border"
                                                           Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFFEFBF2" Offset="0"/>
                                            <GradientStop Color="#FFFFE8A6" Offset="1"/>
                                            <GradientStop Color="#FFFFF5D7" Offset="0.5"/>
                                            <GradientStop Color="#FFFFE8A6" Offset="0.5"/>
                                        </LinearGradientBrush>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="OrientationStates">
                    <VisualState x:Name="Vertical"/>
                    <VisualState x:Name="Horizontal"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="DraggingStates">
                    <VisualState x:Name="NotDragging"/>
                    <VisualState x:Name="Dragging">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                           Storyboard.TargetName="Border"
                                                           Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFFEFBF2" Offset="0"/>
                                            <GradientStop Color="#FFFFE8A6" Offset="1"/>
                                            <GradientStop Color="#FFFFF5D7" Offset="0.5"/>
                                            <GradientStop Color="#FFFFE8A6" Offset="0.5"/>
                                        </LinearGradientBrush>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <dx:LayoutTransformPanel Orientation="{TemplateBinding Orientation}">
                <Border x:Name="Border">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FF576B8D" Offset="0"/>
                            <GradientStop Color="#FF4E6284" Offset="1"/>
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
            </dx:LayoutTransformPanel>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxnt:NavigationPaneHeaderThemeKey ResourceKey=ExpandButtonTemplate}" TargetType="dxn:NavPaneExpandButton">
        <Grid x:Name="Root"
              Background="Transparent"
              Height="18"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              Width="18">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="HoverState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                            <ColorAnimation Duration="0"
                                            Storyboard.TargetName="GlyphOpen"
                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                            To="#FF212E41"/>
                            <ColorAnimation Duration="0"
                                            Storyboard.TargetName="GlyphClose"
                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                            To="#FF212E41"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="PressedState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                            <ColorAnimation Duration="0"
                                            Storyboard.TargetName="GlyphOpen"
                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                            To="#FF212E41"/>
                            <ColorAnimation Duration="0"
                                            Storyboard.TargetName="GlyphClose"
                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                            To="#FF212E41"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ExpandModeStates">
                    <VisualState x:Name="NormalMode"/>
                    <VisualState x:Name="Invert">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="RenderTransform">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <ScaleTransform ScaleX="-1"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ExpandStates">
                    <VisualState x:Name="Expanded"/>
                    <VisualState x:Name="Collapsed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxcn:ValueSetter.Visibility="Collapsed"
                                                           Storyboard.TargetName="GlyphClose"
                                                           Storyboard.TargetProperty="(Control.Visibility)"/>
                            <ObjectAnimationUsingKeyFrames dxcn:ValueSetter.Visibility="Visible"
                                                           Storyboard.TargetName="GlyphOpen"
                                                           Storyboard.TargetProperty="(Control.Visibility)"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="HoverState"
                    CornerRadius="2"
                    Opacity="0">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFFFFBF0" Offset="0"/>
                        <GradientStop Color="#FFFFE8A6" Offset="1"/>
                        <GradientStop Color="#FFFFF4D2" Offset="0.5"/>
                        <GradientStop Color="#FFFFE8A6" Offset="0.5"/>
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <Border x:Name="PressedState"
                    Background="#FFFFF9E9"
                    CornerRadius="2"
                    Opacity="0"
                    Padding="1">
                <Border Background="#FFFFE8A6" CornerRadius="1"/>
            </Border>
            <Grid SnapsToDevicePixels="True">
                <Path x:Name="GlyphClose"
                      Data="F1 M 513,533L 518,528L 518,530L 515,533L 518,536L 518,538L 513,533 Z M 517,533L 522,528L 522,530L 519,533L 522,536L 522,538L 517,533 Z "
                      Fill="#FFCED4DD"
                      Height="10"
                      Stretch="Fill"
                      Width="10"/>
                <Path x:Name="GlyphOpen"
                      Data="F1 M 543,533L 538,528L 538,530L 541,533L 538,536L 538,538L 543,533 Z M 539,533L 534,528L 534,530L 537,533L 534,536L 534,538L 539,533 Z "
                      Fill="#FFCED4DD"
                      Height="10"
                      Stretch="Fill"
                      Visibility="Collapsed"
                      Width="10"/>
            </Grid>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxnt:NavigationPanePopupThemeKey ResourceKey=SizeGripTemplate}" TargetType="dxn:NavPanePopupSizeGrip">
        <Grid Background="Transparent"
              Cursor="SizeNWSE"
              Height="10"
              HorizontalAlignment="Right"
              Margin="1"
              VerticalAlignment="Bottom"
              Width="10">
            <Path Data="F1 M 0,7.99999L 2,7.99999L 2,9.99999L 0,9.99999L 0,7.99999 Z M 3.99997,8L 5.99997,8L 5.99997,10L 3.99997,10L 3.99997,8 Z M 7.99998,8L 9.99998,8L 9.99998,10L 7.99998,10L 7.99998,8 Z M 7.99998,4L 9.99998,4L 9.99998,6L 7.99998,6L 7.99998,4 Z M 7.99999,0L 9.99999,0L 9.99999,2L 7.99999,2L 7.99999,0 Z M 4,4L 6,4L 6,6L 4,6L 4,4 Z "
                  Fill="#FF7F90AE"
                  Stretch="Fill"/>
        </Grid>
    </ControlTemplate>

    <Style x:Key="{dxnt:NavigationPanePopupThemeKey ResourceKey=SizeGripStyle}" TargetType="dxn:NavPanePopupSizeGrip">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Width" Value="Auto"/>
    </Style>

    <ControlTemplate x:Key="{dxnt:NavigationPanePopupThemeKey ResourceKey=PopupSideThumbTemplate}" TargetType="dxn:NavPanePopupSizeGrip">
        <Border Background="Transparent"/>
    </ControlTemplate>

    <Style x:Key="{dxnt:NavigationPanePopupThemeKey ResourceKey=PopupSideThumbStyle}" TargetType="dxn:NavPanePopupSizeGrip">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Width" Value="3"/>
    </Style>

    <ControlTemplate x:Key="{dxnt:NavigationPaneOverflowPanelThemeKey ResourceKey=DropDownButtonTemplate}" TargetType="{x:Type dxn:NavPaneDropDownMenuControl}">
        <Grid Background="Transparent"
              Height="28"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              Width="28">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                    <VisualState Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="HoverState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                            <ColorAnimation Duration="0"
                                            Storyboard.TargetName="Glyph"
                                            Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                            To="#FF212E41"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="Pressed">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="PressedState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                            <ColorAnimation Duration="0"
                                            Storyboard.TargetName="Glyph"
                                            Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                            To="#FF212E41"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="Normal"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="HoverState"
                    CornerRadius="2"
                    Opacity="0">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFFFFBF0" Offset="0"/>
                        <GradientStop Color="#FFFFE8A6" Offset="1"/>
                        <GradientStop Color="#FFFFF4D2" Offset="0.5"/>
                        <GradientStop Color="#FFFFE8A6" Offset="0.5"/>
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <Border x:Name="PressedState"
                    Background="#FFFFF9E9"
                    CornerRadius="2"
                    Opacity="0"
                    Padding="1">
                <Border Background="#FFFFE8A6" CornerRadius="1"/>
            </Border>
            <Path x:Name="Glyph"
                  Data="F1 M 211,186L 205,186L 208,189L 211,186 Z"
                  Fill="#FFCED4DD"
                  Height="3"
                  SnapsToDevicePixels="True"
                  Stretch="Fill"
                  Width="6"/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxnt:NavigationPanePopupThemeKey ResourceKey=PopupWindowFrameTemplate}" TargetType="dxn:NavPanePopupWindowFrame">
        <Border x:Name="PopupBorder"
                Background="#FF2B3B58"
                BorderBrush="#FFBCC7D8"
                BorderThickness="1"
                Margin="-1">
            <Border Background="{StaticResource PanelBackground}" Margin="1">
                <ContentPresenter/>
            </Border>
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static interop:BrowserInteropHelper.IsBrowserHosted}}" Value="True"/>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxnt:NavigationPanePopupThemeKey ResourceKey=PopupWindowContentTemplate}" TargetType="{x:Type dxn:NavPanePopupWindowContent}">
        <dxn:NavPanePopupWindowFrame>
            <Grid>
                <dxn:ScrollControl x:Name="scrollControl"
                                   dx:FocusHelper2.Focusable="False"
                                   ScrollBarControlTemplate="{DynamicResource {dxnt:CommonElementsThemeKey ResourceKey=NormalScrollTemplate}}"
                                   ScrollButtonsControlTemplate="{DynamicResource {dxnt:NavigationPanePopupThemeKey ResourceKey=SmoothScrollTemplate}}">
                    <!--ONLY SL<dx:BackgroundPanel.PatchForeground>True</dx:BackgroundPanel.PatchForeground>ONLY SL-->
                    <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                </dxn:ScrollControl>
                <dxn:NavPanePopupSizeGrip Style="{DynamicResource {dxnt:NavigationPanePopupThemeKey ResourceKey=SizeGripStyle}}" Template="{DynamicResource {dxnt:NavigationPanePopupThemeKey ResourceKey=SizeGripTemplate}}"/>
            </Grid>
        </dxn:NavPanePopupWindowFrame>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxnt:NavigationPaneGroupClientThemeKey ResourceKey=CollapsedActiveGroupTemplate}" TargetType="ToggleButton">
        <Border x:Name="Root"
                Background="{StaticResource PanelBackground}"
                TextOptions.TextRenderingMode="Aliased">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                    <VisualState Name="Normal"/>
                    <VisualState Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="ActiveState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.5"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="Pressed">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="ActiveState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="ForegroundStates">
                    <VisualState Name="NormalForeground"/>
                    <VisualState Name="CustomForeground">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                           Storyboard.TargetName="content"
                                                           Storyboard.TargetProperty="Foreground">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource {dxnt:NavigationPaneGroupClientThemeKey ResourceKey=CollapsedGroupForegroundBrush}}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="OrientationStates">
                    <VisualState Name="Vertical"/>
                    <VisualState Name="Horizontal">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxcn:ValueSetter.Thickness="0,1,0,1"
                                                           Storyboard.TargetName="Root"
                                                           Storyboard.TargetProperty="Padding"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid Margin="1">
                <Border x:Name="ActiveState" Opacity="0">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                            <GradientStop Color="#FF4D6082" Offset="0"/>
                            <GradientStop Color="#FF3D5277" Offset="1"/>
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
                <dxn:ImageAndTextContentPresenter x:Name="content"
                                                  Content="{Binding Converter={dxn:FrameworkElementInfoSLCompatibilityConverter}}"
                                                  Foreground="{TemplateBinding Foreground}"
                                                  HorizontalAlignment="Center"
                                                  ImageFallbackSize="24"
                                                  Orientation="{Binding NavBar.View.Orientation}"
                                                  Style="{DynamicResource {dxnt:NavBarGroupControlThemeKey ResourceKey=HeaderStyle}}"
                                                  VerticalAlignment="Center">
                    <!--ONLY SL
                    <dxn:ImageAndTextContentPresenter.ContentTemplateSelector>
                        <Binding Path="ActualHeaderTemplateSelector"/>
                    </dxn:ImageAndTextContentPresenter.ContentTemplateSelector>ONLY SL-->
                </dxn:ImageAndTextContentPresenter>
            </Grid>
        </Border>
    </ControlTemplate>

    <!--BEGIN WPF-->

    <Style x:Key="{dxnt:NavigationPaneThemeKey ResourceKey=ItemBackgroundStyle}" TargetType="dxn:CollapsedActiveGroupItemContentPresenter">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxn:CollapsedActiveGroupItemContentPresenter">
                    <Grid>
                        <Border x:Name="Hover"
                                CornerRadius="2"
                                Opacity="0">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFFFFBF0" Offset="0"/>
                                    <GradientStop Color="#FFFFE8A6" Offset="1"/>
                                    <GradientStop Color="#FFFFF4D2" Offset="0.5"/>
                                    <GradientStop Color="#FFFFE8A6" Offset="0.5"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border x:Name="Pressed"
                                Background="#FFFFF9E9"
                                CornerRadius="2"
                                Opacity="0"
                                Padding="1">
                            <Border Background="#FFFFE8A6" CornerRadius="2"/>
                        </Border>
                        <Border x:Name="SelectedState"
                                Background="#FFFFF9E9"
                                CornerRadius="2"
                                Opacity="0"
                                Padding="1">
                            <Border Background="#FFFFE8A6" CornerRadius="1"/>
                        </Border>
                        <ContentPresenter/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity"
                                    TargetName="Hover"
                                    Value="1"/>
                            <Setter Property="TextElement.Foreground" Value="#FF1B293E"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Opacity"
                                    TargetName="Pressed"
                                    Value="1"/>
                            <Setter Property="TextElement.Foreground" Value="#FF1B293E"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Opacity"
                                    TargetName="SelectedState"
                                    Value="1"/>
                            <Setter Property="TextElement.Foreground" Value="#FF1B293E"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="TextElement.Foreground" Value="#FFFFFFFF"/>
    </Style>

    <ControlTemplate x:Key="{dxnt:NavigationPaneThemeKey ResourceKey=CollapsedActiveGroupBackgroundTemplate}">
        <Border x:Name="border" Background="{StaticResource PanelBackground}"/>
    </ControlTemplate>

    <!--END WPF-->

    <DataTemplate x:Key="{dxnt:NavigationPaneButtonPanelThemeKey ResourceKey=GroupContentTemplate}">
        <Grid>
            <Border Background="Transparent"
                    Height="30"
                    IsHitTestVisible="False"
                    Width="0"/>
            <dx:MeasurePixelSnapperContentControl Content="Wg"
                                                  dx:FocusHelper2.Focusable="False"
                                                  Margin="0,7,0,7"
                                                  SnapperType="Around"
                                                  Style="{DynamicResource {dxnt:NavBarGroupControlThemeKey ResourceKey=GroupTextStyle}}"
                                                  Width="0"/>
            <dxn:NavPaneImageAndTextDecorator x:Name="groupButtonContent"
                                              ContentSource="{Binding Path=Header}"
                                              ContentStyle="{DynamicResource {dxnt:NavBarGroupControlThemeKey ResourceKey=GroupTextStyle}}"
                                              DockingBottomContentMargin="4,7,4,7"
                                              DockingBottomImageMargin="4,3,4,3"
                                              DockingLeftContentMargin="4,7,4,7"
                                              DockingLeftImageMargin="4,3,0,3"
                                              DockingRightContentMargin="4,7,4,7"
                                              DockingRightImageMargin="4,3,4,3"
                                              DockingTopContentMargin="4,7,4,7"
                                              DockingTopImageMargin="4,3,4,3"
                                              GroupButtonCollapsedImageMargin="4,3,4,3"
                                              ImageDocking="{Binding Path=(dxn:NavBarViewBase.LayoutSettings).ImageDocking, RelativeSource={RelativeSource TemplatedParent}}"
                                              ImageFallbackSize="24"
                                              ImageSource="{Binding Path=ImageSource}"
                                              ImageStyle="{DynamicResource {dxnt:NavBarGroupControlThemeKey ResourceKey=GroupImageStyle}}"/>
        </Grid>
    </DataTemplate>

    <ControlTemplate x:Key="{dxnt:NavigationPaneButtonPanelThemeKey ResourceKey=GroupTemplate}" TargetType="dxn:NavPaneGroupButton">
        <Grid x:Name="Root" Margin="1,0,1,1">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                    <VisualState Name="Normal"/>
                    <VisualState Name="IsMouseOver">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="ActiveState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.5"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="IsPressed">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="ActiveState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="IsActiveStates">
                    <VisualState Name="IsActiveTrue">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="ActiveState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="IsActiveFalse"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ExpandStates">
                    <VisualState x:Name="Expanded"/>
                    <VisualState x:Name="Collapsed"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="OrientationStates">
                    <VisualState x:Name="Vertical"/>
                    <VisualState x:Name="Horizontal"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Background="{StaticResource PanelBackground}"/>
            <Border x:Name="ActiveState" Opacity="0.25">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF4D6082" Offset="0"/>
                        <GradientStop Color="#FF3D5277" Offset="1"/>
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <dxn:ImageAndTextContentPresenter x:Name="Content"
                                              Foreground="{DynamicResource {dxnt:NavigationPaneButtonPanelThemeKey ResourceKey=GroupForegroundBrush}}"
                                              ImageFallbackSize="24"
                                              Style="{DynamicResource {dxnt:NavigationPaneHeaderThemeKey ResourceKey=GroupButtonHeaderStyle}}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=NavBar.View.IsExpanded}" Value="False">
                <Setter Property="ToolTip" Value="{Binding Path=Header}"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxnt:NavigationPaneOverflowPanelThemeKey ResourceKey=DefaultIconTemplate}" TargetType="dxn:NavPaneDefaultIcon">
        <Grid Height="20" Width="20">
            <Path Data="F1M1.99994,5.00018L12.9999,5.00018C14.1045,5.00018,14.9999,5.89563,14.9999,7.00018L14.9999,18.0001C14.9999,19.1047,14.1045,20.0002,12.9999,20.0002L1.99994,20.0002C0.895386,20.0002,0,19.1047,0,18.0001L0,7.00018C0,5.89563,0.895386,5.00018,1.99994,5.00018z"
                  Fill="#FF6C93CD"
                  Margin="0,5,5,0"
                  Stretch="Fill"
                  UseLayoutRounding="False"/>
            <Path Data="F1M9.00012,0L18.0001,0C19.1047,0,20.0001,0.895477,20.0001,2L20.0001,11C20.0001,12.1046,19.1047,13,18.0001,13L16.0001,13.0001 16.0001,7.00009C16.0001,5.34323,14.6569,4.00009,13.0001,4.00009L7.00006,4.00009 7.00012,2C7.00012,0.895477,7.89557,0,9.00012,0z"
                  Fill="#FF6C93CD"
                  Margin="7,0,0,7"
                  Stretch="Fill"
                  UseLayoutRounding="False"/>
        </Grid>
    </ControlTemplate>

    <dxn:SourceToVisibilityConverter x:Key="SourceToVisibilityConverter"/>

    <DataTemplate x:Key="{dxnt:NavigationPaneOverflowPanelThemeKey ResourceKey=OverflowGroupContentTemplate}">
        <Grid x:Name="overflowGroupContent">
            <!--BEGIN WPF-->
            <Grid.ToolTip>
                <Binding Path="Header"/>
            </Grid.ToolTip>
            <Image x:Name="PART_Image"
                   Margin="2"
                   Source="{Binding Path=ImageSource}"
                   Style="{DynamicResource {dxnt:NavBarGroupControlThemeKey ResourceKey=OverflowGroupItemStyle}}"
                   Visibility="{Binding Path=Source, RelativeSource={RelativeSource Mode=Self}, ConverterParameter=Collapsed, Converter={StaticResource SourceToVisibilityConverter}}"/>
            <!--END WPF-->
            <!--ONLY SL<Image Margin="2" x:Name="PART_Image" Source="{Binding Path=ImageSource}"
                    Visibility="{Binding Path=Source, RelativeSource={RelativeSource Mode=Self}, ConverterParameter=Collapsed, Converter={StaticResource SourceToVisibilityConverter}}"
                    Style="{DynamicResource {dxnt:NavBarGroupControlThemeKey ResourceKey=OverflowGroupItemStyle}}"/>
            ONLY SL-->
            <dxn:NavPaneDefaultIcon x:Name="defaultIcon"
                                    Height="{Binding Path=Height, ElementName=PART_Image}"
                                    Margin="2"
                                    Visibility="{Binding Path=Source, ElementName=PART_Image, ConverterParameter=Visible, Converter={StaticResource SourceToVisibilityConverter}}"
                                    Width="{Binding Path=Width, ElementName=PART_Image}"/>
        </Grid>
    </DataTemplate>

    <ControlTemplate x:Key="{dxnt:NavigationPaneOverflowPanelThemeKey ResourceKey=OverflowGroupTemplate}" TargetType="Button">
        <Grid Background="Transparent"
              HorizontalAlignment="Center"
              Margin="2"
              VerticalAlignment="Center">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                    <VisualState Name="Normal"/>
                    <VisualState Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="HoverState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="IsPressed">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="PressedState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="HoverState"
                    CornerRadius="2"
                    Opacity="0">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFFFFBF0" Offset="0"/>
                        <GradientStop Color="#FFFFE8A6" Offset="1"/>
                        <GradientStop Color="#FFFFF4D2" Offset="0.5"/>
                        <GradientStop Color="#FFFFE8A6" Offset="0.5"/>
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <Border x:Name="PressedState"
                    Background="#FFFFF9E9"
                    CornerRadius="2"
                    Opacity="{Binding Path=IsActive, Converter={StaticResource BooleanToOpacityConverter}}"
                    Padding="1">
                <Border Background="#FFFFE8A6" CornerRadius="2"/>
            </Border>
            <dxn:ImageAndTextContentPresenter Foreground="{TemplateBinding Foreground}"
                                              ImageFallbackSize="24"
                                              Style="{DynamicResource {dxnt:NavigationPaneHeaderThemeKey ResourceKey=OverflowButtonHeaderStyle}}"/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxnt:NavigationPaneButtonPanelThemeKey ResourceKey=ButtonPanelTemplate}" TargetType="ContentControl">
        <Border Background="#FF2B3B58">
            <dxn:NavPaneGroupButtonPanelContentPresenter WithoutSplitterThickness="0,1,0,0"/>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxnt:NavigationPaneOverflowPanelThemeKey ResourceKey=OverflowPanelTemplate}" TargetType="dxn:NavPaneOverflowPanel">
        <dx:LayoutTransformPanel Orientation="{Binding View.Orientation}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="SplitterBehaviorStates">
                    <VisualState x:Name="WithSplitter"/>
                    <VisualState x:Name="WithoutSplitter">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxcn:ValueSetter.Thickness="1"
                                                           Storyboard.TargetName="overflowPanelBorder"
                                                           Storyboard.TargetProperty="Padding"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="overflowPanelBorder"
                    Background="#FF2B3B58"
                    Padding="1">
                <ContentPresenter Content="{TemplateBinding Content}"
                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                  MinHeight="32"/>
            </Border>
        </dx:LayoutTransformPanel>
    </ControlTemplate>

    <!--BEGIN WPF-->

    <ControlTemplate x:Key="{dxnt:NavigationPaneOverflowPanelThemeKey ResourceKey=ContextMenuTemplate}" TargetType="ContextMenu">
        <Grid x:Name="Root" Margin="0,0,3,3">
            <Border x:Name="Shadow"
                    Background="#FF000000"
                    Margin="2,2,0,0"
                    Opacity="0.10"/>
            <Border x:Name="PopupBorder"
                    Background="#FF7C7C94"
                    Margin="0,0,3,3"
                    Padding="1">
                <Border x:Name="Background" Background="#FFFFFFFF">
                    <ItemsPresenter Margin="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <KeyboardNavigation.DirectionalNavigation>Cycle</KeyboardNavigation.DirectionalNavigation>
                    </ItemsPresenter>
                </Border>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static interop:BrowserInteropHelper.IsBrowserHosted}}" Value="True">
                <Setter Property="Margin"
                        TargetName="Root"
                        Value="0"/>
                <Setter Property="Visibility"
                        TargetName="Shadow"
                        Value="Collapsed"/>
                <Setter Property="Margin"
                        TargetName="PopupBorder"
                        Value="0"/>
                <Setter Property="CornerRadius"
                        TargetName="PopupBorder"
                        Value="0"/>
                <Setter Property="CornerRadius"
                        TargetName="Background"
                        Value="0"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxnt:NavigationPaneOverflowPanelThemeKey ResourceKey=MenuItemTemplate}" TargetType="MenuItem">
        <Border>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                    <VisualState Name="Normal"/>
                    <VisualState Name="Disabled">
                        <Storyboard>
                            <ColorAnimation Duration="0"
                                            Storyboard.TargetName="Text"
                                            Storyboard.TargetProperty="(TextElement.Foreground)"
                                            To="#FF9A9A9A"/>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="Arrow"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.35"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
                <Border x:Name="Border"
                        CornerRadius="2"
                        Opacity="0"
                        Padding="1">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFDBCE99" Offset="0"/>
                            <GradientStop Color="#FFBBA67F" Offset="1"/>
                            <GradientStop Color="#FFB9A074" Offset="0.5"/>
                        </LinearGradientBrush>
                    </Border.Background>
                    <Border CornerRadius="1" Padding="1">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFFFFFFD" Offset="0"/>
                                <GradientStop Color="#FFFFF9E0" Offset="1"/>
                                <GradientStop Color="#FFFFF1BA" Offset="0.5"/>
                            </LinearGradientBrush>
                        </Border.Background>
                        <Border CornerRadius="1">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFFFFDF2" Offset="0"/>
                                    <GradientStop Color="#FFFFEEAE" Offset="1"/>
                                    <GradientStop Color="#FFFFEA9A" Offset="0.5"/>
                                    <GradientStop Color="#FFFFDC58" Offset="0.5"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                    </Border>
                </Border>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0">
                        <Path x:Name="Glyph"
                              Data="M0,2L0,4.8 2.5,7.4 7.1,2.8 7.1,0 2.5,4.6z"
                              Fill="#FF313131"
                              HorizontalAlignment="Center"
                              Margin="12,2,0,0"
                              VerticalAlignment="Center"
                              Visibility="Collapsed"/>
                        <ContentPresenter x:Name="ContentIcon"
                                          Content="{TemplateBinding Icon}"
                                          ContentSource="Icon"
                                          Margin="12,3,0,3"
                                          Visibility="Visible"/>
                    </Grid>
                    <dx:MeasurePixelSnapper Grid.Column="1" Margin="12,3,12,3">
                        <ContentPresenter x:Name="Text"
                                          Content="{TemplateBinding Header}"
                                          ContentSource="Header"
                                          ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                          RecognizesAccessKey="True"
                                          TextElement.Foreground="#FF1B293E"/>
                    </dx:MeasurePixelSnapper>
                    <Path x:Name="Arrow"
                          Data="F1 M 1341,794L 1345,798L 1341,802L 1341,794 Z"
                          Fill="#FF000000"
                          Grid.Column="3"
                          Height="8"
                          HorizontalAlignment="Center"
                          Margin="10,0,5,0"
                          Stretch="Fill"
                          VerticalAlignment="Center"
                          Visibility="Collapsed"
                          Width="4"/>
                    <Popup x:Name="Popup"
                           AllowsTransparency="True"
                           Focusable="False"
                           IsOpen="{TemplateBinding IsSubmenuOpen}"
                           Placement="Right"
                           PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                        <Grid>
                            <Border x:Name="Shadow"
                                    Background="#FF000000"
                                    Margin="3,3,0,0"
                                    Opacity="0.10"/>
                            <Border x:Name="PopupBorder"
                                    Background="#FF585858"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Margin="0,0,3,3"
                                    Padding="1">
                                <Border x:Name="Background" Background="#FFFFFFFF">
                                    <ContentPresenter Margin="1"/>
                                </Border>
                            </Border>
                        </Grid>
                    </Popup>
                </Grid>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static interop:BrowserInteropHelper.IsBrowserHosted}}" Value="True">
                <Setter Property="Visibility"
                        TargetName="Shadow"
                        Value="Collapsed"/>
                <Setter Property="Margin"
                        TargetName="PopupBorder"
                        Value="0"/>
                <Setter Property="CornerRadius"
                        TargetName="PopupBorder"
                        Value="0"/>
                <Setter Property="CornerRadius"
                        TargetName="Background"
                        Value="0"/>
            </DataTrigger>
            <Trigger Property="Role" Value="SubMenuHeader">
                <Setter Property="Visibility"
                        TargetName="Arrow"
                        Value="Visible"/>
            </Trigger>
            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter Property="PopupAnimation"
                        TargetName="Popup"
                        Value="None"/>
            </Trigger>
            <Trigger Property="IsCheckable" Value="True">
                <Setter Property="Visibility"
                        TargetName="Glyph"
                        Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Visibility"
                        TargetName="Glyph"
                        Value="Visible"/>
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility"
                        TargetName="ContentIcon"
                        Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Opacity"
                        TargetName="Border"
                        Value="1"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--END WPF-->

</ResourceDictionary>