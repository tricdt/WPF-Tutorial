<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2016Black.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/StandardControls/Brushes.xaml" />
    <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2016Black.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/StandardControls/SharedResources.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Width" Value="18" />
    <Setter Property="Height" Value="18" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid Background="#00000000" SnapsToDevicePixels="True">
            <Path x:Name="GlyphCollapsed" Data="F1 M 1.27157e-006,1.90735e-006L 1.27157e-006,8L 4,4L 1.27157e-006,1.90735e-006" Fill="#BA000000" Height="8" SnapsToDevicePixels="True" Stretch="Fill" Width="4" />
            <Path x:Name="GlyphExpanded" Data="F1 M 0,6L 6,0L 6,6L 0,6 Z " Fill="#BA000000" Height="6" Opacity="0" SnapsToDevicePixels="True" Stretch="Fill" Width="6" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Fill" TargetName="GlyphExpanded" Value="#BA000000" />
              <Setter Property="Fill" TargetName="GlyphCollapsed" Value="#BA000000" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Fill" TargetName="GlyphExpanded" Value="#BA000000" />
              <Setter Property="Fill" TargetName="GlyphCollapsed" Value="#BA000000" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
              <Setter Property="Opacity" TargetName="GlyphExpanded" Value="1" />
              <Setter Property="Opacity" TargetName="GlyphCollapsed" Value="0" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="40" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="TreeViewItemFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=System.Windows.Controls.TreeViewItem}" TargetType="{x:Type TreeViewItem}">
    <Setter Property="dx:SvgImageHelper.State" Value="Normal" />
    <Setter Property="Background" Value="#00000000" />
    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="Padding" Value="3,2,3,2" />
    <Setter Property="Foreground" Value="{StaticResource Text.Foreground}" />
    <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TreeViewItem}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition x:Name="ColumnDefinition1" MinWidth="19" Width="Auto" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition />
            </Grid.RowDefinitions>
            <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}" />
            <Grid Grid.Column="1" Grid.ColumnSpan="2">
              <Border x:Name="TreeListItemSelection" Background="{StaticResource ListBoxItem.Selection.Border}" Opacity="0" />
              <Border x:Name="TreeListItemHoverSelection" Background="{StaticResource ListBoxItem.HoverSelection.Border}" Opacity="0" />
              <Border x:Name="TreeListItemInactiveSelection" Background="{StaticResource ListBoxItem.InactiveSelection.Border}" Opacity="0" />
              <Border x:Name="TreeListItemFocusState" Opacity="0" Style="{StaticResource FocusTemplate}" />
            </Grid>
            <Border x:Name="contentBorder" Background="{TemplateBinding Background}" Grid.Column="1" Grid.ColumnSpan="2" SnapsToDevicePixels="true">
              <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Border>
            <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="False">
              <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed" />
            </Trigger>
            <Trigger Property="HasItems" Value="False">
              <Setter Property="Visibility" TargetName="Expander" Value="Hidden" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
              <Setter Property="Opacity" TargetName="TreeListItemSelection" Value="1" />
              <Setter Property="Opacity" TargetName="TreeListItemHoverSelection" Value="0" />
              <Setter Property="Foreground" Value="#E3000000" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="True" />
                <Condition Property="IsSelectionActive" Value="False" />
              </MultiTrigger.Conditions>
              <Setter Property="Opacity" TargetName="TreeListItemInactiveSelection" Value="1" />
              <Setter Property="Opacity" TargetName="TreeListItemSelection" Value="0" />
              <Setter Property="Opacity" TargetName="TreeListItemHoverSelection" Value="0" />
              <Setter Property="Foreground" Value="#E3000000" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver" SourceName="contentBorder" Value="True" />
                <Condition Property="IsSelected" Value="False" />
              </MultiTrigger.Conditions>
              <Setter Property="Opacity" TargetName="TreeListItemSelection" Value="0" />
              <Setter Property="Opacity" TargetName="TreeListItemHoverSelection" Value="1" />
              <Setter Property="Foreground" Value="#E3000000" />
              <Setter Property="dx:SvgImageHelper.State" Value="Hover" />
            </MultiTrigger>
            <Trigger Property="IsFocused" Value="True">
              <Setter Property="Opacity" TargetName="TreeListItemSelection" Value="1" />
              <Setter Property="Opacity" TargetName="TreeListItemHoverSelection" Value="0" />
              <Setter Property="Foreground" Value="#E3000000" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" TargetName="PART_Header" Value="0.35" />
              <Setter Property="Opacity" TargetName="ItemsHost" Value="0.35" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
              <Setter Property="MinWidth" TargetName="ColumnDefinition1" Value="40" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Padding" Value="12" />
      </Trigger>
      <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
        <Setter Property="ItemsPanel">
          <Setter.Value>
            <ItemsPanelTemplate>
              <VirtualizingStackPanel />
            </ItemsPanelTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>