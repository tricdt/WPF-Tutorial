<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2016Black.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/StandardControls/Brushes.xaml" />
    <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2016Black.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/StandardControls/SharedResources.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=System.Windows.Controls.CheckBox}" TargetType="{x:Type CheckBox}">
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Background" Value="{StaticResource CheckBox.DefaultState.Border2}" />
    <Setter Property="BorderBrush" Value="{StaticResource CheckBox.DefaultState.Border1}" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Padding" Value="0,3,0,3" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CheckBox}">
          <Grid x:Name="Root" Background="#00000000" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Pressed" />
                <VisualState x:Name="Disabled" />
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unchecked" />
                <VisualState x:Name="Indeterminate">
                  <Storyboard>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="IndeterminateState" Storyboard.TargetProperty="(UIElement.Opacity)">
                      <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid Margin="{TemplateBinding Padding}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <Grid x:Name="States" Grid.Column="0" Grid.ColumnSpan="1" Height="14" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,1,0,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="14">
                <Border x:Name="DefaultState" Background="{StaticResource CheckBox.DefaultState.Border2}" BorderBrush="{StaticResource CheckBox.DefaultState.Border1}" BorderThickness="1" />
                <Border x:Name="HoverState" Background="{StaticResource CheckBox.HoverState.Border2}" BorderBrush="{StaticResource CheckBox.HoverState.Border1}" BorderThickness="1" Opacity="0" />
                <Border x:Name="FocusState" Opacity="0" Style="{StaticResource FocusTemplate}" />
                <Border x:Name="PressedState" Background="{StaticResource CheckBox.PressedState.Border2}" BorderBrush="{StaticResource CheckBox.PressedState.Border1}" BorderThickness="1" Opacity="0" />
                <Border x:Name="IndeterminateState" Background="{StaticResource CheckBox.IndeterminateState.Border}" Height="8" HorizontalAlignment="Center" Opacity="0" VerticalAlignment="Center" Width="8" />
                <Path x:Name="CheckIcon" Fill="#BA000000" Opacity="0" Style="{StaticResource CheckBoxIconTemplate}" />
              </Grid>
              <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Grid.ColumnSpan="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="4,0,0,0" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Opacity" TargetName="DefaultState" Value="0" />
              <Setter Property="Opacity" TargetName="HoverState" Value="1" />
              <Setter Property="Opacity" TargetName="PressedState" Value="0" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Opacity" TargetName="DefaultState" Value="0" />
              <Setter Property="Opacity" TargetName="HoverState" Value="0" />
              <Setter Property="Opacity" TargetName="PressedState" Value="1" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
              <Setter Property="Opacity" TargetName="FocusState" Value="1" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" TargetName="Root" Value="0.5" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
              <Setter Property="Width" TargetName="States" Value="28" />
              <Setter Property="Height" TargetName="States" Value="28" />
              <Setter Property="Width" TargetName="IndeterminateState" Value="16" />
              <Setter Property="Height" TargetName="IndeterminateState" Value="16" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Padding" Value="8,0,0,0" />
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>