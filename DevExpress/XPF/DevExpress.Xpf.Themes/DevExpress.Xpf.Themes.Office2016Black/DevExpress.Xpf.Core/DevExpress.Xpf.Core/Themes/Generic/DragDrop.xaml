<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.DropMarker}" TargetType="dx:DropMarker">
    <Style.Setters>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="dx:DropMarker">
            <Grid Margin="{TemplateBinding Padding}">
              <Border x:Name="background" Background="#FF2DB2FF" Opacity="0.2" Visibility="Collapsed" />
              <Grid Margin="0,-2,0,-2">
                <Border x:Name="marker" BorderThickness="1" Height="4" Background="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DropMarkerBackground}}" BorderBrush="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DropMarkerBorderBrush}}" />
              </Grid>
            </Grid>
            <ControlTemplate.Triggers>
              <Trigger Property="Position" Value="Before">
                <Trigger.Setters>
                  <Setter TargetName="marker" Property="VerticalAlignment" Value="Top" />
                </Trigger.Setters>
              </Trigger>
              <Trigger Property="Position" Value="After">
                <Trigger.Setters>
                  <Setter TargetName="marker" Property="VerticalAlignment" Value="Bottom" />
                </Trigger.Setters>
              </Trigger>
              <Trigger Property="Position" Value="Inside">
                <Trigger.Setters>
                  <Setter TargetName="marker" Property="Visibility" Value="Collapsed" />
                  <Setter TargetName="background" Property="Visibility" Value="Visible" />
                </Trigger.Setters>
              </Trigger>
              <Trigger Property="Position" Value="Append">
                <Trigger.Setters>
                  <Setter TargetName="marker" Property="Visibility" Value="Collapsed" />
                  <Setter TargetName="background" Property="Background" Value="#FF89C841" />
                  <Setter TargetName="background" Property="Visibility" Value="Visible" />
                </Trigger.Setters>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Setter Property="IsHitTestVisible" Value="False" />
    </Style.Setters>
    <Style.Triggers>
      <Trigger Property="Orientation" Value="Vertical">
        <Trigger.Setters>
          <Setter Property="LayoutTransform">
            <Setter.Value>
              <RotateTransform Angle="-90" />
            </Setter.Value>
          </Setter>
        </Trigger.Setters>
      </Trigger>
    </Style.Triggers>
  </Style>
  <DataTemplate x:Key="{dxt:DragDropThemeKey ResourceKey=DropMarker}">
    <dx:DropMarker Position="{Binding Position}" Orientation="{Binding Orientation}" Padding="{Binding Padding}" />
  </DataTemplate>
  <DataTemplate x:Key="{dxt:DragDropThemeKey ResourceKey=DragDropHintDetail}">
    <TextBlock Text="{Binding}" TextTrimming="WordEllipsis" />
  </DataTemplate>
  <DataTemplate x:Key="{dxt:DragDropThemeKey ResourceKey=DragHintTargetInfo}">
    <ContentPresenter Content="{Binding}">
      <ContentPresenter.Style>
        <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=ContentPresenter}" TargetType="ContentPresenter">
          <Style.Setters>
            <Setter Property="ContentTemplate">
              <Setter.Value>
                <DataTemplate>
                  <StackPanel>
                    <TextBlock Text="{Binding Path=DropPosition, Converter={dx:DropPositionConverter}}" FontWeight="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragHintCaptionFontWeight}}" FontSize="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragHintCaptionFontSize}}" Foreground="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragHintCaptionForeground}}" />
                    <ContentPresenter Content="{Binding TargetRecord}" Margin="0,3,0,0" ContentTemplate="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragDropHintDetail}}">
                      <ContentPresenter.Style>
                        <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=ContentPresenter}" TargetType="ContentPresenter">
                          <Style.Setters>
                            <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragHintDescriptionForeground}}" />
                          </Style.Setters>
                          <Style.Triggers>
                            <Trigger Property="Content" Value="{x:Null}">
                              <Trigger.Setters>
                                <Setter Property="Visibility" Value="Collapsed" />
                              </Trigger.Setters>
                            </Trigger>
                          </Style.Triggers>
                        </Style>
                      </ContentPresenter.Style>
                    </ContentPresenter>
                  </StackPanel>
                </DataTemplate>
              </Setter.Value>
            </Setter>
          </Style.Setters>
          <Style.Triggers>
            <DataTrigger Binding="{Binding Effects}" Value="None">
              <Setter Property="ContentTemplate">
                <Setter.Value>
                  <DataTemplate>
                    <TextBlock FontWeight="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragHintCaptionFontWeight}}" FontSize="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragHintCaptionFontSize}}" Foreground="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragHintCaptionForeground}}">
                      <TextBlock.Text>
                        <Binding ConverterParameter="DragDropCannotDrop" RelativeSource="{RelativeSource Self}">
                          <Binding.Converter>
                            <dx:EditorStringIdConverter />
                          </Binding.Converter>
                        </Binding>
                      </TextBlock.Text>
                    </TextBlock>
                  </DataTemplate>
                </Setter.Value>
              </Setter>
            </DataTrigger>
          </Style.Triggers>
        </Style>
      </ContentPresenter.Style>
    </ContentPresenter>
  </DataTemplate>
  <DataTemplate x:Key="{dxt:DragDropThemeKey ResourceKey=DragDropHint}">
    <Border MinWidth="200" MaxWidth="300" Padding="12,8,24,10" BorderThickness="1" CornerRadius="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragHintCornerRadius}}" BorderBrush="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragHintBorderBrush}}" Background="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragHintBackground}}">
      <StackPanel>
        <TextBlock x:Name="dragHeader" Text="{Binding Path=Records, Converter={dx:DragHeaderConverter}}" FontWeight="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragHintCaptionFontWeight}}" FontSize="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragHintCaptionFontSize}}" Foreground="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragHintCaptionForeground}}" />
        <ContentPresenter x:Name="dragDetail" Margin="0,3,0,0" Content="{Binding Path=Records, Converter={dx:DragDetailConverter}}" ContentTemplate="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragDropHintDetail}}">
          <ContentPresenter.Style>
            <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=ContentPresenter}" TargetType="ContentPresenter">
              <Style.Setters>
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragHintDescriptionForeground}}" />
              </Style.Setters>
              <Style.Triggers>
                <Trigger Property="Content" Value="{x:Null}">
                  <Trigger.Setters>
                    <Setter Property="Visibility" Value="Collapsed" />
                  </Trigger.Setters>
                </Trigger>
              </Style.Triggers>
            </Style>
          </ContentPresenter.Style>
        </ContentPresenter>
        <ContentPresenter Content="{Binding}" Margin="0,8,0,0" ContentTemplate="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragHintTargetInfo}}">
          <ContentPresenter.Visibility>
            <Binding Path="ShowTargetInfoInDragDropHint">
              <Binding.Converter>
                <dx:BooleanToVisibilityConverter />
              </Binding.Converter>
            </Binding>
          </ContentPresenter.Visibility>
        </ContentPresenter>
      </StackPanel>
    </Border>
  </DataTemplate>
</ResourceDictionary>