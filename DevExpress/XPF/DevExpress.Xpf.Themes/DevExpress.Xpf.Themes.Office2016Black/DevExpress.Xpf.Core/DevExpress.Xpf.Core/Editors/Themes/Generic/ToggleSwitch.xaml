<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxtEx="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
  <ResourceDictionary.MergedDictionaries>
    <dxdst:ResourceDictionaryEx Source="{dx:DynamicThemeResource ToggleSwitch.xaml, ResourcePath=Editors/Themes, ResourcePathInTheme='DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes', TypeInTargetAssembly={x:Type dxcn:RenderTemplate}}" />
  </ResourceDictionary.MergedDictionaries>
  <dxcn:RenderTemplate x:Key="{dxet:ToggleSwitchThemeKey ResourceKey=RenderTemplate}">
    <dxcn:RenderPanel>
      <dxcn:RenderPanel Name="PART_RootPanel" UseLayoutRounding="True">
        <dxcn:RenderPanel Name="PART_SwitchPanel" LayoutProvider="{dxcn:GridPanelLayoutProvider}">
          <dxcn:RenderContentControl Name="PART_SwitchBorder" PreferRenderTemplate="False" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" UsePropagatedIsMouseOver="True" RenderContentTemplate="{StaticResource {dxet:ToggleSwitchThemeKey ResourceKey=SwitchBorderTemplate}}" />
          <dxei:RenderToggleSwitchThumbContainer Name="PART_ThumbContainer">
            <dxcn:RenderContentControl Name="PART_Thumb" PreferRenderTemplate="False" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" UsePropagatedIsMouseOver="True" RenderContentTemplate="{StaticResource {dxet:ToggleSwitchThemeKey ResourceKey=SwitchThumbTemplate}}" />
          </dxei:RenderToggleSwitchThumbContainer>
        </dxcn:RenderPanel>
        <dxcn:RenderContentControl Name="PART_UncheckedStateContent" Opacity="0" UseLayoutRounding="False" PreferRenderTemplate="False" ClipToBounds="True" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" RenderContentTemplate="{StaticResource {dxet:ToggleSwitchThemeKey ResourceKey=UncheckedStateContentTemplate}}" />
        <dxcn:RenderContentControl Name="PART_CheckedStateContent" Opacity="0" UseLayoutRounding="False" PreferRenderTemplate="False" ClipToBounds="True" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" RenderContentTemplate="{StaticResource {dxet:ToggleSwitchThemeKey ResourceKey=CheckedStateContentTemplate}}" />
        <dxcn:RenderContentControl Name="PART_UndefinedStateContent" Opacity="0" UseLayoutRounding="False" PreferRenderTemplate="False" ClipToBounds="True" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" RenderContentTemplate="{StaticResource {dxet:ToggleSwitchThemeKey ResourceKey=UndefinedStateContentTemplate}}" />
      </dxcn:RenderPanel>
    </dxcn:RenderPanel>
    <dxcn:RenderTemplate.Triggers>
      <dxcn:RenderBinding ValueSource="TemplatedParent" DependencyProperty="{x:Static dxe:ToggleSwitch.ActualCheckedStateContentProperty}" TargetName="PART_CheckedStateContent" TargetProperty="Content" />
      <dxcn:RenderBinding ValueSource="TemplatedParent" DependencyProperty="{x:Static dxe:ToggleSwitch.ActualUncheckedStateContentProperty}" TargetName="PART_UncheckedStateContent" TargetProperty="Content" />
      <dxcn:RenderBinding ValueSource="TemplatedParent" DependencyProperty="{x:Static dxe:ToggleSwitch.ActualUndefinedStateContentProperty}" TargetName="PART_UndefinedStateContent" TargetProperty="Content" />
      <dxcn:RenderBinding ValueSource="TemplatedParent" DependencyProperty="{x:Static dxe:ToggleSwitch.ActualCheckedStateContentTemplateProperty}" TargetName="PART_CheckedStateContent" TargetProperty="ContentTemplate" />
      <dxcn:RenderBinding ValueSource="TemplatedParent" DependencyProperty="{x:Static dxe:ToggleSwitch.ActualUncheckedStateContentTemplateProperty}" TargetName="PART_UncheckedStateContent" TargetProperty="ContentTemplate" />
      <dxcn:RenderBinding ValueSource="TemplatedParent" DependencyProperty="{x:Static dxe:ToggleSwitch.ActualUndefinedStateContentTemplateProperty}" TargetName="PART_UndefinedStateContent" TargetProperty="ContentTemplate" />
      <dxcn:RenderBinding ValueSource="TemplatedParent" DependencyProperty="{x:Static dxe:ToggleSwitch.ToggleSwitchWidthProperty}" TargetName="PART_SwitchPanel" TargetProperty="Width" />
      <dxcn:RenderBinding ValueSource="TemplatedParent" DependencyProperty="{x:Static dxe:ToggleSwitch.ToggleSwitchHeightProperty}" TargetName="PART_SwitchPanel" TargetProperty="Height" />
      <dxcn:RenderBinding ValueSource="TemplatedParent" DependencyProperty="{x:Static dxe:ToggleSwitch.SwitchThumbTemplateProperty}" TargetName="PART_Thumb" TargetProperty="ContentTemplate" />
      <dxcn:RenderBinding ValueSource="TemplatedParent" DependencyProperty="{x:Static dxe:ToggleSwitch.SwitchBorderTemplateProperty}" TargetName="PART_SwitchBorder" TargetProperty="ContentTemplate" />
      <dxcn:MultiRenderTrigger>
        <dxcn:MultiRenderTrigger.Conditions>
          <dxcn:RenderCondition DependencyProperty="{x:Static dxe:ToggleSwitch.HasCheckedStateContentProperty}" Value="True" />
          <dxcn:RenderConditionGroup Operator="Or">
            <dxcn:RenderCondition DependencyProperty="{x:Static dxe:ToggleSwitch.IsCheckedProperty}" Value="True" />
            <dxcn:RenderCondition DependencyProperty="{x:Static dxe:ToggleSwitch.ContentPlacementProperty}" Value="Both" />
          </dxcn:RenderConditionGroup>
        </dxcn:MultiRenderTrigger.Conditions>
        <dxcn:RenderSetter Property="Opacity" TargetName="PART_CheckedStateContent" Value="1" />
      </dxcn:MultiRenderTrigger>
      <dxcn:MultiRenderTrigger>
        <dxcn:MultiRenderTrigger.Conditions>
          <dxcn:RenderCondition DependencyProperty="{x:Static dxe:ToggleSwitch.HasUncheckedStateContentProperty}" Value="True" />
          <dxcn:RenderConditionGroup Operator="Or">
            <dxcn:RenderCondition DependencyProperty="{x:Static dxe:ToggleSwitch.IsCheckedProperty}" Value="False" />
            <dxcn:RenderCondition DependencyProperty="{x:Static dxe:ToggleSwitch.ContentPlacementProperty}" Value="Both" />
          </dxcn:RenderConditionGroup>
        </dxcn:MultiRenderTrigger.Conditions>
        <dxcn:RenderSetter Property="Opacity" TargetName="PART_UncheckedStateContent" Value="1" />
      </dxcn:MultiRenderTrigger>
      <dxcn:MultiRenderTrigger>
        <dxcn:MultiRenderTrigger.Conditions>
          <dxcn:RenderCondition DependencyProperty="{x:Static dxe:ToggleSwitch.HasUndefinedStateContentProperty}" Value="True" />
          <dxcn:RenderCondition DependencyProperty="{x:Static dxe:ToggleSwitch.IsThreeStateProperty}" Value="True" />
          <dxcn:RenderCondition DependencyProperty="{x:Static dxe:ToggleSwitch.IsCheckedProperty}" Value="{x:Null}" />
          <dxcn:RenderConditionGroup Operator="Or">
            <dxcn:RenderCondition DependencyProperty="{x:Static dxe:ToggleSwitch.ContentPlacementProperty}" Value="Near" />
            <dxcn:RenderCondition DependencyProperty="{x:Static dxe:ToggleSwitch.ContentPlacementProperty}" Value="Far" />
          </dxcn:RenderConditionGroup>
        </dxcn:MultiRenderTrigger.Conditions>
        <dxcn:RenderSetter Property="Opacity" TargetName="PART_UndefinedStateContent" Value="1" />
      </dxcn:MultiRenderTrigger>
    </dxcn:RenderTemplate.Triggers>
  </dxcn:RenderTemplate>
  <ControlTemplate x:Key="{dxet:ToggleSwitchThemeKey ResourceKey=Template}" TargetType="{x:Type dxe:ToggleSwitch}">
    <dxei:ToggleSwitchButtonChrome x:Name="PART_Owner" RenderTemplate="{StaticResource ResourceKey={dxet:ToggleSwitchThemeKey ResourceKey=RenderTemplate}}" />
    <ControlTemplate.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="PART_Owner" Property="Opacity" Value="{StaticResource ResourceKey={dxet:ToggleSwitchThemeKey ResourceKey=DisabledStateOpacity}}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxet:ToggleSwitchThemeKey ResourceKey=InplaceTemplate}" TargetType="{x:Type dxe:ToggleSwitch}">
    <dxei:ToggleSwitchButtonChrome x:Name="PART_Owner" RenderTemplate="{StaticResource ResourceKey={dxet:ToggleSwitchThemeKey ResourceKey=RenderTemplate}}" />
  </ControlTemplate>
</ResourceDictionary>