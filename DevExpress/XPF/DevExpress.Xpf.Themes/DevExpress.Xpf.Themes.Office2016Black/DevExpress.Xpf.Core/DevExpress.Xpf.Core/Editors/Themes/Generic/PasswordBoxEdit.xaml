<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxtEx="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:dxeh="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:ui="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
  <ResourceDictionary.MergedDictionaries>
    <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2016Black.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/Generic/Common.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <dx:NegationConverter x:Key="negationConverter" />
  <dx:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
  <sys:Char x:Key="{dxet:PasswordBoxEditThemeKey ResourceKey=PasswordChar}">●</sys:Char>
  <ControlTemplate x:Key="{dxet:PasswordBoxEditThemeKey ResourceKey=DisplayTemplate}">
    <Grid Background="Transparent">
      <Grid.ColumnDefinitions>
        <ColumnDefinition />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>
      <PasswordBox Grid.Column="0" x:Name="PART_Editor" FontFamily="{Binding Path=(dxe:BaseEdit.OwnerEdit).FontFamily}" Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).ActualIsPasswordVisible, Converter={ui:BooleanToVisibilityConverter HiddenInsteadOfCollapsed=True, Inverse=True}, FallbackValue={x:Static Visibility.Visible}}" Style="{DynamicResource {dxet:PasswordBoxEditThemeKey ResourceKey=PasswordBoxStyle}}" Focusable="False" />
      <TextBlock Grid.Column="0" x:Name="PART_PasswordNullText" IsHitTestVisible="False" Text="{Binding Path=(dxe:BaseEdit.OwnerEdit).NullText, RelativeSource={RelativeSource TemplatedParent}}" Opacity="0.35" Padding="{Binding Path=(dxe:BaseEdit.OwnerEdit).Padding}" Style="{DynamicResource {dxet:PasswordBoxEditThemeKey ResourceKey=NullTextEditorStyle}}" Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).IsNullTextVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
      <TextBlock Grid.Column="0" x:Name="PART_PasswordPreviewText" Text="{Binding Path=(dxe:BaseEdit.OwnerEdit).DisplayText}" Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).ActualIsPasswordVisible, Converter={dx:BooleanToVisibilityConverter}, FallbackValue={x:Static Visibility.Collapsed}}" Style="{DynamicResource {dxet:PasswordBoxEditThemeKey ResourceKey=PreviewTextEditorStyle}}" />
      <Button x:Name="PART_ShowPasswordButton" Grid.Column="1" Style="{DynamicResource {dxet:PasswordBoxEditThemeKey ResourceKey=ShowPasswordButtonStyle}}" />
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxet:PasswordBoxEditThemeKey ResourceKey=EditTemplate}">
    <Grid Background="Transparent">
      <Grid.ColumnDefinitions>
        <ColumnDefinition />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>
      <PasswordBox Grid.Column="0" x:Name="PART_Editor" FontFamily="{Binding Path=(dxe:BaseEdit.OwnerEdit).FontFamily}" Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).ActualIsPasswordVisible, Converter={ui:BooleanToVisibilityConverter HiddenInsteadOfCollapsed=True, Inverse=True}, FallbackValue={x:Static Visibility.Visible}}" Style="{DynamicResource {dxet:PasswordBoxEditThemeKey ResourceKey=PasswordBoxStyle}}" />
      <TextBlock Grid.Column="0" x:Name="PART_PasswordPreviewText" Text="{Binding Path=(dxe:BaseEdit.OwnerEdit).DisplayText}" Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).ActualIsPasswordVisible, Converter={dx:BooleanToVisibilityConverter}, FallbackValue={x:Static Visibility.Collapsed}}" Style="{DynamicResource {dxet:PasswordBoxEditThemeKey ResourceKey=PreviewTextEditorStyle}}" />
      <Button x:Name="PART_ShowPasswordButton" Grid.Column="1" Style="{DynamicResource {dxet:PasswordBoxEditThemeKey ResourceKey=ShowPasswordButtonStyle}}" />
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxet:PasswordBoxEditThemeKey ResourceKey=Template}" TargetType="{x:Type dxe:PasswordBoxEdit}">
    <ContentControl Template="{TemplateBinding ActualBorderTemplate}" x:Name="Border" dxeh:ControlHelper.IsReadOnly="{TemplateBinding IsReadOnly}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" dxn:AppearanceOptions.CornerRadius="{Binding Path=(dxn:AppearanceOptions.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" dxn:AppearanceOptions.HasCornerRadius="{Binding Path=(dxn:AppearanceOptions.HasCornerRadius), RelativeSource={RelativeSource TemplatedParent}}" dxn:AppearanceOptions.BorderThickness="{Binding Path=(dxn:AppearanceOptions.BorderThickness), RelativeSource={RelativeSource TemplatedParent}}" dxn:AppearanceOptions.HasBorderThickness="{Binding Path=(dxn:AppearanceOptions.HasBorderThickness), RelativeSource={RelativeSource TemplatedParent}}" dxe:EditorAppearanceProperties.FocusedBorderBrush="{Binding Path=(dxe:EditorAppearanceProperties.FocusedBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" dxe:EditorAppearanceProperties.ReadOnlyBorderBrush="{Binding Path=(dxe:EditorAppearanceProperties.ReadOnlyBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" dxe:EditorAppearanceProperties.ReadOnlyBackground="{Binding Path=(dxe:EditorAppearanceProperties.ReadOnlyBackground), RelativeSource={RelativeSource TemplatedParent}}" Focusable="False" dxeh:ControlHelper.ShowFocusedState="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource TemplatedParent}}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
      <DockPanel LastChildFill="True" SnapsToDevicePixels="True">
        <dxe:ErrorControl x:Name="PART_ErrorPresenter" />
        <Grid DockPanel.Dock="Left">
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto" x:Name="PART_FirstRow" />
            <RowDefinition Height="*" />
          </Grid.RowDefinitions>
          <Label x:Name="PART_Label" Grid.Row="0" Content="{TemplateBinding Label}" Visibility="Collapsed" VerticalAlignment="Bottom" Margin="{DynamicResource {dxet:EmbeddedEditorLabelsThemeKey ResourceKey=Margin}}" Padding="{DynamicResource {dxet:EmbeddedEditorLabelsThemeKey ResourceKey=Padding}}" FontSize="{DynamicResource {dxet:EmbeddedEditorLabelsThemeKey ResourceKey=FontSize}}" Foreground="{DynamicResource {dxet:EmbeddedEditorLabelsThemeKey ResourceKey=Foreground}}" />
          <dxe:EditorControl x:Name="PART_Content" Grid.Row="1" VerticalAlignment="Stretch" Template="{Binding Path=(dxe:BaseEdit.OwnerEdit).ActualEditorControlTemplate, RelativeSource={RelativeSource Self}}" />
          <Border Margin="2,0" Grid.Row="1">
            <TextBlock x:Name="PART_PasswordNullText" IsHitTestVisible="False" Text="{TemplateBinding NullText}" Foreground="{TemplateBinding NullTextForeground}" Padding="{TemplateBinding Padding}" Style="{DynamicResource {dxet:PasswordBoxEditThemeKey ResourceKey=NullTextEditorStyle}}" Visibility="{Binding Path=IsNullTextVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
          </Border>
        </Grid>
      </DockPanel>
    </ContentControl>
    <ControlTemplate.Triggers>
      <Trigger Property="IsEnabled" Value="false">
        <Setter Property="Opacity" TargetName="PART_PasswordNullText" Value="0.35" />
      </Trigger>
      <DataTrigger Binding="{Binding Path=ShowBorder, RelativeSource={RelativeSource Self}}" Value="true">
        <Setter TargetName="PART_ErrorPresenter" Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxet:InplaceBaseEditThemeKey ResourceKey=ValidationErrorSvgPalette}}" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=Label, RelativeSource={RelativeSource Self}, Converter={StaticResource StringIsNotNullOrEmptyConverter}}" Value="True">
        <Setter TargetName="PART_Label" Property="Visibility" Value="Visible" />
        <Setter TargetName="PART_Content" Property="Margin" Value="{DynamicResource {dxet:EmbeddedEditorLabelsThemeKey ResourceKey=ContentMargin}}" />
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <DataTemplate x:Key="{dxet:PasswordBoxEditThemeKey ResourceKey=CapsLockWarningToolTipTemplate}">
    <Grid>
      <StackPanel Orientation="Vertical">
        <StackPanel Orientation="Horizontal">
          <Image Margin="0,3,3,3" Width="24" Height="24" Stretch="Fill" Source="{dx:ImageSelector Source='pack://application:,,,/DevExpress.Xpf.Core.v24.1;component/Editors/Images/warning.png'}" />
          <Grid Height="24" Margin="3">
            <TextBlock Foreground="#FF003399" VerticalAlignment="Center" FontSize="14" Margin="0,0,0,2" Text="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, ConverterParameter=PasswordBoxEditToolTipHeader, Converter={StaticResource EditorStringIdConverter}}" />
          </Grid>
        </StackPanel>
        <TextBlock Margin="30,0,6,6" Text="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, ConverterParameter=PasswordBoxEditToolTipContent, Converter={StaticResource EditorStringIdConverter}}" />
      </StackPanel>
    </Grid>
  </DataTemplate>
  <Style x:Key="{dxet:PasswordBoxEditThemeKey ResourceKey=ShowPasswordButtonStyle}" TargetType="{x:Type ButtonBase}">
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Visibility" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).ActualShowPasswordButton, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue={x:Static Visibility.Collapsed}}" />
    <Setter Property="ContentTemplate" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).ShowPasswordButtonTemplate}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Margin" Value="4,0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}" TextBlock.Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Opacity" Value="0.65" />
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Opacity" Value="1" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Opacity" Value="0.65" />
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>