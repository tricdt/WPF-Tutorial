<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys" xmlns:dxdv="http://schemas.devexpress.com/winfx/2008/xaml/documentviewer" xmlns:dxdvt="http://schemas.devexpress.com/winfx/2008/xaml/documentviewer/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="/DevExpress.Xpf.Themes.Office2016Black.v24.1;component/DevExpress.Xpf.DocumentViewer/Generic/Templates.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <SolidColorBrush x:Key="Button.DefaultState.Border1" Color="#FFC3C3C3" />
  <LinearGradientBrush x:Key="Button.DefaultState.Border2" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFB2B2B2" Offset="0" />
    <GradientStop Color="#FFE5E5E5" Offset="1" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="Button.HoverState.Border1" Color="#FF696969" />
  <LinearGradientBrush x:Key="Button.HoverState.Border2" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFC3C3C3" Offset="0" />
    <GradientStop Color="#FFFF0000" Offset="1" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="Button.PressedState.Border1" Color="#41000000" />
  <LinearGradientBrush x:Key="Button.PressedState.Border2" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFC3C3C3" Offset="0" />
    <GradientStop Color="#FFC3C3C3" Offset="1" />
  </LinearGradientBrush>
  <ControlTemplate x:Key="{dxdvt:DocumentViewerThemeKey ResourceKey=DocumentViewerBarTemplate}" TargetType="{x:Type ContentControl}">
    <Border Background="#FF696969" BorderBrush="#FF696969" BorderThickness="0,0,0,1">
      <ContentPresenter Margin="12,4,4,4" />
    </Border>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxdv:SearchBarButtonItemItemBorderThemeKey ResourceKey=Normal}" TargetType="{x:Type dxb:ItemBorderControl}">
    <Grid Margin="0,1,0,1" SnapsToDevicePixels="True">
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="State">
          <VisualState x:Name="Normal">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="DefaultState" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Disabled">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="DefaultState" Storyboard.TargetProperty="Opacity" To="0.35" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Hover">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="HoverState" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="PressedState" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Checked">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="HoverState" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Grid x:Name="States">
        <Border x:Name="DefaultState" Background="{StaticResource Button.DefaultState.Border2}" BorderBrush="{StaticResource Button.DefaultState.Border1}" BorderThickness="1" />
        <Border x:Name="HoverState" Background="{StaticResource Button.HoverState.Border2}" BorderBrush="{StaticResource Button.HoverState.Border1}" BorderThickness="1" />
        <Border x:Name="PressedState" Background="{StaticResource Button.PressedState.Border2}" BorderBrush="{StaticResource Button.PressedState.Border1}" BorderThickness="1" />
      </Grid>
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxdv:SearchBarSubItemItemBorderThemeKey ResourceKey=Normal}" TargetType="{x:Type dxb:ItemBorderControl}">
    <Grid Margin="0,1,0,1" SnapsToDevicePixels="True">
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="State">
          <VisualState x:Name="Normal">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="DefaultState" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Disabled">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="DefaultState" Storyboard.TargetProperty="Opacity" To="0.35" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Hover">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="HoverState" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="PressedState" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Checked">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="HoverState" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Grid x:Name="States">
        <Border x:Name="DefaultState" Background="{StaticResource Button.DefaultState.Border2}" BorderBrush="{StaticResource Button.DefaultState.Border1}" BorderThickness="1" />
        <Border x:Name="HoverState" Background="{StaticResource Button.HoverState.Border2}" BorderBrush="{StaticResource Button.HoverState.Border1}" BorderThickness="1" />
        <Border x:Name="PressedState" Background="{StaticResource Button.PressedState.Border2}" BorderBrush="{StaticResource Button.PressedState.Border1}" BorderThickness="1" />
      </Grid>
    </Grid>
  </ControlTemplate>
  <Style x:Key="{dxdv:SearchBarButtonItemLayoutPanelThemeKey ResourceKey=StyleInBar}" TargetType="{x:Type dxb:BarItemLayoutPanel}">
    <Setter Property="FirstBorderUseNormalStateOnly" Value="True" />
    <Setter Property="SecondBorderUseNormalStateOnly" Value="True" />
    <Setter Property="Margin" Value="0,0,1,1" />
    <!--BEGIN WPF-->
    <Setter Property="BorderThemeKey" Value="{dxbt:BarItemBorderInRibbonPageGroupThemeKey}" />
    <!--END WPF-->
    <!--ONLY SL<Setter Property="BorderThemeKey" Value="BarItemBorderInRibbonPageGroupThemeKey"/>ONLY SL-->
    <Setter Property="CommonContentMargin" Value="3" />
    <Setter Property="GlyphMargin" Value="3" />
    <Setter Property="ArrowMargin" Value="3" />
    <Setter Property="LeftCommonContentMargin" Value="3,3,0,3" />
    <Setter Property="RightCommonContentMargin" Value="0,3,3,3" />
    <Setter Property="TopCommonContentMargin" Value="3,3,3,0" />
    <Setter Property="BottomCommonContentMargin" Value="3,0,3,3" />
    <Setter Property="LeftGlyphMargin" Value="3" />
    <Setter Property="RightGlyphMargin" Value="3" />
    <Setter Property="TopGlyphMargin" Value="3" />
    <Setter Property="BottomGlyphMargin" Value="3" />
    <Setter Property="LeftArrowMargin" Value="3" />
    <Setter Property="RightArrowMargin" Value="3" />
    <Setter Property="TopArrowMargin" Value="3" />
    <Setter Property="BottomArrowMargin" Value="3" />
    <!--BEGIN WPF-->
    <Setter Property="TextSplitterStyleKey" Value="{dxbt:TextSplitterThemeKey ResourceKey=BarButtonItem}" />
    <!--END WPF-->
    <!--ONLY SL<Setter Property="TextSplitterStyleKey" Value="TextSplitterThemeKey_BarButtonItem"/>ONLY SL-->
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="CommonContentMargin" Value="14" />
        <Setter Property="GlyphMargin" Value="14" />
        <Setter Property="ArrowMargin" Value="14" />
        <Setter Property="LeftCommonContentMargin" Value="14,14,0,14" />
        <Setter Property="RightCommonContentMargin" Value="0,14,14,14" />
        <Setter Property="TopCommonContentMargin" Value="14,14,14,0" />
        <Setter Property="BottomCommonContentMargin" Value="14,0,14,14" />
        <Setter Property="LeftGlyphMargin" Value="14" />
        <Setter Property="RightGlyphMargin" Value="14" />
        <Setter Property="TopGlyphMargin" Value="14" />
        <Setter Property="BottomGlyphMargin" Value="14" />
        <Setter Property="LeftArrowMargin" Value="14" />
        <Setter Property="RightArrowMargin" Value="14" />
        <Setter Property="TopArrowMargin" Value="14" />
        <Setter Property="BottomArrowMargin" Value="14" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdv:SearchBarSubItemLayoutPanelThemeKey ResourceKey=StyleInBar}" TargetType="{x:Type dxb:BarItemLayoutPanel}">
    <Setter Property="FirstBorderUseNormalStateOnly" Value="True" />
    <Setter Property="SecondBorderUseNormalStateOnly" Value="True" />
    <Setter Property="Margin" Value="0,0,1,1" />
    <!--BEGIN WPF-->
    <!--END WPF-->
    <!--ONLY SL<Setter Property="BorderThemeKey" Value="BarItemBorderInRibbonPageGroupThemeKey"/>ONLY SL-->
    <Setter Property="CommonContentMargin" Value="3" />
    <Setter Property="GlyphMargin" Value="3" />
    <Setter Property="ArrowMargin" Value="3" />
    <Setter Property="LeftCommonContentMargin" Value="3,3,0,3" />
    <Setter Property="RightCommonContentMargin" Value="0,3,3,3" />
    <Setter Property="TopCommonContentMargin" Value="3,3,3,0" />
    <Setter Property="BottomCommonContentMargin" Value="3,0,3,3" />
    <Setter Property="LeftGlyphMargin" Value="3" />
    <Setter Property="RightGlyphMargin" Value="3" />
    <Setter Property="TopGlyphMargin" Value="3" />
    <Setter Property="BottomGlyphMargin" Value="3" />
    <Setter Property="LeftArrowMargin" Value="3" />
    <Setter Property="RightArrowMargin" Value="3" />
    <Setter Property="TopArrowMargin" Value="3" />
    <Setter Property="BottomArrowMargin" Value="3" />
    <!--BEGIN WPF-->
    <Setter Property="TextSplitterStyleKey" Value="{dxbt:TextSplitterThemeKey ResourceKey=BarButtonItem}" />
    <!--END WPF-->
    <!--ONLY SL<Setter Property="TextSplitterStyleKey" Value="TextSplitterThemeKey_BarButtonItem"/>ONLY SL-->
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="CommonContentMargin" Value="14" />
        <Setter Property="GlyphMargin" Value="14" />
        <Setter Property="ArrowMargin" Value="14" />
        <Setter Property="LeftCommonContentMargin" Value="14,14,0,14" />
        <Setter Property="RightCommonContentMargin" Value="0,14,14,14" />
        <Setter Property="TopCommonContentMargin" Value="14,14,14,0" />
        <Setter Property="BottomCommonContentMargin" Value="14,0,14,14" />
        <Setter Property="LeftGlyphMargin" Value="14" />
        <Setter Property="RightGlyphMargin" Value="14" />
        <Setter Property="TopGlyphMargin" Value="14" />
        <Setter Property="BottomGlyphMargin" Value="14" />
        <Setter Property="LeftArrowMargin" Value="14" />
        <Setter Property="RightArrowMargin" Value="14" />
        <Setter Property="TopArrowMargin" Value="14" />
        <Setter Property="BottomArrowMargin" Value="14" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdv:SearchBarStaticItemLayoutPanelThemeKey ResourceKey=StyleInBar}" TargetType="{x:Type dxb:BarItemLayoutPanel}">
    <Setter Property="FirstBorderUseNormalStateOnly" Value="True" />
    <Setter Property="SecondBorderUseNormalStateOnly" Value="True" />
    <Setter Property="Margin" Value="0,0,1,1" />
    <!--BEGIN WPF-->
    <!--END WPF-->
    <!--ONLY SL<Setter Property="BorderThemeKey" Value="BarItemBorderInRibbonPageGroupThemeKey"/>ONLY SL-->
    <Setter Property="CommonContentMargin" Value="3" />
    <Setter Property="GlyphMargin" Value="3" />
    <Setter Property="ArrowMargin" Value="3" />
    <Setter Property="LeftCommonContentMargin" Value="3,3,0,3" />
    <Setter Property="RightCommonContentMargin" Value="0,3,3,3" />
    <Setter Property="TopCommonContentMargin" Value="3,3,3,0" />
    <Setter Property="BottomCommonContentMargin" Value="3,0,3,3" />
    <Setter Property="LeftGlyphMargin" Value="3" />
    <Setter Property="RightGlyphMargin" Value="3" />
    <Setter Property="TopGlyphMargin" Value="3" />
    <Setter Property="BottomGlyphMargin" Value="3" />
    <Setter Property="LeftArrowMargin" Value="3" />
    <Setter Property="RightArrowMargin" Value="3" />
    <Setter Property="TopArrowMargin" Value="3" />
    <Setter Property="BottomArrowMargin" Value="3" />
    <!--BEGIN WPF-->
    <Setter Property="TextSplitterStyleKey" Value="{dxbt:TextSplitterThemeKey ResourceKey=BarButtonItem}" />
    <!--END WPF-->
    <!--ONLY SL<Setter Property="TextSplitterStyleKey" Value="TextSplitterThemeKey_BarButtonItem"/>ONLY SL-->
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="CommonContentMargin" Value="14" />
        <Setter Property="GlyphMargin" Value="14" />
        <Setter Property="ArrowMargin" Value="14" />
        <Setter Property="LeftCommonContentMargin" Value="14,14,0,14" />
        <Setter Property="RightCommonContentMargin" Value="0,14,14,14" />
        <Setter Property="TopCommonContentMargin" Value="14,14,14,0" />
        <Setter Property="BottomCommonContentMargin" Value="14,0,14,14" />
        <Setter Property="LeftGlyphMargin" Value="14" />
        <Setter Property="RightGlyphMargin" Value="14" />
        <Setter Property="TopGlyphMargin" Value="14" />
        <Setter Property="BottomGlyphMargin" Value="14" />
        <Setter Property="LeftArrowMargin" Value="14" />
        <Setter Property="RightArrowMargin" Value="14" />
        <Setter Property="TopArrowMargin" Value="14" />
        <Setter Property="BottomArrowMargin" Value="14" />
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>