<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxfui="http://schemas.devexpress.com/winfx/2008/xaml/core/filteringui" xmlns:dxfuit="http://schemas.devexpress.com/winfx/2008/xaml/core/filteringui/themekeys" xmlns:dxfui_local="http://schemas.devexpress.com/winfx/2008/xaml/core/filteringui" xmlns:dxfui_local_native="http://schemas.devexpress.com/winfx/2008/xaml/core/filteringui/internal" xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys" xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxgcore="clr-namespace:DevExpress.Xpf.Grid;assembly=DevExpress.Xpf.Grid.v24.1.Core" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
  <ResourceDictionary.MergedDictionaries>
    <dxdst:ResourceDictionaryEx Source="FilterElements.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <!--#region TreeView-->
  <Style x:Key="{dxfuit:CheckedTreeListFilterElementThemeKey ResourceKey=TreeListBorderStyle}" TargetType="{x:Type Border}" />
  <Style x:Key="{dxfuit:CheckedTreeListFilterElementThemeKey ResourceKey=TreeListStyle}" TargetType="{x:Type dxg:TreeListControl}">
    <Setter Property="ShowBorder" Value="True" />
  </Style>
  <ControlTemplate x:Key="dataPresenterTemplate" TargetType="{x:Type dxg:DataPresenter}">
    <Border Background="{DynamicResource {dxfuit:CheckedTreeListFilterElementThemeKey ResourceKey=DataPresenterBackground}}">
      <ContentPresenter />
    </Border>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxfuit:CheckedTreeListFilterElementThemeKey ResourceKey=TreeViewScrollViewerTemplate}">
    <Grid ClipToBounds="True" SnapsToDevicePixels="true" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}">
      <dx:ScrollBarExtensions.ScrollBehavior>
        <Binding Path="(dxg:GridControl.CurrentView).UseExtendedMouseScrolling" RelativeSource="{RelativeSource Self}">
          <Binding.Converter>
            <dx:BoolToObjectConverter FalseValue="{dx:NativeScrollBehavior}" TrueValue="{dxgcore:DataPresenterScrollBehavior}" />
          </Binding.Converter>
        </Binding>
      </dx:ScrollBarExtensions.ScrollBehavior>
      <Grid x:Name="rowPresenterGrid" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" Margin="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=RowPresenterGridMargin}}">
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto" />
          <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Grid Grid.Row="1">
          <Grid.ColumnSpan>
            <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}">
              <Binding.Converter>
                <dxmvvm:ObjectToObjectConverter DefaultSource="Default" DefaultTarget="1">
                  <dxmvvm:MapItem Source="TouchOverlap" Target="2" />
                </dxmvvm:ObjectToObjectConverter>
              </Binding.Converter>
            </Binding>
          </Grid.ColumnSpan>
          <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" MinWidth="{Binding Path=(dxg:GridControl.CurrentView).ScrollableAreaMinWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" dxgcore:FocusRectPresenter.IsVerticalScrollHost="True" ScrollViewer.CanContentScroll="True">
            <dxg:GridControl.CurrentViewChangedListener>
              <dxg:ScrollContentPresenterInitializer />
            </dxg:GridControl.CurrentViewChangedListener>
            <ScrollContentPresenter.Content>
              <dxg:DataPresenter x:Name="dataPresenter" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource dataPresenterTemplate}" />
            </ScrollContentPresenter.Content>
          </ScrollContentPresenter>
        </Grid>
        <Grid Grid.Column="1" HorizontalAlignment="Right" Visibility="{Binding ComputedVerticalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
          <Grid.RowSpan>
            <MultiBinding>
              <MultiBinding.Bindings>
                <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}" />
                <Binding Path="(dxg:GridControl.CurrentView).ShowTotalSummary" RelativeSource="{RelativeSource TemplatedParent}" />
              </MultiBinding.Bindings>
              <MultiBinding.Converter>
                <dxg:VerticalScrollBarRowSpanConverter />
              </MultiBinding.Converter>
            </MultiBinding>
          </Grid.RowSpan>
          <ScrollBar x:Name="PART_VerticalScrollBar" HorizontalAlignment="Right" Value="{Binding VerticalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Maximum="{Binding ScrollableHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" ViewportSize="{Binding ViewportHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" dxg:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}">
            <dxg:GridControl.CurrentViewChangedListener>
              <dxg:VerticalScrollBarBlendCustomizationExtension />
            </dxg:GridControl.CurrentViewChangedListener>
          </ScrollBar>
        </Grid>
      </Grid>
      <dxgcore:FocusRectPresenter x:Name="PART_FocusRectPresenter" View="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Left" VerticalAlignment="Top" />
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxfuit:CheckedTreeListFilterElementThemeKey ResourceKey=TreeViewTemplate}" TargetType="dxg:TreeListView">
    <ScrollViewer x:Name="scr" VerticalScrollBarVisibility="{TemplateBinding VerticalScrollbarVisibility}" HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollbarVisibility}" Focusable="False" dxg:GridControl.CurrentView="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{DynamicResource {dxfuit:CheckedTreeListFilterElementThemeKey ResourceKey=TreeViewScrollViewerTemplate}}" dx:ScrollBarExtensions.ScrollBehavior="{x:Null}">
      <ScrollViewer.CanContentScroll>True</ScrollViewer.CanContentScroll>
      <dx:ScrollBarExtensions.AllowMouseScrolling>
        <Binding Path="(dxg:GridControl.CurrentView).UseExtendedMouseScrolling" RelativeSource="{RelativeSource Self}" />
      </dx:ScrollBarExtensions.AllowMouseScrolling>
    </ScrollViewer>
  </ControlTemplate>
  <Style x:Key="{dxfuit:CheckedTreeListFilterElementThemeKey ResourceKey=TreeViewStyle}" TargetType="dxg:TreeListView">
    <Setter Property="HasChildNodesPath" Value="HasNodes" />
    <Setter Property="TreeDerivationMode" Value="ChildNodesSelector" />
    <Setter Property="AllowEditing" Value="False" />
    <Setter Property="ChildNodesPath" Value="Nodes" />
    <Setter Property="ShowCheckboxes" Value="True" />
    <Setter Property="ShowRootIndent" Value="False" />
    <Setter Property="SearchString" Value="{Binding SearchString, Mode=TwoWay}" />
    <Setter Property="ShowSearchPanelMode" Value="Never" />
    <Setter Property="SearchPanelHighlightResults" Value="False" />
    <Setter Property="SearchPanelAllowFilter" Value="False" />
    <Setter Property="CheckBoxFieldName" Value="IsChecked" />
    <Setter Property="AllowRecursiveNodeChecking" Value="False" />
    <Setter Property="FilterMode" Value="Standard" />
    <Setter Property="ExpandStateFieldName" Value="IsExpanded" />
    <Setter Property="ImmediateUpdateCheckBoxState" Value="True" />
    <Setter Property="NavigationStyle" Value="Row" />
    <Setter Property="ShowIndicator" Value="False" />
    <Setter Property="TreeLineStyle" Value="None" />
    <Setter Property="ShowHorizontalLines" Value="False" />
    <Setter Property="ShowVerticalLines" Value="False" />
    <Setter Property="ShowColumnHeaders" Value="False" />
    <Setter Property="Template" Value="{DynamicResource {dxfuit:CheckedTreeListFilterElementThemeKey ResourceKey=TreeViewTemplate}}" />
  </Style>
  <Thickness x:Key="{dxfuit:CheckedTreeListFilterElementThemeKey ResourceKey=SearchControlMargin}">0,0,0,4</Thickness>
  <Style x:Key="{dxfuit:CheckedTreeListFilterElementThemeKey ResourceKey=SearchControlStyle}" TargetType="dxg:GridSearchControl">
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="PostMode" Value="Delayed" />
    <Setter Property="Margin" Value="{DynamicResource {dxfuit:CheckedTreeListFilterElementThemeKey ResourceKey=SearchControlMargin}}" />
    <Setter Property="Visibility" Value="{Binding ActualShowSearchPanel, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
  </Style>
  <!--#endregion-->
  <Style x:Key="ValueCountContentControlStyle" TargetType="{x:Type dxfui_local:ValueCountContentControl}">
    <Setter Property="Count" Value="{Binding Path=RowData.Row.Count}" />
    <Setter Property="ShowCount" Value="{Binding Path=RowData.Row.ShowCount}" />
    <Setter Property="Margin" Value="2,0,0,0" />
  </Style>
  <Style x:Key="{dxfuit:CheckedTreeListFilterElementThemeKey ResourceKey=ExcelFilterPopupValueColumnStyle}" TargetType="{x:Type dxgcore:ColumnBase}" />
  <DataTemplate x:Key="{dxfuit:CheckedTreeListFilterElementThemeKey ResourceKey=Template}">
    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition />
      </Grid.RowDefinitions>
      <dxg:GridSearchControl Grid.Row="0" View="{x:Reference Name=treeListView}" Style="{DynamicResource {dxfuit:CheckedTreeListFilterElementThemeKey ResourceKey=SearchControlStyle}}" />
      <dxfui_local:LoadingIndicatorControl Grid.Row="1" IsLoading="{Binding IsLoading}">
        <Border Grid.Row="1" Style="{DynamicResource {dxfuit:CheckedTreeListFilterElementThemeKey ResourceKey=TreeListBorderStyle}}">
          <dxg:TreeListControl x:Name="treeListControl" Style="{DynamicResource {dxfuit:CheckedTreeListFilterElementThemeKey ResourceKey=TreeListStyle}}">
            <dxg:TreeListColumn x:Name="PART_ValueColumn" FieldName="Value" Width="*" Style="{DynamicResource {dxfuit:CheckedTreeListFilterElementThemeKey ResourceKey=ExcelFilterPopupValueColumnStyle}}">
              <dxg:TreeListColumn.CellTemplateSelector>
                <dxfui_local:HierarchyItemTemplateSelector>
                  <dxfui_local:HierarchyItemTemplateSelector.RegularNodeTemplate>
                    <DataTemplate>
                      <dxfui_local:ValueCountContentControl Style="{StaticResource ValueCountContentControlStyle}">
                        <dxfui_local:ValueEditorContainer DataContext="{Binding Value}" GetDisplayText="{Binding GetDisplayText}" EditSettingsLazy="{Binding EditSettingsLazy}" Value="{Binding Value}" />
                      </dxfui_local:ValueCountContentControl>
                    </DataTemplate>
                  </dxfui_local:HierarchyItemTemplateSelector.RegularNodeTemplate>
                  <dxfui_local:HierarchyItemTemplateSelector.CustomNodeTemplate>
                    <DataTemplate>
                      <dxfui_local:ValueCountContentControl Style="{StaticResource ValueCountContentControlStyle}">
                        <dxe:TextEdit x:Name="PART_Editor" EditValue="{Binding 'Value.DisplayTextLazy.Value', Mode=OneWay}" dxfui_local_native:FilterElementHelper.ClearTextBlockMargin="True" />
                      </dxfui_local:ValueCountContentControl>
                    </DataTemplate>
                  </dxfui_local:HierarchyItemTemplateSelector.CustomNodeTemplate>
                </dxfui_local:HierarchyItemTemplateSelector>
              </dxg:TreeListColumn.CellTemplateSelector>
            </dxg:TreeListColumn>
            <dxg:TreeListControl.View>
              <dxfui_local:CheckedTreeListView x:Name="treeListView" AllowRecreateNodesOnEndDataUpdate="True" HasGroupedNodes="{Binding HasGroupedNodes}" Style="{DynamicResource {dxfuit:CheckedTreeListFilterElementThemeKey ResourceKey=TreeViewStyle}}">
                <dxmvvm:Interaction.Behaviors>
                  <dxfui_local:HierarchyFilterBehavior LockUpdates="{Binding IsUpdating}" />
                  <dxg:ExcelColumnFilterMouseClickBehavior />
                </dxmvvm:Interaction.Behaviors>
              </dxfui_local:CheckedTreeListView>
            </dxg:TreeListControl.View>
          </dxg:TreeListControl>
        </Border>
      </dxfui_local:LoadingIndicatorControl>
    </Grid>
  </DataTemplate>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.FilteringUI.CheckedTreeListFilterElement}" TargetType="{x:Type dxfui_local:CheckedTreeListFilterElement}" BasedOn="{StaticResource filterElementStyle}">
    <Setter Property="FilterModelTemplate" Value="{DynamicResource {dxfuit:CheckedTreeListFilterElementThemeKey ResourceKey=Template}}" />
  </Style>
</ResourceDictionary>