<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:local="http://schemas.devexpress.com/winfx/2008/xaml/charts" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
  <ResourceDictionary.MergedDictionaries>
    <dxdst:ResourceDictionaryEx Source="{dx:ChartsResource themes/Generic/LegendMarker.xaml}" />
  </ResourceDictionary.MergedDictionaries>
  <dx:BoolToVisibilityConverter x:Key="boolToVisibilityConverter" />
  <local:IndicatorLabelVisibilityConverter x:Key="indicatorLabelVisibilityConverter" />
  <Style x:Key="IndicatorDefaultStyle" TargetType="local:Indicator">
    <Setter Property="LegendMarkerTemplate" Value="{StaticResource IndicatorLegendMarkerDefaultTemplate}" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.RegressionLine}" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="local:RegressionLine" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.ExponentialRegression}" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="local:ExponentialRegression" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.LogarithmicRegression}" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="local:LogarithmicRegression" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.PowerRegression}" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="local:PowerRegression" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.PolynomialRegression}" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="local:PolynomialRegression" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.FibonacciRetracement}" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="local:FibonacciRetracement" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.FibonacciFans}" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="local:FibonacciFans" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.FibonacciArcs}" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="local:FibonacciArcs" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.TrendLine}" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="local:TrendLine" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.SimpleMovingAverage}" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="local:SimpleMovingAverage" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.WeightedMovingAverage}" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="local:WeightedMovingAverage" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.ExponentialMovingAverage}" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="local:ExponentialMovingAverage" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.TriangularMovingAverage}" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="local:TriangularMovingAverage" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.TripleExponentialMovingAverageTema}" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="local:TripleExponentialMovingAverageTema" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.AverageTrueRange}" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="local:AverageTrueRange" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.ChaikinsVolatility}" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="local:ChaikinsVolatility" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.CommodityChannelIndex}" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="local:CommodityChannelIndex" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.DetrendedPriceOscillator}" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="local:DetrendedPriceOscillator" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.MassIndex}" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="local:MassIndex" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.MovingAverageConvergenceDivergence}" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="local:MovingAverageConvergenceDivergence" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.RateOfChange}" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="local:RateOfChange" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.RelativeStrengthIndex}" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="local:RelativeStrengthIndex" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.StandardDeviation}" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="local:StandardDeviation" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.TripleExponentialMovingAverageTrix}" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="local:TripleExponentialMovingAverageTrix" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.WilliamsR}" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="local:WilliamsR" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.BollingerBands}" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="local:BollingerBands" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.TypicalPrice}" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="local:TypicalPrice" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.WeightedClose}" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="local:WeightedClose" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.MedianPrice}" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="local:MedianPrice" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.FixedValueErrorBars}" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="local:FixedValueErrorBars" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.PercentageErrorBars}" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="local:PercentageErrorBars" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.StandardErrorBars}" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="local:StandardErrorBars" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.StandardDeviationErrorBars}" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="local:StandardDeviationErrorBars" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.DataSourceBasedErrorBars}" BasedOn="{StaticResource IndicatorDefaultStyle}" TargetType="local:DataSourceBasedErrorBars" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.IndicatorPresentation}" TargetType="{x:Type local:IndicatorPresentation}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:IndicatorPresentation}">
          <local:FastPath Data="{Binding Geometry}" SnapsToDevicePixels="True" x:Name="PART_IndicatorPath" Stroke="{Binding Brush}" StrokeDashArray="{Binding LineStyle.DashStyle.Dashes}" StrokeDashCap="{Binding LineStyle.DashCap}" StrokeDashOffset="{Binding LineStyle.DashStyle.Offset}" StrokeLineJoin="{Binding LineStyle.LineJoin}" StrokeMiterLimit="{Binding LineStyle.MiterLimit}" RenderTransform="{Binding Path=AnimationTransform}" StrokeThickness="{Binding ActualLineThickness}" Clip="{Binding Path=AnimationClip}" Visibility="{Binding Visible, Converter={StaticResource boolToVisibilityConverter}, Mode=OneWay}" />
          <!--<local:IndicatorRenderControl x:Name="PART_IndicatorPath"
                        Geometry ="{Binding Path=Geometry}"
                        Geometries="{Binding Path=Geometries}"
                        Clip ="{Binding Path=AnimationClip}"
                        AnimationTransform ="{Binding Path=AnimationTransform}"
                        Brush="{Binding Path=Brush}"  
                        Thickness="{Binding Path=ActualLineThickness}"
                        LineStyle="{Binding Path=LineStyle}"
                        Visibility="{Binding Visible, Converter={StaticResource boolToVisibilityConverter}, Mode=OneWay}"/>-->
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Charts.IndicatorLabelPresentation}" TargetType="{x:Type local:IndicatorLabelPresentation}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:IndicatorLabelPresentation}">
          <local:ChartContentPresenter Content="{Binding Path=LabelItem.Text, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{Binding Path=Indicator.Item.Label.ElementTemplate,  RelativeSource={RelativeSource TemplatedParent}}" TextElement.FontFamily="{Binding Path=Indicator.Item.Label.FontFamily,  RelativeSource={RelativeSource TemplatedParent}}" TextElement.FontSize="{Binding Path=Indicator.Item.Label.FontSize,    RelativeSource={RelativeSource TemplatedParent}}" TextElement.FontStretch="{Binding Path=Indicator.Item.Label.FontStretch, RelativeSource={RelativeSource TemplatedParent}}" TextElement.FontStyle="{Binding Path=Indicator.Item.Label.FontStyle,   RelativeSource={RelativeSource TemplatedParent}}" TextElement.FontWeight="{Binding Path=Indicator.Item.Label.FontWeight,  RelativeSource={RelativeSource TemplatedParent}}" TextElement.Foreground="{Binding Path=Indicator.Item.Label.Foreground,  RelativeSource={RelativeSource TemplatedParent}}">
            <local:ChartContentPresenter.Visibility>
              <MultiBinding Converter="{StaticResource indicatorLabelVisibilityConverter}">
                <Binding Path="Indicator.Item.AnimationState" RelativeSource="{RelativeSource TemplatedParent}" />
                <Binding Path="Indicator.Item.Visible" RelativeSource="{RelativeSource TemplatedParent}" />
              </MultiBinding>
            </local:ChartContentPresenter.Visibility>
          </local:ChartContentPresenter>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>