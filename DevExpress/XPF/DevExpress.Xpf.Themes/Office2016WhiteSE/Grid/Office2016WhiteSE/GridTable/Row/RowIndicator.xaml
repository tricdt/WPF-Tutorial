<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxgi="http://schemas.devexpress.com/winfx/2008/xaml/grid/internal" xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys" xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2016WhiteSE.v24.1;component/Grid/Office2016WhiteSE/UICore.xaml" />
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2016WhiteSE.v24.1;component/Grid/Office2016WhiteSE/GridTable/Row/RowIndicatorIcons.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <!-- General -->
  <DataTemplate x:Key="{dxgt:RowIndicatorThemeKey ResourceKey=RowTemplate}">
    <Border x:Name="PART_ContentBorder" Background="#FFFFFFFF" BorderBrush="#FFD4D4D4" BorderThickness="0,0,1,1" cs:id="Border_0001" x:Uid="@Background=Control.Background;BorderBrush=Border">
      <ContentPresenter Content="{Binding DataContext, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{Binding Path=View.RowIndicatorContentTemplate}" />
    </Border>
    <DataTemplate.Triggers>
      <DataTrigger Binding="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True">
        <Setter Property="Background" TargetName="PART_ContentBorder" Value="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.Background), RelativeSource={RelativeSource TemplatedParent}}" />
      </DataTrigger>
    </DataTemplate.Triggers>
  </DataTemplate>
  <DataTemplate x:Key="{dxgt:RowIndicatorThemeKey ResourceKey=GroupRowTemplate}">
    <Border x:Name="PART_Background" Background="#FFFFFFFF" BorderBrush="#FFD4D4D4" BorderThickness="0,0,1,1" cs:id="Border_0001" x:Uid="@Background=Control.Background;BorderBrush=Border">
      <ContentPresenter Content="{Binding DataContext, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{Binding Path=View.RowIndicatorContentTemplate}" />
    </Border>
  </DataTemplate>
  <ControlTemplate x:Key="{dxgt:RowIndicatorThemeKey ResourceKey=RowPanelTemplate}" TargetType="{x:Type ContentControl}">
    <ContentPresenter />
  </ControlTemplate>
  <ControlTemplate x:Key="{dxgt:RowIndicatorThemeKey ResourceKey=RowOffsetControlTemplate}" TargetType="{x:Type dxg:RowOffset}">
    <Grid x:Name="PART_RootGrid" Background="{StaticResource {dxgt:GridRowThemeKey ResourceKey=BorderNoneBrush}}">
      <Path x:Name="PART_OffsetPath" Stroke="{StaticResource {dxgt:GridRowThemeKey ResourceKey=BorderBrush}}" StrokeThickness="1" />
      <Border x:Name="ContentBorder" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="ShowRowBreak" Value="True">
        <Setter Property="BorderBrush" TargetName="ContentBorder" Value="{StaticResource {dxgt:GridRowThemeKey ResourceKey=RowBreakBrush}}" />
        <Setter Property="BorderThickness" TargetName="ContentBorder" Value="{StaticResource {dxgt:GridRowThemeKey ResourceKey=RowBreakThickness}}" />
      </Trigger>
      <Trigger Property="IsLastFixedRow" Value="True">
        <Setter Property="BorderBrush" TargetName="ContentBorder" Value="{StaticResource {dxgt:GridRowThemeKey ResourceKey=RowBreakBrush}}" />
        <Setter Property="BorderThickness" TargetName="ContentBorder" Value="0,1,0,1" />
        <Setter Property="Height" TargetName="ContentBorder" Value="{Binding Path=View.FixedLineHeight}" />
        <Setter Property="VerticalAlignment" TargetName="ContentBorder" Value="Bottom" />
      </Trigger>
      <Trigger Property="FixedRowPosition" Value="Bottom">
        <Setter Property="VerticalAlignment" TargetName="ContentBorder" Value="Top" />
      </Trigger>
      <DataTrigger Binding="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True">
        <Setter Property="Background" TargetName="PART_RootGrid" Value="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxi:AppearanceOptions.Background), RelativeSource={RelativeSource TemplatedParent}}" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxi:GridAppearanceOptions.HasDataAreaBackground), RelativeSource={RelativeSource Self}}" Value="True">
        <Setter Property="Background" TargetName="PART_RootGrid" Value="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxi:GridAppearanceOptions.DataAreaBackground), RelativeSource={RelativeSource TemplatedParent}}" />
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxgt:RowIndicatorThemeKey ResourceKey=GroupRowOffsetControlTemplate}" TargetType="{x:Type dxg:GroupRowOffset}">
    <Border x:Name="groupRowBorderFocused" Background="{StaticResource {dxgt:GridRowThemeKey ResourceKey=BorderFocusedBrush}}">
      <Border.Visibility>
        <Binding Path="SelectionState">
          <Binding.Converter>
            <dxg:SelectionStateToVisibilityConverter Value="Focused" />
          </Binding.Converter>
        </Binding>
      </Border.Visibility>
    </Border>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxgt:RowIndicatorThemeKey ResourceKey=RowOffsetTemplate}" TargetType="{x:Type ContentControl}">
    <dxg:RowOffset AllowHorizontalLines="{Binding IsMasterRowExpanded, Converter={StaticResource BoolInverseConverter}}" AllowVerticalLines="False" BorderBrush="Transparent" FixedRowPosition="{Binding Path=FixedRowPosition}" IsLastFixedRow="{Binding Path=IsLastFixedRow}" NextRowLevel="{Binding Path=NextRowLevel}" Offset="{Binding Path=View.LeftGroupAreaIndent}" RowLevel="{Binding Path=Level}" ShowRowBreak="{Binding Path=ShowRowBreak}" Template="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=RowOffsetControlTemplate}}" cs:id="RowOffset_0000" />
  </ControlTemplate>
  <ControlTemplate x:Key="{dxgt:RowIndicatorThemeKey ResourceKey=GroupRowOffsetTemplate}" TargetType="{x:Type ContentControl}" />
  <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.RowIndicatorControl}" TargetType="{x:Type dxg:RowIndicatorControl}">
    <Setter Property="Foreground" Value="{StaticResource ResourceKey={dxgt:RowIndicatorThemeKey ResourceKey=ForegroundBrush}}" />
  </Style>
</ResourceDictionary>