<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/DevExpress.Xpf.Themes.LightGray.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/TabControl/Themes/Generic.xaml"/>
        <ResourceDictionary Source="/DevExpress.Xpf.Themes.LightGray.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/TabControl/Themes/Generic.Window.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--Tab Button Background Templates-->

    <SolidColorBrush x:Key="Button.Normal.Background" Color="Transparent"/>

    <SolidColorBrush x:Key="Button.Hover.Background" Color="#FF888B96"/>

    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FF52565F"/>

    <DataTemplate x:Key="{dxt:DXTabControlThemeKey ResourceKey=ButtonNormalBackground}">
        <Border Background="{StaticResource Button.Normal.Background}"/>
    </DataTemplate>

    <DataTemplate x:Key="{dxt:DXTabControlThemeKey ResourceKey=ButtonHoverBackground}">
        <Ellipse Fill="{StaticResource Button.Hover.Background}" Stretch="Fill"/>
    </DataTemplate>

    <DataTemplate x:Key="{dxt:DXTabControlThemeKey ResourceKey=ButtonPressedBackground}">
        <Ellipse Fill="{StaticResource Button.Pressed.Background}" Stretch="Fill"/>
    </DataTemplate>

    <!--Tab Button Styles-->

    <SolidColorBrush x:Key="Button.Normal.Foreground" Color="#FF52565F"/>

    <SolidColorBrush x:Key="Button.Hover.Foreground" Color="White"/>

    <SolidColorBrush x:Key="Button.Pressed.Foreground" Color="#FFCACCD0"/>

    <Style x:Key="ButtonStyle"
           BasedOn="{StaticResource ButtonDefaultStyle}"
           TargetType="{x:Type ButtonBase}">
        <Setter Property="Foreground" Value="{StaticResource Button.Normal.Foreground}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource Button.Hover.Foreground}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource Button.Pressed.Foreground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="HeaderPanelButtonStyle"
           BasedOn="{StaticResource ButtonStyle}"
           TargetType="{x:Type ButtonBase}">
        <Setter Property="dxcn:TabOrientablePanel.ChildMargin" Value="2,0,2,0"/>
        <Setter Property="Width" Value="15"/>
        <Setter Property="Height" Value="15"/>
    </Style>

    <Style x:Key="{dxt:DXTabItemThemeKey ResourceKey=CloseButtonStyle}"
           BasedOn="{StaticResource ButtonStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="Width" Value="14"/>
        <Setter Property="Height" Value="14"/>
        <Setter Property="Margin" Value="7,0,-3,0"/>
        <Setter Property="Content" Value="{dxcn:GlyphControlViewInfo Size=-1}"/>
    </Style>

    <Style x:Key="{dxt:DXTabControlThemeKey ResourceKey=CloseButtonStyle}"
           BasedOn="{StaticResource HeaderPanelButtonStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="Content" Value="{dxcn:GlyphControlViewInfo Size=0}"/>
    </Style>

    <Style x:Key="{dxt:DXTabControlThemeKey ResourceKey=PanelNewButtonStyle}"
           BasedOn="{StaticResource HeaderPanelButtonStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="Content" Value="{dxcn:GlyphControlViewInfo Size=0}"/>
        <Setter Property="dxcn:TabOrientablePanel.ChildMargin" Value="3,0,3,0"/>
    </Style>

    <Style x:Key="{dxt:DXTabControlThemeKey ResourceKey=MainNewButtonStyle}"
           BasedOn="{StaticResource HeaderPanelButtonStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="Content" Value="{dxcn:GlyphControlViewInfo Size=0}"/>
    </Style>

    <Style x:Key="{dxt:DXTabControlThemeKey ResourceKey=PrevButtonStyle}"
           BasedOn="{StaticResource HeaderPanelButtonStyle}"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="Content" Value="{dxcn:GlyphControlViewInfo Size=0, GlyphLeftPadding='0,0,1,0', GlyphUpPadding='0,0,0,1'}"/>
    </Style>

    <Style x:Key="{dxt:DXTabControlThemeKey ResourceKey=NextButtonStyle}"
           BasedOn="{StaticResource HeaderPanelButtonStyle}"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="Content" Value="{dxcn:GlyphControlViewInfo Size=0, GlyphRightPadding='2,0,0,0', GlyphDownPadding='0,2,0,0'}"/>
    </Style>

    <Style x:Key="{dxt:DXTabControlThemeKey ResourceKey=MenuButtonStyle}"
           BasedOn="{StaticResource HeaderPanelButtonStyle}"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Content" Value="{dxcn:GlyphControlViewInfo Size=0, GlyphRightPadding='2,0,0,0'}"/>
    </Style>

    <!--TabControl and TabItem Background Templates-->

    <SolidColorBrush x:Key="TabControl.BorderBrush" Color="#FFB9BABF"/>

    <SolidColorBrush x:Key="TabControl.Background" Color="#FFEBEEF3"/>

    <SolidColorBrush x:Key="TabItem.Normal.BorderBrush" Color="#FFB9BABF"/>

    <SolidColorBrush x:Key="TabItem.Normal.Background" Color="#FFD5D8E0"/>

    <LinearGradientBrush x:Key="TabItem.Hover.Background"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFC0DBF8" Offset="1"/>
        <GradientStop Color="#FFCFE2FA"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FFEBEEF3"/>

    <SolidColorBrush x:Key="TabItem.Focused.Background" Color="#FFADCCF7"/>

    <DataTemplate x:Key="{dxt:DXTabControlThemeKey ResourceKey=Background}">
        <dxcn:TabBorder BorderBackground="{StaticResource TabControl.BorderBrush}"
                        BorderCornerRadius="3"
                        BorderMode="BorderBackground"
                        BorderPadding="1"
                        ViewInfo="{Binding}">
            <dxcn:TabBorder BorderBackground="{StaticResource TabControl.Background}" BorderCornerRadius="2"/>
        </dxcn:TabBorder>
    </DataTemplate>

    <DataTemplate x:Key="{dxt:DXTabItemThemeKey ResourceKey=NormalBackground}">
        <dxcn:TabBorder BackgroundMode="BorderBackground"
                        BorderBackground="{StaticResource TabItem.Normal.Background}"
                        BorderBrush="{StaticResource TabControl.BorderBrush}"
                        BorderCornerRadius="2,2,0,0"
                        BorderMargin="0,0,1,0"
                        BorderMode="BorderBrush"
                        BorderThickness="1,1,1,0"
                        CustomBackgroundBrightness="-0.1"
                        HoldBorderCornerRadius="2"
                        HoldBorderMargin="0,0,1,1"
                        HoldBorderThickness="1"
                        LeaveOriginBackgroundColor="False"
                        ViewInfo="{Binding}"/>
    </DataTemplate>

    <DataTemplate x:Key="{dxt:DXTabItemThemeKey ResourceKey=HoverBackground}">
        <dxcn:TabBorder BackgroundMode="BorderBackground"
                        BorderBackground="{StaticResource TabItem.Hover.Background}"
                        BorderBrush="{StaticResource TabControl.BorderBrush}"
                        BorderCornerRadius="2,2,0,0"
                        BorderMargin="0,0,1,0"
                        BorderMode="BorderBrush"
                        BorderThickness="1,1,1,0"
                        CustomBackgroundBrightness="0.4"
                        HoldBorderCornerRadius="2"
                        HoldBorderMargin="0,0,1,1"
                        HoldBorderThickness="1"
                        ViewInfo="{Binding}"/>
    </DataTemplate>

    <DataTemplate x:Key="{dxt:DXTabItemThemeKey ResourceKey=SelectedBackground}">
        <dxcn:TabBorder BorderBackground="{StaticResource TabItem.Selected.Background}"
                        BorderBrush="{StaticResource TabControl.BorderBrush}"
                        BorderCornerRadius="2,2,0,0"
                        BorderMargin="0,-2,1,-1"
                        BorderMode="BorderBrush"
                        BorderThickness="1,1,1,0"
                        HoldBorderCornerRadius="2"
                        HoldBorderMargin="0,0,1,1"
                        HoldBorderThickness="1"
                        ViewInfo="{Binding}"/>
    </DataTemplate>

    <DataTemplate x:Key="{dxt:DXTabItemThemeKey ResourceKey=FocusedBackground}">
        <dxcn:TabBorder BackgroundMode="BorderBackground"
                        BorderBackground="{StaticResource TabItem.Focused.Background}"
                        BorderCornerRadius="1,1,1,0"
                        BorderMargin="2,0,3,1"
                        HoldBorderCornerRadius="1"
                        HoldBorderMargin="2,2,3,3"
                        LeaveOriginBackgroundColor="False"
                        Opacity="0.6"
                        ViewInfo="{Binding}">
            <dxcn:TabBorder.BorderOpacityMask>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="0"/>
                    <GradientStop Color="Transparent" Offset="1"/>
                </LinearGradientBrush>
            </dxcn:TabBorder.BorderOpacityMask>
        </dxcn:TabBorder>
    </DataTemplate>

    <!--TabControl and TabItem Styles-->

    <SolidColorBrush x:Key="TabControl.Foreground" Color="Black"/>

    <Style x:Key="{dxt:DXTabControlThemeKey ResourceKey=PanelContainerStyle}"
           BasedOn="{StaticResource PanelContainerDefaultStyle}"
           TargetType="{x:Type dxcn:TabPanelContainer}"/>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.DXTabControl}"
           BasedOn="{StaticResource TabControlDefaultStyle}"
           TargetType="{x:Type dx:DXTabControl}">
        <Setter Property="Padding" Value="12"/>
        <Setter Property="Foreground" Value="{StaticResource TabControl.Foreground}"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.DXTabItem}"
           BasedOn="{StaticResource TabItemDefaultStyle}"
           TargetType="{x:Type dx:DXTabItem}">
        <Setter Property="Padding" Value="9,3,9,3"/>
        <Setter Property="Foreground" Value="{StaticResource TabControl.Foreground}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ViewInfo.IsHeaderOrientationDifferent, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Padding" Value="8,4,8,4"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxt:DXTabItemThemeKey ResourceKey=SeparatorStyle}" TargetType="{x:Type ContentPresenter}">
        <Setter Property="Visibility" Value="Collapsed"/>
    </Style>

    <Style x:Key="{dxt:DXTabControlThemeKey ResourceKey=ContentStyle}"/>

    <!--TabbedWindow-->

    <LinearGradientBrush x:Key="Window.Header.Active.Background"
                         EndPoint="0.5,0.5"
                         StartPoint="0.5,0">
        <GradientStop Color="#FF8A8A8A"/>
        <GradientStop Color="#FF747474" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Window.Header.InActive.Background"
                         EndPoint="0.5,0.5"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFb3b3b3" Offset="0"/>
        <GradientStop Color="#FFa5a5a5" Offset="1"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="Window.Border.Active.BorderBrush" Color="#FF3D3D3D"/>

    <SolidColorBrush x:Key="Window.Border.Active.Background" Color="#FF747474"/>

    <SolidColorBrush x:Key="Window.Border.InActive.BorderBrush" Color="#FF6d6d6d"/>

    <SolidColorBrush x:Key="Window.Border.InActive.Background" Color="#FFa5a5a5"/>

    <SolidColorBrush x:Key="Window.Foreground" Color="#FF000000"/>

    <DataTemplate x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=HeaderTemplate}">
        <Border x:Name="border" Background="{StaticResource Window.Header.Active.Background}"/>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dx:FloatingContainer.IsActive), RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                <Setter Property="Background"
                        TargetName="border"
                        Value="{StaticResource Window.Header.InActive.Background}"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=BorderTemplate}">
        <Border x:Name="border"
                Background="{StaticResource Window.Border.Active.Background}"
                BorderBrush="{StaticResource Window.Border.Active.BorderBrush}"
                BorderThickness="1"/>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dx:FloatingContainer.IsActive), RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                <Setter Property="BorderBrush"
                        TargetName="border"
                        Value="{StaticResource Window.Border.InActive.BorderBrush}"/>
                <Setter Property="Background"
                        TargetName="border"
                        Value="{StaticResource Window.Border.InActive.Background}"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=MainContainerStyle}" TargetType="Panel">
        <Setter Property="Margin" Value="1"/>
    </Style>

    <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=CaptionPresenterStyle}" TargetType="ContentPresenter">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(dx:FloatingContainer.IsActive), RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                <Setter Property="Opacity" Value="0.6"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=ContentBorderStyle}" TargetType="Border">
        <Setter Property="Margin" Value="0"/>
    </Style>

    <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=ControlContainerStyle}"
           BasedOn="{StaticResource DefaultButtonContainerStyle}"
           TargetType="ItemsControl">
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ItemsControl">
                    <Border CornerRadius="0,0,0,1">
                        <Border Margin="1,0,0,1">
                            <ItemsPresenter Grid.Column="0" Grid.ColumnSpan="3"/>
                            <!--<Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF676767" Offset="0" />
                                    <GradientStop Color="#FF555555" Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>-->
                            <!--<Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="2" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="2" />
                                </Grid.ColumnDefinitions>
                                -->
                            <!--<Border Opacity="0.12">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                            <GradientStop Color="Black" Offset="0" />
                                            <GradientStop Offset="1" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>-->
                            <!--<Border Grid.Column="2" Opacity="0.12">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                            <GradientStop Color="Black" Offset="1" />
                                            <GradientStop />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>-->
                            <!--
                               
                            </Grid>-->
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(dx:FloatingContainer.IsActive)}" Value="False">
                <Setter Property="Opacity" Value="0.6"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=ButtonContainerStyle}"
           BasedOn="{StaticResource DefaultButtonContainerStyle}"
           TargetType="ItemsControl">
        <Setter Property="Margin" Value="0,0,7,0"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ItemsControl">
                    <Border Background="#FF3D3D3D" CornerRadius="0,0,1,0">
                        <Border Margin="0,0,1,1">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF676767" Offset="0"/>
                                    <GradientStop Color="#FF555555" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="2"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="2"/>
                                </Grid.ColumnDefinitions>
                                <Border Opacity="0.12">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                            <GradientStop Color="Black" Offset="0"/>
                                            <GradientStop Offset="1"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                                <Border Grid.Column="2" Opacity="0.12">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                            <GradientStop Color="Black" Offset="1"/>
                                            <GradientStop/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                                <ItemsPresenter Grid.Column="0" Grid.ColumnSpan="3"/>
                            </Grid>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(dx:FloatingContainer.IsActive), RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                <Setter Property="Opacity" Value="0.6"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="WindowButtonStyle"
           BasedOn="{StaticResource WindowButtonDefaultStyle}"
           TargetType="Button">
        <Setter Property="Width" Value="NaN"/>
        <Setter Property="Height" Value="NaN"/>
    </Style>

    <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=MinimizeButtonStyle}"
           BasedOn="{StaticResource WindowButtonStyle}"
           TargetType="{x:Type Button}"/>

    <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=RestoreButtonStyle}"
           BasedOn="{StaticResource WindowButtonStyle}"
           TargetType="{x:Type Button}"/>

    <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=MaximizeButtonStyle}"
           BasedOn="{StaticResource WindowButtonStyle}"
           TargetType="{x:Type Button}"/>

    <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=CloseButtonStyle}"
           BasedOn="{StaticResource WindowButtonStyle}"
           TargetType="{x:Type Button}"/>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.DXTabbedWindow}"
           BasedOn="{StaticResource WindowDefaultStyle}"
           TargetType="{x:Type dx:DXTabbedWindow}">
        <Setter Property="Foreground" Value="{StaticResource Window.Foreground}"/>
    </Style>

</ResourceDictionary>