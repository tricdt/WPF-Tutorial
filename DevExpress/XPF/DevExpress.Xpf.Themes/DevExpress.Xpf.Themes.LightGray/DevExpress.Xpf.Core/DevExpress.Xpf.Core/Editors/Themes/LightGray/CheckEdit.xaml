<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxeh="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
                    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
                    xmlns:dxtEx="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <dxtEx:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.LightGray.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/LightGray/Brushes.xaml"/>
        <dxtEx:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.LightGray.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/Generic/CheckEdit.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="{dxet:CheckEditThemeKey ResourceKey=NormalCheckEditBoxTemplate}" TargetType="{x:Type dxe:CheckEditBox}">
        <Grid Background="Transparent"
              SnapsToDevicePixels="True"
              VerticalAlignment="Center">
            <Grid.Resources>
                <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
                <Visibility x:Key="VisibilityVisible">Visible</Visibility>
            </Grid.Resources>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00"
                                                          Duration="00:00:00.0010000"
                                                          Storyboard.TargetName="border"
                                                          Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FFBEDAF9"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00"
                                                          Duration="00:00:00.0010000"
                                                          Storyboard.TargetName="border"
                                                          Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FFD3E6FB"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Duration="00:00:00.0010000"
                                                           Storyboard.TargetName="border"
                                                           Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Offset)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00"
                                                          Duration="00:00:00.0010000"
                                                          Storyboard.TargetName="border"
                                                          Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FFBBBDC1"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00"
                                                          Duration="00:00:00.0010000"
                                                          Storyboard.TargetName="border"
                                                          Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FFE1E2E4"/>
                            </ColorAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Duration="00:00:00.0010000"
                                                           Storyboard.TargetName="border"
                                                           Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Offset)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Duration="00:00:00.0010000"
                                                           Storyboard.TargetName="CheckElement"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00"
                                                          Duration="00:00:00.0010000"
                                                          Storyboard.TargetName="CheckElement"
                                                          Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FFACAFB4"/>
                            </ColorAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Duration="00:00:00.0010000"
                                                           Storyboard.TargetName="IndeterminateElement"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00"
                                                          Duration="00:00:00.0010000"
                                                          Storyboard.TargetName="IndeterminateElement"
                                                          Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FFACAFB4"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00"
                                                          Duration="00:00:00.0010000"
                                                          Storyboard.TargetName="border1"
                                                          Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FFADB0B5"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00"
                                                          Duration="00:00:00.0010000"
                                                          Storyboard.TargetName="border1"
                                                          Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FFADB0B5"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00"
                                                          Duration="00:00:00.0010000"
                                                          Storyboard.TargetName="border1"
                                                          Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FFADB0B5"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00"
                                                          Duration="00:00:00.0010000"
                                                          Storyboard.TargetName="border"
                                                          Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FFEEEEEE"/>
                            </ColorAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Duration="00:00:00.0010000"
                                                           Storyboard.TargetName="border"
                                                           Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Offset)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00"
                                                          Duration="00:00:00.0010000"
                                                          Storyboard.TargetName="border"
                                                          Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FFEDEDED"/>
                            </ColorAnimationUsingKeyFrames>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="contentPresenter"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.35"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Duration="00:00:00.0010000"
                                                           Storyboard.TargetName="CheckElement"
                                                           Storyboard.TargetProperty="Visibility">
                                <ObjectAnimationUsingKeyFrames.KeyFrames>
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource VisibilityVisible}"/>
                                </ObjectAnimationUsingKeyFrames.KeyFrames>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked"/>
                    <VisualState x:Name="Indeterminate">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Duration="00:00:00.0010000"
                                                           Storyboard.TargetName="IndeterminateElement"
                                                           Storyboard.TargetProperty="Visibility">
                                <ObjectAnimationUsingKeyFrames.KeyFrames>
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource VisibilityVisible}"/>
                                </ObjectAnimationUsingKeyFrames.KeyFrames>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="InternalFocusStates">
                    <VisualState x:Name="InternalFocused">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="FocusElement"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.75"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="InternalUnfocused"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid x:Name="checkbox"
                  Height="19"
                  Margin="{TemplateBinding Padding}"
                  Width="15">
                <Border x:Name="FocusElement"
                        Background="#FFADCCF7"
                        CornerRadius="3"
                        Margin="-2,0"
                        Opacity="0"/>
                <Border x:Name="border1"
                        CornerRadius="2,2,2,2"
                        Height="Auto"
                        Margin="0,2,0,2"
                        Padding="1"
                        Width="Auto">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1.003" StartPoint="0.5,-0.003">
                            <GradientStop Color="#FF414345" Offset="0"/>
                            <GradientStop Color="#FFADB0B5" Offset="1"/>
                            <GradientStop Color="#FF424347" Offset="0.178"/>
                            <GradientStop Color="#FF7E8288" Offset="0.679"/>
                        </LinearGradientBrush>
                    </Border.Background>
                    <Border x:Name="border"
                            CornerRadius="1,1,1,1"
                            Padding="0,0,0,0">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1.003"
                                                 MappingMode="RelativeToBoundingBox"
                                                 StartPoint="0.5,-0.003">
                                <GradientStop Color="#FFD6D6D6" Offset="0"/>
                                <GradientStop Color="#FFFFFFFF" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                </Border>
                <Rectangle x:Name="IndeterminateElement"
                           Fill="#FF343537"
                           Grid.Column="0"
                           Height="3"
                           HorizontalAlignment="Center"
                           IsHitTestVisible="False"
                           VerticalAlignment="Center"
                           Visibility="Collapsed"
                           Width="9"/>
                <Path x:Name="CheckElement"
                      Data="F1 M 402,283L 401,283C 401,283 397,287 394,293C 393,292 391,290 391,290L 390,290C 390,290 393,294 394,298L 395,298C 396,294 398,288 402,283 Z"
                      Fill="#FF343537"
                      Height="15"
                      IsHitTestVisible="False"
                      Margin="1,-1,0,3"
                      Stretch="Fill"
                      Visibility="Collapsed"
                      Width="12"/>
            </Grid>
            <ContentPresenter Name="contentPresenter"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              Grid.Column="1"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="4,0,0,0"
                              RecognizesAccessKey="True"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Visibility="{Binding HasContent, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}">
            </ContentPresenter>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="FlowDirection" Value="RightToLeft">
                <Setter Property="LayoutTransform" TargetName="checkbox">
                    <Setter.Value>
                        <ScaleTransform CenterX="0.5"
                                        CenterY="0.5"
                                        ScaleX="-1"
                                        ScaleY="1"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{dxet:CheckEditThemeKey ResourceKey=CheckEditBoxStyle}"
           BasedOn="{StaticResource BaseCheckEditBoxStyle}"
           TargetType="{x:Type dxe:CheckEditBox}">
        <Setter Property="BorderThickness" Value="1,1,1,1"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="FocusVisualStyle" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).FocusVisualStyle, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="Template" Value="{DynamicResource {dxet:CheckEditThemeKey ResourceKey=NormalCheckEditBoxTemplate}}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="{dxet:CheckEditThemeKey ResourceKey=CheckEditBoxInplaceStyle}"
           BasedOn="{StaticResource BaseCheckEditBoxInplaceStyle}"
           TargetType="{x:Type dxe:CheckEditBox}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="0,-2,0,-2"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template" Value="{DynamicResource {dxet:CheckEditThemeKey ResourceKey=CheckEditBoxTemplate}}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

    <Thickness x:Key="{dxet:CheckEditThemeKey ResourceKey=Padding}">0,1,0,0</Thickness>

    <ControlTemplate x:Key="{dxet:CheckEditThemeKey ResourceKey=EditTemplate}">
        <dxe:CheckEditBox x:Name="PART_Editor" Style="{DynamicResource {dxet:CheckEditThemeKey ResourceKey=CheckEditBoxStyle}}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:CheckEditThemeKey ResourceKey=DisplayInplaceTemplate}">
        <dxe:CheckEditBox x:Name="PART_Editor" Style="{DynamicResource {dxet:CheckEditThemeKey ResourceKey=CheckEditBoxInplaceStyle}}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:CheckEditThemeKey ResourceKey=EditInplaceTemplate}">
        <dxe:CheckEditBox x:Name="PART_Editor" Style="{DynamicResource {dxet:CheckEditThemeKey ResourceKey=CheckEditBoxInplaceStyle}}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:CheckEditThemeKey ResourceKey=Template}" TargetType="{x:Type dxe:CheckEdit}">
        <dxe:EditorControl x:Name="PART_Content"
                           Grid.Column="0"
                           SnapsToDevicePixels="True"
                           Template="{TemplateBinding ActualEditorControlTemplate}">
        </dxe:EditorControl>
        <ControlTemplate.Triggers>
            <Trigger Property="EditMode" Value="InplaceInactive">
                <Setter Property="HorizontalAlignment" Value="Center"/>
            </Trigger>
            <Trigger Property="EditMode" Value="InplaceActive">
                <Setter Property="HorizontalAlignment" Value="Center"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>