<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--BEGIN REPLACE 'TreeView'sdk:TreeView'-->

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=System.Windows.Controls.TreeView}" TargetType="{x:Type TreeView}">
        <Setter Property="Padding" Value="1"/>
        <Setter Property="BorderBrush" Value="#FF9B9B9B"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused"/>
                                <VisualState x:Name="InvalidFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Background="{TemplateBinding Background}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="3">
                                <ScrollViewer x:Name="ScrollViewer"
                                              BorderThickness="0"
                                              CanContentScroll="False"
                                              HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                              IsTabStop="False"
                                              VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                            <Setter Property="CanContentScroll"
                                    TargetName="ScrollViewer"
                                    Value="true"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=System.Windows.Controls.TreeViewItem}" TargetType="{x:Type TreeViewItem}">
        <Setter Property="dx:SvgImageHelper.State" Value="Normal"/>
        <Setter Property="Background" Value="#00000000"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="3,2,3,2"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="Expander"
                                      IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                      IsTabStop="False">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Grid Background="Transparent">
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal"/>
                                                <VisualState x:Name="MouseOver"/>
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0"
                                                                         Storyboard.TargetName="IsUnchecked"
                                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                         To="0.5"/>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed"/>
                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="CheckStates">
                                                <VisualStateGroup.Transitions>
                                                    <VisualTransition GeneratedDuration="0:0:0.5"/>
                                                </VisualStateGroup.Transitions>
                                                <VisualState x:Name="Unchecked"/>
                                                <VisualState x:Name="Checked">
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0"
                                                                         Storyboard.TargetName="IsUnchecked"
                                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                                         To="90"/>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Indeterminate"/>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Grid x:Name="Root"
                                              Background="Transparent"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center">
                                            <Path x:Name="IsUnchecked"
                                                  Data="F1 M109,189 L109,195 L115,192 L109,189 z"
                                                  Fill="#FF6E6E6E"
                                                  Height="6"
                                                  HorizontalAlignment="Left"
                                                  RenderTransformOrigin="0.5,0.5"
                                                  Stretch="Fill"
                                                  UseLayoutRounding="False"
                                                  VerticalAlignment="Top"
                                                  Width="6">
                                                <Path.RenderTransform>
                                                    <RotateTransform/>
                                                </Path.RenderTransform>
                                            </Path>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <Grid Grid.Column="1" Grid.ColumnSpan="2">
                            <Border x:Name="TreeListItemInactiveSelection"
                                    CornerRadius="2"
                                    Opacity="0">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFC8D7E7" Offset="0"/>
                                        <GradientStop Color="#FFC3D3E5" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <Border x:Name="TreeListItemSelection"
                                    CornerRadius="2"
                                    Opacity="0">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                                        <GradientStop Color="#FF6FA2DD"/>
                                        <GradientStop Color="#FF8FB8E5" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <Border x:Name="TreeListItemHoverSelection"
                                    CornerRadius="2"
                                    Opacity="0">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFDBEAFA" Offset="0"/>
                                        <GradientStop Color="#FFCCE1F9" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <!--<Border x:Name="TreeListItemFocusState" Style="{StaticResource FocusTemplate}" Opacity="0" />-->
                        </Grid>
                        <Border x:Name="contentBorder"
                                Background="{TemplateBinding Background}"
                                Grid.Column="1"
                                Grid.ColumnSpan="2"
                                SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="PART_Header"
                                              ContentSource="Header"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost"
                                        Grid.Column="1"
                                        Grid.ColumnSpan="2"
                                        Grid.Row="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter Property="Visibility"
                                    TargetName="ItemsHost"
                                    Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="Visibility"
                                    TargetName="Expander"
                                    Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Opacity"
                                    TargetName="TreeListItemSelection"
                                    Value="1"/>
                            <Setter Property="Opacity"
                                    TargetName="TreeListItemHoverSelection"
                                    Value="0"/>
                            <Setter Property="Foreground" Value="#FF000000"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsSelectionActive" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity"
                                    TargetName="TreeListItemInactiveSelection"
                                    Value="1"/>
                            <Setter Property="Opacity"
                                    TargetName="TreeListItemSelection"
                                    Value="0"/>
                            <Setter Property="Opacity"
                                    TargetName="TreeListItemHoverSelection"
                                    Value="0"/>
                            <Setter Property="Foreground" Value="#FF000000"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           SourceName="contentBorder"
                                           Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity"
                                    TargetName="TreeListItemSelection"
                                    Value="0"/>
                            <Setter Property="Opacity"
                                    TargetName="TreeListItemHoverSelection"
                                    Value="1"/>
                            <Setter Property="Opacity"
                                    TargetName="TreeListItemInactiveSelection"
                                    Value="0"/>
                            <Setter Property="Foreground" Value="#FF000000"/>
                            <Setter Property="dx:SvgImageHelper.State" Value="Hover"/>
                        </MultiTrigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Opacity"
                                    TargetName="TreeListItemSelection"
                                    Value="1"/>
                            <Setter Property="Opacity"
                                    TargetName="TreeListItemHoverSelection"
                                    Value="0"/>
                            <Setter Property="Opacity"
                                    TargetName="TreeListItemInactiveSelection"
                                    Value="0"/>
                            <Setter Property="Foreground" Value="#FF000000"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity"
                                    TargetName="PART_Header"
                                    Value="0.35"/>
                            <Setter Property="Opacity"
                                    TargetName="ItemsHost"
                                    Value="0.35"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--END REPLACE 'TreeView'sdk:TreeView'-->

</ResourceDictionary>