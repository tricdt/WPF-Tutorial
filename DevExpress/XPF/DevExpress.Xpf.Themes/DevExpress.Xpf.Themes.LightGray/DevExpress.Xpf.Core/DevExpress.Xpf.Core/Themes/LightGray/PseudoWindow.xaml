<ResourceDictionary mc:Ignorable="d"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:input="clr-namespace:System.Windows.Input;assembly=PresentationCore"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/DevExpress.Xpf.Themes.LightGray.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/Generic/PseudoWindow.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--InactiveHeaderOpacity-->

    <sys:Double x:Key="{dxt:DXWindowThemeKey ResourceKey=InactiveHeaderOpacity}">0.6</sys:Double>

    <!--Thickness-->

    <Thickness x:Key="{dxt:DXWindowThemeKey ResourceKey=ResizeBorderThickness}">5</Thickness>

    <Thickness x:Key="{dxt:DXWindowThemeKey ResourceKey=BorderEffectOffset}">32</Thickness>

    <Thickness x:Key="{dxt:DXWindowThemeKey ResourceKey=BorderEffectLeftMargins}">0, 80, 0, 80</Thickness>

    <Thickness x:Key="{dxt:DXWindowThemeKey ResourceKey=BorderEffectRightMargins}">0, 80, 0, 80</Thickness>

    <Thickness x:Key="{dxt:DXWindowThemeKey ResourceKey=BorderEffectTopMargins}">0</Thickness>

    <Thickness x:Key="{dxt:DXWindowThemeKey ResourceKey=BorderEffectBottomMargins}">0</Thickness>

    <Thickness x:Key="{dxt:DXWindowThemeKey ResourceKey=SizeGripMargin}">1,0,1,1</Thickness>

    <sys:Double x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingContainerClipCornerRadius}">0</sys:Double>

    <Thickness x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingContainerBodyMargin}">0</Thickness>

    <Thickness x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingContainerBorderPadding}">1</Thickness>

    <Thickness x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderDockMargin}">0</Thickness>

    <Thickness x:Key="{dxt:FloatingContainerThemeKey ResourceKey=HeaderItemsControlMargin}">0</Thickness>

    <!--Brushes-->

    <SolidColorBrush x:Key="{dxt:DXWindowThemeKey ResourceKey=BorderEffectActiveColor}" Color="#FF000000"/>

    <SolidColorBrush x:Key="{dxt:DXWindowThemeKey ResourceKey=BorderEffectInactiveColor}" Color="#FF000000"/>

    <SolidColorBrush x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingContainerActiveBodyBorder}" Color="#FFF7F7F7"/>

    <SolidColorBrush x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingContainerInactiveBodyBorder}" Color="#FFF7F7F7"/>

    <SolidColorBrush x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingContainerBorder}" Color="#FF3D3D3D"/>

    <SolidColorBrush x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingContainerInactiveBorder}" Color="#FF6d6d6d"/>

    <SolidColorBrush x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingContainerBackground}" Color="#FF3D3D3D"/>

    <SolidColorBrush x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingContainerInactiveBackground}" Color="#FF3D3D3D"/>

    <SolidColorBrush x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonForegroundNormalState}" Color="#FFEEEEEE"/>

    <SolidColorBrush x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonForegroundMouseOverState}" Color="#FFFFFFFF"/>

    <SolidColorBrush x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonForegroundPressedState}" Color="#FFFFFFFF"/>

    <SolidColorBrush x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonForegroundNormalState}" Color="#FFEEEEEE"/>

    <SolidColorBrush x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonForegroundMouseOverState}" Color="#FFFFFFFF"/>

    <SolidColorBrush x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonForegroundPressedState}" Color="#FFFFFFFF"/>

    <!--GradientBrushes-->

    <LinearGradientBrush x:Key="{dxt:DXWindowThemeKey ResourceKey=ActiveHeaderBackground}"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FF8A8A8A"/>
        <GradientStop Color="#FF747474" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="{dxt:DXWindowThemeKey ResourceKey=InactiveHeaderBackground}"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFb3b3b3" Offset="0"/>
        <GradientStop Color="#FFa5a5a5" Offset="1"/>
    </LinearGradientBrush>

    <!--DragwigetTemplate-->

    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey  ResourceKey=FloatingContainerDragWidgetTemplate}" TargetType="{x:Type Thumb}">
        <Border Background="Transparent"/>
    </ControlTemplate>

    <!--SizeGripTemplate-->

    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey  ResourceKey=FloatingContainerSizeGripTemplate}" TargetType="{x:Type Thumb}">
        <Grid Background="#00170F0F "
              Height="12"
              Width="12">
            <Viewbox Height="12" Width="12">
                <Canvas Background="#00FFFFFF "
                        Height="12"
                        Width="12">
                    <Path Canvas.Left="2"
                          Canvas.Top="2"
                          Data="F1M0,8.99998L2,8.99998 2,11 0,11 0,8.99998z M3.99997,8.99999L5.99997,8.99999 5.99997,11 3.99997,11 3.99997,8.99999z M7.99998,8.99999L9.99998,8.99999 9.99998,11 7.99998,11 7.99998,8.99999z M7.99998,4.99999L9.99998,4.99999 9.99998,6.99999 7.99998,6.99999 7.99998,4.99999z M7.99999,0.999989L9.99999,0.999989 9.99999,2.99998 7.99999,2.99998 7.99999,0.999989z M4,4.99998L6,4.99998 6,6.99998 4,6.99998 4,4.99998z"
                          Fill="#FFFFFFFF "
                          Height="10"
                          Opacity="0.5"
                          Stretch="Fill"
                          Width="10"/>
                    <Path Canvas.Left="1"
                          Canvas.Top="1"
                          Data="F1M0,7.99999L2,7.99999 2,9.99999 0,9.99999 0,7.99999z M3.99997,8L5.99997,8 5.99997,10 3.99997,10 3.99997,8z M7.99998,8L9.99998,8 9.99998,10 7.99998,10 7.99998,8z M7.99998,4L9.99998,4 9.99998,6 7.99998,6 7.99998,4z M7.99999,0L9.99999,0 9.99999,2 7.99999,2 7.99999,0z M4,4L6,4 6,6 4,6 4,4z"
                          Fill="#FF9199A4 "
                          Height="10"
                          Stretch="Fill"
                          Width="10"/>
                </Canvas>
            </Viewbox>
        </Grid>
    </ControlTemplate>

    <!--CaptionTemplate-->

    <DataTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCaptionTemplate}">
        <Grid x:Name="Root" Height="Auto">
            <dxc:FloatingContainerHeaderPanel>
                <TextBlock x:Name="PART_Text"
                           Background="{x:Null}"
                           Foreground="#FFFFFFFF"
                           IsHitTestVisible="False"
                           Margin="6,3,6,3"
                           Text="{Binding Path=(dxc:FloatingContainer.FloatingContainer).Caption, RelativeSource={RelativeSource AncestorType=ContentPresenter}}"
                           TextTrimming="CharacterEllipsis"
                           VerticalAlignment="Center"/>
            </dxc:FloatingContainerHeaderPanel>
        </Grid>
    </DataTemplate>

    <!--WindowBordersTemplate-->

    <ControlTemplate x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingActiveBorder}">
        <Border Background="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingContainerBorder}}" Padding="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingContainerBorderPadding}}">
            <Border Background="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingContainerBackground}}"/>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingInactiveBorder}">
        <Border Background="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingContainerInactiveBorder}}" Padding="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingContainerBorderPadding}}">
            <Border Background="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingContainerInactiveBackground}}"/>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingBackground}">
        <Border Background="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingContainerActiveBodyBorder}}" Padding="1">
            <Border Background="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingContainerActiveBodyBorder}}"/>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxt:DXWindowThemeKey ResourceKey=InactiveFloatingBackground}">
        <Border Background="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingContainerInactiveBodyBorder}}" Padding="1">
            <Border Background="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingContainerInactiveBodyBorder}}"/>
        </Border>
    </ControlTemplate>

    <!--CloseButtonGlyphTemplate-->

    <DataTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonGlyph}">
        <Grid MinHeight="16" MinWidth="21">
            <Path Data="F1 M 151,217L 152,217L 154.5,219.5L 157,217L 158,217L 158,218L 155.5,220.5L 158,223L 158,224L 157,224L 154.5,221.5L 152,224L 151,224L 151,223L 153.5,220.5L 151,218L 151,217 Z "
                  Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}"
                  Height="7"
                  HorizontalAlignment="Center"
                  Stretch="Fill"
                  UseLayoutRounding="False"
                  VerticalAlignment="Center"
                  Width="7"/>
        </Grid>
    </DataTemplate>

    <!--RestoreButtonGlyphTemplate-->

    <DataTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerRestoreButtonGlyph}">
        <Grid Height="8" Width="9">
            <Path Data="F1 M 223,168L 229,168L 229,173L 223,173L 223,168 Z M 224,170L 224,172L 228,172L 228,170L 224,170 Z "
                  Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}"
                  Margin="3,0,0,3"
                  Stretch="Fill"/>
            <Path Data="F1 M 220,171L 226,171L 226,176L 220,176L 220,171 Z M 221,173L 221,175L 225,175L 225,173L 221,173 Z "
                  Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}"
                  Margin="0,3,3,0"
                  Stretch="Fill"/>
        </Grid>
    </DataTemplate>

    <!--MinimizeButtonGlyphTemplate-->

    <DataTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerMinimizeButtonGlyph}">
        <Grid MinHeight="16" MinWidth="21">
            <Rectangle Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}"
                       Height="2"
                       Stretch="Fill"
                       Width="7"/>
        </Grid>
    </DataTemplate>

    <!--MaximizeButtonGlyphTemplate-->

    <DataTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerMaximizeButtonGlyph}">
        <Grid MinHeight="16" MinWidth="21">
            <Path Data="F1 M 34,17L 43,17L 43,23L 34,23L 34,17 Z M 35,19L 35,22L 42,22L 42,19L 35,19 Z "
                  Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}"
                  Height="6"
                  Stretch="Fill"
                  UseLayoutRounding="False"
                  Width="9"/>
        </Grid>
    </DataTemplate>

    <!--HeaderDefaultButton Normal Background-->

    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonBackgroundNormalState}"/>

    <!--HeaderCloseButton Normal Background-->

    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonBackgroundNormalState}"/>

    <!--HeaderDefaultButton MouseOver Background-->

    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonBackgroundMouseOverState}">
        <Border x:Name="border">
            <Border.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF8EB0D6" Offset="0"/>
                    <GradientStop Color="#FF6082A8" Offset="1"/>
                </LinearGradientBrush>
            </Border.Background>
        </Border>
    </ControlTemplate>

    <!--HeaderCloseButton MouseOver Background-->

    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonBackgroundMouseOverState}">
        <Border x:Name="border">
            <Border.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFD6918E" Offset="0"/>
                    <GradientStop Color="#FFA86360" Offset="1"/>
                </LinearGradientBrush>
            </Border.Background>
        </Border>
    </ControlTemplate>

    <!--HeaderDefaultButton Pressed Background-->

    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonBackgroundPressedState}">
        <Border x:Name="border" Opacity="1">
            <Border.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF4E4E4E" Offset="0"/>
                    <GradientStop Color="#FF404040" Offset="1"/>
                </LinearGradientBrush>
            </Border.Background>
        </Border>
    </ControlTemplate>

    <!--HeaderCloseButton Pressed Background-->

    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonBackgroundPressedState}">
        <Border x:Name="border" Opacity="1">
            <Border.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF4E4E4E" Offset="0"/>
                    <GradientStop Color="#FF4E4E4E" Offset="1"/>
                </LinearGradientBrush>
            </Border.Background>
        </Border>
    </ControlTemplate>

    <!--WindowTemplate-->

    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey  ResourceKey=FloatingContainerWindowTemplate}" TargetType="{x:Type dxc:FloatingContainerControl}">
        <dxc:FloatingWindowContainer Style="{DynamicResource {dxt:FloatingContainerThemeKey  ResourceKey=FloatingContainerStyle}}"/>
    </ControlTemplate>

    <!--AdornerTemplate-->

    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey  ResourceKey=FloatingContainerAdornerTemplate}" TargetType="{x:Type dxc:FloatingContainerControl}">
        <dxc:FloatingAdornerContainer Style="{DynamicResource {dxt:FloatingContainerThemeKey  ResourceKey=FloatingContainerStyle}}"/>
    </ControlTemplate>

    <!--DXWindowIconStyle-->

    <Style x:Key="{dxt:FloatingContainerThemeKey ResourceKey=DXWindowIconStyle}" TargetType="{x:Type Image}">
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Margin" Value="6,3,0,3"/>
        <Setter Property="Stretch" Value="Fill"/>
    </Style>

    <!--Base HeaderItem Style-->

    <Style x:Key="headerItemControlStyle"
           BasedOn="{StaticResource headerItemControlBaseStyle}"
           TargetType="{x:Type dxc:HeaderItemControl}">
        <Setter Property="MinWidth" Value="21"/>
        <Setter Property="MinHeight" Value="16"/>
    </Style>

    <!--FLOATING CONTAINER HEADER ITEMS STYLES-->

    <!--HeaderButtonStyle-->

    <Style x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderButtonStyle}"
           BasedOn="{StaticResource ResourceKey=headerItemControlStyle}"
           TargetType="{x:Type dxc:HeaderItemControl}">
        <Setter Property="Width" Value="21"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
    </Style>

    <!--HeaderCloseButtonStyle-->

    <Style x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderCloseButtonStyle}"
           BasedOn="{StaticResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderButtonStyle}}"
           TargetType="{x:Type dxc:HeaderItemControl}">
        <Setter Property="TemplateProvider" Value="{Binding Path=(dxc:HeaderItemControl.CloseTemplateProvider), RelativeSource={RelativeSource Self}}"/>
    </Style>

    <!--THEMEDWINDOW HEADER ITEMS STYLES-->

    <!--HeaderButtonStyle-->

    <Style x:Key="{dxt:ThemedWindowHeaderItemsThemeKey ResourceKey=HeaderButtonStyle}"
           BasedOn="{StaticResource ResourceKey=headerItemControlStyle}"
           TargetType="{x:Type dxc:HeaderItemControl}">
        <Setter Property="Width" Value="21"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
    </Style>

    <!--HeaderCloseButtonStyle-->

    <Style x:Key="{dxt:ThemedWindowHeaderItemsThemeKey ResourceKey=HeaderCloseButtonStyle}"
           BasedOn="{StaticResource ResourceKey={dxt:ThemedWindowHeaderItemsThemeKey ResourceKey=HeaderButtonStyle}}"
           TargetType="{x:Type dxc:HeaderItemControl}">
    </Style>

</ResourceDictionary>