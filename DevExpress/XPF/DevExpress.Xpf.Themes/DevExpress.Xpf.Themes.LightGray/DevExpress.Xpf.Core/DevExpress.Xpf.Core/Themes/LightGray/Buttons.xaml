<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:s="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Visibility x:Key="Visible">Visible</Visibility>

    <Visibility x:Key="Collapsed">Collapsed</Visibility>

    <s:Double x:Key="{dxdst:DropDownButtonThemeKey ResourceKey=ButtonOpacity}">0.35</s:Double>

    <SolidColorBrush x:Key="{dxdst:DropDownButtonThemeKey ResourceKey=Foreground}" Color="#FF000000"/>

    <SolidColorBrush x:Key="{dxdst:DropDownButtonThemeKey ResourceKey=ArrowForeground}" Color="#FF000000"/>

    <SolidColorBrush x:Key="{dxdst:DropDownButtonThemeKey ResourceKey=PressedForeground}" Color="#FF000000"/>

    <SolidColorBrush x:Key="{dxdst:DropDownButtonThemeKey ResourceKey=CheckedForeground}" Color="#FF000000"/>

    <SolidColorBrush x:Key="{dxdst:DropDownButtonThemeKey ResourceKey=ArrowPressedForeground}" Color="#FF000000"/>

    <SolidColorBrush x:Key="{dxdst:DropDownButtonThemeKey ResourceKey=MouseOverForeground}" Color="#FF000000"/>

    <SolidColorBrush x:Key="{dxdst:DropDownButtonThemeKey ResourceKey=ArrowMouseOverForeground}" Color="#FF000000"/>

    <LinearGradientBrush x:Key="Border.Root.Background"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FF596372"/>
        <GradientStop Color="#FF535962" Offset="1"/>
        <GradientStop Color="#FF414346" Offset="0.5"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Border.Outer.Normal.Background"
                         EndPoint="0.5,0"
                         StartPoint="0.5,1">
        <GradientStop Color="#FFC0D7F4" Offset="0"/>
        <GradientStop Color="#FFE2F0FD" Offset="1"/>
        <GradientStop Color="#FFDBECFF" Offset="0.5"/>
        <GradientStop Color="#FFE4F1FF" Offset="0.5"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Border.Inner.Normal.Background"
                         EndPoint="0.5,0"
                         StartPoint="0.5,1">
        <GradientStop Color="#FFBED9F7" Offset="0"/>
        <GradientStop Color="#FFD7E9FB" Offset="1"/>
        <GradientStop Color="#FFA9C9F7" Offset="0.5"/>
        <GradientStop Color="#FFC8DEF5" Offset="0.5"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Border.Outer.Hover.Background"
                         EndPoint="0.5,0"
                         StartPoint="0.5,1">
        <GradientStop Color="#FFE0EEFF" Offset="0"/>
        <GradientStop Color="#FFEEF6FF" Offset="1"/>
        <GradientStop Color="#FFE4F1FF" Offset="0.5"/>
        <GradientStop Color="#FFF1F8FF" Offset="0.5"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Border.Inner.Hover.Background"
                         EndPoint="0.5,0"
                         StartPoint="0.5,1">
        <GradientStop Color="#FFDDEDFF" Offset="0"/>
        <GradientStop Color="#FFE4F1FF" Offset="1"/>
        <GradientStop Color="#FFCCE0FD" Offset="0.5"/>
        <GradientStop Color="#FFDCEBFB" Offset="0.5"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Border.Outer.Checked.Background"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFC0D7F4" Offset="1"/>
        <GradientStop Color="#FF8898AB"/>
        <GradientStop Color="#FFA4C1E2" Offset="0.5"/>
        <GradientStop Color="#FF84A6CA" Offset="0.2"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Border.Inner.Checked.Background"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFADCCED" Offset="0"/>
        <GradientStop Color="#FF9CB5D2" Offset="1"/>
        <GradientStop Color="#FF95B5DA" Offset="0.5"/>
        <GradientStop Color="#FF83A0D2" Offset="0.5"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Border.Outer.Pressed.Background"
                         EndPoint="0.5,0"
                         StartPoint="0.5,1">
        <GradientStop Color="#FFC0D7F4" Offset="0"/>
        <GradientStop Color="#FF7297C2" Offset="1"/>
        <GradientStop Color="#FFA4C1E2" Offset="0.5"/>
        <GradientStop Color="#FF84A6CA" Offset="0.8"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Border.Inner.Pressed.Background"
                         EndPoint="0.5,0"
                         StartPoint="0.5,1">
        <GradientStop Color="#FFAAC8EA" Offset="0"/>
        <GradientStop Color="#FF81A3D4" Offset="1"/>
        <GradientStop Color="#FF9ABCEE" Offset="0.2"/>
        <GradientStop Color="#FFADC6EA" Offset="0.9"/>
    </LinearGradientBrush>

    <!-- General -->

    <dxcn:RenderTemplate x:Key="{dxdst:DropDownButtonThemeKey ResourceKey=BorderTemplate}">
        <dxcn:RenderPanel>
            <dxcn:RenderBorder Name="Focused"
                               Background="#BFADCCF7"
                               CornerRadius="4"
                               Margin="-2"
                               Visibility="Collapsed"/>
            <dxcn:RenderBorder Name="Defaulted"
                               Background="#BFADCCF7"
                               CornerRadius="4"
                               Margin="-2"
                               Visibility="Collapsed"/>
            <dxcn:RenderBorder Name="Root"
                               Background="{StaticResource Border.Root.Background}"
                               CornerRadius="3"
                               Padding="1">
                <dxcn:RenderPanel>
                    <dxcn:RenderBorder Name="Outer"
                                       Background="{StaticResource Border.Outer.Normal.Background}"
                                       CornerRadius="2"
                                       Padding="1">
                        <dxcn:RenderBorder Name="Inner"
                                           Background="{StaticResource Border.Inner.Normal.Background}"
                                           CornerRadius="2"/>
                    </dxcn:RenderBorder>
                </dxcn:RenderPanel>
            </dxcn:RenderBorder>
        </dxcn:RenderPanel>
        <dxcn:RenderTemplate.Triggers>
            <dxcn:RenderStateGroup Name="FocusStates">
                <dxcn:RenderStateTrigger Name="Unfocused">
                    <dxcn:RenderSetter Property="Visibility"
                                       TargetName="Focused"
                                       Value="{StaticResource Collapsed}"/>
                </dxcn:RenderStateTrigger>
                <dxcn:RenderStateTrigger Name="Focused">
                    <dxcn:RenderSetter Property="Visibility"
                                       TargetName="Focused"
                                       Value="{StaticResource Visible}"/>
                </dxcn:RenderStateTrigger>
            </dxcn:RenderStateGroup>
            <dxcn:RenderStateGroup Name="DefaultStates">
                <dxcn:RenderStateTrigger Name="NotDefaulted">
                    <dxcn:RenderSetter Property="Visibility"
                                       TargetName="Defaulted"
                                       Value="{StaticResource Collapsed}"/>
                </dxcn:RenderStateTrigger>
                <dxcn:RenderStateTrigger Name="IsDefaulted">
                    <dxcn:RenderSetter Property="Visibility"
                                       TargetName="Defaulted"
                                       Value="{StaticResource Visible}"/>
                </dxcn:RenderStateTrigger>
            </dxcn:RenderStateGroup>
            <dxcn:RenderStateGroup Name="VisualStates">
                <dxcn:RenderStateTrigger Name="Normal"/>
                <dxcn:RenderStateTrigger Name="MouseOver">
                    <dxcn:RenderSetter Property="Background"
                                       TargetName="Outer"
                                       Value="{StaticResource Border.Outer.Hover.Background}"/>
                    <dxcn:RenderSetter Property="Background"
                                       TargetName="Inner"
                                       Value="{StaticResource Border.Inner.Hover.Background}"/>
                </dxcn:RenderStateTrigger>
                <dxcn:RenderStateTrigger Name="Pressed">
                    <dxcn:RenderSetter Property="Background"
                                       TargetName="Outer"
                                       Value="{StaticResource Border.Outer.Pressed.Background}"/>
                    <dxcn:RenderSetter Property="Background"
                                       TargetName="Inner"
                                       Value="{StaticResource Border.Inner.Pressed.Background}"/>
                </dxcn:RenderStateTrigger>
                <dxcn:RenderStateTrigger Name="Checked">
                    <dxcn:RenderSetter Property="Background"
                                       TargetName="Outer"
                                       Value="{StaticResource Border.Outer.Checked.Background}"/>
                    <dxcn:RenderSetter Property="Background"
                                       TargetName="Inner"
                                       Value="{StaticResource Border.Inner.Checked.Background}"/>
                </dxcn:RenderStateTrigger>
            </dxcn:RenderStateGroup>
            <dxcn:RenderStateGroup Name="PlacementStates">
                <dxcn:RenderStateTrigger Name="Default"/>
                <dxcn:RenderStateTrigger Name="Left">
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Focused"
                                       Value="4,0,0,4"/>
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Root"
                                       Value="3,0,0,3"/>
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Outer"
                                       Value="2,0,0,2"/>
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Inner"
                                       Value="2,0,0,2"/>
                    <dxcn:RenderSetter Property="Padding"
                                       TargetName="Root"
                                       Value="1,1,0,1"/>
                    <dxcn:RenderSetter Property="Margin"
                                       TargetName="Focused"
                                       Value="-2,-2,0,-2"/>
                </dxcn:RenderStateTrigger>
                <dxcn:RenderStateTrigger Name="Right">
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Focused"
                                       Value="0,4,4,0"/>
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Root"
                                       Value="0,3,3,0"/>
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Outer"
                                       Value="0,2,2,0"/>
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Inner"
                                       Value="0,2,2,0"/>
                    <dxcn:RenderSetter Property="Margin"
                                       TargetName="Focused"
                                       Value="0,-2,-2,-2"/>
                </dxcn:RenderStateTrigger>
                <dxcn:RenderStateTrigger Name="Top">
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Focused"
                                       Value="4,4,0,0"/>
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Root"
                                       Value="3,3,0,0"/>
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Outer"
                                       Value="2,2,0,0"/>
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Inner"
                                       Value="2,2,0,0"/>
                    <dxcn:RenderSetter Property="Padding"
                                       TargetName="Root"
                                       Value="1,1,1,0"/>
                    <dxcn:RenderSetter Property="Margin"
                                       TargetName="Focused"
                                       Value="-2,-2,-2,0"/>
                </dxcn:RenderStateTrigger>
                <dxcn:RenderStateTrigger Name="Bottom">
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Focused"
                                       Value="0,0,4,4"/>
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Root"
                                       Value="0,0,3,3"/>
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Outer"
                                       Value="0,0,2,2"/>
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Inner"
                                       Value="0,0,2,2"/>
                    <dxcn:RenderSetter Property="Margin"
                                       TargetName="Focused"
                                       Value="-2,0,-2,-2"/>
                </dxcn:RenderStateTrigger>
            </dxcn:RenderStateGroup>
        </dxcn:RenderTemplate.Triggers>
    </dxcn:RenderTemplate>

    <!-- Content -->

    <dxcn:RenderTemplate x:Key="{dxdst:DropDownButtonThemeKey ResourceKey=ContentBorderTemplate}">
        <dxcn:RenderPanel>
            <dxcn:RenderBorder Name="Focused"
                               Background="#BFADCCF7"
                               CornerRadius="4"
                               Margin="-2"
                               Visibility="Collapsed"/>
            <dxcn:RenderBorder Name="Defaulted"
                               Background="#BFADCCF7"
                               CornerRadius="4"
                               Margin="-2"
                               Visibility="Collapsed"/>
            <dxcn:RenderBorder Name="Root"
                               Background="{StaticResource Border.Root.Background}"
                               CornerRadius="3"
                               Padding="1">
                <dxcn:RenderPanel>
                    <dxcn:RenderBorder Name="Outer"
                                       Background="{StaticResource Border.Outer.Normal.Background}"
                                       CornerRadius="2"
                                       Padding="1">
                        <dxcn:RenderBorder Name="Inner"
                                           Background="{StaticResource Border.Inner.Normal.Background}"
                                           CornerRadius="2"/>
                    </dxcn:RenderBorder>
                </dxcn:RenderPanel>
            </dxcn:RenderBorder>
        </dxcn:RenderPanel>
        <dxcn:RenderTemplate.Triggers>
            <dxcn:RenderStateGroup Name="FocusStates">
                <dxcn:RenderStateTrigger Name="Unfocused">
                    <dxcn:RenderSetter Property="Visibility"
                                       TargetName="Focused"
                                       Value="{StaticResource Collapsed}"/>
                </dxcn:RenderStateTrigger>
                <dxcn:RenderStateTrigger Name="Focused">
                    <dxcn:RenderSetter Property="Visibility"
                                       TargetName="Focused"
                                       Value="{StaticResource Visible}"/>
                </dxcn:RenderStateTrigger>
            </dxcn:RenderStateGroup>
            <dxcn:RenderStateGroup Name="DefaultStates">
                <dxcn:RenderStateTrigger Name="NotDefaulted">
                    <dxcn:RenderSetter Property="Visibility"
                                       TargetName="Defaulted"
                                       Value="{StaticResource Collapsed}"/>
                </dxcn:RenderStateTrigger>
                <dxcn:RenderStateTrigger Name="IsDefaulted">
                    <dxcn:RenderSetter Property="Visibility"
                                       TargetName="Defaulted"
                                       Value="{StaticResource Visible}"/>
                </dxcn:RenderStateTrigger>
            </dxcn:RenderStateGroup>
            <dxcn:RenderStateGroup Name="VisualStates">
                <dxcn:RenderStateTrigger Name="Normal"/>
                <dxcn:RenderStateTrigger Name="MouseOver">
                    <dxcn:RenderSetter Property="Background"
                                       TargetName="Outer"
                                       Value="{StaticResource Border.Outer.Hover.Background}"/>
                    <dxcn:RenderSetter Property="Background"
                                       TargetName="Inner"
                                       Value="{StaticResource Border.Inner.Hover.Background}"/>
                </dxcn:RenderStateTrigger>
                <dxcn:RenderStateTrigger Name="Pressed">
                    <dxcn:RenderSetter Property="Background"
                                       TargetName="Outer"
                                       Value="{StaticResource Border.Outer.Pressed.Background}"/>
                    <dxcn:RenderSetter Property="Background"
                                       TargetName="Inner"
                                       Value="{StaticResource Border.Inner.Pressed.Background}"/>
                </dxcn:RenderStateTrigger>
                <dxcn:RenderStateTrigger Name="Checked">
                    <dxcn:RenderSetter Property="Background"
                                       TargetName="Outer"
                                       Value="{StaticResource Border.Outer.Checked.Background}"/>
                    <dxcn:RenderSetter Property="Background"
                                       TargetName="Inner"
                                       Value="{StaticResource Border.Inner.Checked.Background}"/>
                </dxcn:RenderStateTrigger>
            </dxcn:RenderStateGroup>
            <dxcn:RenderStateGroup Name="PlacementStates">
                <dxcn:RenderStateTrigger Name="Default"/>
                <dxcn:RenderStateTrigger Name="Left">
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Focused"
                                       Value="4,0,0,4"/>
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Root"
                                       Value="3,0,0,3"/>
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Outer"
                                       Value="2,0,0,2"/>
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Inner"
                                       Value="2,0,0,2"/>
                    <dxcn:RenderSetter Property="Padding"
                                       TargetName="Root"
                                       Value="1,1,0,1"/>
                    <dxcn:RenderSetter Property="Margin"
                                       TargetName="Focused"
                                       Value="-2,-2,0,-2"/>
                </dxcn:RenderStateTrigger>
                <dxcn:RenderStateTrigger Name="Right">
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Focused"
                                       Value="0,4,4,0"/>
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Root"
                                       Value="0,3,3,0"/>
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Outer"
                                       Value="0,2,2,0"/>
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Inner"
                                       Value="0,2,2,0"/>
                    <dxcn:RenderSetter Property="Margin"
                                       TargetName="Focused"
                                       Value="0,-2,-2,-2"/>
                </dxcn:RenderStateTrigger>
                <dxcn:RenderStateTrigger Name="Top">
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Focused"
                                       Value="4,4,0,0"/>
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Root"
                                       Value="3,3,0,0"/>
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Outer"
                                       Value="2,2,0,0"/>
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Inner"
                                       Value="2,2,0,0"/>
                    <dxcn:RenderSetter Property="Padding"
                                       TargetName="Root"
                                       Value="1,1,1,0"/>
                    <dxcn:RenderSetter Property="Margin"
                                       TargetName="Focused"
                                       Value="-2,-2,-2,0"/>
                </dxcn:RenderStateTrigger>
                <dxcn:RenderStateTrigger Name="Bottom">
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Focused"
                                       Value="0,0,4,4"/>
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Root"
                                       Value="0,0,3,3"/>
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Outer"
                                       Value="0,0,2,2"/>
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Inner"
                                       Value="0,0,2,2"/>
                    <dxcn:RenderSetter Property="Margin"
                                       TargetName="Focused"
                                       Value="-2,0,-2,-2"/>
                </dxcn:RenderStateTrigger>
            </dxcn:RenderStateGroup>
        </dxcn:RenderTemplate.Triggers>
    </dxcn:RenderTemplate>

    <!-- Arrow -->

    <dxcn:RenderTemplate x:Key="{dxdst:DropDownButtonThemeKey ResourceKey=ArrowBorderTemplate}">
        <dxcn:RenderPanel>
            <dxcn:RenderBorder Name="Focused"
                               Background="#BFADCCF7"
                               CornerRadius="4"
                               Margin="-2"
                               Visibility="Collapsed"/>
            <dxcn:RenderBorder Name="Defaulted"
                               Background="#BFADCCF7"
                               CornerRadius="4"
                               Margin="-2"
                               Visibility="Collapsed"/>
            <dxcn:RenderBorder Name="Root"
                               Background="{StaticResource Border.Root.Background}"
                               CornerRadius="3"
                               Padding="1">
                <dxcn:RenderPanel>
                    <dxcn:RenderBorder Name="Outer"
                                       Background="{StaticResource Border.Outer.Normal.Background}"
                                       CornerRadius="2"
                                       Padding="1">
                        <dxcn:RenderBorder Name="Inner"
                                           Background="{StaticResource Border.Inner.Normal.Background}"
                                           CornerRadius="2"/>
                    </dxcn:RenderBorder>
                </dxcn:RenderPanel>
            </dxcn:RenderBorder>
        </dxcn:RenderPanel>
        <dxcn:RenderTemplate.Triggers>
            <dxcn:RenderStateGroup Name="FocusStates">
                <dxcn:RenderStateTrigger Name="Unfocused">
                    <dxcn:RenderSetter Property="Visibility"
                                       TargetName="Focused"
                                       Value="{StaticResource Collapsed}"/>
                </dxcn:RenderStateTrigger>
                <dxcn:RenderStateTrigger Name="Focused">
                    <dxcn:RenderSetter Property="Visibility"
                                       TargetName="Focused"
                                       Value="{StaticResource Visible}"/>
                </dxcn:RenderStateTrigger>
            </dxcn:RenderStateGroup>
            <dxcn:RenderStateGroup Name="DefaultStates">
                <dxcn:RenderStateTrigger Name="NotDefaulted">
                    <dxcn:RenderSetter Property="Visibility"
                                       TargetName="Defaulted"
                                       Value="{StaticResource Collapsed}"/>
                </dxcn:RenderStateTrigger>
                <dxcn:RenderStateTrigger Name="IsDefaulted">
                    <dxcn:RenderSetter Property="Visibility"
                                       TargetName="Defaulted"
                                       Value="{StaticResource Visible}"/>
                </dxcn:RenderStateTrigger>
            </dxcn:RenderStateGroup>
            <dxcn:RenderStateGroup Name="VisualStates">
                <dxcn:RenderStateTrigger Name="Normal"/>
                <dxcn:RenderStateTrigger Name="MouseOver">
                    <dxcn:RenderSetter Property="Background"
                                       TargetName="Outer"
                                       Value="{StaticResource Border.Outer.Hover.Background}"/>
                    <dxcn:RenderSetter Property="Background"
                                       TargetName="Inner"
                                       Value="{StaticResource Border.Inner.Hover.Background}"/>
                </dxcn:RenderStateTrigger>
                <dxcn:RenderStateTrigger Name="Pressed">
                    <dxcn:RenderSetter Property="Background"
                                       TargetName="Outer"
                                       Value="{StaticResource Border.Outer.Pressed.Background}"/>
                    <dxcn:RenderSetter Property="Background"
                                       TargetName="Inner"
                                       Value="{StaticResource Border.Inner.Pressed.Background}"/>
                </dxcn:RenderStateTrigger>
                <dxcn:RenderStateTrigger Name="Checked">
                    <dxcn:RenderSetter Property="Background"
                                       TargetName="Outer"
                                       Value="{StaticResource Border.Outer.Checked.Background}"/>
                    <dxcn:RenderSetter Property="Background"
                                       TargetName="Inner"
                                       Value="{StaticResource Border.Inner.Checked.Background}"/>
                </dxcn:RenderStateTrigger>
            </dxcn:RenderStateGroup>
            <dxcn:RenderStateGroup Name="PlacementStates">
                <dxcn:RenderStateTrigger Name="Default"/>
                <dxcn:RenderStateTrigger Name="Left">
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Focused"
                                       Value="4,0,0,4"/>
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Root"
                                       Value="3,0,0,3"/>
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Outer"
                                       Value="2,0,0,2"/>
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Inner"
                                       Value="2,0,0,2"/>
                    <dxcn:RenderSetter Property="Padding"
                                       TargetName="Root"
                                       Value="1,1,0,1"/>
                    <dxcn:RenderSetter Property="Margin"
                                       TargetName="Focused"
                                       Value="-2,-2,0,-2"/>
                </dxcn:RenderStateTrigger>
                <dxcn:RenderStateTrigger Name="Right">
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Focused"
                                       Value="0,4,4,0"/>
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Root"
                                       Value="0,3,3,0"/>
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Outer"
                                       Value="0,2,2,0"/>
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Inner"
                                       Value="0,2,2,0"/>
                    <dxcn:RenderSetter Property="Margin"
                                       TargetName="Focused"
                                       Value="0,-2,-2,-2"/>
                </dxcn:RenderStateTrigger>
                <dxcn:RenderStateTrigger Name="Top">
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Focused"
                                       Value="4,4,0,0"/>
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Root"
                                       Value="3,3,0,0"/>
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Outer"
                                       Value="2,2,0,0"/>
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Inner"
                                       Value="2,2,0,0"/>
                    <dxcn:RenderSetter Property="Padding"
                                       TargetName="Root"
                                       Value="1,1,1,0"/>
                    <dxcn:RenderSetter Property="Margin"
                                       TargetName="Focused"
                                       Value="-2,-2,-2,0"/>
                </dxcn:RenderStateTrigger>
                <dxcn:RenderStateTrigger Name="Bottom">
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Focused"
                                       Value="0,0,4,4"/>
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Root"
                                       Value="0,0,3,3"/>
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Outer"
                                       Value="0,0,2,2"/>
                    <dxcn:RenderSetter Property="CornerRadius"
                                       TargetName="Inner"
                                       Value="0,0,2,2"/>
                    <dxcn:RenderSetter Property="Margin"
                                       TargetName="Focused"
                                       Value="-2,0,-2,-2"/>
                </dxcn:RenderStateTrigger>
            </dxcn:RenderStateGroup>
        </dxcn:RenderTemplate.Triggers>
    </dxcn:RenderTemplate>

    <!-- Separator -->

    <dxcn:RenderTemplate x:Key="{dxdst:DropDownButtonThemeKey ResourceKey=SeparatorBorderTemplate}">
        <dxcn:RenderPanel/>
    </dxcn:RenderTemplate>

    <dx:WpfSvgPalette x:Key="{dxdst:BrushesThemeKey ResourceKey=ContrastSvgPalette}"/>

    <dx:WpfSvgPalette x:Key="{dxdst:BrushesThemeKey ResourceKey=SvgPalette}">
        <SolidColorBrush x:Key="BlackColor">#FF394251</SolidColorBrush>
        <SolidColorBrush x:Key="WhiteColor">#FFE3E8EF</SolidColorBrush>
        <SolidColorBrush x:Key="RedColor">#FFB92200</SolidColorBrush>
        <SolidColorBrush x:Key="YellowColor">#FFB98E00</SolidColorBrush>
        <SolidColorBrush x:Key="GreenColor">#FF007E65</SolidColorBrush>
        <SolidColorBrush x:Key="BlueColor">#FF00639A</SolidColorBrush>
    </dx:WpfSvgPalette>

</ResourceDictionary>