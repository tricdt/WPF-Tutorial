<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxp="http://schemas.devexpress.com/winfx/2008/xaml/docking/platform"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/docking/themekeys"
                    xmlns:local="http://schemas.devexpress.com/winfx/2008/xaml/docking"
                    xmlns:ve="http://schemas.devexpress.com/winfx/2008/xaml/docking/visualelements"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- TabbedPane Theme Elements -->

    <Thickness x:Key="{dxt:TabbedPaneElementsThemeKey ResourceKey=TabHeadersBorderMargin}">0</Thickness>

    <Thickness x:Key="{dxt:TabbedPaneElementsThemeKey ResourceKey=TabHeadersClipMargin}">0,-2</Thickness>

    <Thickness x:Key="{dxt:TabbedPaneElementsThemeKey ResourceKey=TabHeadersBorderThickness}">0,1,0,0</Thickness>

    <SolidColorBrush x:Key="{dxt:TabbedPaneElementsThemeKey ResourceKey=TabHeadersBackground}" Color="Transparent"/>

    <dx:WpfSvgPalette x:Key="{dxt:TabbedPaneElementsThemeKey ResourceKey=SvgPalette}"/>

    <ControlTemplate x:Key="{dxt:TabbedPaneElementsThemeKey ResourceKey=PageHeader}" TargetType="ve:TabbedPaneItem">
        <Border x:Name="TabItemHeader"
                Margin="0,0,1,0"
                ve:DockPane.HitTestType="Header"
                Visibility="{Binding Path=Visibility}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="IsHover"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="IsUnchecked"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Normal"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="SelectionStates">
                    <VisualState x:Name="EmptySelectionState"/>
                    <VisualState x:Name="Selected">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="IsChecked"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="IsUnchecked"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0"/>
                            <!-- <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="IsUnchecked" dxi:ValueSetter.Visibility="Collapsed"/> -->
                            <!-- <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="IsHover" dxi:ValueSetter.Visibility="Collapsed"/> -->
                            <!-- <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="IsPressed" dxi:ValueSetter.Visibility="Collapsed"/> -->
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unselected"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
                <Border x:Name="IsUnchecked"
                        Background="#FF9B9B9B"
                        CornerRadius="0,0,3,3"
                        Padding="{TemplateBinding ActualBorderThickness}">
                    <Border x:Name="IsUncheckedBack"
                            Background="#FFD5D8E0"
                            CornerRadius="0,0,2,2"/>
                </Border>
                <Border x:Name="IsHover"
                        Background="#FF9B9B9B"
                        CornerRadius="0,0,3,3"
                        Opacity="0"
                        Padding="{TemplateBinding ActualBorderThickness}">
                    <Border x:Name="IsHoverBack" CornerRadius="0,0,2,2">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFCDE1F9" Offset="0"/>
                                <GradientStop Color="#FFBFDAF7" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                </Border>
                <!-- <Border x:Name="IsPressed" Background="#FF858890" CornerRadius="0,0,3,3" Opacity="0" Padding="{TemplateBinding ActualBorderThickness}"> -->
                <!--     <Border Background="#FFA5A8B0" Margin="0,0,0,0" CornerRadius="0,0,2,2" x:Name="IsPressedBack" /> -->
                <!-- </Border> -->
                <Border x:Name="IsChecked"
                        Background="#FF9B9B9B"
                        CornerRadius="0,0,3,3"
                        Opacity="0"
                        Padding="{TemplateBinding ActualBorderThickness}">
                    <Border x:Name="IsCheckedBack"
                            Background="White"
                            CornerRadius="0,0,2,2"
                            Margin="0,-1,0,0"/>
                </Border>
                <ve:TemplatedTabCaptionControl x:Name="PART_CaptionControlPresenter"
                                               LayoutItem="{Binding}"
                                               Padding="4,2,4,4"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ViewStyle" Value="Light">
                <Setter Property="CornerRadius"
                        TargetName="IsUnchecked"
                        Value="0"/>
                <Setter Property="CornerRadius"
                        TargetName="IsUncheckedBack"
                        Value="0"/>
                <Setter Property="CornerRadius"
                        TargetName="IsHover"
                        Value="0"/>
                <Setter Property="CornerRadius"
                        TargetName="IsHoverBack"
                        Value="0"/>
                <!-- <Setter Property="CornerRadius" TargetName="IsPressed" Value="0"/> -->
                <!-- <Setter Property="CornerRadius" TargetName="IsPressedBack" Value="0"/> -->
                <Setter Property="CornerRadius"
                        TargetName="IsChecked"
                        Value="0"/>
                <Setter Property="CornerRadius"
                        TargetName="IsCheckedBack"
                        Value="0"/>
                <Setter Property="Margin"
                        TargetName="TabItemHeader"
                        Value="0,0,-1,0"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxt:TabbedPaneElementsThemeKey ResourceKey=TabContainerTemplate}" TargetType="ve:PanelTabContainer">
        <Grid Background="Transparent" ve:DockPane.HitTestType="Bounds">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="HeaderStates">
                    <VisualState x:Name="HeaderVisible"/>
                    <VisualState x:Name="HeaderHidden">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxi:ValueSetter.Thickness="0"
                                                           Storyboard.TargetName="PART_ControlBox"
                                                           Storyboard.TargetProperty="Margin"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Border x:Name="PageHeaders"
                    Background="#FFEAEDF3"
                    BorderBrush="#FF9B9B9B"
                    BorderThickness="{TemplateBinding ActualTabHeaderBorderThickness}"
                    Grid.Row="1"
                    Margin="{DynamicResource {dxt:TabbedPaneElementsThemeKey ResourceKey=TabHeadersBorderMargin}}">
                <ve:DockingSplitLayoutPanel Background="#FFEAEDF3"
                                            Content1Location="Left"
                                            MaximizeContent1="True">
                    <ve:DockingSplitLayoutPanel.Content1>
                        <ItemsPresenter x:Name="PART_HeadersPanelPresenter"/>
                    </ve:DockingSplitLayoutPanel.Content1>
                    <ve:DockingSplitLayoutPanel.Content2>
                        <ve:TabHeaderControlBoxControl x:Name="PART_ControlBox"
                                                       ButtonHeight="16"
                                                       ButtonStyle="{DynamicResource {dxt:TabbedPaneElementsThemeKey ResourceKey=TabbedPaneButtonStyle}}"
                                                       ButtonWidth="16"
                                                       Grid.Column="1"
                                                       LayoutItem="{Binding}"
                                                       Margin="0,4,4,2"
                                                       ScrollNextButtonTemplate="{DynamicResource {dxt:DocumentPaneElementsThemeKey ResourceKey=ScrollNextButton}}"
                                                       ScrollPrevButtonTemplate="{DynamicResource {dxt:DocumentPaneElementsThemeKey ResourceKey=ScrollPrevButton}}"
                                                       ve:DockPane.HitTestType="ControlBox"/>
                    </ve:DockingSplitLayoutPanel.Content2>
                </ve:DockingSplitLayoutPanel>
            </Border>
            <Border x:Name="PART_SelectedPage">
                <ve:LayoutTabFastRenderPanel x:Name="PART_FastRenderPanel" ve:DockPane.HitTestType="Content"/>
            </Border>
        </Grid>
    </ControlTemplate>

    <!-- TabbedPane Theme Elements -->

</ResourceDictionary>