<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxn="http://schemas.devexpress.com/winfx/2008/xaml/navbar"
                    xmlns:dxnt="http://schemas.devexpress.com/winfx/2008/xaml/navbar/themekeys"
                    xmlns:interop="clr-namespace:System.Windows.Interop;assembly=PresentationFramework"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xpf="clr-namespace:DevExpress.Xpf.NavBar.Platform;assembly=DevExpress.Xpf.NavBar.v24.1">

    <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

    <dx:BoolToVisibilityInverseConverter x:Key="BoolToVisibilityInverseConverter"/>

    <dxn:BooleanToOpacityConverter x:Key="BooleanToOpacityConverter"/>

    <Style x:Key="{dxnt:NavigationPaneHeaderThemeKey ResourceKey=OverflowButtonHeaderStyle}" TargetType="dx:XPFContentPresenter">
        <Setter Property="dxn:NavBarViewBase.ImageSettings" Value="{Binding ActualImageSettings}"/>
        <Setter Property="dxn:NavBarViewBase.LayoutSettings" Value="{Binding ActualLayoutSettings}"/>
        <Setter Property="dxn:NavBarViewBase.DisplayMode" Value="{Binding ActualDisplayMode}"/>
    </Style>

    <Style x:Key="{dxnt:NavigationPaneHeaderThemeKey ResourceKey=GroupButtonHeaderStyle}" TargetType="dx:XPFContentPresenter">
        <Setter Property="dxn:NavBarViewBase.ImageSettings" Value="{Binding ActualImageSettings}"/>
        <Setter Property="dxn:NavBarViewBase.LayoutSettings" Value="{Binding ActualLayoutSettings}"/>
        <Setter Property="dxn:NavBarViewBase.DisplayMode" Value="{Binding ActualDisplayMode}"/>
    </Style>

    <ControlTemplate x:Key="{dxnt:NavigationPanePopupThemeKey ResourceKey=ScrollUpButtonTemplate}" TargetType="dxn:NavBarRepeatButton">
        <dx:LayoutTransformPanel Orientation="{TemplateBinding ItemsPanelOrientation}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                           Storyboard.TargetName="border2"
                                                           Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFD2D2D2" Offset="0"/>
                                            <GradientStop Color="#FFCFCFCF" Offset="1"/>
                                        </LinearGradientBrush>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                           Storyboard.TargetName="border2"
                                                           Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFC8C8C8" Offset="0"/>
                                            <GradientStop Color="#FFC7C7C7" Offset="1"/>
                                        </LinearGradientBrush>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                           Storyboard.TargetName="path"
                                                           Storyboard.TargetProperty="Fill">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="#FFF3F8FF"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="path" Storyboard.TargetProperty="Opacity">
                                <SplineDoubleKeyFrame KeyTime="0" Value=".25"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="border1"
                    Background="#FF9B9B9B"
                    CornerRadius="0,0,0,0"
                    Padding="0,0,0,1">
                <Border x:Name="border2" CornerRadius="0,0,0,0">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFCECECE" Offset="0"/>
                            <GradientStop Color="#FFC9C9C9" Offset="1"/>
                        </LinearGradientBrush>
                    </Border.Background>
                    <Path x:Name="path"
                          Data="F1M1257,761L1258,761 1262,766 1253,766 1257,761z"
                          Fill="#FF5A5A5A"
                          Height="5"
                          Margin="0,2,0,2"
                          Stretch="Fill"
                          Width="9"/>
                </Border>
            </Border>
        </dx:LayoutTransformPanel>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxnt:NavigationPanePopupThemeKey ResourceKey=ScrollDownButtonTemplate}" TargetType="dxn:NavBarRepeatButton">
        <dx:LayoutTransformPanel Orientation="{TemplateBinding ItemsPanelOrientation}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                           Storyboard.TargetName="border2"
                                                           Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFD2D2D2" Offset="0"/>
                                            <GradientStop Color="#FFCFCFCF" Offset="1"/>
                                        </LinearGradientBrush>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                           Storyboard.TargetName="path"
                                                           Storyboard.TargetProperty="Fill">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="#FFF2F7FF"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                           Storyboard.TargetName="border2"
                                                           Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFC8C8C8" Offset="0"/>
                                            <GradientStop Color="#FFC7C7C7" Offset="1"/>
                                        </LinearGradientBrush>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                           Storyboard.TargetName="path"
                                                           Storyboard.TargetProperty="Fill">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="#FFF3F8FF"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="path" Storyboard.TargetProperty="Opacity">
                                <SplineDoubleKeyFrame KeyTime="0" Value=".25"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="border1"
                    Background="#FF9B9B9B"
                    CornerRadius="0,0,0,0"
                    Padding="0,1,0,0">
                <Border x:Name="border2" CornerRadius="0,0,0,0">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFCECECE" Offset="0"/>
                            <GradientStop Color="#FFC9C9C9" Offset="1"/>
                        </LinearGradientBrush>
                    </Border.Background>
                    <Path x:Name="path"
                          Data="F1M1263,769L1262,769 1258,764 1267,764 1263,769z"
                          Fill="#FF5A5A5A"
                          Height="5"
                          Margin="0,2,0,2"
                          Stretch="Fill"
                          Width="9"/>
                </Border>
            </Border>
        </dx:LayoutTransformPanel>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxnt:NavigationPaneSplitterThemeKey ResourceKey=SplitterTemplate}" TargetType="dxn:NavPaneSplitter">
        <Border x:Name="border1"
                Background="#FFADADAD"
                MinHeight="0"
                MinWidth="0"
                Padding="1,1,1,1">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="SplitterBehaviorStates">
                    <VisualState x:Name="WithGroups"/>
                    <VisualState x:Name="WithoutGroups">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                           Storyboard.TargetName="border1"
                                                           Storyboard.TargetProperty="Padding">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Thickness>1,1,1,0</Thickness>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="OrientationStates">
                    <VisualState x:Name="Vertical"/>
                    <VisualState x:Name="Horizontal"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="DraggingStates">
                    <VisualState x:Name="NotDragging"/>
                    <VisualState x:Name="Dragging"></VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ShowBorderStates">
                    <VisualState x:Name="VerticalWithBorder"/>
                    <VisualState x:Name="HorizontalWithBorder"/>
                    <VisualState x:Name="VerticalWithoutBorder">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                           dxcn:ValueSetter.Thickness="0,1,0,1"
                                                           Storyboard.TargetName="border1"
                                                           Storyboard.TargetProperty="Padding"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="HorizontalWithoutBorder">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                           dxcn:ValueSetter.Thickness="1,0,1,0"
                                                           Storyboard.TargetName="border1"
                                                           Storyboard.TargetProperty="Padding"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <dx:LayoutTransformPanel Orientation="{TemplateBinding Orientation}">
                <Border x:Name="border" Padding="0,0,0,0">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFD7D7D7" Offset="0"/>
                            <GradientStop Color="#FFC9C9C9" Offset="1"/>
                        </LinearGradientBrush>
                    </Border.Background>
                    <StackPanel Height="Auto"
                                HorizontalAlignment="Center"
                                Margin="0,2,0,2"
                                Orientation="Vertical"
                                VerticalAlignment="Center"
                                Width="22">
                        <Rectangle Fill="#FFADADAD"
                                   Height="1"
                                   Stroke="{x:Null}"
                                   StrokeThickness="0"
                                   Width="22"/>
                        <Rectangle Height="1"
                                   Stroke="{x:Null}"
                                   StrokeThickness="0"
                                   Width="22"/>
                        <Rectangle Fill="#FFADADAD"
                                   Height="1"
                                   Stroke="{x:Null}"
                                   StrokeThickness="0"
                                   Width="22"/>
                    </StackPanel>
                </Border>
            </dx:LayoutTransformPanel>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxnt:NavigationPaneHeaderThemeKey ResourceKey=ExpandButtonTemplate}" TargetType="dxn:NavPaneExpandButton">
        <Border x:Name="item"
                Background="Transparent"
                Height="16"
                Margin="5,0,5,0"
                RenderTransformOrigin="0.5,0.5"
                Width="16">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                           Storyboard.TargetName="path"
                                                           Storyboard.TargetProperty="Fill">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="#FF5A5A5A"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                           Storyboard.TargetName="path"
                                                           Storyboard.TargetProperty="Fill">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="#FF5A5A5A"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ExpandModeStates">
                    <VisualState x:Name="NormalMode"/>
                    <VisualState x:Name="Invert">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="glyphBorder" Storyboard.TargetProperty="RenderTransform">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <ScaleTransform ScaleX="-1"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ExpandStates">
                    <VisualState x:Name="Expanded"/>
                    <VisualState x:Name="Collapsed"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="glyphBorder"
                    HorizontalAlignment="Stretch"
                    RenderTransformOrigin="0.5,0.5"
                    VerticalAlignment="Stretch">
                <Path x:Name="path"
                      Data="F1M382,291L376,288 376,295 382,292 382,291z"
                      Fill="#FF888888"
                      Height="7"
                      HorizontalAlignment="Center"
                      Margin="0,0,0,1"
                      RenderTransformOrigin="0.5,0.5"
                      Stretch="Fill"
                      VerticalAlignment="Center"
                      Width="6">
                    <Path.RenderTransform>
                        <TransformGroup>
                            <RotateTransform>
                                <RotateTransform.Angle>
                                    <Binding ConverterParameter="180" Path="NavBar.View.(dxn:NavBarAnimationOptions.AnimationProgress)">
                                        <Binding.Converter>
                                            <dx:MultiplyConverter/>
                                        </Binding.Converter>
                                    </Binding>
                                </RotateTransform.Angle>
                            </RotateTransform>
                        </TransformGroup>
                    </Path.RenderTransform>
                </Path>
            </Border>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxnt:NavigationPanePopupThemeKey ResourceKey=SizeGripTemplate}" TargetType="dxn:NavPanePopupSizeGrip">
        <Border Background="#00FFFFFF">
            <Grid Height="10"
                  HorizontalAlignment="Right"
                  Margin="0,0,1,1"
                  VerticalAlignment="Bottom"
                  Width="10">
                <Rectangle Fill="#FF888888"
                           Height="2"
                           HorizontalAlignment="Right"
                           Margin="0,0,0,0"
                           Stretch="Fill"
                           VerticalAlignment="Bottom"
                           Width="2"/>
                <Rectangle Fill="#FF888888"
                           HorizontalAlignment="Right"
                           Margin="0,4,0,4"
                           Stretch="Fill"
                           VerticalAlignment="Stretch"
                           Width="2"/>
                <Rectangle Fill="#FF888888"
                           Height="2"
                           HorizontalAlignment="Stretch"
                           Margin="4,0,4,0"
                           Stretch="Fill"
                           VerticalAlignment="Bottom"/>
            </Grid>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxnt:NavigationPanePopupThemeKey ResourceKey=PopupSideThumbTemplate}" TargetType="dxn:NavPanePopupSizeGrip">
        <Border Background="Transparent"/>
    </ControlTemplate>

    <Style x:Key="{dxnt:NavigationPanePopupThemeKey ResourceKey=PopupSideThumbStyle}" TargetType="dxn:NavPanePopupSizeGrip">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Height" Value="12"/>
        <Setter Property="Width" Value="12"/>
    </Style>

    <ControlTemplate x:Key="{dxnt:NavigationPaneOverflowPanelThemeKey ResourceKey=DropDownButtonTemplate}" TargetType="dxn:NavPaneDropDownMenuControl">
        <Border x:Name="border"
                Background="#00FFFFFF"
                CornerRadius="1,1,4,1"
                Height="Auto"
                HorizontalAlignment="Stretch"
                Padding="13,5,4,4"
                VerticalAlignment="Stretch"
                Width="Auto">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                    <VisualState Name="Normal"/>
                    <VisualState Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                           Storyboard.TargetName="path"
                                                           Storyboard.TargetProperty="Fill">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="#FF5A5A5A"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                           Storyboard.TargetName="path"
                                                           Storyboard.TargetProperty="Fill">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="#FF888888"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Path x:Name="path"
                  Data="F1M382,291L376,288 376,295 382,292 382,291z"
                  Fill="#FF888888"
                  Height="6"
                  Stretch="Fill"
                  Width="4">
                <Path.RenderTransform>
                    <RotateTransform Angle="90"/>
                </Path.RenderTransform>
            </Path>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxnt:NavigationPanePopupThemeKey ResourceKey=PopupWindowFrameTemplate}" TargetType="dxn:NavPanePopupWindowFrame">
        <Grid>
            <Border Background="#FFF3F3F3"
                    BorderBrush="#FF9B9B9B"
                    BorderThickness="1,1,1,1"
                    Padding="4,4,4,4">
                <Border Background="#FFFFFFFF"
                        BorderBrush="#FFADADAD"
                        BorderThickness="1,1,1,1"
                        CornerRadius="0,0,0,0"/>
            </Border>
            <ContentPresenter Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              Margin="6,6,6,6"/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxnt:NavigationPanePopupThemeKey ResourceKey=PopupWindowContentTemplate}" TargetType="dxn:NavPanePopupWindowContent">
        <dxn:NavPanePopupWindowFrame>
            <Grid Background="{x:Null}">
                <dxn:ScrollControl x:Name="scrollControl"
                                   dx:FocusHelper2.Focusable="False"
                                   ScrollBarControlTemplate="{DynamicResource {dxnt:CommonElementsThemeKey ResourceKey=NormalScrollTemplate}}"
                                   ScrollButtonsControlTemplate="{DynamicResource {dxnt:NavigationPanePopupThemeKey ResourceKey=SmoothScrollTemplate}}">
                    <!--ONLY SL<dx:BackgroundPanel.PatchForeground>True</dx:BackgroundPanel.PatchForeground>ONLY SL-->
                    <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                </dxn:ScrollControl>
                <dxn:NavPanePopupSizeGrip Grid.Row="1"
                                          Style="{DynamicResource {dxnt:NavigationPanePopupThemeKey ResourceKey=PopupSideThumbStyle}}"
                                          Template="{DynamicResource {dxnt:NavigationPanePopupThemeKey IsVisibleInBlend=True, ResourceKey=SizeGripTemplate}}"/>
            </Grid>
        </dxn:NavPanePopupWindowFrame>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxnt:NavigationPaneGroupClientThemeKey ResourceKey=CollapsedActiveGroupTemplate}" TargetType="dxn:CollapsedActiveGroup">
        <Border x:Name="border1"
                Background="#FF9B9B9B"
                Padding="1,0,1,0">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                    <VisualState Name="Normal"/>
                    <VisualState Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                           Storyboard.TargetName="border"
                                                           Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <SolidColorBrush Color="#FFDAEAFB"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="ForegroundStates">
                    <VisualState Name="NormalForeground"/>
                    <VisualState Name="CustomForeground">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                           Storyboard.TargetName="content"
                                                           Storyboard.TargetProperty="Foreground">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource {dxnt:NavigationPaneGroupClientThemeKey ResourceKey=CollapsedGroupForegroundBrush}}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="OrientationStates">
                    <VisualState Name="Vertical"/>
                    <VisualState Name="Horizontal"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="border" Background="#FFF3F3F3">
                <Grid>
                    <dxn:ImageAndTextContentPresenter x:Name="content"
                                                      Content="{Binding Converter={dxn:FrameworkElementInfoSLCompatibilityConverter}}"
                                                      Foreground="{TemplateBinding Foreground}"
                                                      HorizontalAlignment="Center"
                                                      ImageFallbackSize="24"
                                                      Orientation="{Binding NavBar.View.Orientation}"
                                                      Style="{DynamicResource {dxnt:NavBarGroupControlThemeKey ResourceKey=HeaderStyle}}"
                                                      VerticalAlignment="Center">
                        <!--ONLY SL
                    <dxn:ImageAndTextContentPresenter.ContentTemplateSelector>
                        <Binding Path="ActualHeaderTemplateSelector"/>
                    </dxn:ImageAndTextContentPresenter.ContentTemplateSelector>ONLY SL-->
                    </dxn:ImageAndTextContentPresenter>
                </Grid>
            </Border>
        </Border>
    </ControlTemplate>

    <!--BEGIN WPF-->

    <Style x:Key="{dxnt:NavigationPaneThemeKey ResourceKey=ItemBackgroundStyle}" TargetType="dxn:CollapsedActiveGroupItemContentPresenter">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dxn:CollapsedActiveGroupItemContentPresenter">
                    <Grid>
                        <Border x:Name="selected"
                                Background="#FFCCCCCC"
                                CornerRadius="3"
                                Height="Auto"
                                Opacity="0"
                                Padding="1"
                                Width="Auto">
                            <Border CornerRadius="2" Width="Auto">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFEBEBEB" Offset="0"/>
                                        <GradientStop Color="#FFE5E5E5" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                        </Border>
                        <Border x:Name="hover"
                                Background="#FFC5D7EC"
                                CornerRadius="3"
                                Height="Auto"
                                Opacity="0"
                                Padding="1"
                                Width="Auto">
                            <Border CornerRadius="2">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFDCEBFB" Offset="0"/>
                                        <GradientStop Color="#FFCDE2FA" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                        </Border>
                        <Border x:Name="pressed"
                                Background="#FFCCCCCC"
                                CornerRadius="3"
                                Height="Auto"
                                Opacity="0"
                                Padding="1"
                                Width="Auto">
                            <Border CornerRadius="2" Width="Auto">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFEBEBEB" Offset="0"/>
                                        <GradientStop Color="#FFE5E5E5" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                        </Border>
                        <ContentPresenter/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity"
                                    TargetName="hover"
                                    Value="1"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Opacity"
                                    TargetName="pressed"
                                    Value="1"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Opacity"
                                    TargetName="selected"
                                    Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="{dxnt:NavigationPaneThemeKey ResourceKey=CollapsedActiveGroupBackgroundTemplate}">
        <Border Background="#FF9B9B9B" Padding="1,0,1,0">
            <Border Background="#FFF3F3F3"/>
        </Border>
    </ControlTemplate>

    <!--END WPF-->

    <DataTemplate x:Key="{dxnt:NavigationPaneButtonPanelThemeKey ResourceKey=GroupContentTemplate}">
        <dxn:NavPaneImageAndTextDecorator x:Name="groupButtonContent"
                                          ContentSource="{Binding Path=Header}"
                                          ContentStyle="{DynamicResource {dxnt:NavBarGroupControlThemeKey ResourceKey=GroupTextStyle}}"
                                          DisplayModeImageMargin="4,3,4,3"
                                          DisplayModeTextMargin="4,7,4,7"
                                          DockingBottomContentMargin="5,6,5,8"
                                          DockingBottomImageMargin="5,4,5,3"
                                          DockingLeftContentMargin="4,7,4,7"
                                          DockingLeftImageMargin="4,3,0,3"
                                          DockingRightContentMargin="5,6,5,8"
                                          DockingRightImageMargin="0,4,5,3"
                                          DockingTopContentMargin="5,6,5,8"
                                          DockingTopImageMargin="5,4,5,3"
                                          GroupButtonCollapsedImageMargin="4,3,4,3"
                                          ImageDocking="{Binding Path=(dxn:NavBarViewBase.LayoutSettings).ImageDocking, RelativeSource={RelativeSource TemplatedParent}}"
                                          ImageSource="{Binding Path=ImageSource}"
                                          ImageStyle="{DynamicResource {dxnt:NavBarGroupControlThemeKey ResourceKey=GroupImageStyle}}"/>
    </DataTemplate>

    <ControlTemplate x:Key="{dxnt:NavigationPaneButtonPanelThemeKey ResourceKey=GroupTemplate}" TargetType="dxn:NavPaneGroupButton">
        <Grid x:Name="grid"
              Height="Auto"
              Margin="1,0,1,1"
              Width="Auto">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                    <VisualState Name="Normal"/>
                    <VisualState Name="IsMouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                           Storyboard.TargetName="hover"
                                                           Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="IsPressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                           Storyboard.TargetName="pressed"
                                                           Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="IsActiveStates">
                    <VisualState Name="IsActiveTrue"/>
                    <VisualState Name="IsActiveFalse"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ExpandState">
                    <VisualState x:Name="Expanded"/>
                    <VisualState x:Name="Collapsed"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="Orientation">
                    <VisualState x:Name="Vertical"/>
                    <VisualState x:Name="Horizontal"/>
                </VisualStateGroup>
                <VisualStateGroup Name="ShowBorderStates">
                    <VisualState Name="WithoutBorder">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                           dxcn:ValueSetter.Thickness="0,0,0,1"
                                                           Storyboard.TargetName="grid"
                                                           Storyboard.TargetProperty="Margin"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="WithBorder"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="back"
                    Height="Auto"
                    Padding="0,0,0,0"
                    Visibility="{Binding Path=IsActive, Converter={StaticResource BoolToVisibilityInverseConverter}}"
                    Width="Auto">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFE2E2E2" Offset="0"/>
                        <GradientStop Color="#FFDBDBDB" Offset="1"/>
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <Border x:Name="hover"
                    Height="Auto"
                    Padding="0,0,0,0"
                    Visibility="Collapsed"
                    Width="Auto">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFD4E6FA" Offset="0"/>
                        <GradientStop Color="#FFC5DCF7" Offset="1"/>
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <Border x:Name="pressed"
                    Height="Auto"
                    Padding="0,0,0,0"
                    Visibility="Collapsed"
                    Width="Auto">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFBFBFBF" Offset="0"/>
                        <GradientStop Color="#FFC5C5C5" Offset="1"/>
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <Border x:Name="active"
                    Height="Auto"
                    Padding="0,0,0,0"
                    Visibility="{Binding Path=IsActive, Converter={StaticResource BoolToVisibilityConverter}}"
                    Width="Auto">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFBFBFBF" Offset="0"/>
                        <GradientStop Color="#FFC5C5C5" Offset="1"/>
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <dxn:ImageAndTextContentPresenter x:Name="content"
                                              Foreground="{DynamicResource {dxnt:NavigationPaneButtonPanelThemeKey ResourceKey=GroupForegroundBrush}}"
                                              ImageFallbackSize="24"
                                              Margin="0,0,0,0"
                                              Style="{DynamicResource {dxnt:NavigationPaneHeaderThemeKey ResourceKey=GroupButtonHeaderStyle}}"/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxnt:NavigationPaneOverflowPanelThemeKey ResourceKey=DefaultIconTemplate}" TargetType="dxn:NavPaneDefaultIcon">
        <Viewbox Stretch="Fill">
            <Border Background="{x:Null}"
                    Height="24"
                    Width="24">
                <Canvas x:Name="Document"
                        Clip="F1 M 0,0L 20.0001,0L 20.0001,20.0001L 0,20.0001L 0,0"
                        Height="20"
                        Width="20">
                    <Path x:Name="Path"
                          Canvas.Top="5"
                          Data="F1 M 1.99994,5.00018L 12.9999,5.00018C 14.1045,5.00018 14.9999,5.89563 14.9999,7.00018L 14.9999,18.0001C 14.9999,19.1047 14.1045,20.0002 12.9999,20.0002L 1.99994,20.0002C 0.895386,20.0002 0,19.1047 0,18.0001L 0,7.00018C 0,5.89563 0.895386,5.00018 1.99994,5.00018 Z "
                          Fill="#FF888888"
                          Height="15"
                          Stretch="Fill"
                          Width="15"/>
                    <Path x:Name="Path_0"
                          Canvas.Left="7"
                          Data="F1 M 9.00012,0L 18.0001,0C 19.1047,0 20.0001,0.895477 20.0001,2L 20.0001,11C 20.0001,12.1046 19.1047,13 18.0001,13L 16.0001,13.0001L 16.0001,7.00009C 16.0001,5.34323 14.6569,4.00009 13.0001,4.00009L 7.00006,4.00009L 7.00012,2C 7.00012,0.895477 7.89557,0 9.00012,0 Z "
                          Fill="#FF888888"
                          Height="13"
                          Stretch="Fill"
                          Width="13"/>
                </Canvas>
            </Border>
        </Viewbox>
    </ControlTemplate>

    <dxn:SourceToVisibilityConverter x:Key="SourceToVisibilityConverter"/>

    <DataTemplate x:Key="{dxnt:NavigationPaneOverflowPanelThemeKey ResourceKey=OverflowGroupContentTemplate}">
        <!--BEGIN WPF-->
        <Grid x:Name="overflowGroupContent"
              Margin="2"
              ToolTip="{Binding Path=Header}">
            <!--END WPF-->
            <!--ONLY SL
            <Grid Margin="2" x:Name="overflowGroupContent">
        ONLY SL-->
            <!--BEGIN WPF-->
            <Image x:Name="PART_Image"
                   Margin="0,0,0,0"
                   Source="{Binding Path=ImageSource}"
                   Style="{DynamicResource {dxnt:NavBarGroupControlThemeKey ResourceKey=OverflowGroupItemStyle}}"
                   Visibility="{Binding Path=Source, RelativeSource={RelativeSource Mode=Self}, ConverterParameter=Collapsed, Converter={StaticResource SourceToVisibilityConverter}}"/>
            <!--END WPF-->
            <!--ONLY SL<Image Margin="0,0,0,0" x:Name="PART_Image" Source="{Binding Path=ImageSource}"
                Visibility="{Binding Path=Source, RelativeSource={RelativeSource Mode=Self}, ConverterParameter=Collapsed, Converter={StaticResource SourceToVisibilityConverter}}"    
                Style="{DynamicResource {dxnt:NavBarGroupControlThemeKey ResourceKey=OverflowGroupItemStyle}}"/>ONLY SL-->
            <dxn:NavPaneDefaultIcon x:Name="defaultIcon"
                                    Height="{Binding Path=Height, ElementName=PART_Image}"
                                    Visibility="{Binding Path=Source, ElementName=PART_Image, ConverterParameter=Visible, Converter={StaticResource SourceToVisibilityConverter}}"
                                    Width="{Binding Path=Width, ElementName=PART_Image}"/>
        </Grid>
    </DataTemplate>

    <ControlTemplate x:Key="{dxnt:NavigationPaneOverflowPanelThemeKey ResourceKey=OverflowGroupTemplate}" TargetType="Button">
        <Grid Margin="0,0,1,0">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                    <VisualState Name="Normal"/>
                    <VisualState Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                           Storyboard.TargetName="hover"
                                                           Storyboard.TargetProperty="Opacity">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <sys:Double>1.0</sys:Double>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="0"
                                                           Storyboard.TargetName="pressed"
                                                           Storyboard.TargetProperty="Opacity">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <sys:Double>1.0</sys:Double>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="hover"
                    Background="#FFADADAD"
                    Height="Auto"
                    Opacity="0.0"
                    Padding="1,0,1,0"
                    Width="Auto">
                <Border Height="Auto"
                        Padding="0,0,0,0"
                        Width="Auto">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFD1E4FA" Offset="0"/>
                            <GradientStop Color="#FFC4DCF7" Offset="1"/>
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
            </Border>
            <Border x:Name="pressed"
                    Background="#FFADADAD"
                    Height="Auto"
                    Opacity="{Binding Path=IsActive, Converter={StaticResource BooleanToOpacityConverter}}"
                    Padding="1,0,1,0"
                    Width="Auto">
                <Border x:Name="GroupButton"
                        Height="Auto"
                        Padding="0,0,0,0"
                        Width="Auto">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFBEBEBE" Offset="0"/>
                            <GradientStop Color="#FFC1C1C1" Offset="1"/>
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
            </Border>
            <dxn:ImageAndTextContentPresenter x:Name="content"
                                              Foreground="{TemplateBinding Foreground}"
                                              ImageFallbackSize="24"
                                              Margin="0,0,0,0"
                                              Style="{DynamicResource {dxnt:NavigationPaneHeaderThemeKey ResourceKey=OverflowButtonHeaderStyle}}"/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxnt:NavigationPaneButtonPanelThemeKey ResourceKey=ButtonPanelTemplate}" TargetType="ContentControl">
        <Border Background="#FF9B9B9B">
            <dxn:NavPaneGroupButtonPanelContentPresenter WithoutSplitterThickness="0,1,0,0"/>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxnt:NavigationPaneOverflowPanelThemeKey ResourceKey=OverflowPanelTemplate}" TargetType="dxn:NavPaneOverflowPanel">
        <dx:LayoutTransformPanel Orientation="{Binding View.Orientation}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="SplitterBehaviorStates">
                    <VisualState x:Name="WithSplitter"/>
                    <VisualState x:Name="WithoutSplitter">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="overflowPanelBorder" Storyboard.TargetProperty="Padding">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Thickness>1,1,1,1</Thickness>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ShowBorderStates">
                    <VisualState x:Name="WithBorder"/>
                    <VisualState x:Name="WithoutBorder">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxcn:ValueSetter.Thickness="0"
                                                           Storyboard.TargetName="overflowPanelBorder"
                                                           Storyboard.TargetProperty="Padding"/>
                            <ObjectAnimationUsingKeyFrames dxcn:ValueSetter.CornerRadius="0"
                                                           Storyboard.TargetName="overflowPanelBorder"
                                                           Storyboard.TargetProperty="CornerRadius"/>
                            <ObjectAnimationUsingKeyFrames dxcn:ValueSetter.CornerRadius="0"
                                                           Storyboard.TargetName="border1"
                                                           Storyboard.TargetProperty="CornerRadius"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="overflowPanelBorder"
                    Background="#FF9B9B9B"
                    CornerRadius="0,0,3,3"
                    Height="Auto"
                    Padding="1,0,1,1">
                <Border x:Name="border1" CornerRadius="0,0,2,2">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFD2D2D2" Offset="0"/>
                            <GradientStop Color="#FFC7C7C7" Offset="1"/>
                        </LinearGradientBrush>
                    </Border.Background>
                    <ContentPresenter Content="{TemplateBinding Content}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      MinHeight="30"
                                      Width="Auto"/>
                </Border>
            </Border>
        </dx:LayoutTransformPanel>
    </ControlTemplate>

    <!--BEGIN WPF-->

    <ControlTemplate x:Key="{dxnt:NavigationPaneOverflowPanelThemeKey ResourceKey=ContextMenuTemplate}" TargetType="ContextMenu">
        <Grid x:Name="grid" Margin="0,0,3,3">
            <Border x:Name="shadow"
                    Background="#FF000000"
                    CornerRadius="4"
                    Margin="2,2,0,0"
                    Opacity="0.15"/>
            <Border x:Name="popupBorder"
                    Background="#FF9B9B9B"
                    CornerRadius="3"
                    Margin="0,0,3,3"
                    Padding="1">
                <Border x:Name="background"
                        Background="#FFFFFFFF"
                        CornerRadius="2"
                        Padding="1">
                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </Border>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static interop:BrowserInteropHelper.IsBrowserHosted}}" Value="True">
                <Setter Property="Visibility"
                        TargetName="shadow"
                        Value="Collapsed"/>
                <Setter Property="Margin"
                        TargetName="popupBorder"
                        Value="0"/>
                <Setter Property="CornerRadius"
                        TargetName="popupBorder"
                        Value="0"/>
                <Setter Property="CornerRadius"
                        TargetName="background"
                        Value="0"/>
                <Setter Property="Margin"
                        TargetName="grid"
                        Value="0"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--END WPF-->

    <!--BEGIN WPF-->

    <ControlTemplate x:Key="{dxnt:NavigationPaneOverflowPanelThemeKey ResourceKey=MenuItemTemplate}" TargetType="MenuItem">
        <Border>
            <Grid>
                <Border x:Name="border"
                        CornerRadius="2"
                        Padding="1"
                        Visibility="Hidden">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FF5E81B4" Offset="0"/>
                            <GradientStop Color="#FF4B6FA5" Offset="1"/>
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0">
                        <Path x:Name="glyph"
                              Data="M0,2L0,4.8 2.5,7.4 7.1,2.8 7.1,0 2.5,4.6z"
                              Fill="Black"
                              Margin="12,0,0,0"
                              VerticalAlignment="Center"
                              Visibility="Collapsed"/>
                        <ContentPresenter x:Name="icon"
                                          ContentSource="Icon"
                                          Margin="12,3,0,3"
                                          Visibility="Visible"/>
                    </Grid>
                    <dx:MeasurePixelSnapper Grid.Column="1" Margin="12,3">
                        <ContentPresenter x:Name="text"
                                          ContentSource="Header"
                                          RecognizesAccessKey="True"
                                          TextElement.Foreground="Black"/>
                    </dx:MeasurePixelSnapper>
                    <Path x:Name="arrow"
                          Data="M0,0 L0,8 L4,4 z"
                          Fill="Black"
                          Grid.Column="2"
                          Margin="5,0,5,0"
                          VerticalAlignment="Center"
                          Visibility="Collapsed"/>
                    <Popup x:Name="popup"
                           AllowsTransparency="True"
                           Focusable="false"
                           IsOpen="{TemplateBinding IsSubmenuOpen}"
                           Placement="Right"
                           PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                        <Grid>
                            <Border x:Name="shadow"
                                    Background="#FF000000"
                                    CornerRadius="4"
                                    Margin="3,3,0,0"
                                    Opacity="0.15"/>
                            <Border x:Name="popupBorder"
                                    Background="#FF9B9B9B"
                                    CornerRadius="2"
                                    Margin="0,0,3,3"
                                    Padding="1">
                                <Border x:Name="background"
                                        Background="#FFFFFFFF"
                                        CornerRadius="1">
                                    <StackPanel Background="Transparent"
                                                IsItemsHost="True"
                                                Margin="1"/>
                                </Border>
                            </Border>
                        </Grid>
                    </Popup>
                </Grid>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static interop:BrowserInteropHelper.IsBrowserHosted}}" Value="True">
                <Setter Property="Visibility"
                        TargetName="shadow"
                        Value="Collapsed"/>
                <Setter Property="Margin"
                        TargetName="popupBorder"
                        Value="0"/>
                <Setter Property="CornerRadius"
                        TargetName="popupBorder"
                        Value="0"/>
                <Setter Property="CornerRadius"
                        TargetName="background"
                        Value="0"/>
            </DataTrigger>
            <Trigger Property="Role" Value="SubMenuHeader">
                <Setter Property="Visibility"
                        TargetName="arrow"
                        Value="Visible"/>
            </Trigger>
            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter Property="PopupAnimation"
                        TargetName="popup"
                        Value="None"/>
            </Trigger>
            <Trigger Property="IsCheckable" Value="True">
                <Setter Property="Visibility"
                        TargetName="glyph"
                        Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Visibility"
                        TargetName="glyph"
                        Value="Visible"/>
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility"
                        TargetName="icon"
                        Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Visibility"
                        TargetName="border"
                        Value="Visible"/>
                <Setter Property="Control.Foreground"
                        TargetName="text"
                        Value="White"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Control.Foreground"
                        TargetName="text"
                        Value="#FF9A9A9A"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--END WPF-->

</ResourceDictionary>