<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
                    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
                    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
                    xmlns:dxgcore="http://schemas.devexpress.com/winfx/2008/xaml/grid"
                    xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--
          removed Color x:Key =BaseColor#FFFFBE73-->

    <!--
          removed Color x:Key =BaseColor#FFDDEBFF-->

    <!--
          removed Color x:Key =BaseColor#FFFFD39F-->

    <!--
          removed Color x:Key =BaseColor#FFFFEFBE-->

    <!--
          removed Color x:Key =BaseColor#FFC7DFFF-->

    <!--
          removed Color x:Key =BaseColor#FFF7D879-->

    <!--
          removed SolidColorBrush x:Key =BaseBrush#FF567DB1-->

    <!--
          removed Color x:Key =BaseColor#FFFFD9A7-->

    <!--
          removed Color x:Key =BaseColor#FFFFE9D0-->

    <!--
          removed SolidColorBrush x:Key =BaseBrush#FFF4F7FA-->

    <!--
          removed Color x:Key =BaseColor#FFADD1FF-->

    <!--
          removed Color x:Key =BaseColor#FFE87F08-->

    <!--
          removed Color x:Key =BaseColor#FFFFE1BE-->

    <!--
          removed SolidColorBrush x:Key =BaseBrush#FFFFBD69-->

    <!--
          removed SolidColorBrush x:Key =BaseBrush#FF6593CF-->

    <!--
          removed SolidColorBrush x:Key =BaseBrush#FF204D89-->

    <!--
          removed Color x:Key =BaseColor#FFFFFFDC-->

    <!--
          removed Color x:Key =BaseColor#FFFEDE77-->

    <!--
          removed Color x:Key =BaseColor#FFBFDAFF-->

    <!--
          removed Color x:Key =BaseColor#FF759BD2-->

    <!--
          removed Color x:Key =BaseColor#FFF7C15E-->

    <!--
          removed SolidColorBrush x:Key =BaseBrush#FF000000-->

    <!--
          removed SolidColorBrush x:Key =BaseBrush#5AFFFFFF-->

    <!--
          removed Color x:Key =BaseColor#FF6488BC-->

    <!--
          removed Color x:Key =BaseColor#FFFFAB3F-->

    <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

    <dx:BoolToObjectConverter x:Key="ExpandButtonMarginConverter">
        <dx:BoolToObjectConverter.TrueValue>
            <Thickness>0,4,8,4</Thickness>
        </dx:BoolToObjectConverter.TrueValue>
        <dx:BoolToObjectConverter.FalseValue>
            <Thickness>8,4,8,4</Thickness>
        </dx:BoolToObjectConverter.FalseValue>
    </dx:BoolToObjectConverter>

    <LinearGradientBrush x:Key="hottrack-item"
                         EndPoint="0.5,-0.002"
                         StartPoint="0.5,1.002">
        <GradientStop Color="#FF6488BC " Offset="0"/>
        <GradientStop Color="#FF759BD2 " Offset="1"/>
    </LinearGradientBrush>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ExpandButtonTemplate}" TargetType="{x:Type dx:ToggleStateButton}">
        <Grid x:Name="root" Background="Transparent">
            <Grid.Resources>
                <Storyboard x:Key="expand" FillBehavior="HoldEnd">
                    <DoubleAnimation Duration="0:0:0.2"
                                     Storyboard.TargetName="ExpandButtonRotate"
                                     Storyboard.TargetProperty="Angle"
                                     To="90"/>
                </Storyboard>
                <Storyboard x:Key="collapse" FillBehavior="HoldEnd">
                    <DoubleAnimation Duration="0:0:0.2"
                                     Storyboard.TargetName="ExpandButtonRotate"
                                     Storyboard.TargetProperty="Angle"
                                     To="0"/>
                </Storyboard>
            </Grid.Resources>
            <Border x:Name="hover"
                    BorderBrush="#FFFFBD69 "
                    Visibility="Hidden">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFFFFFDC " Offset="0"/>
                        <GradientStop Color="#FFF7C15E " Offset="1"/>
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <Border x:Name="pressed"
                    BorderBrush="#FFFFBD69 "
                    Visibility="Hidden">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFE87F08 " Offset="0"/>
                        <GradientStop Color="#FFF7D879 " Offset="1"/>
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <Path x:Name="path"
                  Data="F1 M 106,201L 106,207L 113,204L 106,201 Z "
                  Fill="#FFFFFFFF"
                  Height="8"
                  HorizontalAlignment="Center"
                  Margin="8,4,4,4"
                  RenderTransformOrigin="0.5,0.5"
                  Stretch="Fill"
                  UseLayoutRounding="False"
                  VerticalAlignment="Center"
                  Width="8">
                <Path.RenderTransform>
                    <RotateTransform x:Name="ExpandButtonRotate" Angle="90"/>
                </Path.RenderTransform>
            </Path>
        </Grid>
    </ControlTemplate>

    <Style x:Key="{dxgt:CardTemplatesThemeKey ResourceKey=CardStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="dxg:GridViewBase.IsFocusedRow" Value="False"/>
                </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Property="dxg:GridViewBase.IsFocusedRow" Value="True"/>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ContainerTemplate}" TargetType="{x:Type ContentControl}">
        <Grid>
            <Border x:Name="border"
                    BorderThickness="1"
                    CornerRadius="4"
                    Grid.RowSpan="1"
                    Margin="3"
                    Padding="1">
                <ContentPresenter/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxgcore:RowData.RowData).SelectionState, RelativeSource={RelativeSource TemplatedParent}}" Value="Focused">
                <Setter Property="BorderBrush"
                        TargetName="border"
                        Value="#FF6DA1DE"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxgcore:RowData.RowData).SelectionState, RelativeSource={RelativeSource TemplatedParent}}" Value="Selected">
                <Setter Property="BorderBrush"
                        TargetName="border"
                        Value="#FFB9BABF"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{dxgt:GridCardThemeKey ResourceKey=HeaderPresenterStyle}" TargetType="{x:Type dxg:GridCardHeaderContentPresenter}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="TextBlock.Foreground" Value="White"/>
    </Style>

    <Style x:Key="{dxgt:GridCardThemeKey ResourceKey=ContentExpandButtonStyle}" TargetType="{x:Type dxg:GridCardExpandButton}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,3,0"/>
    </Style>

    <Style x:Key="{dxgt:GridCardThemeKey ResourceKey=ContentPresenterStyle}" TargetType="{x:Type dxg:GridCardContentPresenter}">
        <Setter Property="Margin" Value="11"/>
    </Style>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=HeaderContentTemplate}" TargetType="{x:Type ContentControl}">
        <ContentPresenter Margin="{Binding Path=(dxg:GridControl.ActiveView).ShowCardExpandButton, Converter={StaticResource ExpandButtonMarginConverter}, RelativeSource={RelativeSource TemplatedParent}}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ExpanderContentTemplate}" TargetType="{x:Type ContentControl}">
        <ContentPresenter/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=DataContentTemplate}" TargetType="{x:Type ContentControl}">
        <Border x:Name="border"
                Background="#FFE9EDF2"
                BorderThickness="0,1,0,0"
                CornerRadius="0,0,3,3">
            <ContentPresenter/>
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IsExpanded}" Value="False"/>
            <DataTrigger Binding="{Binding Path=(dxgcore:RowData.RowData).SelectionState, RelativeSource={RelativeSource TemplatedParent}}" Value="Focused">
                <Setter Property="Background"
                        TargetName="border"
                        Value="Transparent"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=HeaderPanelTemplate}" TargetType="{x:Type ContentControl}">
        <Border x:Name="border">
            <Border.CornerRadius>
                <Binding Path="IsExpanded">
                    <Binding.Converter>
                        <dx:BoolToObjectConverter FalseValue="3" TrueValue="3,3,0,0"/>
                    </Binding.Converter>
                </Binding>
            </Border.CornerRadius>
            <Border.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF90B9E6" Offset="0"/>
                    <GradientStop Color="#FF6DA1DE" Offset="1"/>
                </LinearGradientBrush>
            </Border.Background>
            <ContentPresenter/>
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="dxg:GridViewBase.IsFocusedRow" Value="False"/>
                </MultiTrigger.Conditions>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ControlTemplate}">
        <ContentControl x:Name="card"
                        Style="{Binding Path=(dxg:GridControl.ActiveView).CardStyle, RelativeSource={RelativeSource TemplatedParent}}"
                        Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ContainerTemplate}}">
            <dxg:GridCardPanel x:Name="gridCardPanel" IsExpanded="{Binding Path=IsExpanded}">
                <dxg:GridCardPanel.Header>
                    <dxg:GridCardHeaderControl>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <ContentControl Grid.Column="1" Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=HeaderContentTemplate}}">
                                <dxg:GridCardHeaderContentPresenter Style="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=HeaderPresenterStyle}}"/>
                            </ContentControl>
                            <ContentControl Grid.Column="0"
                                            Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ExpanderContentTemplate}}"
                                            Visibility="{Binding Path=View.ShowCardExpandButton, Converter={StaticResource BoolToVisibilityConverter}}">
                                <dxg:GridCardExpandButton Style="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ContentExpandButtonStyle}}"/>
                            </ContentControl>
                        </Grid>
                    </dxg:GridCardHeaderControl>
                </dxg:GridCardPanel.Header>
                <dxg:GridCardPanel.Body>
                    <ContentControl Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=DataContentTemplate}}">
                        <dxg:GridCardContentPresenter x:Name="presenter" Style="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ContentPresenterStyle}}"/>
                    </ContentControl>
                </dxg:GridCardPanel.Body>
            </dxg:GridCardPanel>
        </ContentControl>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=View.CollapsedCardOrientation}" Value="Vertical">
                <Setter Property="RotateOnCollapse"
                        TargetName="gridCardPanel"
                        Value="True"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Infinity Loading -->

    <ControlTemplate x:Key="LoadingIndicator" TargetType="{x:Type ProgressBar}">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Determinate"/>
                    <VisualState x:Name="Indeterminate">
                        <Storyboard RepeatBehavior="Forever">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="path" Storyboard.TargetProperty="(Shape.Fill).(Brush.RelativeTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="00:00:01" Value="360"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Path x:Name="path"
                  Data="F1 M 94.5,284C 94.7762,284 95,284.224 95,284.5L 95,287.5C 95,287.776 94.7762,288 94.5,288C 94.2239,288 94,287.776 94,287.5L 94,284.5C 94,284.224 94.2239,284 94.5,284 Z M 96.1919,283.341C 96.3952,283.154 96.7115,283.167 96.8984,283.37L 98.9287,285.579C 99.1156,285.782 99.1023,286.099 98.899,286.286C 98.6957,286.472 98.3794,286.459 98.1925,286.256L 96.1622,284.047C 95.9753,283.844 95.9886,283.528 96.1919,283.341 Z M 94.5,275C 94.7761,275 95,275.224 95,275.5L 95,278.5C 95,278.776 94.7761,279 94.5,279C 94.2238,279 94,278.776 94,278.5L 94,275.5C 94,275.224 94.2238,275 94.5,275 Z M 90.101,276.715C 90.3043,276.528 90.6206,276.541 90.8075,276.745L 92.8378,278.953C 93.0247,279.157 93.0114,279.473 92.8081,279.66C 92.6048,279.847 92.2885,279.833 92.1016,279.63L 90.0713,277.421C 89.8844,277.218 89.8978,276.902 90.101,276.715 Z M 92,281.513C 92,281.789 91.7762,282.013 91.5,282.013L 88.5,282.013C 88.2238,282.013 88,281.789 88,281.513C 88,281.236 88.2238,281.013 88.5,281.013L 91.5,281.013C 91.7762,281.013 92,281.236 92,281.513 Z M 92.668,283.201C 92.8549,283.405 92.8416,283.721 92.6383,283.908L 90.4297,285.938C 90.2264,286.125 89.9101,286.112 89.7232,285.908C 89.5363,285.705 89.5496,285.389 89.7529,285.202L 91.9615,283.171C 92.1648,282.985 92.4811,282.998 92.668,283.201 Z M 101,281.45C 101,281.698 100.799,281.9 100.55,281.9L 97.45,281.9C 97.2015,281.9 97,281.698 97,281.45C 97,281.201 97.2015,281 97.45,281L 100.55,281C 100.799,281 101,281.201 101,281.45 Z M 99.2514,277.064C 99.4195,277.247 99.4076,277.532 99.2246,277.7L 96.9424,279.798C 96.7595,279.966 96.4748,279.954 96.3066,279.771C 96.1384,279.588 96.1504,279.304 96.3333,279.135L 98.6155,277.037C 98.7985,276.869 99.0832,276.881 99.2514,277.064 Z "
                  Fill="{TemplateBinding Background}"
                  Stretch="Fill"
                  Stroke="{x:Null}"
                  StrokeLineJoin="Round"
                  StrokeThickness="1"
                  VerticalAlignment="Stretch">
            </Path>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=LoadingCardTemplate}" TargetType="dxg:LoadingCardControl">
        <Grid x:Name="Root"
              Margin="1"
              MinHeight="216"
              MinWidth="216">
            <ProgressBar x:Name="Indicator"
                         Height="24"
                         HorizontalAlignment="Center"
                         IsIndeterminate="{Binding ShowLoadingIndicator}"
                         MinHeight="8"
                         MinWidth="8"
                         Padding="4"
                         Template="{StaticResource LoadingIndicator}"
                         VerticalAlignment="Center"
                         Visibility="{Binding ShowLoadingIndicator, Converter={StaticResource BoolToVisibilityConverter}}"
                         Width="24">
                <ProgressBar.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <LinearGradientBrush.RelativeTransform>
                            <TransformGroup>
                                <ScaleTransform CenterX="0.5" CenterY="0.5"/>
                                <SkewTransform CenterX="0.5" CenterY="0.5"/>
                                <RotateTransform CenterX="0.5" CenterY="0.5"/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </LinearGradientBrush.RelativeTransform>
                        <GradientStop Color="#FF6EA2DE" Offset="1"/>
                        <GradientStop Color="#FFFFFFFF" Offset="0"/>
                    </LinearGradientBrush>
                </ProgressBar.Background>
            </ProgressBar>
            <dxg:LoadingRowButton Click="{DXEvent 'LoadMoreRows()'}"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Visibility="{Binding AllowLoadMore, Converter={StaticResource BoolToVisibilityConverter}}">
                <StackPanel Margin="15,0,9,1" Orientation="Horizontal">
                    <Label Content="{dxg:GridControlStringId LoadingRowLoadMore}"/>
                    <Grid Height="16"
                          Margin="3"
                          Width="16">
                        <Path Data="F1 M 10,5L 5,10L 0,5L 3,5L 3,3L 7,3L 7,5L 10,5 Z M 3,2L 3,0L 7,0L 7,2L 3,2 Z "
                              Fill="#FF3E3E3E"
                              Height="10"
                              HorizontalAlignment="Stretch"
                              Margin="0,1,0,0"
                              Stretch="Fill"
                              VerticalAlignment="Stretch"
                              Width="10"/>
                    </Grid>
                </StackPanel>
            </dxg:LoadingRowButton>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=LoadingCardErrorTemplate}" TargetType="dxg:LoadingCardControl">
        <Grid x:Name="Root"
              Margin="1"
              MinHeight="216"
              MinWidth="216">
            <Grid HorizontalAlignment="Center"
                  Margin="12,0,12,0"
                  MaxWidth="216"
                  VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Path Data="F1 M 7,0C 10.866,0 14,3.13401 14,7C 14,10.866 10.866,14 7,14C 3.13401,14 -6.35783e-007,10.866 -6.35783e-007,7C -6.35783e-007,3.13401 3.13401,0 7,0 Z M 2.75736,4.17157L 5.58579,7L 2.75736,9.82843L 4.17157,11.2426L 7,8.41422L 9.82843,11.2426L 11.2426,9.82843L 8.41421,7L 11.2426,4.17157L 9.82843,2.75736L 7,5.58579L 4.17157,2.75736L 2.75736,4.17157 Z "
                      Fill="#FFCC0000"
                      Height="14"
                      HorizontalAlignment="Center"
                      Margin="4"
                      Stretch="Fill"
                      VerticalAlignment="Top"
                      Width="14"/>
                <StackPanel Grid.Column="1" Orientation="Vertical">
                    <TextBlock HorizontalAlignment="Left"
                               Margin="4,3,4,3"
                               Text="{Binding ErrorText}"
                               TextWrapping="Wrap"/>
                    <TextBlock HorizontalAlignment="Center" Visibility="{Binding IsLoadingButtonVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                        <dxe:HyperlinkEdit Command="{Binding LoadRowsCommand}" Text="{Binding LoadingButtonText}"/>
                    </TextBlock>
                </StackPanel>
            </Grid>
        </Grid>
    </ControlTemplate>

</ResourceDictionary>