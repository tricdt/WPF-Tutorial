<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
                    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
                    xmlns:dxgcore="http://schemas.devexpress.com/winfx/2008/xaml/grid"
                    xmlns:dxght="http://schemas.devexpress.com/winfx/2008/xaml/grid/internal"
                    xmlns:dxgi="http://schemas.devexpress.com/winfx/2008/xaml/grid/internal"
                    xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:mvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--BEGIN WPF-->

    <ResourceDictionary.MergedDictionaries>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.LightGray.v24.1;component/DevExpress.Xpf.Grid/Generic/HeaderFooterItemsControlStyles.xaml"/>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.LightGray.v24.1;component/DevExpress.Xpf.Grid/LightGray/Constants.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--END WPF-->

    <dxgcore:InverseBooleanConverter x:Key="InverseBooleanConverter"/>

    <dxgcore:NavigationRowConverter x:Key="NavigationRowConverter"/>

    <dx:EnumToObjectConverter x:Key="ScrollBarModeToVerticalAlignmentConverter" DefaultValue="Stretch">
        <dx:EnumToObjectConverter.Values>
            <dx:EnumObjectProvider x:Key="TouchOverlap" Value="Bottom"/>
        </dx:EnumToObjectConverter.Values>
    </dx:EnumToObjectConverter>

    <dxgcore:FootersPanelMarginConverter x:Key="FootersPanelMarginConverter"/>

    <dxgi:TotalSummaryPositionToBooleanConverter x:Key="TotalSummaryPositionToBooleanConverter"
                                                 AdditionalTrueValue="{x:Null}"
                                                 TrueValue="Bottom"/>

    <ControlTemplate x:Key="{dxgt:TotalSummaryThemeKey ResourceKey=FootersContentTemplate}" TargetType="{x:Type ContentControl}">
        <Grid x:Name="footersContent">
            <Border Background="#FF6E6E6E"
                    BorderBrush="Transparent"
                    cs:id="Border_0001">
                <Border.BorderThickness>
                    <MultiBinding>
                        <MultiBinding.Bindings>
                            <Binding Path="View.TotalSummaryPosition"/>
                            <Binding Path="View.IsRootView"/>
                        </MultiBinding.Bindings>
                        <MultiBinding.Converter>
                            <dxgi:TableViewTotalSummaryPanelBorderThicknessConverter/>
                        </MultiBinding.Converter>
                    </MultiBinding>
                </Border.BorderThickness>
            </Border>
            <ContentPresenter/>
        </Grid>
    </ControlTemplate>

    <SolidColorBrush x:Key="{dxgt:TableViewThemeKey ResourceKey=DataPresenterBackground}" Color="White"/>

    <ControlTemplate x:Key="{dxgt:TableViewThemeKey ResourceKey=OuterBorderElementTemplate}" TargetType="{x:Type dxg:OuterBorderElement}"></ControlTemplate>

    <Style x:Key="{dxgt:TableViewThemeKey ResourceKey=ColumnChooserDragTextStyle}" TargetType="TextBlock">
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Foreground"
                Value="#FFA3A3A3"
                cs:id="Setter_0000"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="Margin" Value="35,4"/>
    </Style>

    <Style x:Key="{dxgt:TableViewThemeKey ResourceKey=GroupPanelDragTextStyle}" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="FontSize">
            <Setter.Value>
                <Binding Path="FontSize" RelativeSource="{RelativeSource TemplatedParent}">
                    <Binding.Converter>
                        <dx:AddDoubleConverter Value="-1"/>
                    </Binding.Converter>
                </Binding>
            </Setter.Value>
        </Setter>
        <Setter Property="MinHeight" Value="15"/>
        <Setter Property="Foreground"
                Value="White"
                cs:id="Setter_0000"/>
        <Setter Property="Margin" Value="0,4,0,5"/>
        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.CurrentView).ActualSearchPanelPosition, RelativeSource={RelativeSource TemplatedParent}}" Value="Default">
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="Margin" Value="11,4,0,5"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Thickness x:Key="{dxgt:TableViewThemeKey ResourceKey=GroupPanelBorderThickness}">0,0,0,1</Thickness>

    <Thickness x:Key="{dxgt:TableViewThemeKey ResourceKey=GroupPanelMargin}">8</Thickness>

    <Thickness x:Key="{dxgt:TableViewThemeKey ResourceKey=GroupPanelSeparatorMargin}">0,-23,0,0</Thickness>

    <SolidColorBrush x:Key="{dxgt:TableViewThemeKey ResourceKey=GroupPanelBorderBrush}" Color="#FFE3E3E3"/>

    <DataTemplate x:Key="{dxgt:TotalSummaryThemeKey ResourceKey=TotalSummaryItemTemplate}">
        <TextBlock dxgcore:InlineTextService.InlineInfo="{Binding Column.TotalSummaryTextInfo}" Style="{StaticResource {dxgt:TotalSummaryThemeKey ResourceKey=TotalSummaryTextControlStyle}}"/>
    </DataTemplate>

    <!--BEGIN WPF-->

    <dxgcore:DefaultStyle x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupValueContentStyle}" TargetType="{x:Type Border}"></dxgcore:DefaultStyle>

    <!--END WPF-->

    <dxgcore:DefaultStyle x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupRowStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="Control.Foreground"
                Value="#FF6E6E6E"
                cs:id="Setter_0000"/>
        <Setter Property="Control.Background" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderNoneBrush}}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=SelectionState}" Value="Focused">
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextFocusedBrush}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=SelectionState}" Value="Highlighted">
                <Setter Property="Control.Background" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupRowHoverBackground}}"/>
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupRowHoverForeground}}"/>
            </DataTrigger>
        </Style.Triggers>
    </dxgcore:DefaultStyle>

    <ControlTemplate x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupRowContentTemplate}" TargetType="{x:Type ContentControl}">
        <Border x:Name="groupRowBorder"
                Background="{TemplateBinding Background}"
                BorderBrush="#FFD3D3D3"
                BorderThickness="0,0,0,1"
                MinHeight="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupRowMinHeight}}"
                Padding="{TemplateBinding Padding}"
                cs:id="Border_0000">
            <Grid>
                <Border x:Name="groupRowBorderSelected"
                        Background="#FFD8D8D8"
                        dxgcore:FadeSelectionHelper.FadeSelectionOnLostFocus="{Binding Path=View.ActualFadeSelectionOnLostFocus}"
                        dxgcore:FadeSelectionHelper.IsKeyboardFocusWithinView="{Binding Path=(dxg:GridControl.ActiveView).IsKeyboardFocusWithin, RelativeSource={RelativeSource Mode=Self}}"
                        cs:id="Border_0001">
                    <Border.Visibility>
                        <Binding Path="SelectionState">
                            <Binding.Converter>
                                <dxgcore:SelectionStateToVisibilityConverter Value="Selected"/>
                            </Binding.Converter>
                        </Binding>
                    </Border.Visibility>
                </Border>
                <Border x:Name="groupRowBorderFocused"
                        dxgcore:FadeSelectionHelper.FadeSelectionOnLostFocus="{Binding Path=View.ActualFadeSelectionOnLostFocus}"
                        dxgcore:FadeSelectionHelper.IsKeyboardFocusWithinView="{Binding Path=(dxg:GridControl.ActiveView).IsKeyboardFocusWithin, RelativeSource={RelativeSource Mode=Self}}">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1"
                                             StartPoint="0.5,0"
                                             cs:id="LinearGradientBrush_0000">
                            <GradientStop Color="#FF9F9F9F" cs:id="GradientStop_0000"/>
                            <GradientStop Color="#FF8C8C8C"
                                          Offset="1"
                                          cs:id="GradientStop_0001"/>
                        </LinearGradientBrush>
                    </Border.Background>
                    <Border.Visibility>
                        <Binding Path="SelectionState">
                            <Binding.Converter>
                                <dxgcore:SelectionStateToVisibilityConverter Value="Focused"/>
                            </Binding.Converter>
                        </Binding>
                    </Border.Visibility>
                </Border>
                <ContentPresenter/>
            </Grid>
        </Border>
    </ControlTemplate>

    <dxgcore:DefaultDataTemplate x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupValueTemplate}">
        <Border Padding="0,0,0,1"
                Style="{Binding Path=View.GroupValueContentStyle}"
                VerticalAlignment="Center">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding Path=GroupColumnHeaderText}"/>
                <TextBlock Text="{Binding Path=Value}"/>
            </StackPanel>
        </Border>
    </dxgcore:DefaultDataTemplate>

    <Thickness x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupColumnSummaryPadding}">4,2,4,2</Thickness>

    <Thickness x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupBandSummaryPadding}">4,2,4,2</Thickness>

    <SolidColorBrush x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupBandSummaryNormalBorderBrush}" Color="#FF797979"/>

    <SolidColorBrush x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupBandSummaryFocusedBorderBrush}" Color="#FF797979"/>

    <SolidColorBrush x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupBandSummaryNormalBackground}" Color="Transparent"/>

    <SolidColorBrush x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupBandSummaryFocusedBackground}" Color="Transparent"/>

    <ControlTemplate x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupBandSummaryTemplate}">
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="1"
                CornerRadius="2"
                MinHeight="22">
            <Border.Margin>
                <Binding Path="HasTopElement" RelativeSource="{RelativeSource TemplatedParent}">
                    <Binding.Converter>
                        <dx:BoolToObjectConverter FalseValue="0,2,2,3" TrueValue="0,0,2,3"/>
                    </Binding.Converter>
                </Binding>
            </Border.Margin>
            <ContentPresenter x:Name="PART_Content"
                              Content="{Binding}"
                              ContentTemplate="{Binding View.GroupColumnSummaryItemTemplate}"
                              Margin="4,1,4,1"
                              VerticalAlignment="Center"/>
        </Border>
    </ControlTemplate>

    <sys:Double x:Key="{dxgt:GroupRowThemeKey ResourceKey=BandedViewGroupSummaryMinHeight}">21</sys:Double>

    <Thickness x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupDefaultSummaryPadding}">0,2,0,2</Thickness>

    <Thickness x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupRowDefaultSummaryPadding}">0,2,0,3</Thickness>

    <Thickness x:Key="{dxgt:GroupRowThemeKey ResourceKey=ExpandButtonMargin}">8,2,0,2</Thickness>

    <Thickness x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupRowExpandButtonMargin}">8,2,0,3</Thickness>

    <Thickness x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupValuePresenterMargin}">4,2,20,2</Thickness>

    <Thickness x:Key="{dxgt:GroupRowThemeKey ResourceKey=CheckBoxSelectorMargin}">4,0,0,0</Thickness>

    <Thickness x:Key="{dxgt:GroupRowThemeKey ResourceKey=BandedGroupValuePresenterMargin}">0,0,28,0</Thickness>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.GroupSummaryContentPresenter}" TargetType="{x:Type dxg:GroupSummaryContentPresenter}">
        <Setter Property="Margin" Value="0,0,4,0"/>
    </Style>

    <ControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=FilterRowTemplate}" TargetType="{x:Type ContentControl}">
        <Border Background="White"
                BorderBrush="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}"
                BorderThickness="0,0,0,1"
                cs:id="Border_0000">
            <Grid>
                <Border x:Name="borderFocused"
                        Margin="0"
                        SnapsToDevicePixels="True">
                    <Border.Visibility>
                        <Binding Path="SelectionState">
                            <Binding.Converter>
                                <dxgcore:SelectionStateToVisibilityConverter Value="Focused"/>
                            </Binding.Converter>
                        </Binding>
                    </Border.Visibility>
                </Border>
                <ContentControl HorizontalContentAlignment="Stretch">
                    <ContentPresenter/>
                </ContentControl>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IsTreeView}" Value="True">
                <Setter Property="Background"
                        TargetName="borderFocused"
                        Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=CellBorderFocusedBrush}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsTreeView}" Value="False">
                <Setter Property="Background"
                        TargetName="borderFocused"
                        Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderFocusedBrush}}"/>
                <Setter Property="dxg:FadeSelectionHelper.IsKeyboardFocusWithinView"
                        TargetName="borderFocused"
                        Value="{Binding Path=(dxg:GridControl.ActiveView).IsKeyboardFocusWithin, RelativeSource={RelativeSource Mode=Self}}"/>
                <Setter Property="dxg:FadeSelectionHelper.FadeSelectionOnLostFocus"
                        TargetName="borderFocused"
                        Value="{Binding Path=View.ActualFadeSelectionOnLostFocus}"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=RowNewItemTextControlTemplate}" TargetType="dxg:RowNewItemTextControl">
        <Border x:Name="backgroundBorder"
                Background="#FFFFFFFF"
                IsHitTestVisible="False"
                cs:id="Border_0000">
            <TextBlock x:Name="PART_GridNewRowText"
                       Foreground="#FFA3A3A3"
                       HorizontalAlignment="Center"
                       Margin="0,1,0,2"
                       VerticalAlignment="Center"
                       cs:id="TextBlock_0000">
                <TextBlock.Text>
                    <Binding ConverterParameter="GridNewRowText" Path="View.LocalizationDescriptor">
                        <Binding.Converter>
                            <dxgcore:DynamicLocalizationStringValueConvertor/>
                        </Binding.Converter>
                    </Binding>
                </TextBlock.Text>
            </TextBlock>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=NewItemRowTemplate}" TargetType="{x:Type ContentControl}">
        <Grid Margin="0,0,0,1">
            <Border x:Name="borderFocused"
                    Background="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderFocusedBrush}}"
                    dxgcore:FadeSelectionHelper.FadeSelectionOnLostFocus="{Binding Path=View.ActualFadeSelectionOnLostFocus}"
                    dxgcore:FadeSelectionHelper.IsKeyboardFocusWithinView="{Binding Path=(dxg:GridControl.ActiveView).IsKeyboardFocusWithin, RelativeSource={RelativeSource Mode=Self}}"
                    Margin="0"
                    SnapsToDevicePixels="True">
                <Border.Visibility>
                    <Binding Path="SelectionState">
                        <Binding.Converter>
                            <dxgcore:SelectionStateToVisibilityConverter Value="Focused"/>
                        </Binding.Converter>
                    </Binding>
                </Border.Visibility>
            </Border>
            <ContentControl HorizontalContentAlignment="Stretch">
                <ContentPresenter/>
            </ContentControl>
            <dxgcore:RowNewItemTextControl Visibility="{Binding Path=IsFocused, Converter={StaticResource BooleanToVisibilityConverterInverted}}"/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=AutoFilterRowClearButtonTemplate}" TargetType="{x:Type Button}">
        <Grid Background="Transparent" cs:id="Grid_0000">
            <Grid Height="16"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Width="16">
                <Path x:Name="Glyph"
                      Data="F1 M 6.5,0.00012207C 10.0899,0.00012207 13,2.91028 13,6.50012C 13,10.09 10.0898,13.0001 6.5,13.0001C 2.91014,13.0001 2.58287e-006,10.09 2.58287e-006,6.50012C 2.58287e-006,2.91028 2.91004,0.00012207 6.5,0.00012207 Z M 3.00002,3.99988L 5.50002,6.49988L 3.00003,8.99988L 3.00003,9.99988L 4.00003,9.99988L 6.49998,7.49988L 9.00001,9.99988L 10,9.99988L 10,8.99988L 7.49994,6.49988L 10,3.99976L 10,2.99988L 9.00003,2.99988L 6.49998,5.49988L 4.00001,2.99988L 3.00001,2.99988L 3.00002,3.99988 Z "
                      Fill="#000000"
                      Height="12"
                      HorizontalAlignment="Center"
                      Opacity="0.62"
                      Stretch="Fill"
                      VerticalAlignment="Center"
                      Width="12"
                      cs:id="Path_0000"/>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Glyph" Property="Opacity" Value="1"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Glyph" Property="Opacity" Value="1"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=FilterCellContentPresenterTemplate}" TargetType="{x:Type dxg:FilterCellContentPresenter}">
        <Border x:Name="ContentBorder"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderState}"
                Padding="{TemplateBinding Padding}">
            <!--ONLY SL<VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="SelectionStates">
                    <VisualState x:Name="None"/>
                    <VisualState x:Name="Selected">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="(SolidColorBrush.BorderBrush).Color" To="Transparent" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="(SolidColorBrush.BorderBrush).Color" To="Transparent" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="FocusedAndSelected">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="(SolidColorBrush.BorderBrush).Color" To="Transparent" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="RowFocused">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="(SolidColorBrush.BorderBrush).Color" To="Transparent" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="RowSelected">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="(SolidColorBrush.BorderBrush).Color" To="Transparent" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>ONLY SL-->
            <Border BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}">
                <!--BEGIN WPF-->
                <Border.Background>
                    <Binding Path="Background" RelativeSource="{RelativeSource TemplatedParent}"/>
                </Border.Background>
                <!--END WPF-->
                <!--ONLY SL<Border.Background>
                <Binding Path="SelectionState" RelativeSource="{RelativeSource TemplatedParent}">
                    <Binding.Converter>
                        <dx:EnumToObjectConverter>
                            <dx:EnumToObjectConverter.Values>
                                <dx:EnumObjectProvider x:Key="None" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=CellBorderNoneBrush}}"/>
                                <dx:EnumObjectProvider x:Key="Selected" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderSelectedBrush}}"/>
                                <dx:EnumObjectProvider x:Key="Focused" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=CellBorderFocusedBrush}}"/>
                                <dx:EnumObjectProvider x:Key="FocusedAndSelected" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderFocusedBrush}}"/>
                            </dx:EnumToObjectConverter.Values>
                        </dx:EnumToObjectConverter>
                    </Binding.Converter>
                </Binding>
                </Border.Background>ONLY SL-->
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Border x:Name="leftBandSeparator"
                            Background="{Binding Column.ActualBandCellLeftSeparatorColor}"
                            BorderBrush="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}"
                            BorderThickness="0,0,1,0"
                            Margin="0,-1,0,-1"
                            Width="{Binding Column.ActualBandLeftSeparatorWidth}"/>
                    <dxgcore:FilterCriteriaControl Column="{Binding Column}"
                                                   Grid.Column="1"
                                                   Visibility="{Binding Path=Column.ActualShowCriteriaInAutoFilterRow, Converter={dx:BooleanToVisibilityConverter}}"/>
                    <dxgcore:FilterRowCellEditor x:Name="PART_CellEditor" Grid.Column="2"/>
                    <Button Name="PART_ClearButton"
                            Background="#00000000"
                            dx:FocusHelper2.Focusable="False"
                            Grid.Column="3"
                            Height="18"
                            Template="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=AutoFilterRowClearButtonTemplate}}"
                            Visibility="Collapsed"
                            cs:id="Button_0000">
                        <mvvm:Interaction.Behaviors>
                            <mvvm:EventToCommand EventName="PreviewMouseLeftButtonDown" Command="{Binding Path=ClearCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxg:FilterCellContentPresenter}}"/>
                        </mvvm:Interaction.Behaviors>
                    </Button>
                    <Border x:Name="rightBandSeparator"
                            Background="{Binding Column.ActualBandCellRightSeparatorColor}"
                            BorderBrush="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}"
                            BorderThickness="1,0,0,0"
                            Grid.Column="4"
                            Margin="0,-1,0,-1"
                            Width="{Binding Column.ActualBandRightSeparatorWidth}"/>
                </Grid>
            </Border>
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Column.ActualBandCellLeftSeparatorColor}" Value="{x:Null}">
                <Setter Property="Background"
                        TargetName="leftBandSeparator"
                        Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Column.ActualBandCellRightSeparatorColor}" Value="{x:Null}">
                <Setter Property="Background"
                        TargetName="rightBandSeparator"
                        Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxgcore:RowData.RowData).SelectionState, RelativeSource={RelativeSource Self}}" Value="Focused">
                <Setter Property="BorderBrush"
                        TargetName="ContentBorder"
                        Value="Transparent"
                        cs:id="Setter_0000"/>
                <Setter Property="TextBlock.Foreground"
                        TargetName="PART_CellEditor"
                        Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextFocusedBrush}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=SelectionState}" Value="Focused">
                <Setter Property="TextBlock.Foreground"
                        TargetName="PART_CellEditor"
                        Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=CellTextFocusedBrush}}"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Column.ActualAllowAutoFilterClearButton}" Value="True"/>
                    <Condition Binding="{Binding Column.AutoFilterValue, Converter={dxgi:StringToBoolConverter}}" Value="True"/>
                    <Condition Binding="{Binding View.AutoFilterRowClearButtonMode}" Value="Always"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Visibility"
                        TargetName="PART_ClearButton"
                        Value="Visible"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Column.ActualAllowAutoFilterClearButton}" Value="True"/>
                    <Condition Binding="{Binding Column.AutoFilterValue, Converter={dxgi:StringToBoolConverter}}" Value="True"/>
                    <Condition Binding="{Binding View.AutoFilterRowClearButtonMode}" Value="Display"/>
                    <Condition Binding="{Binding IsFocusedCell, ElementName=PART_CellEditor}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Visibility"
                        TargetName="PART_ClearButton"
                        Value="Visible"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Column.ActualAllowAutoFilterClearButton}" Value="True"/>
                    <Condition Binding="{Binding Column.AutoFilterValue, Converter={dxgi:StringToBoolConverter}}" Value="True"/>
                    <Condition Binding="{Binding View.AutoFilterRowClearButtonMode}" Value="Edit"/>
                    <Condition Binding="{Binding IsFocusedCell, ElementName=PART_CellEditor}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Visibility"
                        TargetName="PART_ClearButton"
                        Value="Visible"/>
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <SolidColorBrush x:Key="{dxgt:TableViewThemeKey ResourceKey=ColumnChooserBackgroundBrush}" Color="#FFFFFFFF"/>

    <SolidColorBrush x:Key="{dxgt:TableViewThemeKey ResourceKey=ColumnChooserBorderBrush}" Color="#FF7E7E7E"/>

    <DataTemplate x:Key="{dxgt:GridColumnHeaderThemeKey ResourceKey=FixedColumnsDelimiterTemplate}">
        <Border Background="#FF6E6E6E"
                BorderBrush="#FFFFFFFF"
                BorderThickness="1,0,1,0"
                cs:id="Border_0001"/>
    </DataTemplate>

    <ControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=CellContentPresenterTemplate}" TargetType="{x:Type dxgcore:CellContentPresenter}">
        <Border x:Name="ContentBorder"
                Background="Transparent"
                BorderThickness="{TemplateBinding BorderState}"
                cs:id="Border_0000">
            <Border.BorderBrush>
                <!--BEGIN WPF-->
                <Binding Path="BorderBrush" RelativeSource="{RelativeSource TemplatedParent}"/>
                <!--END WPF-->
                <!--ONLY SL<SolidColorBrush x:Name="ContentBorderBorderBrush" Color="#FFD3D3D3"/>ONLY SL-->
            </Border.BorderBrush>
            <!--ONLY SL<VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="SelectionStates">
                    <VisualState x:Name="None"/>
                    <VisualState x:Name="Selected">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="InnerBorderBackground" Storyboard.TargetProperty="(SolidColorBrush.Color)" To="#FFDBE9F9" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="InnerBorderBackground" Storyboard.TargetProperty="(SolidColorBrush.Color)" To="#FFdbe9f9" Duration="0"/>
                            <ColorAnimation Storyboard.TargetName="Foreground" Storyboard.TargetProperty="(SolidColorBrush.Color)" To="#FF000000" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="FocusedAndSelected">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="InnerBorderBackground" Storyboard.TargetProperty="(SolidColorBrush.Color)" To="#FF6DA2DE" Duration="0"/>
                            <ColorAnimation Storyboard.TargetName="Foreground" Storyboard.TargetProperty="(SolidColorBrush.Color)" To="#FFFFFFFF" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="RowFocused">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="Foreground" Storyboard.TargetProperty="(SolidColorBrush.Color)" To="#FFFFFFFF" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="RowSelected">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="Foreground" Storyboard.TargetProperty="(SolidColorBrush.Color)" To="#FF000000" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ShowVerticalLineStates">
                    <VisualState x:Name="Visible"/>
                    <VisualState x:Name="VisibleFocused">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="ContentBorderBorderBrush" Storyboard.TargetProperty="(SolidColorBrush.Color)" To="Transparent" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>ONLY SL-->
            <Border BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}">
                <!--ONLY SL<Border.Background>
                    <SolidColorBrush x:Name="InnerBorderBackground" Color="Transparent"/>
                </Border.Background>ONLY SL-->
                <!--BEGIN WPF-->
                <Border.Background>
                    <Binding Path="Background" RelativeSource="{RelativeSource TemplatedParent}"/>
                </Border.Background>
                <!--END WPF-->
                <dxgcore:CellEditor x:Name="PART_CellEditor">
                    <!--ONLY SL<dxgcore:CellEditor.Foreground>
                        <SolidColorBrush x:Name="Foreground" Color="Black"/>
                    </dxgcore:CellEditor.Foreground>
                    <dxgcore:CellEditor.Template>
                        <ControlTemplate TargetType="ContentControl">
                            <dxe:InplaceEditorContentPresenter/>
                        </ControlTemplate>
                    </dxgcore:CellEditor.Template>ONLY SL-->
                </dxgcore:CellEditor>
            </Border>
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=RowData.SelectionState}" Value="Focused">
                <Setter Property="BorderBrush"
                        TargetName="ContentBorder"
                        Value="Transparent"
                        cs:id="Setter_0000"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=FitColumnContentTemplate}">
        <Border Name="fitColumnVerticalLine"
                Background="Transparent"
                BorderBrush="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}"
                cs:id="Border_0000">
            <Border.Opacity>
                <Binding Path="View.ShowVerticalLines">
                    <Binding.Converter>
                        <dx:BoolToObjectConverter FalseValue="0" TrueValue="1"/>
                    </Binding.Converter>
                </Binding>
            </Border.Opacity>
            <Border.BorderThickness>
                <Binding Path="SelectionState">
                    <Binding.Converter>
                        <dx:EnumToObjectConverter DefaultValue="1,0,0,0">
                            <dx:EnumToObjectConverter.Values>
                                <dx:EnumObjectProvider x:Key="Focused" Value="0"/>
                            </dx:EnumToObjectConverter.Values>
                        </dx:EnumToObjectConverter>
                    </Binding.Converter>
                </Binding>
            </Border.BorderThickness>
        </Border>
        <ControlTemplate.Triggers>
            <!--<DataTrigger Binding="{Binding Path=(dxgcore:RowData.RowData).SelectionState, RelativeSource={RelativeSource Self}}" Value="Focused">
                <Setter Property="BorderBrush" Value="Transparent" TargetName="fitColumnVerticalLine"/>
            </DataTrigger>-->
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=FitColumnLeftContentTemplate}">
        <Border Name="fitColumnVerticalLine"
                Background="Transparent"
                BorderBrush="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}"
                cs:id="Border_0000">
            <Border.Opacity>
                <Binding Path="View.ShowVerticalLines">
                    <Binding.Converter>
                        <dx:BoolToObjectConverter FalseValue="0" TrueValue="1"/>
                    </Binding.Converter>
                </Binding>
            </Border.Opacity>
            <Border.BorderThickness>
                <Binding Path="SelectionState">
                    <Binding.Converter>
                        <dx:EnumToObjectConverter DefaultValue="0,0,1,0">
                            <dx:EnumToObjectConverter.Values>
                                <dx:EnumObjectProvider x:Key="Focused" Value="0"/>
                            </dx:EnumToObjectConverter.Values>
                        </dx:EnumToObjectConverter>
                    </Binding.Converter>
                </Binding>
            </Border.BorderThickness>
        </Border>
        <ControlTemplate.Triggers>
            <!--<DataTrigger Binding="{Binding Path=(dxgcore:RowData.RowData).SelectionState, RelativeSource={RelativeSource Self}}" Value="Focused">
                <Setter Property="BorderBrush" Value="Transparent" TargetName="fitColumnVerticalLine"/>
            </DataTrigger>-->
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <DataTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=FixedColumnsDelimiterTemplate}">
        <Border x:Name="border"
                Background="Transparent"
                BorderBrush="White"
                BorderThickness="1,0,1,0"
                Margin="0,0,0,-1"
                cs:id="Border_0001">
            <Border Background="#FF6E6E6E" cs:id="Border_0000">
                <Border.Visibility>
                    <Binding Path="View.ShowVerticalLines">
                        <Binding.Converter>
                            <dx:BoolToVisibilityConverter/>
                        </Binding.Converter>
                    </Binding>
                </Border.Visibility>
            </Border>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=AutoFilterRowItemTemplate}">
        <dxgcore:FilterCellContentPresenter Column="{Binding Path=Column}"
                                            ColumnPosition="{Binding Path=Column.ColumnPosition}"
                                            dxgcore:GridColumn.NavigationIndex="{Binding Path=Column.(dxg:GridColumn.ActualVisibleIndex)}"
                                            HasLeftSibling="{Binding Path=Column.HasLeftSibling}"
                                            HasRightSibling="{Binding Path=Column.HasRightSibling}"
                                            HasTopElement="{Binding Path=Column.HasTopElement}"
                                            IsFocusedCell="{Binding Path=IsFocusedCell}"
                                            RowData="{Binding RowData}"
                                            SelectionState="{Binding Path=SelectionState}"
                                            ShowHorizontalLines="{Binding Path=View.ShowHorizontalLines}"
                                            ShowVerticalLines="{Binding Path=View.ShowVerticalLines}"
                                            Style="{Binding Path=Column.ActualAutoFilterRowCellStyle}"
                                            Width="{Binding Path=Column.ActualAdditionalRowDataWidth}"/>
    </DataTemplate>

    <DataTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=NewItemRowItemTemplate}">
        <dxgcore:NewItemRowCellContentPresenter Column="{Binding Path=Column}"
                                                ColumnPosition="{Binding Path=Column.ColumnPosition}"
                                                dxgcore:GridColumn.NavigationIndex="{Binding Path=Column.(dxg:GridColumn.ActualVisibleIndex)}"
                                                HasLeftSibling="{Binding Path=Column.HasLeftSibling}"
                                                HasRightSibling="{Binding Path=Column.HasRightSibling}"
                                                HasTopElement="{Binding Path=Column.HasTopElement}"
                                                IsFocusedCell="{Binding Path=IsFocusedCell}"
                                                RowData="{Binding RowData}"
                                                SelectionState="{Binding Path=SelectionState}"
                                                ShowHorizontalLines="{Binding Path=View.ShowHorizontalLines}"
                                                ShowVerticalLines="{Binding Path=View.ShowVerticalLines}"
                                                Style="{Binding Path=Column.ActualNewItemRowCellStyle}"
                                                Width="{Binding Path=Column.ActualAdditionalRowDataWidth}"/>
    </DataTemplate>

    <DataTemplate x:Key="{dxgt:TableViewThemeKey ResourceKey=HeaderTemplate}">
        <ContentPresenter Content="{Binding}"
                          Margin="3"
                          TextBlock.FontSize="14"
                          UseLayoutRounding="True"
                          VerticalAlignment="Center"/>
    </DataTemplate>

    <ControlTemplate x:Key="{dxgt:TableViewThemeKey ResourceKey=TopPanel}">
        <Grid x:Name="TopGrid"
              ClipToBounds="True"
              SnapsToDevicePixels="true">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Border x:Name="headerContent">
                <Grid>
                    <ContentControl Content="{Binding Path=(dxg:GridControl.CurrentView).Header, RelativeSource={RelativeSource TemplatedParent}}"
                                    ContentTemplate="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=HeaderTemplate}}"
                                    HorizontalAlignment="{Binding Path=(dxg:GridControl.CurrentView).HeaderHorizontalAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                                    Margin="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=HeaderMargin}}">
                    </ContentControl>
                    <Border x:Name="PART_HeaderBorderBottom"
                            BorderBrush="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=SearchPanelBorderBottomBrush}}"
                            BorderThickness="0,0,0,1"
                            Margin="-3,0,-3,-3"
                            VerticalAlignment="Bottom">
                        <Border.Visibility>
                            <Binding ElementName="PART_GroupPanel" Path="Visibility">
                                <Binding.Converter>
                                    <dx:VisibilityInverseConverter/>
                                </Binding.Converter>
                            </Binding>
                        </Border.Visibility>
                    </Border>
                </Grid>
                <Grid.ColumnSpan>
                    <MultiBinding>
                        <MultiBinding.Bindings>
                            <Binding Path="(dxg:GridControl.CurrentView).IsCompactMode" RelativeSource="{RelativeSource TemplatedParent}"/>
                            <Binding Path="(dxg:GridControl.CurrentView).ActualShowCompactPanel" RelativeSource="{RelativeSource TemplatedParent}"/>
                            <Binding Path="(dxg:GridControl.CurrentView).HeaderPosition" RelativeSource="{RelativeSource TemplatedParent}"/>
                            <Binding Path="(dxg:GridControl.CurrentView).Header" RelativeSource="{RelativeSource TemplatedParent}"/>
                            <Binding Path="(dxg:GridControl.CurrentView).ActualSearchPanelPosition" RelativeSource="{RelativeSource Self}"/>
                        </MultiBinding.Bindings>
                        <MultiBinding.Converter>
                            <dxgcore:HeaderGridColumnSpanConverter/>
                        </MultiBinding.Converter>
                    </MultiBinding>
                </Grid.ColumnSpan>
                <Grid.Row>
                    <MultiBinding>
                        <MultiBinding.Bindings>
                            <Binding Path="(dxg:GridControl.CurrentView).IsCompactMode" RelativeSource="{RelativeSource TemplatedParent}"/>
                            <Binding Path="(dxg:GridControl.CurrentView).ActualShowCompactPanel" RelativeSource="{RelativeSource TemplatedParent}"/>
                            <Binding Path="(dxg:GridControl.CurrentView).HeaderPosition" RelativeSource="{RelativeSource TemplatedParent}"/>
                            <Binding Path="(dxg:GridControl.CurrentView).Header" RelativeSource="{RelativeSource TemplatedParent}"/>
                            <Binding Path="(dxg:GridControl.CurrentView).ActualSearchPanelPosition" RelativeSource="{RelativeSource Self}"/>
                        </MultiBinding.Bindings>
                        <MultiBinding.Converter>
                            <dxgcore:HeaderGridRowConverter/>
                        </MultiBinding.Converter>
                    </MultiBinding>
                </Grid.Row>
                <Border.Visibility>
                    <Binding Path="(dxg:GridControl.CurrentView).Header" RelativeSource="{RelativeSource TemplatedParent}">
                        <Binding.Converter>
                            <dx:ObjectToVisibilityConverter HandleList="False"/>
                        </Binding.Converter>
                    </Binding>
                </Border.Visibility>
                <Border.Margin>
                    <Binding Path="(dxg:GridControl.CurrentView).HeaderPosition" RelativeSource="{RelativeSource TemplatedParent}">
                        <Binding.Converter>
                            <mvvm:ObjectToObjectConverter DefaultSource="Top" DefaultTarget="3">
                                <mvvm:MapItem Source="CompactPanel" Target="3,0,3,3"/>
                            </mvvm:ObjectToObjectConverter>
                        </Binding.Converter>
                    </Binding>
                </Border.Margin>
            </Border>
            <dxgcore:CompactPanel x:Name="PART_CompactPanel"
                                  Grid.Row="2"
                                  View="{Binding Path=(dxgcore:DataControlBase.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                                  Visibility="{Binding View.ActualShowCompactPanel, RelativeSource={RelativeSource Self}, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid.ColumnSpan>
                    <MultiBinding>
                        <MultiBinding.Bindings>
                            <Binding Path="(dxg:GridControl.CurrentView).IsCompactMode" RelativeSource="{RelativeSource Self}"/>
                            <Binding Path="(dxg:GridControl.CurrentView).ActualShowCompactPanel" RelativeSource="{RelativeSource Self}"/>
                            <Binding Path="(dxg:GridControl.CurrentView).HeaderPosition" RelativeSource="{RelativeSource Self}"/>
                            <Binding Path="(dxg:GridControl.CurrentView).Header" RelativeSource="{RelativeSource Self}"/>
                            <Binding Path="(dxg:GridControl.CurrentView).ActualSearchPanelPosition" RelativeSource="{RelativeSource Self}"/>
                        </MultiBinding.Bindings>
                        <MultiBinding.Converter>
                            <dxgcore:CompactPanelGridColumnSpanConverter/>
                        </MultiBinding.Converter>
                    </MultiBinding>
                </Grid.ColumnSpan>
                <Grid.Column>
                    <MultiBinding>
                        <MultiBinding.Bindings>
                            <Binding Path="(dxg:GridControl.CurrentView).IsCompactMode" RelativeSource="{RelativeSource Self}"/>
                            <Binding Path="(dxg:GridControl.CurrentView).ActualShowCompactPanel" RelativeSource="{RelativeSource Self}"/>
                            <Binding Path="(dxg:GridControl.CurrentView).HeaderPosition" RelativeSource="{RelativeSource Self}"/>
                            <Binding Path="(dxg:GridControl.CurrentView).Header" RelativeSource="{RelativeSource Self}"/>
                        </MultiBinding.Bindings>
                        <MultiBinding.Converter>
                            <dxgcore:CompactPanelGridColumnConverter/>
                        </MultiBinding.Converter>
                    </MultiBinding>
                </Grid.Column>
            </dxgcore:CompactPanel>
            <dxgcore:GroupPanelControl x:Name="PART_GroupPanel"
                                       dxb:BarManager.DXContextMenu="{Binding Path=(dxg:GridControl.CurrentView).DataControlMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                       Grid.ColumnSpan="3"
                                       Grid.Row="3"
                                       View="{Binding Path=(dxgcore:DataControlBase.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                                       Visibility="Collapsed">
            </dxgcore:GroupPanelControl>
            <Button x:Name="searchPanelShowButton"
                    Command="{Binding Path=(dxg:GridControl.CurrentView).Commands.ShowSearchPanel, RelativeSource={RelativeSource TemplatedParent}}"
                    Grid.Column="2"
                    Grid.Row="3"
                    Style="{DynamicResource {dxet:SearchControlThemeKey ResourceKey=ShowButtonStyle}}">
                <Button.Content>
                    <Path Data="F1 M 4,1.90735e-006C 6.20914,1.90735e-006 8,1.79086 8,4C 8,4.84917 7.73539,5.63653 7.28414,6.28414L 10,9L 9,10L 6.28414,7.28414C 5.63653,7.7354 4.84917,8 4,8C 1.79086,8 0,6.20914 0,4C 0,1.79086 1.79086,1.90735e-006 4,1.90735e-006 Z M 4,1C 2.34315,1 1,2.34315 1,4C 1,5.65686 2.34315,7 4,7C 5.65685,7 7,5.65686 7,4C 7,2.34315 5.65685,1 4,1 Z "
                          Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}"
                          Height="14"
                          HorizontalAlignment="Center"
                          Stretch="Fill"
                          VerticalAlignment="Center"
                          Width="14"/>
                </Button.Content>
                <Button.Visibility>
                    <MultiBinding>
                        <MultiBinding.Bindings>
                            <Binding Path="(dxgcore:DataControlBase.CurrentView).ActualShowSearchPanel" RelativeSource="{RelativeSource TemplatedParent}"/>
                            <Binding Path="(dxgcore:DataControlBase.CurrentView).ActualSearchPanelPosition" RelativeSource="{RelativeSource TemplatedParent}"/>
                            <Binding Path="(dxgcore:DataControlBase.CurrentView).ShowSearchPanelMode" RelativeSource="{RelativeSource TemplatedParent}"/>
                        </MultiBinding.Bindings>
                        <MultiBinding.Converter>
                            <dxgcore:SearchPanelShowButtonVisibilityConverter/>
                        </MultiBinding.Converter>
                    </MultiBinding>
                </Button.Visibility>
                <dxgcore:GridViewHitInfoBase.HitTestAcceptor>
                    <dxgi:SearchPanelShowButtonHitTestAcceptor/>
                </dxgcore:GridViewHitInfoBase.HitTestAcceptor>
            </Button>
            <ContentControl x:Name="part_SearchControlContainer"
                            dxgcore:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                            Grid.Row="1"
                            Style="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=SearchPanelContentTemplate}}"
                            Visibility="{Binding Path=(dxg:GridControl.CurrentView).ActualShowSearchPanel, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}">
                <dxgcore:GridViewHitInfoBase.HitTestAcceptor>
                    <dxgi:GridSearchPanelHitTestAcceptor/>
                </dxgcore:GridViewHitInfoBase.HitTestAcceptor>
                <Grid.ColumnSpan>
                    <MultiBinding>
                        <MultiBinding.Bindings>
                            <Binding Path="(dxg:GridControl.CurrentView).IsCompactMode" RelativeSource="{RelativeSource Self}"/>
                            <Binding Path="(dxg:GridControl.CurrentView).ActualShowCompactPanel" RelativeSource="{RelativeSource Self}"/>
                            <Binding Path="(dxg:GridControl.CurrentView).HeaderPosition" RelativeSource="{RelativeSource Self}"/>
                            <Binding Path="(dxg:GridControl.CurrentView).Header" RelativeSource="{RelativeSource Self}"/>
                            <Binding Path="(dxg:GridControl.CurrentView).ActualSearchPanelPosition" RelativeSource="{RelativeSource Self}"/>
                        </MultiBinding.Bindings>
                        <MultiBinding.Converter>
                            <dxgcore:SearchPanelGridColumnSpanConverter/>
                        </MultiBinding.Converter>
                    </MultiBinding>
                </Grid.ColumnSpan>
                <Grid.Column>
                    <MultiBinding>
                        <MultiBinding.Bindings>
                            <Binding Path="(dxg:GridControl.CurrentView).IsCompactMode" RelativeSource="{RelativeSource Self}"/>
                            <Binding Path="(dxg:GridControl.CurrentView).ActualShowCompactPanel" RelativeSource="{RelativeSource Self}"/>
                            <Binding Path="(dxg:GridControl.CurrentView).HeaderPosition" RelativeSource="{RelativeSource Self}"/>
                            <Binding Path="(dxg:GridControl.CurrentView).Header" RelativeSource="{RelativeSource Self}"/>
                            <Binding Path="(dxg:GridControl.CurrentView).ActualSearchPanelPosition" RelativeSource="{RelativeSource Self}"/>
                        </MultiBinding.Bindings>
                        <MultiBinding.Converter>
                            <dxgcore:SearchPanelGridColumnConverter/>
                        </MultiBinding.Converter>
                    </MultiBinding>
                </Grid.Column>
            </ContentControl>
            <Border x:Name="compactPanelBorder"
                    Background="Transparent"
                    BorderBrush="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=GroupPanelBorderBrush}}"
                    Grid.ColumnSpan="3"
                    Grid.Row="4"
                    Visibility="{Binding GroupPanelShown, ElementName=PART_CompactPanel, Converter={StaticResource BooleanToVisibilityConverterInverted}}"
                    cs:id="Border_0000"/>
            <Border x:Name="GroupPanelBorder"
                    Background="Transparent"
                    BorderBrush="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=GroupPanelBorderBrush}}"
                    BorderThickness="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=GroupPanelBorderThickness}}"
                    Grid.ColumnSpan="3"
                    Grid.Row="5"
                    Visibility="{Binding Visibility, ElementName=PART_GroupPanel}"
                    cs:id="Border_0001"/>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.CurrentView).ActualShowCompactPanel, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Grid.Row"
                        TargetName="part_SearchControlContainer"
                        Value="2"/>
                <Setter Property="Margin"
                        TargetName="compactPanelBorder"
                        Value="0,-1,0,0"/>
                <Setter Property="BorderThickness"
                        TargetName="compactPanelBorder"
                        Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=GroupPanelBorderThickness}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.CurrentView).IsCompactMode, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Grid.Row"
                        TargetName="part_SearchControlContainer"
                        Value="1"/>
            </DataTrigger>
            <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                <Setter Property="MaxWidth"
                        TargetName="part_SearchControlContainer"
                        Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=SearchPanelWidthTouch}}"/>
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MaxWidth"
                        TargetName="part_SearchControlContainer"
                        Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=SearchPanelWidthTouch}}"/>
            </Trigger>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.CurrentView).ActualSearchPanelPosition, RelativeSource={RelativeSource Self}}" Value="OverGroupPanel">
                <Setter Property="Width"
                        TargetName="part_SearchControlContainer"
                        Value="NaN"/>
                <Setter Property="MaxWidth"
                        TargetName="part_SearchControlContainer"
                        Value="Infinity"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.CurrentView).ActualSearchPanelPosition, RelativeSource={RelativeSource Self}}" Value="Default">
                <Setter Property="MaxWidth"
                        TargetName="part_SearchControlContainer"
                        Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=SearchPanelWidth}}"/>
                <Setter Property="Grid.Row"
                        TargetName="part_SearchControlContainer"
                        Value="3"/>
                <Setter Property="Grid.ColumnSpan"
                        TargetName="PART_GroupPanel"
                        Value="2"/>
                <Setter Property="Width" TargetName="part_SearchControlContainer">
                    <Setter.Value>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding ElementName="TopGrid" Path="ActualWidth"/>
                                <Binding Path="MaxWidth" RelativeSource="{RelativeSource Self}"/>
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxgcore:SearchPanelWidthConverter Delta="10"/>
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.CurrentView).Header, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                <Setter Property="Visibility"
                        TargetName="headerContent"
                        Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.CurrentView).HeaderPosition, RelativeSource={RelativeSource Self}}" Value="CompactPanel">
                <Setter Property="Visibility" TargetName="headerContent">
                    <Setter.Value>
                        <Binding Path="(dxg:GridControl.CurrentView).ActualShowCompactPanel" RelativeSource="{RelativeSource TemplatedParent}">
                            <Binding.Converter>
                                <dx:BoolToObjectConverter FalseValue="Collapsed" TrueValue="Visible"/>
                            </Binding.Converter>
                        </Binding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.CurrentView).HeaderPosition, RelativeSource={RelativeSource Self}}" Value="SearchPanel">
                <Setter Property="Visibility" TargetName="headerContent">
                    <Setter.Value>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding Path="(dxg:GridControl.CurrentView).ActualShowSearchPanel" RelativeSource="{RelativeSource TemplatedParent}"/>
                                <Binding Path="(dxg:GridControl.CurrentView).ActualSearchPanelPosition" RelativeSource="{RelativeSource TemplatedParent}"/>
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxgcore:HeaderVisibilityConverter/>
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:TableViewThemeKey ResourceKey=ScrollViewerTemplate}">
        <!--ONLY SL <dxg:ScrollViewerContentDecorator View="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">ONLY SL-->
        <Grid ClipToBounds="True"
              dxgcore:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
              SnapsToDevicePixels="true">
            <dx:ScrollBarExtensions.ScrollBehavior>
                <Binding Path="(dxg:GridControl.CurrentView).UseExtendedMouseScrolling" RelativeSource="{RelativeSource Self}">
                    <Binding.Converter>
                        <dx:BoolToObjectConverter FalseValue="{dx:NativeScrollBehavior}" TrueValue="{dxgcore:DataPresenterScrollBehavior}"/>
                    </Binding.Converter>
                </Binding>
            </dx:ScrollBarExtensions.ScrollBehavior>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <dx:BestFitDecorator x:Name="PART_BestFitControlDecorator"
                                 dxgcore:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                                 Height="0"
                                 Width="0">
                <dxgcore:GridControl.CurrentViewChangedListener>
                    <dxgcore:BestFitControlDecoratorInitializer/>
                </dxgcore:GridControl.CurrentViewChangedListener>
            </dx:BestFitDecorator>
            <dxgcore:AdditionalRowItemsControl dxgcore:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                                               Grid.Row="2"
                                               Margin="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=RowPresenterGridMargin}}"/>
            <Border Background="#FF6E6E6E"
                    Grid.Row="2"
                    HorizontalAlignment="Left"
                    Visibility="{Binding Path=(dxg:GridControl.CurrentView).DataControl.ShowBorder, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}"
                    Width="1"
                    cs:id="Border_0000"/>
            <Grid x:Name="rowPresenterGrid"
                  dxgcore:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                  Grid.Row="3"
                  Margin="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=RowPresenterGridMargin}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="PART_FootersPanel"
                                  Content="{Binding Path=(dxg:GridControl.CurrentView).HeadersData, RelativeSource={RelativeSource TemplatedParent}}"
                                  ContentTemplate="{Binding Path=(dxg:GridControl.CurrentView).FooterTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                  dxgcore:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                                  Grid.Row="{Binding Path=(dxg:GridControl.CurrentView).TotalSummaryPosition, RelativeSource={RelativeSource TemplatedParent}, Converter={dxgi:TotalSummaryPositionToRowConverter TopRow=0, BottomRow=3}}"
                                  Visibility="{Binding Path=(dxg:GridControl.CurrentView).TotalSummaryPosition, RelativeSource={RelativeSource TemplatedParent}, Converter={dxgi:TotalSummaryPositionToVisibilityConverter}}">
                    <!--BEGIN WPF-->
                    <Grid.ColumnSpan>2</Grid.ColumnSpan>
                    <!--END WPF-->
                    <dxgcore:GridViewHitInfoBase.HitTestAcceptor>
                        <dxgi:TotalSummaryPanelTableViewHitTestAcceptor/>
                    </dxgcore:GridViewHitInfoBase.HitTestAcceptor>
                </ContentPresenter>
                <Grid Background="White"
                      Grid.Row="2"
                      cs:id="Grid_0000">
                    <Grid.ColumnSpan>
                        <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}">
                            <Binding.Converter>
                                <mvvm:ObjectToObjectConverter DefaultSource="Default" DefaultTarget="1">
                                    <mvvm:MapItem Source="TouchOverlap" Target="2"/>
                                </mvvm:ObjectToObjectConverter>
                            </Binding.Converter>
                        </Binding>
                    </Grid.ColumnSpan>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <ContentControl Margin="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=IndicatorMargin}}" Visibility="{Binding Path=(dxg:GridControl.CurrentView).ShowColumnHeaders, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverterInverted}}"></ContentControl>
                    <ScrollContentPresenter dxgcore:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                                            Grid.Row="1"
                                            MinWidth="{Binding Path=(dxg:GridControl.CurrentView).ScrollableAreaMinWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                        <dxgcore:FocusRectPresenter.IsVerticalScrollHost>True</dxgcore:FocusRectPresenter.IsVerticalScrollHost>
                        <!--BEGIN WPF-->
                        <ScrollViewer.CanContentScroll>True</ScrollViewer.CanContentScroll>
                        <ScrollContentPresenter.Name>PART_ScrollContentPresenter</ScrollContentPresenter.Name>
                        <!--END WPF-->
                        <!--ONLY SL<ScrollContentPresenter.Name>ScrollContentPresenter</ScrollContentPresenter.Name>ONLY SL-->
                        <dxgcore:GridControl.CurrentViewChangedListener>
                            <dxgcore:ScrollContentPresenterInitializer/>
                        </dxgcore:GridControl.CurrentViewChangedListener>
                        <ScrollContentPresenter.Content>
                            <dxgcore:DataPresenter x:Name="dataPresenter"
                                                   dxgcore:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                                                   Template="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=DataPresenterTemplate}}"/>
                        </ScrollContentPresenter.Content>
                        <dxgcore:GridViewHitInfoBase.HitTestAcceptor>
                            <dxgi:DataAreaTableViewHitTestAcceptor/>
                        </dxgcore:GridViewHitInfoBase.HitTestAcceptor>
                    </ScrollContentPresenter>
                    <ContentControl Grid.Row="1"
                                    HorizontalContentAlignment="Center"
                                    VerticalContentAlignment="Center">
                        <ContentControl.Template>
                            <ControlTemplate TargetType="{x:Type ContentControl}">
                                <ContentPresenter Content="{TemplateBinding Content}"
                                                  HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Stretch"/>
                            </ControlTemplate>
                        </ContentControl.Template>
                        <ContentControl.Visibility>
                            <Binding Path="(dxg:GridControl.CurrentView).WaitIndicatorType" RelativeSource="{RelativeSource TemplatedParent}">
                                <Binding.Converter>
                                    <dx:EnumToObjectConverter DefaultValue="Collapsed">
                                        <dx:EnumToObjectConverter.Values>
                                            <dx:EnumObjectProvider x:Key="Panel" Value="Visible"/>
                                        </dx:EnumToObjectConverter.Values>
                                    </dx:EnumToObjectConverter>
                                </Binding.Converter>
                            </Binding>
                        </ContentControl.Visibility>
                        <dx:WaitIndicator DeferedVisibility="{Binding Path=(dxg:GridControl.CurrentView).IsWaitIndicatorVisible, RelativeSource={RelativeSource TemplatedParent}}" Style="{Binding Path=(dxg:GridControl.CurrentView).WaitIndicatorStyle, RelativeSource={RelativeSource TemplatedParent}}"/>
                    </ContentControl>
                    <dxgcore:FixedGroupsAdorner FixedElements="{Binding Content.FixedElements, ElementName=dataPresenter}"
                                                Grid.Row="1"
                                                HorizontalAlignment="Stretch"
                                                ParentControl="{Binding Content, ElementName=dataPresenter}"
                                                VerticalAlignment="Stretch"/>
                    <ContentPresenter x:Name="PART_AdditionalElementRowsPanelContainer"
                                      dxgcore:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                                      Grid.Row="1"
                                      HorizontalAlignment="Right"
                                      Visibility="Collapsed">
                        <dxgcore:GridControl.CurrentViewChangedListener>
                            <dxgcore:AdditionalElementRowsPanelInitializer/>
                        </dxgcore:GridControl.CurrentViewChangedListener>
                    </ContentPresenter>
                </Grid>
                <Grid Grid.Column="1"
                      Grid.Row="1"
                      HorizontalAlignment="Right"
                      Visibility="{Binding ComputedVerticalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                    <Grid.RowSpan>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}"/>
                                <Binding Path="(dxg:GridControl.CurrentView).ShowTotalSummary" RelativeSource="{RelativeSource TemplatedParent}"/>
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxgcore:VerticalScrollBarRowSpanConverter/>
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </Grid.RowSpan>
                    <ScrollBar dxgcore:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                               HorizontalAlignment="Right"
                               Maximum="{Binding ScrollableHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                               Value="{Binding VerticalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                               ViewportSize="{Binding ViewportHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                        <ScrollBar.Name>PART_VerticalScrollBar</ScrollBar.Name>
                        <dxgcore:GridControl.CurrentViewChangedListener>
                            <dxgcore:VerticalScrollBarBlendCustomizationExtension/>
                        </dxgcore:GridControl.CurrentViewChangedListener>
                        <dxgcore:GridViewHitInfoBase.HitTestAcceptor>
                            <dxgi:VerticalScrollBarTableViewHitTestAcceptor/>
                        </dxgcore:GridViewHitInfoBase.HitTestAcceptor>
                    </ScrollBar>
                    <dxgcore:ScrollBarAnnotationsControl IsHitTestVisible="False"
                                                         Margin="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=AnnotationMargin}}"
                                                         Maximum="{Binding ScrollableHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                         RangeCollection="{Binding Path=(dxg:GridControl.CurrentView).ScrollBarAnnotationInfoRange, RelativeSource={RelativeSource TemplatedParent}}"
                                                         ScrollBar="{Binding ElementName=PART_VerticalScrollBar}"
                                                         ViewportSize="{Binding ViewportHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"/>
                </Grid>
                <Grid x:Name="gridTouchModeDataNavigator"
                      Background="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=DataNavigatorBackground}}"
                      Grid.ColumnSpan="2"
                      Grid.Row="5"
                      VerticalAlignment="Stretch"
                      Visibility="Collapsed">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Border x:Name="borderUpDataNavigatorTouch"
                            BorderBrush="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TotalSummaryBorderBrush}}"
                            BorderThickness="0"
                            Grid.Column="0"/>
                    <dxgcore:DataNavigator x:Name="PART_DataNavigationScrollTouchMode"
                                           Grid.Column="1"
                                           Height="{Binding Height, ElementName=PART_HorizontalScrollBar}"
                                           HorizontalAlignment="Right"
                                           View="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"/>
                </Grid>
                <DockPanel x:Name="gridScroll"
                           Margin="{DynamicResource ResourceKey={dxgt:TableViewThemeKey ResourceKey=HorizontalScrollbarMargin}}"
                           VerticalAlignment="Bottom"
                           Visibility="{Binding Path=(dxg:GridControl.CurrentView).ShowDataNavigator, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Grid.Row>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}"/>
                                <Binding Path="(dxg:GridControl.CurrentView).ShowTotalSummary" RelativeSource="{RelativeSource TemplatedParent}"/>
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxgcore:HorizontalScrollBarRowConverter/>
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </Grid.Row>
                    <Grid.RowSpan>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}"/>
                                <Binding Path="(dxg:GridControl.CurrentView).ShowTotalSummary" RelativeSource="{RelativeSource TemplatedParent}"/>
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxgcore:HorizontalScrollBarRowSpanConverter/>
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </Grid.RowSpan>
                    <Grid.ColumnSpan>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding Path="(dxg:GridControl.CurrentView).TotalSummaryPosition" RelativeSource="{RelativeSource TemplatedParent}"/>
                                <Binding Path="(dxg:GridControl.CurrentView).FixedRightContentWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
                                <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}"/>
                                <Binding Path="(dxg:GridControl.CurrentView).ExtendScrollBarToFixedColumns" RelativeSource="{RelativeSource TemplatedParent}"/>
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxgcore:HorizontalScrollBarGridColumnSpanConverter/>
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </Grid.ColumnSpan>
                    <ContentPresenter x:Name="PART_AdditionalElementScrollBarContainer"
                                      DockPanel.Dock="Right"
                                      dxgcore:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                                      Visibility="Collapsed">
                        <dxgcore:GridControl.CurrentViewChangedListener>
                            <dxgcore:AdditionalElementScrollBarInitializer/>
                        </dxgcore:GridControl.CurrentViewChangedListener>
                    </ContentPresenter>
                    <Grid Name="PART_ScrollBarContainer">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="scrollLeftCorner"
                                Style="{DynamicResource {dxgt:ScrollBarThemeKey ResourceKey=ScrollingCornerLeftStyle}}"
                                Width="{Binding Path=(dxg:GridControl.CurrentView).ActualIndicatorWidth, RelativeSource={RelativeSource TemplatedParent}}">
                            <!--BEGIN WPF-->
                            <Border.VerticalAlignment>
                                <Binding Converter="{StaticResource ScrollBarModeToVerticalAlignmentConverter}"
                                         Path="(dx:ScrollBarExtensions.ScrollBarMode)"
                                         RelativeSource="{RelativeSource Self}"/>
                            </Border.VerticalAlignment>
                            <Border.BorderThickness>
                                <MultiBinding>
                                    <MultiBinding.Bindings>
                                        <Binding Path="(dxg:GridControl.CurrentView).ShowTotalSummary" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="(dxg:GridControl.CurrentView).FixedLeftContentWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="(dxg:GridControl.CurrentView).ExtendScrollBarToFixedColumns" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="(dxg:GridControl.CurrentView).ShowDataNavigator" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    </MultiBinding.Bindings>
                                    <MultiBinding.Converter>
                                        <dxgcore:HorizontalScrollBarLeftCornerBorderThicknessConverter/>
                                    </MultiBinding.Converter>
                                </MultiBinding>
                            </Border.BorderThickness>
                            <!--END WPF-->
                            <Border.Visibility>
                                <!--BEGIN WPF-->
                                <MultiBinding>
                                    <MultiBinding.Bindings>
                                        <Binding Path="(dxg:GridControl.CurrentView).ShowIndicator" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="(dxg:GridControl.CurrentView).ShowTotalSummary" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="(dxg:GridControl.CurrentView).FixedLeftContentWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="(dxg:GridControl.CurrentView).ExtendScrollBarToFixedColumns" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="(dxg:GridControl.CurrentView).ShowDataNavigator" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    </MultiBinding.Bindings>
                                    <MultiBinding.Converter>
                                        <dxgcore:HorizontalScrollBarIndicatorVisibilityConverter/>
                                    </MultiBinding.Converter>
                                </MultiBinding>
                                <!--END WPF-->
                                <!--ONLY SL
                            <Visibility>Collapsed</Visibility>
                            ONLY SL-->
                            </Border.Visibility>
                        </Border>
                        <Border x:Name="scrollFixedLeftThumb"
                                dxgcore:GridBorderHelper.ShowBorder="{Binding Path=(dxg:GridControl.CurrentView).ShowTotalSummary, RelativeSource={RelativeSource TemplatedParent}}"
                                Grid.Column="1"
                                Style="{DynamicResource {dxgt:ScrollBarThemeKey ResourceKey=ScrollingFixedLeftThumbStyle}}">
                            <!--BEGIN WPF-->
                            <Border.VerticalAlignment>
                                <Binding Converter="{StaticResource ScrollBarModeToVerticalAlignmentConverter}"
                                         Path="(dx:ScrollBarExtensions.ScrollBarMode)"
                                         RelativeSource="{RelativeSource Self}"/>
                            </Border.VerticalAlignment>
                            <Border.Width>
                                <MultiBinding>
                                    <MultiBinding.Bindings>
                                        <Binding Path="(dxg:GridControl.CurrentView).FixedLeftContentWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="(dxg:GridControl.CurrentView).TotalGroupAreaIndent" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="(dxg:GridControl.CurrentView).ActualShowDetailButtons" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="(dxg:GridControl.CurrentView).ExpandDetailButtonWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    </MultiBinding.Bindings>
                                    <MultiBinding.Converter>
                                        <dxgcore:HorizontalScrollBarFixedLeftThumbWidthConverter/>
                                    </MultiBinding.Converter>
                                </MultiBinding>
                            </Border.Width>
                            <!--END WPF-->
                            <Border.Visibility>
                                <!--BEGIN WPF-->
                                <MultiBinding>
                                    <MultiBinding.Bindings>
                                        <Binding Path="(dxg:GridControl.CurrentView).ShowTotalSummary" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="(dxg:GridControl.CurrentView).FixedLeftContentWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="(dxg:GridControl.CurrentView).ExtendScrollBarToFixedColumns" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="(dxg:GridControl.CurrentView).ShowDataNavigator" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    </MultiBinding.Bindings>
                                    <MultiBinding.Converter>
                                        <dxgcore:HorizontalScrollBarFixedLeftThumbVisibilityConverter/>
                                    </MultiBinding.Converter>
                                </MultiBinding>
                                <!--END WPF-->
                                <!--ONLY SL
                            <Visibility>Collapsed</Visibility>
                            ONLY SL-->
                            </Border.Visibility>
                        </Border>
                        <Border x:Name="scrollFixedLeftLine"
                                dxgcore:GridBorderHelper.ShowBorder="{Binding Path=(dxg:GridControl.CurrentView).ShowTotalSummary, RelativeSource={RelativeSource TemplatedParent}}"
                                Grid.Column="2"
                                Style="{DynamicResource {dxgt:ScrollBarThemeKey ResourceKey=ScrollingFixedLineStyle}}"
                                Width="{Binding Path=(dxg:GridControl.CurrentView).FixedLineWidth, RelativeSource={RelativeSource TemplatedParent}}">
                            <!--BEGIN WPF-->
                            <Border.VerticalAlignment>
                                <Binding Converter="{StaticResource ScrollBarModeToVerticalAlignmentConverter}"
                                         Path="(dx:ScrollBarExtensions.ScrollBarMode)"
                                         RelativeSource="{RelativeSource Self}"/>
                            </Border.VerticalAlignment>
                            <!--END WPF-->
                            <Border.Visibility>
                                <!--BEGIN WPF-->
                                <MultiBinding>
                                    <MultiBinding.Bindings>
                                        <Binding Path="(dxg:GridControl.CurrentView).ShowTotalSummary" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="(dxg:GridControl.CurrentView).FixedLeftContentWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="(dxg:GridControl.CurrentView).ExtendScrollBarToFixedColumns" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="(dxg:GridControl.CurrentView).ShowDataNavigator" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    </MultiBinding.Bindings>
                                    <MultiBinding.Converter>
                                        <dxgcore:HorizontalScrollBarFixedLeftThumbVisibilityConverter/>
                                    </MultiBinding.Converter>
                                </MultiBinding>
                                <!--END WPF-->
                                <!--ONLY SL
                            <Visibility>Collapsed</Visibility>
                            ONLY SL-->
                            </Border.Visibility>
                        </Border>
                        <Border x:Name="scrollFixedRightLine"
                                DataContext="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                                dxgcore:GridBorderHelper.ShowBorder="{Binding Path=(dxg:GridControl.CurrentView).ShowTotalSummary, RelativeSource={RelativeSource TemplatedParent}}"
                                Grid.Column="4"
                                Style="{DynamicResource {dxgt:ScrollBarThemeKey ResourceKey=ScrollingFixedLineStyle}}"
                                Width="{Binding Path=(dxg:GridControl.CurrentView).FixedLineWidth, RelativeSource={RelativeSource TemplatedParent}}">
                            <!--BEGIN WPF-->
                            <Border.VerticalAlignment>
                                <Binding Converter="{StaticResource ScrollBarModeToVerticalAlignmentConverter}"
                                         Path="(dx:ScrollBarExtensions.ScrollBarMode)"
                                         RelativeSource="{RelativeSource Self}"/>
                            </Border.VerticalAlignment>
                            <!--END WPF-->
                            <Border.Visibility>
                                <!--BEGIN WPF-->
                                <MultiBinding>
                                    <MultiBinding.Bindings>
                                        <Binding Path="(dxg:GridControl.CurrentView).ShowTotalSummary" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="(dxg:GridControl.CurrentView).FixedRightContentWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="(dxg:GridControl.CurrentView).ExtendScrollBarToFixedColumns" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="(dxg:GridControl.CurrentView).ShowDataNavigator" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    </MultiBinding.Bindings>
                                    <MultiBinding.Converter>
                                        <dxgcore:HorizontalScrollBarFixedLeftThumbVisibilityConverter/>
                                    </MultiBinding.Converter>
                                </MultiBinding>
                                <!--END WPF-->
                                <!--ONLY SL
                            <Visibility>Collapsed</Visibility>
                            ONLY SL-->
                            </Border.Visibility>
                        </Border>
                        <Border x:Name="scrollFixedRightThumb"
                                dxgcore:GridBorderHelper.ShowBorder="{Binding Path=(dxg:GridControl.CurrentView).ShowTotalSummary, RelativeSource={RelativeSource TemplatedParent}}"
                                Grid.Column="5"
                                Style="{DynamicResource {dxgt:ScrollBarThemeKey ResourceKey=ScrollingFixedRightThumbStyle}}"
                                Width="{Binding Path=(dxg:GridControl.CurrentView).FixedRightContentWidth, RelativeSource={RelativeSource TemplatedParent}}">
                            <!--BEGIN WPF-->
                            <Border.VerticalAlignment>
                                <Binding Converter="{StaticResource ScrollBarModeToVerticalAlignmentConverter}"
                                         Path="(dx:ScrollBarExtensions.ScrollBarMode)"
                                         RelativeSource="{RelativeSource Self}"/>
                            </Border.VerticalAlignment>
                            <!--END WPF-->
                            <Border.Visibility>
                                <!--BEGIN WPF-->
                                <MultiBinding>
                                    <MultiBinding.Bindings>
                                        <Binding Path="(dxg:GridControl.CurrentView).ShowTotalSummary" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="(dxg:GridControl.CurrentView).FixedRightContentWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="(dxg:GridControl.CurrentView).ExtendScrollBarToFixedColumns" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="(dxg:GridControl.CurrentView).ShowDataNavigator" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    </MultiBinding.Bindings>
                                    <MultiBinding.Converter>
                                        <dxgcore:HorizontalScrollBarFixedLeftThumbVisibilityConverter/>
                                    </MultiBinding.Converter>
                                </MultiBinding>
                                <!--END WPF-->
                                <!--ONLY SL
                        <Visibility>Collapsed</Visibility>
                        ONLY SL-->
                            </Border.Visibility>
                        </Border>
                        <Grid Grid.Column="3">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                       Grid.Column="0"
                                       Maximum="{Binding ScrollableWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                       Orientation="Horizontal"
                                       Value="{Binding HorizontalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                       ViewportSize="{Binding ViewportWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                                <dxgcore:GridViewHitInfoBase.HitTestAcceptor>
                                    <dxgi:HorizontalScrollBarTableViewHitTestAcceptor/>
                                </dxgcore:GridViewHitInfoBase.HitTestAcceptor>
                            </ScrollBar>
                            <dxgcore:DataNavigator x:Name="PART_DataNavigation"
                                                   Grid.Column="1"
                                                   Height="{Binding Height, ElementName=PART_HorizontalScrollBar}"
                                                   View="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                                                   Visibility="Visible"/>
                        </Grid>
                    </Grid>
                </DockPanel>
                <Border x:Name="PART_HorizontalScrollCorner"
                        dxgcore:GridBorderHelper.ShowBorder="{Binding Path=(dxg:GridControl.CurrentView).TotalSummaryPosition, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TotalSummaryPositionToBooleanConverter}}"
                        dxgcore:GridScrollBarHelper.ExtendScrollBarToFixedColumns="{Binding Path=(dxg:GridControl.CurrentView).ExtendScrollBarToFixedColumns, RelativeSource={RelativeSource TemplatedParent}}"
                        Grid.Column="1"
                        Grid.Row="4"
                        Style="{DynamicResource {dxgt:ScrollBarThemeKey ResourceKey=ScrollingCornerStyle}}">
                    <!--BEGIN WPF-->
                    <Border.Visibility>
                        <MultiBinding>
                            <MultiBinding.Bindings>
                                <Binding Path="(dxg:GridControl.CurrentView).TotalSummaryPosition" RelativeSource="{RelativeSource TemplatedParent}"/>
                                <Binding Path="(dxg:GridControl.CurrentView).FixedRightContentWidth" RelativeSource="{RelativeSource TemplatedParent}"/>
                                <Binding Path="(dxg:GridControl.CurrentView).ExtendScrollBarToFixedColumns" RelativeSource="{RelativeSource TemplatedParent}"/>
                                <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                            </MultiBinding.Bindings>
                            <MultiBinding.Converter>
                                <dxgcore:FitContentContainerConverter/>
                            </MultiBinding.Converter>
                        </MultiBinding>
                    </Border.Visibility>
                    <dxgcore:GridScrollBarHelper.HasFixedRightColumns>
                        <Binding Path="(dxg:GridControl.CurrentView).FixedRightContentWidth" RelativeSource="{RelativeSource TemplatedParent}">
                            <Binding.Converter>
                                <mvvm:ObjectToObjectConverter DefaultTarget="True">
                                    <mvvm:ObjectToObjectConverter.Map>
                                        <mvvm:MapItem Source="0" Target="False"/>
                                    </mvvm:ObjectToObjectConverter.Map>
                                </mvvm:ObjectToObjectConverter>
                            </Binding.Converter>
                        </Binding>
                    </dxgcore:GridScrollBarHelper.HasFixedRightColumns>
                    <!--END WPF-->
                </Border>
                <Border Background="#FF6E6E6E"
                        Grid.Row="2"
                        Grid.RowSpan="2"
                        HorizontalAlignment="Left"
                        Margin="0,0,0,3"
                        Visibility="{Binding Path=(dxg:GridControl.CurrentView).DataControl.ShowBorder, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}"
                        Width="1"
                        cs:id="Border_0001"/>
                <Border BorderBrush="Transparent"
                        BorderThickness="0,1,0,0"
                        Grid.Row="3"
                        Margin="0,-1,0,0"
                        VerticalAlignment="Top"
                        Visibility="{Binding Path=(dxg:GridControl.CurrentView).ActualShowIndicator, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}"
                        cs:id="Border_0002"/>
            </Grid>
            <Grid x:Name="TopRoundCorners"
                  Grid.Row="0"
                  Grid.RowSpan="6"
                  IsHitTestVisible="False"
                  RenderTransform="1,0,0,-1,0,1"
                  RenderTransformOrigin="0.5,0.5"
                  VerticalAlignment="Top"
                  Visibility="{Binding Path=(dxg:GridControl.CurrentView).DataControl.ShowBorder, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Path x:Name="LeftTopCorner"
                      Data="F1 M 754,628L 754,629C 754,630.657 755.343,632 757,632L 758,632L 758,633L 753,633L 753,628L 754,628 Z "
                      Fill="#FF6E6E6E"
                      Height="5"
                      HorizontalAlignment="Left"
                      Margin="0,0,0,-1"
                      Stretch="Fill"
                      VerticalAlignment="Bottom"
                      Width="5"
                      cs:id="Path_0002"/>
                <Path x:Name="RightTopCorner"
                      Data="F1 M 773,624L 773,625C 773,626.657 771.657,628 770,628L 769,628L 769,629L 774,629L 774,624L 773,624 Z "
                      Fill="#FF6E6E6E"
                      Height="5"
                      HorizontalAlignment="Right"
                      Margin="0,0,0,-1"
                      Stretch="Fill"
                      VerticalAlignment="Bottom"
                      Width="5"
                      cs:id="Path_0003"/>
            </Grid>
            <Border Background="#FF6E6E6E"
                    Grid.Row="0"
                    Grid.RowSpan="6"
                    Height="1"
                    Margin="3,0,3,0"
                    VerticalAlignment="Top"
                    Visibility="{Binding Path=(dxg:GridControl.CurrentView).DataControl.ShowBorder, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}"
                    cs:id="Border_0003"/>
            <Border Background="#FF6E6E6E"
                    Grid.Row="2"
                    Grid.RowSpan="3"
                    HorizontalAlignment="Right"
                    Visibility="{Binding Path=(dxg:GridControl.CurrentView).DataControl.ShowBorder, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}"
                    Width="1"
                    cs:id="Border_0004"/>
            <Border BorderBrush="#FF6E6E6E"
                    BorderThickness="1,0,1,1"
                    Grid.Row="0"
                    Grid.RowSpan="5"
                    Height="3"
                    VerticalAlignment="Bottom"
                    Visibility="{Binding Path=(dxg:GridControl.CurrentView).DataControl.ShowBorder, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}"
                    cs:id="Border_0005"/>
            <ContentControl dxgcore:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                            Grid.Row="0"
                            Template="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=TopPanel}}"/>
            <DockPanel Grid.Row="1">
                <ContentPresenter x:Name="PART_AdditionalElementHeaderContainer"
                                  DockPanel.Dock="Right"
                                  dxgcore:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                                  Visibility="Collapsed">
                    <dxgcore:GridControl.CurrentViewChangedListener>
                        <dxgcore:AdditionalElementHeaderInitializer/>
                    </dxgcore:GridControl.CurrentViewChangedListener>
                </ContentPresenter>
                <dxgcore:BandsContainerControl x:Name="PART_BandsContainer"
                                               BandsLayout="{Binding Path=(dxg:GridControl.CurrentView).DataControl.BandsLayout, RelativeSource={RelativeSource TemplatedParent}}"
                                               DataContext="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                                               DockPanel.Dock="Top"
                                               dxgcore:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                                               Visibility="Collapsed">
                    <dxgcore:GridViewHitInfoBase.HitTestAcceptor>
                        <dxgi:BandHeaderPanelTableViewHitTestAcceptor/>
                    </dxgcore:GridViewHitInfoBase.HitTestAcceptor>
                    <dxgcore:GridControl.CurrentViewChangedListener>
                        <dxgcore:BandsContainerInitializer/>
                    </dxgcore:GridControl.CurrentViewChangedListener>
                </dxgcore:BandsContainerControl>
                <ContentPresenter Name="PART_HeadersPanel"
                                  Content="{Binding Path=(dxg:GridControl.CurrentView).HeadersData, RelativeSource={RelativeSource TemplatedParent}}"
                                  ContentTemplate="{Binding Path=(dxg:GridControl.CurrentView).HeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                  dxgcore:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                                  MinHeight="{Binding Path=(dxg:GridControl.CurrentView).HeaderPanelMinHeight, RelativeSource={RelativeSource TemplatedParent}}"
                                  Visibility="{Binding Path=(dxg:GridControl.CurrentView).ShowColumnHeaders, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <dxgcore:GridControl.CurrentViewChangedListener>
                        <dxgcore:HeadersPanelInitializer/>
                    </dxgcore:GridControl.CurrentViewChangedListener>
                    <dxgcore:GridViewHitInfoBase.HitTestAcceptor>
                        <dxgi:ColumnHeaderPanelTableViewHitTestAcceptor/>
                    </dxgcore:GridViewHitInfoBase.HitTestAcceptor>
                </ContentPresenter>
            </DockPanel>
            <ContentPresenter x:Name="PART_AdditionalElementSplitterContainer"
                              dxgcore:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                              Grid.Row="1"
                              Grid.RowSpan="3"
                              Margin="{DynamicResource ResourceKey={dxgt:TableViewThemeKey ResourceKey=HorizontalScrollbarMargin}}"
                              Visibility="Collapsed">
                <dxgcore:GridControl.CurrentViewChangedListener>
                    <dxgcore:AdditionalElementSplitterInitializer/>
                </dxgcore:GridControl.CurrentViewChangedListener>
            </ContentPresenter>
            <dxgcore:OuterBorderElement x:Name="outerBorder"
                                        ActualShowCompactPanel="{Binding Path=(dxg:GridControl.CurrentView).ActualShowCompactPanel, RelativeSource={RelativeSource TemplatedParent}}"
                                        Grid.Row="2"
                                        Grid.RowSpan="2"
                                        ShowColumnHeaders="{Binding Path=(dxg:GridControl.CurrentView).ShowColumnHeaders, RelativeSource={RelativeSource TemplatedParent}}"/>
            <dxgcore:FixedTotalSummaryContainerControl DataContext="{Binding Path=(dxg:GridControl.CurrentView).HeadersData, RelativeSource={RelativeSource TemplatedParent}}"
                                                       dxb:BarManager.DXContextMenu="{Binding Path=(dxg:GridControl.CurrentView).DataControlMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                                       dxgcore:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"
                                                       dxgcore:GridPopupMenu.GridMenuType="FixedTotalSummary"
                                                       Grid.Row="4"
                                                       Visibility="{Binding Path=(dxg:GridControl.CurrentView).ShowFixedTotalSummary, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}">
            </dxgcore:FixedTotalSummaryContainerControl>
            <dxgcore:FilterPanelContainer x:Name="PART_FilterPanelContainer"
                                          Grid.Row="5"
                                          View="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"/>
            <!--<dxg:FilterPanelControl Grid.Row="6" x:Name="PART_FilterPanel" DataContext="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=ActualShowFilterPanel, Converter={StaticResource BooleanToVisibilityConverter}}"/>-->
            <dxgcore:FocusRectPresenter x:Name="PART_FocusRectPresenter"
                                        Grid.RowSpan="6"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        View="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dx:ScrollBarExtensions.ScrollBarMode), RelativeSource={RelativeSource TemplatedParent}}" Value="TouchOverlap">
                <Setter Property="Visibility"
                        TargetName="gridScroll"
                        Value="{Binding ComputedHorizontalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"/>
                <Setter Property="Visibility"
                        TargetName="gridTouchModeDataNavigator"
                        Value="Visible"/>
                <Setter Property="Visibility"
                        TargetName="PART_DataNavigation"
                        Value="Collapsed"/>
                <Setter Property="BorderThickness"
                        TargetName="borderUpDataNavigatorTouch"
                        Value="0,1,0,0"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.CurrentView).ShowDataNavigator, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter Property="Visibility"
                        TargetName="gridScroll"
                        Value="{Binding ComputedHorizontalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"/>
                <Setter Property="Visibility"
                        TargetName="gridTouchModeDataNavigator"
                        Value="Collapsed"/>
                <Setter Property="Visibility"
                        TargetName="PART_DataNavigation"
                        Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.CurrentView).IsCompactMode, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter Property="Visibility"
                        TargetName="PART_HeadersPanel"
                        Value="{Binding Path=(dxg:GridControl.CurrentView).ShowColumnHeaders, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.CurrentView).IsCompactMode, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Visibility"
                        TargetName="PART_HeadersPanel"
                        Value="Collapsed"/>
                <Setter Property="Visibility"
                        TargetName="gridScroll"
                        Value="Collapsed"/>
                <Setter Property="Visibility"
                        TargetName="PART_FootersPanel"
                        Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.CurrentView).IsAdditionalElementScrollBarVisible, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Visibility"
                        TargetName="gridScroll"
                        Value="Visible"/>
                <Setter Property="Visibility"
                        TargetName="PART_AdditionalElementScrollBarContainer"
                        Value="Visible"/>
                <Setter Property="Visibility"
                        TargetName="PART_AdditionalElementHeaderContainer"
                        Value="Visible"/>
                <Setter Property="Visibility"
                        TargetName="PART_AdditionalElementRowsPanelContainer"
                        Value="Visible"/>
                <Setter Property="Visibility"
                        TargetName="PART_AdditionalElementSplitterContainer"
                        Value="Visible"/>
                <Setter Property="Visibility"
                        TargetName="PART_ScrollBarContainer"
                        Value="{Binding ComputedHorizontalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
        <!--ONLY SL </dxg:ScrollViewerContentDecorator>ONLY SL-->
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupFooterRowContentTemplate}" TargetType="{x:Type ContentControl}">
        <Border Name="border"
                Background="{TemplateBinding Background}"
                BorderBrush="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}">
            <Border.BorderThickness>
                <Binding Path="FooterPosition">
                    <Binding.Converter>
                        <dx:EnumToObjectConverter>
                            <dx:EnumToObjectConverter.Values>
                                <dx:EnumObjectProvider x:Key="Top" Value="0,0,0,1"/>
                                <dx:EnumObjectProvider x:Key="Bottom" Value="0,0,0,1"/>
                                <dx:EnumObjectProvider x:Key="Middle" Value="0,0,0,1"/>
                                <dx:EnumObjectProvider x:Key="Single" Value="0,0,0,1"/>
                            </dx:EnumToObjectConverter.Values>
                        </dx:EnumToObjectConverter>
                    </Binding.Converter>
                </Binding>
            </Border.BorderThickness>
            <ContentPresenter MinHeight="32"/>
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=View.ShowHorizontalLines}" Value="false">
                <Setter Property="BorderThickness"
                        TargetName="border"
                        Value="0"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupFooterSummaryControlTemplate}">
        <Border Name="border"
                Background="Transparent"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                cs:id="Border_0000">
            <Grid Name="rootGrid" Margin="{TemplateBinding Padding}">
                <!--BEGIN WPF-->
                <Grid.Visibility>
                    <Binding Path="HasSummary">
                        <Binding.Converter>
                            <dx:BoolToObjectConverter FalseValue="Hidden" TrueValue="Visible"/>
                        </Binding.Converter>
                    </Binding>
                </Grid.Visibility>
                <!--END WPF-->
                <!--ONLY SL
                <Grid.Opacity>
                    <Binding Path="HasSummary">
                        <Binding.Converter>
                            <dx:BoolToObjectConverter TrueValue="1" FalseValue="0"/>
                        </Binding.Converter>
                    </Binding>
                </Grid.Opacity>
                ONLY SL-->
                <Border Background="#FFFFFFFF"
                        BorderBrush="#FFD3D3D3"
                        BorderThickness="1"
                        CornerRadius="2"
                        Margin="1,1,2,1"
                        MinHeight="22"
                        cs:id="Border_0002">
                    <dx:DataContentPresenter Content="{Binding}"
                                             ContentTemplateSelector="{Binding Path=Column.View.ActualGroupFooterSummaryItemTemplateSelector}"
                                             Style="{Binding Path=Column.View.FooterSummaryContentStyle}"/>
                </Border>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding ShowVerticalSeparator}" Value="true">
                <Setter Property="BorderThickness"
                        TargetName="border"
                        Value="0,0,1,0"/>
                <Setter Property="BorderBrush"
                        TargetName="border"
                        Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupFooterSummaryContentStyle}" TargetType="{x:Type dx:DataContentPresenter}">
        <Setter Property="HorizontalAlignment" Value="{Binding Path=Column.ActualHorizontalContentAlignment}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <!--BEGIN WPF-->
        <Setter Property="TextBlock.Foreground"
                Value="White"
                cs:id="Setter_0000"/>
        <!--END WPF-->
        <!--ONLY SL<Setter Property="Foreground" Value="White"/>ONLY SL-->
        <Setter Property="Margin" Value="4,1,4,1"/>
    </Style>

    <Style x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupBandSummaryContentStyle}" TargetType="{x:Type dxg:GroupBandSummaryControl}"/>

    <DataTemplate x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupFooterSummaryItemTemplate}">
        <TextBlock dxgcore:InlineTextService.InlineInfo="{Binding SummaryTextInfo}"
                   Foreground="#FF000000"
                   Style="{StaticResource {dxgt:TotalSummaryThemeKey ResourceKey=TotalSummaryTextControlStyle}}"
                   cs:id="TextBlock_0000"/>
    </DataTemplate>

    <SolidColorBrush x:Key="{dxgt:TableViewThemeKey ResourceKey=EditFormBackground}" Color="#FFF7F7F7"/>

    <DataTemplate x:Key="{dxgt:TableViewThemeKey ResourceKey=CompactPanelDownGlyph}">
        <Grid FlowDirection="LeftToRight"
              Height="Auto"
              SnapsToDevicePixels="True">
            <Path Data="F1 M 384,282L 391,282L 388,287L 387,287L 384,282 Z "
                  Fill="{TemplateBinding TextBlock.Foreground}"
                  Height="5"
                  HorizontalAlignment="Center"
                  Stretch="Fill"
                  VerticalAlignment="Center"
                  Width="7"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="{dxgt:TableViewThemeKey ResourceKey=CompactPanelSortGlyph}">
        <Grid Height="Auto"
              SnapsToDevicePixels="True"
              Width="Auto">
            <Path Data="F1 M 3,11L 0,5L 2,5L 2,0L 4,0L 4,5L 6,5L 3,11 Z "
                  Fill="{TemplateBinding TextBlock.Foreground}"
                  Height="11"
                  Stretch="Fill"
                  Width="6"/>
        </Grid>
    </DataTemplate>

</ResourceDictionary>