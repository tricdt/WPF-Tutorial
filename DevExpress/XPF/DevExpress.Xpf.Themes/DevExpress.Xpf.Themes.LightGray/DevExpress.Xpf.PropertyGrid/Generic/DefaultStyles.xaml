<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxprg="http://schemas.devexpress.com/winfx/2008/xaml/propertygrid" xmlns:dxprgt="http://schemas.devexpress.com/winfx/2008/xaml/propertygrid/themekeys" xmlns:dxprgi="http://schemas.devexpress.com/winfx/2008/xaml/propertygrid/internal" xmlns:editors="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
  <dxprgi:AlternationIndexConverter x:Key="AlternationIndexConverter" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.PropertyGrid.Internal.CategorySelectorControl}" TargetType="{x:Type dxprgi:CategorySelectorControl}">
    <Setter Property="ItemsPanel" Value="{DynamicResource {dxprgt:PropertyGridViewThemeKey ResourceKey=CategorySelectorItemsPanelTemplate}}" />
    <Setter Property="Template" Value="{DynamicResource {dxprgt:PropertyGridViewThemeKey ResourceKey=CategorySelectorTemplate}}" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.PropertyGrid.Internal.CategoryHeaderRowControl}" TargetType="{x:Type dxprgi:CategoryHeaderRowControl}">
    <Setter Property="Template" Value="{DynamicResource {dxprgt:PropertyGridViewThemeKey ResourceKey=CategoryHeaderTemplate}}" />
    <Setter Property="Margin" Value="{DynamicResource {dxprgt:PropertyGridViewThemeKey ResourceKey=CategoryHeaderMargin}}" />
    <Setter Property="Padding" Value="{DynamicResource {dxprgt:PropertyGridViewThemeKey ResourceKey=CategoryHeaderPadding}}" />
    <Setter Property="Foreground" Value="{DynamicResource {dxprgt:VSViewBrushThemeKey ResourceKey=Foreground_Editor_Normal}}" />
    <Setter Property="StringTemplate">
      <Setter.Value>
        <DataTemplate>
          <TextBlock Text="{Binding Header}" />
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="GlyphTemplate">
      <Setter.Value>
        <DataTemplate>
          <dx:DXImage Source="{Binding Path=Glyph, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxprgi:CategoryHeaderRowControl}}}" Stretch="None" dxb:ImageColorizer.IsEnabled="{Binding Path=Definition.ColorizeGlyph}" dxb:ImageColorizer.Color="{Binding Path=(TextElement.Foreground).(SolidColorBrush.Color), RelativeSource={RelativeSource Self}}" />
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.PropertyGrid.PropertyGridView}" TargetType="{x:Type dxprg:PropertyGridView}">
    <Setter Property="ItemContainerStyle" Value="{Binding Path=PropertyGrid.RowStyle, RelativeSource={RelativeSource Mode=Self}}" />
    <Setter Property="ItemContainerStyleSelector" Value="{Binding Path=PropertyGrid.RowStyleSelector, RelativeSource={RelativeSource Mode=Self}}" />
    <Setter Property="AlternationCount" Value="{Binding Path=PropertyGrid.AlternationCount, RelativeSource={RelativeSource Mode=Self}}" />
    <Setter Property="Template" Value="{DynamicResource {dxprgt:PropertyGridViewThemeKey ResourceKey=ControlTemplate}}" />
    <Setter Property="ItemsPanel" Value="{DynamicResource {dxprgt:PropertyGridViewThemeKey ResourceKey=ItemsPanelTemplate}}" />
    <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="{Binding Path=PropertyGrid.(VirtualizingStackPanel.VirtualizationMode), RelativeSource={RelativeSource Self}}" />
    <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="{Binding Path=PropertyGrid.(ScrollViewer.VerticalScrollBarVisibility), RelativeSource={RelativeSource Self}}" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
    <Setter Property="KeyboardNavigation.ControlTabNavigation" Value="None" />
    <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="None" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.PropertyGrid.PropertyGridControl}" TargetType="{x:Type dxprg:PropertyGridControl}">
    <Setter Property="Template" Value="{DynamicResource {dxprgt:PropertyGridControlThemeKey ResourceKey=ControlTemplate}}" />
    <Setter Property="DescriptionTemplate" Value="{DynamicResource {dxprgt:PropertyGridControlThemeKey ResourceKey=DefaultDescriptionTemplate}}" />
    <Setter Property="ValueColumnMinWidth" Value="{DynamicResource ResourceKey={dxprgt:PropertyGridControlThemeKey ResourceKey=ValueColumnMinWidth}}" />
    <Setter Property="HeaderColumnMinWidth" Value="{DynamicResource ResourceKey={dxprgt:PropertyGridControlThemeKey ResourceKey=HeaderColumnMinWidth}}" />
    <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="{dxprg:PropertyGridVirtualizationMode}" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible" />
    <Setter Property="KeyboardNavigation.TabNavigation" Value="Continue" />
    <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Continue" />
    <Setter Property="KeyboardNavigation.ControlTabNavigation" Value="Once" />
    <Setter Property="BorderBrush" Value="{DynamicResource {dxprgt:PropertyGridControlThemeKey ResourceKey=BorderBrush}}" />
    <Setter Property="BorderThickness" Value="{DynamicResource {dxprgt:PropertyGridControlThemeKey ResourceKey=BorderThickness}}" />
    <Setter Property="Background" Value="{DynamicResource {dxprgt:PropertyGridControlThemeKey ResourceKey=Background}}" />
    <Setter Property="dxprgi:PropertyGridEditSettingsHelper.HasBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Background, Converter={dxprgi:PropertyGridControlBackgroundToBooleanConverter}}" />
    <Style.Triggers>
      <Trigger Property="dxprgi:PropertyGridEditSettingsHelper.HasBackground" Value="True">
        <Trigger.Setters>
          <Setter Property="Foreground" Value="{DynamicResource {dxprgt:VSViewBrushThemeKey ResourceKey=Foreground_Header_Normal}}" />
        </Trigger.Setters>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.PropertyGrid.PropertyGridViewKindSelectorControl}" TargetType="{x:Type dxprg:PropertyGridViewKindSelectorControl}">
    <Setter Property="Template" Value="{DynamicResource {dxprgt:PropertyGridControlThemeKey ResourceKey=ViewKindSelectorTemplate}}" />
    <Setter Property="KeyboardNavigation.TabNavigation" Value="Continue" />
    <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Continue" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.PropertyGrid.PropertyDescriptionPresenterControl}" TargetType="{x:Type dxprg:PropertyDescriptionPresenterControl}">
    <Setter Property="Content" Value="{Binding SelectedRow.Description, RelativeSource={RelativeSource Self}}" />
    <Setter Property="ContentTemplateSelector" Value="{Binding ActualDescriptionTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
    <Setter Property="Template" Value="{DynamicResource ResourceKey={dxprgt:PropertyGridControlThemeKey ResourceKey=DescriptionPresenterTemplate}}" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.PropertyGrid.RowControl}" TargetType="{x:Type dxprg:RowControl}">
    <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="HeaderBackground" Value="{Binding Background, RelativeSource={RelativeSource Mode=Self}}" />
    <Setter Property="HeaderForeground" Value="{Binding Foreground, RelativeSource={RelativeSource Mode=Self}}" />
    <Setter Property="ContentBackground" Value="{Binding Background, RelativeSource={RelativeSource Mode=Self}}" />
    <Setter Property="ContentForeground" Value="{Binding Foreground, RelativeSource={RelativeSource Mode=Self}}" />
    <Setter Property="KeyboardNavigation.ControlTabNavigation" Value="None" />
    <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="None" />
    <Setter Property="ExpandButtonWidth" Value="{DynamicResource {dxprgt:DataRowThemeKey ResourceKey=ExpanderWidth}}" />
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="ExpandButtonWidth" Value="{DynamicResource {dxprgt:DataRowThemeKey ResourceKey=TouchExpanderWidth}}" />
      </Trigger>
      <Trigger Property="IsCategory" Value="True">
        <Setter Property="FontWeight" Value="Bold" />
      </Trigger>
      <DataTrigger Value="True">
        <DataTrigger.Binding>
          <MultiBinding Converter="{StaticResource AlternationIndexConverter}">
            <Binding Path="(ItemsControl.AlternationIndex)" RelativeSource="{RelativeSource Mode=Self}" />
            <Binding Path="OwnerView" RelativeSource="{RelativeSource Mode=Self}" />
          </MultiBinding>
        </DataTrigger.Binding>
        <Setter Property="Background" Value="{DynamicResource {dxprgt:DataRowThemeKey ResourceKey=AlternateRowBackgroundBrush}}" />
      </DataTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="State" Value="Selected" />
          <Condition Property="ActualHighlightHeader" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="HeaderBackground" Value="{DynamicResource {dxprgt:VSViewBrushThemeKey ResourceKey=Background_Header_Selected}}" />
        <Setter Property="HeaderForeground" Value="{DynamicResource {dxprgt:VSViewBrushThemeKey ResourceKey=Foreground_Header_Selected}}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="State" Value="Selected" />
          <Condition Property="ActualHighlightContent" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="ContentBackground" Value="{DynamicResource {dxprgt:VSViewBrushThemeKey ResourceKey=Background_Editor_Selected}}" />
        <Setter Property="ContentForeground" Value="{DynamicResource {dxprgt:VSViewBrushThemeKey ResourceKey=Foreground_Editor_Selected}}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="State" Value="SelectedInactive" />
          <Condition Property="ActualHighlightHeader" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="HeaderBackground" Value="{DynamicResource {dxprgt:VSViewBrushThemeKey ResourceKey=Background_Header_SelectedInactive}}" />
        <Setter Property="HeaderForeground" Value="{DynamicResource {dxprgt:VSViewBrushThemeKey ResourceKey=Foreground_Header_SelectedInactive}}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="State" Value="SelectedInactive" />
          <Condition Property="ActualHighlightContent" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="ContentBackground" Value="{DynamicResource {dxprgt:VSViewBrushThemeKey ResourceKey=Background_Editor_SelectedInactive}}" />
        <Setter Property="ContentForeground" Value="{DynamicResource {dxprgt:VSViewBrushThemeKey ResourceKey=Foreground_Editor_SelectedInactive}}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="State" Value="SelectedInactiveReadOnly" />
          <Condition Property="ActualHighlightHeader" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="HeaderBackground" Value="{DynamicResource {dxprgt:VSViewBrushThemeKey ResourceKey=Background_Header_SelectedInactiveReadOnly}}" />
        <Setter Property="HeaderForeground" Value="{DynamicResource {dxprgt:VSViewBrushThemeKey ResourceKey=Foreground_Header_SelectedInactiveReadOnly}}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="State" Value="SelectedInactiveReadOnly" />
          <Condition Property="ActualHighlightContent" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="ContentBackground" Value="{DynamicResource {dxprgt:VSViewBrushThemeKey ResourceKey=Background_Editor_SelectedInactiveReadOnly}}" />
        <Setter Property="ContentForeground" Value="{DynamicResource {dxprgt:VSViewBrushThemeKey ResourceKey=Foreground_Editor_SelectedInactiveReadOnly}}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="State" Value="SelectedReadOnly" />
          <Condition Property="ActualHighlightHeader" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="HeaderBackground" Value="{DynamicResource {dxprgt:VSViewBrushThemeKey ResourceKey=Background_Header_SelectedReadOnly}}" />
        <Setter Property="HeaderForeground" Value="{DynamicResource {dxprgt:VSViewBrushThemeKey ResourceKey=Foreground_Header_SelectedReadOnly}}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="State" Value="SelectedReadOnly" />
          <Condition Property="ActualHighlightContent" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="ContentBackground" Value="{DynamicResource {dxprgt:VSViewBrushThemeKey ResourceKey=Background_Editor_SelectedReadOnly}}" />
        <Setter Property="ContentForeground" Value="{DynamicResource {dxprgt:VSViewBrushThemeKey ResourceKey=Foreground_Editor_SelectedReadOnly}}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="State" Value="ReadOnly" />
          <Condition Property="ActualHighlightHeader" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="HeaderForeground" Value="{DynamicResource {dxprgt:VSViewBrushThemeKey ResourceKey=Foreground_Header_ReadOnly}}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="State" Value="ReadOnly" />
          <Condition Property="ActualHighlightContent" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="ContentForeground" Value="{DynamicResource {dxprgt:VSViewBrushThemeKey ResourceKey=Foreground_Editor_ReadOnly}}" />
      </MultiTrigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>