<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxcore="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/map/themekeys" xmlns:local="http://schemas.devexpress.com/winfx/2008/xaml/map" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
  <dxcore:ObjectToVisibilityConverter x:Key="objectToVisibilityConverter" HandleList="False" />
  <Style TargetType="Rectangle" x:Key="ResizeBoxStyle">
    <Setter Property="Width" Value="{DynamicResource {dxt:AdornersThemeKeys ResourceKey=ResizePointSize}}" />
    <Setter Property="Height" Value="{DynamicResource {dxt:AdornersThemeKeys ResourceKey=ResizePointSize}}" />
    <Setter Property="Fill" Value="{DynamicResource {dxt:AdornersThemeKeys ResourceKey=ResizeBoxBackground}}" />
    <Setter Property="Stroke" Value="{DynamicResource {dxt:AdornersThemeKeys ResourceKey=SelectionAdornerStroke}}" />
  </Style>
  <Style TargetType="Ellipse" x:Key="AdditionalPointStyle">
    <Setter Property="Width" Value="{DynamicResource {dxt:AdornersThemeKeys ResourceKey=EditablePointSize}}" />
    <Setter Property="Height" Value="{DynamicResource {dxt:AdornersThemeKeys ResourceKey=EditablePointSize}}" />
    <Setter Property="Fill" Value="{DynamicResource {dxt:AdornersThemeKeys ResourceKey=EditablePointBackground}}" />
    <Setter Property="Stroke" Value="{DynamicResource {dxt:AdornersThemeKeys ResourceKey=EditablePointStroke}}" />
  </Style>
  <Style TargetType="Ellipse" BasedOn="{StaticResource AdditionalPointStyle}" x:Key="EditablePointStyle">
    <Setter Property="RenderTransform" x:Name="scaleTransform">
      <Setter.Value>
        <ScaleTransform ScaleX="1" ScaleY="1" />
      </Setter.Value>
    </Setter>
    <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
    <Style.Triggers>
      <EventTrigger RoutedEvent="MouseEnter">
        <BeginStoryboard>
          <Storyboard>
            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" To="1.2" Duration="0:0:0.05" />
            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" To="1.2" Duration="0:0:0.05" />
          </Storyboard>
        </BeginStoryboard>
      </EventTrigger>
      <EventTrigger RoutedEvent="MouseLeave">
        <BeginStoryboard>
          <Storyboard>
            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" Duration="0:0:0.05" />
            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" Duration="0:0:0.05" />
          </Storyboard>
        </BeginStoryboard>
      </EventTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Map.MapEditorAdorner}" TargetType="{x:Type local:MapEditorAdorner}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:MapEditorAdorner}">
          <Grid Name="root">
            <Image x:Name="RotationIcon" Source="{local:MapCoreSvgImage Size='21,21', Path=Images/Svg/Rotate.svg}" Width="21" Height="21" Margin="{DynamicResource {dxt:AdornersThemeKeys ResourceKey=RotationAdornerMargin}}" HorizontalAlignment="Center" VerticalAlignment="Top" />
            <Grid>
              <Rectangle x:Name="EditRect" Stroke="{DynamicResource {dxt:AdornersThemeKeys ResourceKey=SelectionAdornerStroke}}" />
              <Canvas>
                <Ellipse x:Name="AdditionalPoint" Style="{StaticResource AdditionalPointStyle}" DataContext="{TemplateBinding AdditionalPoint}" Visibility="{TemplateBinding AdditionalPoint, Converter={StaticResource objectToVisibilityConverter}}" Canvas.Left="{DXBinding 'X - @e(AdditionalPoint).ActualWidth * 0.5'}" Canvas.Top="{DXBinding 'Y - @e(AdditionalPoint).ActualHeight * 0.5'}" />
              </Canvas>
              <ItemsControl x:Name="Points" ItemsSource="{TemplateBinding EditablePoints}">
                <ItemsControl.ItemsPanel>
                  <ItemsPanelTemplate>
                    <local:EditablePointsPanel />
                  </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                  <DataTemplate>
                    <Ellipse Style="{StaticResource EditablePointStyle}" local:MapEditorUIInput.MapEditorInputElement="{Binding InputElement}" />
                  </DataTemplate>
                </ItemsControl.ItemTemplate>
              </ItemsControl>
              <ItemsControl ItemsSource="{TemplateBinding ResizeModes}" Margin="-3">
                <ItemsControl.ItemsPanel>
                  <ItemsPanelTemplate>
                    <Grid />
                  </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                  <DataTemplate>
                    <Rectangle Style="{StaticResource ResizeBoxStyle}" local:MapEditorUIInput.MapEditorInputElement="{Binding InputElement}" VerticalAlignment="{Binding VerticalAlignment}" HorizontalAlignment="{Binding HorizontalAlignment}" />
                  </DataTemplate>
                </ItemsControl.ItemTemplate>
              </ItemsControl>
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="CanTransform" Value="False">
              <Setter TargetName="RotationIcon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="CanRotate" Value="False">
              <Setter TargetName="RotationIcon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="ShowEditRect" Value="False">
              <Setter TargetName="EditRect" Property="Visibility" Value="Collapsed" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>