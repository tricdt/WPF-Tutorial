<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxpg="http://schemas.devexpress.com/winfx/2008/xaml/pivotgrid" xmlns:dxpgi="http://schemas.devexpress.com/winfx/2008/xaml/pivotgrid/internal" xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol" xmlns:themes="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxcr="http://schemas.devexpress.com/winfx/2008/xaml/charts/rangecontrolclient" xmlns:dxfui="http://schemas.devexpress.com/winfx/2008/xaml/core/filteringui" xmlns:dxfuit="http://schemas.devexpress.com/winfx/2008/xaml/core/filteringui/themekeys" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
  <themes:ObjectToStringConverter x:Key="objectToStringConverter" />
  <themes:BoolToObjectConverter x:Key="boolToObjectConverterFPW" FalseValue="0" TrueValue="16" />
  <dxpgi:PivotGridFieldDataConverter x:Key="PivotGridFieldDataConverter" />
  <dxpgi:FieldListActualAreaToAreaTextConverter x:Key="fieldListActualAreaToAreaTextConverter" />
  <themes:BoolToVisibilityConverter x:Key="boolToVisibilityConverter" />
  <dxpgi:ObjectToThicknessConverter x:Key="headerImageMarginConverter" NullValue="0" NotNullValue="0,0,3,0" />
  <ControlTemplate x:Key="{dxpgi:FieldHeaderThemeKey ResourceKey=FilterButtonTemplate}" TargetType="{x:Type dxe:PopupBaseEdit}">
    <ToggleButton Template="{DynamicResource {dxpgi:FieldHeaderThemeKey ResourceKey=FilterTemplate}}" IsTabStop="False" IsChecked="{Binding Path=IsPopupOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" HorizontalAlignment="Left" VerticalAlignment="Top" Focusable="False" />
  </ControlTemplate>
  <DataTemplate x:Key="{dxpgi:FieldHeaderThemeKey ResourceKey=FilterPopupTemplate}">
    <dxfui:ExcelStyleFilterElement x:Name="PART_FilterElement" />
  </DataTemplate>
  <DataTemplate x:Key="{dxpgi:FieldHeaderThemeKey ResourceKey=ContentTemplate}">
    <DockPanel>
      <Image Source="{Binding Path=ImageSource, Mode=OneWay}" Stretch="None" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="{Binding Path=ImageSource, Mode=OneWay, Converter={StaticResource headerImageMarginConverter}}" />
      <TextBlock Name="textBlock" Text="{Binding Path=DisplayText, Mode=OneWay}" TextTrimming="CharacterEllipsis" Style="{Binding Path=ActualHeaderContentStyle}" />
    </DockPanel>
  </DataTemplate>
  <DataTemplate x:Key="{dxpgi:FieldHeaderThemeKey ResourceKey=ListContentTemplate}">
    <DockPanel>
      <Image Source="{Binding Path=ImageSource, Mode=OneWay}" Stretch="None" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="{Binding Path=ImageSource, Mode=OneWay, Converter={StaticResource headerImageMarginConverter}}" />
      <TextBlock Name="textBlock" Text="{Binding Path=DisplayText, Mode=OneWay}" TextTrimming="CharacterEllipsis" Style="{Binding Path=ActualHeaderContentStyle}" />
    </DockPanel>
  </DataTemplate>
  <DataTemplate x:Key="{dxpgi:FieldHeaderThemeKey ResourceKey=DragElementTemplate}">
    <Grid VerticalAlignment="Top" HorizontalAlignment="Left" DataContext="{Binding Content.Content, RelativeSource={RelativeSource TemplatedParent}}">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>
      <dxpgi:DragFieldHeader dxpgi:FieldHeadersBase.FieldListArea="{Binding Path=(dxpgi:FieldHeadersBase.FieldListArea), RelativeSource={RelativeSource TemplatedParent}}" Field="{Binding Content.Content, RelativeSource={RelativeSource TemplatedParent}}" Width="{Binding Path=(dxpgi:FieldHeader.DragElementSize).Width, RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Path=(dxpgi:FieldHeader.DragElementSize).Height, RelativeSource={RelativeSource TemplatedParent}}" />
      <themes:DragIconControl Grid.Row="1" Grid.Column="1" Margin="-12,-12,0,0" x:Name="dropIndicator" DragType="Remove">
        <themes:DragIconControl.Opacity>
          <Binding Path="(dxpgi:DragFieldHeader.CanHide)" RelativeSource="{RelativeSource TemplatedParent}">
            <Binding.Converter>
              <themes:BoolToObjectConverter TrueValue="1" FalseValue="0" />
            </Binding.Converter>
          </Binding>
        </themes:DragIconControl.Opacity>
      </themes:DragIconControl>
    </Grid>
  </DataTemplate>
  <DataTemplate x:Key="{dxpgi:FieldHeaderThemeKey ResourceKey=GroupDragElementTemplate}">
    <Grid VerticalAlignment="Top" HorizontalAlignment="Left">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>
      <dxpgi:DragGroupHeader Group="{Binding Content.Content, RelativeSource={RelativeSource TemplatedParent}}" DataContext="{Binding Content.Content, RelativeSource={RelativeSource TemplatedParent}}" Width="{Binding Path=(dxpgi:FieldHeader.DragElementSize).Width, RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Path=(dxpgi:FieldHeader.DragElementSize).Height, RelativeSource={RelativeSource TemplatedParent}}" />
      <themes:DragIconControl Grid.Row="1" Grid.Column="1" Margin="-12,-12,0,0" x:Name="dropIndicator" DragType="Remove">
        <themes:DragIconControl.Opacity>
          <Binding Path="(dxpgi:DragFieldHeader.CanHide)" RelativeSource="{RelativeSource TemplatedParent}">
            <Binding.Converter>
              <themes:BoolToObjectConverter TrueValue="1" FalseValue="0" />
            </Binding.Converter>
          </Binding>
        </themes:DragIconControl.Opacity>
      </themes:DragIconControl>
    </Grid>
  </DataTemplate>
  <ControlTemplate x:Key="ExcelStylePopupContentTemplate">
    <dxg:ColumnFilteringUIContentControl Content="{Binding}" ApplyFilterImmediately="{Binding ApplyFilterImmediately}" />
  </ControlTemplate>
  <Style TargetType="TextBlock" x:Key="FieldLabelStyle">
    <Setter Property="VerticalAlignment" Value="Center" />
    <Style.Triggers>
      <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False">
        <Setter Property="Opacity" Value="0.65" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="dxe:TextEdit" x:Key="RangeTextEditStyle">
    <Setter Property="MinWidth" Value="60" />
    <Setter Property="Margin" Value="8,0" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="MaskType" Value="Numeric" />
    <Setter Property="DisplayFormatString" Value="{Binding ArgumentLabelFormatString}" />
    <Setter Property="dxe:NumericMaskOptions.AlwaysShowDecimalSeparator" Value="False" />
  </Style>
  <ControlTemplate x:Key="SummaryPopupContentTemplate">
    <Grid Margin="13" Loaded="{DXEvent Handler='Loaded()'}">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="*" />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <StackPanel Orientation="Horizontal">
        <TextBlock Text="{dxpgi:PivotGridStringId StringId=SummaryFilterRangeFrom}" VerticalAlignment="Center" />
        <dxe:TextEdit EditValue="{Binding SelectionStart, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource RangeTextEditStyle}" />
        <TextBlock Text="{dxpgi:PivotGridStringId StringId=SummaryFilterRangeTo}" VerticalAlignment="Center" />
        <dxe:TextEdit EditValue="{Binding SelectionEnd, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource RangeTextEditStyle}" />
      </StackPanel>
      <dxe:RangeControl Grid.Row="1" MinHeight="130" Margin="0,10" ShowRangeThumbs="True" AllowImmediateRangeUpdate="True" ResetRangesOnClientItemsSourceChanged="False" VisibleRangeStart="{Binding Start}" VisibleRangeEnd="{Binding End}" RangeStart="{Binding Start}" RangeEnd="{Binding End}" ShowLabels="False" ShowRangeBar="True" SelectionRangeStart="{Binding SelectionStart, Mode=TwoWay}" SelectionRangeEnd="{Binding SelectionEnd, Mode=TwoWay}">
        <dxcr:NumericChartRangeControlClient ItemsSource="{Binding ItemsSource}" GridLinesBrush="#33000000" ArgumentLabelFormatString="{Binding ArgumentLabelFormatString}" ValueDataMember="Value" ArgumentDataMember="Step" GridAlignment="{Binding RangeGridAlignment}" GridSpacing="1" SnapAlignment="{Binding RangeSnapAlignment}">
          <dxcr:NumericChartRangeControlClient.View>
            <dxcr:RangeControlClientBarView />
          </dxcr:NumericChartRangeControlClient.View>
        </dxcr:NumericChartRangeControlClient>
      </dxe:RangeControl>
      <Grid Grid.Row="2" Margin="0,0,0,0">
        <Grid.RowDefinitions>
          <RowDefinition Height="*" />
          <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="13*" />
          <ColumnDefinition Width="7*" />
          <ColumnDefinition Width="16*" />
        </Grid.ColumnDefinitions>
        <dxe:CheckEdit Content="{dxpgi:PivotGridStringId StringId=SummaryFilterApplyToSpecificLevel}" Name="levelCheckBox" IsChecked="{Binding SpecificLevel, Mode=TwoWay}" />
        <TextBlock Grid.Column="1" Text="{dxpgi:PivotGridStringId StringId=SummaryFilterRowField}" IsEnabled="{Binding RowFieldSelectionEnabled}" Style="{StaticResource FieldLabelStyle}" />
        <TextBlock Grid.Column="1" Grid.Row="1" Text="{dxpgi:PivotGridStringId StringId=SummaryFilterColumnField}" IsEnabled="{Binding ColumnFieldSelectionEnabled}" Style="{StaticResource FieldLabelStyle}" />
        <dxe:ComboBoxEdit Margin="0,4" Grid.Column="2" IsEnabled="{Binding RowFieldSelectionEnabled}" IsTextEditable="False" Name="rowSelector" ItemsSource="{Binding RowFieldSource}" SelectedItem="{Binding RowField, Mode=TwoWay}">
          <dxe:ComboBoxEdit.ItemContainerStyle>
            <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=http://schemas.devexpress.com/winfx/2008/xaml/editors.ComboBoxEditItem}" TargetType="dxe:ComboBoxEditItem">
              <Style.Triggers>
                <MultiDataTrigger>
                  <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding}" Value="{dxpgi:PivotGridStringId StringId=GrandTotal}" />
                    <Condition Binding="{Binding ElementName=columnSelector, Path=SelectedItem}" Value="{dxpgi:PivotGridStringId StringId=GrandTotal}" />
                  </MultiDataTrigger.Conditions>
                  <MultiDataTrigger.Setters>
                    <Setter Property="IsEnabled" Value="False" />
                    <Setter Property="Opacity" Value="0.65" />
                  </MultiDataTrigger.Setters>
                </MultiDataTrigger>
              </Style.Triggers>
            </Style>
          </dxe:ComboBoxEdit.ItemContainerStyle>
        </dxe:ComboBoxEdit>
        <dxe:ComboBoxEdit Margin="0,4" Grid.Column="2" Grid.Row="1" IsEnabled="{Binding ColumnFieldSelectionEnabled}" IsTextEditable="False" Name="columnSelector" ItemsSource="{Binding ColumnFieldSource}" SelectedItem="{Binding ColumnField, Mode=TwoWay}">
          <dxe:ComboBoxEdit.ItemContainerStyle>
            <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=http://schemas.devexpress.com/winfx/2008/xaml/editors.ComboBoxEditItem}" TargetType="dxe:ComboBoxEditItem">
              <Style.Triggers>
                <MultiDataTrigger>
                  <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding}" Value="{dxpgi:PivotGridStringId StringId=GrandTotal}" />
                    <Condition Binding="{Binding ElementName=rowSelector, Path=SelectedItem}" Value="{dxpgi:PivotGridStringId StringId=GrandTotal}" />
                  </MultiDataTrigger.Conditions>
                  <MultiDataTrigger.Setters>
                    <Setter Property="IsEnabled" Value="False" />
                    <Setter Property="Opacity" Value="0.65" />
                  </MultiDataTrigger.Setters>
                </MultiDataTrigger>
              </Style.Triggers>
            </Style>
          </dxe:ComboBoxEdit.ItemContainerStyle>
        </dxe:ComboBoxEdit>
      </Grid>
    </Grid>
  </ControlTemplate>
  <DataTemplate x:Key="SummaryPopupTemplate">
    <dxe:PopupBaseEdit ClosePopupOnLostFocus="False" x:Name="PART_FilterPopupEdit" Visibility="{Binding Path=(dxpgi:FieldHeader.Header).IsFilterButtonVisible, RelativeSource={RelativeSource Self}}" VerticalAlignment="Top" ShowSizeGrip="True" IgnorePopupSizeConstraints="True" PopupBottomAreaTemplate="{DynamicResource {dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=PopupBottomAreaTemplate}}" PopupHeight="300" PopupMinHeight="300" PopupWidth="450" PopupMinWidth="450" IsPopupOpen="{Binding Path=(dxpgi:FieldHeader.Header).IsPopupOpen, RelativeSource={RelativeSource Self}, Mode=TwoWay}" Template="{Binding Path=(dxpgi:FieldHeader.Header).FilterButtonTemplate, RelativeSource={RelativeSource Self}}" PopupClosed="{DXEvent Handler='Closed(@sender, @args)'}" PopupFooterButtons="OkCancel" PopupContentTemplate="{StaticResource SummaryPopupContentTemplate}" />
    <DataTemplate.Triggers>
      <DataTrigger Binding="{Binding Path=(dxpgi:FieldHeader.Header).(dx:ThemeManager.IsTouchlineTheme), RelativeSource={RelativeSource Self}}" Value="True">
        <Setter TargetName="PART_FilterPopupEdit" Property="PopupHeight" Value="390" />
        <Setter TargetName="PART_FilterPopupEdit" Property="PopupMinHeight" Value="390" />
        <Setter TargetName="PART_FilterPopupEdit" Property="PopupWidth" Value="560" />
        <Setter TargetName="PART_FilterPopupEdit" Property="PopupMinWidth" Value="560" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=(dxpgi:FieldHeader.Header).(dx:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource Self}}" Value="True">
        <Setter TargetName="PART_FilterPopupEdit" Property="PopupHeight" Value="390" />
        <Setter TargetName="PART_FilterPopupEdit" Property="PopupMinHeight" Value="390" />
        <Setter TargetName="PART_FilterPopupEdit" Property="PopupWidth" Value="560" />
        <Setter TargetName="PART_FilterPopupEdit" Property="PopupMinWidth" Value="560" />
      </DataTrigger>
    </DataTemplate.Triggers>
  </DataTemplate>
  <DataTemplate x:Key="FilterPopupLegacyTemplate">
    <dxpgi:FieldPopupPlaceholder DataContext="{Binding Path=(dxpgi:FieldHeader.Header), RelativeSource={RelativeSource Self}}" Field="{Binding Field}" Visibility="{Binding Path=IsFilterButtonVisible}" VerticalAlignment="Top" />
  </DataTemplate>
  <ControlTemplate x:Key="EmptyBottomAreaTemplate" />
  <DataTemplate x:Key="FilterPopupExcelTemplate">
    <dxe:PopupBaseEdit x:Name="PART_FilterPopupEdit" Visibility="{Binding Path=(dxpgi:FieldHeader.Header).IsFilterButtonVisible, RelativeSource={RelativeSource Self}}" VerticalAlignment="Top" ShowSizeGrip="True" IgnorePopupSizeConstraints="True" PopupBottomAreaTemplate="{DynamicResource {dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=PopupBottomAreaTemplate}}" PopupHeight="310" PopupMinHeight="310" PopupWidth="260" PopupMinWidth="260" IsPopupOpen="{Binding Path=(dxpgi:FieldHeader.Header).IsPopupOpen, RelativeSource={RelativeSource Self}, Mode=TwoWay}" Template="{Binding Path=(dxpgi:FieldHeader.Header).FilterButtonTemplate, RelativeSource={RelativeSource Self}}" PopupContentTemplate="{StaticResource ExcelStylePopupContentTemplate}" />
    <DataTemplate.Triggers>
      <DataTrigger Binding="{Binding Path=(dxpgi:FieldHeader.Header).(dx:ThemeManager.IsTouchlineTheme), RelativeSource={RelativeSource Self}}" Value="True">
        <Setter TargetName="PART_FilterPopupEdit" Property="PopupHeight" Value="390" />
        <Setter TargetName="PART_FilterPopupEdit" Property="PopupMinHeight" Value="390" />
        <Setter TargetName="PART_FilterPopupEdit" Property="PopupWidth" Value="320" />
        <Setter TargetName="PART_FilterPopupEdit" Property="PopupMinWidth" Value="320" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=(dxpgi:FieldHeader.Header).(dx:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource Self}}" Value="True">
        <Setter TargetName="PART_FilterPopupEdit" Property="PopupHeight" Value="390" />
        <Setter TargetName="PART_FilterPopupEdit" Property="PopupMinHeight" Value="390" />
        <Setter TargetName="PART_FilterPopupEdit" Property="PopupWidth" Value="320" />
        <Setter TargetName="PART_FilterPopupEdit" Property="PopupMinWidth" Value="320" />
      </DataTrigger>
      <DataTrigger Binding="{Binding ApplyFilterImmediately}" Value="False">
        <Setter TargetName="PART_FilterPopupEdit" Property="PopupFooterButtons" Value="OkCancel" />
      </DataTrigger>
    </DataTemplate.Triggers>
  </DataTemplate>
  <dxpgi:FilterPopupTemplateSelector x:Key="{dxpgi:FieldHeaderThemeKey ResourceKey=FilterPopupTemplateSelector}" LegacyTemplate="{StaticResource FilterPopupLegacyTemplate}" SummaryTemplate="{StaticResource SummaryPopupTemplate}" ExcelTemplate="{StaticResource FilterPopupExcelTemplate}" />
  <Style x:Key="{dxpgi:FieldHeaderThemeKey ResourceKey=ButtonStyle}" TargetType="{x:Type Button}">
    <Setter Property="ClickMode" Value="Release" />
    <Setter Property="Button.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <dxpgi:FieldHeaderContentControl x:Name="PART_HeaderContentControl" Template="{DynamicResource {dxpgi:FieldHeaderThemeKey ResourceKey=ButtonContentTemplate}}" Foreground="{DynamicResource {dxpgi:AppearanceThemeKey ResourceKey=HeaderForeground}}" IsTabStop="False" IsPressed="{TemplateBinding IsPressed}" IsMouseOverOverride="{TemplateBinding IsMouseOver}" dxpgi:FieldHeadersBase.FieldListArea="{Binding Path=(dxpgi:FieldHeadersBase.FieldListArea), RelativeSource={RelativeSource TemplatedParent}}">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0" HorizontalAlignment="Left">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>
                  <Border DataContext="{Binding Content, Converter={StaticResource PivotGridFieldDataConverter}}" Grid.Column="0" Name="border2">
                    <dxpgi:FieldHeaderContentPresenter x:Name="HeaderContentPresenter" Content="{Binding}" dxpgi:FieldHeadersBase.FieldListArea="{Binding Path=(dxpgi:FieldHeadersBase.FieldListArea), RelativeSource={RelativeSource TemplatedParent}}" MinHeight="13" RecognizesAccessKey="true" Field="{Binding Path=(dxpgi:FieldHeader.Field), RelativeSource={RelativeSource TemplatedParent}}" />
                  </Border>
                  <Border Width="{Binding CanFilterButtonVisible, Converter={StaticResource boolToObjectConverterFPW}}" Grid.Column="1">
                    <ContentPresenter Content="{Binding Path=PopupContext}" ContentTemplateSelector="{Binding Path=(dxpgi:FieldHeader.Header).FilterPopupTemplateSelector, RelativeSource={RelativeSource Self}}" />
                  </Border>
                </Grid>
                <ContentControl x:Name="SortUp" Grid.Column="1" Style="{DynamicResource {dxpgi:FieldHeaderThemeKey ResourceKey=SortArrowUpStyle}}" Template="{DynamicResource {dxpgi:FieldHeaderThemeKey ResourceKey=SortArrowUpTemplate}}" Visibility="{Binding Path=IsSortUpButtonVisible}" />
                <ContentControl x:Name="SortDown" Grid.Column="1" Style="{DynamicResource {dxpgi:FieldHeaderThemeKey ResourceKey=SortArrowDownStyle}}" Template="{DynamicResource {dxpgi:FieldHeaderThemeKey ResourceKey=SortArrowDownTemplate}}" Visibility="{Binding Path=IsSortDownButtonVisible}" />
              </Grid>
            </dxpgi:FieldHeaderContentControl>
            <Border Name="PART_DTBorder" Background="Red" Opacity="0.3" Visibility="Collapsed" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOverOverride" Value="True" SourceName="PART_HeaderContentControl">
              <Setter Property="Foreground" TargetName="PART_HeaderContentControl" Value="{DynamicResource {dxpgi:AppearanceThemeKey ResourceKey=HeaderMouseOverForeground}}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="{dxpgi:FieldHeaderThemeKey ResourceKey=FieldHeaderTemplate}" TargetType="{x:Type dxpgi:FieldHeader}">
    <themes:SimplePanel themes:DragManager.IsStartDragPlace="false">
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="Cursor">
          <VisualState x:Name="NormalCursor" />
          <VisualState x:Name="HandCursor">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_HeaderButton" Storyboard.TargetProperty="Cursor">
                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                  <DiscreteObjectKeyFrame.Value>
                    <Cursor>Hand</Cursor>
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Border Name="PART_PreviousDropPlace" Background="Transparent" dxpgi:FieldHeadersBase.DropPlace="Previous" />
        <Border Name="PART_NextDropPlace" Grid.Column="1" Background="Transparent" dxpgi:FieldHeadersBase.DropPlace="Next" />
      </Grid>
      <Border x:Name="outerBorder">
        <Button themes:DragManager.IsStartDragPlace="true" Name="PART_HeaderButton" ClickMode="Release" Margin="{TemplateBinding Padding}" VerticalAlignment="Top" dxpgi:FieldHeadersBase.FieldListArea="{Binding Path=(dxpgi:FieldHeadersBase.FieldListArea), RelativeSource={RelativeSource TemplatedParent}}" Focusable="False" SnapsToDevicePixels="True" IsTabStop="False" Command="{TemplateBinding ChangeFieldSortOrder}" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource {dxpgi:FieldHeaderThemeKey ResourceKey=ButtonStyle}}" dxpgi:FieldHeader.Field="{Binding Path=(dxpgi:FieldHeader.Field), RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{Binding Path=(dxpgi:FieldHeader.Field), RelativeSource={RelativeSource TemplatedParent}}" />
      </Border>
    </themes:SimplePanel>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxpgi:FieldHeaderThemeKey ResourceKey=InnerGroupHeaderTemplate}" TargetType="{x:Type dxpgi:FieldHeader}">
    <!--<dx:SimplePanel dx:DragManager.IsStartDragPlace="false">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Border Name="PART_PreviousDropPlace" Background="Transparent" dxpgi:FieldHeadersBase.DropPlace="Previous"/>
                        <Border Name="PART_NextDropPlace" Grid.Column="1" Background="Transparent" dxpgi:FieldHeadersBase.DropPlace="Next"/>
                    </Grid>-->
    <Border x:Name="outerBorder">
      <Button themes:DragManager.IsStartDragPlace="true" Name="PART_HeaderButton" Margin="{TemplateBinding Padding}" VerticalAlignment="Top" dxpgi:FieldHeadersBase.FieldListArea="{Binding Path=(dxpgi:FieldHeadersBase.FieldListArea), RelativeSource={RelativeSource TemplatedParent}}" Focusable="False" SnapsToDevicePixels="True" IsTabStop="False" Command="{Binding ChangeFieldSortOrder, RelativeSource={RelativeSource TemplatedParent}, Mode=OneTime}" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource {dxpgi:FieldHeaderThemeKey ResourceKey=ButtonStyle}}" dxpgi:FieldHeader.Field="{Binding Path=(dxpgi:FieldHeader.Field), RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="{Binding Path=(dxpgi:FieldHeader.Field), RelativeSource={RelativeSource TemplatedParent}}" />
    </Border>
    <!--</dx:SimplePanel>-->
  </ControlTemplate>
  <ControlTemplate x:Key="{dxpgi:FieldHeaderThemeKey ResourceKey=GroupHeaderTemplate}" TargetType="{x:Type dxpgi:GroupHeader}">
    <themes:SimplePanel themes:DragManager.IsStartDragPlace="false">
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="Cursor">
          <VisualState x:Name="NormalCursor" />
          <VisualState x:Name="HandCursor">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="outerBorder" Storyboard.TargetProperty="Cursor">
                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                  <DiscreteObjectKeyFrame.Value>
                    <Cursor>Hand</Cursor>
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Border Name="PART_PreviousDropPlace" Background="Transparent" dxpgi:FieldHeadersBase.DropPlace="Previous" />
        <Border Name="PART_NextDropPlace" Grid.Column="1" Background="Transparent" dxpgi:FieldHeadersBase.DropPlace="Next" />
      </Grid>
      <Border x:Name="outerBorder">
        <ContentControl Name="PART_HeaderButton" Margin="{TemplateBinding Padding}" VerticalAlignment="Top" SnapsToDevicePixels="True" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{DynamicResource {dxpgi:FieldHeaderThemeKey ResourceKey=GroupContentTemplate}}">
          <Grid x:Name="PART_Panel" Background="Transparent" />
        </ContentControl>
      </Border>
    </themes:SimplePanel>
  </ControlTemplate>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.PivotGrid.Internal.FieldHeaders}" TargetType="{x:Type dxpgi:FieldHeaders}">
    <Setter Property="dxpg:PivotGridPopupMenu.GridMenuType" Value="HeadersArea" />
    <Setter Property="dxb:BarManager.DXContextMenu" Value="{Binding Path=(dxpg:PivotGridControl.PivotGrid).GridMenu, RelativeSource={RelativeSource Self}}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxpgi:FieldHeaders}">
          <ContentControl x:Name="PART_Container" Template="{TemplateBinding ContentTemplate}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup Name="EmptyStates">
                <VisualState Name="NonEmpty" />
                <VisualState Name="FullEmpty">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_Panel" Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>Stretch</VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState Name="Empty">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_EmptyText" Storyboard.TargetProperty="(UIElement.Visibility)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_Panel" Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)">
                      <DiscreteObjectKeyFrame KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <VerticalAlignment>Stretch</VerticalAlignment>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid Margin="{TemplateBinding Padding}">
              <dxpgi:FieldHeadersPanel x:Name="PART_Panel" Background="Transparent" SkipWidth="{TemplateBinding LeftPixels}" VerticalAlignment="{TemplateBinding HeadersVAlignment}" themes:DragManager.DropTargetFactory="{dxpgi:PivotGridDropTargetFactory}" MeasureMode="{TemplateBinding MeasureMode}" HorizontalAlignment="Stretch" />
              <themes:SimplePanel VerticalAlignment="Center" Visibility="{Binding Path=IsCutted, ElementName=PART_Panel, Converter={StaticResource ResourceKey=boolToVisibilityConverter}}">
                <themes:XPFContentControl HorizontalAlignment="Center" x:Name="CuttedContentText">
                  <TextBlock Foreground="{DynamicResource ResourceKey={dxpgi:AppearanceThemeKey ResourceKey=DataAreaCuttedTextForeground}}" VerticalAlignment="Center" Padding="0" Text="{dxpgi:PivotGridStringId StringId=PrintDesignerDataHeaders}" HorizontalAlignment="Center" TextWrapping="NoWrap">
                    <!--BEGIN WPF-->
                    <TextBlock.TextTrimming>CharacterEllipsis</TextBlock.TextTrimming>
                    <!--END WPF-->
                  </TextBlock>
                </themes:XPFContentControl>
                <!--BEGIN TOSLONLY REPLACE 'ActualWidth'ActualWidthCore'-->
                <Line Margin="0,0,0,0" VerticalAlignment="Bottom" HorizontalAlignment="Center" StrokeDashArray="1 1" Height="2" X2="{Binding ActualWidth, ElementName=CuttedContentText}" Y1="1" Y2="1" Stroke="{DynamicResource ResourceKey={dxpgi:AppearanceThemeKey ResourceKey=DataAreaCuttedTextForeground}}" StrokeThickness="2">
                  <Line.RenderTransform>
                    <ScaleTransform ScaleY="0.5" />
                  </Line.RenderTransform>
                </Line>
                <!--END TOSLONLY REPLACE 'ActualWidth'ActualWidthCore'-->
              </themes:SimplePanel>
              <dxe:TextEdit x:Name="PART_EmptyText" EditMode="InplaceInactive" Visibility="Collapsed" EditValue="{Binding ActualArea, Converter={StaticResource  ResourceKey=fieldListActualAreaToAreaTextConverter}, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="{TemplateBinding EmptyTextVAlignment}" HorizontalAlignment="{TemplateBinding EmptyTextHAlignment}" Foreground="{TemplateBinding Foreground}" Style="{DynamicResource {dxpgi:FieldHeaderThemeKey ResourceKey=HeaderEmptyTextStyle}}" />
              <themes:BestFitDecorator x:Name="PART_HeaderBestFitControlDecorator" Width="0" Height="0" />
            </Grid>
          </ContentControl>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxpgi:AppearanceThemeKey ResourceKey=HeaderEmptyTextForeground}}" />
  </Style>
</ResourceDictionary>