<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxrt="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/themekeys"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/DevExpress.Xpf.Themes.MetropolisDark.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/Generic/ThemedWindow.xaml"/>
        <ResourceDictionary Source="/DevExpress.Xpf.Themes.MetropolisDark.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/Generic/DropShadow.xaml"/>
        <ResourceDictionary Source="/DevExpress.Xpf.Themes.MetropolisDark.v24.1;component/DevExpress.Xpf.Ribbon/Generic/RibbonControlBoxButton.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <sys:Boolean x:Key="{dxt:ThemedWindowThemeKey ResourceKey=RoundWindowCorners}">False</sys:Boolean>

    <!--Opacity-->

    <sys:Double x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowInactiveHeaderOpacity}">0.7</sys:Double>

    <!--Header height-->

    <sys:Double x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowHeaderHeight}">42</sys:Double>

    <sys:Double x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowIconHeight}">16</sys:Double>

    <sys:Double x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowIconWidth}">16</sys:Double>

    <!-- SearchBox widths -->

    <sys:Double x:Key="{dxt:ThemedWindowSearchBoxThemeKey ResourceKey=MinWidth}">50</sys:Double>

    <sys:Double x:Key="{dxt:ThemedWindowSearchBoxThemeKey ResourceKey=MaxWidth}">200</sys:Double>

    <!--TitleFont Properties-->

    <sys:Double x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowTitleFontSize}">12</sys:Double>

    <FontWeight x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowTitleFontWeight}">Normal</FontWeight>

    <!--Thickness-->

    <Thickness x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowBorderThickness}">1</Thickness>

    <Thickness x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowContentBorderThickness}">0</Thickness>

    <Thickness x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowRibbonContentBorderThickness}">0</Thickness>

    <Thickness x:Key="{dxt:ThemedWindowThemeKey ResourceKey=HeaderNormalPadding}">15,0,15,0</Thickness>

    <Thickness x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowNormalPadding}">15,0,15,15</Thickness>

    <sys:Double x:Key="{dxt:ThemedWindowThemeKey ResourceKey=TabbedModeDefaultTopMargin}">15</sys:Double>

    <Thickness x:Key="{dxt:ThemedWindowThemeKey ResourceKey=HeaderRibbonPadding}">15,0,15,0</Thickness>

    <Thickness x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowRibbonPadding}">15,0,15,15</Thickness>

    <Thickness x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowIconMargin}">0,0,10,0</Thickness>

    <Thickness x:Key="{dxt:ThemedWindowThemeKey ResourceKey=SizeGripMargin}">0,0,2,2</Thickness>

    <Thickness x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowTitleControlMargin}">0,0,10,0</Thickness>

    <Thickness x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowToolbarMargin}">0,0,10,0</Thickness>

    <Thickness x:Key="{dxt:ThemedWindowThemeKey ResourceKey=HeaderControlBoxBorderThickness}">0</Thickness>

    <!-- Colors -->

    <Color x:Key="{dxt:AcrylicThemedWindowThemeKey ResourceKey=AcrylicColor}" cs:MetropolisLight.Color="#FFFFFFFF">#FF333333</Color>

    <!--Brushes-->

    <SolidColorBrush x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowActiveBackground}"
                     Color="#FF333333"
                     cs:MetropolisLight.Color="#FFFFFFFF"/>

    <SolidColorBrush x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowActiveBorderBrush}"
                     Color="#FF000000"
                     cs:MetropolisLight.Color="#FFB3B3B3"/>

    <SolidColorBrush x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowActiveContentBackground}"
                     Color="#FF333333"
                     cs:MetropolisLight.Color="#FFFFFFFF"/>

    <SolidColorBrush x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowActiveContentBorderBrush}" Color="Transparent"/>

    <SolidColorBrush x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowInactiveBackground}"
                     Color="#FF333333"
                     cs:MetropolisLight.Color="#FFFFFFFF"/>

    <SolidColorBrush x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowInactiveBorderBrush}"
                     Color="#FF000000"
                     cs:MetropolisLight.Color="#FFB3B3B3"/>

    <SolidColorBrush x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowInactiveContentBackground}"
                     Color="#FF333333"
                     cs:MetropolisLight.Color="#FFFFFFFF"/>

    <SolidColorBrush x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowInactiveContentBorderBrush}" Color="Transparent"/>

    <SolidColorBrush x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowTitleForeground}"
                     Color="#BFFFFFFF"
                     cs:MetropolisLight.Color="#BF373A3D"/>

    <SolidColorBrush x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowRibbonTitleForeground}"
                     Color="#BFFFFFFF"
                     cs:MetropolisLight.Color="#BF373A3D"/>

    <SolidColorBrush x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowContentForeground}"
                     Color="#BFFFFFFF"
                     cs:MetropolisLight.Color="#FF000000"/>

    <SolidColorBrush x:Key="{dxt:ThemedWindowThemeKey ResourceKey=HeaderControlBoxBorderBrush}" Color="Transparent"/>

    <SolidColorBrush x:Key="{dxt:ThemedWindowThemeKey ResourceKey=HeaderControlBoxBackground}" Color="Transparent"/>

    <SolidColorBrush x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowActiveHeaderBackground}"
                     Color="#FF333333"
                     cs:MetropolisLight.Color="#FFFFFFFF"/>

    <SolidColorBrush x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowInactiveHeaderBackground}"
                     Color="#FF333333"
                     cs:MetropolisLight.Color="#FFFFFFFF"/>

    <SolidColorBrush x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowRibbonActiveHeaderBackground}"
                     Color="#FF333333"
                     cs:MetropolisLight.Color="#FFFFFFFF"/>

    <SolidColorBrush x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowRibbonInactiveHeaderBackground}"
                     Color="#FF333333"
                     cs:MetropolisLight.Color="#FFFFFFFF"/>

    <SolidColorBrush x:Key="{dxt:ThemedWindowThemeKey ResourceKey=BackButtonForegroundNormalState}"
                     Color="#FFCACACA"
                     cs:MetropolisLight.Color="#FFB9B9B9"/>

    <SolidColorBrush x:Key="{dxt:ThemedWindowThemeKey ResourceKey=BackButtonForegroundMouseOverState}"
                     Color="#FFCACACA"
                     cs:MetropolisLight.Color="#FF373A3D"/>

    <SolidColorBrush x:Key="{dxt:ThemedWindowThemeKey ResourceKey=BackButtonForegroundPressedState}"
                     Color="#FF828282"
                     cs:MetropolisLight.Color="#FFB9B9B9"/>

    <!--VerticalAlignment-->

    <VerticalAlignment x:Key="{dxt:ThemedWindowThemeKey ResourceKey=HeaderControlBoxVerticalAlignment}">Center</VerticalAlignment>

    <!--TitleAlignment-->

    <dx:WindowTitleAlignment x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowTitleAlignment}">Left</dx:WindowTitleAlignment>

    <!--____Back Button Slyte & Template____-->

    <!--BackButton Glyph Template-->

    <DataTemplate x:Key="{dxt:ThemedWindowThemeKey ResourceKey=BackButtonBackgroundGlyph}">
        <Path x:Name="Path"
              Data="F1 M 9.53674e-007,5L 5,0L 6,0.999999L 3,4L 10,4L 10,6L 3,6L 6,9L 5,10L 9.53674e-007,5 Z "
              Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}"
              Height="10"
              Stretch="Fill"
              Width="10"/>
    </DataTemplate>

    <!--BackButton Normal Background-->

    <ControlTemplate x:Key="{dxt:ThemedWindowThemeKey ResourceKey=BackButtonBackgroundNormalState}"/>

    <!--BackButton MouseOver Background-->

    <ControlTemplate x:Key="{dxt:ThemedWindowThemeKey ResourceKey=BackButtonBackgroundMouseoverState}">
        <Border x:Name="HoverState"
                Background="#FF333333"
                BorderBrush="#FF515151"
                BorderThickness="1"
                cs:MetropolisLight.Background="#FFF0F0F0"
                cs:MetropolisLight.BorderBrush="#FFB9B9B9"
               />
    </ControlTemplate>

    <!--BackButton Pressed Background-->

    <ControlTemplate x:Key="{dxt:ThemedWindowThemeKey ResourceKey=BackButtonBackgroundPressedState}">
        <Border x:Name="HoverState"
                Background="#FF3C3C3C"
                BorderBrush="#FF515151"
                BorderThickness="1"
                cs:MetropolisLight.Background="#FFF0F0F0"
                cs:MetropolisLight.BorderBrush="#FFB9B9B9"
               />
    </ControlTemplate>

    <!--BackButtonStyle-->

    <Style x:Key="{dxt:ThemedWindowThemeKey ResourceKey=BackButtonStyle}" TargetType="{x:Type dx:ThemedWindowBackButton}">
        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="Height" Value="21"/>
        <Setter Property="Width" Value="21"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template" Value="{DynamicResource {dxt:ThemedWindowThemeKey ResourceKey=BackButtonTemplate}}"/>
        <Setter Property="dxcn:WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
    </Style>

    <!--WindowStyle-->

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.ThemedWindow}"
           BasedOn="{StaticResource ResourceKey={dxt:ThemedWindowThemeKey ResourceKey=WindowStyle}}"
           TargetType="{x:Type dx:ThemedWindow}">
        <Setter Property="dx:HeaderItemControl.ExtendedCommonTemplateProvider" Value="{DynamicResource {dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonHeaderItemControlCommonTemplateProvider}}"/>
        <Setter Property="dx:HeaderItemControl.ExtendedCloseTemplateProvider" Value="{DynamicResource {dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonHeaderItemControlCloseTemplateProvider}}"/>
    </Style>

</ResourceDictionary>