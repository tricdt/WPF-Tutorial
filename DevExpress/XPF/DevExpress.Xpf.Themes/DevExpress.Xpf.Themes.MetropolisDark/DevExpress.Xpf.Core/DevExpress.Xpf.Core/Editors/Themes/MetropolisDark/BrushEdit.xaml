<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
                    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--BEGIN WPF-->

    <ResourceDictionary.MergedDictionaries>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.MetropolisDark.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/MetropolisDark/TextEdit.xaml"/>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.MetropolisDark.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/Generic/BrushEdit.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--END WPF-->

    <SolidColorBrush x:Key="{dxet:PopupBrushEditThemeKey ResourceKey=ChipBorderBrush}"
                     Color="#FFC5C5C5"
                     cs:Name="SolidColorBrush_0001"
                     cs:MetropolisLight.Color="#FFC5C5C5"/>

    <Style x:Key="{dxet:PopupBrushEditThemeKey ResourceKey=TextBlockStyle}"
           BasedOn="{StaticResource {dxet:TextEditThemeKey ResourceKey=TextBlockStyle}}"
           TargetType="{x:Type TextBlock}">
        <Setter Property="Opacity" Value="0"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxet:PopupBrushEditThemeKey ResourceKey=TextBlockInplaceStyle}"
           BasedOn="{StaticResource BaseTextBlockInplaceStyle}"
           TargetType="{x:Type TextBlock}">
        <Setter Property="Opacity" Value="0"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="{dxet:PopupBrushEditThemeKey ResourceKey=DisplayTemplate}">
        <Grid Margin="{Binding Path=(dxe:BaseEdit.OwnerEdit).Padding, RelativeSource={RelativeSource TemplatedParent}}">
            <dxei:TransparentBrushRectangle BlockHeight="4"
                                            BlockWidth="4"
                                            dx:FocusHelper2.Focusable="False"
                                            HorizontalAlignment="Stretch"
                                            Margin="4,2,4,2"
                                            VerticalAlignment="Stretch"/>
            <Rectangle Fill="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).Brush, RelativeSource={RelativeSource TemplatedParent}}"
                       Margin="4,2,4,2"
                       Stretch="Fill"/>
            <TextBlock x:Name="PART_Editor" Style="{DynamicResource {dxet:PopupBrushEditThemeKey ResourceKey=TextBlockStyle}}"/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:PopupBrushEditThemeKey ResourceKey=DisplayInplaceTemplate}">
        <Grid>
            <dxei:TransparentBrushRectangle BlockHeight="4"
                                            BlockWidth="4"
                                            dx:FocusHelper2.Focusable="False"
                                            HorizontalAlignment="Stretch"
                                            Margin="4,2,4,2"
                                            VerticalAlignment="Stretch"/>
            <Rectangle Fill="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).Brush, RelativeSource={RelativeSource TemplatedParent}}"
                       Margin="4,2,4,2"
                       Stretch="Fill"/>
            <TextBlock x:Name="PART_Editor" Style="{DynamicResource {dxet:PopupBrushEditThemeKey ResourceKey=TextBlockInplaceStyle}}"/>
        </Grid>
    </ControlTemplate>

</ResourceDictionary>