<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxsps="http://schemas.devexpress.com/winfx/2008/xaml/spreadsheet"
                    xmlns:dxspsi="http://schemas.devexpress.com/winfx/2008/xaml/spreadsheet/internal"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:themes="http://schemas.devexpress.com/winfx/2008/xaml/spreadsheet/themekeys"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.MetropolisDark.v24.1;component/DevExpress.Xpf.Spreadsheet/Generic/DefaultStyles.xaml"/>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.MetropolisDark.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/StandardControls/Brushes.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <dx:EnumToVisibilityConverter x:Key="EnumToVisibilityConverter"/>

    <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

    <dx:BoolToVisibilityInverseConverter x:Key="BoolToVisibilityInverseConverter"/>

    <dx:ColorOverlayConverter x:Key="ColorOverlayConveter"/>

    <dxspsi:ForegroundOverlayConverter x:Key="ForegroundOverlayConverter"/>

    <!-- General Resources -->

    <Color x:Key="{themes:SpreadsheetThemeKey ResourceKey=GridLinesColor}" cs:MetropolisLight.Color="#FFD3D3D3">#FF515151</Color>

    <sys:Double x:Key="{themes:SpreadsheetThemeKey ResourceKey=CellStyleGalleryBarItemHeight}">68</sys:Double>

    <sys:Double x:Key="{themes:SpreadsheetThemeKey ResourceKey=TableStyleGalleryBarItemHeight}">61</sys:Double>

    <sys:Double x:Key="{themes:SpreadsheetThemeKey ResourceKey=ChartLayoutGalleryBarItemHeight}">70</sys:Double>

    <sys:Double x:Key="{themes:SpreadsheetThemeKey ResourceKey=ChartStyleGalleryBarItemHeight}">70</sys:Double>

    <Color x:Key="GlyphColor" cs:MetropolisLight.Color="#FF373A3D">#FFE3E3E3</Color>

    <Thickness x:Key="{themes:SpreadsheetThemeKey ResourceKey=SpreadsheetBorderThickness}">1</Thickness>

    <SolidColorBrush x:Key="{themes:SpreadsheetThemeKey ResourceKey=SpreadsheetBorderBrush}"
                     Color="#FF515151"
                     cs:MetropolisLight.Color="#FFB9B9B9"/>

    <SolidColorBrush x:Key="{themes:SpreadsheetThemeKey ResourceKey=SpreadsheetForegroundBrush}"
                     Color="#FFE3E3E3"
                     cs:MetropolisLight.Color="#FF373A3D"/>

    <SolidColorBrush x:Key="{themes:SpreadsheetThemeKey ResourceKey=SpreadsheetBackgroundBrush}"
                     Color="#FF333333"
                     cs:MetropolisLight.Color="#FFFFFFFF"/>

    <SolidColorBrush x:Key="{themes:SpreadsheetThemeKey ResourceKey=VisualFeedbackLineBrush}"
                     Color="#FFF78A09"
                     cs:MetropolisLight.Color="#FF000000"/>

    <SolidColorBrush x:Key="{themes:SpreadsheetThemeKey ResourceKey=FrozenSeparatorBrush}"
                     Color="#FFF78A09"
                     cs:MetropolisLight.Color="#FFFFFFFF"/>

    <SolidColorBrush x:Key="{themes:SpreadsheetThemeKey ResourceKey=WorksheetBorderBrush}" Color="{StaticResource {themes:SpreadsheetThemeKey ResourceKey=GridLinesColor}}"/>

    <SolidColorBrush x:Key="{themes:SpreadsheetThemeKey ResourceKey=AutoFilterBackgroundBrush}"
                     Color="#E5FFFFFF"
                     cs:MetropolisLight.Color="#FFFFFFFF"/>

    <SolidColorBrush x:Key="Selection.BorderBrush" Color="#FFF78A09"/>

    <SolidColorBrush x:Key="Selection.Background"
                     Color="#7F000000"
                     cs:MetropolisLight.Color="#3FB9B9B9"/>

    <SolidColorBrush x:Key="TabPanel.BorderBrush"
                     Color="#FF515151"
                     cs:MetropolisLight.Color="#FFB9B9B9"/>

    <SolidColorBrush x:Key="TabPanel.Background"
                     Color="#FF333333"
                     cs:MetropolisLight.Color="#FFFFFFFF"/>

    <SolidColorBrush x:Key="ResizeThumb.Background"
                     Color="#FF333333"
                     cs:MetropolisLight.Color="#FFFFFFFF"/>

    <SolidColorBrush x:Key="ResizeThumb.GlyphBrush"
                     Color="#7FFFFFFF"
                     cs:MetropolisLight.Color="#FFA0A0A0"/>

    <SolidColorBrush x:Key="ResizeThumb.GlyphBrush.IsMouseOver"
                     Color="#BFFFFFFF"
                     cs:MetropolisLight.Color="#FFA0A0A0"/>

    <SolidColorBrush x:Key="ScrollBar.Corner.BorderBrush"
                     Color="#FF2F2F2F"
                     cs:MetropolisLight.Color="#FFF6F6F6"/>

    <SolidColorBrush x:Key="ScrollBar.Corner.Background"
                     Color="#FF2F2F2F"
                     cs:MetropolisLight.Color="#FFF6F6F6"/>

    <SolidColorBrush x:Key="GlyphBrush"
                     Color="#7FFFFFFF"
                     cs:MetropolisLight.Color="#FFA0A0A0"/>

    <!--Grouping-->

    <SolidColorBrush x:Key="{themes:SpreadsheetThemeKey ResourceKey=GroupControlBackgroundBrush}"
                     Color="#FF333333"
                     cs:MetropolisLight.Color="#FFFFFFFF"/>

    <SolidColorBrush x:Key="{themes:SpreadsheetThemeKey ResourceKey=GroupLineBrush}"
                     Color="#FF515151"
                     cs:MetropolisLight.Color="#FFB9B9B9"/>

    <SolidColorBrush x:Key="{themes:SpreadsheetThemeKey ResourceKey=GroupDotBrush}"
                     Color="#FFFFFFFF"
                     cs:MetropolisLight.Color="#FFA52A2A"/>

    <sys:Double x:Key="{themes:SpreadsheetThemeKey ResourceKey=GroupLineThickness}">2</sys:Double>

    <sys:Double x:Key="{themes:SpreadsheetThemeKey ResourceKey=GroupDotThickness}">2</sys:Double>

    <SolidColorBrush x:Key="expandButton.DefaultState.Border1"
                     Color="#FF515151"
                     cs:MetropolisLight.Color="#FFB9B9B9"/>

    <SolidColorBrush x:Key="expandButton.DefaultState.Border2"
                     Color="#FF333333"
                     cs:MetropolisLight.Color="#FFFFFFFF"/>

    <SolidColorBrush x:Key="expandButton.HoverState.Border1"
                     Color="#FF515151"
                     cs:MetropolisLight.Color="#FFB9B9B9"/>

    <SolidColorBrush x:Key="expandButton.HoverState.Border2"
                     Color="#FF3C3C3C"
                     cs:MetropolisLight.Color="#FFF0F0F0"/>

    <SolidColorBrush x:Key="expandButton.PressedState.Border1"
                     Color="#FF515151"
                     cs:MetropolisLight.Color="#FFB9B9B9"/>

    <SolidColorBrush x:Key="expandButton.PressedState.Border2"
                     Color="#FF515151"
                     cs:MetropolisLight.Color="#FFB9B9B9"/>

    <!-- Header -->

    <SolidColorBrush x:Key="Header.BorderBrush"
                     Color="#FF515151"
                     cs:MetropolisLight.Color="#FFB9B9B9"/>

    <SolidColorBrush x:Key="Header.Background"
                     Color="#FF333333"
                     cs:MetropolisLight.Color="#FFFFFFFF"/>

    <SolidColorBrush x:Key="Header.BorderBrush.IsMouseOver"
                     Color="#FF515151"
                     cs:MetropolisLight.Color="#FFB9B9B9"/>

    <SolidColorBrush x:Key="Header.Background.IsMouseOver"
                     Color="#FF3C3C3C"
                     cs:MetropolisLight.Color="#FFF0F0F0"/>

    <SolidColorBrush x:Key="Header.BorderBrush.IsSelected"
                     Color="#FF515151"
                     cs:MetropolisLight.Color="#FFB9B9B9"/>

    <SolidColorBrush x:Key="Header.Background.IsSelected"
                     Color="#FF515151"
                     cs:MetropolisLight.Color="#FFB9B9B9"/>

    <!-- TabSelectorItem -->

    <SolidColorBrush x:Key="TabSelectorItem.UnselectedState.Border1"
                     Color="#FF515151"
                     cs:MetropolisLight.Color="#FFB9B9B9"/>

    <SolidColorBrush x:Key="TabSelectorItem.UnselectedState.Border2"
                     Color="#FF333333"
                     cs:MetropolisLight.Color="#FFFFFFFF"/>

    <SolidColorBrush x:Key="TabSelectorItem.UnselectedState.Border3"
                     Color="#FF333333"
                     cs:MetropolisLight.Color="#FFFFFFFF"/>

    <SolidColorBrush x:Key="TabSelectorItem.SelectedState.Border1"
                     Color="#FF515151"
                     cs:MetropolisLight.Color="#FFB9B9B9"/>

    <SolidColorBrush x:Key="TabSelectorItem.SelectedState.Border2"
                     Color="#FF333333"
                     cs:MetropolisLight.Color="#FFFFFFFF"/>

    <SolidColorBrush x:Key="TabSelectorItem.SelectedState.Border3"
                     Color="#FF333333"
                     cs:MetropolisLight.Color="#FFFFFFFF"/>

    <SolidColorBrush x:Key="TabSelectorItem.MouseHoverState.Border1"
                     Color="#FF515151"
                     cs:MetropolisLight.Color="#FFB9B9B9"/>

    <SolidColorBrush x:Key="TabSelectorItem.MouseHoverState.Border2"
                     Color="#FF333333"
                     cs:MetropolisLight.Color="#FFFFFFFF"/>

    <SolidColorBrush x:Key="TabSelectorItem.MouseHoverState.Border3"
                     Color="#FF333333"
                     cs:MetropolisLight.Color="#FFFFFFFF"/>

    <SolidColorBrush x:Key="Color.TabSelectorItem.UnselectedState.Border1" Color="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorOverlayConveter}, ConverterParameter=#FF515151}"/>

    <SolidColorBrush x:Key="Color.TabSelectorItem.UnselectedState.Border2" Color="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorOverlayConveter}, ConverterParameter=#FF111111}"/>

    <SolidColorBrush x:Key="Color.TabSelectorItem.SelectedState.Border1" Color="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorOverlayConveter}, ConverterParameter=#FF515151}"/>

    <SolidColorBrush x:Key="Color.TabSelectorItem.SelectedState.Border2" Color="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorOverlayConveter}, ConverterParameter=#FF111111}"/>

    <SolidColorBrush x:Key="Color.TabSelectorItem.MouseHoverState.Border1" Color="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorOverlayConveter}, ConverterParameter=#FF515151}"/>

    <SolidColorBrush x:Key="Color.TabSelectorItem.MouseHoverState.Border2" Color="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorOverlayConveter}, ConverterParameter=#FF111111}"/>

    <!-- NavButton -->

    <SolidColorBrush x:Key="NavButton.Background"
                     Color="#FF333333"
                     cs:MetropolisLight.Color="#FFFFFFFF"/>

    <SolidColorBrush x:Key="NavButton.HoverState.Border1"
                     Color="#FF666666"
                     cs:MetropolisLight.Color="#FFE3E3E3"/>

    <SolidColorBrush x:Key="NavButton.HoverState.Border2"
                     Color="#FF666666"
                     cs:MetropolisLight.Color="#FFE3E3E3"/>

    <SolidColorBrush x:Key="NavButton.PressedState.Border1" Color="#FFF78A09"/>

    <SolidColorBrush x:Key="NavButton.PressedState.Border2" Color="#FFF78A09"/>

    <!-- AddButton -->

    <SolidColorBrush x:Key="AddButton.DefaultState.Border1"
                     Color="#FF515151"
                     cs:MetropolisLight.Color="#FFB9B9B9"/>

    <SolidColorBrush x:Key="AddButton.DefaultState.Border2"
                     Color="#FF333333"
                     cs:MetropolisLight.Color="#FFFFFFFF"/>

    <SolidColorBrush x:Key="AddButton.DefaultState.Border3"
                     Color="#FF333333"
                     cs:MetropolisLight.Color="#FFFFFFFF"/>

    <SolidColorBrush x:Key="AddButton.HoverState.Border1"
                     Color="#FF515151"
                     cs:MetropolisLight.Color="#FFB9B9B9"/>

    <SolidColorBrush x:Key="AddButton.HoverState.Border2"
                     Color="#FF3C3C3C"
                     cs:MetropolisLight.Color="#FFF0F0F0"/>

    <SolidColorBrush x:Key="AddButton.HoverState.Border3"
                     Color="#FF3C3C3C"
                     cs:MetropolisLight.Color="#FFF0F0F0"/>

    <SolidColorBrush x:Key="AddButton.PressedState.Border1"
                     Color="#FF515151"
                     cs:MetropolisLight.Color="#FFB9B9B9"/>

    <SolidColorBrush x:Key="AddButton.PressedState.Border2"
                     Color="#FF515151"
                     cs:MetropolisLight.Color="#FFB9B9B9"/>

    <SolidColorBrush x:Key="AddButton.PressedState.Border3"
                     Color="#FF515151"
                     cs:MetropolisLight.Color="#FFB9B9B9"/>

    <!-- FormulaBarItem Hover/Pressed -->

    <SolidColorBrush x:Key="FormulaBarItem.HoverState"
                     Color="#FF666666"
                     cs:MetropolisLight.Color="#FFE3E3E3"/>

    <SolidColorBrush x:Key="FormulaBarItem.PressedState" Color="#FFF78A09"/>

    <SolidColorBrush x:Key="FormulaBarItem.Editor.BorderBrush"
                     Color="#FF515151"
                     cs:MetropolisLight.Color="#FFB9B9B9"/>

    <!-- FormulaBar Collapse/Expand Button -->

    <SolidColorBrush x:Key="ExpandButton.DefaultState.Border"
                     Color="#FF515151"
                     cs:MetropolisLight.Color="#FFB9B9B9"/>

    <SolidColorBrush x:Key="ExpandButton.DefaultState.Background"
                     Color="#FF333333"
                     cs:MetropolisLight.Color="#FFFFFFFF"/>

    <SolidColorBrush x:Key="ExpandButton.HoverState"
                     Color="#FF666666"
                     cs:MetropolisLight.Color="#FFE3E3E3"/>

    <SolidColorBrush x:Key="ExpandButton.PressedState" Color="#FFF78A09"/>

    <!--FormulaBarContol-->

    <sys:Double x:Key="{themes:SpreadsheetThemeKey ResourceKey=FormulaBarControlMinHeight}">28</sys:Double>

    <Style x:Key="SpreadsheetNameBoxControlStyle" TargetType="{x:Type dxspsi:SpreadsheetNameBoxControl}">
        <Setter Property="Margin" Value="3,0,0,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="EditValuePostMode" Value="Immediate"/>
        <Setter Property="ValidateOnTextInput" Value="True"/>
        <Setter Property="IsReadOnly" Value="False"/>
    </Style>

    <Style x:Key="FormulaBarEditorStyle" TargetType="{x:Type dxspsi:FormulaBarEditor}">
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Background"
                Value="Transparent"
               />
        <Setter Property="CaretBrush" Value="{StaticResource Text.CaretBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource Text.Foreground}"/>
    </Style>

    <Style x:Key="FormulaBarEditorBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background"
                Value="#FF333333"
                cs:MetropolisLight.Value="#FFFFFFFF"
               />
        <Setter Property="BorderBrush" Value="{StaticResource FormulaBarItem.Editor.BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="3"/>
    </Style>

    <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=FormulaBarControlTemplate}" TargetType="{x:Type dxsps:SpreadsheetFormulaBarControl}">
        <Border>
            <Grid Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                <Grid.RowDefinitions>
                    <RowDefinition MinHeight="{TemplateBinding MinHeight}"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid x:Name="PART_HorizontalContainer">
                    <Grid x:Name="PART_FormulaBarEditorContainer" Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="100" Width="100"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="{TemplateBinding MinHeight}"
                                           MaxHeight="{TemplateBinding MinHeight}"
                                           MinHeight="{TemplateBinding MinHeight}"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <dxspsi:SpreadsheetNameBoxControl x:Name="PART_Combobox"
                                                          MaxHeight="{TemplateBinding MinHeight}"
                                                          SpreadsheetControl="{TemplateBinding SpreadsheetControl}"
                                                          Style="{StaticResource SpreadsheetNameBoxControlStyle}"/>
                        <Thumb x:Name="PART_VerticalThumb"
                               Grid.Column="1"
                               Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=FormulaBarVerticalThumbStyle}}"/>
                        <Border Grid.Column="2"
                                MaxHeight="{TemplateBinding MaxHeight}"
                                MinHeight="{TemplateBinding MinHeight}"
                                VerticalAlignment="Top">
                            <Grid Margin="0,3,0,3">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Button x:Name="PART_CancelButton" Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=FormulaBarCancelButtonStyle}}"/>
                                <Button x:Name="PART_OkButton"
                                        Grid.Column="1"
                                        Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=FormulaBarOkButtonStyle}}"/>
                                <Button x:Name="PART_FunctionButton"
                                        Grid.Column="2"
                                        Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=FormulaBarFunctionButtonStyle}}"/>
                            </Grid>
                        </Border>
                        <Border Grid.Column="3"
                                Grid.RowSpan="2"
                                Style="{StaticResource FormulaBarEditorBorderStyle}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <dxspsi:FormulaBarEditor x:Name="PART_Editor" Style="{StaticResource FormulaBarEditorStyle}"/>
                                <Border BorderBrush="{StaticResource ScrollBar.Corner.BorderBrush}"
                                        BorderThickness="1,0,0,0"
                                        Grid.Column="1">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <ScrollBar Grid.Column="3"
                                                   Grid.Row="1"
                                                   LargeChange="{Binding ScrollViewer.ViewportHeight, ElementName=PART_Editor}"
                                                   Maximum="{Binding ScrollViewer.ScrollableHeight, ElementName=PART_Editor}"
                                                   Minimum="0"
                                                   ViewportSize="{Binding ScrollViewer.ViewportHeight, ElementName=PART_Editor}"
                                                   Visibility="{Binding IsExpanded, Converter={StaticResource BoolToVisibilityConverter},RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"/>
                                        <ToggleButton x:Name="PART_ExpandButton"
                                                      IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                                      Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=FormulaBarExpandButtonStyle}}"/>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Border>
                    </Grid>
                </Grid>
                <Thumb x:Name="PART_HorizontalThumb"
                       Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=FormulaBarHorizontalThumbStyle}}"
                       VerticalAlignment="Bottom"/>
            </Grid>
        </Border>
    </ControlTemplate>

    <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=FormulaBarExpandButtonStyle}" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="17"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="Root"
                          Background="{StaticResource ScrollBar.Corner.Background}"
                          SnapsToDevicePixels="True">
                        <Grid Margin="0,-1,-1,-1">
                            <Grid x:Name="DefaultState">
                                <Border Background="{StaticResource ExpandButton.DefaultState.Background}"
                                        BorderBrush="{StaticResource ExpandButton.DefaultState.Border}"
                                        BorderThickness="1"/>
                            </Grid>
                            <Grid x:Name="HoverState" Opacity="0">
                                <Border Background="{StaticResource ExpandButton.HoverState}"/>
                            </Grid>
                            <Grid x:Name="PressedState" Opacity="0">
                                <Border Background="{StaticResource ExpandButton.PressedState}"/>
                            </Grid>
                        </Grid>
                        <Grid x:Name="GlyphCollapsed" Margin="1,1,0,0">
                            <Path x:Name="PathCollapsed1"
                                  Data="F1 M 1,5L 2,5L 2,6L 3,6L 3,7L 4,7L 4,8L 5,8L 5,7L 6,7L 6,6L 7,6L 7,5L 8,5L 8,1L 7,1L 7,2L 6,2L 6,3L 5,3L 5,4L 4,4L 4,3L 3,3L 3,2L 2,2L 2,1L 1,1L 1,5 Z "
                                  Fill="{StaticResource GlyphBrush}"
                                  Height="7"
                                  Opacity="0.5"
                                  Stretch="Fill"
                                  Width="7"/>
                            <Path x:Name="PathCollapsed2"
                                  Data="F1 M 4,6L 4,5L 3,5L 3,4L 2,4L 2,3L 1,3L 1,2L 1,1L 2,1L 2,2L 3,2L 3,3L 4,3L 4,4L 5,4L 5,3L 6,3L 6,2L 7,2L 7,1L 8,1L 8,2L 8,3L 7,3L 7,4L 6,4L 6,5L 5,5L 5,6L 4,6 Z "
                                  Fill="{StaticResource GlyphBrush}"
                                  Height="5"
                                  Margin="0,1,0,1"
                                  Stretch="Fill"
                                  Width="7"/>
                        </Grid>
                        <Grid x:Name="GlyphExpanded"
                              Margin="1,0,0,0"
                              Opacity="0">
                            <Path x:Name="PathExpanded1"
                                  Data="F1 M 1,4L 2,4L 2,3L 3,3L 3,2L 4,2L 4,1L 5,1L 5,2L 6,2L 6,3L 7,3L 7,4L 8,4L 8,8L 7,8L 7,7L 6,7L 6,6L 5,6L 5,5L 4,5L 4,6L 3,6L 3,7L 2,7L 2,8L 1,8L 1,4 Z "
                                  Fill="{StaticResource GlyphBrush}"
                                  Height="7"
                                  Opacity="0.5"
                                  Stretch="Fill"
                                  Width="7"/>
                            <Path x:Name="PathExpanded2"
                                  Data="F1 M 4,1L 4,2L 3,2L 3,3L 2,3L 2,4L 1,4L 1,5L 1,6L 2,6L 2,5L 3,5L 3,4L 4,4L 4,3L 5,3L 5,4L 6,4L 6,5L 7,5L 7,6L 8,6L 8,5L 8,4L 7,4L 7,3L 6,3L 6,2L 5,2L 5,1L 4,1 Z "
                                  Fill="{StaticResource GlyphBrush}"
                                  Height="5"
                                  Margin="0,0,0,1"
                                  Stretch="Fill"
                                  Width="7"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity"
                                    TargetName="HoverState"
                                    Value="1"/>
                            <Setter Property="Fill"
                                    TargetName="PathCollapsed1"
                                    Value="#FFFFFFFF"
                                   />
                            <Setter Property="Fill"
                                    TargetName="PathCollapsed2"
                                    Value="#FFFFFFFF"
                                   />
                            <Setter Property="Fill"
                                    TargetName="PathExpanded1"
                                    Value="#FFFFFFFF"
                                   />
                            <Setter Property="Fill"
                                    TargetName="PathExpanded2"
                                    Value="#FFFFFFFF"
                                   />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity"
                                    TargetName="PressedState"
                                    Value="1"/>
                            <Setter Property="Fill"
                                    TargetName="PathCollapsed1"
                                    Value="#FF333333"
                                    cs:MetropolisLight.Value="#FFFFFFFF"
                                   />
                            <Setter Property="Fill"
                                    TargetName="PathCollapsed2"
                                    Value="#FF333333"
                                    cs:MetropolisLight.Value="#FFFFFFFF"
                                   />
                            <Setter Property="Fill"
                                    TargetName="PathExpanded1"
                                    Value="#FF333333"
                                    cs:MetropolisLight.Value="#FFFFFFFF"
                                   />
                            <Setter Property="Fill"
                                    TargetName="PathExpanded2"
                                    Value="#FF333333"
                                    cs:MetropolisLight.Value="#FFFFFFFF"
                                   />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Opacity"
                                    TargetName="GlyphExpanded"
                                    Value="1"/>
                            <Setter Property="Opacity"
                                    TargetName="GlyphCollapsed"
                                    Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=FormulaBarCancelButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid MinHeight="22" MinWidth="22">
                        <Border x:Name="HoverState"
                                Background="{StaticResource FormulaBarItem.HoverState}"
                                Opacity="0"/>
                        <Border x:Name="PressedState"
                                Background="{StaticResource FormulaBarItem.PressedState}"
                                Opacity="0"/>
                        <Grid Margin="3">
                            <Image x:Name="image1"
                                   dxb:ImageColorizer.Color="{StaticResource GlyphColor}"
                                   dxb:ImageColorizer.IsEnabled="True"
                                   HorizontalAlignment="Center"
                                   Source="/DevExpress.Xpf.Spreadsheet.v24.1;component/Images/FormulaBarCancel_16x16.png"
                                   Stretch="None"
                                   VerticalAlignment="Center"
                                   Visibility="{TemplateBinding IsEnabled, Converter={StaticResource BoolToVisibilityInverseConverter}}"/>
                            <Image x:Name="image2"
                                   dxb:ImageColorizer.Color="{StaticResource GlyphColor}"
                                   dxb:ImageColorizer.IsEnabled="True"
                                   HorizontalAlignment="Center"
                                   Source="/DevExpress.Xpf.Spreadsheet.v24.1;component/Images/FormulaBarCancel_16x16.png"
                                   Stretch="None"
                                   VerticalAlignment="Center"
                                   Visibility="{TemplateBinding IsEnabled, Converter={StaticResource BoolToVisibilityConverter}}"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity"
                                    TargetName="HoverState"
                                    Value="1"/>
                            <Setter Property="Opacity"
                                    TargetName="PressedState"
                                    Value="0"/>
                            <Setter Property="dxb:ImageColorizer.Color"
                                    TargetName="image1"
                                    Value="#FFFFFFFF"
                                   />
                            <Setter Property="dxb:ImageColorizer.Color"
                                    TargetName="image2"
                                    Value="#FFFFFFFF"
                                   />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity"
                                    TargetName="HoverState"
                                    Value="0"/>
                            <Setter Property="Opacity"
                                    TargetName="PressedState"
                                    Value="1"/>
                            <Setter Property="dxb:ImageColorizer.Color"
                                    TargetName="image1"
                                    Value="#CF000000"
                                   />
                            <Setter Property="dxb:ImageColorizer.Color"
                                    TargetName="image2"
                                    Value="#CF000000"
                                   />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.35"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=FormulaBarOkButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid MinHeight="22" MinWidth="22">
                        <Border x:Name="HoverState"
                                Background="{StaticResource FormulaBarItem.HoverState}"
                                Opacity="0"/>
                        <Border x:Name="PressedState"
                                Background="{StaticResource FormulaBarItem.PressedState}"
                                Opacity="0"/>
                        <Grid Margin="3">
                            <Image x:Name="image1"
                                   dxb:ImageColorizer.Color="{StaticResource GlyphColor}"
                                   dxb:ImageColorizer.IsEnabled="True"
                                   HorizontalAlignment="Center"
                                   Source="/DevExpress.Xpf.Spreadsheet.v24.1;component/Images/FormulaBarOk_16x16.png"
                                   Stretch="None"
                                   VerticalAlignment="Center"
                                   Visibility="{TemplateBinding IsEnabled, Converter={StaticResource BoolToVisibilityInverseConverter}}"/>
                            <Image x:Name="image2"
                                   dxb:ImageColorizer.Color="{StaticResource GlyphColor}"
                                   dxb:ImageColorizer.IsEnabled="True"
                                   HorizontalAlignment="Center"
                                   Source="/DevExpress.Xpf.Spreadsheet.v24.1;component/Images/FormulaBarOk_16x16.png"
                                   Stretch="None"
                                   VerticalAlignment="Center"
                                   Visibility="{TemplateBinding IsEnabled, Converter={StaticResource BoolToVisibilityConverter}}"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity"
                                    TargetName="HoverState"
                                    Value="1"/>
                            <Setter Property="Opacity"
                                    TargetName="PressedState"
                                    Value="0"/>
                            <Setter Property="dxb:ImageColorizer.Color"
                                    TargetName="image1"
                                    Value="#FFFFFFFF"
                                   />
                            <Setter Property="dxb:ImageColorizer.Color"
                                    TargetName="image2"
                                    Value="#FFFFFFFF"
                                   />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity"
                                    TargetName="HoverState"
                                    Value="0"/>
                            <Setter Property="Opacity"
                                    TargetName="PressedState"
                                    Value="1"/>
                            <Setter Property="dxb:ImageColorizer.Color"
                                    TargetName="image1"
                                    Value="#CF000000"
                                   />
                            <Setter Property="dxb:ImageColorizer.Color"
                                    TargetName="image2"
                                    Value="#CF000000"
                                   />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.35"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=FormulaBarFunctionButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid MinHeight="22" MinWidth="22">
                        <Border x:Name="HoverState"
                                Background="{StaticResource FormulaBarItem.HoverState}"
                                Opacity="0"/>
                        <Border x:Name="PressedState"
                                Background="{StaticResource FormulaBarItem.PressedState}"
                                Opacity="0"/>
                        <Grid Margin="3">
                            <Image x:Name="image1"
                                   dxb:ImageColorizer.Color="{StaticResource GlyphColor}"
                                   dxb:ImageColorizer.IsEnabled="True"
                                   HorizontalAlignment="Center"
                                   Source="/DevExpress.Xpf.Spreadsheet.v24.1;component/Images/FormulaBarInsertFunction_16x16.png"
                                   Stretch="None"
                                   VerticalAlignment="Center"
                                   Visibility="{TemplateBinding IsEnabled, Converter={StaticResource BoolToVisibilityInverseConverter}}"/>
                            <Image x:Name="image2"
                                   dxb:ImageColorizer.Color="{StaticResource GlyphColor}"
                                   dxb:ImageColorizer.IsEnabled="True"
                                   HorizontalAlignment="Center"
                                   Source="/DevExpress.Xpf.Spreadsheet.v24.1;component/Images/FormulaBarInsertFunction_16x16.png"
                                   Stretch="None"
                                   VerticalAlignment="Center"
                                   Visibility="{TemplateBinding IsEnabled, Converter={StaticResource BoolToVisibilityConverter}}"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity"
                                    TargetName="HoverState"
                                    Value="1"/>
                            <Setter Property="Opacity"
                                    TargetName="PressedState"
                                    Value="0"/>
                            <Setter Property="dxb:ImageColorizer.Color"
                                    TargetName="image1"
                                    Value="#FFFFFFFF"
                                   />
                            <Setter Property="dxb:ImageColorizer.Color"
                                    TargetName="image2"
                                    Value="#FFFFFFFF"
                                   />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity"
                                    TargetName="HoverState"
                                    Value="0"/>
                            <Setter Property="Opacity"
                                    TargetName="PressedState"
                                    Value="1"/>
                            <Setter Property="dxb:ImageColorizer.Color"
                                    TargetName="image1"
                                    Value="#CF000000"
                                   />
                            <Setter Property="dxb:ImageColorizer.Color"
                                    TargetName="image2"
                                    Value="#CF000000"
                                   />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.35"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=FormulaBarHorizontalThumbStyle}" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Background="Transparent"
                          Height="3"
                         />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=FormulaBarVerticalThumbStyle}" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="Transparent"
                            Cursor="SizeWE"
                            Padding="4,0,4,0"
                           >
                        <Path Data="F1 M 465,344L 465,344L 466,344L 466,345L 465,345L 465,345L 464,345L 464,344L 465,344 Z M 465,352L 465,352L 466,352L 466,353L 465,353L 465,353L 464,353L 464,352L 465,352 Z M 465,340L 465,340L 466,340L 466,341L 465,341L 465,341L 464,341L 464,340L 465,340 Z M 465,348L 465,348L 466,348L 466,349L 465,349L 465,349L 464,349L 464,348L 465,348 Z M 465,342L 465,342L 466,342L 466,343L 465,343L 465,343L 464,343L 464,342L 465,342 Z M 465,350L 465,350L 466,350L 466,351L 465,351L 465,351L 464,351L 464,350L 465,350 Z M 465,338L 465,338L 466,338L 466,339L 465,339L 465,339L 464,339L 464,338L 465,338 Z M 465,346L 465,346L 466,346L 466,347L 465,347L 465,347L 464,347L 464,346L 465,346 Z "
                              Fill="{StaticResource GlyphBrush}"
                              Height="15"
                              Stretch="Fill"
                              Width="2"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type dxspsi:FormulaBarEditor}">
        <Setter Property="Background"
                Value="#FFFFFFFF"
               />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxspsi:FormulaBarEditor}">
                    <Grid x:Name="RootElement"
                          Background="{TemplateBinding Background}"
                          Margin="{TemplateBinding Margin}">
                        <Grid>
                            <Border x:Name="focus"
                                    BorderThickness="0"
                                    Opacity="0"/>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <ScrollViewer x:Name="PART_ContentHost"
                                              Background="{TemplateBinding Background}"
                                              Foreground="{TemplateBinding Foreground}"
                                              IsTabStop="False"
                                              Padding="{TemplateBinding Padding}"
                                              VerticalContentAlignment="Center"/>
                            </Border>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Grouping-->

    <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=GroupButtonTemplate}" TargetType="{x:Type dxspsi:GroupItem}">
        <Grid Height="15"
              Margin="-1,-1,0,0"
              Width="15">
            <Grid x:Name="DefaultState">
                <Border Background="{StaticResource expandButton.DefaultState.Border1}" Padding="1">
                    <Border Background="{StaticResource expandButton.DefaultState.Border2}" Padding="1"/>
                </Border>
            </Grid>
            <Grid x:Name="HoverState" Opacity="0">
                <Border Background="{StaticResource expandButton.HoverState.Border1}" Padding="1">
                    <Border Background="{StaticResource expandButton.HoverState.Border2}" Padding="1"/>
                </Border>
            </Grid>
            <Grid x:Name="PressedState" Opacity="0">
                <Border Background="{StaticResource expandButton.PressedState.Border1}" Padding="1">
                    <Border Background="{StaticResource expandButton.PressedState.Border2}" Padding="1,1,1,0"/>
                </Border>
            </Grid>
            <Path x:Name="CollapseButton"
                  Data="F1 M 3,0L 4,0L 4,3L 7,3L 7,4L 4,4L 4,7L 3,7L 3,4L 0,4L 0,3L 3,3L 3,0 Z "
                  Fill="#FFFFFFFF"
                  Height="7"
                  Opacity="0"
                  Stretch="Fill"
                  Width="7"
                  cs:MetropolisLight.Fill="#FF666666"
                 />
            <Rectangle x:Name="ExpandButton"
                       Fill="#FFFFFFFF"
                       Height="1"
                       Opacity="0"
                       Stretch="Fill"
                       Width="7"
                       cs:MetropolisLight.Fill="#FFE3E3E3"
                      />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="True">
                <Setter Property="Opacity"
                        TargetName="ExpandButton"
                        Value="1"/>
            </Trigger>
            <Trigger Property="IsCollapsed" Value="True">
                <Setter Property="Opacity"
                        TargetName="CollapseButton"
                        Value="1"/>
            </Trigger>
            <Trigger Property="IsHovered" Value="True">
                <Setter Property="Opacity"
                        TargetName="HoverState"
                        Value="1"/>
                <Setter Property="Fill"
                        TargetName="CollapseButton"
                        Value="#FFF78A09"
                       />
                <Setter Property="Fill"
                        TargetName="ExpandButton"
                        Value="#FFF78A09"
                       />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity"
                        TargetName="PressedState"
                        Value="1"/>
                <Setter Property="Fill"
                        TargetName="CollapseButton"
                        Value="#FFF78A09"
                        cs:MetropolisLight.Value="#FFFFFFFF"
                       />
                <Setter Property="Fill"
                        TargetName="ExpandButton"
                        Value="#FFF78A09"
                        cs:MetropolisLight.Value="#FFFFFFFF"
                       />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=GroupHeaderTemplate}" TargetType="{x:Type dxspsi:GroupItem}">
        <Grid>
            <Grid x:Name="DefaultState">
                <Border Background="{StaticResource expandButton.DefaultState.Border1}" Padding="1">
                    <Border Background="{StaticResource expandButton.DefaultState.Border2}" Padding="1"/>
                </Border>
            </Grid>
            <Grid x:Name="HoverState" Opacity="0">
                <Border Background="{StaticResource expandButton.HoverState.Border1}" Padding="1">
                    <Border Background="{StaticResource expandButton.HoverState.Border2}" Padding="1"/>
                </Border>
            </Grid>
            <Grid x:Name="PressedState" Opacity="0">
                <Border Background="{StaticResource expandButton.PressedState.Border1}" Padding="1">
                    <Border Background="{StaticResource expandButton.PressedState.Border2}" Padding="1,1,1,0"/>
                </Border>
            </Grid>
            <TextBlock HorizontalAlignment="Center"
                       Text="{TemplateBinding Text}"
                       FontSize="{TemplateBinding FontHeight}"
                       TextAlignment="Center"
                       VerticalAlignment="Center"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHovered" Value="True">
                <Setter Property="Opacity"
                        TargetName="HoverState"
                        Value="1"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity"
                        TargetName="PressedState"
                        Value="1"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Comments-->

    <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=CommentTemplate}" TargetType="{x:Type dxspsi:CommentItem}">
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=CommentLineBrush}}"
                BorderThickness="1">
            <TextBox x:Name="PART_CommentBox"
                     AcceptsReturn="True"
                     Background="{TemplateBinding Background}"
                     BorderThickness="0"
                     Cursor="{TemplateBinding Cursor}"
                     dx:ThemeManager.ThemeName="None"
                     Focusable="{TemplateBinding Focusable}"
                     FontFamily="{Binding TextSettings.FontFamily, RelativeSource={RelativeSource TemplatedParent}}"
                     FontSize="{Binding TextSettings.FontSize, RelativeSource={RelativeSource TemplatedParent}}"
                     FontStyle="{Binding TextSettings.FontStyle, RelativeSource={RelativeSource TemplatedParent}}"
                     FontWeight="{Binding TextSettings.FontWeight, RelativeSource={RelativeSource TemplatedParent}}"
                     Foreground="{Binding TextSettings.Foreground, RelativeSource={RelativeSource TemplatedParent}}"
                     IsReadOnly="{TemplateBinding IsReadOnly}"
                     Text="{TemplateBinding Text}"
                     TextWrapping="{Binding TextSettings.TextWrapping, RelativeSource={RelativeSource TemplatedParent}}"/>
        </Border>
    </ControlTemplate>

    <!--HeaderControl-->

    <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=HeadersControlTemplate}" TargetType="{x:Type dxspsi:WorksheetHeadersControl}">
        <Border>
            <dxspsi:HeadersPanel LayoutInfo="{Binding Path=(dxspsi:SpreadsheetViewControl.ActiveSpreadsheetView).LayoutInfo, RelativeSource={RelativeSource Self}}" Orientation="{TemplateBinding Orientation}"/>
        </Border>
    </ControlTemplate>

    <!-- Header Item -->

    <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=HorizontalHeaderItem}" TargetType="{x:Type dxspsi:HeaderItem}">
        <Border x:Name="Root"
                Background="{StaticResource Header.Background}"
                BorderBrush="{StaticResource Header.BorderBrush}"
                BorderThickness="0,0,1,1">
            <TextBlock FontSize="{TemplateBinding FontHeight}"
                       HorizontalAlignment="Center"
                       Text="{TemplateBinding Text}"
                       TextAlignment="Center"
                       VerticalAlignment="Center"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush"
                        TargetName="Root"
                        Value="{StaticResource Header.BorderBrush.IsMouseOver}"/>
                <Setter Property="Background"
                        TargetName="Root"
                        Value="{StaticResource Header.Background.IsMouseOver}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="BorderBrush"
                        TargetName="Root"
                        Value="{StaticResource Header.BorderBrush.IsSelected}"/>
                <Setter Property="Background"
                        TargetName="Root"
                        Value="{StaticResource Header.Background.IsSelected}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=VerticalHeaderItem}" TargetType="{x:Type dxspsi:HeaderItem}">
        <Border x:Name="Root"
                Background="{StaticResource Header.Background}"
                BorderBrush="{StaticResource Header.BorderBrush}"
                BorderThickness="0,0,1,1">
            <TextBlock FontSize="{TemplateBinding FontHeight}"
                       HorizontalAlignment="Center"
                       Text="{TemplateBinding Text}"
                       TextAlignment="Center"
                       VerticalAlignment="Center"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="BorderBrush"
                        TargetName="Root"
                        Value="{StaticResource Header.BorderBrush.IsSelected}"/>
                <Setter Property="Background"
                        TargetName="Root"
                        Value="{StaticResource Header.Background.IsSelected}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--TabSelector-->

    <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=TabSelectorItemTemplate}" TargetType="{x:Type dxspsi:TabSelectorItem}">
        <Grid x:Name="PART_Root">
            <Grid Margin="0,1,0,-1">
                <Grid x:Name="UnselectedState" Visibility="{TemplateBinding State, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter=Normal}">
                    <Border Background="{StaticResource TabSelectorItem.UnselectedState.Border1}" Padding="0,0,1,0">
                        <Border Background="{StaticResource TabSelectorItem.UnselectedState.Border2}" Padding="1,0,1,1">
                            <Border Background="{StaticResource TabSelectorItem.UnselectedState.Border3}"/>
                        </Border>
                    </Border>
                </Grid>
                <Grid x:Name="HoverState" Opacity="0">
                    <Border Background="{StaticResource TabSelectorItem.MouseHoverState.Border1}" Padding="0,0,1,0">
                        <Border Background="{StaticResource TabSelectorItem.MouseHoverState.Border2}" Padding="1,0,1,1">
                            <Border Background="{StaticResource TabSelectorItem.MouseHoverState.Border3}"/>
                        </Border>
                    </Border>
                </Grid>
                <Grid x:Name="CheckedState" Visibility="{TemplateBinding State, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter=Selected}">
                    <Border Background="{StaticResource TabSelectorItem.UnselectedState.Border1}" Padding="0,0,1,0">
                        <Border Background="{StaticResource TabSelectorItem.UnselectedState.Border2}" Padding="1,0,1,1">
                            <Border Background="{StaticResource TabSelectorItem.UnselectedState.Border3}"/>
                        </Border>
                    </Border>
                </Grid>
                <Grid x:Name="SelectedState" Visibility="{TemplateBinding State, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter=Active}">
                    <Border Background="{StaticResource TabSelectorItem.SelectedState.Border1}"
                            Margin="0,-1,0,0"
                            Padding="0,0,1,0">
                        <Border Background="{StaticResource TabSelectorItem.SelectedState.Border2}" Padding="1,0,1,1">
                            <Border Background="{StaticResource TabSelectorItem.SelectedState.Border3}"/>
                        </Border>
                    </Border>
                </Grid>
            </Grid>
            <TextBlock x:Name="content"
                       Focusable="False"
                       Margin="12,0,12,0"
                       Text="{TemplateBinding Text}"
                       TextAlignment="Center"
                       VerticalAlignment="Center"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity"
                        TargetName="HoverState"
                        Value="1"/>
                <Setter Property="Foreground"
                        TargetName="content"
                        Value="#FFF78A09"
                       />
            </Trigger>
            <Trigger Property="State" Value="Active">
                <Setter Property="Foreground"
                        TargetName="content"
                        Value="#FFF78A09"
                       />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=TabSelectorColoredItemTemplate}" TargetType="{x:Type dxspsi:TabSelectorItem}">
        <Grid x:Name="PART_Root">
            <Grid Margin="0,1,0,-1">
                <Border Background="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorOverlayConveter}, ConverterParameter=#FF999999}"/>
                <Grid Opacity="0.95">
                    <Grid x:Name="UnselectedState" Visibility="{TemplateBinding State, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter=Normal}">
                        <Border Background="{StaticResource TabSelectorItem.UnselectedState.Border1}" Padding="0,0,1,0">
                            <Border Background="{StaticResource TabSelectorItem.UnselectedState.Border2}" Padding="1,0,1,1">
                                <Border Background="{StaticResource TabSelectorItem.UnselectedState.Border3}"/>
                            </Border>
                        </Border>
                    </Grid>
                    <Grid x:Name="HoverState" Opacity="0">
                        <Border Background="{StaticResource TabSelectorItem.MouseHoverState.Border1}" Padding="0,0,1,0">
                            <Border Background="{StaticResource TabSelectorItem.MouseHoverState.Border2}" Padding="1,0,1,1">
                                <Border Background="{StaticResource TabSelectorItem.MouseHoverState.Border3}"/>
                            </Border>
                        </Border>
                    </Grid>
                    <Grid x:Name="CheckedState" Visibility="{TemplateBinding State, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter=Selected}">
                        <Border Background="{StaticResource TabSelectorItem.UnselectedState.Border1}" Padding="0,0,1,0">
                            <Border Background="{StaticResource TabSelectorItem.UnselectedState.Border2}" Padding="1,0,1,1">
                                <Border Background="{StaticResource TabSelectorItem.UnselectedState.Border3}"/>
                            </Border>
                        </Border>
                    </Grid>
                    <Grid x:Name="SelectedState" Visibility="{TemplateBinding State, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter=Active}">
                        <Border Background="{StaticResource TabSelectorItem.SelectedState.Border1}"
                                Margin="0,-1,0,0"
                                Padding="0,0,1,0">
                            <Border Background="{StaticResource TabSelectorItem.SelectedState.Border2}" Padding="1,0,1,1">
                                <Border Background="{StaticResource TabSelectorItem.SelectedState.Border3}"/>
                            </Border>
                        </Border>
                    </Grid>
                </Grid>
            </Grid>
            <TextBlock x:Name="content"
                       Focusable="False"
                       Foreground="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ForegroundOverlayConverter}, ConverterParameter=#FFB0B0B0}"
                       Margin="12,0,12,0"
                       Text="{TemplateBinding Text}"
                       TextAlignment="Center"
                       VerticalAlignment="Center"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity"
                        TargetName="HoverState"
                        Value="1"/>
                <Setter Property="Opacity"
                        TargetName="content"
                        Value="0.8"/>
                <Setter Property="Foreground"
                        TargetName="content"
                        Value="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ForegroundOverlayConverter}, ConverterParameter=#FF888888}"/>
            </Trigger>
            <Trigger Property="State" Value="Active">
                <Setter Property="Opacity"
                        TargetName="content"
                        Value="0.8"/>
                <Setter Property="Foreground"
                        TargetName="content"
                        Value="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ForegroundOverlayConverter}, ConverterParameter=#FF888888}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=TabSelectorTemplate}" TargetType="{x:Type dxspsi:SpreadsheetTabSelector}">
        <Border>
            <Grid x:Name="PART_RootContainer">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Border Background="{StaticResource TabPanel.BorderBrush}" Padding="0,0,1,0">
                    <Grid x:Name="PART_NavButtonContainer">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Button x:Name="PART_FirstButton"
                                Command="{TemplateBinding FirstTabCommand}"
                                CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                Focusable="False"
                                Grid.Column="0"
                                Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=BaseButtonStyle}}"
                                Width="20">
                            <Path Data="F1 M 1351,926L 1347,922L 1347,926L 1346,926L 1346,918L 1347,918L 1347,922L 1351,918L 1351,922L 1355,918L 1355,926L 1351,922L 1351,926 Z"
                                  Fill="{StaticResource GlyphBrush}"
                                  Height="8"
                                  Stretch="Fill"
                                  Width="9"/>
                        </Button>
                        <Button x:Name="PART_PrevButton"
                                Command="{TemplateBinding PrevTabCommand}"
                                CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                Focusable="False"
                                Grid.Column="1"
                                Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=BaseButtonStyle}}"
                                Width="20">
                            <Path Data="F1 M 1314,926L 1310,922L 1314,918L 1314,926 Z"
                                  Fill="{StaticResource GlyphBrush}"
                                  Height="8"
                                  Stretch="Fill"
                                  Width="4"/>
                        </Button>
                        <Button x:Name="PART_NextButton"
                                Command="{TemplateBinding NextTabCommand}"
                                CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                Focusable="False"
                                Grid.Column="2"
                                Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=BaseButtonStyle}}"
                                Width="20">
                            <Path Data="F1 M 1423,918L 1427,922L 1423,926L 1423,918 Z "
                                  Fill="{StaticResource GlyphBrush}"
                                  Height="8"
                                  Stretch="Fill"
                                  Width="4"/>
                        </Button>
                        <Button x:Name="PART_LastButton"
                                Command="{TemplateBinding LastTabCommand}"
                                CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                Focusable="False"
                                Grid.Column="3"
                                Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=BaseButtonStyle}}"
                                Width="20">
                            <Path Data="F1 M 1386,918L 1390,922L 1390,918L 1391,918L 1391,926L 1390,926L 1390,922L 1386,926L 1386,922L 1382,926L 1382,918L 1386,922L 1386,918 Z "
                                  Fill="{StaticResource GlyphBrush}"
                                  Height="8"
                                  Stretch="Fill"
                                  Width="9"/>
                        </Button>
                    </Grid>
                </Border>
                <dxspsi:TabSelectorPanel AddButtonTemplate="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=AddButtonDataTemplate}}"
                                         Grid.Column="1"
                                         Grid.ColumnSpan="2"
                                         TabSelectorItemColoredTemplate="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=TabSelectorColoredItemTemplate}}"
                                         TabSelectorItemDefaultTemplate="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=TabSelectorItemTemplate}}"/>
            </Grid>
        </Border>
    </ControlTemplate>

    <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=BaseButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="Root" Margin="0,1,0,0">
                        <Border x:Name="DefaultState" Background="{StaticResource NavButton.Background}"/>
                        <Border x:Name="HoverState"
                                Background="{StaticResource NavButton.HoverState.Border2}"
                                BorderBrush="{StaticResource NavButton.HoverState.Border1}"
                                BorderThickness="1,0,1,0"
                                Opacity="0"/>
                        <Border x:Name="PressedState"
                                Background="{StaticResource NavButton.PressedState.Border2}"
                                BorderBrush="{StaticResource NavButton.PressedState.Border1}"
                                BorderThickness="1,0,1,0"
                                Opacity="0"/>
                        <ContentPresenter x:Name="Content"
                                          Content="{TemplateBinding Content}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity"
                                    TargetName="HoverState"
                                    Value="1"/>
                            <Setter Property="Opacity"
                                    TargetName="PressedState"
                                    Value="0"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity"
                                    TargetName="HoverState"
                                    Value="0"/>
                            <Setter Property="Opacity"
                                    TargetName="PressedState"
                                    Value="1"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity"
                                    TargetName="Content"
                                    Value="0.35"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=AddButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="32"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="Root">
                        <Grid x:Name="DefaultState">
                            <Border Background="{StaticResource AddButton.DefaultState.Border1}" Padding="0,1,1,0">
                                <Border Background="{StaticResource AddButton.DefaultState.Border2}" Padding="0,1,1,1">
                                    <Border Background="{StaticResource AddButton.DefaultState.Border3}"/>
                                </Border>
                            </Border>
                        </Grid>
                        <Grid x:Name="HoverState" Opacity="0">
                            <Border Background="{StaticResource AddButton.HoverState.Border1}" Padding="0,1,1,0">
                                <Border Background="{StaticResource AddButton.HoverState.Border2}" Padding="0,1,1,1">
                                    <Border Background="{StaticResource AddButton.HoverState.Border3}"/>
                                </Border>
                            </Border>
                        </Grid>
                        <Grid x:Name="PressedState" Opacity="0">
                            <Border Background="{StaticResource AddButton.PressedState.Border1}" Padding="0,1,1,0">
                                <Border Background="{StaticResource AddButton.PressedState.Border2}" Padding="0,1,1,1">
                                    <Border Background="{StaticResource AddButton.PressedState.Border3}"/>
                                </Border>
                            </Border>
                        </Grid>
                        <Path Data="F1 M 119,100L 122,100L 122,97L 124,97L 124,100L 127,100L 127,102L 124,102L 124,105L 122,105L 122,102L 119,102L 119,100 Z "
                              Fill="{StaticResource GlyphBrush}"
                              Height="8"
                              Margin="0,1,0,0"
                              Stretch="Fill"
                              Width="8"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity"
                                    TargetName="DefaultState"
                                    Value="0"/>
                            <Setter Property="Opacity"
                                    TargetName="HoverState"
                                    Value="1"/>
                            <Setter Property="Opacity"
                                    TargetName="PressedState"
                                    Value="0"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity"
                                    TargetName="DefaultState"
                                    Value="0"/>
                            <Setter Property="Opacity"
                                    TargetName="HoverState"
                                    Value="0"/>
                            <Setter Property="Opacity"
                                    TargetName="PressedState"
                                    Value="1"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity"
                                    TargetName="Root"
                                    Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Spreadsheet-->

    <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=TabSelectorPanelStyle}" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource TabPanel.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TabPanel.BorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,1,0,0"/>
    </Style>

    <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=BottomRightCornerStyle}" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource ScrollBar.Corner.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=SpreadsheetBorderBrush}}"/>
        <Setter Property="BorderThickness" Value="1,1,0,0"/>
    </Style>

    <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=WorksheetSelectionControlStyle}" TargetType="{x:Type dxspsi:WorksheetSelectionControl}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="SelectionBorderBrush" Value="{StaticResource Selection.BorderBrush}"/>
        <Setter Property="SelectionBrush" Value="{StaticResource Selection.Background}"/>
        <Setter Property="AutoFilterBackgroundBrush" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=AutoFilterBackgroundBrush}}"/>
    </Style>

    <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=TopLeftCornerStyle}" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource Header.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Header.BorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,1,1"/>
    </Style>

    <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=ResizeThumbStyle}" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="Root"
                          Background="Transparent"
                          cs:MetropolisLight.Background="#FFD3D3D3"
                         >
                        <Border Background="{StaticResource ResizeThumb.Background}"
                                BorderBrush="{StaticResource TabPanel.BorderBrush}"
                                BorderThickness="0,1,1,0"/>
                        <Grid Cursor="SizeWE"
                              Height="15"
                              Width="9">
                            <Path x:Name="Path"
                                  Data="F1 M 0,0L 1,0L 1,12L 0,12L 0,0 Z M 2,9.53674e-007L 3,9.53674e-007L 3,12L 2,12L 2,9.53674e-007 Z "
                                  Fill="{StaticResource ResizeThumb.GlyphBrush}"
                                  Height="12"
                                  Margin="3,0,3,0"
                                  Stretch="Fill"
                                  Width="3"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill"
                                    TargetName="Path"
                                    Value="{StaticResource ResizeThumb.GlyphBrush.IsMouseOver}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity"
                                    TargetName="Root"
                                    Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource {x:Type TextBox}}"
          
           TargetType="{x:Type dxspsi:XpfCellInplaceEditor}">
        <Setter Property="Visibility" Value="Hidden"/>
        <Setter Property="Background"
                Value="#FFFF0000"
                cs:MetropolisLight.Value="#FFD3D3D3"
               />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxspsi:XpfCellInplaceEditor}">
                    <Grid x:Name="RootElement"
                          Background="{TemplateBinding Background}"
                          Margin="{TemplateBinding Margin}">
                        <Grid>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <ScrollViewer x:Name="PART_ContentHost"
                                              Background="{TemplateBinding Background}"
                                              Foreground="{TemplateBinding Foreground}"
                                              IsTabStop="False"
                                              Padding="{TemplateBinding Padding}"
                                              VerticalContentAlignment="Center"/>
                            </Border>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ReferenceEditor-->

    <DataTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=ReferenceEditCollapseButtonTemplate}">
        <Image x:Name="collapse"
               dxb:ImageColorizer.Color="{StaticResource GlyphColor}"
               dxb:ImageColorizer.IsEnabled="True"
               HorizontalAlignment="Center"
               Source="/DevExpress.Xpf.Spreadsheet.v24.1;component/Images/ReferenceEdit_Collapse_16x16.png"
               Stretch="None"
               VerticalAlignment="Center"/>
    </DataTemplate>

    <DataTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=ReferenceEditExpandButtonTemplate}">
        <Image x:Name="collapse"
               dxb:ImageColorizer.Color="{StaticResource GlyphColor}"
               dxb:ImageColorizer.IsEnabled="True"
               HorizontalAlignment="Center"
               Source="/DevExpress.Xpf.Spreadsheet.v24.1;component/Images/ReferenceEdit_Expand_16x16.png"
               Stretch="None"
               VerticalAlignment="Center"/>
    </DataTemplate>

</ResourceDictionary>