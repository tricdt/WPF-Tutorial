<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
                    xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys"
                    xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <SolidColorBrush x:Key="CloseButtonGlyphBrushHover" Color="#FF000000 "/>

    <ControlTemplate x:Key="{dxbt:FloatingBarPopupThemeKey ResourceKey=BorderTemplate}" TargetType="{x:Type ContentControl}">
        <Grid x:Name="grid"
              Margin="3"
              SnapsToDevicePixels="True">
            <Border x:Name="shadow"
                    Background="#FF000000 "
                    CornerRadius="2"
                    Margin="5,5,0,0"
                    Opacity="0.15"/>
            <Border x:Name="windowBorder"
                    Background="#FF7A7999 "
                    Margin="3"
                    Padding="3">
                <Border x:Name="window"
                        Background="#FFDBDAE4 "
                        Padding="1">
                    <Border Background="#FFD7D7E5 ">
                        <ContentPresenter Content="{TemplateBinding Content}"/>
                    </Border>
                </Border>
            </Border>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="AppType">
                    <VisualState x:Name="Standalone"/>
                    <VisualState x:Name="BrowserHosted">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxcn:ValueSetter.Visibility="Collapsed"
                                                           Storyboard.TargetName="shadow"
                                                           Storyboard.TargetProperty="Visibility"/>
                            <ObjectAnimationUsingKeyFrames dxcn:ValueSetter.Thickness="0"
                                                           Storyboard.TargetName="window"
                                                           Storyboard.TargetProperty="Margin"/>
                            <ObjectAnimationUsingKeyFrames dxcn:ValueSetter.Thickness="0"
                                                           Storyboard.TargetName="windowBorder"
                                                           Storyboard.TargetProperty="Margin"/>
                            <ObjectAnimationUsingKeyFrames dxcn:ValueSetter.Thickness="0"
                                                           Storyboard.TargetName="grid"
                                                           Storyboard.TargetProperty="Margin"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxbt:FloatingBarPopupThemeKey ResourceKey=CaptionBackgroundTemplate}" TargetType="{x:Type ContentControl}">
        <!--BEGIN WPF-->
        <Border Background="#FF7A7999" Cursor="SizeAll">
            <!--END WPF-->
            <!--ONLY SL<Border Background="#FF7A7999">ONLY SL-->
            <ContentPresenter/>
        </Border>
    </ControlTemplate>

    <!--BEGIN WPF-->

    <ControlTemplate x:Key="{dxbt:FloatingBarPopupThemeKey ResourceKey=SizeGripTemplate}" TargetType="{x:Type Thumb}">
        <Border Background="#00000000 "
                HorizontalAlignment="Right"
                VerticalAlignment="Stretch"
                Width="2"/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxbt:FloatingBarPopupThemeKey ResourceKey=ContentTemplate}" TargetType="{x:Type dxb:FloatingBarPopupContentControl}">
        <ContentControl x:Name="PART_Border" Template="{DynamicResource {dxbt:FloatingBarPopupThemeKey ResourceKey=BorderTemplate}}">
            <StackPanel>
                <ContentControl x:Name="PART_Caption" Template="{DynamicResource {dxbt:FloatingBarPopupThemeKey ResourceKey=CaptionBackgroundTemplate}}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <dxb:DragWidget x:Name="PART_DragWidget"
                                        Grid.ColumnSpan="2"
                                        OwnerPoint="0,0"
                                        Style="{DynamicResource {dxbt:FloatingBarPopupThemeKey ResourceKey=DragWidgetStyle}}"/>
                        <Border ClipToBounds="True">
                            <TextBlock Grid.Column="0"
                                       Grid.ColumnSpan="3"
                                       Style="{DynamicResource {dxbt:FloatingBarPopupThemeKey ResourceKey=CaptionStyle}}"
                                       Text="{Binding Path=DataContext.Caption, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Border>
                        <Button x:Name="PART_CloseButton"
                                Background="{x:Null}"
                                BorderBrush="{x:Null}"
                                Foreground="{x:Null}"
                                Grid.Column="1"
                                Style="{DynamicResource {dxbt:FloatingBarPopupThemeKey ResourceKey=CloseButtonStyle}}"
                                VerticalAlignment="Top"/>
                    </Grid>
                </ContentControl>
                <Grid Grid.Row="1">
                    <dxb:FloatingBarContainerControl x:Name="PART_FloatingBarContainer"/>
                    <Thumb x:Name="PART_SizeGrip"
                           HorizontalAlignment="Right"
                           Style="{DynamicResource {dxbt:FloatingBarPopupThemeKey ResourceKey=SizeGripStyle}}"/>
                </Grid>
            </StackPanel>
        </ContentControl>
    </ControlTemplate>

    <!--END WPF-->

    <ControlTemplate x:Key="{dxbt:FloatingBarPopupThemeKey ResourceKey=CloseButtonTemplate}" TargetType="{x:Type Button}">
        <Grid x:Name="close_button" Margin="2">
            <Border x:Name="hover"
                    Background="#FFFFBD69"
                    Padding="1"
                    Visibility="Collapsed">
                <Border Background="#FFFFE7A2" Opacity="1"/>
            </Border>
            <Border x:Name="pressed"
                    Background="#FFFB8C3C"
                    Padding="1"
                    Visibility="Collapsed">
                <Border Background="#FFFB8C3C" Opacity="1"/>
            </Border>
            <Border x:Name="glyph"
                    Background="#00FFFEFE "
                    Cursor="Hand"
                    Height="17"
                    Width="17">
                <Path x:Name="path"
                      Data="F1 M 1222,760L 1224,760L 1220.5,763.5L 1224,767L 1222,767L 1219.5,764.5L 1217,767L 1215,767L 1218.5,763.5L 1215,760L 1217,760L 1219.5,762.5L 1222,760 Z "
                      Fill="#FFFFFFFF "
                      Height="7"
                      Stretch="Fill"
                      Width="9"/>
            </Border>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxcn:ValueSetter.Visibility="Visible"
                                                           Storyboard.TargetName="hover"
                                                           Storyboard.TargetProperty="Visibility"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="path" Storyboard.TargetProperty="Fill">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource CloseButtonGlyphBrushHover}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxcn:ValueSetter.Visibility="Visible"
                                                           Storyboard.TargetName="pressed"
                                                           Storyboard.TargetProperty="Visibility"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="path" Storyboard.TargetProperty="Fill">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource CloseButtonGlyphBrushHover}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="path"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.35"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxbt:FloatingBarPopupThemeKey ResourceKey=QuickCustomizationButtonTemplate}" TargetType="{x:Type Button}">
        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
    </ControlTemplate>

    <Style x:Key="{dxbt:FloatingBarPopupThemeKey ResourceKey=CaptionStyle}" TargetType="{x:Type TextBlock}">
        <Setter Property="IsHitTestVisible" Value="False"/>
        <Setter Property="Foreground" Value="#FFFFFFFF "/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <Setter Property="Margin" Value="3"/>
    </Style>

    <Style x:Key="{dxbt:FloatingBarPopupThemeKey ResourceKey=CloseButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Template" Value="{DynamicResource {dxbt:FloatingBarPopupThemeKey ResourceKey=CloseButtonTemplate}}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="{dxbt:FloatingBarPopupThemeKey ResourceKey=QuickCustomizationButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Template" Value="{DynamicResource {dxbt:FloatingBarPopupThemeKey ResourceKey=QuickCustomizationButtonTemplate}}"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Content" Value="Y"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>

</ResourceDictionary>