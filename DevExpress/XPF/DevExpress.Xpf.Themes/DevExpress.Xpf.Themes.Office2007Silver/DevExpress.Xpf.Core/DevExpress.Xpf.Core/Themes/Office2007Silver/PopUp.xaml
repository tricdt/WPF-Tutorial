<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Visibility x:Key="Visibility.Collapsed">Collapsed</Visibility>

    <Thickness x:Key="ZeroMargin">0,0,0,0</Thickness>

    <CornerRadius x:Key="ZeroCornerRadius">0,0,0,0</CornerRadius>

    <ControlTemplate x:Key="{dxt:PopupBaseThemeKey ResourceKey=BorderTemplate}" TargetType="{x:Type dx:PopupBorderControl}">
        <Grid Name="grid"
              ClipToBounds="False"
              Height="Auto"
              Margin="0,0,3,3"
              Width="Auto">
            <Border x:Name="shadow"
                    Background="#FF000000"
                    CornerRadius="2"
                    Margin="2,2,0,0"
                    Opacity="0.15"/>
            <Border x:Name="border"
                    Background="#FFEEEEF4"
                    BorderBrush="#FF7C7C94"
                    BorderThickness="1,1,1,1"
                    CornerRadius="0,0,0,0"
                    Height="{TemplateBinding ContentHeight}"
                    HorizontalAlignment="Stretch"
                    Margin="0,0,3,3"
                    MaxHeight="{TemplateBinding ContentMaxHeight}"
                    MaxWidth="{TemplateBinding ContentMaxWidth}"
                    MinHeight="{TemplateBinding ContentMinHeight}"
                    MinWidth="{TemplateBinding ContentMinWidth}"
                    VerticalAlignment="Stretch"
                    Width="{TemplateBinding ContentWidth}">
                <ContentPresenter/>
            </Border>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="AppType">
                    <VisualState x:Name="Standalone"/>
                    <VisualState x:Name="BrowserHosted">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="shadow" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="Margin">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource ZeroMargin}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="CornerRadius">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource ZeroCornerRadius}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="grid" Storyboard.TargetProperty="Margin">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource ZeroMargin}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsLeft" Value="False"></Condition>
                    <Condition Property="DropOpposite" Value="True"></Condition>
                </MultiTrigger.Conditions>
                <Setter Property="Margin"
                        TargetName="shadow"
                        Value="2,0,0,2"/>
                <Setter Property="Margin"
                        TargetName="border"
                        Value="0,3,3,0"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsLeft" Value="True"></Condition>
                    <Condition Property="DropOpposite" Value="True"></Condition>
                </MultiTrigger.Conditions>
                <Setter Property="Margin"
                        TargetName="shadow"
                        Value="0,0,2,2"/>
                <Setter Property="Margin"
                        TargetName="border"
                        Value="3,3,0,0"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsLeft" Value="True"></Condition>
                    <Condition Property="DropOpposite" Value="False"></Condition>
                </MultiTrigger.Conditions>
                <Setter Property="Margin"
                        TargetName="shadow"
                        Value="0,2,2,0"/>
                <Setter Property="Margin"
                        TargetName="border"
                        Value="3,0,0,3"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>