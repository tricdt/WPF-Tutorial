<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:mvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxwui="http://schemas.devexpress.com/winfx/2008/xaml/windowsui" xmlns:dxwuit="http://schemas.devexpress.com/winfx/2008/xaml/windowsui/themekeys" xmlns:dxwuii="http://schemas.devexpress.com/winfx/2008/xaml/windowsui/internal" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
  <dxwui:HamburgerMenuStringIdConverter x:Key="HamburgerMenuStringIdConverter" />
  <dxwuii:DoubleToGridLengthConverter x:Key="DoubleToGridLengthConverter" />
  <!--#region SplitView template-->
  <ControlTemplate TargetType="{x:Type dxwuii:SplitView}" x:Key="{dxwuit:HamburgerMenuElementsThemeKey ResourceKey=SplitViewTemplate}">
    <Grid Background="{TemplateBinding Background}" KeyboardNavigation.TabNavigation="Local">
      <Grid.ColumnDefinitions>
        <ColumnDefinition x:Name="LeftColumn" Width="{Binding ActualOpenPaneWidth, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource DoubleToGridLengthConverter}}" />
        <ColumnDefinition x:Name="RightColumn" Width="*" />
      </Grid.ColumnDefinitions>
      <Grid x:Name="PART_ContentRoot" Grid.ColumnSpan="2">
        <Border x:Name="PART_Content" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local" />
        <Rectangle x:Name="LightDismissLayer" Fill="Transparent" Visibility="Collapsed" />
      </Grid>
      <Grid x:Name="PART_PaneRoot" Grid.ColumnSpan="2" HorizontalAlignment="Left" Background="{TemplateBinding PaneBackground}" Width="{Binding TemplateSettings.OpenPaneWidth, RelativeSource={RelativeSource Mode=TemplatedParent}}" dx:WpfSvgPalette.Palette="{TemplateBinding PaneSvgPalette}">
        <Grid.Clip>
          <RectangleGeometry x:Name="PaneClipRectangle">
            <RectangleGeometry.Transform>
              <TranslateTransform x:Name="PaneClipRectangleTransform" />
            </RectangleGeometry.Transform>
          </RectangleGeometry>
        </Grid.Clip>
        <Grid.RenderTransform>
          <TranslateTransform x:Name="PaneTransform" />
        </Grid.RenderTransform>
        <Border x:Name="PART_Pane" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" KeyboardNavigation.TabIndex="0" KeyboardNavigation.TabNavigation="Local" />
      </Grid>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="ActualState" Value="Closed">
        <Setter TargetName="PART_PaneRoot" Property="Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="ActualState" Value="ClosedCompactLeft">
        <Setter TargetName="LeftColumn" Property="Width" Value="{Binding TemplateSettings.CompactPaneGridLength, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter TargetName="PART_ContentRoot" Property="Grid.Column" Value="1" />
        <Setter TargetName="PART_ContentRoot" Property="Grid.ColumnSpan" Value="1" />
      </Trigger>
      <Trigger Property="ActualState" Value="ClosedCompactRight">
        <Setter TargetName="LeftColumn" Property="Width" Value="*" />
        <Setter TargetName="RightColumn" Property="Width" Value="{Binding TemplateSettings.CompactPaneGridLength, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter TargetName="PART_ContentRoot" Property="Grid.ColumnSpan" Value="1" />
        <Setter TargetName="PART_PaneRoot" Property="Grid.ColumnSpan" Value="2" />
        <Setter TargetName="PART_PaneRoot" Property="HorizontalAlignment" Value="Right" />
      </Trigger>
      <Trigger Property="ActualState" Value="OpenOverlayLeft">
        <Setter TargetName="LightDismissLayer" Property="Visibility" Value="Visible" />
      </Trigger>
      <Trigger Property="ActualState" Value="OpenOverlayRight">
        <Setter TargetName="LightDismissLayer" Property="Visibility" Value="Visible" />
        <Setter TargetName="PART_PaneRoot" Property="HorizontalAlignment" Value="Right" />
      </Trigger>
      <Trigger Property="ActualState" Value="OpenCompactOverlayLeft">
        <Setter TargetName="LightDismissLayer" Property="Visibility" Value="Visible" />
        <Setter TargetName="LeftColumn" Property="Width" Value="{Binding TemplateSettings.CompactPaneGridLength, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter TargetName="PART_ContentRoot" Property="Grid.Column" Value="1" />
        <Setter TargetName="PART_ContentRoot" Property="Grid.ColumnSpan" Value="1" />
      </Trigger>
      <Trigger Property="ActualState" Value="OpenCompactOverlayRight">
        <Setter TargetName="LightDismissLayer" Property="Visibility" Value="Visible" />
        <Setter TargetName="LeftColumn" Property="Width" Value="*" />
        <Setter TargetName="RightColumn" Property="Width" Value="{Binding TemplateSettings.CompactPaneGridLength, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter TargetName="PART_ContentRoot" Property="Grid.ColumnSpan" Value="1" />
        <Setter TargetName="PART_PaneRoot" Property="Grid.ColumnSpan" Value="2" />
        <Setter TargetName="PART_PaneRoot" Property="HorizontalAlignment" Value="Right" />
      </Trigger>
      <Trigger Property="ActualState" Value="OpenInlineLeft">
        <Setter TargetName="PART_ContentRoot" Property="Grid.Column" Value="1" />
        <Setter TargetName="PART_ContentRoot" Property="Grid.ColumnSpan" Value="1" />
        <Setter TargetName="PART_PaneRoot" Property="Grid.ColumnSpan" Value="1" />
      </Trigger>
      <Trigger Property="ActualState" Value="OpenInlineRight">
        <Setter TargetName="LeftColumn" Property="Width" Value="*" />
        <Setter TargetName="RightColumn" Property="Width" Value="{Binding TemplateSettings.OpenPaneGridLength, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
        <Setter TargetName="PART_ContentRoot" Property="Grid.ColumnSpan" Value="1" />
        <Setter TargetName="PART_PaneRoot" Property="Grid.Column" Value="1" />
        <Setter TargetName="PART_PaneRoot" Property="Grid.ColumnSpan" Value="1" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <!--#endregion-->
  <!--#region Hamburger templates-->
  <ControlTemplate TargetType="{x:Type dxwui:HamburgerMenu}" x:Key="{dxwuit:HamburgerMenuElementsThemeKey ResourceKey=MenuTemplate}">
    <Grid x:Name="PART_RootGrid" Background="{TemplateBinding Background}">
      <dxwuii:SplitView x:Name="PART_SplitView" TabIndex="1" AnimationSettings="{Binding AnimationSettings, RelativeSource={RelativeSource Mode=TemplatedParent}}" CompactPaneWidth="{TemplateBinding CompactWidth}" OpenPaneWidth="{TemplateBinding OpenPaneWidth}" PaneBackground="{TemplateBinding PaneBackground}">
        <dxwuii:SplitView.Pane>
          <Grid MinWidth="{TemplateBinding OpenPaneMinWidth}" KeyboardNavigation.TabIndex="1">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="{Binding CompactWidth, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={dxwuii:DoubleToGridLengthConverter}}" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border Grid.Column="1" x:Name="PART_MenuHeader" dx:WpfSvgPalette.Palette="{DynamicResource {dxwuit:HamburgerMenuSvgPaletteThemeKeyExtension ResourceKey=SvgPaletteInMenu}}" Height="{TemplateBinding HeaderHeight}" Padding="{TemplateBinding HeaderPadding}">
              <ContentPresenter VerticalAlignment="Center" TextBlock.FontSize="{TemplateBinding HeaderFontSize}" TextBlock.Foreground="{TemplateBinding HeaderForeground}" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" />
            </Border>
            <ScrollViewer Grid.Row="1" Grid.ColumnSpan="2" dx:ScrollBarExtensions.ScrollBarMode="TouchOverlap">
              <dxwuii:HamburgerMenuItemsPanel x:Name="PART_TopItemsPanel" ItemsSource="{Binding TopItems, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneTime}" ShowSpecialElements="{TemplateBinding ShowMenuOnEmptySpaceBarClick}" MediateBorderCommand="{Binding ToggleViewStateCommand, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneTime}" IsCompact="{TemplateBinding IsCompact}" CompactItemWidth="{TemplateBinding CompactWidth}" />
            </ScrollViewer>
            <dxwuii:HamburgerMenuItemsPanel Grid.Row="2" Grid.ColumnSpan="2" x:Name="PART_BottomItemsPanel" ItemsSource="{Binding BottomItems, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneTime}" IsCompact="{TemplateBinding IsCompact}" CompactItemWidth="{TemplateBinding CompactWidth}" />
            <dxwuii:HamburgerMenuBottomBarItemsPanel Grid.Row="3" Grid.ColumnSpan="2" x:Name="PART_BottomBarItemsPanel" Background="{TemplateBinding BottomBarBackground}" ItemsSource="{Binding BottomBarItems, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneTime}" IsCompact="{TemplateBinding IsCompact}" ShowSpecialElements="True" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" CompactItemWidth="{TemplateBinding CompactWidth}" />
          </Grid>
        </dxwuii:SplitView.Pane>
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
          </Grid.RowDefinitions>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="{Binding CompactWidth, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={dxwuii:DoubleToGridLengthConverter}}" />
            <ColumnDefinition />
          </Grid.ColumnDefinitions>
          <Rectangle x:Name="PART_HorizontalHeaderBackground" Visibility="Collapsed" Fill="{TemplateBinding HorizontalHeaderBackground}" Grid.ColumnSpan="2" />
          <Border x:Name="PART_HorizontalHeader" Visibility="Collapsed" Grid.Column="1" Height="{TemplateBinding HeaderHeight}" Padding="{TemplateBinding HeaderPadding}">
            <ContentPresenter VerticalAlignment="Center" TextBlock.FontSize="{TemplateBinding HeaderFontSize}" TextBlock.Foreground="{TemplateBinding HeaderForeground}" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" />
          </Border>
          <ContentPresenter x:Name="PART_HamburgerContent" Grid.Row="1" Grid.ColumnSpan="2" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Grid>
      </dxwuii:SplitView>
      <dxwui:HamburgerMenuToggleStateButton x:Name="PART_ToggleStateButton" TabIndex="0" Width="{TemplateBinding CompactWidth}" Height="{TemplateBinding HeaderHeight}" Command="{Binding ToggleViewStateCommand, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneTime}" VerticalAlignment="Top" HorizontalAlignment="Left" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="ViewState" Value="Closed">
        <Setter TargetName="PART_SplitView" Property="DisplayMode" Value="Overlay" />
        <Setter TargetName="PART_SplitView" Property="IsPaneOpen" Value="False" />
        <Setter TargetName="PART_ToggleStateButton" Property="IsInFlyout" Value="True" />
      </Trigger>
      <Trigger Property="ViewState" Value="Opened">
        <Setter TargetName="PART_SplitView" Property="DisplayMode" Value="Overlay" />
        <Setter TargetName="PART_SplitView" Property="IsPaneOpen" Value="True" />
        <Setter TargetName="PART_HamburgerContent" Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter TargetName="PART_HamburgerContent" Property="KeyboardNavigation.ControlTabNavigation" Value="None" />
        <Setter TargetName="PART_HamburgerContent" Property="KeyboardNavigation.DirectionalNavigation" Value="None" />
        <Setter TargetName="PART_HorizontalHeader" Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter TargetName="PART_HorizontalHeader" Property="KeyboardNavigation.ControlTabNavigation" Value="None" />
        <Setter TargetName="PART_HorizontalHeader" Property="KeyboardNavigation.DirectionalNavigation" Value="None" />
        <Setter TargetName="PART_RootGrid" Property="KeyboardNavigation.TabNavigation" Value="Cycle" />
        <Setter TargetName="PART_RootGrid" Property="KeyboardNavigation.ControlTabNavigation" Value="Cycle" />
        <Setter TargetName="PART_RootGrid" Property="KeyboardNavigation.DirectionalNavigation" Value="Cycle" />
      </Trigger>
      <Trigger Property="ViewState" Value="CompactOverlay">
        <Setter TargetName="PART_SplitView" Property="DisplayMode" Value="CompactOverlay" />
        <Setter TargetName="PART_SplitView" Property="IsPaneOpen" Value="False" />
      </Trigger>
      <Trigger Property="ViewState" Value="Overlay">
        <Setter TargetName="PART_SplitView" Property="DisplayMode" Value="CompactOverlay" />
        <Setter TargetName="PART_SplitView" Property="IsPaneOpen" Value="True" />
        <Setter TargetName="PART_HamburgerContent" Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter TargetName="PART_HamburgerContent" Property="KeyboardNavigation.ControlTabNavigation" Value="None" />
        <Setter TargetName="PART_HamburgerContent" Property="KeyboardNavigation.DirectionalNavigation" Value="None" />
        <Setter TargetName="PART_HorizontalHeader" Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter TargetName="PART_HorizontalHeader" Property="KeyboardNavigation.ControlTabNavigation" Value="None" />
        <Setter TargetName="PART_HorizontalHeader" Property="KeyboardNavigation.DirectionalNavigation" Value="None" />
        <Setter TargetName="PART_RootGrid" Property="KeyboardNavigation.TabNavigation" Value="Cycle" />
        <Setter TargetName="PART_RootGrid" Property="KeyboardNavigation.ControlTabNavigation" Value="Cycle" />
        <Setter TargetName="PART_RootGrid" Property="KeyboardNavigation.DirectionalNavigation" Value="Cycle" />
      </Trigger>
      <Trigger Property="ViewState" Value="CompactInline">
        <Setter TargetName="PART_SplitView" Property="DisplayMode" Value="CompactInline" />
        <Setter TargetName="PART_SplitView" Property="IsPaneOpen" Value="False" />
      </Trigger>
      <Trigger Property="ViewState" Value="Inline">
        <Setter TargetName="PART_SplitView" Property="DisplayMode" Value="CompactInline" />
        <Setter TargetName="PART_SplitView" Property="IsPaneOpen" Value="True" />
      </Trigger>
      <Trigger Property="ActualIsMenuVisible" Value="False">
        <Setter TargetName="PART_ToggleStateButton" Property="Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="ActualIsHorizontalHeaderVisible" Value="True">
        <Setter TargetName="PART_HorizontalHeader" Property="Visibility" Value="Visible" />
        <Setter TargetName="PART_HorizontalHeaderBackground" Property="Visibility" Value="Visible" />
        <Setter TargetName="PART_MenuHeader" Property="Visibility" Value="Hidden" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate TargetType="{x:Type dxwui:HamburgerMenuNavigationButton}" x:Key="{dxwuit:HamburgerMenuElementsThemeKey ResourceKey=NavigationButtonTemplate}">
    <Grid x:Name="root">
      <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" />
      <Border BorderThickness="{TemplateBinding BorderThickness}">
        <DockPanel>
          <Border x:Name="PART_SelectionIndicator" Background="{TemplateBinding SelectionIndicatorBrush}" MinWidth="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=ItemSelectionIndicatorThickness}}" DockPanel.Dock="Left" Visibility="Collapsed" />
          <Grid Margin="{TemplateBinding Padding}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="{Binding Path=(dxwui:HamburgerMenu.TemplateSettings).CompactWidth, RelativeSource={RelativeSource Mode=Self}, Converter={dxwuii:DoubleToGridLengthConverter}}" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Image x:Name="PART_IconContainer" HorizontalAlignment="Center" VerticalAlignment="Center" Source="{TemplateBinding Glyph}" Stretch="{TemplateBinding GlyphStretch}" Width="{TemplateBinding GlyphWidth}" Height="{TemplateBinding GlyphHeight}" dxb:ImageColorizer.IsEnabled="{TemplateBinding AllowGlyphTheming}" dxb:ImageColorizer.Color="{TemplateBinding ActualGlyphColor}" />
            <ContentPresenter x:Name="PART_IconTemplateContainer" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="{TemplateBinding GlyphWidth}" Height="{TemplateBinding GlyphHeight}" Visibility="Collapsed" ContentTemplate="{TemplateBinding GlyphTemplate}" />
            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" RecognizesAccessKey="True" Content="{TemplateBinding Content}" Margin="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=NavigationItemContentPadding}}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <ContentPresenter x:Name="PART_RightContent" Focusable="False" Grid.Column="2" TextBlock.Foreground="{TemplateBinding RightForeground}" Content="{TemplateBinding RightContent}" ContentTemplate="{TemplateBinding RightContentTemplate}" Visibility="Collapsed" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Right" Margin="{TemplateBinding RightContentMargin}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Grid>
        </DockPanel>
      </Border>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsRightContentVisible" Value="True">
        <Setter TargetName="PART_RightContent" Property="Visibility" Value="Visible" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="root" Property="Opacity" Value="0.3" />
      </Trigger>
      <DataTrigger Binding="{Binding GlyphTemplate, RelativeSource={RelativeSource Self}, Converter={mvvm:ObjectToBooleanConverter}}" Value="True">
        <Setter TargetName="PART_IconTemplateContainer" Property="Visibility" Value="Visible" />
        <Setter TargetName="PART_IconContainer" Property="Visibility" Value="Collapsed" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=(dxwui:HamburgerMenu.TemplateSettings).ShowRevealHighlightEffect, RelativeSource={RelativeSource Self}}" Value="True">
        <Setter TargetName="border" Property="dxwui:RevealHighlightOptions.Mode" Value="BackgroundAndBorder" />
      </DataTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsSelected" Value="True" />
          <Condition Property="ShowSelectionIndicator" Value="True" />
        </MultiTrigger.Conditions>
        <Setter TargetName="PART_SelectionIndicator" Property="Visibility" Value="Visible" />
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate TargetType="{x:Type dxwui:HamburgerSubMenuPreviewNavigationButton}" x:Key="{dxwuit:HamburgerMenuElementsThemeKey ResourceKey=SubMenuPreviewNavigationButtonTemplate}">
    <Grid x:Name="root">
      <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" />
      <Border BorderThickness="{TemplateBinding BorderThickness}">
        <DockPanel>
          <Border x:Name="PART_SelectionIndicator" Background="{TemplateBinding SelectionIndicatorBrush}" MinWidth="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=ItemSelectionIndicatorThickness}}" DockPanel.Dock="Left" Visibility="Collapsed" />
          <Grid Margin="{TemplateBinding Padding}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="{Binding Path=(dxwui:HamburgerMenu.TemplateSettings).CompactWidth, RelativeSource={RelativeSource Mode=Self}, Converter={dxwuii:DoubleToGridLengthConverter}}" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" RecognizesAccessKey="True" Content="{TemplateBinding Content}" Margin="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=NavigationItemContentPadding}}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <ContentPresenter x:Name="PART_RightContent" Grid.Column="2" Focusable="False" TextBlock.Foreground="{TemplateBinding RightForeground}" Content="{TemplateBinding RightContent}" ContentTemplate="{TemplateBinding RightContentTemplate}" Visibility="Collapsed" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Right" Margin="{TemplateBinding RightContentMargin}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Grid>
        </DockPanel>
      </Border>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsRightContentVisible" Value="True">
        <Setter TargetName="PART_RightContent" Property="Visibility" Value="Visible" />
      </Trigger>
      <Trigger Property="IsSelected" Value="True">
        <Setter TargetName="contentPresenter" Property="TextBlock.FontWeight" Value="Bold" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="root" Property="Opacity" Value="0.3" />
      </Trigger>
      <DataTrigger Binding="{Binding Path=(dxwui:HamburgerMenu.TemplateSettings).ShowRevealHighlightEffect, RelativeSource={RelativeSource Self}}" Value="True">
        <Setter TargetName="border" Property="dxwui:RevealHighlightOptions.Mode" Value="BackgroundAndBorder" />
      </DataTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsSelected" Value="True" />
          <Condition Property="ShowSelectionIndicator" Value="True" />
        </MultiTrigger.Conditions>
        <Setter TargetName="PART_SelectionIndicator" Property="Visibility" Value="Visible" />
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate TargetType="{x:Type dxwui:HamburgerSubMenu}" x:Key="{dxwuit:HamburgerMenuElementsThemeKey ResourceKey=SubMenuTemplate}">
    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
      <Grid>
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto" />
          <RowDefinition />
          <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <dxwuii:HamburgerSubMenuButton x:Name="PART_Button" Glyph="{TemplateBinding Glyph}" GlyphStretch="{TemplateBinding GlyphStretch}" GlyphTemplate="{TemplateBinding GlyphTemplate}" GlyphHeight="{TemplateBinding GlyphHeight}" GlyphWidth="{TemplateBinding GlyphWidth}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" ContentStringFormat="{TemplateBinding ContentStringFormat}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" IsSelected="{Binding IsOpen, ElementName=PART_SubMenuFlyout}" AllowGlyphTheming="{TemplateBinding AllowGlyphTheming}" GlyphColor="{TemplateBinding GlyphColor}" />
        <dxwuii:HamburgerSubMenuPanel x:Name="PART_PreviewPanel" Grid.Row="1" ItemsSource="{Binding PreviewItems, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneTime}" />
        <dxwuii:HamburgerSubMenuMoreButton x:Name="PART_MoreButton" Grid.Row="2" Grid.Column="1" Visibility="Collapsed" IsSelected="{TemplateBinding IsMoreButtonSelected}" IsOwnerSubMenuOpened="{Binding IsOpen, ElementName=PART_SubMenuFlyout}" />
        <dxwuii:HamburgerSubMenuFlyoutControl x:Name="PART_SubMenuFlyout" VerticalAlignment="Stretch" Padding="0" AlwaysOnTop="True" BorderThickness="0" BorderBrush="Transparent" Background="Transparent">
          <dxwuii:HamburgerSubMenuPane x:Name="PART_FlyoutPane" Header="{TemplateBinding FlyoutHeader}" HeaderTemplate="{TemplateBinding FlyoutHeaderTemplate}" ItemsSource="{Binding Items, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneTime}" HorizontalAlignment="Left" MinWidth="{TemplateBinding ActualFlyoutPaneMinWidth}" Width="{TemplateBinding FlyoutPaneWidth}" BackCommand="{Binding HideFlyoutCommand, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneTime}" HeaderPadding="{TemplateBinding FlyoutHeaderPadding}" HeaderHeight="{TemplateBinding ActualFlyoutHeaderHeight}" HeaderFontSize="{TemplateBinding FlyoutHeaderFontSize}" IsBackButtonVisible="{TemplateBinding IsFlyoutBackButtonVisible}" ScrollViewer.VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" ScrollViewer.HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" ScrollViewer.CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" ScrollViewer.IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" ScrollViewer.PanningDeceleration="{TemplateBinding ScrollViewer.PanningDeceleration}" ScrollViewer.PanningMode="{TemplateBinding ScrollViewer.PanningMode}" ScrollViewer.PanningRatio="{TemplateBinding ScrollViewer.PanningRatio}" />
        </dxwuii:HamburgerSubMenuFlyoutControl>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="border" Property="Opacity" Value="0.3" />
      </Trigger>
      <Trigger Property="IsMoreButtonVisible" Value="True">
        <Setter TargetName="PART_MoreButton" Property="Visibility" Value="Visible" />
      </Trigger>
      <DataTrigger Binding="{Binding Path=(dxwui:HamburgerMenu.TemplateSettings).IsCompact, RelativeSource={RelativeSource Mode=Self}}" Value="True">
        <Setter TargetName="PART_MoreButton" Property="Visibility" Value="Collapsed" />
        <Setter TargetName="PART_PreviewPanel" Property="Visibility" Value="Collapsed" />
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate TargetType="{x:Type dxwuii:HamburgerSubMenuButton}" x:Key="{dxwuit:HamburgerMenuElementsThemeKey ResourceKey=SubMenuButtonTemplate}">
    <Grid x:Name="root">
      <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" />
      <Border Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}">
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="{Binding Path=(dxwui:HamburgerMenu.TemplateSettings).CompactWidth, RelativeSource={RelativeSource Mode=Self}, Converter={dxwuii:DoubleToGridLengthConverter}}" />
            <ColumnDefinition Width="*" />
          </Grid.ColumnDefinitions>
          <Image x:Name="PART_IconContainer" HorizontalAlignment="Center" VerticalAlignment="Center" Source="{TemplateBinding Glyph}" Stretch="{TemplateBinding GlyphStretch}" Width="{TemplateBinding GlyphWidth}" Height="{TemplateBinding GlyphHeight}" dxb:ImageColorizer.IsEnabled="{TemplateBinding AllowGlyphTheming}" dxb:ImageColorizer.Color="{TemplateBinding ActualGlyphColor}" />
          <ContentPresenter x:Name="PART_IconTemplateContainer" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="{TemplateBinding GlyphWidth}" Height="{TemplateBinding GlyphHeight}" Visibility="Collapsed" ContentTemplate="{TemplateBinding GlyphTemplate}" />
          <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" RecognizesAccessKey="True" Content="{TemplateBinding Content}" Margin="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=NavigationItemContentPadding}}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Grid>
      </Border>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="root" Property="Opacity" Value="0.3" />
      </Trigger>
      <DataTrigger Binding="{Binding GlyphTemplate, RelativeSource={RelativeSource Self}, Converter={mvvm:ObjectToBooleanConverter}}" Value="True">
        <Setter TargetName="PART_IconTemplateContainer" Property="Visibility" Value="Visible" />
        <Setter TargetName="PART_IconContainer" Property="Visibility" Value="Collapsed" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=(dxwui:HamburgerMenu.TemplateSettings).ShowRevealHighlightEffect, RelativeSource={RelativeSource Self}}" Value="True">
        <Setter TargetName="border" Property="dxwui:RevealHighlightOptions.Mode" Value="BackgroundAndBorder" />
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate TargetType="{x:Type dxwuii:HamburgerSubMenuPane}" x:Key="{dxwuit:HamburgerMenuElementsThemeKey ResourceKey=SubMenuPaneTemplate}">
    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
      <Grid>
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto" />
          <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <dxwuii:HamburgerSubMenuPaneBackButton x:Name="PART_BackButton" KeyboardNavigation.DirectionalNavigation="Local" Command="{TemplateBinding BackCommand}" />
        <Border Grid.Column="1" x:Name="PART_PaneHeader" Height="{TemplateBinding HeaderHeight}" Padding="{TemplateBinding HeaderPadding}">
          <ContentPresenter VerticalAlignment="Center" TextBlock.FontSize="{TemplateBinding HeaderFontSize}" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" />
        </Border>
        <ScrollViewer dx:ScrollBarExtensions.ScrollBarMode="TouchOverlap" Grid.Row="1" Grid.ColumnSpan="2">
          <dxwuii:HamburgerSubMenuPanel x:Name="PART_Panel" KeyboardNavigation.TabNavigation="Once" KeyboardNavigation.ControlTabNavigation="Once" KeyboardNavigation.DirectionalNavigation="Cycle" ItemsSource="{TemplateBinding ItemsSource}" VerticalAlignment="Top" HorizontalAlignment="Stretch" />
        </ScrollViewer>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="IsBackButtonVisible" Value="False">
        <Setter TargetName="PART_BackButton" Property="Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="IsBackButtonVisible" Value="True">
        <Setter TargetName="PART_PaneHeader" Property="Padding" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=HeaderWithIconPadding}}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate TargetType="{x:Type dxwuii:HamburgerSubMenuMoreButton}" x:Key="{dxwuit:HamburgerMenuElementsThemeKey ResourceKey=SubMenuMoreButtonTemplate}">
    <Grid x:Name="root">
      <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" />
      <Border Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}">
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="{Binding Path=(dxwui:HamburgerMenu.TemplateSettings).CompactWidth, RelativeSource={RelativeSource Mode=Self}, Converter={dxwuii:DoubleToGridLengthConverter}}" />
            <ColumnDefinition Width="*" />
          </Grid.ColumnDefinitions>
          <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" RecognizesAccessKey="True" Content="{TemplateBinding Content}" Margin="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=NavigationItemContentPadding}}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Grid>
      </Border>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="root" Property="Opacity" Value="0.3" />
      </Trigger>
      <DataTrigger Binding="{Binding Path=(dxwui:HamburgerMenu.TemplateSettings).ShowRevealHighlightEffect, RelativeSource={RelativeSource Self}}" Value="True">
        <Setter TargetName="border" Property="dxwui:RevealHighlightOptions.Mode" Value="BackgroundAndBorder" />
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate TargetType="{x:Type dxwui:HamburgerSubMenuNavigationButton}" x:Key="{dxwuit:HamburgerMenuElementsThemeKey ResourceKey=SubMenuNavigationButtonTemplate}">
    <Grid x:Name="root">
      <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" />
      <Border BorderThickness="{TemplateBinding BorderThickness}">
        <DockPanel>
          <Border x:Name="PART_SelectionIndicator" Background="{TemplateBinding SelectionIndicatorBrush}" MinWidth="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=FlyoutItemSelectionIndicatorThickness}}" DockPanel.Dock="Left" Visibility="Collapsed" />
          <Grid Margin="{TemplateBinding Padding}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" RecognizesAccessKey="True" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <ContentPresenter x:Name="PART_Mark" Grid.Column="2" Focusable="False" HorizontalAlignment="Left" Margin="4,0" Visibility="Collapsed" ContentTemplate="{TemplateBinding PreviewMarkTemplate}" ContentStringFormat="{TemplateBinding ContentStringFormat}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            <ContentPresenter x:Name="PART_RightContent" Focusable="False" Grid.Column="3" TextBlock.Foreground="{TemplateBinding RightForeground}" Content="{TemplateBinding RightContent}" ContentTemplate="{TemplateBinding RightContentTemplate}" Visibility="Collapsed" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Right" Margin="{TemplateBinding RightContentMargin}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Grid>
        </DockPanel>
      </Border>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsRightContentVisible" Value="True">
        <Setter TargetName="PART_RightContent" Property="Visibility" Value="Visible" />
      </Trigger>
      <Trigger Property="IsSelected" Value="True">
        <Setter TargetName="contentPresenter" Property="TextBlock.FontWeight" Value="Bold" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="root" Property="Opacity" Value="0.3" />
      </Trigger>
      <Trigger Property="IsPreviewMarkVisible" Value="True">
        <Setter TargetName="PART_Mark" Property="Visibility" Value="Visible" />
      </Trigger>
      <DataTrigger Binding="{Binding Path=(dxwui:HamburgerMenu.TemplateSettings).ShowRevealHighlightEffect, RelativeSource={RelativeSource Self}}" Value="True">
        <Setter TargetName="border" Property="dxwui:RevealHighlightOptions.Mode" Value="BackgroundAndBorder" />
      </DataTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsSelected" Value="True" />
          <Condition Property="ShowSelectionIndicator" Value="True" />
        </MultiTrigger.Conditions>
        <Setter TargetName="PART_SelectionIndicator" Property="Visibility" Value="Visible" />
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate TargetType="{x:Type dxwui:HamburgerMenuHyperlinkButton}" x:Key="{dxwuit:HamburgerMenuElementsThemeKey ResourceKey=HyperLinkButtonTemplate}">
    <Grid x:Name="root">
      <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" />
      <Border Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}">
        <Grid>
          <ContentPresenter x:Name="contentPresenter" Focusable="False" RecognizesAccessKey="True" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Grid>
      </Border>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="root" Property="Opacity" Value="0.3" />
      </Trigger>
      <DataTrigger Binding="{Binding Path=(dxwui:HamburgerMenu.TemplateSettings).ShowRevealHighlightEffect, RelativeSource={RelativeSource Self}}" Value="True">
        <Setter TargetName="border" Property="dxwui:RevealHighlightOptions.Mode" Value="BackgroundAndBorder" />
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate TargetType="{x:Type dxwui:HamburgerMenuBottomBarNavigationButton}" x:Key="{dxwuit:HamburgerMenuElementsThemeKey ResourceKey=BottomBarNavigationButtonTemplate}">
    <Grid x:Name="root">
      <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Width="{Binding Path=(dxwui:HamburgerMenu.TemplateSettings).CompactWidth, RelativeSource={RelativeSource Mode=Self}}" />
      <Border Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}">
        <Grid>
          <ContentPresenter x:Name="contentPresenter" Visibility="Collapsed" />
          <Image x:Name="PART_IconContainer" HorizontalAlignment="Center" VerticalAlignment="Center" Source="{TemplateBinding Glyph}" Stretch="{TemplateBinding GlyphStretch}" Width="{TemplateBinding GlyphWidth}" Height="{TemplateBinding GlyphHeight}" dxb:ImageColorizer.IsEnabled="{TemplateBinding AllowGlyphTheming}" dxb:ImageColorizer.Color="{TemplateBinding ActualGlyphColor}" />
          <ContentPresenter x:Name="PART_IconTemplateContainer" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="{TemplateBinding GlyphWidth}" Height="{TemplateBinding GlyphHeight}" Visibility="Collapsed" ContentTemplate="{TemplateBinding GlyphTemplate}" />
        </Grid>
      </Border>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="root" Property="Opacity" Value="0.3" />
      </Trigger>
      <DataTrigger Binding="{Binding GlyphTemplate, RelativeSource={RelativeSource Self}, Converter={mvvm:ObjectToBooleanConverter}}" Value="True">
        <Setter TargetName="PART_IconTemplateContainer" Property="Visibility" Value="Visible" />
        <Setter TargetName="PART_IconContainer" Property="Visibility" Value="Collapsed" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=(dxwui:HamburgerMenu.TemplateSettings).ShowRevealHighlightEffect, RelativeSource={RelativeSource Self}}" Value="True">
        <Setter TargetName="border" Property="dxwui:RevealHighlightOptions.Mode" Value="BackgroundAndBorder" />
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate TargetType="{x:Type dxwui:HamburgerMenuBottomBarRadioButton}" x:Key="{dxwuit:HamburgerMenuElementsThemeKey ResourceKey=BottomBarRadioButtonTemplate}">
    <Grid x:Name="root">
      <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Width="{Binding Path=(dxwui:HamburgerMenu.TemplateSettings).CompactWidth, RelativeSource={RelativeSource Mode=Self}}" />
      <Border Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}">
        <Grid>
          <ContentPresenter x:Name="contentPresenter" Visibility="Collapsed" />
          <Image x:Name="PART_IconContainer" HorizontalAlignment="Center" VerticalAlignment="Center" Source="{TemplateBinding Glyph}" Stretch="{TemplateBinding GlyphStretch}" Width="{TemplateBinding GlyphWidth}" Height="{TemplateBinding GlyphHeight}" dxb:ImageColorizer.IsEnabled="{TemplateBinding AllowGlyphTheming}" dxb:ImageColorizer.Color="{TemplateBinding ActualGlyphColor}" />
          <ContentPresenter x:Name="PART_IconTemplateContainer" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="{TemplateBinding GlyphWidth}" Height="{TemplateBinding GlyphHeight}" Visibility="Collapsed" ContentTemplate="{TemplateBinding GlyphTemplate}" />
        </Grid>
      </Border>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="root" Property="Opacity" Value="0.3" />
      </Trigger>
      <DataTrigger Binding="{Binding GlyphTemplate, RelativeSource={RelativeSource Self}, Converter={mvvm:ObjectToBooleanConverter}}" Value="True">
        <Setter TargetName="PART_IconTemplateContainer" Property="Visibility" Value="Visible" />
        <Setter TargetName="PART_IconContainer" Property="Visibility" Value="Collapsed" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=(dxwui:HamburgerMenu.TemplateSettings).ShowRevealHighlightEffect, RelativeSource={RelativeSource Self}}" Value="True">
        <Setter TargetName="border" Property="dxwui:RevealHighlightOptions.Mode" Value="BackgroundAndBorder" />
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate TargetType="{x:Type dxwui:HamburgerMenuBottomBarCheckBox}" x:Key="{dxwuit:HamburgerMenuElementsThemeKey ResourceKey=BottomBarCheckBoxTemplate}">
    <Grid x:Name="root">
      <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Width="{Binding Path=(dxwui:HamburgerMenu.TemplateSettings).CompactWidth, RelativeSource={RelativeSource Mode=Self}}" />
      <Border Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}">
        <Grid>
          <ContentPresenter x:Name="contentPresenter" Visibility="Collapsed" />
          <Image x:Name="PART_IconContainer" HorizontalAlignment="Center" VerticalAlignment="Center" Source="{TemplateBinding Glyph}" Stretch="{TemplateBinding GlyphStretch}" Width="{TemplateBinding GlyphWidth}" Height="{TemplateBinding GlyphHeight}" dxb:ImageColorizer.IsEnabled="{TemplateBinding AllowGlyphTheming}" dxb:ImageColorizer.Color="{TemplateBinding ActualGlyphColor}" />
          <ContentPresenter x:Name="PART_IconTemplateContainer" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="{TemplateBinding GlyphWidth}" Height="{TemplateBinding GlyphHeight}" Visibility="Collapsed" ContentTemplate="{TemplateBinding GlyphTemplate}" />
        </Grid>
      </Border>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="root" Property="Opacity" Value="0.3" />
      </Trigger>
      <DataTrigger Binding="{Binding GlyphTemplate, RelativeSource={RelativeSource Self}, Converter={mvvm:ObjectToBooleanConverter}}" Value="True">
        <Setter TargetName="PART_IconTemplateContainer" Property="Visibility" Value="Visible" />
        <Setter TargetName="PART_IconContainer" Property="Visibility" Value="Collapsed" />
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate TargetType="{x:Type dxwuii:HamburgerMenuEmptySpaceBar}" x:Key="{dxwuit:HamburgerMenuElementsThemeKey ResourceKey=EmptySpaceBarTemplate}">
    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
      <ContentPresenter x:Name="contentPresenter" Visibility="Collapsed" />
    </Border>
    <ControlTemplate.Triggers>
      <DataTrigger Binding="{Binding Path=(dxwui:HamburgerMenu.TemplateSettings).ShowRevealHighlightEffect, RelativeSource={RelativeSource Self}}" Value="True">
        <Setter TargetName="border" Property="dxwui:RevealHighlightOptions.Mode" Value="BackgroundAndBorder" />
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate TargetType="{x:Type dxwuii:HamburgerMenuBottomBarSeparator}" x:Key="{dxwuit:HamburgerMenuElementsThemeKey ResourceKey=BottomBarSeparatorTemplate}">
    <Rectangle Fill="{TemplateBinding Background}" SnapsToDevicePixels="True" HorizontalAlignment="Stretch" Height="1" />
  </ControlTemplate>
  <ControlTemplate TargetType="{x:Type dxwui:HamburgerMenuItemSeparator}" x:Key="{dxwuit:HamburgerMenuElementsThemeKey ResourceKey=ItemSeparatorTemplate}">
    <Border Name="border" Padding="{TemplateBinding Padding}">
      <Rectangle Fill="{TemplateBinding Background}" SnapsToDevicePixels="True" HorizontalAlignment="Stretch" Height="1" />
    </Border>
    <ControlTemplate.Triggers>
      <DataTrigger Binding="{Binding Path=(dxwui:HamburgerMenu.TemplateSettings).IsCompact, RelativeSource={RelativeSource Mode=Self}}" Value="True">
        <Setter TargetName="border" Property="Width" Value="{Binding Path=(dxwui:HamburgerMenu.TemplateSettings).CompactWidth, RelativeSource={RelativeSource Mode=Self}}" />
        <Setter TargetName="border" Property="HorizontalAlignment" Value="Left" />
      </DataTrigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="border" Property="Opacity" Value="0.3" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <!--#endregion-->
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.WindowsUI.HamburgerMenuToggleStateButton}" TargetType="{x:Type dxwui:HamburgerMenuToggleStateButton}">
    <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ToggleStateButtonInlineBackgroundBrush}}" />
    <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ToggleStateButtonInlineForegroundBrush}}" />
    <Setter Property="Padding" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=ToggleStateButtonPadding}}" />
    <Setter Property="Template" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=MenuToggleStateButtonTemplate}}" />
    <Setter Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxwuit:HamburgerMenuSvgPaletteThemeKeyExtension ResourceKey=SvgPaletteInMenu}}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Style.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
          <Condition Property="IsInFlyout" Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ToggleStateButtonInlineHoverBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ToggleStateButtonInlineHoverForegroundBrush}}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsPressed" Value="True" />
          <Condition Property="IsInFlyout" Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ToggleStateButtonInlinePressedBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ToggleStateButtonInlinePressedForegroundBrush}}" />
      </MultiTrigger>
      <Trigger Property="IsInFlyout" Value="True">
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ToggleStateButtonFlyoutBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ToggleStateButtonFlyoutForegroundBrush}}" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
          <Condition Property="IsInFlyout" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ToggleStateButtonFlyoutHoverBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ToggleStateButtonFlyoutHoverForegroundBrush}}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsPressed" Value="True" />
          <Condition Property="IsInFlyout" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ToggleStateButtonFlyoutPressedBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ToggleStateButtonFlyoutPressedForegroundBrush}}" />
      </MultiTrigger>
      <DataTrigger Binding="{Binding Path=(dxwui:HamburgerMenu.TemplateSettings).ShowRevealHighlightEffect, RelativeSource={RelativeSource Self}}" Value="True">
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ToggleStateButtonInlineBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ToggleStateButtonInlineForegroundBrush}}" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.WindowsUI.HamburgerMenuNavigationButton}" TargetType="{x:Type dxwui:HamburgerMenuNavigationButton}">
    <Setter Property="MinHeight" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=DefaultItemHeight}}" />
    <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemBackgroundBrush}}" />
    <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemForegroundBrush}}" />
    <Setter Property="RightForeground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemRightForegroundBrush}}" />
    <Setter Property="Padding" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=NavigationItemPadding}}" />
    <Setter Property="Template" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=NavigationButtonTemplate}}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="SelectionIndicatorBrush" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemSelectionIndicatorBackgroundBrush}}" />
    <Style.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
          <Condition Property="IsSelected" Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemHoverBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemHoverForegroundBrush}}" />
        <Setter Property="RightForeground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemHoverRightForegroundBrush}}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsPressed" Value="True" />
          <Condition Property="IsSelected" Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemPressedBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemPressedForegroundBrush}}" />
        <Setter Property="RightForeground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemPressedRightForegroundBrush}}" />
      </MultiTrigger>
      <Trigger Property="IsSelected" Value="True">
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemSelectedBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemSelectedForegroundBrush}}" />
        <Setter Property="RightForeground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemSelectedRightForegroundBrush}}" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
          <Condition Property="IsSelected" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemSelectedHoverBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemSelectedHoverForegroundBrush}}" />
        <Setter Property="RightForeground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemSelectedHoverRightForegroundBrush}}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsPressed" Value="True" />
          <Condition Property="IsSelected" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemSelectedPressedBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemSelectedPressedForegroundBrush}}" />
        <Setter Property="RightForeground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemSelectedPressedRightForegroundBrush}}" />
      </MultiTrigger>
      <DataTrigger Binding="{Binding Path=(dxwui:HamburgerMenu.TemplateSettings).ShowRevealHighlightEffect, RelativeSource={RelativeSource Self}}" Value="True">
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemForegroundBrush}}" />
        <Setter Property="RightForeground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemRightForegroundBrush}}" />
      </DataTrigger>
      <Trigger Property="dxwuii:HamburgerMenuExtensions.MenuItemState" Value="Hidden">
        <Setter Property="Visibility" Value="Hidden" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.WindowsUI.HamburgerSubMenuPreviewNavigationButton}" TargetType="{x:Type dxwui:HamburgerSubMenuPreviewNavigationButton}">
    <Setter Property="MinHeight" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=DefaultItemHeight}}" />
    <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemBackgroundBrush}}" />
    <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemForegroundBrush}}" />
    <Setter Property="RightForeground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemRightForegroundBrush}}" />
    <Setter Property="Padding" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=NavigationItemPadding}}" />
    <Setter Property="Template" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=SubMenuPreviewNavigationButtonTemplate}}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="SelectionIndicatorBrush" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemSelectionIndicatorBackgroundBrush}}" />
    <Style.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
          <Condition Property="IsSelected" Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemHoverBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemHoverForegroundBrush}}" />
        <Setter Property="RightForeground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemHoverRightForegroundBrush}}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsPressed" Value="True" />
          <Condition Property="IsSelected" Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemPressedBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemPressedForegroundBrush}}" />
        <Setter Property="RightForeground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemPressedRightForegroundBrush}}" />
      </MultiTrigger>
      <Trigger Property="IsSelected" Value="True">
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemSelectedBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemSelectedForegroundBrush}}" />
        <Setter Property="RightForeground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemSelectedRightForegroundBrush}}" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
          <Condition Property="IsSelected" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemSelectedHoverBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemSelectedHoverForegroundBrush}}" />
        <Setter Property="RightForeground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemSelectedHoverRightForegroundBrush}}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsPressed" Value="True" />
          <Condition Property="IsSelected" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemSelectedPressedBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemSelectedPressedForegroundBrush}}" />
        <Setter Property="RightForeground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemSelectedPressedRightForegroundBrush}}" />
      </MultiTrigger>
      <DataTrigger Binding="{Binding Path=(dxwui:HamburgerMenu.TemplateSettings).ShowRevealHighlightEffect, RelativeSource={RelativeSource Self}}" Value="True">
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemForegroundBrush}}" />
        <Setter Property="RightForeground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemRightForegroundBrush}}" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.WindowsUI.HamburgerSubMenuNavigationButton}" TargetType="{x:Type dxwui:HamburgerSubMenuNavigationButton}">
    <Setter Property="MinHeight" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=DefaultItemHeight}}" />
    <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=FlyoutItemBackgroundBrush}}" />
    <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=FlyoutItemForegroundBrush}}" />
    <Setter Property="RightForeground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=FlyoutItemRightForegroundBrush}}" />
    <Setter Property="Padding" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=SubMenuFlyoutItemPadding}}" />
    <Setter Property="Template" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=SubMenuNavigationButtonTemplate}}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="PreviewMarkTemplate">
      <Setter.Value>
        <DataTemplate>
          <TextBlock Text="" FontFamily="Segoe MDL2 Assets" />
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="SelectionIndicatorBrush" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=FlyoutItemSelectionIndicatorBackgroundBrush}}" />
    <Style.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
          <Condition Property="IsSelected" Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=FlyoutItemHoverBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=FlyoutItemHoverForegroundBrush}}" />
        <Setter Property="RightForeground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=FlyoutItemHoverRightForegroundBrush}}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsPressed" Value="True" />
          <Condition Property="IsSelected" Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=FlyoutItemPressedBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=FlyoutItemPressedForegroundBrush}}" />
        <Setter Property="RightForeground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=FlyoutItemPressedRightForegroundBrush}}" />
      </MultiTrigger>
      <Trigger Property="IsSelected" Value="True">
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=FlyoutItemSelectedBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=FlyoutItemSelectedForegroundBrush}}" />
        <Setter Property="RightForeground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=FlyoutItemSelectedRightForegroundBrush}}" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
          <Condition Property="IsSelected" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=FlyoutItemSelectedHoverBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=FlyoutItemSelectedHoverForegroundBrush}}" />
        <Setter Property="RightForeground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=FlyoutItemSelectedHoverRightForegroundBrush}}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsPressed" Value="True" />
          <Condition Property="IsSelected" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=FlyoutItemSelectedPressedBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=FlyoutItemSelectedPressedForegroundBrush}}" />
        <Setter Property="RightForeground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=FlyoutItemSelectedPressedRightForegroundBrush}}" />
      </MultiTrigger>
      <DataTrigger Binding="{Binding Path=(dxwui:HamburgerMenu.TemplateSettings).ShowRevealHighlightEffect, RelativeSource={RelativeSource Self}}" Value="True">
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=FlyoutItemBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=FlyoutItemForegroundBrush}}" />
        <Setter Property="RightForeground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=FlyoutItemRightForegroundBrush}}" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.WindowsUI.Internal.HamburgerSubMenuButton}" TargetType="{x:Type dxwuii:HamburgerSubMenuButton}">
    <Setter Property="MinHeight" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=DefaultItemHeight}}" />
    <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemBackgroundBrush}}" />
    <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemForegroundBrush}}" />
    <Setter Property="Padding" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=NavigationItemPadding}}" />
    <Setter Property="Template" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=SubMenuButtonTemplate}}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Style.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
          <Condition Property="IsSelected" Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemHoverBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemHoverForegroundBrush}}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsPressed" Value="True" />
          <Condition Property="IsSelected" Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemPressedBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemPressedForegroundBrush}}" />
      </MultiTrigger>
      <Trigger Property="IsSelected" Value="True">
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemSelectedBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemSelectedForegroundBrush}}" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
          <Condition Property="IsSelected" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemSelectedHoverBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemSelectedHoverForegroundBrush}}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsPressed" Value="True" />
          <Condition Property="IsSelected" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemSelectedPressedBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemSelectedPressedForegroundBrush}}" />
      </MultiTrigger>
      <DataTrigger Binding="{Binding Path=(dxwui:HamburgerMenu.TemplateSettings).ShowRevealHighlightEffect, RelativeSource={RelativeSource Self}}" Value="True">
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemForegroundBrush}}" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.WindowsUI.Internal.HamburgerSubMenuMoreButton}" TargetType="{x:Type dxwuii:HamburgerSubMenuMoreButton}">
    <Setter Property="MinHeight" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=DefaultItemHeight}}" />
    <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemBackgroundBrush}}" />
    <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemForegroundBrush}}" />
    <Setter Property="Padding" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=NavigationItemPadding}}" />
    <Setter Property="Content" Value="{Binding ConverterParameter=SubMenuMoreButtonText, Converter={StaticResource HamburgerMenuStringIdConverter}, RelativeSource={RelativeSource Self}}" />
    <Setter Property="Template" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=SubMenuMoreButtonTemplate}}" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Style.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
          <Condition Property="IsSelected" Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemHoverBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemHoverForegroundBrush}}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsPressed" Value="True" />
          <Condition Property="IsSelected" Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemPressedBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemPressedForegroundBrush}}" />
      </MultiTrigger>
      <Trigger Property="IsSelected" Value="True">
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemSelectedBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemSelectedForegroundBrush}}" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
          <Condition Property="IsSelected" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemSelectedHoverBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemSelectedHoverForegroundBrush}}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsPressed" Value="True" />
          <Condition Property="IsSelected" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemSelectedPressedBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemSelectedPressedForegroundBrush}}" />
      </MultiTrigger>
      <DataTrigger Binding="{Binding Path=(dxwui:HamburgerMenu.TemplateSettings).ShowRevealHighlightEffect, RelativeSource={RelativeSource Self}}" Value="True">
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemForegroundBrush}}" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.WindowsUI.Internal.HamburgerSubMenuPane}" TargetType="{x:Type dxwuii:HamburgerSubMenuPane}">
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="KeyboardNavigation.TabNavigation" Value="Cycle" />
    <Setter Property="KeyboardNavigation.ControlTabNavigation" Value="Cycle" />
    <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Cycle" />
    <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=SubMenuPaneBackgroundBrush}}" />
    <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=SubMenuPaneForegroundBrush}}" />
    <Setter Property="Template" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=SubMenuPaneTemplate}}" />
    <Setter Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxwuit:HamburgerMenuSvgPaletteThemeKeyExtension ResourceKey=SvgPaletteInSubMenu}}" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.WindowsUI.HamburgerMenuHyperlinkButton}" TargetType="{x:Type dxwui:HamburgerMenuHyperlinkButton}">
    <Setter Property="Background" Value="{x:Null}" />
    <Setter Property="MinHeight" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=DefaultItemHeight}}" />
    <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=HyperlinkForegroundBrush}}" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="Padding" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=HyperlinkItemPadding}}" />
    <Setter Property="Template" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=HyperLinkButtonTemplate}}" />
    <Setter Property="ContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <TextBlock Text="{Binding}" TextDecorations="Underline" />
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=HyperlinkHoverForegroundBrush}}" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=HyperlinkPressedForegroundBrush}}" />
      </Trigger>
      <Trigger Property="dxwuii:HamburgerMenuExtensions.MenuItemState" Value="Hidden">
        <Setter Property="Visibility" Value="Hidden" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.WindowsUI.Internal.HamburgerMenuEmptySpaceBar}" TargetType="{x:Type dxwuii:HamburgerMenuEmptySpaceBar}">
    <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemBackgroundBrush}}" />
    <Setter Property="Template" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=EmptySpaceBarTemplate}}" />
    <Setter Property="AutomationProperties.AutomationId" Value="Expand" />
    <Setter Property="AutomationProperties.Name" Value="Expand" />
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemHoverBackgroundBrush}}" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemPressedBackgroundBrush}}" />
      </Trigger>
      <Trigger Property="dxwuii:HamburgerMenuExtensions.MenuItemState" Value="Hidden">
        <Setter Property="Visibility" Value="Hidden" />
      </Trigger>
      <DataTrigger Binding="{Binding Path=(dxwui:HamburgerMenu.TemplateSettings).ShowRevealHighlightEffect, RelativeSource={RelativeSource Self}}" Value="True">
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemBackgroundBrush}}" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.WindowsUI.Internal.HamburgerSubMenuPaneBackButton}" TargetType="{x:Type dxwuii:HamburgerSubMenuPaneBackButton}">
    <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=FlyoutBackButtonBackgroundBrush}}" />
    <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=FlyoutBackButtonForegroundBrush}}" />
    <Setter Property="Content" Value="" />
    <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
    <Setter Property="Padding" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=FlyoutBackButtonPadding}}" />
    <Setter Property="Template" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=SubMenuPaneBackButtonTemplate}}" />
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=FlyoutBackButtonHoverBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=FlyoutBackButtonHoverForegroundBrush}}" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=FlyoutBackButtonPressedBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=FlyoutBackButtonPressedForegroundBrush}}" />
      </Trigger>
      <DataTrigger Binding="{Binding Path=(dxwui:HamburgerMenu.TemplateSettings).ShowRevealHighlightEffect, RelativeSource={RelativeSource Self}}" Value="True">
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=FlyoutBackButtonBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=FlyoutBackButtonForegroundBrush}}" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.WindowsUI.HamburgerMenuBottomBarNavigationButton}" TargetType="{x:Type dxwui:HamburgerMenuBottomBarNavigationButton}">
    <Setter Property="MinHeight" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=DefaultItemHeight}}" />
    <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemBackgroundBrush}}" />
    <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemForegroundBrush}}" />
    <Setter Property="Padding" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=BottomBarItemPadding}}" />
    <Setter Property="Template" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=BottomBarNavigationButtonTemplate}}" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemHoverBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemHoverForegroundBrush}}" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemPressedBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemPressedForegroundBrush}}" />
      </Trigger>
      <Trigger Property="dxwuii:HamburgerMenuExtensions.MenuItemState" Value="Hidden">
        <Setter Property="Visibility" Value="Hidden" />
      </Trigger>
      <DataTrigger Binding="{Binding Path=(dxwui:HamburgerMenu.TemplateSettings).ShowRevealHighlightEffect, RelativeSource={RelativeSource Self}}" Value="True">
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemForegroundBrush}}" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="HamburgerMenuBottomBarToggleButtonStyleBase" TargetType="{x:Type ToggleButton}">
    <Setter Property="MinHeight" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=DefaultItemHeight}}" />
    <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemBackgroundBrush}}" />
    <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemForegroundBrush}}" />
    <Setter Property="Padding" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=BottomBarItemPadding}}" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Style.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
          <Condition Property="IsChecked" Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemHoverBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemHoverForegroundBrush}}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsPressed" Value="True" />
          <Condition Property="IsChecked" Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemPressedBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemPressedForegroundBrush}}" />
      </MultiTrigger>
      <Trigger Property="IsChecked" Value="True">
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemSelectedBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemSelectedForegroundBrush}}" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
          <Condition Property="IsChecked" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemSelectedHoverBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemSelectedHoverForegroundBrush}}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsPressed" Value="True" />
          <Condition Property="IsChecked" Value="True" />
        </MultiTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemSelectedPressedBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemSelectedPressedForegroundBrush}}" />
      </MultiTrigger>
      <Trigger Property="IsChecked" Value="{x:Null}">
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemIndeterminateBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemIndeterminateForegroundBrush}}" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
          <Condition Property="IsChecked" Value="{x:Null}" />
        </MultiTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemIndeterminateHoverBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemIndeterminateHoverForegroundBrush}}" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsPressed" Value="True" />
          <Condition Property="IsChecked" Value="{x:Null}" />
        </MultiTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemIndeterminatePressedBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemIndeterminatePressedForegroundBrush}}" />
      </MultiTrigger>
      <Trigger Property="dxwuii:HamburgerMenuExtensions.MenuItemState" Value="Hidden">
        <Setter Property="Visibility" Value="Hidden" />
      </Trigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Path=(dxwui:HamburgerMenu.TemplateSettings).ShowRevealHighlightEffect, RelativeSource={RelativeSource Self}}" Value="True" />
          <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="False" />
        </MultiDataTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemForegroundBrush}}" />
      </MultiDataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Path=(dxwui:HamburgerMenu.TemplateSettings).ShowRevealHighlightEffect, RelativeSource={RelativeSource Self}}" Value="True" />
          <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="True" />
        </MultiDataTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemSelectedBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemSelectedForegroundBrush}}" />
      </MultiDataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Path=(dxwui:HamburgerMenu.TemplateSettings).ShowRevealHighlightEffect, RelativeSource={RelativeSource Self}}" Value="True" />
          <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="{x:Null}" />
        </MultiDataTrigger.Conditions>
        <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemIndeterminateBackgroundBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemIndeterminateForegroundBrush}}" />
      </MultiDataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.WindowsUI.HamburgerMenuBottomBarRadioButton}" TargetType="{x:Type dxwui:HamburgerMenuBottomBarRadioButton}" BasedOn="{StaticResource HamburgerMenuBottomBarToggleButtonStyleBase}">
    <Setter Property="Template" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=BottomBarRadioButtonTemplate}}" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.WindowsUI.HamburgerMenuBottomBarCheckBox}" TargetType="{x:Type dxwui:HamburgerMenuBottomBarCheckBox}" BasedOn="{StaticResource HamburgerMenuBottomBarToggleButtonStyleBase}">
    <Setter Property="Template" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=BottomBarCheckBoxTemplate}}" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.WindowsUI.HamburgerSubMenu}" TargetType="{x:Type dxwui:HamburgerSubMenu}">
    <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemBackgroundBrush}}" />
    <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemForegroundBrush}}" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
    <Setter Property="FlyoutHeaderPadding" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=HeaderPadding}}" />
    <Setter Property="FlyoutHeaderFontSize" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=HeaderFontSize}}" />
    <Setter Property="Template" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=SubMenuTemplate}}" />
    <Style.Triggers>
      <Trigger Property="dxwuii:HamburgerMenuExtensions.MenuItemState" Value="Hidden">
        <Setter Property="Visibility" Value="Hidden" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <DataTemplate x:Key="SubMenuThemeSelectorButton">
    <dxwui:HamburgerSubMenuNavigationButton Content="{Binding Theme.FullName}" IsSelected="{Binding IsSelected}" ShowInPreview="{Binding ShowInPreview}" RightContent="{Binding Theme.SvgGlyph}">
      <dxwui:HamburgerSubMenuNavigationButton.RightContentTemplate>
        <DataTemplate>
          <dx:DXImage Stretch="Uniform" Source="{Binding Converter={dx:SvgUriToImageSourceConverter SvgWidth=20, SvgHeight=20}}" Width="20" Height="20" />
        </DataTemplate>
      </dxwui:HamburgerSubMenuNavigationButton.RightContentTemplate>
    </dxwui:HamburgerSubMenuNavigationButton>
  </DataTemplate>
  <Style x:Key="{dxwuit:HamburgerMenuElementsThemeKey ResourceKey=SubMenuThemeSelectorStyle}" TargetType="{x:Type dxwui:HamburgerSubMenu}">
    <Setter Property="ItemTemplate" Value="{StaticResource SubMenuThemeSelectorButton}" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.WindowsUI.Internal.HamburgerMenuBottomBarSeparator}" TargetType="{x:Type dxwuii:HamburgerMenuBottomBarSeparator}">
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Template" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=BottomBarSeparatorTemplate}}" />
    <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=BottomBarSeparatorBrush}}" />
    <Style.Triggers>
      <Trigger Property="dxwuii:HamburgerMenuExtensions.MenuItemState" Value="Hidden">
        <Setter Property="Visibility" Value="Hidden" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.WindowsUI.HamburgerMenuItemSeparator}" TargetType="{x:Type dxwui:HamburgerMenuItemSeparator}">
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Padding" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=ItemSeparatorPadding}}" />
    <Setter Property="Template" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=ItemSeparatorTemplate}}" />
    <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=ItemSeparatorBrush}}" />
    <Style.Triggers>
      <Trigger Property="dxwuii:HamburgerMenuExtensions.MenuItemState" Value="Hidden">
        <Setter Property="Visibility" Value="Hidden" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.WindowsUI.Internal.SplitView}" TargetType="{x:Type dxwuii:SplitView}">
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="OpenPaneWidth" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=SplitViewOpenPaneWidth}}" />
    <Setter Property="CompactPaneWidth" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=SplitViewCompactPaneWidth}}" />
    <Setter Property="Template" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=SplitViewTemplate}}" />
    <Setter Property="PaneSvgPalette" Value="{DynamicResource {dxwuit:HamburgerMenuSvgPaletteThemeKeyExtension ResourceKey=SvgPaletteInMenu}}" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.WindowsUI.HamburgerMenu}" TargetType="{x:Type dxwui:HamburgerMenu}">
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
    <Setter Property="CompactWidth" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=DefaultCompactWidth}}" />
    <Setter Property="HeaderHeight" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=DefaultHeaderHeight}}" />
    <Setter Property="HeaderPadding" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=HeaderWithIconPadding}}" />
    <Setter Property="HeaderFontSize" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=HeaderFontSize}}" />
    <Setter Property="PaneBackground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=PaneBackgroundBrush}}" />
    <Setter Property="BottomBarBackground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=BottomBarBackgroundBrush}}" />
    <Setter Property="HeaderForeground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=HeaderForegroundBrush}}" />
    <Setter Property="HorizontalHeaderBackground" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=HorizontalHeaderBackgroundBrush}}" />
    <Setter Property="Background" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuBrushesThemeKey ResourceKey=BackgroundBrush}}" />
    <Setter Property="Template" Value="{DynamicResource ResourceKey={dxwuit:HamburgerMenuElementsThemeKey ResourceKey=MenuTemplate}}" />
  </Style>
</ResourceDictionary>