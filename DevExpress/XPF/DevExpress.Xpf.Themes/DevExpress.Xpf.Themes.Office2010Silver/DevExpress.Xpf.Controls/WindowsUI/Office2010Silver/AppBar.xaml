<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:collections="clr-namespace:System.Collections;assembly=mscorlib" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxi="clr-namespace:DevExpress.Mvvm.UI.Interactivity;assembly=DevExpress.Xpf.Core.v24.1" xmlns:dxwui="http://schemas.devexpress.com/winfx/2008/xaml/windowsui" xmlns:dxwuii="http://schemas.devexpress.com/winfx/2008/xaml/windowsui/internal" xmlns:dxwuit="http://schemas.devexpress.com/winfx/2008/xaml/windowsui/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:system="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <dx:BoolToVisibilityConverter x:Key="boolToVisibilityConverter" />
  <dx:BoolToVisibilityInverseConverter x:Key="boolToVisibilityInverseConverter" />
  <!-- Colors -->
  <SolidColorBrush x:Key="{dxwuit:AppBarElementsThemeKey ResourceKey=Background}" Color="#FFA5ACB5" />
  <SolidColorBrush x:Key="{dxwuit:AppBarElementsThemeKey ResourceKey=AppBarButtonForeground}" Color="#FFE3E3E3" />
  <Color x:Key="{dxwuit:AppBarElementsThemeKey ResourceKey=AppBarButtonForegroundColor}">#FFE3E3E3</Color>
  <system:Double x:Key="{dxwuit:AppBarElementsThemeKey ResourceKey=AppBarButtonDefaultWidth}">100</system:Double>
  <Color x:Key="contentColor">#FFE3E3E3</Color>
  <Color x:Key="contentColorHover">#FFE3E3E3</Color>
  <Color x:Key="contentColorPressed">#FFA5ACB5</Color>
  <Color x:Key="contentColorChecked">#FFA5ACB5</Color>
  <Color x:Key="contentColorHoverChecked">#FFA5ACB5</Color>
  <Color x:Key="contentColorPressedChecked">#FFE3E3E3</Color>
  <SolidColorBrush x:Key="contentBrush" Color="{StaticResource contentColor}" />
  <SolidColorBrush x:Key="borderBrush" Color="#FFE3E3E3" />
  <SolidColorBrush x:Key="backBrush" Color="#00E3E3E3" />
  <SolidColorBrush x:Key="contentBrushHover" Color="{StaticResource contentColorHover}" />
  <SolidColorBrush x:Key="borderBrushHover" Color="#FFE3E3E3" />
  <SolidColorBrush x:Key="backBrushHover" Color="#3FE3E3E3" />
  <SolidColorBrush x:Key="contentBrushPressed" Color="{StaticResource contentColorPressed}" />
  <SolidColorBrush x:Key="borderBrushPressed" Color="#FFE3E3E3" />
  <SolidColorBrush x:Key="backBrushPressed" Color="#FFE3E3E3" />
  <SolidColorBrush x:Key="contentBrushChecked" Color="{StaticResource contentColorChecked}" />
  <SolidColorBrush x:Key="borderBrushChecked" Color="#FFE3E3E3" />
  <SolidColorBrush x:Key="backBrushChecked" Color="#FFE3E3E3" />
  <SolidColorBrush x:Key="contentBrushHoverChecked" Color="{StaticResource contentColorHoverChecked}" />
  <SolidColorBrush x:Key="borderBrushHoverChecked" Color="#FFE3E3E3" />
  <SolidColorBrush x:Key="backBrushHoverChecked" Color="#FFE3E3E3" />
  <SolidColorBrush x:Key="contentBrushPressedChecked" Color="{StaticResource contentColorPressedChecked}" />
  <SolidColorBrush x:Key="borderBrushPressedChecked" Color="#FFE3E3E3" />
  <SolidColorBrush x:Key="backBrushPressedChecked" Color="#00E3E3E3" />
  <Thickness x:Key="AppBarTileButtonPressedMargin">2</Thickness>
  <SolidColorBrush x:Key="{dxwuit:AppBarElementsThemeKey ResourceKey=AppBarTileButtonBackground}" Color="#FFE3E3E3" />
  <SolidColorBrush x:Key="AppBarTileButtonForeground" Color="#FFA5ACB5" />
  <Color x:Key="AppBarTileButtonForegroundColor">#FFA5ACB5</Color>
  <ControlTemplate x:Key="{dxwuit:AppBarElementsThemeKey ResourceKey=AppBarButtonTemplate}" TargetType="dxwui:AppBarButton">
    <Grid x:Name="RootGrid" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
      <dxi:Interaction.Behaviors>
        <dxwuii:AnimatedPanelBehavior x:Name="animatedPanelBehavior" Width="{TemplateBinding Width}" />
      </dxi:Interaction.Behaviors>
      <StackPanel x:Name="panel" Margin="{TemplateBinding Padding}" VerticalAlignment="Top">
        <Grid Height="{TemplateBinding EllipseDiameter}" Width="{TemplateBinding EllipseDiameter}">
          <Grid x:Name="PART_ContentGrid" Margin="1">
            <Ellipse x:Name="back" Fill="{StaticResource backBrush}" UseLayoutRounding="False" />
            <Ellipse x:Name="border" Stroke="{StaticResource borderBrush}" StrokeThickness="{TemplateBinding StrokeThickness}" UseLayoutRounding="False" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsEllipseEnabled, Converter={StaticResource boolToVisibilityConverter}}" />
            <Grid Height="{TemplateBinding GlyphHeight}" Width="{TemplateBinding GlyphWidth}">
              <dxwuii:ShapeContentPresenter x:Name="content" AccentColor="{Binding Path=(dxb:ImageColorizer.Color), RelativeSource={RelativeSource TemplatedParent}}" FontFamily="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContentFontFamily}" FontSize="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ContentFontSize}" Foreground="{StaticResource contentBrush}" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding IsGlyphVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ResourceKey=boolToVisibilityInverseConverter}}" />
              <dxwuii:ImagePresenter x:Name="glyph" AccentColor="{Binding Path=(dxb:ImageColorizer.Color), RelativeSource={RelativeSource TemplatedParent}}" AllowAccent="{TemplateBinding AllowGlyphTheming}" Source="{TemplateBinding Glyph}" Stretch="{TemplateBinding GlyphStretch}" Visibility="{Binding IsGlyphVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ResourceKey=boolToVisibilityConverter}}" />
            </Grid>
          </Grid>
        </Grid>
        <dxwuii:ShapeContentPresenter x:Name="PART_Label" AccentColor="{StaticResource contentColor}" Content="{TemplateBinding Label}" ContentTemplate="{TemplateBinding LabelTemplate}" ContentTemplateSelector="{TemplateBinding LabelTemplateSelector}" FontFamily="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FontFamily}" FontSize="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FontSize}" Foreground="{StaticResource contentBrush}" Margin="0,5,0,0" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsCompact, Converter={StaticResource boolToVisibilityInverseConverter}}" />
      </StackPanel>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="MouseOver">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="Stroke">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource borderBrushHover}" />
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="back" Storyboard.TargetProperty="Fill">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource backBrushHover}" />
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="content" Storyboard.TargetProperty="Foreground">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource contentBrushHover}" />
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="content" Storyboard.TargetProperty="AccentColor">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource contentColorHover}" />
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="glyph" Storyboard.TargetProperty="AccentColor">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource contentColorHover}" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="Stroke">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource borderBrushPressed}" />
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="back" Storyboard.TargetProperty="Fill">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource backBrushPressed}" />
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="content" Storyboard.TargetProperty="Foreground">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource contentBrushPressed}" />
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="content" Storyboard.TargetProperty="AccentColor">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource contentColorPressed}" />
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="glyph" Storyboard.TargetProperty="AccentColor">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource contentColorPressed}" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Disabled">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="panel" Storyboard.TargetProperty="Opacity" To="0.6" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
        <VisualStateGroup x:Name="CheckedStates">
          <VisualState x:Name="Unchecked" />
          <VisualState x:Name="Checked">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="Stroke">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource borderBrushChecked}" />
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="back" Storyboard.TargetProperty="Fill">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource backBrushChecked}" />
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="content" Storyboard.TargetProperty="Foreground">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource contentBrushChecked}" />
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="content" Storyboard.TargetProperty="AccentColor">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource contentColorChecked}" />
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="glyph" Storyboard.TargetProperty="AccentColor">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource contentColorChecked}" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="CheckedMouseOver">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="Stroke">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource borderBrushHoverChecked}" />
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="back" Storyboard.TargetProperty="Fill">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource backBrushHoverChecked}" />
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="content" Storyboard.TargetProperty="Foreground">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource contentBrushHoverChecked}" />
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="content" Storyboard.TargetProperty="AccentColor">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource contentColorHoverChecked}" />
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="glyph" Storyboard.TargetProperty="AccentColor">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource contentColorHoverChecked}" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="CheckedPressed">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="Stroke">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource borderBrushPressedChecked}" />
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="back" Storyboard.TargetProperty="Fill">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource backBrushPressedChecked}" />
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="content" Storyboard.TargetProperty="Foreground">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource contentBrushPressedChecked}" />
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="content" Storyboard.TargetProperty="AccentColor">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource contentColorPressedChecked}" />
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="glyph" Storyboard.TargetProperty="AccentColor">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource contentColorPressedChecked}" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="CheckedDisabled">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="Stroke">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource borderBrushChecked}" />
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="back" Storyboard.TargetProperty="Fill">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource backBrushChecked}" />
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="content" Storyboard.TargetProperty="Foreground">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource contentBrushChecked}" />
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="content" Storyboard.TargetProperty="AccentColor">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource contentColorChecked}" />
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="glyph" Storyboard.TargetProperty="AccentColor">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource contentColorChecked}" />
              </ObjectAnimationUsingKeyFrames>
              <DoubleAnimation Duration="0" Storyboard.TargetName="panel" Storyboard.TargetProperty="Opacity" To="0.6" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
        <VisualStateGroup x:Name="CompactStates">
          <VisualState x:Name="Compact">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Label" Storyboard.TargetProperty="Visibility">
                <DiscreteObjectKeyFrame KeyTime="0">
                  <DiscreteObjectKeyFrame.Value>
                    <Visibility>Collapsed</Visibility>
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="animatedPanelBehavior" Storyboard.TargetProperty="Width">
                <DiscreteObjectKeyFrame KeyTime="0">
                  <DiscreteObjectKeyFrame.Value>
                    <system:Double>60</system:Double>
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="FullSize" />
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxwuit:AppBarElementsThemeKey ResourceKey=AppBarSeparatorTemplate}" TargetType="dxwui:AppBarSeparator">
    <Rectangle x:Name="SeparatorRectangle" Margin="29,14,30,14" Stroke="{StaticResource contentBrush}" Width="1">
      <Rectangle.LayoutTransform>
        <RotateTransform Angle="0" />
      </Rectangle.LayoutTransform>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CompactStates">
          <VisualState x:Name="Compact">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SeparatorRectangle" Storyboard.TargetProperty="Margin">
                <DiscreteObjectKeyFrame KeyTime="0">
                  <DiscreteObjectKeyFrame.Value>
                    <Thickness>19,14,20,14</Thickness>
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="FullSize" />
        </VisualStateGroup>
        <VisualStateGroup x:Name="OrientationStates">
          <VisualState x:Name="Horizontal" />
          <VisualState x:Name="Vertical">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="SeparatorRectangle" Storyboard.TargetProperty="(LayoutTransform).(RotateTransform.Angle)" To="90" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Rectangle>
  </ControlTemplate>
  <!--BEGIN WPF-->
  <ControlTemplate x:Key="{dxwuit:AppBarElementsThemeKey ResourceKey=AppBarTileBorderButtonTemplate}" TargetType="dxwuii:AppBarTileButtonBorder">
    <Grid>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="MouseOver">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="hover" Storyboard.TargetProperty="Opacity" To="0.25" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="hover" Storyboard.TargetProperty="Opacity" To="0.1" />
              <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="Margin">
                <EasingThicknessKeyFrame KeyTime="0" Value="2" />
              </ThicknessAnimationUsingKeyFrames>
              <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="hover" Storyboard.TargetProperty="Margin">
                <EasingThicknessKeyFrame KeyTime="0" Value="2" />
              </ThicknessAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Disabled" />
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Border x:Name="border" Background="{TemplateBinding Background}" />
      <Border x:Name="hover" Background="#FFFFFFFF" Opacity="0" />
      <ContentPresenter />
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxwuit:AppBarElementsThemeKey ResourceKey=AppBarTileDropDownButtonTemplate}" TargetType="dxwuii:AppBarTileButtonArrowBorder">
    <Grid>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="MouseOver">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="hover" Storyboard.TargetProperty="Opacity" To="0.25" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="hover" Storyboard.TargetProperty="Opacity" To="0.1" />
              <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="Margin">
                <EasingThicknessKeyFrame KeyTime="0" Value="2" />
              </ThicknessAnimationUsingKeyFrames>
              <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="hover" Storyboard.TargetProperty="Margin">
                <EasingThicknessKeyFrame KeyTime="0" Value="2" />
              </ThicknessAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Disabled" />
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Border x:Name="border" Background="{TemplateBinding Background}" />
      <Border x:Name="hover" Background="#FFFFFFFF" Opacity="0" />
      <ContentPresenter />
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxwuit:AppBarElementsThemeKey ResourceKey=AppBarTileButtonTemplate}" TargetType="dxwui:AppBarTileButton">
    <Grid x:Name="root">
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition />
          <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <dxwuii:AppBarTileButtonBorder x:Name="PART_Button" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
          <Grid Margin="10,10,10,20">
            <Grid.RowDefinitions>
              <RowDefinition />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <dxwuii:ShapeContentPresenter x:Name="PART_Content" AccentColor="{StaticResource contentColor}" Foreground="{StaticResource contentBrush}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Opacity="0.8" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Grid>
        </dxwuii:AppBarTileButtonBorder>
        <dxwuii:AppBarTileButtonArrowBorder x:Name="PART_FlyoutButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Foreground="{StaticResource contentBrush}" Grid.Column="1" Margin="2,0,0,0" Width="40">
          <Path x:Name="Glyph" Data="F1 M 0,0L 14.002,0L 7,7L 0,0 Z " Fill="{StaticResource AppBarTileButtonForeground}" Height="7" HorizontalAlignment="Center" Opacity="0.8" RenderTransformOrigin="0.5,0.5" Stretch="Fill" VerticalAlignment="Center" Width="14">
            <Path.RenderTransform>
              <RotateTransform x:Name="rotateTransform" Angle="0" />
            </Path.RenderTransform>
          </Path>
        </dxwuii:AppBarTileButtonArrowBorder>
      </Grid>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="MouseOver">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="Glyph" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="0" Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="Glyph" Storyboard.TargetProperty="Opacity" To="1" />
              <DoubleAnimation Duration="0" Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="Opacity" To="1" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Disabled">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="root" Storyboard.TargetProperty="Opacity" To="0.6" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
        <VisualStateGroup x:Name="FlyoutEnabledStates">
          <VisualState x:Name="FlyoutEnabled" />
          <VisualState x:Name="FlyoutDisabled">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_FlyoutButton" Storyboard.TargetProperty="Visibility">
                <DiscreteObjectKeyFrame KeyTime="0">
                  <DiscreteObjectKeyFrame.Value>
                    <Visibility>Collapsed</Visibility>
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
        <VisualStateGroup x:Name="FlyoutStates">
          <VisualState x:Name="FlyoutClosed" />
          <VisualState x:Name="FlyoutOpened">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="rotateTransform" Storyboard.TargetProperty="Angle" To="180" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
  </ControlTemplate>
  <!--END WPF-->
</ResourceDictionary>