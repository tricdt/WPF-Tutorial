<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/treemap/themekeys" xmlns:local="http://schemas.devexpress.com/winfx/2008/xaml/treemap" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
  <ResourceDictionary.MergedDictionaries>
    <dxdst:ResourceDictionaryEx Source="ToolTip.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.TreeMap.TreeMapControl}" TargetType="{x:Type local:TreeMapControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:TreeMapControl}">
          <Grid>
            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
              <local:HierarchicalLayoutControl x:Name="PART_OuterItemsContainer" Titles="{TemplateBinding Titles}" Legend="{TemplateBinding Legend}">
                <local:HierarchicalLayoutControl.ItemsPanel>
                  <ItemsPanelTemplate>
                    <local:HierarchicalLayoutControlPanel />
                  </ItemsPanelTemplate>
                </local:HierarchicalLayoutControl.ItemsPanel>
                <local:HierarchicalLayoutControl.MasterElement>
                  <local:TreeMapItemsControl x:Name="PART_ItemsContainer" />
                </local:HierarchicalLayoutControl.MasterElement>
              </local:HierarchicalLayoutControl>
            </Border>
            <local:ToolTipPanel x:Name="PART_ToolTipPanel" Position="{Binding Path=ToolTipInfo.ToolTipPosition, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=ToolTipInfo.Visible, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}">
              <Popup IsOpen="{Binding Path=ToolTipInfo.Visible, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" AllowsTransparency="True" Placement="Absolute">
                <ContentPresenter Content="{Binding Path=ToolTipInfo, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{TemplateBinding ToolTipTemplate}" />
              </Popup>
            </local:ToolTipPanel>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="BorderBrush" Value="{DynamicResource {dxt:TreeMapBrushesThemeKey ResourceKey=ControlBorderBrush}}" />
    <Setter Property="ToolTipTemplate" Value="{StaticResource toolTipTemplate}" />
    <Setter Property="ToolTipContentTemplate" Value="{StaticResource defaultToolTipContentTemplate}" />
    <Setter Property="ToolTipGroupContentTemplate" Value="{StaticResource defaultToolTipContentTemplate}" />
    <Setter Property="GroupHeaderContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <TextBlock Text="{Binding Label}" Foreground="{Binding ActualForeground}" FontWeight="{Binding FontWeight}" FontSize="{Binding FontSize}" Visibility="{Binding LabelVisible, Converter={StaticResource boolToVisibilityConverter}}" TextTrimming="WordEllipsis" Margin="4" FontStyle="{Binding FontStyle}" />
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="LeafContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <Border BorderThickness="{Binding BorderThickness}" BorderBrush="{Binding BorderBrush}">
            <local:TreeMapTextPanel Visibility="{Binding LabelVisible, Converter={StaticResource boolToVisibilityConverter}}">
              <TextBlock Text="{Binding Label}" HorizontalAlignment="{Binding LeafTextHorizontalAlignment}" VerticalAlignment="{Binding LeafTextVerticalAlignment}" Foreground="{Binding ActualForeground}" Margin="4" TextWrapping="WrapWithOverflow" TextTrimming="WordEllipsis" FontWeight="{Binding FontWeight}" FontSize="{Binding FontSize}" FontStyle="{Binding FontStyle}" FontFamily="{Binding FontFamily}" />
            </local:TreeMapTextPanel>
          </Border>
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="TreeMapStyle">
      <Setter.Value>
        <local:TreeMapStyle GroupBackground="{DynamicResource {dxt:TreeMapBrushesThemeKey ResourceKey=GroupBackground}}" SubGroupBackground="{DynamicResource {dxt:TreeMapBrushesThemeKey ResourceKey=SubGroupBackground}}" GroupForeground="{DynamicResource {dxt:TreeMapBrushesThemeKey ResourceKey=GroupForeground}}" SubGroupForeground="{DynamicResource {dxt:TreeMapBrushesThemeKey ResourceKey=SubGroupForeground}}" GroupBorderBrush="{DynamicResource {dxt:TreeMapBrushesThemeKey ResourceKey=GroupBorderBrush}}" GroupFontSize="{DynamicResource {dxt:TreeMapBrushesThemeKey ResourceKey=GroupFontSize}}" SubGroupFontSize="{DynamicResource {dxt:TreeMapBrushesThemeKey ResourceKey=SubGroupFontSize}}" GroupFontWeight="{DynamicResource {dxt:TreeMapBrushesThemeKey ResourceKey=GroupFontWeight}}" SubGroupFontWeight="{DynamicResource {dxt:TreeMapBrushesThemeKey ResourceKey=SubGroupFontWeight}}" GroupFontFamily="{DynamicResource {x:Static SystemFonts.CaptionFontFamilyKey}}" LeafFontFamily="{DynamicResource {x:Static SystemFonts.CaptionFontFamilyKey}}" LeafFontSize="{DynamicResource {x:Static SystemFonts.IconFontSizeKey}}" ToolTipBackground="{DynamicResource {dxt:TreeMapBrushesThemeKey ResourceKey=ToolTipBackground}}" ToolTipForeground="{DynamicResource {dxt:TreeMapBrushesThemeKey ResourceKey=ToolTipForeground}}" ToolTipFontSize="{DynamicResource {dxt:TreeMapBrushesThemeKey ResourceKey=ToolTipFontSize}}" ToolTipFontWeight="{DynamicResource {dxt:TreeMapBrushesThemeKey ResourceKey=ToolTipFontWeight}}" />
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.TreeMap.Title}" TargetType="{x:Type local:Title}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:Title}">
          <Grid>
            <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
              <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.TreeMap.Legend}" TargetType="{x:Type local:Legend}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:Legend}">
          <Grid>
            <ContentControl BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" DataContext="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}" Visibility="{DXBinding  Expr='@e(legendItemsControl).Items.Count &gt; 0 ? `Visible` : `Collapsed`'}">
              <ContentControl.Template>
                <ControlTemplate TargetType="ContentControl">
                  <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                    <ContentPresenter Content="{TemplateBinding Content}" />
                  </Border>
                </ControlTemplate>
              </ContentControl.Template>
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <ContentPresenter Content="{TemplateBinding Title}" Grid.Row="0" />
                <local:LegendItemsControl x:Name="legendItemsControl" ItemsSource="{TemplateBinding Items}" ItemTemplate="{TemplateBinding ItemTemplate}" Grid.Row="1">
                  <local:LegendItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                      <WrapPanel Orientation="{Binding Direction, Converter={local:LegendDirectionToOrientationConverter}}" />
                    </ItemsPanelTemplate>
                  </local:LegendItemsControl.ItemsPanel>
                </local:LegendItemsControl>
              </Grid>
            </ContentControl>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Padding" Value="5" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
    <Setter Property="BorderBrush" Value="{DynamicResource {dxt:TreeMapBrushesThemeKey ResourceKey=ControlBorderBrush}}" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.TreeMap.LegendTitle}" TargetType="{x:Type local:LegendTitle}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:LegendTitle}">
          <Grid>
            <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
              <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Visibility" Value="{Binding Visible, RelativeSource={RelativeSource Mode=Self}, Converter={local:BoolToVisibilityConverter}}" />
  </Style>
</ResourceDictionary>