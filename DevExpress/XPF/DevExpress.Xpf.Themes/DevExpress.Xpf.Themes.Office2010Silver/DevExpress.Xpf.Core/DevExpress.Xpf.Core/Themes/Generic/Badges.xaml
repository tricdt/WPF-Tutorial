<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:themes="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:system="clr-namespace:System;assembly=mscorlib" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.Native.BadgeControl}" TargetType="{x:Type dxcn:BadgeControl}">
    <Setter Property="Padding" Value="{DynamicResource {themes:BadgesThemeKey ResourceKey=Padding}}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxcn:BadgeControl}">
          <dxcn:BadgeBorder x:Name="PART_Border" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Badge.Width}" MinWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Badge.MinWidth}" MaxWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Badge.MaxWidth}" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Badge.Height}" MinHeight="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Badge.MinHeight}" MaxHeight="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Badge.MaxHeight}" Shape="{TemplateBinding Shape}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Margin="{TemplateBinding Margin}" Padding="{TemplateBinding Padding}" CornerRadius="{Binding Path=CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={dxcn:NullableCornerRadiusConverter}}">
            <dxcn:BadgeContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" ContentFormatProvider="{TemplateBinding ContentFormatProvider}" />
          </dxcn:BadgeBorder>
          <ControlTemplate.Triggers>
            <Trigger Property="CornerRadius" Value="{x:Null}">
              <Setter TargetName="PART_Border" Property="IgnoreCornerRadius" Value="True" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Padding" Value="{DynamicResource {themes:BadgesThemeKey ResourceKey=TouchPadding}}" />
      </Trigger>
      <Trigger Property="Kind" Value="Error">
        <Setter Property="Background" Value="{DynamicResource {themes:BadgesThemeKey ResourceKey=ErrorBackground}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {themes:BadgesThemeKey ResourceKey=ErrorBorderBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource {themes:BadgesThemeKey ResourceKey=ErrorForeground}}" />
        <Setter Property="BorderThickness" Value="{DynamicResource {themes:BadgesThemeKey ResourceKey=ErrorBorderThickness}}" />
      </Trigger>
      <Trigger Property="Kind" Value="Warning">
        <Setter Property="Background" Value="{DynamicResource {themes:BadgesThemeKey ResourceKey=WarningBackground}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {themes:BadgesThemeKey ResourceKey=WarningBorderBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource {themes:BadgesThemeKey ResourceKey=WarningForeground}}" />
        <Setter Property="BorderThickness" Value="{DynamicResource {themes:BadgesThemeKey ResourceKey=WarningBorderThickness}}" />
      </Trigger>
      <Trigger Property="Kind" Value="Success">
        <Setter Property="Background" Value="{DynamicResource {themes:BadgesThemeKey ResourceKey=SuccessBackground}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {themes:BadgesThemeKey ResourceKey=SuccessBorderBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource {themes:BadgesThemeKey ResourceKey=SuccessForeground}}" />
        <Setter Property="BorderThickness" Value="{DynamicResource {themes:BadgesThemeKey ResourceKey=SuccessBorderThickness}}" />
      </Trigger>
      <Trigger Property="Kind" Value="Information">
        <Setter Property="Background" Value="{DynamicResource {themes:BadgesThemeKey ResourceKey=InformationBackground}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {themes:BadgesThemeKey ResourceKey=InformationBorderBrush}}" />
        <Setter Property="Foreground" Value="{DynamicResource {themes:BadgesThemeKey ResourceKey=InformationForeground}}" />
        <Setter Property="BorderThickness" Value="{DynamicResource {themes:BadgesThemeKey ResourceKey=InformationBorderThickness}}" />
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>