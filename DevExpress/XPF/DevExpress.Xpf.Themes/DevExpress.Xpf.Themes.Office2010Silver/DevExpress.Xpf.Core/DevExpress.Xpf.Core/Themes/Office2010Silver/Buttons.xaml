<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2010Silver.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/StandardControls/Brushes.xaml" />
    <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2010Silver.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/StandardControls/SharedResources.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <s:Double x:Key="{dxdst:DropDownButtonThemeKey ResourceKey=ButtonOpacity}">0.35</s:Double>
  <Visibility x:Key="Visible">Visible</Visibility>
  <Visibility x:Key="Collapsed">Collapsed</Visibility>
  <SolidColorBrush x:Key="{dxdst:DropDownButtonThemeKey ResourceKey=Foreground}" Color="#FF000000" />
  <SolidColorBrush x:Key="{dxdst:DropDownButtonThemeKey ResourceKey=ArrowForeground}" Color="#FF000000" />
  <SolidColorBrush x:Key="{dxdst:DropDownButtonThemeKey ResourceKey=PressedForeground}" Color="#FF000000" />
  <SolidColorBrush x:Key="{dxdst:DropDownButtonThemeKey ResourceKey=CheckedForeground}" Color="#FF000000" />
  <SolidColorBrush x:Key="{dxdst:DropDownButtonThemeKey ResourceKey=ArrowPressedForeground}" Color="#FF000000" />
  <SolidColorBrush x:Key="{dxdst:DropDownButtonThemeKey ResourceKey=MouseOverForeground}" Color="#FF000000" />
  <SolidColorBrush x:Key="{dxdst:DropDownButtonThemeKey ResourceKey=ArrowMouseOverForeground}" Color="#FF000000" />
  <!-- General -->
  <dxcn:RenderTemplate x:Key="{dxdst:DropDownButtonThemeKey ResourceKey=BorderTemplate}">
    <dxcn:RenderPanel>
      <dxcn:RenderBorder Name="Focused" BorderBrush="#BFFFCC00" BorderThickness="1" CornerRadius="4" Margin="-1" Visibility="Collapsed" />
      <dxcn:RenderBorder Name="Defaulted" BorderBrush="#BFFFCC00" BorderThickness="1" CornerRadius="4" Margin="-1" Visibility="Collapsed" />
      <dxcn:RenderBorder Name="Outer" Background="{StaticResource Button.DefaultState.Border2}" BorderBrush="{StaticResource Button.DefaultState.Border1}" BorderThickness="1" CornerRadius="3" />
      <dxcn:RenderBorder Name="Inner" CornerRadius="1" Margin="2" />
      <dxcn:RenderBorder Name="HoverBorder" Margin="2" Visibility="Collapsed">
        <dxcn:RenderBorder.Background>
          <RadialGradientBrush>
            <RadialGradientBrush.RelativeTransform>
              <TranslateTransform X="0" Y="0.5" />
            </RadialGradientBrush.RelativeTransform>
            <GradientStop Color="#00FFFFFF" Offset="1" />
            <GradientStop Color="#BFFFFFFF" Offset="0" />
          </RadialGradientBrush>
        </dxcn:RenderBorder.Background>
      </dxcn:RenderBorder>
    </dxcn:RenderPanel>
    <dxcn:RenderTemplate.Triggers>
      <dxcn:RenderStateGroup Name="FocusStates">
        <dxcn:RenderStateTrigger Name="Unfocused">
          <dxcn:RenderSetter Property="Visibility" TargetName="Focused" Value="{StaticResource Collapsed}" />
        </dxcn:RenderStateTrigger>
        <dxcn:RenderStateTrigger Name="Focused">
          <dxcn:RenderSetter Property="Visibility" TargetName="Focused" Value="{StaticResource Visible}" />
        </dxcn:RenderStateTrigger>
      </dxcn:RenderStateGroup>
      <dxcn:RenderStateGroup Name="DefaultStates">
        <dxcn:RenderStateTrigger Name="NotDefaulted">
          <dxcn:RenderSetter Property="Visibility" TargetName="Defaulted" Value="{StaticResource Collapsed}" />
        </dxcn:RenderStateTrigger>
        <dxcn:RenderStateTrigger Name="IsDefaulted">
          <dxcn:RenderSetter Property="Visibility" TargetName="Defaulted" Value="{StaticResource Visible}" />
        </dxcn:RenderStateTrigger>
      </dxcn:RenderStateGroup>
      <dxcn:RenderStateGroup Name="VisualStates">
        <dxcn:RenderStateTrigger Name="Normal" />
        <dxcn:RenderStateTrigger Name="MouseOver">
          <dxcn:RenderSetter Property="BorderBrush" TargetName="Outer" Value="{StaticResource Button.HoverState.Border1}" />
          <dxcn:RenderSetter Property="Background" TargetName="Outer" Value="{StaticResource Button.HoverState.Border2}" />
          <dxcn:RenderSetter Property="Background" TargetName="Inner" Value="{StaticResource Button.HoverState.Border3}" />
          <dxcn:RenderSetter Property="Visibility" TargetName="HoverBorder" Value="{StaticResource Visible}" />
        </dxcn:RenderStateTrigger>
        <dxcn:RenderStateTrigger Name="Pressed">
          <dxcn:RenderSetter Property="BorderBrush" TargetName="Outer" Value="{StaticResource Button.PressedState.Border1}" />
          <dxcn:RenderSetter Property="Background" TargetName="Outer" Value="{StaticResource Button.PressedState.Border2}" />
          <dxcn:RenderSetter Property="Background" TargetName="Inner" Value="{StaticResource Button.PressedState.Border3}" />
        </dxcn:RenderStateTrigger>
        <dxcn:RenderStateTrigger Name="Checked">
          <dxcn:RenderSetter Property="BorderBrush" TargetName="Outer" Value="{StaticResource Button.CheckedState.Border1}" />
          <dxcn:RenderSetter Property="Background" TargetName="Outer" Value="{StaticResource Button.CheckedState.Border2}" />
          <dxcn:RenderSetter Property="Background" TargetName="Inner" Value="{StaticResource Button.CheckedState.Border3}" />
        </dxcn:RenderStateTrigger>
      </dxcn:RenderStateGroup>
      <dxcn:RenderStateGroup Name="PlacementStates">
        <dxcn:RenderStateTrigger Name="Default" />
        <dxcn:RenderStateTrigger Name="Left">
          <dxcn:RenderSetter Property="CornerRadius" TargetName="Focused" Value="4,0,0,4" />
          <dxcn:RenderSetter Property="CornerRadius" TargetName="Outer" Value="3,0,0,3" />
          <dxcn:RenderSetter Property="CornerRadius" TargetName="Inner" Value="1,0,0,1" />
          <dxcn:RenderSetter Property="BorderThickness" TargetName="Outer" Value="1,1,0,1" />
          <dxcn:RenderSetter Property="BorderThickness" TargetName="Focused" Value="1,1,0,1" />
          <dxcn:RenderSetter Property="Margin" TargetName="Focused" Value="-1,-1,0,-1" />
        </dxcn:RenderStateTrigger>
        <dxcn:RenderStateTrigger Name="Right">
          <dxcn:RenderSetter Property="CornerRadius" TargetName="Focused" Value="0,4,4,0" />
          <dxcn:RenderSetter Property="CornerRadius" TargetName="Outer" Value="0,3,3,0" />
          <dxcn:RenderSetter Property="CornerRadius" TargetName="Inner" Value="0,1,1,0" />
          <dxcn:RenderSetter Property="BorderThickness" TargetName="Focused" Value="0,1,1,1" />
          <dxcn:RenderSetter Property="Margin" TargetName="Focused" Value="0,-1,-1,-1" />
        </dxcn:RenderStateTrigger>
        <dxcn:RenderStateTrigger Name="Top">
          <dxcn:RenderSetter Property="CornerRadius" TargetName="Focused" Value="4,4,0,0" />
          <dxcn:RenderSetter Property="CornerRadius" TargetName="Outer" Value="3,3,0,0" />
          <dxcn:RenderSetter Property="CornerRadius" TargetName="Inner" Value="1,1,0,0" />
          <dxcn:RenderSetter Property="BorderThickness" TargetName="Outer" Value="1,1,1,0" />
          <dxcn:RenderSetter Property="BorderThickness" TargetName="Focused" Value="1,1,1,0" />
          <dxcn:RenderSetter Property="Margin" TargetName="Focused" Value="-1,-1,-1,0" />
        </dxcn:RenderStateTrigger>
        <dxcn:RenderStateTrigger Name="Bottom">
          <dxcn:RenderSetter Property="CornerRadius" TargetName="Focused" Value="0,0,4,4" />
          <dxcn:RenderSetter Property="CornerRadius" TargetName="Outer" Value="0,0,3,3" />
          <dxcn:RenderSetter Property="CornerRadius" TargetName="Inner" Value="0,0,1,1" />
          <dxcn:RenderSetter Property="BorderThickness" TargetName="Focused" Value="1,0,1,1" />
          <dxcn:RenderSetter Property="Margin" TargetName="Focused" Value="-1,0,-1,-1" />
        </dxcn:RenderStateTrigger>
      </dxcn:RenderStateGroup>
    </dxcn:RenderTemplate.Triggers>
  </dxcn:RenderTemplate>
  <!-- Content -->
  <dxcn:RenderTemplate x:Key="{dxdst:DropDownButtonThemeKey ResourceKey=ContentBorderTemplate}">
    <dxcn:RenderPanel>
      <dxcn:RenderBorder Name="Focused" BorderBrush="#BFFFCC00" BorderThickness="1" CornerRadius="4" Margin="-1" Visibility="Collapsed" />
      <dxcn:RenderBorder Name="Defaulted" BorderBrush="#BFFFCC00" BorderThickness="1" CornerRadius="4" Margin="-1" Visibility="Collapsed" />
      <dxcn:RenderBorder Name="Outer" Background="{StaticResource Button.DefaultState.Border2}" BorderBrush="{StaticResource Button.DefaultState.Border1}" BorderThickness="1" CornerRadius="3" />
      <dxcn:RenderBorder Name="Inner" CornerRadius="1" Margin="2" />
      <dxcn:RenderBorder Name="HoverBorder" Margin="2" Visibility="Collapsed">
        <dxcn:RenderBorder.Background>
          <RadialGradientBrush>
            <RadialGradientBrush.RelativeTransform>
              <TranslateTransform X="0" Y="0.5" />
            </RadialGradientBrush.RelativeTransform>
            <GradientStop Color="#00FFFFFF" Offset="1" />
            <GradientStop Color="#BFFFFFFF" Offset="0" />
          </RadialGradientBrush>
        </dxcn:RenderBorder.Background>
      </dxcn:RenderBorder>
    </dxcn:RenderPanel>
    <dxcn:RenderTemplate.Triggers>
      <dxcn:RenderStateGroup Name="FocusStates">
        <dxcn:RenderStateTrigger Name="Unfocused">
          <dxcn:RenderSetter Property="Visibility" TargetName="Focused" Value="{StaticResource Collapsed}" />
        </dxcn:RenderStateTrigger>
        <dxcn:RenderStateTrigger Name="Focused">
          <dxcn:RenderSetter Property="Visibility" TargetName="Focused" Value="{StaticResource Visible}" />
        </dxcn:RenderStateTrigger>
      </dxcn:RenderStateGroup>
      <dxcn:RenderStateGroup Name="DefaultStates">
        <dxcn:RenderStateTrigger Name="NotDefaulted">
          <dxcn:RenderSetter Property="Visibility" TargetName="Defaulted" Value="{StaticResource Collapsed}" />
        </dxcn:RenderStateTrigger>
        <dxcn:RenderStateTrigger Name="IsDefaulted">
          <dxcn:RenderSetter Property="Visibility" TargetName="Defaulted" Value="{StaticResource Visible}" />
        </dxcn:RenderStateTrigger>
      </dxcn:RenderStateGroup>
      <dxcn:RenderStateGroup Name="VisualStates">
        <dxcn:RenderStateTrigger Name="Normal" />
        <dxcn:RenderStateTrigger Name="MouseOver">
          <dxcn:RenderSetter Property="BorderBrush" TargetName="Outer" Value="{StaticResource Button.HoverState.Border1}" />
          <dxcn:RenderSetter Property="Background" TargetName="Outer" Value="{StaticResource Button.HoverState.Border2}" />
          <dxcn:RenderSetter Property="Background" TargetName="Inner" Value="{StaticResource Button.HoverState.Border3}" />
          <dxcn:RenderSetter Property="Visibility" TargetName="HoverBorder" Value="{StaticResource Visible}" />
        </dxcn:RenderStateTrigger>
        <dxcn:RenderStateTrigger Name="Pressed">
          <dxcn:RenderSetter Property="BorderBrush" TargetName="Outer" Value="{StaticResource Button.PressedState.Border1}" />
          <dxcn:RenderSetter Property="Background" TargetName="Outer" Value="{StaticResource Button.PressedState.Border2}" />
          <dxcn:RenderSetter Property="Background" TargetName="Inner" Value="{StaticResource Button.PressedState.Border3}" />
        </dxcn:RenderStateTrigger>
        <dxcn:RenderStateTrigger Name="Checked">
          <dxcn:RenderSetter Property="BorderBrush" TargetName="Outer" Value="{StaticResource Button.CheckedState.Border1}" />
          <dxcn:RenderSetter Property="Background" TargetName="Outer" Value="{StaticResource Button.CheckedState.Border2}" />
          <dxcn:RenderSetter Property="Background" TargetName="Inner" Value="{StaticResource Button.CheckedState.Border3}" />
        </dxcn:RenderStateTrigger>
      </dxcn:RenderStateGroup>
      <dxcn:RenderStateGroup Name="PlacementStates">
        <dxcn:RenderStateTrigger Name="Default" />
        <dxcn:RenderStateTrigger Name="Left">
          <dxcn:RenderSetter Property="CornerRadius" TargetName="Focused" Value="4,0,0,4" />
          <dxcn:RenderSetter Property="CornerRadius" TargetName="Outer" Value="3,0,0,3" />
          <dxcn:RenderSetter Property="CornerRadius" TargetName="Inner" Value="1,0,0,1" />
          <dxcn:RenderSetter Property="BorderThickness" TargetName="Outer" Value="1,1,0,1" />
          <dxcn:RenderSetter Property="BorderThickness" TargetName="Focused" Value="1,1,0,1" />
          <dxcn:RenderSetter Property="Margin" TargetName="Focused" Value="-1,-1,0,-1" />
        </dxcn:RenderStateTrigger>
        <dxcn:RenderStateTrigger Name="Right">
          <dxcn:RenderSetter Property="CornerRadius" TargetName="Focused" Value="0,4,4,0" />
          <dxcn:RenderSetter Property="CornerRadius" TargetName="Outer" Value="0,3,3,0" />
          <dxcn:RenderSetter Property="CornerRadius" TargetName="Inner" Value="0,1,1,0" />
          <dxcn:RenderSetter Property="BorderThickness" TargetName="Focused" Value="0,1,1,1" />
          <dxcn:RenderSetter Property="Margin" TargetName="Focused" Value="0,-1,-1,-1" />
        </dxcn:RenderStateTrigger>
        <dxcn:RenderStateTrigger Name="Top">
          <dxcn:RenderSetter Property="CornerRadius" TargetName="Focused" Value="4,4,0,0" />
          <dxcn:RenderSetter Property="CornerRadius" TargetName="Outer" Value="3,3,0,0" />
          <dxcn:RenderSetter Property="CornerRadius" TargetName="Inner" Value="1,1,0,0" />
          <dxcn:RenderSetter Property="BorderThickness" TargetName="Outer" Value="1,1,1,0" />
          <dxcn:RenderSetter Property="BorderThickness" TargetName="Focused" Value="1,1,1,0" />
          <dxcn:RenderSetter Property="Margin" TargetName="Focused" Value="-1,-1,-1,0" />
        </dxcn:RenderStateTrigger>
        <dxcn:RenderStateTrigger Name="Bottom">
          <dxcn:RenderSetter Property="CornerRadius" TargetName="Focused" Value="0,0,4,4" />
          <dxcn:RenderSetter Property="CornerRadius" TargetName="Outer" Value="0,0,3,3" />
          <dxcn:RenderSetter Property="CornerRadius" TargetName="Inner" Value="0,0,1,1" />
          <dxcn:RenderSetter Property="BorderThickness" TargetName="Focused" Value="1,0,1,1" />
          <dxcn:RenderSetter Property="Margin" TargetName="Focused" Value="-1,0,-1,-1" />
        </dxcn:RenderStateTrigger>
      </dxcn:RenderStateGroup>
    </dxcn:RenderTemplate.Triggers>
  </dxcn:RenderTemplate>
  <!-- Arrow -->
  <dxcn:RenderTemplate x:Key="{dxdst:DropDownButtonThemeKey ResourceKey=ArrowBorderTemplate}">
    <dxcn:RenderPanel>
      <dxcn:RenderBorder Name="Focused" BorderBrush="#BFFFCC00" BorderThickness="1" CornerRadius="4" Margin="-1" Visibility="Collapsed" />
      <dxcn:RenderBorder Name="Defaulted" BorderBrush="#BFFFCC00" BorderThickness="1" CornerRadius="4" Margin="-1" Visibility="Collapsed" />
      <dxcn:RenderBorder Name="Outer" Background="{StaticResource Button.DefaultState.Border2}" BorderBrush="{StaticResource Button.DefaultState.Border1}" BorderThickness="1" CornerRadius="3" />
      <dxcn:RenderBorder Name="Inner" CornerRadius="1" Margin="2" />
      <dxcn:RenderBorder Name="HoverBorder" Margin="2" Visibility="Collapsed">
        <dxcn:RenderBorder.Background>
          <RadialGradientBrush>
            <RadialGradientBrush.RelativeTransform>
              <TranslateTransform X="0" Y="0.5" />
            </RadialGradientBrush.RelativeTransform>
            <GradientStop Color="#00FFFFFF" Offset="1" />
            <GradientStop Color="#BFFFFFFF" Offset="0" />
          </RadialGradientBrush>
        </dxcn:RenderBorder.Background>
      </dxcn:RenderBorder>
    </dxcn:RenderPanel>
    <dxcn:RenderTemplate.Triggers>
      <dxcn:RenderStateGroup Name="FocusStates">
        <dxcn:RenderStateTrigger Name="Unfocused">
          <dxcn:RenderSetter Property="Visibility" TargetName="Focused" Value="{StaticResource Collapsed}" />
        </dxcn:RenderStateTrigger>
        <dxcn:RenderStateTrigger Name="Focused">
          <dxcn:RenderSetter Property="Visibility" TargetName="Focused" Value="{StaticResource Visible}" />
        </dxcn:RenderStateTrigger>
      </dxcn:RenderStateGroup>
      <dxcn:RenderStateGroup Name="DefaultStates">
        <dxcn:RenderStateTrigger Name="NotDefaulted">
          <dxcn:RenderSetter Property="Visibility" TargetName="Defaulted" Value="{StaticResource Collapsed}" />
        </dxcn:RenderStateTrigger>
        <dxcn:RenderStateTrigger Name="IsDefaulted">
          <dxcn:RenderSetter Property="Visibility" TargetName="Defaulted" Value="{StaticResource Visible}" />
        </dxcn:RenderStateTrigger>
      </dxcn:RenderStateGroup>
      <dxcn:RenderStateGroup Name="VisualStates">
        <dxcn:RenderStateTrigger Name="Normal" />
        <dxcn:RenderStateTrigger Name="MouseOver">
          <dxcn:RenderSetter Property="BorderBrush" TargetName="Outer" Value="{StaticResource Button.HoverState.Border1}" />
          <dxcn:RenderSetter Property="Background" TargetName="Outer" Value="{StaticResource Button.HoverState.Border2}" />
          <dxcn:RenderSetter Property="Background" TargetName="Inner" Value="{StaticResource Button.HoverState.Border3}" />
          <dxcn:RenderSetter Property="Visibility" TargetName="HoverBorder" Value="{StaticResource Visible}" />
        </dxcn:RenderStateTrigger>
        <dxcn:RenderStateTrigger Name="Pressed">
          <dxcn:RenderSetter Property="BorderBrush" TargetName="Outer" Value="{StaticResource Button.PressedState.Border1}" />
          <dxcn:RenderSetter Property="Background" TargetName="Outer" Value="{StaticResource Button.PressedState.Border2}" />
          <dxcn:RenderSetter Property="Background" TargetName="Inner" Value="{StaticResource Button.PressedState.Border3}" />
        </dxcn:RenderStateTrigger>
        <dxcn:RenderStateTrigger Name="Checked">
          <dxcn:RenderSetter Property="BorderBrush" TargetName="Outer" Value="{StaticResource Button.CheckedState.Border1}" />
          <dxcn:RenderSetter Property="Background" TargetName="Outer" Value="{StaticResource Button.CheckedState.Border2}" />
          <dxcn:RenderSetter Property="Background" TargetName="Inner" Value="{StaticResource Button.CheckedState.Border3}" />
        </dxcn:RenderStateTrigger>
      </dxcn:RenderStateGroup>
      <dxcn:RenderStateGroup Name="PlacementStates">
        <dxcn:RenderStateTrigger Name="Default" />
        <dxcn:RenderStateTrigger Name="Left">
          <dxcn:RenderSetter Property="CornerRadius" TargetName="Focused" Value="4,0,0,4" />
          <dxcn:RenderSetter Property="CornerRadius" TargetName="Outer" Value="3,0,0,3" />
          <dxcn:RenderSetter Property="CornerRadius" TargetName="Inner" Value="1,0,0,1" />
          <dxcn:RenderSetter Property="BorderThickness" TargetName="Outer" Value="1,1,0,1" />
          <dxcn:RenderSetter Property="BorderThickness" TargetName="Focused" Value="1,1,0,1" />
          <dxcn:RenderSetter Property="Margin" TargetName="Focused" Value="-1,-1,0,-1" />
        </dxcn:RenderStateTrigger>
        <dxcn:RenderStateTrigger Name="Right">
          <dxcn:RenderSetter Property="CornerRadius" TargetName="Focused" Value="0,4,4,0" />
          <dxcn:RenderSetter Property="CornerRadius" TargetName="Outer" Value="0,3,3,0" />
          <dxcn:RenderSetter Property="CornerRadius" TargetName="Inner" Value="0,1,1,0" />
          <dxcn:RenderSetter Property="BorderThickness" TargetName="Focused" Value="0,1,1,1" />
          <dxcn:RenderSetter Property="Margin" TargetName="Focused" Value="0,-1,-1,-1" />
        </dxcn:RenderStateTrigger>
        <dxcn:RenderStateTrigger Name="Top">
          <dxcn:RenderSetter Property="CornerRadius" TargetName="Focused" Value="4,4,0,0" />
          <dxcn:RenderSetter Property="CornerRadius" TargetName="Outer" Value="3,3,0,0" />
          <dxcn:RenderSetter Property="CornerRadius" TargetName="Inner" Value="1,1,0,0" />
          <dxcn:RenderSetter Property="BorderThickness" TargetName="Outer" Value="1,1,1,0" />
          <dxcn:RenderSetter Property="BorderThickness" TargetName="Focused" Value="1,1,1,0" />
          <dxcn:RenderSetter Property="Margin" TargetName="Focused" Value="-1,-1,-1,0" />
        </dxcn:RenderStateTrigger>
        <dxcn:RenderStateTrigger Name="Bottom">
          <dxcn:RenderSetter Property="CornerRadius" TargetName="Focused" Value="0,0,4,4" />
          <dxcn:RenderSetter Property="CornerRadius" TargetName="Outer" Value="0,0,3,3" />
          <dxcn:RenderSetter Property="CornerRadius" TargetName="Inner" Value="0,0,1,1" />
          <dxcn:RenderSetter Property="BorderThickness" TargetName="Focused" Value="1,0,1,1" />
          <dxcn:RenderSetter Property="Margin" TargetName="Focused" Value="-1,0,-1,-1" />
        </dxcn:RenderStateTrigger>
      </dxcn:RenderStateGroup>
    </dxcn:RenderTemplate.Triggers>
  </dxcn:RenderTemplate>
  <!-- Separator -->
  <dxcn:RenderTemplate x:Key="{dxdst:DropDownButtonThemeKey ResourceKey=SeparatorBorderTemplate}">
    <dxcn:RenderPanel />
  </dxcn:RenderTemplate>
  <dx:WpfSvgPalette x:Key="{dxdst:BrushesThemeKey ResourceKey=ContrastSvgPalette}">
    <SolidColorBrush x:Key="BlackColor" Color="#FF515D7A" />
    <SolidColorBrush x:Key="WhiteColor" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="RedColor" Color="#FFFF2344" />
    <SolidColorBrush x:Key="YellowColor" Color="#FFCE723D" />
    <SolidColorBrush x:Key="GreenColor" Color="#FF05A233" />
    <SolidColorBrush x:Key="BlueColor" Color="#FF00A5D2" />
    <dx:WpfSvgPalette.States>
      <dx:WpfSvgPalette x:Key="Hover">
        <SolidColorBrush x:Key="BlackColor" Color="#FF515D7A" />
        <SolidColorBrush x:Key="WhiteColor" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="RedColor" Color="#FFFF2344" />
        <SolidColorBrush x:Key="YellowColor" Color="#FFCE723D" />
        <SolidColorBrush x:Key="GreenColor" Color="#FF05A233" />
        <SolidColorBrush x:Key="BlueColor" Color="#FF00A5D2" />
      </dx:WpfSvgPalette>
      <dx:WpfSvgPalette x:Key="Pressed">
        <SolidColorBrush x:Key="BlackColor" Color="#FF515D7A" />
        <SolidColorBrush x:Key="WhiteColor" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="RedColor" Color="#FFFF2344" />
        <SolidColorBrush x:Key="YellowColor" Color="#FFCE723D" />
        <SolidColorBrush x:Key="GreenColor" Color="#FF05A233" />
        <SolidColorBrush x:Key="BlueColor" Color="#FF00A5D2" />
      </dx:WpfSvgPalette>
    </dx:WpfSvgPalette.States>
  </dx:WpfSvgPalette>
  <dx:WpfSvgPalette x:Key="{dxdst:BrushesThemeKey ResourceKey=SvgPalette}">
    <SolidColorBrush x:Key="BlackColor" Color="#FF515D7A" />
    <SolidColorBrush x:Key="WhiteColor" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="RedColor" Color="#FFFF2344" />
    <SolidColorBrush x:Key="YellowColor" Color="#FFCE723D" />
    <SolidColorBrush x:Key="GreenColor" Color="#FF05A233" />
    <SolidColorBrush x:Key="BlueColor" Color="#FF00A5D2" />
    <dx:WpfSvgPalette.States>
      <dx:WpfSvgPalette x:Key="Hover">
        <SolidColorBrush x:Key="BlackColor" Color="#FF515D7A" />
        <SolidColorBrush x:Key="WhiteColor" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="RedColor" Color="#FFFF2344" />
        <SolidColorBrush x:Key="YellowColor" Color="#FFCE723D" />
        <SolidColorBrush x:Key="GreenColor" Color="#FF05A233" />
        <SolidColorBrush x:Key="BlueColor" Color="#FF00A5D2" />
      </dx:WpfSvgPalette>
      <dx:WpfSvgPalette x:Key="Pressed">
        <SolidColorBrush x:Key="BlackColor" Color="#FF515D7A" />
        <SolidColorBrush x:Key="WhiteColor" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="RedColor" Color="#FFFF2344" />
        <SolidColorBrush x:Key="YellowColor" Color="#FFCE723D" />
        <SolidColorBrush x:Key="GreenColor" Color="#FF05A233" />
        <SolidColorBrush x:Key="BlueColor" Color="#FF00A5D2" />
      </dx:WpfSvgPalette>
    </dx:WpfSvgPalette.States>
  </dx:WpfSvgPalette>
</ResourceDictionary>