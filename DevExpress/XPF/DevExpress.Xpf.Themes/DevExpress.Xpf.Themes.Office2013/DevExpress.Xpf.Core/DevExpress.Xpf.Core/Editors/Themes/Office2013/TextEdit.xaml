<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxeh="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
                    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2013.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/Office2013/ErrorPresenter.xaml"/>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2013.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/Office2013/TextEditBase.xaml"/>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2013.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/Generic/TextEdit.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <SolidColorBrush x:Key="{dxet:TextEditThemeKey ResourceKey=NullTextForeground}"
                     Color="#7F3C3C3C"
                     cs:Name="SolidColorBrush_0001"
                     cs:Office2013DarkGray.Color="#FFABABAB"
                     cs:Office2013LightGray.Color="#FFABABAB"
                     cs:Office2016Black.Color="#6A000000"
                     cs:Office2016Colorful.Color="#7B000000"
                     cs:Office2016White.Color="#7F3C3C3C"/>

    <dx:WpfSvgPalette x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=ValidationErrorSvgPalette}">
        <SolidColorBrush x:Key="BlackColor"
                         Color="#FF808080"
                         cs:Office2013DarkGray.Color="#FF808080"
                         cs:Office2013LightGray.Color="#FF808080"
                         cs:Office2016Black.Color="#FF484848"
                         cs:Office2016Colorful.Color="#FF808080"
                         cs:Office2016White.Color="#FF808080"
                        />
        <SolidColorBrush x:Key="WhiteColor"
                         Color="#FFFFFFFF"
                         cs:Office2013DarkGray.Color="#FFFFFFFF"
                         cs:Office2013LightGray.Color="#FFFFFFFF"
                         cs:Office2016Black.Color="#FFDFDFDF"
                         cs:Office2016Colorful.Color="#FFFFFFFF"
                         cs:Office2016White.Color="#FFFFFFFF"
                        />
        <SolidColorBrush x:Key="RedColor"
                         Color="#FFD86344"
                         cs:Office2013DarkGray.Color="#FFD86344"
                         cs:Office2013LightGray.Color="#FFD86344"
                         cs:Office2016Black.Color="#FFBE4B2C"
                         cs:Office2016Colorful.Color="#FFD86344"
                         cs:Office2016White.Color="#FFD86344"
                        />
        <SolidColorBrush x:Key="YellowColor"
                         Color="#FFEDC87E"
                         cs:Office2013DarkGray.Color="#FFEDC87E"
                         cs:Office2013LightGray.Color="#FFEDC87E"
                         cs:Office2016Black.Color="#FFA75D2A"
                         cs:Office2016Colorful.Color="#FFEDC87E"
                         cs:Office2016White.Color="#FFEDC87E"
                        />
        <SolidColorBrush x:Key="GreenColor"
                         Color="#FF68A490"
                         cs:Office2013DarkGray.Color="#FF68A490"
                         cs:Office2013LightGray.Color="#FF68A490"
                         cs:Office2016Black.Color="#FF4C8A75"
                         cs:Office2016Colorful.Color="#FF68A490"
                         cs:Office2016White.Color="#FF68A490"
                        />
        <SolidColorBrush x:Key="BlueColor"
                         Color="#FF4D82B8"
                         cs:Office2013DarkGray.Color="#FF4D82B8"
                         cs:Office2013LightGray.Color="#FF4D82B8"
                         cs:Office2016Black.Color="#FF2B6096"
                         cs:Office2016Colorful.Color="#FF4D82B8"
                         cs:Office2016White.Color="#FF4D82B8"
                        />
    </dx:WpfSvgPalette>

    <dx:WpfSvgPalette x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=ConditionalFormattingSvgPalette}">
        <SolidColorBrush x:Key="BlackColor"
                         Color="#FF808080"
                         cs:Office2016Black.Color="#FFDFDFDF"/>
        <SolidColorBrush x:Key="WhiteColor"
                         Color="#FFFFFFFF"
                         cs:Office2016Black.Color="#FF595959"/>
        <SolidColorBrush x:Key="RedColor"
                         Color="#FFD86344"
                         cs:Office2016Black.Color="#FFFF6B59"/>
        <SolidColorBrush x:Key="YellowColor"
                         Color="#FFEDC87E"
                         cs:Office2016Black.Color="#FFFFD989"/>
        <SolidColorBrush x:Key="GreenColor"
                         Color="#FF68A490"
                         cs:Office2016Black.Color="#FF69A891"/>
        <SolidColorBrush x:Key="BlueColor"
                         Color="#FF4D82B8"
                         cs:Office2016Black.Color="#FF008EAF"/>
        <dx:WpfSvgPalette.States>
            <dx:WpfSvgPalette x:Key="Hover">
                <SolidColorBrush x:Key="BlackColor"
                                 Color="#FF808080"
                                 cs:Office2016Black.Color="#FFDFDFDF"/>
                <SolidColorBrush x:Key="WhiteColor"
                                 Color="#FFFFFFFF"
                                 cs:Office2016Black.Color="#FF484848"/>
                <SolidColorBrush x:Key="RedColor"
                                 Color="#FFD86344"
                                 cs:Office2016Black.Color="#FFFF6B59"/>
                <SolidColorBrush x:Key="YellowColor"
                                 Color="#FFEDC87E"
                                 cs:Office2016Black.Color="#FFFFD989"/>
                <SolidColorBrush x:Key="GreenColor"
                                 Color="#FF68A490"
                                 cs:Office2016Black.Color="#FF69A891"/>
                <SolidColorBrush x:Key="BlueColor"
                                 Color="#FF4D82B8"
                                 cs:Office2016Black.Color="#FF008EAF"/>
            </dx:WpfSvgPalette>
            <dx:WpfSvgPalette x:Key="Pressed">
                <SolidColorBrush x:Key="BlackColor"
                                 Color="#FF808080"
                                 cs:Office2016Black.Color="#FFDFDFDF"/>
                <SolidColorBrush x:Key="WhiteColor"
                                 Color="#FFFFFFFF"
                                 cs:Office2016Black.Color="#FF484848"/>
                <SolidColorBrush x:Key="RedColor"
                                 Color="#FFD86344"
                                 cs:Office2016Black.Color="#FFFF6B59"/>
                <SolidColorBrush x:Key="YellowColor"
                                 Color="#FFEDC87E"
                                 cs:Office2016Black.Color="#FFFFD989"/>
                <SolidColorBrush x:Key="GreenColor"
                                 Color="#FF68A490"
                                 cs:Office2016Black.Color="#FF69A891"/>
                <SolidColorBrush x:Key="BlueColor"
                                 Color="#FF4D82B8"
                                 cs:Office2016Black.Color="#FF008EAF"/>
            </dx:WpfSvgPalette>
        </dx:WpfSvgPalette.States>
    </dx:WpfSvgPalette>

    <Style x:Key="{dxet:TextEditThemeKey ResourceKey=TextStyle}"
           BasedOn="{StaticResource BaseTextStyle}"
           TargetType="{x:Type TextBox}">
    </Style>

    <Style x:Key="{dxet:TextEditThemeKey ResourceKey=TextInplaceStyle}"
           BasedOn="{StaticResource BaseTextInplaceStyle}"
           TargetType="{x:Type TextBox}">
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="dxeh:EditorMarginHelper.Margin" Value="10,13,10,13,0,13,10,13"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="dxeh:EditorMarginHelper.Margin" Value="2,2,2,2,0,2,2,2"/>
    </Style>

    <Style x:Key="{dxet:TextEditThemeKey ResourceKey=TextBlockStyle}"
           BasedOn="{StaticResource BaseTextBlockStyle}"
           TargetType="{x:Type TextBlock}">
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Margin" Value="12,13"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Margin" Value="5,2,5,2"/>
    </Style>

    <Style x:Key="{dxet:TextEditThemeKey ResourceKey=TextBlockInplaceStyle}"
           BasedOn="{StaticResource BaseTextBlockInplaceStyle}"
           TargetType="{x:Type TextBlock}">
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="dxeh:EditorMarginHelper.Margin" Value="13,13,13,13,13,13,13,13"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="dxeh:EditorMarginHelper.Margin" Value="4,2,4,2,2,2,4,2"/>
    </Style>

    <ControlTemplate x:Key="{dxet:TextEditThemeKey ResourceKey=DisplayInplaceTemplate}">
        <TextBlock x:Name="PART_Editor"
                   dx:FocusHelper2.Focusable="False"
                   Style="{DynamicResource {dxet:TextEditThemeKey ResourceKey=TextBlockInplaceStyle}}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:TextEditThemeKey ResourceKey=EditNonEditableTemplate}">
        <TextBlock x:Name="PART_Editor" Style="{DynamicResource {dxet:TextEditThemeKey ResourceKey=TextBlockStyle}}">
            <TextBlock.FocusVisualStyle>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate/>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TextBlock.FocusVisualStyle>
        </TextBlock>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:TextEditThemeKey ResourceKey=EditNonEditableInplaceTemplate}">
        <TextBlock x:Name="PART_Editor" Style="{DynamicResource {dxet:TextEditThemeKey ResourceKey=TextBlockInplaceStyle}}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:TextEditThemeKey ResourceKey=EditInplaceTemplate}">
        <TextBox x:Name="PART_Editor" Style="{DynamicResource {dxet:TextEditThemeKey ResourceKey=TextInplaceStyle}}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:TextEditThemeKey ResourceKey=EditTemplate}">
        <TextBox x:Name="PART_Editor"
                 dxeh:EditorMarginHelper.Margin="3,2,3,2,0,2,3,2"
                 Style="{DynamicResource {dxet:TextEditThemeKey ResourceKey=TextStyle}}"/>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="dxeh:EditorMarginHelper.Margin"
                        TargetName="PART_Editor"
                        Value="13,13,13,13,0,13,13,13"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:TextEditThemeKey ResourceKey=EmptyBorderTemplate}" TargetType="{x:Type ContentControl}">
        <Border x:Name="TextEditEmptyBorder">
            <ContentPresenter Content="{TemplateBinding Content}"
                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"/>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:TextEditThemeKey ResourceKey=ErrorControlTemplate}" TargetType="{x:Type dxe:ErrorControl}">
        <ContentPresenter x:Name="content"
                          Content="{TemplateBinding Content}"
                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                          ContentTemplate="{TemplateBinding ContentTemplate}"
                          Margin="3,0,3,0"
                          RenderTransformOrigin="0.5,0.5">
            <ContentPresenter.Resources>
                <Storyboard x:Key="showErrorStoryboard">
                    <DoubleAnimation BeginTime="00:00:00"
                                     Duration="00:00:00.2000000"
                                     From="0"
                                     Storyboard.TargetName="content"
                                     Storyboard.TargetProperty="Opacity"
                                     To="1"/>
                    <DoubleAnimation BeginTime="00:00:00"
                                     Duration="00:00:00.1000000"
                                     From="1"
                                     Storyboard.TargetName="content"
                                     Storyboard.TargetProperty="RenderTransform.ScaleX"
                                     To="1.2"/>
                    <DoubleAnimation BeginTime="00:00:00.1000000"
                                     Duration="00:00:00.1000000"
                                     From="1.2"
                                     Storyboard.TargetName="content"
                                     Storyboard.TargetProperty="RenderTransform.ScaleX"
                                     To="1"/>
                    <DoubleAnimation BeginTime="00:00:00"
                                     Duration="00:00:00.1000000"
                                     From="1"
                                     Storyboard.TargetName="content"
                                     Storyboard.TargetProperty="RenderTransform.ScaleY"
                                     To="1.2"/>
                    <DoubleAnimation BeginTime="00:00:00.1000000"
                                     Duration="00:00:00.1000000"
                                     From="1.2"
                                     Storyboard.TargetName="content"
                                     Storyboard.TargetProperty="RenderTransform.ScaleY"
                                     To="1"/>
                </Storyboard>
                <Storyboard x:Key="hideErrorStoryboard">
                    <DoubleAnimation BeginTime="00:00:00"
                                     Duration="00:00:00"
                                     Storyboard.TargetName="content"
                                     Storyboard.TargetProperty="Opacity"
                                     To="0"/>
                </Storyboard>
            </ContentPresenter.Resources>
            <ContentPresenter.RenderTransform>
                <ScaleTransform/>
            </ContentPresenter.RenderTransform>
        </ContentPresenter>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Margin"
                        TargetName="content"
                        Value="12,13"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:TextEditThemeKey ResourceKey=BorderTemplate}" TargetType="{x:Type ContentControl}">
        <Grid x:Name="Grid1"
              cs:Name="Grid_0001"
              MinHeight="0"
              MinWidth="0">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="InternalFocusStates">
                    <VisualState x:Name="InternalFocused">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="FocusElement"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="InternalUnfocused"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Border"
                    Background="#FFFFFFFF"
                    BorderBrush="#7F5C5C5C"
                    BorderThickness="1"
                    cs:Name="Border_0002"
                    cs:Office2013DarkGray.Background="#FFFFFFFF"
                    cs:Office2013DarkGray.BorderBrush="#7F5C5C5C"
                    cs:Office2013LightGray.Background="#FFFFFFFF"
                    cs:Office2013LightGray.BorderBrush="#4E000000"
                    cs:Office2016Black.Background="#FFD4D4D4"
                    cs:Office2016Black.BorderBrush="#60000000"
                    cs:Office2016Colorful.Background="#FFFFFFFF"
                    cs:Office2016Colorful.BorderBrush="#47000000"
                    cs:Office2016White.Background="#FFFFFFFF"
                    cs:Office2016White.BorderBrush="#7F5C5C5C"
                   />
            <ContentPresenter Margin="0,1"/>
            <Border x:Name="FocusElement"
                    BorderBrush="#FF92C0E0"
                    BorderThickness="1"
                    cs:Name="Border_0003"
                    Opacity="0"
                    cs:Office2013DarkGray.BorderBrush="#5F2592DA"
                    cs:Office2013LightGray.BorderBrush="#FF19478A"
                    cs:Office2016Black.BorderBrush="#60000000"
                    cs:Office2016Colorful.BorderBrush="#47000000"
                    cs:Office2016White.BorderBrush="#FF92C0E0"
                   />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinWidth"
                        TargetName="Grid1"
                        Value="44"/>
                <Setter Property="MinHeight"
                        TargetName="Grid1"
                        Value="44"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity"
                        TargetName="Border"
                        Value="0.35">
                </Setter>
            </Trigger>
            <DataTrigger Binding="{Binding Path=(dxe:BaseEdit.OwnerEdit).IsReadOnly, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Opacity"
                        TargetName="Border"
                        Value="0.62"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--END TOSLONLY REPLACE 'TextBox'dxec:SLTextBox'-->

    <Thickness x:Key="{dxet:EmbeddedEditorLabelsThemeKey ResourceKey=Margin}">4,2,0,0</Thickness>
    <Thickness x:Key="{dxet:EmbeddedEditorLabelsThemeKey ResourceKey=Padding}">0</Thickness>
    <sys:Double x:Key="{dxet:EmbeddedEditorLabelsThemeKey ResourceKey=FontSize}">12</sys:Double>
    <SolidColorBrush x:Key="{dxet:EmbeddedEditorLabelsThemeKey ResourceKey=Foreground}" Color="Gray"/>
    <Thickness x:Key="{dxet:EmbeddedEditorLabelsThemeKey ResourceKey=ContentMargin}">0,0,0,2</Thickness>

</ResourceDictionary>