<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
                    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
                    xmlns:dxn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2013.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/Generic/AutoCompleteBox.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <SolidColorBrush x:Key="{dxet:TokenEditorThemeKey ResourceKey=TokenForeground}"
                     Color="#FF3C3C3C"
                     cs:Office2013DarkGray.Color="#FF262626"
                     cs:Office2013LightGray.Color="#FF444444"
                     cs:Office2016Black.Color="#E3FFFFFF"
                     cs:Office2016Colorful.Color="#E3000000"
                     cs:Office2016White.Color="#FF000000"/>

    <Style x:Key="{dxet:TokenEditorThemeKey ResourceKey=BorderStyle}" TargetType="{x:Type Border}">
        <Setter cs:Name="Setter_0001"
                Property="Background"
                Value="#FFFFFFFF"
                cs:Office2013DarkGray.Value="#FFFFFFFF"
                cs:Office2013LightGray.Value="#FFFFFFFF"
                cs:Office2016Black.Value="#FFD4D4D4"
                cs:Office2016Colorful.Value="#FFFFFFFF"
                cs:Office2016White.Value="#FFFFFFFF"
               />
        <Setter cs:Name="Setter_0002"
                Property="BorderBrush"
                Value="#FFACACAC"
                cs:Office2013DarkGray.Value="#FFACACAC"
                cs:Office2013LightGray.Value="#FFACACAC"
                cs:Office2016Black.Value="#60000000"
                cs:Office2016Colorful.Value="#47000000"
                cs:Office2016White.Value="#FFACACAC"
               />
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <ControlTemplate x:Key="{dxet:TokenEditorThemeKey ResourceKey=CellPresenterTemplate}" TargetType="{x:Type dxei:TokenEditorPresenter}">
        <Grid Background="Transparent"
              cs:Name="Grid_0001"
              cs:Office2013DarkGray.Background="Transparent"
              cs:Office2013LightGray.Background="Transparent"
              cs:Office2016Black.Background="Transparent"
              cs:Office2016Colorful.Background="Transparent"
              cs:Office2016White.Background="Transparent"
             >
            <Border UseLayoutRounding="True">
                <ContentControl Focusable="False" Template="{TemplateBinding BorderTemplate}"/>
            </Border>
            <dxei:CellEditor x:Name="cell"
                             Focusable="False"
                             TextElement.Foreground="{TemplateBinding Foreground}"/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:TokenEditorThemeKey ResourceKey=TokenContainerTemplate}" TargetType="{x:Type ContentControl}">
        <Grid x:Name="grid" Margin="0,1,1,1">
            <Border x:Name="default"
                    Background="#3FC6C6C6"
                    cs:Name="Border_0004"
                    cs:Office2013DarkGray.Background="#FFE0E0E0"
                    cs:Office2013LightGray.Background="#FFE0E0E0"
                    cs:Office2016Black.Background="#30000000"
                    cs:Office2016Colorful.Background="#30000000"
                    cs:Office2016White.Background="#3FC6C6C6"
                   />
            <Border x:Name="hover"
                    Background="#FFCDE6F7"
                    cs:Name="Border_0005"
                    Opacity="0"
                    cs:Office2013DarkGray.Background="#FFCDE6F7"
                    cs:Office2013LightGray.Background="#FFCDE6F7"
                    cs:Office2016Black.Background="#60000000"
                    cs:Office2016Colorful.Background="#47000000"
                    cs:Office2016White.Background="#FFCDE6F7"
                   />
            <Border x:Name="pressed"
                    Background="#FFB1D6F0"
                    cs:Name="Border_0006"
                    Opacity="0"
                    cs:Office2013DarkGray.Background="#FFB1D6F0"
                    cs:Office2013LightGray.Background="#FFB1D6F0"
                    cs:Office2016Black.Background="#7B000000"
                    cs:Office2016Colorful.Background="#68000000"
                    cs:Office2016White.Background="#FFB1D6F0"
                   />
            <Border x:Name="editable"
                    Background="#00FFFFFF"
                    cs:Name="Border_0007"
                    Opacity="0"
                    cs:Office2013DarkGray.Background="#00FFFFFF"
                    cs:Office2013LightGray.Background="#00FFFFFF"
                    cs:Office2016Black.Background="#00000000"
                    cs:Office2016Colorful.Background="#00000000"
                    cs:Office2016White.Background="#00FFFFFF"
                   />
            <Border x:Name="focused"
                    Background="#FFB1D6F0"
                    BorderBrush="#FF0072C6"
                    BorderThickness="1"
                    cs:Name="Border_0009"
                    Opacity="0"
                    cs:Office2013DarkGray.Background="#FFB1D6F0"
                    cs:Office2013DarkGray.BorderBrush="#FF0072C6"
                    cs:Office2013LightGray.Background="#FFB1D6F0"
                    cs:Office2013LightGray.BorderBrush="#FF0072C6"
                    cs:Office2016Black.Background="#7B000000"
                    cs:Office2016Black.BorderBrush="#FF404040"
                    cs:Office2016Colorful.Background="#68000000"
                    cs:Office2016Colorful.BorderBrush="#FF404040"
                    cs:Office2016White.Background="#FFB1D6F0"
                    cs:Office2016White.BorderBrush="#FF0072C6"
                   />
            <Border x:Name="focusedunselected"
                    BorderBrush="#FF0072C6"
                    BorderThickness="1"
                    cs:Name="Border_0010"
                    Opacity="0"
                    cs:Office2013DarkGray.BorderBrush="#FF0072C6"
                    cs:Office2013LightGray.BorderBrush="#FF0072C6"
                    cs:Office2016Black.BorderBrush="#FF404040"
                    cs:Office2016Colorful.BorderBrush="#FF404040"
                    cs:Office2016White.BorderBrush="#FF0072C6"
                   />
            <ContentPresenter/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="MinHeight"
                        TargetName="grid"
                        Value="40"/>
            </Trigger>
            <DataTrigger Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Opacity"
                        TargetName="default"
                        Value="0"/>
                <Setter Property="Opacity"
                        TargetName="hover"
                        Value="1"/>
                <Setter Property="Opacity"
                        TargetName="pressed"
                        Value="0"/>
                <Setter Property="Opacity"
                        TargetName="editable"
                        Value="0"/>
                <Setter Property="Opacity"
                        TargetName="focused"
                        Value="0"/>
                <Setter Property="Opacity"
                        TargetName="focusedunselected"
                        Value="0"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsSelected, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Opacity"
                        TargetName="default"
                        Value="0"/>
                <Setter Property="Opacity"
                        TargetName="hover"
                        Value="0"/>
                <Setter Property="Opacity"
                        TargetName="pressed"
                        Value="1"/>
                <Setter Property="Opacity"
                        TargetName="editable"
                        Value="0"/>
                <Setter Property="Opacity"
                        TargetName="focused"
                        Value="0"/>
                <Setter Property="Opacity"
                        TargetName="focusedunselected"
                        Value="0"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsSelected, RelativeSource={RelativeSource Self}}" Value="True"/>
                    <Condition Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsTokenFocused, RelativeSource={RelativeSource Self}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Opacity"
                        TargetName="default"
                        Value="0"/>
                <Setter Property="Opacity"
                        TargetName="hover"
                        Value="0"/>
                <Setter Property="Opacity"
                        TargetName="pressed"
                        Value="0"/>
                <Setter Property="Opacity"
                        TargetName="editable"
                        Value="0"/>
                <Setter Property="Opacity"
                        TargetName="focused"
                        Value="1"/>
                <Setter Property="Opacity"
                        TargetName="focusedunselected"
                        Value="0"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsSelected, RelativeSource={RelativeSource Self}}" Value="False"/>
                    <Condition Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsTokenFocused, RelativeSource={RelativeSource Self}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Opacity"
                        TargetName="focused"
                        Value="0"/>
                <Setter Property="Opacity"
                        TargetName="focusedunselected"
                        Value="1"/>
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsEditorActivated, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Opacity"
                        TargetName="default"
                        Value="0"/>
                <Setter Property="Opacity"
                        TargetName="hover"
                        Value="0"/>
                <Setter Property="Opacity"
                        TargetName="pressed"
                        Value="0"/>
                <Setter Property="Opacity"
                        TargetName="editable"
                        Value="1"/>
                <Setter Property="Opacity"
                        TargetName="focused"
                        Value="0"/>
                <Setter Property="Opacity"
                        TargetName="focusedunselected"
                        Value="0"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{dxet:TokenEditorThemeKey ResourceKey=DeleteButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Root"
                            Background="Transparent"
                            cs:Name="Border_0003"
                            Padding="3,3,4,3"
                            cs:Office2013DarkGray.Background="Transparent"
                            cs:Office2013LightGray.Background="Transparent"
                            cs:Office2016Black.Background="Transparent"
                            cs:Office2016Colorful.Background="Transparent"
                            cs:Office2016White.Background="Transparent"
                           >
                        <Path x:Name="Path"
                              cs:Name="Path_0001"
                              Data="F1 M 0,0L 1,4.76837e-007L 3.5,2.5L 6,1.90735e-006L 7,1.90735e-006L 7,1L 4.5,3.5L 7,6L 7,7L 6,7L 3.5,4.5L 1,7L 2.86102e-006,7L 2.86102e-006,6L 2.5,3.5L 6.12323e-017,1L 0,0 Z "
                              Fill="#BF333333"
                              Height="7"
                              Stretch="Fill"
                              Width="7"
                              cs:Office2013DarkGray.Fill="#BF333333"
                              cs:Office2013LightGray.Fill="#BF333333"
                              cs:Office2016Black.Fill="#BA000000"
                              cs:Office2016Colorful.Fill="#87000000"
                              cs:Office2016White.Fill="#BF333333"
                             />
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter cs:Name="Setter_0009"
                                    Property="Fill"
                                    TargetName="Path"
                                    Value="#BF333333"
                                    cs:Office2013DarkGray.Value="#BF333333"
                                    cs:Office2013LightGray.Value="#BF333333"
                                    cs:Office2016Black.Value="#BA000000"
                                    cs:Office2016Colorful.Value="#87000000"
                                    cs:Office2016White.Value="#BF333333"
                                   />
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter cs:Name="Setter_0010"
                                    Property="Fill"
                                    TargetName="Path"
                                    Value="#FF0072C6"
                                    cs:Office2013DarkGray.Value="#FF0072C6"
                                    cs:Office2013LightGray.Value="#FF0072C6"
                                    cs:Office2016Black.Value="#BA000000"
                                    cs:Office2016Colorful.Value="#BA000000"
                                    cs:Office2016White.Value="#FF0072C6"
                                   />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter cs:Name="Setter_0011"
                                    Property="Fill"
                                    TargetName="Path"
                                    Value="#FF0072C6"
                                    cs:Office2013DarkGray.Value="#FF0072C6"
                                    cs:Office2013LightGray.Value="#FF0072C6"
                                    cs:Office2016Black.Value="#BA000000"
                                    cs:Office2016Colorful.Value="#BA000000"
                                    cs:Office2016White.Value="#FF0072C6"
                                   />
                        </Trigger>
                        <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                            <Setter Property="Padding"
                                    TargetName="Root"
                                    Value="10"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>