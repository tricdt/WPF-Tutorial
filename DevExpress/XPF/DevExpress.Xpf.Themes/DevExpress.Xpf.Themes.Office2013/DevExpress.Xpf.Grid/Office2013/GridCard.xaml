<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
                    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
                    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
                    xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ExpandButtonTemplate}" TargetType="{x:Type dx:ToggleStateButton}">
        <Grid x:Name="Grid1"
              Background="#00000000"
              cs:Name="Grid_0001"
              Height="21"
              SnapsToDevicePixels="True"
              Width="21"
              cs:Office2013DarkGray.Background="#00000000"
              cs:Office2013LightGray.Background="#00000000"
              cs:Office2016Black.Background="#00000001"
              cs:Office2016Colorful.Background="#00000000"
              cs:Office2016White.Background="#00000000"
             >
            <Path x:Name="GlyphExpanded"
                  cs:Name="Path_0001"
                  Data="F1 M 0,0L 1,0L 1,1L 2,1L 2,2L 3,2L 3,3L 4,3L 4,2L 5,2L 5,1L 6,1L 6,0L 7,0L 7,3L 6,3L 6,4L 5,4L 5,5L 4,5L 4,6L 3,6L 3,5L 2,5L 2,4L 1,4L 1,3L 0,3L 0,0 Z  "
                  Fill="#FF666666"
                  Height="6"
                  Margin="0,1,0,0"
                  Stretch="Fill"
                  Width="7"
                  cs:Office2013DarkGray.Fill="#FF666666"
                  cs:Office2013LightGray.Fill="#FF666666"
                  cs:Office2016Black.Fill="#BA000000"
                  cs:Office2016Colorful.Fill="#87000000"
                  cs:Office2016White.Fill="#FF666666"
                 />
            <Path x:Name="GlyphCollapsed"
                  cs:Name="Path_0002"
                  Data="F1 M 0,3L 1,3L 1,2L 2,2L 2,1L 3,1L 3,0L 4,0L 4,1L 5,1L 5,2L 6,2L 6,3L 7,3L 7,6L 6,6L 6,5L 5,5L 5,4L 4,4L 4,3L 3,3L 3,4L 2,4L 2,5L 1,5L 1,6L 0,6L 0,3 Z "
                  Fill="#FF666666"
                  Height="6"
                  Stretch="Fill"
                  Visibility="Collapsed"
                  Width="7"
                  cs:Office2013DarkGray.Fill="#FF666666"
                  cs:Office2013LightGray.Fill="#FF666666"
                  cs:Office2016Black.Fill="#BA000000"
                  cs:Office2016Colorful.Fill="#87000000"
                  cs:Office2016White.Fill="#FF666666"
                 />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter cs:Name="Setter_0001"
                        Property="Fill"
                        TargetName="GlyphCollapsed"
                        Value="#FF2A8DD4"
                        cs:Office2013DarkGray.Value="#FF2B579A"
                        cs:Office2013LightGray.Value="#FF19478A"
                        cs:Office2016Black.Value="#BA000000"
                        cs:Office2016Colorful.Value="#BA000000"
                        cs:Office2016White.Value="#FF2A8DD4"
                       />
                <Setter cs:Name="Setter_0002"
                        Property="Fill"
                        TargetName="GlyphExpanded"
                        Value="#FF2A8DD4"
                        cs:Office2013DarkGray.Value="#FF2B579A"
                        cs:Office2013LightGray.Value="#FF19478A"
                        cs:Office2016Black.Value="#BA000000"
                        cs:Office2016Colorful.Value="#BA000000"
                        cs:Office2016White.Value="#FF2A8DD4"
                       />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter cs:Name="Setter_0003"
                        Property="Fill"
                        TargetName="GlyphCollapsed"
                        Value="#FF0072C6"
                        cs:Office2013DarkGray.Value="#FF333333"
                        cs:Office2013LightGray.Value="#FF19478A"
                        cs:Office2016Black.Value="#BA000000"
                        cs:Office2016Colorful.Value="#BA000000"
                        cs:Office2016White.Value="#FF0072C6"
                       />
                <Setter cs:Name="Setter_0004"
                        Property="Fill"
                        TargetName="GlyphExpanded"
                        Value="#FF0072C6"
                        cs:Office2013DarkGray.Value="#FF333333"
                        cs:Office2013LightGray.Value="#FF19478A"
                        cs:Office2016Black.Value="#BA000000"
                        cs:Office2016Colorful.Value="#BA000000"
                        cs:Office2016White.Value="#FF0072C6"
                       />
            </Trigger>
            <DataTrigger Binding="{Binding Path=SelectionState}" Value="Selected">
                <Setter cs:Name="Setter_0005"
                        Property="Fill"
                        TargetName="GlyphCollapsed"
                        Value="#FF000000"
                        cs:Office2013DarkGray.Value="#FF000000"
                        cs:Office2013LightGray.Value="#FF000000"
                        cs:Office2016Black.Value="#BA000000"
                        cs:Office2016Colorful.Value="#BA000000"
                        cs:Office2016White.Value="#FF000000"
                       />
                <Setter cs:Name="Setter_0006"
                        Property="Fill"
                        TargetName="GlyphExpanded"
                        Value="#FF000000"
                        cs:Office2013DarkGray.Value="#FF000000"
                        cs:Office2013LightGray.Value="#FF000000"
                        cs:Office2016Black.Value="#BA000000"
                        cs:Office2016Colorful.Value="#BA000000"
                        cs:Office2016White.Value="#FF000000"
                       />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=SelectionState}" Value="Focused">
                <Setter cs:Name="Setter_0007"
                        Property="Fill"
                        TargetName="GlyphCollapsed"
                        Value="#FF0072C6"
                        cs:Office2013DarkGray.Value="#FF333333"
                        cs:Office2013LightGray.Value="#FF19478A"
                        cs:Office2016Black.Value="#BA000000"
                        cs:Office2016Colorful.Value="#BA000000"
                        cs:Office2016White.Value="#FF0072C6"
                       />
                <Setter cs:Name="Setter_0008"
                        Property="Fill"
                        TargetName="GlyphExpanded"
                        Value="#FF0072C6"
                        cs:Office2013DarkGray.Value="#FF333333"
                        cs:Office2013LightGray.Value="#FF19478A"
                        cs:Office2016Black.Value="#BA000000"
                        cs:Office2016Colorful.Value="#BA000000"
                        cs:Office2016White.Value="#FF0072C6"
                       />
            </DataTrigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Visibility"
                        TargetName="GlyphCollapsed"
                        Value="Visible"/>
                <Setter Property="Visibility"
                        TargetName="GlyphExpanded"
                        Value="Hidden"/>
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Width"
                        TargetName="Grid1"
                        Value="44"/>
                <Setter Property="Height"
                        TargetName="Grid1"
                        Value="44"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{dxgt:CardTemplatesThemeKey ResourceKey=CardStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="dxg:GridViewBase.IsFocusedRow" Value="False"/>
                </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Property="dxg:GridViewBase.IsFocusedRow" Value="True"/>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ContainerTemplate}" TargetType="{x:Type ContentControl}">
        <Grid x:Name="Root">
            <Border x:Name="Focus"
                    Background="#FF0072C6"
                    cs:Name="Border_0008"
                    Margin="-2"
                    Opacity="0"
                    cs:Office2013DarkGray.Background="#FF0072C6"
                    cs:Office2013LightGray.Background="#FF0072C6"
                    cs:Office2016Black.Background="#00000000"
                    cs:Office2016Colorful.Background="#00000000"
                    cs:Office2016White.Background="#FF0072C6"
                   />
            <Border x:Name="Border"
                    Background="#FFFFFFFF"
                    BorderBrush="#FFA5ACB5"
                    BorderThickness="1"
                    cs:Name="Border_0010"
                    Grid.RowSpan="1"
                    cs:Office2013DarkGray.Background="#FFFFFFFF"
                    cs:Office2013DarkGray.BorderBrush="#FFA5ACB5"
                    cs:Office2013LightGray.Background="#FFFFFFFF"
                    cs:Office2013LightGray.BorderBrush="#FFA5ACB5"
                    cs:Office2016Black.Background="#FFB2B2B2"
                    cs:Office2016Black.BorderBrush="#FF444444"
                    cs:Office2016Colorful.Background="#FFFFFFFF"
                    cs:Office2016Colorful.BorderBrush="#FFA6A6A6"
                    cs:Office2016White.Background="#FFFFFFFF"
                    cs:Office2016White.BorderBrush="#FFA5ACB5"
                   >
                <ContentPresenter/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="dxg:GridViewBase.IsFocusedRow" Value="False"/>
                </MultiTrigger.Conditions>
            </MultiTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:RowData.RowData).SelectionState, RelativeSource={RelativeSource TemplatedParent}}" Value="Focused">
                <Setter cs:Name="Setter_0025"
                        Property="BorderBrush"
                        TargetName="Border"
                        Value="#FF0072C6"
                        cs:Office2013DarkGray.Value="#FF0072C6"
                        cs:Office2013LightGray.Value="#FF0072C6"
                        cs:Office2016Black.Value="#FF444444"
                        cs:Office2016Colorful.Value="#8A000000"
                        cs:Office2016White.Value="#FF0072C6"
                       />
                <Setter cs:Name="Setter_0026"
                        Property="Background"
                        TargetName="Border"
                        Value="#FFFFFFFF"
                        cs:Office2013DarkGray.Value="#FFFFFFFF"
                        cs:Office2013LightGray.Value="#FFFFFFFF"
                        cs:Office2016Black.Value="#FFB2B2B2"
                        cs:Office2016Colorful.Value="#FFFFFFFF"
                        cs:Office2016White.Value="#FFFFFFFF"
                       />
                <Setter Property="Opacity"
                        TargetName="Focus"
                        Value="0.25"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:RowData.RowData).SelectionState, RelativeSource={RelativeSource TemplatedParent}}" Value="Selected">
                <Setter cs:Name="Setter_0027"
                        Property="BorderBrush"
                        TargetName="Border"
                        Value="#FF0072C6"
                        cs:Office2013DarkGray.Value="#FF0072C6"
                        cs:Office2013LightGray.Value="#FF0072C6"
                        cs:Office2016Black.Value="#FF444444"
                        cs:Office2016Colorful.Value="#8A000000"
                        cs:Office2016White.Value="#FF0072C6"
                       />
                <Setter cs:Name="Setter_0028"
                        Property="Background"
                        TargetName="Border"
                        Value="#FFFFFFFF"
                        cs:Office2013DarkGray.Value="#FFFFFFFF"
                        cs:Office2013LightGray.Value="#FFFFFFFF"
                        cs:Office2016Black.Value="#FFB2B2B2"
                        cs:Office2016Colorful.Value="#FFFFFFFF"
                        cs:Office2016White.Value="#FFFFFFFF"
                       />
                <Setter Property="Opacity"
                        TargetName="Focus"
                        Value="0.25"/>
            </DataTrigger>
            <Trigger Property="dxg:GridViewBase.IsFocusedRow" Value="True"></Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{dxgt:GridCardThemeKey ResourceKey=HeaderPresenterStyle}" TargetType="{x:Type dxg:GridCardHeaderContentPresenter}">
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="{dxgt:GridCardThemeKey ResourceKey=ContentExpandButtonStyle}" TargetType="{x:Type dxg:GridCardExpandButton}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="1,0,0,0"/>
    </Style>

    <Style x:Key="{dxgt:GridCardThemeKey ResourceKey=ContentPresenterStyle}" TargetType="{x:Type dxg:GridCardContentPresenter}">
        <Setter Property="Margin" Value="11"/>
    </Style>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=HeaderContentTemplate}" TargetType="{x:Type ContentControl}">
        <ContentPresenter x:Name="ContentPresenter1" Margin="11,3,11,3"/>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Margin"
                        TargetName="ContentPresenter1"
                        Value="12,5,12,5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ExpanderContentTemplate}" TargetType="{x:Type ContentControl}">
        <ContentPresenter/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=DataContentTemplate}" TargetType="{x:Type ContentControl}">
        <Grid>
            <Border x:Name="Root"
                    Background="#FFFFFFFF"
                    cs:Name="Border_0004"
                    cs:Office2013DarkGray.Background="#FFE3E3E3"
                    cs:Office2013LightGray.Background="#FFF6F6F6"
                    cs:Office2016Black.Background="#FFB2B2B2"
                    cs:Office2016Colorful.Background="#FFFFFFFF"
                    cs:Office2016White.Background="#FFFFFFFF"
                   >
                <ContentPresenter/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="dxg:GridViewBase.IsFocusedRow" Value="False"/>
                </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Property="dxg:GridViewBase.IsFocusedRow" Value="True">
                <Setter cs:Name="Setter_0010"
                        Property="Background"
                        TargetName="Root"
                        Value="#FFFFFFFF"
                        cs:Office2013DarkGray.Value="#FFE3E3E3"
                        cs:Office2013LightGray.Value="#FFF6F6F6"
                        cs:Office2016Black.Value="#FFB2B2B2"
                        cs:Office2016Colorful.Value="#FFFFFFFF"
                        cs:Office2016White.Value="#FFFFFFFF"
                       />
            </Trigger>
            <DataTrigger Binding="{Binding Path=(dxg:RowData.RowData).SelectionState, RelativeSource={RelativeSource TemplatedParent}}" Value="Focused"></DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:RowData.RowData).SelectionState, RelativeSource={RelativeSource TemplatedParent}}" Value="Selected"></DataTrigger>
            <DataTrigger Binding="{Binding Path=IsExpanded}" Value="False"/>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=HeaderPanelTemplate}" TargetType="{x:Type ContentControl}">
        <Border x:Name="Root"
                Background="#FFF0F0F0"
                cs:Name="Border_0006"
                cs:Office2013DarkGray.Background="#FFE3E3E3"
                cs:Office2013LightGray.Background="#FFF6F6F6"
                cs:Office2016Black.Background="#FFB2B2B2"
                cs:Office2016Colorful.Background="#FFF0F0F0"
                cs:Office2016White.Background="#FFF0F0F0"
               >
            <Border x:Name="Border"
                    BorderBrush="#FFA5ACB5"
                    BorderThickness="0,0,0,1"
                    cs:Name="Border_0007"
                    cs:Office2013DarkGray.BorderBrush="#FFA5ACB5"
                    cs:Office2013LightGray.BorderBrush="#FFA5ACB5"
                    cs:Office2016Black.BorderBrush="#FF444444"
                    cs:Office2016Colorful.BorderBrush="#FFA6A6A6"
                    cs:Office2016White.BorderBrush="#FFA5ACB5"
                   >
                <ContentPresenter/>
            </Border>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="dxg:GridViewBase.IsFocusedRow" Value="True"></Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="dxg:GridViewBase.IsFocusedRow" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter cs:Name="Setter_0022"
                        Property="Background"
                        TargetName="Root"
                        Value="#FFF0F0F0"
                        cs:Office2013DarkGray.Value="#FFCDE6F7"
                        cs:Office2013LightGray.Value="#FFCDE6F7"
                        cs:Office2016Black.Value="#FF969696"
                        cs:Office2016Colorful.Value="#FFC5C5C5"
                        cs:Office2016White.Value="#FFF0F0F0"
                       />
            </MultiTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:RowData.RowData).SelectionState, RelativeSource={RelativeSource TemplatedParent}}" Value="Focused">
                <Setter cs:Name="Setter_0023"
                        Property="Background"
                        TargetName="Root"
                        Value="#FFCDE6F7"
                        cs:Office2013DarkGray.Value="#FFCDE6F7"
                        cs:Office2013LightGray.Value="#FFCDE6F7"
                        cs:Office2016Black.Value="#FF696969"
                        cs:Office2016Colorful.Value="#FFAEAEAE"
                        cs:Office2016White.Value="#FFCDE6F7"
                       />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:RowData.RowData).SelectionState, RelativeSource={RelativeSource TemplatedParent}}" Value="Selected">
                <Setter cs:Name="Setter_0024"
                        Property="Background"
                        TargetName="Root"
                        Value="#FFF0F0F0"
                        cs:Office2013DarkGray.Value="#7FCDE6F7"
                        cs:Office2013LightGray.Value="#7FCDE6F7"
                        cs:Office2016Black.Value="#FF808080"
                        cs:Office2016Colorful.Value="#FFC5C5C5"
                        cs:Office2016White.Value="#FFF0F0F0"
                       />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsExpanded}" Value="False">
                <Setter Property="BorderThickness"
                        TargetName="Border"
                        Value="0"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ControlTemplate}">
        <ContentControl x:Name="card"
                        Style="{Binding Path=(dxg:GridControl.ActiveView).CardStyle, RelativeSource={RelativeSource TemplatedParent}}"
                        Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ContainerTemplate}}">
            <dxg:GridCardPanel x:Name="gridCardPanel" IsExpanded="{Binding Path=IsExpanded}">
                <dxg:GridCardPanel.Header>
                    <dxg:GridCardHeaderControl x:Name="cardHeader"
                                               cs:Name="GridCardHeaderControl_0001"
                                               Foreground="#FF444444"
                                               cs:Office2013DarkGray.Foreground="#FF666666"
                                               cs:Office2013LightGray.Foreground="#FF666666"
                                               cs:Office2016Black.Foreground="#E3000000"
                                               cs:Office2016Colorful.Foreground="#E3000000"
                                               cs:Office2016White.Foreground="#FF444444"
                                              >
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ContentControl Grid.Column="0" Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=HeaderContentTemplate}}">
                                <dxg:GridCardHeaderContentPresenter Style="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=HeaderPresenterStyle}}"/>
                            </ContentControl>
                            <ContentControl Grid.Column="1"
                                            Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ExpanderContentTemplate}}"
                                            Visibility="{Binding Path=View.ShowCardExpandButton, Converter={StaticResource BoolToVisibilityConverter}}">
                                <dxg:GridCardExpandButton Style="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ContentExpandButtonStyle}}"/>
                            </ContentControl>
                        </Grid>
                    </dxg:GridCardHeaderControl>
                </dxg:GridCardPanel.Header>
                <dxg:GridCardPanel.Body>
                    <ContentControl Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=DataContentTemplate}}">
                        <dxg:GridCardContentPresenter x:Name="presenter" Style="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ContentPresenterStyle}}"/>
                    </ContentControl>
                </dxg:GridCardPanel.Body>
            </dxg:GridCardPanel>
        </ContentControl>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=View.CollapsedCardOrientation}" Value="Vertical">
                <Setter Property="RotateOnCollapse"
                        TargetName="gridCardPanel"
                        Value="True"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=SelectionState}" Value="Selected">
                <Setter cs:Name="Setter_0018"
                        Property="Foreground"
                        TargetName="cardHeader"
                        Value="#FF444444"
                        cs:Office2013DarkGray.Value="#FF2B579A"
                        cs:Office2013LightGray.Value="#FF2B579A"
                        cs:Office2016Black.Value="#E3FFFFFF"
                        cs:Office2016Colorful.Value="#E3000000"
                        cs:Office2016White.Value="#FF444444"
                       />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=SelectionState}" Value="Focused">
                <Setter cs:Name="Setter_0019"
                        Property="Foreground"
                        TargetName="cardHeader"
                        Value="#FF444444"
                        cs:Office2013DarkGray.Value="#FF2B579A"
                        cs:Office2013LightGray.Value="#FF2B579A"
                        cs:Office2016Black.Value="#FFFFFFFF"
                        cs:Office2016Colorful.Value="#E3000000"
                        cs:Office2016White.Value="#FF444444"
                       />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="LoadingIndicator" TargetType="{x:Type ProgressBar}">
        <Grid x:Name="Root">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Determinate"/>
                    <VisualState x:Name="Indeterminate">
                        <Storyboard RepeatBehavior="Forever">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Ellipse1" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0.38"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.26"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.26"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.38"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.62"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0.62"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Ellipse2" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0.62"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.38"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.26"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.26"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.38"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.62"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Ellipse3" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.62"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.38"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.26"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.26"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.38"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0.62"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Ellipse4" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.62"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.38"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.26"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.26"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0.38"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="0.62"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Ellipse5" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.62"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.38"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.26"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0.26"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="0.38"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0.62"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
                <StackPanel Orientation="Horizontal">
                    <Ellipse x:Name="Ellipse1"
                             Fill="{TemplateBinding Foreground}"
                             Height="5"
                             Margin="2"
                             Width="5"/>
                    <Ellipse x:Name="Ellipse2"
                             Fill="{TemplateBinding Foreground}"
                             Height="5"
                             Margin="2"
                             Width="5"/>
                    <Ellipse x:Name="Ellipse3"
                             Fill="{TemplateBinding Foreground}"
                             Height="5"
                             Margin="2"
                             Width="5"/>
                    <Ellipse x:Name="Ellipse4"
                             Fill="{TemplateBinding Foreground}"
                             Height="5"
                             Margin="2"
                             Width="5"/>
                    <Ellipse x:Name="Ellipse5"
                             Fill="{TemplateBinding Foreground}"
                             Height="5"
                             Margin="2"
                             Width="5"/>
                </StackPanel>
            </Grid>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=LoadingCardTemplate}" TargetType="dxg:LoadingCardControl">
        <Grid x:Name="Root"
              Margin="1"
              MinHeight="216"
              MinWidth="216">
            <ProgressBar x:Name="Indicator"
                         Foreground="#FF0072C6"
                         HorizontalAlignment="Center"
                         IsIndeterminate="{Binding ShowLoadingIndicator}"
                         Template="{StaticResource LoadingIndicator}"
                         VerticalAlignment="Center"
                         Visibility="{Binding ShowLoadingIndicator, Converter={StaticResource BoolToVisibilityConverter}}"
                         cs:Office2013DarkGray.Foreground="#FF333333"
                         cs:Office2013LightGray.Foreground="#FF19478A"
                         cs:Office2016Black.Foreground="#FFFFFFFF"
                         cs:Office2016Colorful.Foreground="#FF0072C6"
                         cs:Office2016White.Foreground="#FF0072C6"
                        />
            <dxg:LoadingRowButton Click="{DXEvent 'LoadMoreRows()'}"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Visibility="{Binding AllowLoadMore, Converter={StaticResource BoolToVisibilityConverter}}">
                <StackPanel Margin="15,0,9,1" Orientation="Horizontal">
                    <Label Content="{dxg:GridControlStringId LoadingRowLoadMore}"/>
                    <Grid Height="16"
                          Margin="3"
                          Width="16">
                        <Path Data="F1 M 10,5L 5,10L 0,5L 3,5L 3,3L 7,3L 7,5L 10,5 Z M 3,2L 3,0L 7,0L 7,2L 3,2 Z "
                              Fill="#FF3C3C3C"
                              Height="10"
                              HorizontalAlignment="Stretch"
                              Margin="0,1,0,0"
                              Stretch="Fill"
                              VerticalAlignment="Stretch"
                              Width="10"
                              cs:Office2013DarkGray.Fill="#FF333333"
                              cs:Office2013LightGray.Fill="#FF3C3C3C"
                              cs:Office2016Black.Fill="#FF3C3C3C"
                              cs:Office2016Colorful.Fill="#FF3C3C3C"
                              cs:Office2016White.Fill="#FF3C3C3C"
                             />
                    </Grid>
                </StackPanel>
            </dxg:LoadingRowButton>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=LoadingCardErrorTemplate}" TargetType="dxg:LoadingCardControl">
        <Grid x:Name="Root"
              Margin="1"
              MinHeight="216"
              MinWidth="216">
            <Grid HorizontalAlignment="Center"
                  Margin="12,0,12,0"
                  MaxWidth="216"
                  VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Path Data="F1 M 7,0C 10.866,0 14,3.13401 14,7C 14,10.866 10.866,14 7,14C 3.13401,14 -6.35783e-007,10.866 -6.35783e-007,7C -6.35783e-007,3.13401 3.13401,0 7,0 Z M 2.75736,4.17157L 5.58579,7L 2.75736,9.82843L 4.17157,11.2426L 7,8.41422L 9.82843,11.2426L 11.2426,9.82843L 8.41421,7L 11.2426,4.17157L 9.82843,2.75736L 7,5.58579L 4.17157,2.75736L 2.75736,4.17157 Z "
                      Fill="#FFCC0000"
                      Height="14"
                      HorizontalAlignment="Center"
                      Margin="4"
                      Stretch="Fill"
                      VerticalAlignment="Top"
                      Width="14"
                      cs:Office2013DarkGray.Fill="#FFCC0000"
                      cs:Office2013LightGray.Fill="#FFCC0000"
                      cs:Office2016Black.Fill="#FFCC0000"
                      cs:Office2016Colorful.Fill="#FFCC0000"
                      cs:Office2016White.Fill="#FFCC0000"
                     />
                <StackPanel Grid.Column="1" Orientation="Vertical">
                    <TextBlock HorizontalAlignment="Left"
                               Margin="4,3,4,3"
                               Text="{Binding ErrorText}"
                               TextWrapping="Wrap"/>
                    <TextBlock HorizontalAlignment="Center" Visibility="{Binding AllowLoadMore, Converter={StaticResource BoolToVisibilityConverter}}">
                        <dxe:HyperlinkEdit RequestNavigation="{DXEvent 'LoadMoreRows()'}" Text="{dxg:GridControlStringId LoadingRowRetry}"/>
                    </TextBlock>
                </StackPanel>
            </Grid>
        </Grid>
    </ControlTemplate>

</ResourceDictionary>