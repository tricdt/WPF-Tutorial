<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys" xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon" xmlns:dxri="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/internal" xmlns:dxrt="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/themekeys" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2016DarkGraySE.v24.1;component/Core/Core/Themes/UICore.xaml" />
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2016DarkGraySE.v24.1;component/Core/Core/Themes/Office2016DarkGraySE/PseudoWindow/PseudoWindowButtons.xaml" />
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2016DarkGraySE.v24.1;component/Ribbon/Office2016DarkGraySE/UICore.xaml" />
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2016DarkGraySE.v24.1;component/Ribbon/Office2016DarkGraySE/RibbonWindow/Buttons.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <!-- General  -->
  <ControlTemplate x:Key="RibbonBackstageButton">
    <Grid Background="Transparent" cs:id="Grid_0000">
      <Border x:Name="IsDefault" Background="#FF444444" cs:id="Border_0000" x:Uid="@Background=Backstage.Window.Background" />
      <Border x:Name="InnerBorder" HorizontalAlignment="Left" Margin="11,10,24,10" VerticalAlignment="Center">
        <Border x:Name="Circle" Background="Transparent" BorderBrush="#FFEFEFEF" BorderThickness="2" CornerRadius="96" Height="32" Width="32" cs:id="Border_0002" x:Uid="@BorderBrush=Backstage.Foreground">
          <Path x:Name="Content" Fill="#FFEFEFEF" Height="12" Style="{StaticResource UIShape.RibbonBack}" Width="16" cs:id="Path_0000" x:Uid="@Fill=Backstage.Foreground" />
        </Border>
      </Border>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="Common">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="Hover">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Background">
                <DiscreteObjectKeyFrame KeyTime="0">
                  <DiscreteObjectKeyFrame.Value>
                    <SolidColorBrush Color="#FF575757" x:Uid="@Color=Backstage.HoverBackground" />
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Background">
                <DiscreteObjectKeyFrame KeyTime="0">
                  <DiscreteObjectKeyFrame.Value>
                    <SolidColorBrush Color="#FF303030" x:Uid="@Color=Backstage.SelectionBackground" />
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Height" TargetName="Circle" Value="44" />
        <Setter Property="Width" TargetName="Circle" Value="44" />
        <Setter Property="Margin" TargetName="InnerBorder" Value="44,14,44,14" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxrt:BackstageThemeKey ResourceKey=HeaderAndButtonsBackground}" />
  <ControlTemplate x:Key="{dxrt:BackstageThemeKey ResourceKey=LeftPartBackground}" TargetType="{x:Type Control}">
    <Border Background="#FF444444" HorizontalAlignment="Stretch" MinWidth="128" VerticalAlignment="Stretch" cs:id="Border_0000" x:Uid="@Background=Backstage.Window.Background" />
  </ControlTemplate>
  <!-- ControlBox -->
  <Style x:Key="{dxrt:BackstageThemeKey ResourceKey=ControlBoxContainerStyle}" x:Shared="False" TargetType="{x:Type dxri:RibbonControlBoxContainer}">
    <Setter Property="Margin" Value="-1" />
    <Setter Property="dx:HeaderItemControl.CloseTemplateProvider">
      <Setter.Value>
        <dx:CloseHeaderItemControlTemplateProvider CloseGlyphTemplate="{DynamicResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonGlyph}}" HeaderItemControlStyle="{DynamicResource ResourceKey={dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonHeaderCloseButtonStyle}}" MouseOverBackgroundTemplate="{DynamicResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonBackgroundMouseOverState}}" MouseOverForeground="{DynamicResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonForegroundMouseOverState}}" NormalBackgroundTemplate="{DynamicResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonBackgroundNormalState}}" NormalForeground="{DynamicResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonForegroundNormalState}}" PressedBackgroundTemplate="{DynamicResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonBackgroundPressedState}}" PressedForeground="{DynamicResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonForegroundPressedState}}" />
      </Setter.Value>
    </Setter>
    <Setter Property="dx:HeaderItemControl.CommonTemplateProvider">
      <Setter.Value>
        <dx:CommonHeaderItemControlTemplateProvider HeaderItemControlStyle="{DynamicResource ResourceKey={dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonHeaderButtonStyle}}" MaximizeGlyphTemplate="{DynamicResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerMaximizeButtonGlyph}}" MinimizeGlyphTemplate="{DynamicResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerMinimizeButtonGlyph}}" MouseOverBackgroundTemplate="{DynamicResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonBackgroundMouseOverState}}" MouseOverForeground="{DynamicResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonForegroundMouseOverState}}" NormalBackgroundTemplate="{DynamicResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonBackgroundNormalState}}" NormalForeground="{DynamicResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonForegroundNormalState}}" PressedBackgroundTemplate="{DynamicResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonBackgroundPressedState}}" PressedForeground="{DynamicResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonForegroundPressedState}}" RestoreGlyphTemplate="{DynamicResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerRestoreButtonGlyph}}" />
      </Setter.Value>
    </Setter>
  </Style>
  <!-- Styles -->
  <Style x:Key="{dxrt:BackstageThemeKey ResourceKey=HeaderPresenterStyle}" TargetType="{x:Type dxri:BackstageViewHeaderPresenter}">
    <Setter Property="Margin" Value="0,8,0,0" />
    <Style.Triggers>
      <DataTrigger Binding="{Binding Path=BackstageViewControl.RibbonStyle, RelativeSource={RelativeSource Self}}" Value="Office2007">
        <Setter Property="Margin" Value="0,9,0,0" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxrt:BackstageThemeKey ResourceKey=BackstageViewBackGlyphTemplate}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="Margin" Value="0,12,0,12" />
    <Setter Property="Template" Value="{StaticResource RibbonBackstageButton}" />
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="dxr:BackstageViewContentHost.AnimationTime" Value="00:00:00.2" />
  </Style>
  <!-- Background -->
  <ControlTemplate x:Key="{dxrt:BackstageThemeKey ResourceKey=BackgroundTemplate}" TargetType="{x:Type ContentControl}">
    <Border Background="#FF666666" cs:id="Border_0000" x:Uid="@Background=Window.Background" />
  </ControlTemplate>
  <!-- Pane -->
  <ControlTemplate x:Key="{dxrt:BackstageThemeKey ResourceKey=TabPaneTemplate}" TargetType="{x:Type ContentControl}">
    <ContentPresenter />
  </ControlTemplate>
  <ControlTemplate x:Key="{dxrt:BackstageThemeKey ResourceKey=ControlPaneTemplate}" TargetType="{x:Type ContentControl}">
    <ContentPresenter />
  </ControlTemplate>
  <!-- Styles -->
  <Style x:Key="{dxrt:BackstageThemeKey ResourceKey=BackgroundGlyphStyle}" TargetType="{x:Type Image}">
    <Setter Property="HorizontalAlignment" Value="Right" />
    <Setter Property="Stretch" Value="None" />
    <Setter Property="VerticalAlignment" Value="Bottom" />
  </Style>
  <Style x:Key="{dxrt:BackstageThemeKey ResourceKey=BackgroundStyle}" TargetType="{x:Type ContentControl}">
    <Setter Property="Template" Value="{DynamicResource {dxrt:BackstageThemeKey ResourceKey=BackgroundTemplate}}" />
  </Style>
  <Style x:Key="{dxrt:BackstageThemeKey ResourceKey=TabPaneStyle}" TargetType="{x:Type ContentControl}">
    <Setter Property="Margin" Value="0,0,0,16" />
    <Setter Property="Template" Value="{DynamicResource {dxrt:BackstageThemeKey ResourceKey=TabPaneTemplate}}" />
  </Style>
  <Style x:Key="{dxrt:BackstageThemeKey ResourceKey=ControlPaneStyle}" TargetType="{x:Type ContentControl}">
    <Setter Property="Template" Value="{DynamicResource {dxrt:BackstageThemeKey ResourceKey=ControlPaneTemplate}}" />
  </Style>
  <Style x:Key="{dxrt:BackstageThemeKey ResourceKey=ItemsPresenterStyle}" TargetType="{x:Type ItemsPresenter}">
    <Setter Property="Margin" Value="1" />
  </Style>
</ResourceDictionary>