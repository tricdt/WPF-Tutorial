<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2016DarkGraySE.v24.1;component/Core/Core/Editors/Themes/Office2016DarkGraySE/ButtonEdit.xaml" />
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2016DarkGraySE.v24.1;component/Core/Core/Editors/Themes/Office2016DarkGraySE/UICore.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <!-- General -->
  <dxi:RenderTemplate x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=HoverBorderTemplate}">
    <dxi:RenderBorder Name="PART_Focus" BorderBrush="#FF000000" BorderThickness="1" Visibility="Collapsed" cs:id="RenderBorder_0000" x:Uid="@BorderBrush=Focused" />
    <dxi:RenderTemplate.Triggers>
      <dxi:RenderTrigger DependencyProperty="{x:Static dxei:ControlHelper.ShowFocusedStateProperty}" Value="True" ValueSource="Chrome">
        <dxi:RenderSetter Property="Visibility" TargetName="PART_Focus" Value="Visible" />
      </dxi:RenderTrigger>
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxe:EditorAppearanceProperties.FocusedBorderBrushProperty}" TargetName="PART_Focus" TargetProperty="BorderBrush" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxe:EditorAppearanceProperties.HasFocusedBorderBrushProperty}" Value="True" ValueSource="TemplatedParent" />
      </dxi:ConditionalRenderBinding>
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxe:BaseEdit.BorderThicknessProperty}" TargetName="PART_Focus" TargetProperty="BorderThickness" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasBorderThicknessProperty}" Value="True" ValueSource="TemplatedParent" />
      </dxi:ConditionalRenderBinding>
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxi:AppearanceOptions.CornerRadiusProperty}" TargetName="PART_Focus" TargetProperty="CornerRadius" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasCornerRadiusProperty}" Value="True" ValueSource="TemplatedParent" />
      </dxi:ConditionalRenderBinding>
    </dxi:RenderTemplate.Triggers>
  </dxi:RenderTemplate>
  <ControlTemplate x:Key="{dxet:BaseEditThemeKey ResourceKey=HoverBorderDecorationTemplate}" TargetType="Control">
    <dxi:Chrome dxei:ControlHelper.ShowFocusedState="{Binding Path=(dxei:ControlHelper.ShowFocusedState), RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" RenderTemplate="{StaticResource {dxet:InplaceBaseEditThemeKey ResourceKey=HoverBorderTemplate}}" />
  </ControlTemplate>
  <!-- Border -->
  <dxi:RenderTemplate x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=CommonBorderTemplate}">
    <dxi:RenderBorder Name="PART_Border" Background="#FFD4D4D4" BorderBrush="#FF444444" BorderThickness="1" cs:id="RenderBorder_0001" x:Uid="@Background=Editor.Background;BorderBrush=Border" />
    <dxi:RenderTemplate.Triggers>
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxe:BaseEdit.BorderThicknessProperty}" TargetName="PART_Border" TargetProperty="BorderThickness" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasBorderThicknessProperty}" Value="True" ValueSource="TemplatedParent" />
      </dxi:ConditionalRenderBinding>
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxi:AppearanceOptions.CornerRadiusProperty}" TargetName="PART_Border" TargetProperty="CornerRadius" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasCornerRadiusProperty}" Value="True" />
      </dxi:ConditionalRenderBinding>
      <dxi:RenderTrigger DependencyProperty="{x:Static dx:ThemeManager.IsTouchEnabledProperty}" Value="True" ValueSource="TemplatedParent">
        <dxi:RenderSetter Property="MinWidth" TargetName="PART_Border" Value="44" />
        <dxi:RenderSetter Property="MinHeight" TargetName="PART_Border" Value="44" />
      </dxi:RenderTrigger>
      <dxi:RenderTrigger DependencyProperty="{x:Static FrameworkElement.IsEnabledProperty}" Value="False" ValueSource="TemplatedParent">
        <dxi:RenderSetter Property="Opacity" TargetName="PART_Border" Value="0.35" />
      </dxi:RenderTrigger>
      <dxi:MultiRenderTrigger>
        <dxi:MultiRenderTrigger.Conditions>
          <dxi:RenderCondition DependencyProperty="{x:Static dxei:ControlHelper.IsReadOnlyProperty}" Value="True" ValueSource="TemplatedParent" />
          <dxi:RenderCondition DependencyProperty="{x:Static dxe:EditorAppearanceProperties.HasReadOnlyBorderBrushProperty}" Value="False" ValueSource="TemplatedParent" />
        </dxi:MultiRenderTrigger.Conditions>
        <dxi:RenderSetter Property="BorderBrush" TargetName="PART_Border" Value="{StaticResource {dxet:TextEditThemeKey ResourceKey=ReadOnlyBorder}}" />
      </dxi:MultiRenderTrigger>
      <dxi:MultiRenderTrigger>
        <dxi:MultiRenderTrigger.Conditions>
          <dxi:RenderCondition DependencyProperty="{x:Static dxei:ControlHelper.IsReadOnlyProperty}" Value="True" ValueSource="TemplatedParent" />
          <dxi:RenderCondition DependencyProperty="{x:Static dxe:EditorAppearanceProperties.HasReadOnlyBackgroundProperty}" Value="False" ValueSource="TemplatedParent" />
        </dxi:MultiRenderTrigger.Conditions>
        <dxi:RenderSetter Property="Background" TargetName="PART_Border" Value="{StaticResource {dxet:BaseEditThemeKey ResourceKey=ReadOnlyBackground}}" />
      </dxi:MultiRenderTrigger>
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxe:EditorAppearanceProperties.ReadOnlyBorderBrushProperty}" TargetName="PART_Border" TargetProperty="BorderBrush" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxe:EditorAppearanceProperties.HasReadOnlyBorderBrushProperty}" Value="True" ValueSource="TemplatedParent" />
        <dxi:RenderCondition DependencyProperty="{x:Static dxei:ControlHelper.IsReadOnlyProperty}" Value="True" ValueSource="TemplatedParent" />
      </dxi:ConditionalRenderBinding>
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxe:EditorAppearanceProperties.ReadOnlyBackgroundProperty}" TargetName="PART_Border" TargetProperty="Background" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxe:EditorAppearanceProperties.HasReadOnlyBackgroundProperty}" Value="True" ValueSource="TemplatedParent" />
        <dxi:RenderCondition DependencyProperty="{x:Static dxei:ControlHelper.IsReadOnlyProperty}" Value="True" ValueSource="TemplatedParent" />
      </dxi:ConditionalRenderBinding>
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxe:BaseEdit.BackgroundProperty}" TargetName="PART_Border" TargetProperty="Background" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxe:BaseEdit.BackgroundProperty}" Operator="Not" Value="{x:Null}" />
      </dxi:ConditionalRenderBinding>
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxe:BaseEdit.BorderBrushProperty}" TargetName="PART_Border" TargetProperty="BorderBrush" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxe:BaseEdit.BorderBrushProperty}" Operator="Not" Value="{x:Null}" />
      </dxi:ConditionalRenderBinding>
    </dxi:RenderTemplate.Triggers>
  </dxi:RenderTemplate>
  <!-- TextEdit -->
  <dxi:RenderTemplate x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=TextEditBorderTemplate}">
    <dxi:RenderBorder Name="PART_Border" Background="#FFD4D4D4" BorderBrush="#FF444444" BorderThickness="1" cs:id="RenderBorder_0001" x:Uid="@Background=Editor.Background;BorderBrush=Border" />
    <dxi:RenderTemplate.Triggers>
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxe:BaseEdit.BorderThicknessProperty}" TargetName="PART_Border" TargetProperty="BorderThickness" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasBorderThicknessProperty}" Value="True" ValueSource="TemplatedParent" />
      </dxi:ConditionalRenderBinding>
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxi:AppearanceOptions.CornerRadiusProperty}" TargetName="PART_Border" TargetProperty="CornerRadius" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasCornerRadiusProperty}" Value="True" ValueSource="TemplatedParent" />
      </dxi:ConditionalRenderBinding>
      <dxi:RenderTrigger DependencyProperty="{x:Static dx:ThemeManager.IsTouchEnabledProperty}" Value="True" ValueSource="TemplatedParent">
        <dxi:RenderSetter Property="MinWidth" TargetName="PART_Border" Value="44" />
        <dxi:RenderSetter Property="MinHeight" TargetName="PART_Border" Value="44" />
      </dxi:RenderTrigger>
      <dxi:RenderTrigger DependencyProperty="{x:Static FrameworkElement.IsEnabledProperty}" Value="False" ValueSource="TemplatedParent">
        <dxi:RenderSetter Property="Opacity" TargetName="PART_Border" Value="0.35" />
      </dxi:RenderTrigger>
      <dxi:RenderTrigger DependencyProperty="{x:Static dxei:ControlHelper.IsReadOnlyProperty}" Value="true" ValueSource="TemplatedParent">
        <dxi:RenderSetter Property="BorderBrush" TargetName="PART_Border" Value="{StaticResource {dxet:TextEditThemeKey ResourceKey=ReadOnlyBorder}}" />
      </dxi:RenderTrigger>
      <dxi:RenderTrigger DependencyProperty="{x:Static dxei:ControlHelper.IsReadOnlyProperty}" Value="true" ValueSource="TemplatedParent">
        <dxi:RenderSetter Property="Background" TargetName="PART_Border" Value="{StaticResource {dxet:TextEditThemeKey ResourceKey=ReadOnlyBackground}}" />
      </dxi:RenderTrigger>
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxe:EditorAppearanceProperties.ReadOnlyBorderBrushProperty}" TargetName="PART_Border" TargetProperty="BorderBrush" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxe:EditorAppearanceProperties.HasReadOnlyBorderBrushProperty}" Value="True" ValueSource="TemplatedParent" />
        <dxi:RenderCondition DependencyProperty="{x:Static dxei:ControlHelper.IsReadOnlyProperty}" Value="True" ValueSource="TemplatedParent" />
      </dxi:ConditionalRenderBinding>
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxe:EditorAppearanceProperties.ReadOnlyBackgroundProperty}" TargetName="PART_Border" TargetProperty="Background" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxe:EditorAppearanceProperties.HasReadOnlyBackgroundProperty}" Value="True" ValueSource="TemplatedParent" />
        <dxi:RenderCondition DependencyProperty="{x:Static dxei:ControlHelper.IsReadOnlyProperty}" Value="True" ValueSource="TemplatedParent" />
      </dxi:ConditionalRenderBinding>
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxe:BaseEdit.BackgroundProperty}" TargetName="PART_Border" TargetProperty="Background" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxe:BaseEdit.BackgroundProperty}" Operator="Not" Value="{x:Null}" />
      </dxi:ConditionalRenderBinding>
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxe:BaseEdit.BorderBrushProperty}" TargetName="PART_Border" TargetProperty="BorderBrush" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxe:BaseEdit.BorderBrushProperty}" Operator="Not" Value="{x:Null}" />
      </dxi:ConditionalRenderBinding>
    </dxi:RenderTemplate.Triggers>
  </dxi:RenderTemplate>
</ResourceDictionary>