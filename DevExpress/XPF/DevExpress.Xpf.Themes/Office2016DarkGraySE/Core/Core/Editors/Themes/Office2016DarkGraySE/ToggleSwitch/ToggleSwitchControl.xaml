<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2016DarkGraySE.v24.1;component/Core/Core/Editors/Themes/Office2016DarkGraySE/UICore.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <!-- General -->
  <dxi:RenderTemplate x:Key="{dxet:ToggleSwitchThemeKey ResourceKey=SwitchBorderTemplate}">
    <dxi:RenderBorder Name="IsDefault" Background="#FFC4C4C4" BorderBrush="#FF444444" BorderThickness="1" cs:id="RenderBorder_0001" x:Uid="@Background=Control.NeutralBackground;BorderBrush=Border" />
    <dxi:RenderTemplate.Triggers>
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxi:AppearanceOptions.BackgroundProperty}" TargetName="IsDefault" TargetProperty="Background" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasBackgroundProperty}" Value="True" ValueSource="TemplatedParent" />
      </dxi:ConditionalRenderBinding>
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxi:AppearanceOptions.BorderThicknessProperty}" TargetName="IsDefault" TargetProperty="BorderThickness" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasBorderThicknessProperty}" Value="True" ValueSource="TemplatedParent" />
      </dxi:ConditionalRenderBinding>
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxi:AppearanceOptions.BorderBrushProperty}" TargetName="IsDefault" TargetProperty="BorderBrush" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasBorderBrushProperty}" Value="True" ValueSource="TemplatedParent" />
      </dxi:ConditionalRenderBinding>
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxi:AppearanceOptions.CornerRadiusProperty}" TargetName="IsDefault" TargetProperty="CornerRadius" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxi:AppearanceOptions.HasCornerRadiusProperty}" Value="True" ValueSource="TemplatedParent" />
      </dxi:ConditionalRenderBinding>
      <dxi:RenderStateGroup Name="VisualStates">
        <dxi:RenderStateTrigger Name="Normal" />
        <dxi:RenderStateTrigger Name="MouseOver" />
      </dxi:RenderStateGroup>
      <dxi:RenderTrigger DependencyProperty="{x:Static ButtonBase.IsPressedProperty}" Value="True" ValueSource="TemplatedParent" />
      <dxi:RenderTrigger DependencyProperty="{x:Static dxe:ToggleSwitch.IsCheckedProperty}" Value="True" ValueSource="TemplatedParent">
        <dxi:RenderSetter Property="Background" TargetName="IsDefault" Value="#FFD4D4D4" cs:id="RenderSetter_0000" x:Uid="@Value=Editor.Background" />
      </dxi:RenderTrigger>
      <dxi:RenderTrigger DependencyProperty="{x:Static dxe:ToggleSwitch.IsFocusedProperty}" Value="True" ValueSource="TemplatedParent">
        <dxi:RenderSetter Property="BorderBrush" TargetName="IsDefault" Value="#FF262626" cs:id="RenderSetter_0001" x:Uid="@Value=ControlLight.Foreground" />
      </dxi:RenderTrigger>
      <dxi:RenderTrigger DependencyProperty="{x:Static dx:ThemeManager.IsTouchEnabledProperty}" Value="True" ValueSource="TemplatedParent">
        <dxi:RenderSetter Property="MinWidth" TargetName="IsDefault" Value="44" />
        <dxi:RenderSetter Property="MinHeight" TargetName="IsDefault" Value="44" />
      </dxi:RenderTrigger>
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxe:EditorAppearanceProperties.FocusedBorderBrushProperty}" TargetName="IsDefault" TargetProperty="BorderBrush" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxe:EditorAppearanceProperties.HasFocusedBorderBrushProperty}" Value="True" ValueSource="TemplatedParent" />
        <dxi:RenderCondition Property="IsFocused" Value="True" ValueSource="TemplatedParent" />
      </dxi:ConditionalRenderBinding>
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxe:EditorAppearanceProperties.CheckedStateBackgroundProperty}" TargetName="IsDefault" TargetProperty="Background" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxe:EditorAppearanceProperties.HasCheckedStateBackgroundProperty}" Value="True" ValueSource="TemplatedParent" />
        <dxi:RenderCondition Property="IsChecked" Value="True" ValueSource="TemplatedParent" />
      </dxi:ConditionalRenderBinding>
      <dxi:ConditionalRenderBinding DependencyProperty="{x:Static dxe:EditorAppearanceProperties.CheckedStateBorderBrushProperty}" TargetName="IsDefault" TargetProperty="BorderBrush" ValueSource="TemplatedParent">
        <dxi:RenderCondition DependencyProperty="{x:Static dxe:EditorAppearanceProperties.HasCheckedStateBorderBrushProperty}" Value="True" ValueSource="TemplatedParent" />
        <dxi:RenderCondition Property="IsChecked" Value="True" ValueSource="TemplatedParent" />
      </dxi:ConditionalRenderBinding>
    </dxi:RenderTemplate.Triggers>
  </dxi:RenderTemplate>
  <!-- Thumb -->
  <dxi:RenderTemplate x:Key="{dxet:ToggleSwitchThemeKey ResourceKey=SwitchThumbTemplate}">
    <dxi:RenderBorder Name="IsDefault" Background="#FF262626" Margin="2" Width="12" cs:id="RenderBorder_0000" x:Uid="@Background=ControlLight.Foreground" />
    <dxi:RenderTemplate.Triggers>
      <dxi:RenderStateGroup Name="VisualStates">
        <dxi:RenderStateTrigger Name="Normal" />
        <dxi:RenderStateTrigger Name="MouseOver">
          <dxi:RenderSetter Property="Background" TargetName="IsDefault" Value="#FF262626" cs:id="RenderSetter_0000" x:Uid="@Value=ControlLight.Foreground" />
        </dxi:RenderStateTrigger>
      </dxi:RenderStateGroup>
      <dxi:RenderTrigger DependencyProperty="{x:Static dxe:ToggleSwitch.IsCheckedProperty}" Value="True" ValueSource="TemplatedParent">
        <dxi:RenderSetter Property="Background" TargetName="IsDefault" Value="#FF262626" cs:id="RenderSetter_0001" x:Uid="@Value=ControlLight.Foreground" />
      </dxi:RenderTrigger>
      <dxi:RenderTrigger DependencyProperty="{x:Static dxe:ToggleSwitch.IsCheckedProperty}" Value="{x:Null}" ValueSource="TemplatedParent" />
      <dxi:RenderTrigger DependencyProperty="{x:Static ButtonBase.IsPressedProperty}" Value="True" ValueSource="TemplatedParent" />
      <dxi:RenderTrigger DependencyProperty="{x:Static dx:ThemeManager.IsTouchEnabledProperty}" Value="True" ValueSource="TemplatedParent">
        <dxi:RenderSetter Property="MinWidth" TargetName="IsDefault" Value="44" />
        <dxi:RenderSetter Property="MinHeight" TargetName="IsDefault" Value="44" />
      </dxi:RenderTrigger>
    </dxi:RenderTemplate.Triggers>
  </dxi:RenderTemplate>
</ResourceDictionary>