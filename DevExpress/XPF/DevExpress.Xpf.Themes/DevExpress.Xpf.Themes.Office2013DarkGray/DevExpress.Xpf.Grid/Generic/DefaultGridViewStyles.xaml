<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxd="clr-namespace:DevExpress.Data;assembly=DevExpress.Data.v24.1" xmlns:dxgcore="clr-namespace:DevExpress.Xpf.Grid;assembly=DevExpress.Xpf.Grid.v24.1.Core" xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxe1="clr-namespace:DevExpress.Xpf.Editors.Filtering;assembly=DevExpress.Xpf.Core.v24.1" xmlns:dxe_helpers="clr-namespace:DevExpress.Xpf.Editors.Helpers;assembly=DevExpress.Xpf.Core.v24.1" xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys" xmlns:dxgh="clr-namespace:DevExpress.Xpf.Grid.Hierarchy;assembly=DevExpress.Xpf.Grid.v24.1.Core" xmlns:dxght="http://schemas.devexpress.com/winfx/2008/xaml/grid/internal" xmlns:dxgi="http://schemas.devexpress.com/winfx/2008/xaml/grid/internal" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxgtl="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" xmlns:dxep="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxfuit="http://schemas.devexpress.com/winfx/2008/xaml/core/filteringui/themekeys" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:core="clr-namespace:DevExpress.Xpf.Core;assembly=DevExpress.Data.v24.1" xmlns:dxfui_local_native="http://schemas.devexpress.com/winfx/2008/xaml/core/filteringui/internal">
  <!--PROCESS SETTERS WITH BINDING-->
  <Thickness x:Key="{dxgt:CardTemplatesThemeKey ResourceKey=CellFocusedBorderThickness}">1</Thickness>
  <dxgtl:InverseBooleanConverter x:Key="InverseBooleanConverter" />
  <dxgtl:NavigationStyleToBoolean x:Key="NavigationStyleToBoolean" />
  <dxgtl:NavigationRowConverter x:Key="NavigationRowConverter" />
  <dxgtl:DisplayedNavigationConverter x:Key="DisplayedNavigationConverter" />
  <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
  <dx:ObjectToVisibilityConverter x:Key="ObjectToVisibilityConverter" HandleList="false" />
  <dx:ObjectToVisibilityConverter x:Key="ObjectToVisibilityConverterInverted" Invert="True" />
  <dxgtl:FilterPanelCaptionConverter x:Key="FilterPanelCaptionConverter" />
  <dxgtl:GroupDetailNameConverter x:Key="GroupDetailNameConverter" />
  <dxgtl:ShowRowBreakConverter x:Key="ShowRowBreakConverter" />
  <dxgtl:SortOrderConverter x:Key="SortOrderConverter" />
  <dxgtl:IsTreeViewConverter x:Key="IsTreeViewConverter" />
  <dxgi:TotalSummaryPositionToMarginConverter x:Key="TotalSummaryPositionToMarginConverter" TopMargin="0,-1,0,1" BottomMargin="0,0,0,0" />
  <DataTemplate x:Key="{dxgt:GridColumnHeaderThemeKey ResourceKey=DragElementTemplate}">
    <Grid VerticalAlignment="Top" HorizontalAlignment="Left" DataContext="{Binding Path=Content.Column, RelativeSource={RelativeSource TemplatedParent}}">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>
      <dxgtl:DragGridColumnHeader x:Name="header" dxgtl:GridColumnHeader.GridColumn="{Binding}" ColumnPosition="Standalone" Width="{Binding Path=(dxg:GridColumnHeader.DragElementSize).Width, RelativeSource={RelativeSource TemplatedParent}}" Height="{Binding Path=(dxg:GridColumnHeader.DragElementSize).Height, RelativeSource={RelativeSource TemplatedParent}}" />
      <dx:DragIconControl Grid.Row="1" Grid.Column="1" Margin="-12,-12,0,0" x:Name="dropIndicator" DragType="Remove">
        <dx:DragIconControl.Opacity>
          <Binding Path="(dxg:GridColumnHeader.IsInDropArea)" RelativeSource="{RelativeSource TemplatedParent}">
            <Binding.Converter>
              <dx:BoolToObjectConverter TrueValue="1" FalseValue="0" />
            </Binding.Converter>
          </Binding>
        </dx:DragIconControl.Opacity>
      </dx:DragIconControl>
    </Grid>
    <DataTemplate.Triggers>
      <DataTrigger Binding="{Binding Path=(dxgcore:BaseGridColumnHeader.DragElementAllowTransparency), RelativeSource={RelativeSource Self}}" Value="False">
        <Setter Property="Grid.ColumnSpan" Value="2" TargetName="header" />
        <Setter Property="Grid.RowSpan" Value="2" TargetName="header" />
        <Setter Property="Grid.Column" Value="0" TargetName="dropIndicator" />
        <Setter Property="Grid.ColumnSpan" Value="2" TargetName="dropIndicator" />
        <Setter Property="Grid.Row" Value="0" TargetName="dropIndicator" />
        <Setter Property="Grid.RowSpan" Value="2" TargetName="dropIndicator" />
        <Setter Property="Grid.Column" Value="0" TargetName="dropIndicator" />
        <Setter Property="Margin" Value="0" TargetName="dropIndicator" />
        <Setter Property="HorizontalAlignment" Value="Right" TargetName="dropIndicator" />
      </DataTrigger>
    </DataTemplate.Triggers>
  </DataTemplate>
  <Style x:Key="GridColumnHeaderBaseStyle" TargetType="{x:Type dxgcore:GridColumnHeaderBase}">
    <Setter Property="Template" Value="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=ControlTemplate}}" />
    <Setter Property="dxg:GridColumnHeader.DragElementTemplate" Value="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=DragElementTemplate}}" />
    <Setter Property="Focusable" Value="false" />
    <Setter Property="TextElement.Foreground" Value="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=HeaderCaptionForeground}}" />
    <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=BorderBrush}}" />
    <Setter Property="Background" Value="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=Background}}" />
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=BackgroundMouseOver}}" />
        <Setter Property="TextElement.Foreground" Value="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=HeaderHoverCaptionForeground}}" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=BackgroundPressed}}" />
        <Setter Property="TextElement.Foreground" Value="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=HeaderPressedCaptionForeground}}" />
      </Trigger>
      <Trigger Property="dxg:ExtendedColumnChooserGridColumnHeader.IsDragOver" Value="True">
        <Setter Property="Background" Value="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=BackgroundMouseOver}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DropMarkerBorderBrush}}" />
      </Trigger>
      <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(dxg:GridControl.ActiveView).DataControl.(dxcn:AppearanceOptions.HasBackground)}" Value="True">
        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxg:GridControl.ActiveView).DataControl.(dxcn:AppearanceOptions.Background)}" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.BandHeaderControl}" TargetType="{x:Type dxg:BandHeaderControl}" BasedOn="{StaticResource GridColumnHeaderBaseStyle}" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.FitColumnHeader}" TargetType="{x:Type dxg:FitColumnHeader}" BasedOn="{StaticResource GridColumnHeaderBaseStyle}">
    <Setter Property="dx:DragManager.DropTargetFactory">
      <Setter.Value>
        <dxgcore:FitColumnHeaderDropTargetFactory />
      </Setter.Value>
    </Setter>
    <Setter Property="dxg:GridColumn.HeaderPresenterType" Value="Headers" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.IndicatorColumnHeader}" TargetType="{x:Type dxg:IndicatorColumnHeader}" BasedOn="{StaticResource GridColumnHeaderBaseStyle}">
    <Setter Property="dx:DragManager.DropTargetFactory">
      <Setter.Value>
        <dxgcore:IndicatorColumnHeaderDropTargetFactory />
      </Setter.Value>
    </Setter>
    <Setter Property="dxg:GridColumn.HeaderPresenterType" Value="Headers" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.ExpandButtonColumnHeader}" TargetType="{x:Type dxg:ExpandButtonColumnHeader}" BasedOn="{StaticResource GridColumnHeaderBaseStyle}">
    <Setter Property="dx:DragManager.DropTargetFactory">
      <Setter.Value>
        <dxgcore:IndicatorColumnHeaderDropTargetFactory />
      </Setter.Value>
    </Setter>
    <Setter Property="dxg:GridColumn.HeaderPresenterType" Value="Headers" />
  </Style>
  <Style x:Key="{dxgt:GridColumnHeaderThemeKey ResourceKey=FilterAreaStyle}" TargetType="{x:Type dxe:PopupBaseEdit}">
    <Setter Property="Foreground" Value="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=FilterPopupForegroundBrush}}" />
    <Setter Property="Template" Value="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=FilterAreaTemplate}}" />
    <Setter Property="AutomationProperties.Name" Value="FilterDropDown" />
    <Setter Property="AutomationProperties.AutomationId" Value="FilterDropDown" />
    <Setter Property="VerticalAlignment" Value="Top" />
    <Style.Triggers>
      <DataTrigger Binding="{Binding Path=(dxg:GridColumnHeader.GridColumn).FilterPopupMode, RelativeSource={RelativeSource Self}}" Value="ExcelSmart">
        <Setter Property="PopupBottomAreaTemplate" Value="{DynamicResource {dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=PopupBottomAreaTemplate}}" />
      </DataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Path=(dxg:GridColumnHeader.GridColumn).FilterPopupMode, RelativeSource={RelativeSource Self}}" Value="Default" />
          <Condition Binding="{Binding Path=(dxg:GridControl.ActiveView).ColumnFilterPopupMode, RelativeSource={RelativeSource Self}, Converter={dxfui_local_native:ColumnFilterPopupModeConverter}}" Value="ExcelSmart" />
        </MultiDataTrigger.Conditions>
        <Setter Property="PopupBottomAreaTemplate" Value="{DynamicResource {dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=PopupBottomAreaTemplate}}" />
      </MultiDataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="GridColumnHeaderStyle" TargetType="{x:Type dxg:GridColumnHeader}" BasedOn="{StaticResource GridColumnHeaderBaseStyle}">
    <Setter Property="ColumnFilterPopupStyle" Value="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=FilterAreaStyle}}" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.GridColumnHeader}" TargetType="{x:Type dxg:GridColumnHeader}" BasedOn="{StaticResource GridColumnHeaderStyle}" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.DragGridColumnHeader}" TargetType="{x:Type dxg:DragGridColumnHeader}" BasedOn="{StaticResource GridColumnHeaderBaseStyle}">
    <Setter Property="Opacity" Value="0.5" />
    <Setter Property="dxg:GridColumn.HeaderPresenterType" Value="{Binding Path=(dxg:GridColumn.HeaderPresenterType), RelativeSource={RelativeSource TemplatedParent}}" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.CardCellContentPresenter}" TargetType="{x:Type dxg:CardCellContentPresenter}">
    <Setter Property="Template" Value="{DynamicResource {dxgt:CardTemplatesThemeKey ResourceKey=CellContentPresenterTemplate}}" />
    <Setter Property="RowData" Value="{Binding RowData}" />
    <Setter Property="Margin" Value="{DynamicResource {dxgt:CardTemplatesThemeKey ResourceKey=CellContentPresenterMargin}}" />
    <Setter Property="dxg:GridViewHitInfoBase.HitTestAcceptor">
      <Setter.Value>
        <dxgi:RowCellTableViewHitTestAcceptor />
      </Setter.Value>
    </Setter>
    <Setter Property="Border.CornerRadius" Value="{DynamicResource {dxgt:CardTemplatesThemeKey ResourceKey=CellCornerRadius}}" />
    <Setter Property="dxgcore:CellContentPresenter.BorderThickness" Value="{DynamicResource {dxgt:CardTemplatesThemeKey ResourceKey=CellBorderThickness}}" />
    <Style.Triggers>
      <Trigger Property="dxg:GridViewBase.IsFocusedCell" Value="true">
        <Setter Property="dxgcore:CellContentPresenter.Background" Value="{DynamicResource {dxgt:CardTemplatesThemeKey ResourceKey=CellFocusedBackground}}" />
        <Setter Property="dxgcore:CellContentPresenter.BorderThickness" Value="{DynamicResource {dxgt:CardTemplatesThemeKey ResourceKey=CellFocusedBorderThickness}}" />
        <Setter Property="dxgcore:CellContentPresenter.BorderBrush" Value="{DynamicResource {dxgt:CardTemplatesThemeKey ResourceKey=CellFocusedBrush}}" />
        <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:CardTemplatesThemeKey ResourceKey=CellFocusedForeground}}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.GroupCardRow}" TargetType="{x:Type dxg:GroupCardRow}">
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Template" Value="{DynamicResource {dxgt:CardViewThemeKey ResourceKey=GroupRowControlTemplate}}" />
    <Setter Property="dxg:GridViewHitInfoBase.HitTestAcceptor">
      <Setter.Value>
        <dxgi:GroupRowTableViewHitTestAcceptor />
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.GridRowContent}" TargetType="{x:Type dxg:GridRowContent}">
    <Setter Property="Template" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=RowControlContainerTemplate}}" />
    <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.GroupGridRowContent}" TargetType="{x:Type dxg:GroupGridRowContent}">
    <Setter Property="Template" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupRowContentTemplate}}" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.GridCardContentPresenter}" TargetType="{x:Type dxg:GridCardContentPresenter}">
    <Setter Property="Content" Value="{Binding}" />
    <Setter Property="ContentTemplateSelector" Value="{Binding Path=(dxg:GridControl.ActiveView).ActualCardTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.GridCardHeaderContentPresenter}" TargetType="{x:Type dxg:GridCardHeaderContentPresenter}">
    <Setter Property="Content" Value="{Binding Path=CardHeaderData}" />
    <Setter Property="ContentTemplateSelector" Value="{Binding Path=(dxg:GridControl.ActiveView).ActualCardHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.GridCard}" TargetType="{x:Type dxg:GridCard}">
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Grid.IsSharedSizeScope" Value="True" />
    <Setter Property="Template" Value="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ControlTemplate}}" />
    <Setter Property="dxg:GridViewHitInfoBase.HitTestAcceptor">
      <Setter.Value>
        <dxgi:RowTableViewHitTestAcceptor />
      </Setter.Value>
    </Setter>
  </Style>
  <Storyboard x:Key="{dxgt:GroupRowThemeKey ResourceKey=ExpandingStoryboard}">
    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="AnimationProgress">
      <SplineDoubleKeyFrame KeyTime="0:0:1" Value="1" KeySpline="0,0,0,1" />
    </DoubleAnimationUsingKeyFrames>
  </Storyboard>
  <Storyboard x:Key="{dxgt:GroupRowThemeKey ResourceKey=CollapsingStoryboard}">
    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="AnimationProgress">
      <SplineDoubleKeyFrame KeyTime="0:0:1" Value="0" KeySpline="0,0,1,0.25" />
    </DoubleAnimationUsingKeyFrames>
  </Storyboard>
  <Storyboard x:Key="{dxgt:GroupRowThemeKey ResourceKey=CardGroupExpandingStoryboard}">
    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="AnimationProgress">
      <SplineDoubleKeyFrame KeyTime="0:0:1" Value="1" KeySpline="0,0,0,1" />
    </DoubleAnimationUsingKeyFrames>
  </Storyboard>
  <Storyboard x:Key="{dxgt:GroupRowThemeKey ResourceKey=CardGroupCollapsingStoryboard}">
    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="AnimationProgress">
      <SplineDoubleKeyFrame KeyTime="0:0:1" Value="0" KeySpline="0,0,1,0.25" />
    </DoubleAnimationUsingKeyFrames>
  </Storyboard>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.GridCardExpandButton}" TargetType="{x:Type dxg:GridCardExpandButton}">
    <Setter Property="ToolTip">
      <Setter.Value>
        <Binding Path="(dxg:GridControl.ActiveView).LocalizationDescriptor" RelativeSource="{RelativeSource Self}" ConverterParameter="GridCardCollapseButtonTooltip">
          <Binding.Converter>
            <dxgtl:DynamicLocalizationStringValueConvertor />
          </Binding.Converter>
        </Binding>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <dxgtl:GridToggleStateButton dx:DataObjectBase.DataObject="{Binding}" dx:DataObjectBase.NeedsResetEvent="True" ClickMode="Press" IsChecked="{Binding Path=IsExpanded, Mode=OneWay}" Command="{x:Static dxg:GridCommands.ChangeCardExpanded}" CommandParameter="{Binding RowHandle.Value}" Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ExpandButtonTemplate}}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="dxg:GridViewHitInfoBase.HitTestAcceptor">
      <Setter.Value>
        <dxgi:CardHeaderButtonCardViewHitTestAcceptor />
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <DataTrigger Binding="{Binding Path=IsExpanded}" Value="false">
        <Setter Property="ToolTip">
          <Setter.Value>
            <Binding Path="(dxg:GridControl.ActiveView).LocalizationDescriptor" RelativeSource="{RelativeSource Self}" ConverterParameter="GridCardExpandButtonTooltip">
              <Binding.Converter>
                <dxgtl:DynamicLocalizationStringValueConvertor />
              </Binding.Converter>
            </Binding>
          </Setter.Value>
        </Setter>
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.CardsResizer}" TargetType="{x:Type dxg:CardsResizer}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <ContentPresenter ContentTemplate="{Binding Path=SeparatorTemplate, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxg:CardView}}}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="dxg:GridViewHitInfoBase.HitTestAcceptor">
      <Setter.Value>
        <dxgi:SeparatorCardViewHitTestAcceptor />
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <DataTrigger Binding="{Binding Orientation}" Value="Horizontal">
        <Setter Property="Width" Value="{Binding Path=(dxg:GridControl.ActiveView).SeparatorThickness, RelativeSource={RelativeSource TemplatedParent}}" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Orientation}" Value="Vertical">
        <Setter Property="Height" Value="{Binding Path=(dxg:GridControl.ActiveView).SeparatorThickness, RelativeSource={RelativeSource TemplatedParent}}" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Orientation}" Value="Vertical">
        <Setter Property="Width" Value="{Binding Length}" />
        <Setter Property="Cursor" Value="SizeNS" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Orientation}" Value="Horizontal">
        <Setter Property="Height" Value="{Binding Length}" />
        <Setter Property="Cursor" Value="SizeWE" />
      </DataTrigger>
      <Trigger Property="dxg:CardView.IsResizingEnabled" Value="false">
        <Setter Property="IsHitTestVisible" Value="false" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.GridCardHeaderControl}" TargetType="{x:Type dxg:GridCardHeaderControl}">
    <Setter Property="Template" Value="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=HeaderPanelTemplate}}" />
    <Setter Property="dxg:GridViewHitInfoBase.HitTestAcceptor">
      <Setter.Value>
        <dxgi:CardHeaderCardViewHitTestAcceptor />
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.ColumnChooserControl}" TargetType="{x:Type dxg:ColumnChooserControl}">
    <Setter Property="ItemTemplate">
      <Setter.Value>
        <DataTemplate>
          <dxgtl:GridColumnHeader DataContext="{Binding Path=Content.Column, RelativeSource={RelativeSource TemplatedParent}}" dxgtl:GridColumn.HeaderPresenterType="ColumnChooser" dxgtl:GridColumnHeader.GridColumn="{Binding}" Margin="1,1,1,0" ColumnPosition="Standalone" SnapsToDevicePixels="True" dxgtl:GridPopupMenu.GridMenuType="Column" dxb:BarManager.DXContextMenu="{Binding Path=View.DataControlMenu}" />
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxg:ColumnChooserControl}">
          <ScrollViewer VerticalScrollBarVisibility="Auto" dx:ScrollBarExtensions.ScrollViewerOrientation="Vertical" Background="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=ColumnChooserBackgroundBrush}}">
            <Grid>
              <dxgtl:ColumnItemsControl ItemsSource="{TemplateBinding Columns}" ItemTemplate="{TemplateBinding ItemTemplate}" Visibility="{Binding Columns, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ObjectToVisibilityConverter}}">
                <dxgtl:ColumnItemsControl.ItemsPanel>
                  <ControlTemplate>
                    <StackPanel dxgtl:GridColumn.HeaderPresenterType="ColumnChooser" Orientation="Vertical" Margin="1,1,1,2" />
                  </ControlTemplate>
                </dxgtl:ColumnItemsControl.ItemsPanel>
              </dxgtl:ColumnItemsControl>
              <TextBlock Style="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=ColumnChooserDragTextStyle}}" Text="{TemplateBinding DragText}" Visibility="{Binding Columns, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ObjectToVisibilityConverterInverted}}" />
            </Grid>
          </ScrollViewer>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="dx:DragManager.DropTargetFactory">
      <Setter.Value>
        <dxgcore:ColumnChooserDropTargetFactory />
      </Setter.Value>
    </Setter>
    <Setter Property="dxg:GridColumn.HeaderPresenterType" Value="ColumnChooser" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.BestFitControl}" TargetType="{x:Type dxg:BestFitControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxg:BestFitControl}">
          <dxgtl:GridRowContent Style="{Binding Path=RowData.View.RowStyle, RelativeSource={RelativeSource TemplatedParent}}">
            <dxgtl:GridRowContent.Template>
              <ControlTemplate TargetType="{x:Type dxg:GridRowContent}">
                <ContentPresenter />
              </ControlTemplate>
            </dxgtl:GridRowContent.Template>
            <dxgtl:BestFitGridCellContentPresenter x:Name="PART_CellContentPresenter" IsFocusedCell="{TemplateBinding IsFocusedCell}" RowData="{Binding RowData, RelativeSource={RelativeSource TemplatedParent}}" Column="{TemplateBinding Column}" HasRightSibling="True" />
          </dxgtl:GridRowContent>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <dx:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
  <dx:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverterInverted" Invert="True" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.BestFitGroupControl}" TargetType="{x:Type dxg:BestFitGroupControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxg:BestFitGroupControl}">
          <dxgtl:GroupGridRowContent Style="{Binding Path=RowData.View.GroupRowStyle, RelativeSource={RelativeSource TemplatedParent}}">
            <dxgtl:GroupGridRowContent.Template>
              <ControlTemplate TargetType="{x:Type dxg:GroupGridRowContent}">
                <ContentPresenter />
              </ControlTemplate>
            </dxgtl:GroupGridRowContent.Template>
            <dx:DXDockPanel>
              <dx:DXDockPanel Visibility="{Binding IsFirstColumn, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                <dxgtl:GridGroupExpandButton x:Name="Toggle" Margin="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=ExpandButtonMargin}}" VerticalAlignment="Center" HorizontalAlignment="Left" />
                <dxep:CheckEdit x:Name="PART_CheckBoxRowSelector" Padding="0" Margin="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=CheckBoxSelectorMargin}}" Visibility="{Binding Path=RowData.View.ActualShowCheckBoxSelectorInGroupRow, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" />
                <dxgtl:GroupValueContentPresenter x:Name="groupValueContentPresenter" Content="{Binding Path=RowData.GroupValue, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplateSelector="{Binding Path=Column.ActualGroupValueTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
              </dx:DXDockPanel>
              <dxgtl:GroupColumnSummaryControl x:Name="PART_SummaryControlPresenter" />
              <dxgtl:GroupBandSummaryControl x:Name="PART_BandSummaryControlPresenter" />
            </dx:DXDockPanel>
          </dxgtl:GroupGridRowContent>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.BestFitGroupFooterSummaryControl}" TargetType="{x:Type dxg:BestFitGroupFooterSummaryControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxg:BestFitGroupFooterSummaryControl}">
          <dx:DataContentPresenter Style="{Binding Path=View.GroupFooterRowStyle}" Content="{Binding}">
            <dx:DataContentPresenter.ContentTemplate>
              <DataTemplate>
                <dxgtl:GroupFooterSummaryControl DataContext="{Binding SummaryData}" />
              </DataTemplate>
            </dx:DataContentPresenter.ContentTemplate>
          </dx:DataContentPresenter>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.GridTotalSummary}" TargetType="{x:Type dxg:GridTotalSummary}">
    <Setter Property="Template" Value="{DynamicResource {dxgt:TotalSummaryThemeKey ResourceKey=TotalSummaryControlTemplate}}" />
  </Style>
  <Style x:Key="{dxgt:GridControlThemeKey ResourceKey=SelectionRectangleStyle}" TargetType="Border">
    <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=SelectionRectangleBorderBrush}}" />
    <Setter Property="Background" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=SelectionRectangleBackground}}" />
    <Setter Property="BorderThickness" Value="1" />
  </Style>
  <Style x:Key="{dxgt:GridControlThemeKey ResourceKey=UpdateRowRectangleStyle}" TargetType="Path">
    <Setter Property="Fill" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=UpdateRowRectangleBackground}}" />
  </Style>
  <dxgcore:DefaultDataTemplate x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupSummaryItemTemplate}">
    <Border Style="{Binding Path=View.GroupSummaryContentStyle}">
      <StackPanel Orientation="Horizontal" x:Name="defaultGroupSummaryItemTemplateStackPanel">
        <TextBlock Text="{Binding Text}" />
        <TextBlock Text=", " x:Name="commaTextBlock" Visibility="{Binding IsLast, Converter={StaticResource BooleanToVisibilityConverterInverted}}" />
      </StackPanel>
    </Border>
  </dxgcore:DefaultDataTemplate>
  <dxgcore:DefaultDataTemplate x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupColumnSummaryItemTemplate}">
    <TextBlock dxgcore:InlineTextService.InlineInfo="{Binding SummaryTextInfo}" TextAlignment="Right" x:Name="textBlock">
      <TextBlock.TextTrimming>CharacterEllipsis</TextBlock.TextTrimming>
      <dxe_helpers:TextBlockService.AllowIsTextTrimmed>true</dxe_helpers:TextBlockService.AllowIsTextTrimmed>
    </TextBlock>
    <DataTemplate.Triggers>
      <Trigger Property="dxe_helpers:TextBlockService.IsTextTrimmed" Value="true" SourceName="textBlock">
        <Setter Property="ToolTip" Value="{Binding Value}" TargetName="textBlock" />
      </Trigger>
    </DataTemplate.Triggers>
  </dxgcore:DefaultDataTemplate>
  <Style x:Key="DataViewBaseStyle" TargetType="{x:Type dxgcore:DataViewBase}">
    <Setter Property="HeaderTemplate" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=HeadersTemplate}}" />
    <Setter Property="FooterTemplate" Value="{DynamicResource {dxgt:TotalSummaryThemeKey ResourceKey=FootersTemplate}}" />
    <Setter Property="TotalSummaryItemTemplate" Value="{DynamicResource {dxgt:TotalSummaryThemeKey ResourceKey=TotalSummaryItemTemplate}}" />
    <Setter Property="ColumnHeaderTemplate" Value="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=ContentTemplate}}" />
    <Setter Property="ColumnHeaderCustomizationAreaTemplate" Value="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=CustomizationAreaTemplate}}" />
    <Setter Property="CellStyle" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=CellStyle}}" />
    <Setter Property="TotalSummaryContentStyle" Value="{DynamicResource {dxgt:TotalSummaryThemeKey ResourceKey=TotalSummaryContentStyle}}" />
    <Setter Property="ColumnHeaderDragIndicatorTemplate" Value="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=DragIndicatorTemplate}}" />
    <Setter Property="ColumnChooserTemplate" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=ColumnChooserTemplate}}" />
    <Setter Property="ExtendedColumnChooserTemplate" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=ExtendedColumnChooserTemplate}}" />
    <Setter Property="Margin" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=Margin}}" />
    <Setter Property="FocusedCellBorderTemplate" Value="{DynamicResource {dxgt:GridControlThemeKey ResourceKey=FocusedCellBorderTemplate}}" />
    <Setter Property="SnapsToDevicePixels" Value="true" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="SelectionRectangleStyle" Value="{DynamicResource {dxgt:GridControlThemeKey ResourceKey=SelectionRectangleStyle}}" />
    <Setter Property="ColumnHeaderImageStyle" Value="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=ImageStyle}}" />
    <Setter Property="DropMarkerTemplate" Value="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DropMarker}}" />
    <Setter Property="DragDropHintTemplate" Value="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragDropHint}}" />
    <Setter Property="FilterEditorTemplate" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorTemplate}}" />
    <Setter Property="FilterEditorDialogServiceTemplate" Value="{DynamicResource {dxfuit:FilterEditorThemeKey ResourceKey=FilterEditorDialogServiceTemplate}}" />
  </Style>
  <Style x:Key="GridViewBaseStyle" TargetType="{x:Type dxg:GridViewBase}" BasedOn="{StaticResource DataViewBaseStyle}">
    <Setter Property="GroupRowTemplate" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupRowTemplate}}" />
    <Setter Property="GroupValueTemplate" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupValueTemplate}}" />
    <Setter Property="FocusedGroupRowBorderTemplate" Value="{DynamicResource {dxgt:GridControlThemeKey ResourceKey=FocusedGroupRowBorderTemplate}}" />
    <Setter Property="DefaultGroupSummaryItemTemplate" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupSummaryItemTemplate}}" />
    <Setter Property="GroupSummaryItemTemplate" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupSummaryItemTemplate}}" />
    <Setter Property="GroupRowStyle" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupRowStyle}}" />
    <Setter Property="GroupValueContentStyle" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupValueContentStyle}}" />
    <Setter Property="GroupSummaryContentStyle" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupSummaryContentStyle}}" />
    <Setter Property="FilteringPanelStyle" Value="{DynamicResource {dxfuit:FilteringPanelThemeKey ResourceKey=ControlStyle}}" />
  </Style>
  <dxgtl:DefaultStyle x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupSummaryContentStyle}" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.TableView}" TargetType="{x:Type dxg:TableView}" BasedOn="{StaticResource GridViewBaseStyle}">
    <Setter Property="Foreground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextUnfocusedBrush}}" />
    <Setter Property="BandHeaderTemplate" Value="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=ContentTemplate}}" />
    <Setter Property="PrintRowTemplate" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=PrintRowTemplate}}" />
    <Setter Property="PrintHeaderTemplate" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=PrintHeaderTemplate}}" />
    <Setter Property="PrintFooterTemplate" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=PrintFooterTemplate}}" />
    <Setter Property="PrintFixedFooterTemplate" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=PrintFixedFooterTemplate}}" />
    <Setter Property="PrintGroupRowTemplate" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=PrintGroupRowTemplate}}" />
    <Setter Property="PrintGroupFooterTemplate" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=PrintGroupFooterTemplate}}" />
    <Setter Property="PrintColumnHeaderStyle" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=DefaultPrintHeaderStyle}}" />
    <Setter Property="PrintBandHeaderStyle" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=DefaultPrintHeaderStyle}}" />
    <Setter Property="PrintTotalSummaryStyle" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=DefaultPrintTotalSummaryStyle}}" />
    <Setter Property="PrintFixedTotalSummaryStyle" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=DefaultPrintFixedTotalSummaryStyle}}" />
    <Setter Property="PrintGroupRowStyle" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=DefaultPrintGroupRowStyle}}" />
    <Setter Property="PrintGroupFooterStyle" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=DefaultPrintGroupFooterStyle}}" />
    <Setter Property="PrintCellStyle" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=DefaultPrintCellStyle}}" />
    <Setter Property="PrintRowIndentStyle" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=DefaultPrintRowIndentStyle}}" />
    <Setter Property="AutoFilterRowCellStyle" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=CellStyle}}" />
    <Setter Property="NewItemRowCellStyle" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=CellStyle}}" />
    <Setter Property="Template" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=ControlTemplate}}" />
    <Setter Property="RowDecorationTemplate" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=RowDecorationTemplate}}" />
    <Setter Property="RowIndicatorContentTemplate" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=IconPresenterTemplate}}" />
    <Setter Property="DefaultDataRowTemplate" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=DataRowTemplate}}" />
    <Setter Property="UseGroupShadowIndent" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=UseGroupShadowIndent}}" />
    <Setter Property="DataRowTemplate" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=DataRowTemplate}}" />
    <Setter Property="LeftDataAreaIndent" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=LeftDataAreaIndent}}" />
    <Setter Property="RightDataAreaIndent" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=RightDataAreaIndent}}" />
    <Setter Property="LeftGroupAreaIndent" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=LeftGroupAreaIndent}}" />
    <Setter Property="RightGroupAreaIndent" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=RightGroupAreaIndent}}" />
    <Setter Property="FixedLineWidth" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=FixedLineWidth}}" />
    <Setter Property="IndicatorWidth" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=IndicatorWidth}}" />
    <Setter Property="ExpandDetailButtonWidth" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=ExpandDetailButtonWidth}}" />
    <!--<Setter Property="DetailMargin" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=DetailMargin}}" /> Uncomment if Q448622 was implemented-->
    <Setter Property="ExpandStoryboard" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=ExpandingStoryboard}}" />
    <Setter Property="CollapseStoryboard" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=CollapsingStoryboard}}" />
    <Setter Property="FocusedRowBorderTemplate" Value="{DynamicResource {dxgt:GridControlThemeKey ResourceKey=FocusedRowBorderTemplate}}" />
    <Setter Property="GroupColumnSummaryItemTemplate" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupColumnSummaryItemTemplate}}" />
    <Setter Property="ColumnBandChooserTemplate" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=ColumnBandChooserTemplate}}" />
    <Setter Property="RowMinHeight" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=RowMinHeight}}" />
    <Setter Property="RowStyle" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=RowStyle}}" />
    <Setter Property="PredefinedFormats" Value="{DynamicResource {dxdst:ConditionalFormattingThemeKey ResourceKey=PredefinedFormats}}" />
    <Setter Property="PredefinedColorScaleFormats" Value="{DynamicResource {dxdst:ConditionalFormattingThemeKey ResourceKey=PredefinedColorScaleFormats}}" />
    <Setter Property="PredefinedDataBarFormats" Value="{DynamicResource {dxdst:ConditionalFormattingThemeKey ResourceKey=PredefinedDataBarFormats}}" />
    <Setter Property="PredefinedIconSetFormats" Value="{DynamicResource {dxdst:ConditionalFormattingThemeKey ResourceKey=PredefinedIconSetFormats}}" />
    <Setter Property="FormatConditionDialogServiceTemplate" Value="{DynamicResource {dxdst:ConditionalFormattingThemeKey ResourceKey=ApplyFormatConditionDialogTemplate}}" />
    <Setter Property="ConditionalFormattingManagerServiceTemplate" Value="{DynamicResource {dxdst:ConditionalFormattingThemeKey ResourceKey=ConditionalFormattingManagerTemplate}}" />
    <Setter Property="EditFormDialogServiceTemplate" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=EditFormDialogServiceTemplate}}" />
    <Setter Property="EditFormTemplate" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=EditFormContentTemplate}}" />
    <Setter Property="GroupFooterRowStyle" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupFooterRowStyle}}" />
    <Setter Property="GroupFooterRowTemplate" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupFooterRowTemplate}}" />
    <Setter Property="GroupFooterSummaryContentStyle" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupFooterSummaryContentStyle}}" />
    <Setter Property="GroupFooterSummaryItemTemplate" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupFooterSummaryItemTemplate}}" />
    <Setter Property="GroupBandSummaryContentStyle" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupBandSummaryContentStyle}}" />
    <Setter Property="CheckBoxSelectorColumnHeaderTemplate" Value="{DynamicResource ResourceKey={dxgt:GridColumnHeaderThemeKey ResourceKey=CheckBoxSelectorColumnHeaderTemplate}}" />
    <Setter Property="EvenRowBackground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=EvenRowBackgroundBrush}}" />
    <Setter Property="UpdateRowButtonsTemplate" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=DefaultUpdateRowButtonsControlTemplate}}" />
    <Setter Property="UpdateRowRectangleStyle" Value="{DynamicResource {dxgt:GridControlThemeKey ResourceKey=UpdateRowRectangleStyle}}" />
    <Setter Property="ScrollBarAnnotationsAppearance">
      <Setter.Value>
        <dxgcore:ScrollBarAnnotationsAppearance />
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="ExpandDetailButtonWidth" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=ExpandDetailButtonWidthTouch}}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.TreeListView}" TargetType="{x:Type dxg:TreeListView}" BasedOn="{StaticResource DataViewBaseStyle}">
    <Setter Property="Foreground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextUnfocusedBrush}}" />
    <Setter Property="BandHeaderTemplate" Value="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=ContentTemplate}}" />
    <Setter Property="PrintRowTemplate" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=PrintRowTemplate}}" />
    <Setter Property="PrintHeaderTemplate" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=PrintHeaderTemplate}}" />
    <Setter Property="PrintFooterTemplate" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=PrintFooterTemplate}}" />
    <Setter Property="PrintNodeFooterTemplate" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=PrintGroupFooterTemplate}}" />
    <Setter Property="PrintNodeFooterStyle" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=DefaultPrintGroupFooterStyle}}" />
    <Setter Property="PrintFixedFooterTemplate" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=PrintFixedFooterTemplate}}" />
    <Setter Property="PrintColumnHeaderStyle" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=DefaultPrintHeaderStyle}}" />
    <Setter Property="PrintBandHeaderStyle" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=DefaultPrintHeaderStyle}}" />
    <Setter Property="PrintTotalSummaryStyle" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=DefaultPrintTotalSummaryStyle}}" />
    <Setter Property="PrintFixedTotalSummaryStyle" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=DefaultPrintFixedTotalSummaryStyle}}" />
    <Setter Property="PrintCellStyle" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=DefaultPrintCellStyle}}" />
    <Setter Property="PrintRowIndentStyle" Value="{DynamicResource {dxgt:TreeListViewThemeKey ResourceKey=DefaultPrintRowIndentStyle}}" />
    <Setter Property="AutoFilterRowCellStyle" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=CellStyle}}" />
    <Setter Property="RowIndent" Value="{DynamicResource {dxgt:TreeListViewThemeKey ResourceKey=RowIndent}}" />
    <Setter Property="RowPresenterMargin" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=RowPresenterGridMargin}}" />
    <Setter Property="Template" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=ControlTemplate}}" />
    <Setter Property="RowDecorationTemplate" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=RowDecorationTemplate}}" />
    <Setter Property="RowIndicatorContentTemplate" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=IconPresenterTemplate}}" />
    <Setter Property="DefaultDataRowTemplate" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=DataRowTemplate}}" />
    <Setter Property="DataRowTemplate" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=DataRowTemplate}}" />
    <Setter Property="LeftDataAreaIndent" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=LeftDataAreaIndent}}" />
    <Setter Property="RightDataAreaIndent" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=RightDataAreaIndent}}" />
    <Setter Property="FixedLineWidth" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=FixedLineWidth}}" />
    <Setter Property="IndicatorWidth" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=IndicatorWidth}}" />
    <Setter Property="FocusedRowBorderTemplate" Value="{DynamicResource {dxgt:GridControlThemeKey ResourceKey=FocusedRowBorderTemplate}}" />
    <Setter Property="TreeLineStyle" Value="{DynamicResource {dxgt:TreeListViewThemeKey ResourceKey=DefaultTreeLineStyle}}" />
    <Setter Property="ColumnBandChooserTemplate" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=ColumnBandChooserTemplate}}" />
    <Setter Property="RowMinHeight" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=RowMinHeight}}" />
    <Setter Property="RowStyle" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=RowStyle}}" />
    <Setter Property="PredefinedFormats" Value="{DynamicResource {dxdst:ConditionalFormattingThemeKey ResourceKey=PredefinedFormats}}" />
    <Setter Property="PredefinedColorScaleFormats" Value="{DynamicResource {dxdst:ConditionalFormattingThemeKey ResourceKey=PredefinedColorScaleFormats}}" />
    <Setter Property="PredefinedDataBarFormats" Value="{DynamicResource {dxdst:ConditionalFormattingThemeKey ResourceKey=PredefinedDataBarFormats}}" />
    <Setter Property="PredefinedIconSetFormats" Value="{DynamicResource {dxdst:ConditionalFormattingThemeKey ResourceKey=PredefinedIconSetFormats}}" />
    <Setter Property="FormatConditionDialogServiceTemplate" Value="{DynamicResource {dxdst:ConditionalFormattingThemeKey ResourceKey=ApplyFormatConditionDialogTemplate}}" />
    <Setter Property="ConditionalFormattingManagerServiceTemplate" Value="{DynamicResource {dxdst:ConditionalFormattingThemeKey ResourceKey=ConditionalFormattingManagerTemplate}}" />
    <Setter Property="EvenRowBackground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=EvenRowBackgroundBrush}}" />
    <Setter Property="EditFormDialogServiceTemplate" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=EditFormDialogServiceTemplate}}" />
    <Setter Property="EditFormTemplate" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=EditFormContentTemplate}}" />
    <Setter Property="NodeFooterRowStyle" Value="{DynamicResource {dxgt:TreeListViewThemeKey ResourceKey=NodeFooterRowStyle}}" />
    <Setter Property="NodeFooterRowTemplate" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupFooterRowTemplate}}" />
    <Setter Property="NodeFooterSummaryContentStyle" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupFooterSummaryContentStyle}}" />
    <Setter Property="NodeFooterSummaryItemTemplate" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupFooterSummaryItemTemplate}}" />
    <Setter Property="UpdateRowButtonsTemplate" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=DefaultUpdateRowButtonsControlTemplate}}" />
    <Setter Property="UpdateRowRectangleStyle" Value="{DynamicResource {dxgt:GridControlThemeKey ResourceKey=UpdateRowRectangleStyle}}" />
    <Setter Property="FilteringPanelStyle" Value="{DynamicResource {dxfuit:FilteringPanelThemeKey ResourceKey=ControlStyle}}" />
    <Setter Property="ScrollBarAnnotationsAppearance">
      <Setter.Value>
        <dxgcore:ScrollBarAnnotationsAppearance />
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="RowIndent" Value="{DynamicResource {dxgt:TreeListViewThemeKey ResourceKey=RowIndentTouch}}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <dxcn:ButtonAsyncIndicationSizeConverter x:Key="buttonAsyncIndicationSizeConverter" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.RowMarginControl}" TargetType="{x:Type dxg:RowMarginControl}">
    <Setter Property="Foreground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextUnfocusedBrush}}" />
    <Setter Property="Background" Value="{DynamicResource {dxgt:TreeListViewThemeKey ResourceKey=RowMarginBackgroundBrush}}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid x:Name="background" Background="{TemplateBinding Background}">
            <Path x:Name="PART_OffsetPath" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" />
            <Path x:Name="PART_TreeLinePath" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" />
            <dxgtl:IndentsPanel x:Name="PART_IndentsPanel" RowIndent="{Binding View.RowIndent}" HorizontalAlignment="Right">
              <dxcn:AsyncButtonContentControl x:Name="PART_AsyncIndicator" Background="{DynamicResource {dxgt:TreeListViewThemeKey ResourceKey=RowMarginBackgroundBrush}}" Visibility="Collapsed" ShouldShowCancelButton="True" CancelCommand="{Binding View.TreeListCommands.CancelChildNodesFetching}" CancelCommandParameter="{Binding RowHandle.Value}" RetryCommand="{Binding View.TreeListCommands.ChangeNodeExpanded}" RetryCommandParameter="{Binding RowHandle.Value}">
                <dxcn:AsyncButtonContentControl.Width>
                  <MultiBinding Converter="{StaticResource buttonAsyncIndicationSizeConverter}">
                    <Binding Path="ActualWidth" ElementName="PART_IndentsPanel" />
                    <Binding Path="ActualHeight" ElementName="PART_IndentsPanel" />
                    <Binding Path="ActualWidth" ElementName="PART_ImageSnapper" />
                  </MultiBinding>
                </dxcn:AsyncButtonContentControl.Width>
                <dxcn:AsyncButtonContentControl.Height>
                  <MultiBinding Converter="{StaticResource buttonAsyncIndicationSizeConverter}">
                    <Binding Path="ActualWidth" ElementName="PART_IndentsPanel" />
                    <Binding Path="ActualHeight" ElementName="PART_IndentsPanel" />
                    <Binding Path="ActualWidth" ElementName="PART_ImageSnapper" />
                  </MultiBinding>
                </dxcn:AsyncButtonContentControl.Height>
              </dxcn:AsyncButtonContentControl>
              <dxgtl:TreeListNodeExpandButton x:Name="PART_ExpandButton" HorizontalAlignment="Left" Command="{Binding View.Commands.ChangeNodeExpanded}" CommandParameter="{Binding RowHandle.Value}" IsChecked="{Binding IsExpanded}" IsExpandButtonVisible="{Binding Path=IsButtonVisible}" />
              <dxep:CheckEdit x:Name="PART_NodeCheckBox" Visibility="{Binding IsCheckBoxVisible, Converter={StaticResource BooleanToVisibilityConverter}}" IsEnabled="{Binding IsCheckBoxEnabled}" IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Focusable="False" IsThreeState="{Binding View.AllowIndeterminateCheckState}" Padding="0">
                <dxgtl:GridViewHitInfoBase.HitTestAcceptor>
                  <dxgtl:TreeListNodeCheckboxHitTestAcceptor />
                </dxgtl:GridViewHitInfoBase.HitTestAcceptor>
              </dxep:CheckEdit>
              <dx:MeasurePixelSnapper x:Name="PART_ImageSnapper" Visibility="{Binding IsImageVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <dx:DXImage x:Name="PART_NodeImage" Focusable="False" Source="{Binding Image, UpdateSourceTrigger=PropertyChanged}" Width="{Binding Path=View.NodeImageSize.Width}" Height="{Binding Path=View.NodeImageSize.Height}">
                  <dxgtl:GridViewHitInfoBase.HitTestAcceptor>
                    <dxgtl:TreeListNodeImageHitTestAcceptor />
                  </dxgtl:GridViewHitInfoBase.HitTestAcceptor>
                  <RenderOptions.BitmapScalingMode>NearestNeighbor</RenderOptions.BitmapScalingMode>
                </dx:DXImage>
              </dx:MeasurePixelSnapper>
            </dxgtl:IndentsPanel>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <DataTrigger Binding="{Binding ShowTreeIndentAsCellPart}" Value="true">
        <Setter Property="Background" Value="Transparent" />
      </DataTrigger>
      <DataTrigger Binding="{Binding IndentSelectionState}" Value="Focused">
        <Setter Property="Background" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=CellBorderFocusedBrush}}" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=IndentSelectionState}" Value="Selected">
        <Setter Property="Background" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderSelectedBrush}}" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=IndentSelectionState}" Value="FocusedAndSelected">
        <Setter Property="Background" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderFocusedBrush}}" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxcn:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True">
        <Setter Property="Background" Value="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxcn:AppearanceOptions.Background), RelativeSource={RelativeSource Self}}" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxcn:GridAppearanceOptions.HasDataAreaBackground), RelativeSource={RelativeSource Self}}" Value="True">
        <Setter Property="Background" Value="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxcn:GridAppearanceOptions.DataAreaBackground), RelativeSource={RelativeSource Self}}" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.FooterMarginControl}" TargetType="{x:Type dxg:FooterMarginControl}">
    <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid x:Name="PART_RootGrid" Background="{DynamicResource {dxgt:TreeListViewThemeKey ResourceKey=RowMarginBackgroundBrush}}">
            <Path x:Name="PART_OffsetPath" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" />
            <Path x:Name="PART_TreeLinePath" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" />
          </Grid>
          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxcn:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True">
              <Setter TargetName="PART_RootGrid" Property="Background" Value="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxcn:AppearanceOptions.Background), RelativeSource={RelativeSource Self}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxcn:GridAppearanceOptions.HasDataAreaBackground), RelativeSource={RelativeSource Self}}" Value="True">
              <Setter TargetName="PART_RootGrid" Property="Background" Value="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxcn:GridAppearanceOptions.DataAreaBackground), RelativeSource={RelativeSource Self}}" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.TreeViewRowMarginControl}" TargetType="{x:Type dxg:TreeViewRowMarginControl}">
    <Setter Property="Background" Value="{DynamicResource {dxgt:TreeListViewThemeKey ResourceKey=RowMarginBackgroundBrush}}" />
    <Setter Property="Template" Value="{DynamicResource {dxgt:TreeViewControlThemeKey ResourceKey=RowMarginControlTemplate}}" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.IndentScroller}" TargetType="{x:Type dxg:IndentScroller}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxg:IndentScroller}">
          <Grid x:Name="PART_ScrollableContent">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.RowOffsetPresenter}" TargetType="{x:Type dxg:RowOffsetPresenter}">
    <Setter Property="Template" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=RowOffsetTemplate}}" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.GroupRowOffsetPresenter}" TargetType="{x:Type dxg:GroupRowOffsetPresenter}">
    <Setter Property="Template" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=GroupRowOffsetTemplate}}" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.CardView}" TargetType="{x:Type dxg:CardView}" BasedOn="{StaticResource GridViewBaseStyle}">
    <Setter Property="Foreground" Value="{DynamicResource {dxgt:GridControlThemeKey ResourceKey=Foreground}}" />
    <Setter Property="ExpandStoryboard" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=CardGroupExpandingStoryboard}}" />
    <Setter Property="CollapseStoryboard" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=CardGroupCollapsingStoryboard}}" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="SeparatorThickness" Value="{DynamicResource {dxgt:CardViewThemeKey ResourceKey=SeparatorThickness}}" />
    <Setter Property="CellStyle" Value="{DynamicResource {dxgt:CardTemplatesThemeKey ResourceKey=CellStyle}}" />
    <Setter Property="CardStyle" Value="{DynamicResource {dxgt:CardTemplatesThemeKey ResourceKey=CardStyle}}" />
    <Setter Property="FocusedCardBorderTemplate" Value="{DynamicResource {dxgt:GridControlThemeKey ResourceKey=FocusedCardBorderTemplate}}" />
    <Setter Property="FocusedCellBorderCardViewTemplate" Value="{DynamicResource {dxgt:GridControlThemeKey ResourceKey=FocusedCellBorderCardViewTemplate}}" />
    <Setter Property="VerticalFocusedGroupRowBorderTemplate" Value="{DynamicResource {dxgt:GridControlThemeKey ResourceKey=VerticalFocusedGroupRowBorderTemplate}}" />
    <Setter Property="SeparatorTemplate" Value="{DynamicResource {dxgt:CardTemplatesThemeKey ResourceKey=SeparatorTemplate}}" />
    <Setter Property="CardTemplate" Value="{DynamicResource {dxgt:CardTemplatesThemeKey ResourceKey=CardTemplate}}" />
    <Setter Property="CardRowTemplate" Value="{DynamicResource {dxgt:CardTemplatesThemeKey ResourceKey=CardRowTemplate}}" />
    <Setter Property="CardHeaderTemplate" Value="{DynamicResource {dxgt:CardTemplatesThemeKey ResourceKey=CardHeaderTemplate}}" />
    <Setter Property="PrintTotalSummaryStyle" Value="{DynamicResource {dxgt:CardViewThemeKey ResourceKey=DefaultPrintTotalSummaryStyle}}" />
    <Setter Property="PrintTotalSummarySeparatorStyle" Value="{DynamicResource {dxgt:CardViewThemeKey ResourceKey=DefaultPrintTotalSummarySeparatorStyle}}" />
    <Setter Property="PrintFixedTotalSummaryStyle" Value="{DynamicResource {dxgt:CardViewThemeKey ResourceKey=DefaultPrintFixedTotalSummaryStyle}}" />
    <Setter Property="PrintCardRowTemplate" Value="{DynamicResource {dxgt:CardViewThemeKey ResourceKey=DefaultPrintCardRowTemplate}}" />
    <Setter Property="PrintCardHeaderTemplate" Value="{DynamicResource {dxgt:CardViewThemeKey ResourceKey=DefaultPrintCardHeaderTemplate}}" />
    <Setter Property="PrintCardViewItemTemplate" Value="{DynamicResource {dxgt:CardViewThemeKey ResourceKey=DefaultPrintCardViewItemTemplate}}" />
    <Setter Property="PrintCardTemplate" Value="{DynamicResource {dxgt:CardViewThemeKey ResourceKey=DefaultPrintCardTemplate}}" />
    <Setter Property="PrintCardContentTemplate" Value="{DynamicResource {dxgt:CardViewThemeKey ResourceKey=DefaultPrintCardContentTemplate}}" />
    <Setter Property="PrintHeaderTemplate" Value="{DynamicResource {dxgt:CardViewThemeKey ResourceKey=DefaultPrintHeaderTemplate}}" />
    <Setter Property="PrintGroupRowTemplate" Value="{DynamicResource {dxgt:CardViewThemeKey ResourceKey=DefaultPrintGroupRowTemplate}}" />
    <Setter Property="PrintCellStyle" Value="{DynamicResource {dxgt:CardViewThemeKey ResourceKey=DefaultPrintCellStyle}}" />
    <Setter Property="PrintGroupRowStyle" Value="{DynamicResource {dxgt:CardViewThemeKey ResourceKey=DefaultPrintGroupRowStyle}}" />
    <Setter Property="PrintRowIndentStyle" Value="{DynamicResource {dxgt:CardViewThemeKey ResourceKey=DefaultPrintRowIndentStyle}}" />
    <Setter Property="PrintCardRowIndentTemplate" Value="{DynamicResource {dxgt:CardViewThemeKey ResourceKey=DefaultPrintCardRowIndentTemplate}}" />
    <Setter Property="PrintFooterTemplate" Value="{DynamicResource {dxgt:CardViewThemeKey ResourceKey=DefaultPrintFooterTemplate}}" />
    <Setter Property="PrintFixedFooterTemplate" Value="{DynamicResource {dxgt:CardViewThemeKey ResourceKey=DefaultPrintFixedFooterTemplate}}" />
    <Setter Property="LeftGroupAreaIndent" Value="{DynamicResource {dxgt:CardViewThemeKey ResourceKey=LeftGroupAreaIndent}}" />
    <Setter Property="ShowSelectionRectangle" Value="True" />
    <Setter Property="Template" Value="{DynamicResource {dxgt:CardViewThemeKey ResourceKey=ControlTemplate}}" />
    <Style.Triggers>
      <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Self}}" Value="Horizontal">
        <Setter Property="CardMargin" Value="{DynamicResource {dxgt:CardViewThemeKey ResourceKey=HorizontalCardMargin}}" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=Orientation, RelativeSource={RelativeSource Self}}" Value="Vertical">
        <Setter Property="CardMargin" Value="{DynamicResource {dxgt:CardViewThemeKey ResourceKey=VerticalCardMargin}}" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="DataControlBaseStyle" TargetType="{x:Type dxgcore:DataControlBase}">
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="SnapsToDevicePixels" Value="true" />
    <Setter Property="Template" Value="{DynamicResource {dxgt:GridControlThemeKey ResourceKey=Template}}" />
    <Setter Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxt:BrushesThemeKey ResourceKey=SvgPalette}}" />
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Opacity" Value="0.35" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.GridControl}" TargetType="{x:Type dxg:GridControl}" BasedOn="{StaticResource DataControlBaseStyle}">
    <Setter Property="Foreground" Value="{DynamicResource {dxgt:GridControlThemeKey ResourceKey=Foreground}}" />
    <Setter Property="dx:DXSerializer.SerializationIDDefault" Value="GridControl" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.TreeListControl}" TargetType="{x:Type dxg:TreeListControl}" BasedOn="{StaticResource DataControlBaseStyle}" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.TreeViewControl}" TargetType="{x:Type dxg:TreeViewControl}" BasedOn="{StaticResource DataControlBaseStyle}">
    <Setter Property="Template" Value="{DynamicResource {dxgt:TreeViewControlThemeKey ResourceKey=Template}}" />
    <Setter Property="NodeTemplate" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=DataRowTemplate}}" />
    <Setter Property="TreeLineStyle" Value="{DynamicResource {dxgt:TreeListViewThemeKey ResourceKey=DefaultTreeLineStyle}}" />
    <Setter Property="NodeStyle" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=RowStyle}}" />
    <Setter Property="EvenRowBackground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=EvenRowBackgroundBrush}}" />
    <Setter Property="DropMarkerTemplate" Value="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DropMarker}}" />
    <Setter Property="DragDropHintTemplate" Value="{DynamicResource {dxt:DragDropThemeKey ResourceKey=DragDropHint}}" />
    <Setter Property="NodeContentStyle" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=CellStyle}}" />
    <Setter Property="NodeIndent" Value="{DynamicResource {dxgt:TreeListViewThemeKey ResourceKey=RowIndent}}" />
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="NodeIndent" Value="{DynamicResource {dxgt:TreeListViewThemeKey ResourceKey=RowIndentTouch}}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.TreeViewControlView}" TargetType="{x:Type dxg:TreeViewControlView}">
    <Setter Property="ShowColumnHeaders" Value="False" />
    <Setter Property="ShowHorizontalLines" Value="False" />
    <Setter Property="ShowVerticalLines" Value="False" />
    <Setter Property="ShowIndicator" Value="False" />
    <Setter Property="ImmediateUpdateCheckBoxState" Value="True" />
    <Setter Property="ExpandCollapseNodesOnNavigation" Value="True" />
    <Setter Property="AllowTreeIndentScrolling" Value="True" />
    <Setter Property="AllowLeaveFocusOnTab" Value="True" />
    <Setter Property="AllowDefaultContentForHierarchicalDataTemplate" Value="False" />
    <Setter Property="VerticalScrollbarVisibility" Value="Auto" />
    <Setter Property="Margin" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=Margin}}" />
    <Setter Property="FocusedCellBorderTemplate" Value="{DynamicResource {dxgt:GridControlThemeKey ResourceKey=FocusedCellBorderTemplate}}" />
    <Setter Property="SnapsToDevicePixels" Value="true" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Foreground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextUnfocusedBrush}}" />
    <Setter Property="RowPresenterMargin" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=RowPresenterGridMargin}}" />
    <Setter Property="Template" Value="{DynamicResource {dxgt:TreeViewControlThemeKey ResourceKey=ViewTemplate}}" />
    <Setter Property="DefaultDataRowTemplate" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=DataRowTemplate}}" />
    <Setter Property="LeftDataAreaIndent" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=LeftDataAreaIndent}}" />
    <Setter Property="RightDataAreaIndent" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=RightDataAreaIndent}}" />
    <Setter Property="FocusedRowBorderTemplate" Value="{DynamicResource {dxgt:GridControlThemeKey ResourceKey=FocusedRowBorderTemplate}}" />
    <Setter Property="RowMinHeight" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=RowMinHeight}}" />
    <Setter Property="ShowCriteriaInAutoFilterRow" Value="True" />
  </Style>
  <Style x:Key="AdditionalRowContainerStyle" TargetType="{x:Type dxg:AdditionalRowContainerControl}">
    <Setter Property="Foreground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextUnfocusedBrush}}" />
    <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxg:AdditionalRowContainerControl}">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Border x:Name="RowContentBorder" Background="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderNoneBrush}}" />
            <Border x:Name="RowBottomLine" BorderThickness="0,0,0,1" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}" Grid.Row="1" />
            <dx:DXDockPanel MinHeight="{Binding Path=View.RowMinHeight}" Grid.RowSpan="2">
              <dxgtl:RowIndicatorControl dx:DXDockPanel.Dock="Left" Width="{TemplateBinding IndicatorWidth}" Template="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=AdditionalTemplate}}" Visibility="{Binding Path=View.ActualShowIndicator, Converter={StaticResource BooleanToVisibilityConverter}}" />
              <dxgtl:DetailRowsIndentControl ItemsSource="{Binding Path=DataContext.View.DataControl.OwnerDetailDescriptor.DetailViewIndents, RelativeSource={RelativeSource Mode=TemplatedParent}}" DataContext="{Binding Path=(dx:DataObjectBase.DataObject), RelativeSource={RelativeSource Mode=TemplatedParent}}" />
              <dxgtl:DetailRowsIndentControl IsLeft="False" DockPanel.Dock="Right" ItemsSource="{Binding Path=DataContext.View.DataControl.OwnerDetailDescriptor.DetailViewIndents, RelativeSource={RelativeSource TemplatedParent}}" DataContext="{Binding Path=(dx:DataObjectBase.DataObject), RelativeSource={RelativeSource Mode=TemplatedParent}}" />
              <dxgtl:BandedViewContentSelector x:Name="bandedViewContentSelector" OwnerElement="{Binding RelativeSource={RelativeSource TemplatedParent}}" HorizontalContentAlignment="Stretch">
                <dxgtl:BandedViewContentSelector.TableViewContent>
                  <ControlTemplate>
                    <ContentControl Template="{Binding Path=OwnerElement.RowTemplate, RelativeSource={RelativeSource TemplatedParent}}">
                      <dx:MeasurePixelSnapper>
                        <dxgtl:GridScrollablePart x:Name="ScrollablePart" FixedColumnsDelimiterTemplate="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=FixedColumnsDelimiterTemplate}}" ScrollingMargin="{Binding Path=View.ScrollingHeaderVirtualizationMargin}" FixedNoneContentWidth="{Binding Path=FixedNoneContentWidth}" dxgtl:GridControl.CurrentView="{Binding Path=View}" FixedLeftVisibleColumns="{Binding Path=View.FixedLeftVisibleColumns}" FixedRightVisibleColumns="{Binding Path=View.FixedRightVisibleColumns}" FixedLineWidth="{Binding Path=View.FixedLineWidth}">
                          <dxgtl:GridScrollablePart.FitLeftContent>
                            <dxgtl:FitRowLeftContentPresenter Width="{Binding View.ActualExpandDetailHeaderWidth}" Content="{Binding Path=OwnerElement.DataContext, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding View.ActualShowDetailHeader, Converter={StaticResource BoolToVisibilityConverter}}" VerticalContentAlignment="Stretch" />
                          </dxgtl:GridScrollablePart.FitLeftContent>
                          <dxgtl:GridScrollablePart.FitContent>
                            <dxgtl:FitRowContentPresenter Content="{TemplateBinding DataContext}" VerticalContentAlignment="Stretch" />
                          </dxgtl:GridScrollablePart.FitContent>
                          <dxgtl:GridScrollablePart.FixedLeftContent>
                            <dxgtl:RowItemsControl x:Name="PART_FixedLeftColumnsItemsControl" ItemsSource="{Binding Path=FixedLeftCellData}" ItemsPanel="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=FixedLeftNoneDropPanelTemplate}}" ItemTemplate="{Binding Path=OwnerElement.ItemTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
                          </dxgtl:GridScrollablePart.FixedLeftContent>
                          <dxgtl:GridScrollablePart.FixedRightContent>
                            <dxgtl:RowItemsControl x:Name="PART_FixedRightColumnsItemsControl" ItemsSource="{Binding Path=FixedRightCellData}" ItemsPanel="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=FixedRightNoneDropPanelTemplate}}" ItemTemplate="{Binding Path=OwnerElement.ItemTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
                          </dxgtl:GridScrollablePart.FixedRightContent>
                          <dxgtl:GridScrollablePart.FixedNoneContent>
                            <dxgtl:RowItemsControl x:Name="PART_FixedNoneColumnsItemsControl" ItemsSource="{Binding Path=FixedNoneCellData}" ItemsPanel="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=FixedNoneDropPanelTemplate}}" ItemTemplate="{Binding Path=OwnerElement.ItemTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
                          </dxgtl:GridScrollablePart.FixedNoneContent>
                        </dxgtl:GridScrollablePart>
                      </dx:MeasurePixelSnapper>
                    </ContentControl>
                  </ControlTemplate>
                </dxgtl:BandedViewContentSelector.TableViewContent>
                <dxgtl:BandedViewContentSelector.BandedViewContent>
                  <ControlTemplate>
                    <ContentControl Template="{Binding Path=OwnerElement.RowTemplate, RelativeSource={RelativeSource TemplatedParent}}">
                      <dxgtl:GridScrollablePart ScrollingMargin="{Binding Path=View.ScrollingHeaderVirtualizationMargin}" FixedNoneContentWidth="{Binding Path=FixedNoneContentWidth}" dxgtl:GridControl.CurrentView="{Binding Path=View}" FixedLineWidth="{Binding Path=View.FixedLineWidth}" FixedColumnsDelimiterTemplate="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=FixedColumnsDelimiterTemplate}}" FixedLeftVisibleColumns="{Binding Path=View.DataControl.BandsLayout.FixedLeftVisibleBands}" FixedRightVisibleColumns="{Binding Path=View.DataControl.BandsLayout.FixedRightVisibleBands}">
                        <dxgtl:GridScrollablePart.FitLeftContent>
                          <dxgtl:FitRowLeftContentPresenter Width="{Binding View.ActualExpandDetailHeaderWidth}" Content="{Binding Path=OwnerElement.DataContext, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding View.ActualShowDetailHeader, Converter={StaticResource BoolToVisibilityConverter}}" VerticalContentAlignment="Stretch" />
                        </dxgtl:GridScrollablePart.FitLeftContent>
                        <dxgtl:GridScrollablePart.FitContent>
                          <dxgtl:FitRowContentPresenter Content="{TemplateBinding DataContext}" VerticalContentAlignment="Stretch" />
                        </dxgtl:GridScrollablePart.FitContent>
                        <dxgtl:GridScrollablePart.FixedLeftContent>
                          <dxgtl:BandedViewAdditionalRowControl dxgtl:GridControl.CurrentView="{Binding View}" ItemsSource="{Binding Path=FixedLeftCellData}" ClipToBounds="True" ItemTemplate="{Binding Path=OwnerElement.ItemTemplate, RelativeSource={RelativeSource TemplatedParent}}" Margin="0,0,0,-1">
                            <dxgtl:BandedViewAdditionalRowControl.ItemsPanel>
                              <ControlTemplate>
                                <dxgtl:BandsNoneDropPanel Bands="{Binding Path=View.DataControl.BandsLayout.FixedLeftVisibleBands}" Margin="0,0,0,1" />
                              </ControlTemplate>
                            </dxgtl:BandedViewAdditionalRowControl.ItemsPanel>
                          </dxgtl:BandedViewAdditionalRowControl>
                        </dxgtl:GridScrollablePart.FixedLeftContent>
                        <dxgtl:GridScrollablePart.FixedRightContent>
                          <dxgtl:BandedViewAdditionalRowControl dxgtl:GridControl.CurrentView="{Binding View}" ItemsSource="{Binding Path=FixedRightCellData}" ClipToBounds="True" ItemTemplate="{Binding Path=OwnerElement.ItemTemplate, RelativeSource={RelativeSource TemplatedParent}}" Margin="0,0,0,-1">
                            <dxgtl:BandedViewAdditionalRowControl.ItemsPanel>
                              <ControlTemplate>
                                <dxgtl:BandsNoneDropPanel Bands="{Binding Path=View.DataControl.BandsLayout.FixedRightVisibleBands}" Margin="0,0,0,1" />
                              </ControlTemplate>
                            </dxgtl:BandedViewAdditionalRowControl.ItemsPanel>
                          </dxgtl:BandedViewAdditionalRowControl>
                        </dxgtl:GridScrollablePart.FixedRightContent>
                        <dxgtl:GridScrollablePart.FixedNoneContent>
                          <dxgtl:BandedViewAdditionalRowControl dxgtl:GridControl.CurrentView="{Binding View}" ItemsSource="{Binding Path=FixedNoneCellData}" ClipToBounds="True" ItemTemplate="{Binding Path=OwnerElement.ItemTemplate, RelativeSource={RelativeSource TemplatedParent}}" Margin="0,0,0,-1">
                            <dxgtl:BandedViewAdditionalRowControl.ItemsPanel>
                              <ControlTemplate>
                                <dxgtl:BandsNoneDropPanel Bands="{Binding Path=View.DataControl.BandsLayout.FixedNoneVisibleBands}" Margin="0,0,0,1" />
                              </ControlTemplate>
                            </dxgtl:BandedViewAdditionalRowControl.ItemsPanel>
                          </dxgtl:BandedViewAdditionalRowControl>
                        </dxgtl:GridScrollablePart.FixedNoneContent>
                      </dxgtl:GridScrollablePart>
                    </ContentControl>
                  </ControlTemplate>
                </dxgtl:BandedViewContentSelector.BandedViewContent>
              </dxgtl:BandedViewContentSelector>
            </dx:DXDockPanel>
          </Grid>
          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.CurrentView).DataControl.(dxcn:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True">
              <Setter TargetName="RowContentBorder" Property="Background" Value="{Binding Path=(dxg:GridControl.CurrentView).DataControl.(dxcn:AppearanceOptions.Background), RelativeSource={RelativeSource TemplatedParent}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.CurrentView).DataControl.(dxcn:GridAppearanceOptions.HasDataAreaBackground), RelativeSource={RelativeSource Self}}" Value="True">
              <Setter TargetName="RowContentBorder" Property="Background" Value="{Binding Path=(dxg:GridControl.CurrentView).DataControl.(dxcn:GridAppearanceOptions.HasDataAreaBackground), RelativeSource={RelativeSource TemplatedParent}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsTreeView}" Value="False">
              <Setter TargetName="bandedViewContentSelector" Property="BandsLayout" Value="{Binding Path=View.DataControl.BandsLayout}" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="dxg:GridViewHitInfoBase.HitTestAcceptor">
      <Setter.Value>
        <dxgi:RowTableViewHitTestAcceptor />
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.AdditionalRowContainerControl}" TargetType="{x:Type dxg:AdditionalRowContainerControl}" BasedOn="{StaticResource AdditionalRowContainerStyle}" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.GridRow}" TargetType="{x:Type dxg:GridRow}">
    <Setter Property="Foreground" Value="Black" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Template" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=RowControlTemplate}}" />
    <Setter Property="dxg:GridViewHitInfoBase.HitTestAcceptor">
      <Setter.Value>
        <dxgi:RowTableViewHitTestAcceptor />
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.GroupGridRow}" TargetType="{x:Type dxg:GroupGridRow}">
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Template" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupRowControlTemplate}}" />
    <Setter Property="dxg:GridViewHitInfoBase.HitTestAcceptor">
      <Setter.Value>
        <dxgi:GroupRowTableViewHitTestAcceptor />
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.CardsContainer}" TargetType="{x:Type dxg:CardsContainer}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxg:CardsContainer}">
          <Grid x:Name="PART_GridBackground" Background="{DynamicResource {dxgt:CardViewThemeKey ResourceKey=Background}}">
            <Grid x:Name="gridCards" HorizontalAlignment="Left">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <dxgtl:CardSeparatorItemsControl x:Name="separatorsItemsControl" ItemsSource="{Binding Path=SeparatorInfo, ElementName=cardsPanel}" Grid.ColumnSpan="2">
                <dxgtl:CardSeparatorItemsControl.ItemsPanel>
                  <ControlTemplate>
                    <Canvas />
                  </ControlTemplate>
                </dxgtl:CardSeparatorItemsControl.ItemsPanel>
                <dxgtl:CardSeparatorItemsControl.ItemTemplate>
                  <DataTemplate>
                    <dxgtl:CardsResizer Visibility="{Binding Path=IsVisible, Converter={StaticResource BoolToVisibilityConverter}}" />
                  </DataTemplate>
                </dxgtl:CardSeparatorItemsControl.ItemTemplate>
              </dxgtl:CardSeparatorItemsControl>
              <dxgtl:RowOffset x:Name="rowOffset" AllowHorizontalLines="False" AllowVerticalLines="True" Offset="{DynamicResource {dxgt:CardViewThemeKey ResourceKey=ContainerIndent}}" RowLevel="{Binding Path=DataControl.ActualGroupCount}" Template="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=RowOffsetControlTemplate}}" Grid.ColumnSpan="2" Grid.Row="1">
                <dxgtl:RowOffset.LayoutTransform>
                  <RotateTransform Angle="-90" />
                </dxgtl:RowOffset.LayoutTransform>
              </dxgtl:RowOffset>
              <dxgh:CardsHierarchyPanel x:Name="cardsPanel" Grid.ColumnSpan="2" Grid.RowSpan="2" DataPresenter="{TemplateBinding DataPresenter}" ContainerIndent="{DynamicResource {dxgt:CardViewThemeKey ResourceKey=ContainerIndent}}" ItemsContainer="{Binding Path=MasterRootRowsContainer}" Orientation="{Binding Path=Orientation}" CardMargin="{Binding Path=CardMargin}" FixedSize="{Binding Path=FixedSize}" SeparatorThickness="{Binding Path=SeparatorThickness}" MaxCardCountInRow="{Binding Path=MaxCardCountInRow}" CardAlignment="{Binding Path=CardAlignment}" />
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=Orientation}" Value="Vertical">
              <Setter Property="VerticalAlignment" Value="Top" TargetName="gridCards" />
              <Setter Property="HorizontalAlignment" Value="Stretch" TargetName="gridCards" />
              <Setter Property="Grid.RowSpan" Value="2" TargetName="rowOffset" />
              <Setter Property="Grid.RowSpan" Value="2" TargetName="separatorsItemsControl" />
              <Setter Property="Grid.ColumnSpan" Value="1" TargetName="rowOffset" />
              <Setter Property="Grid.ColumnSpan" Value="1" TargetName="separatorsItemsControl" />
              <Setter Property="Grid.Row" Value="0" TargetName="rowOffset" />
              <Setter Property="Grid.Column" Value="1" TargetName="separatorsItemsControl" />
              <Setter TargetName="rowOffset" Property="LayoutTransform" Value="{x:Null}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxcn:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True">
              <Setter TargetName="PART_GridBackground" Property="Background" Value="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxcn:AppearanceOptions.Background), RelativeSource={RelativeSource Self}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxcn:GridAppearanceOptions.HasDataAreaBackground), RelativeSource={RelativeSource Self}}" Value="True">
              <Setter TargetName="PART_GridBackground" Property="Background" Value="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxcn:GridAppearanceOptions.DataAreaBackground), RelativeSource={RelativeSource Self}}" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.GridScrollablePart}" TargetType="{x:Type dxg:GridScrollablePart}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxg:GridScrollablePart}">
          <dx:DXDockPanel x:Name="PART_ScrollablePartPanel" LastChildFill="True">
            <ContentPresenter x:Name="PART_FitLeftContent" dxgcore:TableViewProperties.FixedAreaStyle="Left" dx:DXDockPanel.Dock="Left" />
            <ContentPresenter x:Name="PART_FixedLeftContent" dxgcore:TableViewProperties.FixedAreaStyle="Left" dx:DXDockPanel.Dock="Left" />
            <ContentPresenter x:Name="PART_FixedLeftLinePlaceHolder" dx:DXDockPanel.Dock="Left" Visibility="Collapsed" dxgtl:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}">
              <dxgtl:GridViewHitInfoBase.HitTestAcceptor>
                <dxgi:FixedLeftDivTableViewHitTestAcceptor />
              </dxgtl:GridViewHitInfoBase.HitTestAcceptor>
            </ContentPresenter>
            <Border x:Name="PART_FixedNoneCellsBorder" dx:DXDockPanel.Dock="Left">
              <dxgcore:FocusRectPresenter.IsHorizontalScrollHost>
                                True
                            </dxgcore:FocusRectPresenter.IsHorizontalScrollHost>
              <ContentPresenter x:Name="PART_FixedNoneContent" />
            </Border>
            <ContentPresenter x:Name="PART_FixedRightLinePlaceHolder" dx:DXDockPanel.Dock="Left" Visibility="Collapsed" dxgtl:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}">
              <dxgtl:GridViewHitInfoBase.HitTestAcceptor>
                <dxgi:FixedRightDivTableViewHitTestAcceptor />
              </dxgtl:GridViewHitInfoBase.HitTestAcceptor>
            </ContentPresenter>
            <ContentPresenter x:Name="PART_FixedRightContent" dxgcore:TableViewProperties.FixedAreaStyle="Left" dx:DXDockPanel.Dock="Left" />
            <dxgtl:FitContentContainer>
              <ContentPresenter x:Name="PART_FitContent" />
            </dxgtl:FitContentContainer>
          </dx:DXDockPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.TotalSummaryLeftIndentControl}" TargetType="{x:Type dxg:TotalSummaryLeftIndentControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxg:TotalSummaryLeftIndentControl}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <ContentControl x:Name="PART_Indicator" Width="{Binding Path=View.ActualIndicatorWidth}" Visibility="{Binding Path=View.ShowTotalSummaryIndicatorIndent, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <ContentControl Grid.Column="1" x:Name="PART_ExpandDetailColumn" Width="{Binding Path=View.ActualExpandDetailHeaderWidth}" Visibility="{Binding Path=View.ActualShowDetailHeader, Converter={StaticResource BooleanToVisibilityConverter}}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.GridTotalSummaryScrollablePart}" TargetType="{x:Type dxg:GridTotalSummaryScrollablePart}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxg:GridTotalSummaryScrollablePart}">
          <dx:DXDockPanel x:Name="PART_ScrollablePartPanel" LastChildFill="True">
            <ContentPresenter x:Name="PART_FitLeftContent" dxgcore:TableViewProperties.FixedAreaStyle="Left" dx:DXDockPanel.Dock="Left" />
            <ContentPresenter x:Name="PART_FixedLeftContent" dxgcore:TableViewProperties.FixedAreaStyle="Left" dx:DXDockPanel.Dock="Left" />
            <ContentPresenter x:Name="PART_FixedLeftLinePlaceHolder" dx:DXDockPanel.Dock="Left" Visibility="Collapsed" dxgtl:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" dxgtl:GridBorderHelper.ShowBorder="{Binding Path=(dxg:GridControl.CurrentView).IsHorizontalScrollBarVisible, RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource {dxgt:ScrollBarThemeKey ResourceKey=FixedLeftLinePlaceHolderTotalSummaryStyle}}">
              <dxgtl:GridViewHitInfoBase.HitTestAcceptor>
                <dxgi:FixedLeftDivTableViewHitTestAcceptor />
              </dxgtl:GridViewHitInfoBase.HitTestAcceptor>
            </ContentPresenter>
            <Border x:Name="PART_FixedNoneCellsBorder" ClipToBounds="True" dx:DXDockPanel.Dock="Left">
              <dxgcore:FocusRectPresenter.IsHorizontalScrollHost>
                                True
                            </dxgcore:FocusRectPresenter.IsHorizontalScrollHost>
              <ContentPresenter x:Name="PART_FixedNoneContent" />
            </Border>
            <ContentPresenter x:Name="PART_FixedRightLinePlaceHolder" dx:DXDockPanel.Dock="Left" Visibility="Collapsed" dxgtl:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" dxgtl:GridBorderHelper.ShowBorder="{Binding Path=(dxg:GridControl.CurrentView).IsHorizontalScrollBarVisible, RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource {dxgt:ScrollBarThemeKey ResourceKey=FixedLeftLinePlaceHolderTotalSummaryStyle}}">
              <dxgtl:GridViewHitInfoBase.HitTestAcceptor>
                <dxgi:FixedRightDivTableViewHitTestAcceptor />
              </dxgtl:GridViewHitInfoBase.HitTestAcceptor>
            </ContentPresenter>
            <ContentPresenter x:Name="PART_FixedRightContent" dxgcore:TableViewProperties.FixedAreaStyle="Left" dx:DXDockPanel.Dock="Left" />
            <dxgtl:FitContentContainer>
              <ContentPresenter x:Name="PART_FitContent" />
            </dxgtl:FitContentContainer>
          </dx:DXDockPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Margin" Value="{Binding Path=(dxg:GridControl.CurrentView).TotalSummaryPosition, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TotalSummaryPositionToMarginConverter}}" />
  </Style>
  <dxgtl:DefaultStyle x:Key="{dxgt:GridRowThemeKey ResourceKey=CellStyle}" TargetType="{x:Type dxgcore:CellContentPresenter}">
    <Style.Triggers>
      <Trigger Property="dxgcore:CellContentPresenter.SelectionState" Value="Selected">
        <Setter Property="dxgcore:CellContentPresenter.Background" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderSelectedBrush}}" />
        <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextRowSelectedBrush}}" />
      </Trigger>
      <Trigger Property="dxgcore:CellContentPresenter.SelectionState" Value="Focused">
        <Setter Property="dxgcore:CellContentPresenter.Background" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=CellBorderFocusedBrush}}" />
        <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=CellTextFocusedBrush}}" />
      </Trigger>
      <Trigger Property="dxgcore:CellContentPresenter.SelectionState" Value="FocusedAndSelected">
        <Setter Property="dxgcore:CellContentPresenter.Background" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderFocusedBrush}}" />
        <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextFocusedBrush}}" />
      </Trigger>
      <Trigger Property="dxgcore:CellContentPresenter.SelectionState" Value="Highlighted">
        <Setter Property="dxgcore:CellContentPresenter.Background" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=HoverBackground}}" />
        <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=HoverForeground}}" />
      </Trigger>
    </Style.Triggers>
  </dxgtl:DefaultStyle>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.FilterCellContentPresenter}" TargetType="{x:Type dxg:FilterCellContentPresenter}" BasedOn="{StaticResource {dxgt:GridRowThemeKey ResourceKey=CellStyle}}">
    <Setter Property="Template" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=FilterCellContentPresenterTemplate}}" />
    <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}" />
    <Setter Property="dxg:GridViewHitInfoBase.HitTestAcceptor">
      <Setter.Value>
        <dxgi:RowCellTableViewHitTestAcceptor />
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding IsFocusedCell}" Value="True" />
          <Condition Binding="{Binding View.DataControl.SelectionMode}" Value="None" />
        </MultiDataTrigger.Conditions>
        <MultiDataTrigger.Setters>
          <Setter Property="dx:SvgImageHelper.State" Value="Hover" />
        </MultiDataTrigger.Setters>
      </MultiDataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.NewItemRowCellContentPresenter}" TargetType="{x:Type dxg:NewItemRowCellContentPresenter}" BasedOn="{StaticResource {dxgt:GridRowThemeKey ResourceKey=CellStyle}}">
    <Setter Property="Template" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=CellContentPresenterTemplate}}" />
    <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}" />
    <Setter Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxet:InplaceBaseEditThemeKey ResourceKey=ValidationErrorSvgPalette}}" />
    <Setter Property="dxg:GridViewHitInfoBase.HitTestAcceptor">
      <Setter.Value>
        <dxgi:RowCellTableViewHitTestAcceptor />
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.GridCellContentPresenter}" TargetType="{x:Type dxg:GridCellContentPresenter}" BasedOn="{StaticResource {dxgt:GridRowThemeKey ResourceKey=CellStyle}}">
    <Setter Property="dxgcore:CellContentPresenter.Background" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=CellBorderNoneBrush}}" />
    <Setter Property="Template" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=CellContentPresenterTemplate}}" />
    <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}" />
    <Setter Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxet:InplaceBaseEditThemeKey ResourceKey=ValidationErrorSvgPalette}}" />
    <Setter Property="dxg:GridViewHitInfoBase.HitTestAcceptor">
      <Setter.Value>
        <dxgi:RowCellTableViewHitTestAcceptor />
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="{dxgt:TableViewThemeKey ResourceKey=GroupPanelContentTemplate}" TargetType="{x:Type dxg:GroupPanelControl}">
    <dx:MeasurePixelSnapper>
      <Border x:Name="GroupPanelBorder" Background="Transparent" BorderBrush="Transparent" BorderThickness="0">
        <Grid Margin="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=GroupPanelMargin}}">
          <TextBlock x:Name="PART_GroupPanelDragText" Style="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=GroupPanelDragTextStyle}}">
            <TextBlock.Text>
              <Binding Path="View.LocalizationDescriptor" RelativeSource="{RelativeSource TemplatedParent}" ConverterParameter="GridGroupPanelText">
                <Binding.Converter>
                  <dxgtl:DynamicLocalizationStringValueConvertor />
                </Binding.Converter>
              </Binding>
            </TextBlock.Text>
          </TextBlock>
          <dxgtl:GroupPanelContainer View="{TemplateBinding View}" Margin="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=GroupPanelSeparatorMargin}}" />
        </Grid>
      </Border>
    </dx:MeasurePixelSnapper>
  </ControlTemplate>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.GroupPanelControl}" TargetType="{x:Type dxg:GroupPanelControl}">
    <Setter Property="ClipToBounds" Value="True" />
    <Setter Property="Template" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=GroupPanelContentTemplate}}" />
    <Setter Property="dx:DragManager.DropTargetFactory">
      <Setter.Value>
        <dxgtl:GroupPanelColumnHeaderDropTargetFactory />
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxgt:TableViewThemeKey ResourceKey=CompactPanelOrderStyle}" TargetType="TextBlock">
    <Style.Triggers>
      <DataTrigger Binding="{Binding SortOrder}" Value="Descending">
        <Setter Property="Text">
          <Setter.Value>
            <Binding Path="(dxg:GridControl.CurrentView).LocalizationDescriptor" RelativeSource="{RelativeSource Self}" ConverterParameter="CompactModeDescendingOrder">
              <Binding.Converter>
                <dxgtl:DynamicLocalizationStringValueConvertor />
              </Binding.Converter>
            </Binding>
          </Setter.Value>
        </Setter>
      </DataTrigger>
      <DataTrigger Binding="{Binding SortOrder}" Value="Ascending">
        <Setter Property="Text">
          <Setter.Value>
            <Binding Path="(dxg:GridControl.CurrentView).LocalizationDescriptor" RelativeSource="{RelativeSource Self}" ConverterParameter="CompactModeAscendingOrder">
              <Binding.Converter>
                <dxgtl:DynamicLocalizationStringValueConvertor />
              </Binding.Converter>
            </Binding>
          </Setter.Value>
        </Setter>
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="CompactPanelSimpleButtonStyleBase" TargetType="dx:SimpleButton">
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="BorderThickness" Value="1" />
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=CompactPanelMouseOverBorderBrush}}" />
        <Setter Property="Background" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=CompactPanelMouseOverBackground}}" />
        <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=CompactPanelMouseOverForeground}}" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=CompactPanelMousePressedBorderBrush}}" />
        <Setter Property="Background" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=CompactPanelMousePressedBackground}}" />
        <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=CompactPanelMousePressedForeground}}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="CompactContentBorderStyle" TargetType="Border">
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" />
    <Setter Property="BorderThickness" Value="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}" />
    <Setter Property="BorderBrush" Value="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
    <Setter Property="Padding" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=CompactPanelContentMargin}}" />
    <Setter Property="CornerRadius" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=CompactPanelCornerRadius}}" />
  </Style>
  <Style x:Key="{dxgt:TableViewThemeKey ResourceKey=CompactPanelSortElementStyle}" TargetType="dx:SimpleButton" BasedOn="{StaticResource CompactPanelSimpleButtonStyleBase}">
    <Setter Property="HorizontalAlignment" Value="Right" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Border Style="{StaticResource CompactContentBorderStyle}">
            <dxgtl:TrimmingPanel DirectionTrimming="LeftToRight" VerticalAlignment="Center">
              <StackPanel Orientation="Horizontal">
                <TextBlock>
                  <TextBlock.Text>
                    <Binding StringFormat="{}{0} " Path="View.LocalizationDescriptor" ConverterParameter="CompactModeBy">
                      <Binding.Converter>
                        <dxgtl:DynamicLocalizationStringValueConvertor />
                      </Binding.Converter>
                    </Binding>
                  </TextBlock.Text>
                </TextBlock>
                <ContentControl Content="{Binding ColumnContent}" ContentTemplate="{Binding ColumnHeaderTemplate}" />
              </StackPanel>
              <ContentControl Margin="3,7,0,0" ContentTemplate="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=CompactPanelDownGlyph}}" VerticalAlignment="Top" />
            </dxgtl:TrimmingPanel>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxgt:TableViewThemeKey ResourceKey=CompactPanelFilterMenu}" TargetType="dx:SimpleButton" BasedOn="{StaticResource CompactPanelSimpleButtonStyleBase}">
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Border Style="{StaticResource CompactContentBorderStyle}">
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
              <TextBlock x:Name="tbFilterText">
                <TextBlock.Text>
                  <Binding Path="SelectedFilter.DisplayValue" />
                </TextBlock.Text>
              </TextBlock>
              <ContentControl Margin="3,7,0,0" ContentTemplate="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=CompactPanelDownGlyph}}" VerticalAlignment="Top" />
            </StackPanel>
          </Border>
          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding SelectedFilter}" Value="{x:Null}">
              <Setter TargetName="tbFilterText" Property="Text">
                <Setter.Value>
                  <Binding Path="View.LocalizationDescriptor" ConverterParameter="CompactModeFilter">
                    <Binding.Converter>
                      <dxgtl:DynamicLocalizationStringValueConvertor />
                    </Binding.Converter>
                  </Binding>
                </Setter.Value>
              </Setter>
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxgt:TableViewThemeKey ResourceKey=CompactPanelMergeMenu}" TargetType="dx:SimpleButton" BasedOn="{StaticResource CompactPanelSimpleButtonStyleBase}">
    <Setter Property="HorizontalAlignment" Value="Right" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Border Style="{StaticResource CompactContentBorderStyle}">
            <Grid>
              <StackPanel x:Name="filterPanel" Orientation="Horizontal" VerticalAlignment="Center">
                <TextBlock x:Name="tbFilterText">
                  <TextBlock.Text>
                    <Binding Path="SelectedFilter.DisplayValue" />
                  </TextBlock.Text>
                </TextBlock>
                <ContentControl Margin="3,7,0,0" ContentTemplate="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=CompactPanelDownGlyph}}" VerticalAlignment="Top" />
              </StackPanel>
              <dxgtl:TrimmingPanel x:Name="columnPanel" Visibility="Collapsed" DirectionTrimming="LeftToRight" VerticalAlignment="Center">
                <StackPanel Orientation="Horizontal">
                  <TextBlock>
                    <TextBlock.Text>
                      <Binding StringFormat="{}{0} " Path="View.LocalizationDescriptor" ConverterParameter="CompactModeBy">
                        <Binding.Converter>
                          <dxgtl:DynamicLocalizationStringValueConvertor />
                        </Binding.Converter>
                      </Binding>
                    </TextBlock.Text>
                  </TextBlock>
                  <ContentControl Content="{Binding ColumnContent}" ContentTemplate="{Binding ColumnHeaderTemplate}" />
                </StackPanel>
                <ContentControl Margin="3,7,0,0" ContentTemplate="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=CompactPanelDownGlyph}}" VerticalAlignment="Top" />
              </dxgtl:TrimmingPanel>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding SelectedFilter}" Value="{x:Null}">
              <Setter TargetName="tbFilterText" Property="Text">
                <Setter.Value>
                  <Binding Path="View.LocalizationDescriptor" ConverterParameter="CompactModeFilter">
                    <Binding.Converter>
                      <dxgtl:DynamicLocalizationStringValueConvertor />
                    </Binding.Converter>
                  </Binding>
                </Setter.Value>
              </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding View.CompactModeFilterItems.Count}" Value="0">
              <Setter TargetName="filterPanel" Property="Visibility" Value="Collapsed" />
              <Setter TargetName="columnPanel" Property="Visibility" Value="Visible" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="{dxgt:TableViewThemeKey ResourceKey=CompactPanelOrderTemplate}">
    <Border x:Name="border" Style="{StaticResource CompactContentBorderStyle}">
      <dxgtl:TrimmingPanel DirectionTrimming="LeftToRight">
        <TextBlock x:Name="tbSortText" HorizontalAlignment="Right" dxgtl:GridControl.CurrentView="{Binding DataContext.View, RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=CompactPanelOrderStyle}}" />
        <Grid VerticalAlignment="Center" Margin="3,3,0,0">
          <ContentControl ContentTemplate="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=CompactPanelSortGlyph}}">
            <ContentControl.LayoutTransform>
              <Binding Path="DataContext.SortOrder" RelativeSource="{RelativeSource TemplatedParent}">
                <Binding.Converter>
                  <dx:EnumToObjectConverter>
                    <dx:EnumToObjectConverter.Values>
                      <dx:EnumObjectProvider x:Key="Ascending">
                        <dx:EnumObjectProvider.Value>
                          <RotateTransform Angle="-180" />
                        </dx:EnumObjectProvider.Value>
                      </dx:EnumObjectProvider>
                    </dx:EnumToObjectConverter.Values>
                  </dx:EnumToObjectConverter>
                </Binding.Converter>
              </Binding>
            </ContentControl.LayoutTransform>
          </ContentControl>
        </Grid>
      </dxgtl:TrimmingPanel>
    </Border>
  </ControlTemplate>
  <Style x:Key="{dxgt:TableViewThemeKey ResourceKey=CompactPanelOrderElementStyle}" TargetType="CheckBox">
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="Template" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=CompactPanelOrderTemplate}}" />
    <Setter Property="Foreground" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=CompactPanelForeground}}" />
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=CompactPanelMouseOverBorderBrush}}" />
        <Setter Property="Background" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=CompactPanelMouseOverBackground}}" />
        <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=CompactPanelMouseOverForeground}}" />
      </Trigger>
      <Trigger Property="Button.IsPressed" Value="True">
        <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=CompactPanelMousePressedBorderBrush}}" />
        <Setter Property="Background" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=CompactPanelMousePressedBackground}}" />
        <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=CompactPanelMousePressedForeground}}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxgt:TableViewThemeKey ResourceKey=CompactPanelFilterListElementStyle}" TargetType="ListBoxItem">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBoxItem}">
          <Border Style="{StaticResource CompactContentBorderStyle}">
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Margin" Value="1,0,1,0" />
    <Setter Property="Foreground" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=CompactPanelForeground}}" />
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=CompactPanelMouseOverBorderBrush}}" />
        <Setter Property="Background" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=CompactPanelMouseOverBackground}}" />
        <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=CompactPanelMouseOverForeground}}" />
      </Trigger>
      <Trigger Property="Button.IsPressed" Value="True">
        <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=CompactPanelMousePressedBorderBrush}}" />
        <Setter Property="Background" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=CompactPanelMousePressedBackground}}" />
        <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=CompactPanelMousePressedForeground}}" />
      </Trigger>
      <Trigger Property="IsSelected" Value="True">
        <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=CompactPanelMousePressedBorderBrush}}" />
        <Setter Property="Background" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=CompactPanelMousePressedBackground}}" />
        <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=CompactPanelMousePressedForeground}}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxgt:TableViewThemeKey ResourceKey=CompactPanelFilterStyle}" TargetType="ListBox">
    <Setter Property="Foreground" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=CompactPanelForeground}}" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBox}">
          <ItemsPresenter />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <dxgtl:TrimmingPanel DirectionTrimming="RightToLeft" VerticalAlignment="Stretch" HorizontalAlignment="Left" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemContainerStyle" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=CompactPanelFilterListElementStyle}}" />
  </Style>
  <ControlTemplate x:Key="{dxgt:TableViewThemeKey ResourceKey=CompactPanelTemplate}" TargetType="{x:Type dxg:CompactPanel}">
    <Border Background="Transparent">
      <DockPanel Margin="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=SearchPanelWithoutGroupedPanelMargin}}">
        <Grid x:Name="PanelFilter" DockPanel.Dock="Left">
          <ListBox x:Name="PART_lbFilters" SelectedItem="{Binding SelectedFilter, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ItemsSource="{Binding View.CompactModeFilterItems, RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=CompactPanelFilterStyle}}" DisplayMemberPath="DisplayValue" />
          <dx:SimpleButton x:Name="PART_FilterContextMenu" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=CompactPanelFilterMenu}}" />
          <Grid.Visibility>
            <Binding Path="View.CompactModeFilterItems.Count" RelativeSource="{RelativeSource TemplatedParent}">
              <Binding.Converter>
                <dxmvvm:ObjectToObjectConverter DefaultTarget="Visible">
                  <dxmvvm:MapItem Source="0" Target="Collapsed" />
                </dxmvvm:ObjectToObjectConverter>
              </Binding.Converter>
            </Binding>
          </Grid.Visibility>
        </Grid>
        <CheckBox x:Name="cbOrder" DockPanel.Dock="Right" DataContext="{TemplateBinding Column}" IsChecked="{Binding Order, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" Style="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=CompactPanelOrderElementStyle}}">
          <CheckBox.IsEnabled>
            <MultiBinding Converter="{StaticResource SortOrderConverter}">
              <Binding Path="SortOrder" />
              <Binding Path="AllowedSortOrders" />
            </MultiBinding>
          </CheckBox.IsEnabled>
        </CheckBox>
        <dx:SimpleButton DockPanel.Dock="Right" x:Name="PART_Columns" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=CompactPanelSortElementStyle}}" />
        <dx:SimpleButton DockPanel.Dock="Right" x:Name="PART_MergeBtn" Visibility="Collapsed" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=CompactPanelMergeMenu}}" />
      </DockPanel>
    </Border>
    <ControlTemplate.Triggers>
      <DataTrigger Binding="{Binding CompactFilterElementShowMode, RelativeSource={RelativeSource Self}}" Value="List">
        <Setter TargetName="PART_FilterContextMenu" Property="Visibility" Value="Collapsed" />
        <Setter TargetName="PART_lbFilters" Property="Visibility" Value="Visible" />
      </DataTrigger>
      <DataTrigger Binding="{Binding CompactFilterElementShowMode, RelativeSource={RelativeSource Self}}" Value="ContextMenu">
        <Setter TargetName="PART_FilterContextMenu" Property="Visibility" Value="Visible" />
        <Setter TargetName="PART_lbFilters" Property="Visibility" Value="Collapsed" />
      </DataTrigger>
      <DataTrigger Binding="{Binding CompactFilterElementShowMode, RelativeSource={RelativeSource Self}}" Value="Never">
        <Setter TargetName="PART_FilterContextMenu" Property="Visibility" Value="Collapsed" />
        <Setter TargetName="PART_lbFilters" Property="Visibility" Value="Collapsed" />
      </DataTrigger>
      <DataTrigger Binding="{Binding CompactSortElementShowMode, RelativeSource={RelativeSource Self}}" Value="CompactMode">
        <Setter TargetName="PART_Columns" Property="Visibility" Value="{Binding View.IsCompactMode, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}" />
        <Setter TargetName="cbOrder" Property="Visibility" Value="{Binding View.IsCompactMode, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}" />
      </DataTrigger>
      <DataTrigger Binding="{Binding CompactSortElementShowMode, RelativeSource={RelativeSource Self}}" Value="Never">
        <Setter TargetName="PART_Columns" Property="Visibility" Value="Collapsed" />
        <Setter TargetName="cbOrder" Property="Visibility" Value="Collapsed" />
      </DataTrigger>
      <DataTrigger Binding="{Binding CompactFilterElementShowMode, RelativeSource={RelativeSource Self}}" Value="ContextMenuWithSorting">
        <Setter TargetName="PART_FilterContextMenu" Property="Visibility" Value="Collapsed" />
        <Setter TargetName="PART_lbFilters" Property="Visibility" Value="Collapsed" />
        <Setter TargetName="cbOrder" Property="Visibility" Value="Collapsed" />
        <Setter TargetName="PART_Columns" Property="Visibility" Value="Collapsed" />
        <Setter TargetName="PART_MergeBtn" Property="Visibility" Value="Visible" />
      </DataTrigger>
      <DataTrigger Binding="{Binding CompactSortElementShowMode, RelativeSource={RelativeSource Self}}" Value="Always">
        <Setter TargetName="PART_Columns" Property="Visibility" Value="Visible" />
        <Setter TargetName="cbOrder" Property="Visibility" Value="Visible" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Column, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
        <Setter TargetName="cbOrder" Property="Visibility" Value="Collapsed" />
      </DataTrigger>
      <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
        <Setter Property="TextBlock.FontSize" Value="18" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.CompactPanel}" TargetType="{x:Type dxg:CompactPanel}">
    <Setter Property="ClipToBounds" Value="True" />
    <Setter Property="Template" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=CompactPanelTemplate}}" />
    <Setter Property="CompactFilterElementShowMode" Value="{Binding View.CompactFilterElementShowMode, RelativeSource={RelativeSource Self}}" />
    <Setter Property="CompactSortElementShowMode" Value="{Binding View.CompactSortElementShowMode, RelativeSource={RelativeSource Self}}" />
    <Setter Property="Foreground" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=CompactPanelForeground}}" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.GroupGridRowPresenter}" TargetType="{x:Type dxg:GroupGridRowPresenter}">
    <Setter Property="Focusable" Value="True" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.GroupSummaryDefaultLayoutControl}" TargetType="{x:Type dxg:GroupSummaryDefaultLayoutControl}">
    <Setter Property="Margin" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupDefaultSummaryPadding}}" />
    <Setter Property="HorizontalAlignment" Value="Right" />
    <Setter Property="ItemTemplate">
      <Setter.Value>
        <DataTemplate>
          <dxgtl:GroupSummaryContentPresenter VerticalAlignment="Center" Content="{Binding}" ContentTemplateSelector="{Binding Path=View.ActualGroupSummaryItemTemplateSelector}" />
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <StackPanel Orientation="Horizontal" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <ItemsPresenter />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <dx:BoolToThicknessConverter x:Key="GroupColumnSummaryBoolToThicknessConverter" ThicknessFalse="0" ThicknessTrue="0,0,1,0" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.GroupColumnSummaryControl}" TargetType="{x:Type dxg:GroupColumnSummaryControl}">
    <Setter Property="Padding" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupColumnSummaryPadding}}" />
    <Setter Property="NormalBorderBrush" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}" />
    <Setter Property="FocusedBorderBrush" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupColumnSummaryFocusedBorderBrush}}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxg:GroupColumnSummaryControl}">
          <Border Padding="{TemplateBinding Padding}" BorderThickness="{Binding HasRightSibling, Converter={StaticResource GroupColumnSummaryBoolToThicknessConverter}}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Width="{Binding ActualWidth}">
            <ContentPresenter x:Name="PART_Content" Content="{Binding}" ContentTemplate="{Binding View.GroupColumnSummaryItemTemplate}" Visibility="{Binding HasSummary, Converter={StaticResource BoolToVisibilityConverter}}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Padding" Value="12" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.GroupBandSummaryControl}" TargetType="{x:Type dxg:GroupBandSummaryControl}">
    <Setter Property="Padding" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupBandSummaryPadding}}" />
    <Setter Property="NormalBorderBrush" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupBandSummaryNormalBorderBrush}}" />
    <Setter Property="FocusedBorderBrush" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupBandSummaryFocusedBorderBrush}}" />
    <Setter Property="NormalForeground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextUnfocusedBrush}}" />
    <Setter Property="FocusedForeground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextFocusedBrush}}" />
    <Setter Property="NormalBackground" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupBandSummaryNormalBackground}}" />
    <Setter Property="FocusedBackground" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupBandSummaryFocusedBackground}}" />
    <Setter Property="Template" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupBandSummaryTemplate}}" />
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Padding" Value="44" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <dxgcore:DefaultDataTemplate x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupColumnSummaryControlTemplate}">
    <dxgtl:GroupColumnSummaryControl IsReady="{Binding Path=GroupRowData.IsReady}" IsGroupRowFocused="{Binding GroupRowData.IsFocused}" Style="{Binding View.GroupColumnSummaryContentStyle}" />
  </dxgcore:DefaultDataTemplate>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.GroupSummaryItemsControl}" TargetType="{x:Type dxg:GroupSummaryItemsControl}">
    <Setter Property="ItemTemplate" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupColumnSummaryControlTemplate}}" />
    <Setter Property="ItemsPanel" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=FixedNoneDropPanelTemplate}}" />
  </Style>
  <DataTemplate x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupBandSummaryControlTemplate}">
    <Grid Margin="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GroupBandSummaryMargin}}">
      <dxgtl:GroupBandSummaryControl IsReady="{Binding Path=GroupRowData.IsReady}" IsGroupRowFocused="{Binding GroupRowData.IsFocused}" HasTopElement="{Binding Column.HasTopElement}" Style="{Binding View.GroupBandSummaryContentStyle}" />
    </Grid>
  </DataTemplate>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.GroupSummaryAlignByColumnsLayoutControl}" TargetType="{x:Type dxg:GroupSummaryAlignByColumnsLayoutControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxg:GroupSummaryAlignByColumnsLayoutControl}">
          <Border ClipToBounds="True">
            <Grid Margin="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BandSummaryMargin}}">
              <dxgtl:BandedViewContentSelector x:Name="PART_BandedViewContentSelector" BandsLayout="{Binding Path=View.DataControl.BandsLayout}" HorizontalAlignment="Stretch" Margin="0,0,0,-1">
                <dxgtl:BandedViewContentSelector.TableViewContent>
                  <ControlTemplate>
                    <dxgtl:GridScrollablePart x:Name="PART_ScrollablePart" FixedColumnsDelimiterTemplate="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=FixedColumnsDelimiterTemplate}}" ScrollingMargin="{Binding Path=View.ScrollingHeaderVirtualizationMargin}" FixedNoneContentWidth="{Binding Path=FixedNoneContentWidth}" dxgtl:GridControl.CurrentView="{Binding Path=View}" FixedLeftVisibleColumns="{Binding Path=View.FixedLeftVisibleColumns}" FixedRightVisibleColumns="{Binding Path=View.FixedRightVisibleColumns}" FixedLineWidth="{Binding Path=View.FixedLineWidth}">
                      <dxgtl:GridScrollablePart.FixedLeftContent>
                        <dxgtl:GroupSummaryItemsControl x:Name="PART_FixedLeftColumnsItemsControl" ItemsSource="{Binding Path=FixedLeftGroupSummaryData}" />
                      </dxgtl:GridScrollablePart.FixedLeftContent>
                      <dxgtl:GridScrollablePart.FixedRightContent>
                        <dxgtl:GroupSummaryItemsControl x:Name="PART_FixedRightColumnsItemsControl" ItemsSource="{Binding Path=FixedRightGroupSummaryData}" />
                      </dxgtl:GridScrollablePart.FixedRightContent>
                      <dxgtl:GridScrollablePart.FixedNoneContent>
                        <dxgtl:GroupSummaryItemsControl x:Name="PART_FixedNoneColumnsItemsControl" ItemsSource="{Binding Path=FixedNoneGroupSummaryData}" />
                      </dxgtl:GridScrollablePart.FixedNoneContent>
                      <dxgtl:GridScrollablePart.FitContent>
                        <dxgtl:FitRowContentPresenter Content="{Binding}" VerticalContentAlignment="Stretch" />
                      </dxgtl:GridScrollablePart.FitContent>
                    </dxgtl:GridScrollablePart>
                  </ControlTemplate>
                </dxgtl:BandedViewContentSelector.TableViewContent>
                <dxgtl:BandedViewContentSelector.BandedViewContent>
                  <ControlTemplate>
                    <dxgtl:GridScrollablePart x:Name="PART_ScrollablePart" FixedColumnsDelimiterTemplate="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=FixedColumnsDelimiterTemplate}}" ScrollingMargin="{Binding Path=View.ScrollingHeaderVirtualizationMargin}" FixedNoneContentWidth="{Binding Path=FixedNoneContentWidth}" dxgtl:GridControl.CurrentView="{Binding Path=View}" FixedLeftVisibleColumns="{Binding Path=View.DataControl.BandsLayout.FixedLeftVisibleBands}" FixedRightVisibleColumns="{Binding Path=View.DataControl.BandsLayout.FixedRightVisibleBands}" FixedLineWidth="{Binding Path=View.FixedLineWidth}">
                      <dxgtl:GridScrollablePart.FixedLeftContent>
                        <dxgtl:BandedViewGroupSummaryItemsControl ItemsSource="{Binding Path=FixedLeftGroupSummaryData}" dxgtl:GridControl.CurrentView="{Binding View}" ItemTemplate="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupBandSummaryControlTemplate}}">
                          <dxgtl:BandedViewGroupSummaryItemsControl.ItemsPanel>
                            <ControlTemplate>
                              <dxgtl:BandsGroupSummaryAlignByColumnsPanel Bands="{Binding Path=View.DataControl.BandsLayout.FixedLeftVisibleBands}" Fixed="Left" LeftMargin="{Binding Path=Margin.Left, ElementName=PART_BandedViewContentSelector}" />
                            </ControlTemplate>
                          </dxgtl:BandedViewGroupSummaryItemsControl.ItemsPanel>
                        </dxgtl:BandedViewGroupSummaryItemsControl>
                      </dxgtl:GridScrollablePart.FixedLeftContent>
                      <dxgtl:GridScrollablePart.FixedRightContent>
                        <dxgtl:BandedViewGroupSummaryItemsControl ItemsSource="{Binding Path=FixedRightGroupSummaryData}" dxgtl:GridControl.CurrentView="{Binding View}" ItemTemplate="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupBandSummaryControlTemplate}}">
                          <dxgtl:BandedViewGroupSummaryItemsControl.ItemsPanel>
                            <ControlTemplate>
                              <dxgtl:BandsGroupSummaryAlignByColumnsPanel Bands="{Binding Path=View.DataControl.BandsLayout.FixedRightVisibleBands}" Fixed="Right" LeftMargin="{Binding Path=Margin.Left, ElementName=PART_BandedViewContentSelector}" />
                            </ControlTemplate>
                          </dxgtl:BandedViewGroupSummaryItemsControl.ItemsPanel>
                        </dxgtl:BandedViewGroupSummaryItemsControl>
                      </dxgtl:GridScrollablePart.FixedRightContent>
                      <dxgtl:GridScrollablePart.FixedNoneContent>
                        <dxgtl:BandedViewGroupSummaryItemsControl ItemsSource="{Binding Path=FixedNoneGroupSummaryData}" dxgtl:GridControl.CurrentView="{Binding View}" ItemTemplate="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupBandSummaryControlTemplate}}" MinHeight="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=BandedViewGroupSummaryMinHeight}}">
                          <dxgtl:BandedViewGroupSummaryItemsControl.ItemsPanel>
                            <ControlTemplate>
                              <dxgtl:BandsGroupSummaryAlignByColumnsPanel Bands="{Binding Path=View.DataControl.BandsLayout.FixedNoneVisibleBands}" Fixed="None" LeftMargin="{Binding Path=Margin.Left, ElementName=PART_BandedViewContentSelector}" />
                            </ControlTemplate>
                          </dxgtl:BandedViewGroupSummaryItemsControl.ItemsPanel>
                        </dxgtl:BandedViewGroupSummaryItemsControl>
                      </dxgtl:GridScrollablePart.FixedNoneContent>
                      <dxgtl:GridScrollablePart.FitContent>
                        <dxgtl:FitRowContentPresenter Content="{Binding}" VerticalContentAlignment="Stretch" />
                      </dxgtl:GridScrollablePart.FitContent>
                    </dxgtl:GridScrollablePart>
                  </ControlTemplate>
                </dxgtl:BandedViewContentSelector.BandedViewContent>
              </dxgtl:BandedViewContentSelector>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.GridGroupExpandButton}" TargetType="{x:Type dxg:GridGroupExpandButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxg:GridGroupExpandButton}">
          <dxgtl:GridToggleStateButton dx:DataObjectBase.DataObject="{Binding}" dx:DataObjectBase.NeedsResetEvent="True" x:Name="toggleButton" ClickMode="Press" IsChecked="{Binding Path=IsChecked, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Command="{TemplateBinding Command}" CommandParameter="{TemplateBinding CommandParameter}" Style="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=ExpandButtonStyle}}" Foreground="{TemplateBinding Foreground}">
            <dx:DoubleClicker.IsDoubleClickArea>False</dx:DoubleClicker.IsDoubleClickArea>
          </dxgtl:GridToggleStateButton>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="dxg:GridViewHitInfoBase.HitTestAcceptor">
      <Setter.Value>
        <dxgi:GroupRowButtonTableViewHitTestAcceptor />
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.GridDetailExpandButton}" TargetType="{x:Type dxg:GridDetailExpandButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxg:GridDetailExpandButton}">
          <dxgtl:GridToggleStateButton dx:DataObjectBase.DataObject="{Binding}" dx:DataObjectBase.NeedsResetEvent="True" x:Name="toggleButton" ClickMode="Press" IsChecked="{Binding Path=IsChecked, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Command="{TemplateBinding Command}" CommandParameter="{TemplateBinding CommandParameter}" Foreground="{TemplateBinding Foreground}" dxgtl:GridDetailExpandButtonContainer.IsDetailButtonVisible="{Binding Path=(dxg:GridDetailExpandButtonContainer.IsDetailButtonVisible), RelativeSource={RelativeSource TemplatedParent}}">
            <dxgtl:GridToggleStateButton.ShowRowBreak>
              <MultiBinding Converter="{StaticResource ResourceKey=ShowRowBreakConverter}">
                <MultiBinding.Bindings>
                  <Binding Path="ShowRowBreak" />
                  <Binding Path="IsEditFormVisible" />
                </MultiBinding.Bindings>
              </MultiBinding>
            </dxgtl:GridToggleStateButton.ShowRowBreak>
          </dxgtl:GridToggleStateButton>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="dxg:GridViewHitInfoBase.HitTestAcceptor">
      <Setter.Value>
        <dxgi:MasterRowButtonTableViewHitTestAcceptor />
      </Setter.Value>
    </Setter>
  </Style>
  <dx:BooleanToDoubleConverter x:Key="BooleanToDoubleConverter" />
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.TreeListNodeExpandButton}" TargetType="{x:Type dxg:TreeListNodeExpandButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="dxg:TreeListNodeExpandButton">
          <dx:DXExpander HorizontalAlignment="Left" AnimationProgress="{Binding IsExpandButtonVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToDoubleConverter}}">
            <dxgtl:GridToggleStateButton dx:DataObjectBase.DataObject="{Binding}" dx:DataObjectBase.NeedsResetEvent="True" x:Name="toggleButton" ClickMode="Press" IsChecked="{Binding Path=IsChecked, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Command="{TemplateBinding Command}" CommandParameter="{TemplateBinding CommandParameter}" Style="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=ExpandButtonStyle}}" Foreground="{TemplateBinding Foreground}" />
          </dx:DXExpander>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.TreeViewNodeExpandButton}" TargetType="{x:Type dxg:TreeViewNodeExpandButton}">
    <Setter Property="Template" Value="{DynamicResource {dxgt:TreeViewControlThemeKey ResourceKey=ExpandButtonTemplate}}" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.DetailRowsContentControl}" TargetType="{x:Type dxg:DetailRowsContentControl}">
    <Setter Property="dxg:DetailSummaryControlBase.SummaryDetailLevel" Value="{Binding Path=(dxg:DetailSummaryControlBase.SummaryDetailLevel), RelativeSource={RelativeSource TemplatedParent}}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxg:DetailRowsContentControl}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <dxgtl:DetailRowIndicatorControl Width="{Binding Path=View.ActualIndicatorWidth, RelativeSource={RelativeSource TemplatedParent}}" Template="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=ItemTemplate}}" Visibility="{Binding Path=View.ActualShowIndicator, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
            <Border Grid.Column="1" Grid.ColumnSpan="2" Style="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=DetailTotalSummaryIndentBorderStyle}}" Visibility="{Binding Path=NeedBottomLine, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}" />
            <dxgtl:DetailRowsIndentControl Grid.Column="1" ItemsSource="{Binding Path=DetailViewIndents, RelativeSource={RelativeSource TemplatedParent}}" ShowLastDetailMargin="{TemplateBinding ShowLastDetailMargin}" />
            <ContentPresenter Grid.Column="2" />
            <dxgtl:DetailRowsIndentControl IsLeft="False" Grid.Column="3" ItemsSource="{Binding Path=DetailViewIndents, RelativeSource={RelativeSource TemplatedParent}}" ShowLastDetailMargin="{TemplateBinding ShowLastDetailMargin}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.DetailContentControl}" TargetType="{x:Type dxg:DetailContentControl}">
    <Setter Property="Foreground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextUnfocusedBrush}}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="dxg:DetailContentControl">
          <dxgtl:DetailRowsContentControl View="{Binding Path=MasterRowData.View, RelativeSource={RelativeSource TemplatedParent}}" DetailDescriptor="{TemplateBinding DetailDescriptor}" ShowLastDetailMargin="{TemplateBinding ShowLastDetailMargin}">
            <dxgtl:DetailDescriptorContentBorder ShowBottomLine="{TemplateBinding ShowBottomLine}">
              <dxgcore:DetailRowContentPresenter MasterRowData="{TemplateBinding MasterRowData}" Content="{Binding MasterRowData.Row, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{Binding DetailDescriptor.ContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
            </dxgtl:DetailDescriptorContentBorder>
          </dxgtl:DetailRowsContentControl>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.DetailMarginControl}" TargetType="{x:Type dxg:DetailMarginControl}">
    <Setter Property="Height" Value="{Binding Path=DetailDescriptor.Margin.Top, RelativeSource={RelativeSource Self}}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="dxg:DetailMarginControl">
          <DockPanel>
            <dxgtl:DetailRowIndicatorControl Width="{Binding Path=View.ActualIndicatorWidth}" Template="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=ItemTemplate}}" Visibility="{Binding Path=View.ActualShowIndicator, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <dxgtl:DetailRowsIndentControl x:Name="leftIndents" ItemsSource="{Binding Path=DetailDescriptor.DetailViewIndents, RelativeSource={RelativeSource TemplatedParent}}" ShowLastDetailMargin="{TemplateBinding ShowLastDetailMargin}" />
            <dxgtl:DetailRowsIndentControl IsLeft="False" x:Name="rightIndents" ItemsSource="{Binding Path=DetailDescriptor.DetailViewIndents, RelativeSource={RelativeSource TemplatedParent}}" ShowLastDetailMargin="{TemplateBinding ShowLastDetailMargin}" DockPanel.Dock="Right" />
            <Border x:Name="bottomBorder" BorderBrush="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}" DockPanel.Dock="Bottom" />
            <Border x:Name="topBorder" BorderBrush="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=BorderBrush}}" BorderThickness="0,1,0,0" Margin="-1,-1,-1,0" Visibility="Collapsed" />
          </DockPanel>
          <ControlTemplate.Triggers>
            <Trigger Property="ShowBottomLine" Value="True">
              <Setter Property="ShowBottomLine" Value="True" TargetName="leftIndents" />
              <Setter Property="ShowBottomLine" Value="True" TargetName="rightIndents" />
              <Setter Property="Visibility" Value="Visible" TargetName="topBorder" />
            </Trigger>
            <Trigger Property="IsTop" Value="False">
              <Setter Property="BorderThickness" Value="0,0,0,1" TargetName="bottomBorder" />
            </Trigger>
            <Trigger Property="IsTop" Value="True">
              <Setter Property="ShowBottomLine" Value="False" TargetName="leftIndents" />
              <Setter Property="ShowBottomLine" Value="False" TargetName="rightIndents" />
              <Setter Property="Margin" Value="-1,0,-1,0" TargetName="bottomBorder" />
              <Setter Property="BorderThickness" Value="0,0,0,1" TargetName="topBorder" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsTop" Value="False">
        <Setter Property="Height" Value="{Binding Path=DetailDescriptor.Margin.Bottom, RelativeSource={RelativeSource Self}}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.DetailTabHeadersControl}" TargetType="{x:Type dxg:DetailTabHeadersControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="dxg:DetailTabHeadersControl">
          <dxgtl:DetailRowsContentControl View="{Binding Path=View}" DetailDescriptor="{Binding Path=View.DataControl.DetailDescriptor}" ShowLastDetailMargin="{TemplateBinding ShowLastDetailMargin}">
            <Border MinHeight="20">
              <dxgtl:DetailTabControl Padding="0" RowData="{Binding}">
                <dxgtl:DetailTabControl.ItemsSource>
                  <Binding Path="DetailDescriptor.DetailDescriptors" RelativeSource="{RelativeSource TemplatedParent}">
                    <Binding.Converter>
                      <dxgcore:DetailDescriptorCollectionConverter />
                    </Binding.Converter>
                  </Binding>
                </dxgtl:DetailTabControl.ItemsSource>
                <dxgtl:DetailTabControl.ItemHeaderTemplate>
                  <DataTemplate>
                    <dxgtl:DetailTabHeaderContentControl Content="{Binding Content.HeaderContent}" />
                  </DataTemplate>
                </dxgtl:DetailTabControl.ItemHeaderTemplate>
                <dxgtl:DetailTabControl.ItemTemplate>
                  <DataTemplate />
                </dxgtl:DetailTabControl.ItemTemplate>
              </dxgtl:DetailTabControl>
              <!--<dxgcore:DetailRowContentPresenter MasterRowData="{TemplateBinding MasterRowData}" Content="{Binding MasterRowData.Row, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{Binding DetailDescriptor.ContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"/>-->
            </Border>
          </dxgtl:DetailRowsContentControl>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.DetailTabHeaderContentControl}" TargetType="{x:Type dxg:DetailTabHeaderContentControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="dxg:DetailTabHeaderContentControl">
          <ContentPresenter />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.DetailColumnHeadersControl}" TargetType="{x:Type dxg:DetailColumnHeadersControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="dxg:DetailColumnHeadersControl">
          <dx:MeasurePixelSnapper>
            <dxgcore:DetailRowContentPresenter MinHeight="20" MasterRowData="{TemplateBinding MasterRowData}" Content="{Binding}" dxgtl:GridControl.CurrentView="{Binding View}">
              <dxgcore:DetailRowContentPresenter.ContentTemplate>
                <DataTemplate>
                  <dxgtl:DetailRowsContentControl View="{Binding Path=View}" DetailDescriptor="{Binding Path=View.DataControl.OwnerDetailDescriptor}" NeedBottomLine="True">
                    <Grid>
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                      </Grid.RowDefinitions>
                      <dxgtl:BandsContainerControl x:Name="PART_BandsContainer" DataContext="{Binding Path=View}" BandsLayout="{Binding Path=DataControl.BandsLayout}" Visibility="Collapsed" dxgtl:GridControl.CurrentView="{Binding Path=(dxg:GridControl.CurrentView), RelativeSource={RelativeSource TemplatedParent}}" />
                      <dxgtl:ColumnHeaderPanel dxgtl:GridControl.CurrentView="{Binding Path=View}" Grid.Row="1" Visibility="{Binding View.ShowColumnHeaders, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    </Grid>
                  </dxgtl:DetailRowsContentControl>
                </DataTemplate>
              </dxgcore:DetailRowContentPresenter.ContentTemplate>
              <dxgtl:GridControl.CurrentViewChangedListener>
                <dxgtl:HeadersPanelInitializer />
              </dxgtl:GridControl.CurrentViewChangedListener>
            </dxgcore:DetailRowContentPresenter>
          </dx:MeasurePixelSnapper>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.DetailNewItemRowControl}" TargetType="{x:Type dxg:DetailNewItemRowControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="dxg:DetailNewItemRowControl">
          <dxgtl:NewItemRowControl x:Name="PART_NewItemRow" Visibility="Collapsed" DataContext="{Binding Path=View.NewItemRowData}" RowTemplate="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=NewItemRowTemplate}}" ItemTemplate="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=NewItemRowItemTemplate}}" IndicatorWidth="{Binding Path=View.ActualIndicatorWidth}" dxgtl:GridControl.CurrentView="{Binding View}">
            <dxgtl:GridControl.CurrentViewChangedListener>
              <dxgtl:NewItemRowInitializer />
            </dxgtl:GridControl.CurrentViewChangedListener>
          </dxgtl:NewItemRowControl>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.DetailTotalSummaryControl}" TargetType="{x:Type dxg:DetailTotalSummaryControl}">
    <Setter Property="dxg:DetailSummaryControlBase.SummaryDetailLevel" Value="{Binding DetailLevel}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="dxg:DetailTotalSummaryControl">
          <dxgtl:DetailRowsContentControl View="{Binding Path=View}" DetailDescriptor="{Binding Path=View.DataControl.OwnerDetailDescriptor}" NeedBottomLine="True">
            <Border MinHeight="20">
              <dxgcore:DetailRowContentPresenter MasterRowData="{TemplateBinding MasterRowData}" Content="{Binding}" ContentTemplate="{Binding View.FooterTemplate}" dxgtl:GridControl.CurrentView="{Binding View}" />
            </Border>
          </dxgtl:DetailRowsContentControl>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.DetailFixedTotalSummaryControl}" TargetType="{x:Type dxg:DetailFixedTotalSummaryControl}">
    <Setter Property="dxg:DetailSummaryControlBase.SummaryDetailLevel" Value="{Binding DetailLevel}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="dxg:DetailFixedTotalSummaryControl">
          <dxgtl:DetailRowsContentControl View="{Binding Path=View}" DetailDescriptor="{Binding Path=View.DataControl.OwnerDetailDescriptor}" NeedBottomLine="True">
            <Border MinHeight="20">
              <dxgtl:FixedTotalSummaryContainerControl dxb:BarManager.DXContextMenu="{Binding Path=View.DataControlMenu}" dxgtl:GridControl.CurrentView="{Binding Path=View}" dxgtl:GridPopupMenu.GridMenuType="FixedTotalSummary" />
              <!--<dxgcore:DetailRowContentPresenter MasterRowData="{TemplateBinding MasterRowData}"  Content="{Binding}" dxg:GridControl.CurrentView="{Binding View}"/>-->
            </Border>
          </dxgtl:DetailRowsContentControl>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.GroupPanelContainer}" TargetType="{x:Type dxg:GroupPanelContainer}">
    <Setter Property="DetailPartTemplate">
      <Setter.Value>
        <ControlTemplate TargetType="dxg:GroupPanelContainer">
          <dx:DXDockPanel>
            <ItemsControl x:Name="PART_NextLevelItemsControl" dx:DXDockPanel.Dock="Bottom">
              <ItemsControl.ItemTemplate>
                <DataTemplate>
                  <dxgtl:GroupPanelContainer DetailDescriptor="{Binding Content}" dxb:BarManager.DXContextMenu="{Binding Path=View.DataControlMenu, RelativeSource={RelativeSource Self}}" />
                </DataTemplate>
              </ItemsControl.ItemTemplate>
            </ItemsControl>
            <Grid x:Name="groupPanel">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <Border x:Name="PART_BorderSeparator" Background="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=GroupPanelSeparatorBrush}}" Height="1" UseLayoutRounding="False" Margin="0,11,0,11" />
              <dx:DXDockPanel Grid.Row="1">
                <dxgtl:GroupPanelCaptionControl x:Name="groupCaption" Content="{Binding View.DetailHeaderContent, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource GroupDetailNameConverter}}" Visibility="{Binding Content, RelativeSource={RelativeSource Self}, Converter={StaticResource ObjectToVisibilityConverter}}" VerticalAlignment="Center" />
                <dxgtl:GroupPanelColumnItemsControl ItemsSource="{Binding Path=View.GroupedColumns, RelativeSource={RelativeSource TemplatedParent}}" x:Name="groupPanelItemsControl" />
              </dx:DXDockPanel>
            </Grid>
          </dx:DXDockPanel>
          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=View.ActualShowGroupPanel, RelativeSource={RelativeSource Self}}" Value="False">
              <Setter Property="Visibility" Value="Collapsed" TargetName="groupPanel" />
            </DataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=(dxg:GridControl.ActiveView).DataControl.IsAnyDetailGrouped, RelativeSource={RelativeSource Self}}" Value="False" />
                <Condition Binding="{Binding Path=(dxg:GridControl.ActiveView).ShowGroupPanelsForUngroupedDetails, RelativeSource={RelativeSource Self}}" Value="False" />
              </MultiDataTrigger.Conditions>
              <Setter Property="Visibility" Value="Collapsed" TargetName="groupCaption" />
            </MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.FilterPanelContainer}" TargetType="{x:Type dxg:FilterPanelContainer}">
    <Setter Property="DetailPartTemplate">
      <Setter.Value>
        <ControlTemplate TargetType="dxg:FilterPanelContainer">
          <dx:DXDockPanel>
            <ItemsControl x:Name="PART_NextLevelItemsControl" dx:DXDockPanel.Dock="Bottom">
              <ItemsControl.ItemTemplate>
                <DataTemplate>
                  <dxgtl:FilterPanelContainer DetailDescriptor="{Binding Content}" />
                </DataTemplate>
              </ItemsControl.ItemTemplate>
            </ItemsControl>
            <dx:DXDockPanel Visibility="{Binding Path=View.ActualShowFilterPanel, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}">
              <dxfui_local_native:FilterPanelControlAdapter x:Name="PART_FilterPanel" Context="{Binding Path=View.DataControl.FilteringContext, RelativeSource={RelativeSource TemplatedParent}}" UseLegacyFilterPanel="{Binding Path=View.UseLegacyFilterPanel, RelativeSource={RelativeSource TemplatedParent}}" FilteringPanelStyle="{Binding Path=View.FilteringPanelStyle, RelativeSource={RelativeSource TemplatedParent}}" DataContext="{TemplateBinding View}">
                <dxfui_local_native:FilterPanelControlAdapter.LegacyFilterPanelTemplate>
                  <DataTemplate>
                    <dxgtl:FilterPanelControl FilterPanelContent="{Binding DetailHeaderContent, Converter={StaticResource FilterPanelCaptionConverter}}" />
                  </DataTemplate>
                </dxfui_local_native:FilterPanelControlAdapter.LegacyFilterPanelTemplate>
              </dxfui_local_native:FilterPanelControlAdapter>
            </dx:DXDockPanel>
          </dx:DXDockPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.ErrorPanel}" TargetType="{x:Type dxg:ErrorPanel}">
    <Setter Property="Template" Value="{DynamicResource {dxgt:GridControlThemeKey ResourceKey=ErrorPanelTemplate}}" />
    <Setter Property="VerticalAlignment" Value="Bottom" />
    <Setter Property="HorizontalAlignment" Value="Right" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.HeaderContentControl}" TargetType="{x:Type dxg:HeaderContentControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="dxg:HeaderContentControl">
          <ContentPresenter dxgtl:GridColumnHeader.GridColumn="{Binding Path=(dxg:GridColumnHeader.GridColumn), RelativeSource={RelativeSource TemplatedParent}}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="IsTabStop" Value="False" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.GroupFooterRowControl}" TargetType="{x:Type dxg:GroupFooterRowControl}">
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Template" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupFooterRowControlTemplate}}" />
    <Setter Property="dxg:GridViewHitInfoBase.HitTestAcceptor">
      <Setter.Value>
        <dxgi:GroupFooterRowTableViewHitTestAcceptor />
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.GroupFooterSummaryControl}" TargetType="{x:Type dxg:GroupFooterSummaryControl}">
    <Setter Property="Template" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupFooterSummaryControlTemplate}}" />
    <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}" />
    <Setter Property="Padding" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=SummaryControlMargin}}" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.CalendarFilterControl}" TargetType="{x:Type dxg:CalendarFilterControl}">
    <Setter Property="DateFilterStyle" Value="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=DateFilterStyle}}" />
    <Setter Property="Template" Value="{DynamicResource {dxgt:GridColumnHeaderThemeKey ResourceKey=CalendarFilterControlTemplate}}" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.GridNavigatorButton}" TargetType="{x:Type dxg:GridNavigatorButton}">
    <Setter Property="Padding" Value="0" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxg:GridNavigatorButton}">
          <Grid Width="Auto">
            <Border x:Name="normal" />
            <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="False">
              <Setter TargetName="normal" Property="Border.Background" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=DataNavigatorBackground}}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="normal" Property="Background" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=DataNavigatorFocusedBackground}}" />
              <Setter Property="TextElement.Foreground" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=DataNavigatorHoverTextBrush}}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="normal" Property="Background" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=DataNavigatorDisableBackground}}" />
              <Setter TargetName="contentPresenter" Property="Opacity" Value="0.4" />
            </Trigger>
            <Trigger Property="ButtonType" Value="MoveFirstRow">
              <Setter Property="ContentTemplate" Value="{DynamicResource {dxet:ButtonsThemeKey ResourceKey=FirstGlyph}}" />
            </Trigger>
            <Trigger Property="ButtonType" Value="MovePrevPage">
              <Setter Property="ContentTemplate" Value="{DynamicResource {dxet:ButtonsThemeKey ResourceKey=PrevPageGlyph}}" />
            </Trigger>
            <Trigger Property="ButtonType" Value="MovePrevRow">
              <Setter Property="ContentTemplate" Value="{DynamicResource {dxet:ButtonsThemeKey ResourceKey=LeftGlyph}}" />
            </Trigger>
            <Trigger Property="ButtonType" Value="MoveNextRow">
              <Setter Property="ContentTemplate" Value="{DynamicResource {dxet:ButtonsThemeKey ResourceKey=RightGlyph}}" />
            </Trigger>
            <Trigger Property="ButtonType" Value="MoveNextPage">
              <Setter Property="ContentTemplate" Value="{DynamicResource {dxet:ButtonsThemeKey ResourceKey=NextPageGlyph}}" />
            </Trigger>
            <Trigger Property="ButtonType" Value="MoveLastRow">
              <Setter Property="ContentTemplate" Value="{DynamicResource {dxet:ButtonsThemeKey ResourceKey=LastGlyph}}" />
            </Trigger>
            <Trigger Property="ButtonType" Value="AddNewRow">
              <Setter Property="ContentTemplate" Value="{DynamicResource {dxet:ButtonsThemeKey ResourceKey=PlusGlyph}}" />
            </Trigger>
            <Trigger Property="ButtonType" Value="DeleteFocusedRow">
              <Setter Property="ContentTemplate" Value="{DynamicResource {dxet:ButtonsThemeKey ResourceKey=MinusGlyph}}" />
            </Trigger>
            <Trigger Property="ButtonType" Value="EditFocusedRow">
              <Setter Property="ContentTemplate" Value="{DynamicResource {dxet:ButtonsThemeKey ResourceKey=UpGlyph}}" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxcn:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True">
              <Setter TargetName="normal" Property="Background" Value="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxcn:AppearanceOptions.Background), RelativeSource={RelativeSource TemplatedParent}}" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.DataNavigator}" TargetType="{x:Type dxg:DataNavigator}">
    <Setter Property="Template" Value="{DynamicResource {dxgt:GridControlThemeKey ResourceKey=DataNavigatorTemplate}}" />
    <Setter Property="UseLayoutRounding" Value="False" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.EditFormControl}" TargetType="{x:Type dxg:EditFormControl}">
    <Setter Property="ItemsPanel" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=EditFormItemsPanelTemplate}}" />
    <Setter Property="ItemTemplate" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=EditFormItemTemplate}}" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.EditFormContainer}" TargetType="dxg:EditFormContainer">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="dxg:EditFormContainer">
          <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
            <ContentPresenter />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}" />
    <Setter Property="Foreground" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=EditFormForeground}}" />
    <Setter Property="Background" Value="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=EditFormBackground}}" />
    <Style.Triggers>
      <Trigger Property="ShowMode" Value="Inline">
        <Setter Property="BorderThickness" Value="0,1,0,1" />
      </Trigger>
      <Trigger Property="ShowMode" Value="InlineHideRow">
        <Setter Property="BorderThickness" Value="0,0,0,1" />
      </Trigger>
      <DataTrigger Binding="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxcn:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True">
        <Setter Property="Background" Value="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxcn:AppearanceOptions.Background), RelativeSource={RelativeSource Self}}" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxcn:GridAppearanceOptions.HasDataAreaBackground), RelativeSource={RelativeSource Self}}" Value="True">
        <Setter Property="Background" Value="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxcn:GridAppearanceOptions.DataAreaBackground), RelativeSource={RelativeSource Self}}" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.FixedGroupsAdorner}" TargetType="{x:Type dxg:FixedGroupsAdorner}">
    <Setter Property="AdornerBrush">
      <Setter.Value>
        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
          <GradientStop Offset="0" Color="#20000000" />
          <GradientStop Offset="1" Color="Transparent" />
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="AdornerHeight" Value="12" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxg:FixedGroupsAdorner}">
          <ContentPresenter Content="{TemplateBinding Content}" IsHitTestVisible="false" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="{dxgt:GridControlThemeKey ResourceKey=DataNavigatorTemplate}" TargetType="{x:Type dxg:DataNavigator}">
    <Border x:Name="NavigationBorder" BorderBrush="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=DataNavigatorBorderBrush}}" BorderThickness="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=DataNavigatorBorderThickness}}" IsEnabled="{Binding Path=View.NavigationStyle, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NavigationStyleToBoolean}}">
      <StackPanel Orientation="Horizontal">
        <dxgtl:GridNavigatorButton ButtonType="MoveFirstRow" Command="{x:Static dxg:GridCommands.MoveFirstRow}" ClickMode="Release" Delay="{x:Static sys:Int32.MaxValue}" Interval="{x:Static sys:Int32.MaxValue}" Visibility="{Binding Path=View.DataNavigatorButtons, RelativeSource={RelativeSource TemplatedParent}, ConverterParameter=MoveFirstRow, Converter={StaticResource DisplayedNavigationConverter}}">
          <dxgtl:GridNavigatorButton.ToolTip>
            <Binding Path="View.LocalizationDescriptor" RelativeSource="{RelativeSource TemplatedParent}" ConverterParameter="NavigationMoveFirstRow">
              <Binding.Converter>
                <dxgtl:DynamicLocalizationStringValueConvertor />
              </Binding.Converter>
            </Binding>
          </dxgtl:GridNavigatorButton.ToolTip>
        </dxgtl:GridNavigatorButton>
        <dxgtl:GridNavigatorButton ButtonType="MovePrevPage" Command="{x:Static dxg:GridCommands.MovePrevPage}" ClickMode="Press" Delay="500" Interval="100" Visibility="{Binding Path=View.DataNavigatorButtons, RelativeSource={RelativeSource TemplatedParent}, ConverterParameter=MovePrevPage, Converter={StaticResource DisplayedNavigationConverter}}">
          <dxgtl:GridNavigatorButton.ToolTip>
            <Binding Path="View.LocalizationDescriptor" RelativeSource="{RelativeSource TemplatedParent}" ConverterParameter="NavigationMovePrevPage">
              <Binding.Converter>
                <dxgtl:DynamicLocalizationStringValueConvertor />
              </Binding.Converter>
            </Binding>
          </dxgtl:GridNavigatorButton.ToolTip>
        </dxgtl:GridNavigatorButton>
        <dxgtl:GridNavigatorButton ButtonType="MovePrevRow" Command="{x:Static dxg:GridCommands.MovePrevRow}" ClickMode="Press" Delay="500" Interval="100" Visibility="{Binding Path=View.DataNavigatorButtons, RelativeSource={RelativeSource TemplatedParent}, ConverterParameter=MovePrevRow, Converter={StaticResource DisplayedNavigationConverter}}">
          <dxgtl:GridNavigatorButton.ToolTip>
            <Binding Path="View.LocalizationDescriptor" RelativeSource="{RelativeSource TemplatedParent}" ConverterParameter="NavigationMovePrevRow">
              <Binding.Converter>
                <dxgtl:DynamicLocalizationStringValueConvertor />
              </Binding.Converter>
            </Binding>
          </dxgtl:GridNavigatorButton.ToolTip>
        </dxgtl:GridNavigatorButton>
        <ContentControl x:Name="contentControl" VerticalAlignment="Stretch" HorizontalContentAlignment="Center" Margin="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=DataNavigatorBorderMarginText}}" Background="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=DataNavigatorBackgroundText}}" Foreground="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=DataNavigatorTextBrush}}" FontSize="{DynamicResource {dxgt:TableViewThemeKey ResourceKey=DataNavigatorTextSize}}" Padding="3,0,3,0">
          <MultiBinding Converter="{StaticResource NavigationRowConverter}">
            <Binding Path="View.FocusedView" RelativeSource="{RelativeSource TemplatedParent}" />
            <Binding Path="View.FocusedView.FocusedRowHandle" RelativeSource="{RelativeSource TemplatedParent}" />
            <Binding Path="View.FocusedView.DataControl.VisibleRowCount" RelativeSource="{RelativeSource TemplatedParent}" Mode="OneWay" />
          </MultiBinding>
          <ContentControl.Template>
            <ControlTemplate TargetType="ContentControl">
              <Border Background="{TemplateBinding Background}">
                <ContentPresenter Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}" VerticalAlignment="Center" />
              </Border>
            </ControlTemplate>
          </ContentControl.Template>
        </ContentControl>
        <dxgtl:GridNavigatorButton ButtonType="MoveNextRow" Command="{x:Static dxg:GridCommands.MoveNextRow}" ClickMode="Press" Delay="500" Interval="100" Visibility="{Binding Path=View.DataNavigatorButtons, RelativeSource={RelativeSource TemplatedParent}, ConverterParameter=MoveNextRow, Converter={StaticResource DisplayedNavigationConverter}}">
          <dxgtl:GridNavigatorButton.ToolTip>
            <Binding Path="View.LocalizationDescriptor" RelativeSource="{RelativeSource TemplatedParent}" ConverterParameter="NavigationMoveNextRow">
              <Binding.Converter>
                <dxgtl:DynamicLocalizationStringValueConvertor />
              </Binding.Converter>
            </Binding>
          </dxgtl:GridNavigatorButton.ToolTip>
        </dxgtl:GridNavigatorButton>
        <dxgtl:GridNavigatorButton ButtonType="MoveNextPage" Command="{x:Static dxg:GridCommands.MoveNextPage}" ClickMode="Press" Delay="500" Interval="100" Visibility="{Binding Path=View.DataNavigatorButtons, RelativeSource={RelativeSource TemplatedParent}, ConverterParameter=MoveNextPage, Converter={StaticResource DisplayedNavigationConverter}}">
          <dxgtl:GridNavigatorButton.ToolTip>
            <Binding Path="View.LocalizationDescriptor" RelativeSource="{RelativeSource TemplatedParent}" ConverterParameter="NavigationMoveNextPage">
              <Binding.Converter>
                <dxgtl:DynamicLocalizationStringValueConvertor />
              </Binding.Converter>
            </Binding>
          </dxgtl:GridNavigatorButton.ToolTip>
        </dxgtl:GridNavigatorButton>
        <dxgtl:GridNavigatorButton ButtonType="MoveLastRow" Command="{x:Static dxg:GridCommands.MoveLastRow}" ClickMode="Release" Delay="{x:Static sys:Int32.MaxValue}" Interval="{x:Static sys:Int32.MaxValue}" Visibility="{Binding Path=View.DataNavigatorButtons, RelativeSource={RelativeSource TemplatedParent}, ConverterParameter=MoveLastRow, Converter={StaticResource DisplayedNavigationConverter}}">
          <dxgtl:GridNavigatorButton.ToolTip>
            <Binding Path="View.LocalizationDescriptor" RelativeSource="{RelativeSource TemplatedParent}" ConverterParameter="NavigationMoveLastRow">
              <Binding.Converter>
                <dxgtl:DynamicLocalizationStringValueConvertor />
              </Binding.Converter>
            </Binding>
          </dxgtl:GridNavigatorButton.ToolTip>
        </dxgtl:GridNavigatorButton>
        <dxgtl:GridNavigatorButton x:Name="ButtonAddNewRow" ButtonType="AddNewRow" Command="{x:Static dxg:GridCommands.AddNewRow}" ClickMode="Release" Delay="{x:Static sys:Int32.MaxValue}" Interval="{x:Static sys:Int32.MaxValue}" Visibility="{Binding Path=View.DataNavigatorButtons, RelativeSource={RelativeSource TemplatedParent}, ConverterParameter=AddNewRow, Converter={StaticResource DisplayedNavigationConverter}}">
          <dxgtl:GridNavigatorButton.ToolTip>
            <Binding Path="View.LocalizationDescriptor" RelativeSource="{RelativeSource TemplatedParent}" ConverterParameter="NavigationAddNewRow">
              <Binding.Converter>
                <dxgtl:DynamicLocalizationStringValueConvertor />
              </Binding.Converter>
            </Binding>
          </dxgtl:GridNavigatorButton.ToolTip>
        </dxgtl:GridNavigatorButton>
        <dxgtl:GridNavigatorButton ButtonType="DeleteFocusedRow" Command="{x:Static dxg:GridCommands.DeleteFocusedRow}" ClickMode="Release" Delay="{x:Static sys:Int32.MaxValue}" Interval="{x:Static sys:Int32.MaxValue}" Visibility="{Binding Path=View.DataNavigatorButtons, RelativeSource={RelativeSource TemplatedParent}, ConverterParameter=DeleteFocusedRow, Converter={StaticResource DisplayedNavigationConverter}}">
          <dxgtl:GridNavigatorButton.ToolTip>
            <Binding Path="View.LocalizationDescriptor" RelativeSource="{RelativeSource TemplatedParent}" ConverterParameter="NavigationDeleteFocusedRow">
              <Binding.Converter>
                <dxgtl:DynamicLocalizationStringValueConvertor />
              </Binding.Converter>
            </Binding>
          </dxgtl:GridNavigatorButton.ToolTip>
        </dxgtl:GridNavigatorButton>
        <dxgtl:GridNavigatorButton ButtonType="EditFocusedRow" Command="{x:Static dxg:GridCommands.EditFocusedRow}" ClickMode="Release" Delay="{x:Static sys:Int32.MaxValue}" Interval="{x:Static sys:Int32.MaxValue}" Visibility="{Binding Path=View.DataNavigatorButtons, RelativeSource={RelativeSource TemplatedParent}, ConverterParameter=EditFocusedRow, Converter={StaticResource DisplayedNavigationConverter}}">
          <dxgtl:GridNavigatorButton.ToolTip>
            <Binding Path="View.LocalizationDescriptor" RelativeSource="{RelativeSource TemplatedParent}" ConverterParameter="NavigationEditFocusedRow">
              <Binding.Converter>
                <dxgtl:DynamicLocalizationStringValueConvertor />
              </Binding.Converter>
            </Binding>
          </dxgtl:GridNavigatorButton.ToolTip>
        </dxgtl:GridNavigatorButton>
      </StackPanel>
    </Border>
    <ControlTemplate.Triggers>
      <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={dxgcore:IsDesignTimeConverter}, Mode=OneTime}" Value="true">
        <Setter TargetName="NavigationBorder" Property="IsEnabled" Value="False" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=(dx:ScrollBarExtensions.ScrollBarMode), RelativeSource={RelativeSource TemplatedParent}}" Value="TouchOverlap">
        <Setter TargetName="NavigationBorder" Property="BorderThickness" Value="0,1,0,0" />
        <Setter TargetName="NavigationBorder" Property="BorderBrush" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TotalSummaryBorderBrush}}" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxcn:AppearanceOptions.HasBackground), RelativeSource={RelativeSource Self}}" Value="True">
        <Setter TargetName="contentControl" Property="Background" Value="{Binding Path=(dxg:GridControl.ActiveView).DataControl.(dxcn:AppearanceOptions.Background), RelativeSource={RelativeSource TemplatedParent}}" />
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.FilterCriteriaControl}" TargetType="dxg:FilterCriteriaControl">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="dxg:FilterCriteriaControl">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition />
              <ColumnDefinition Width="1" />
            </Grid.ColumnDefinitions>
            <dxep:ComboBoxEdit x:Name="PART_cbFilterItems" Margin="1" UseLayoutRounding="True" ShowBorder="False" ItemsSource="{TemplateBinding ItemsSource}" ShowEditorButtons="False" IsTextEditable="False" SelectedIndex="{Binding DefaultIndex, RelativeSource={RelativeSource TemplatedParent}}" AllowCollectionView="True">
              <dxep:ComboBoxEdit.GroupStyle>
                <GroupStyle HidesIfEmpty="True">
                  <GroupStyle.ContainerStyle>
                    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=GroupItem}" TargetType="{x:Type GroupItem}">
                      <Setter Property="Template">
                        <Setter.Value>
                          <ControlTemplate>
                            <StackPanel>
                              <Separator IsEnabled="False">
                                <Separator.Visibility>
                                  <Binding Path="ItemCount">
                                    <Binding.Converter>
                                      <dxmvvm:ObjectToObjectConverter DefaultTarget="Collapsed">
                                        <dxmvvm:MapItem Source="1" Target="Visible" />
                                      </dxmvvm:ObjectToObjectConverter>
                                    </Binding.Converter>
                                  </Binding>
                                </Separator.Visibility>
                              </Separator>
                              <ItemsPresenter />
                            </StackPanel>
                          </ControlTemplate>
                        </Setter.Value>
                      </Setter>
                    </Style>
                  </GroupStyle.ContainerStyle>
                </GroupStyle>
              </dxep:ComboBoxEdit.GroupStyle>
              <dxep:ComboBoxEdit.ItemTemplate>
                <DataTemplate>
                  <StackPanel Orientation="Horizontal">
                    <dx:DXImage Source="{Binding Image}" Width="{Binding IconSize, RelativeSource={RelativeSource AncestorType=dxg:FilterCriteriaControl}}" Height="{Binding IconSize, RelativeSource={RelativeSource AncestorType=dxg:FilterCriteriaControl}}" Margin="0,0,5,0" />
                    <TextBlock Text="{Binding Name}" />
                  </StackPanel>
                  <DataTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                      <Setter Property="dx:SvgImageHelper.State" Value="Hover" />
                    </Trigger>
                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                      <Setter Property="dx:SvgImageHelper.State" Value="Pressed" />
                    </DataTrigger>
                  </DataTemplate.Triggers>
                </DataTemplate>
              </dxep:ComboBoxEdit.ItemTemplate>
              <dxep:ComboBoxEdit.EditNonEditableTemplate>
                <ControlTemplate>
                  <Border Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Grid>
                      <dx:DXImage Source="{Binding EditValue.Image}" Margin="1" Width="{Binding IconSize, RelativeSource={RelativeSource AncestorType=dxg:FilterCriteriaControl}}" Height="{Binding IconSize, RelativeSource={RelativeSource AncestorType=dxg:FilterCriteriaControl}}" />
                    </Grid>
                    <Border.Style>
                      <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=Border}" TargetType="Border">
                        <Style.Triggers>
                          <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.5" />
                          </Trigger>
                          <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Opacity" Value="1" />
                          </Trigger>
                        </Style.Triggers>
                      </Style>
                    </Border.Style>
                  </Border>
                </ControlTemplate>
              </dxep:ComboBoxEdit.EditNonEditableTemplate>
            </dxep:ComboBoxEdit>
            <Border x:Name="borderDelimiter" Grid.Column="1" BorderThickness="0,0,1,0" BorderBrush="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}" Visibility="{Binding IsFocusedCell, Converter={StaticResource BooleanToVisibilityConverter}}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.NewItemRowControl}" TargetType="dxg:NewItemRowControl" BasedOn="{StaticResource AdditionalRowContainerStyle}">
    <Setter Property="Visibility" Value="Collapsed" />
    <Setter Property="DataContext" Value="{Binding Path=(dxg:GridControl.CurrentView).NewItemRowData, RelativeSource={RelativeSource Self}}" />
    <Setter Property="RowTemplate" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=NewItemRowTemplate}}" />
    <Setter Property="ItemTemplate" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=NewItemRowItemTemplate}}" />
    <Setter Property="IndicatorWidth" Value="{Binding Path=(dxg:GridControl.CurrentView).ActualIndicatorWidth, RelativeSource={RelativeSource Self}}" />
    <Setter Property="dxg:GridControl.CurrentViewChangedListener">
      <Setter.Value>
        <dxgtl:NewItemRowInitializer />
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.AutoFilterRowControl}" TargetType="dxg:AutoFilterRowControl" BasedOn="{StaticResource AdditionalRowContainerStyle}">
    <Setter Property="DataContext" Value="{Binding Path=(dxg:GridControl.CurrentView).AutoFilterRowData, RelativeSource={RelativeSource Self}}" />
    <Setter Property="RowTemplate" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=FilterRowTemplate}}" />
    <Setter Property="ItemTemplate" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=AutoFilterRowItemTemplate}}" />
    <Setter Property="IndicatorWidth" Value="{Binding Path=(dxg:GridControl.CurrentView).ActualIndicatorWidth, RelativeSource={RelativeSource Self}}" />
    <Setter Property="Visibility" Value="{Binding Path=(dxg:GridControl.CurrentView).ShowAutoFilterRow, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />
    <Setter Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxt:BrushesThemeKey ResourceKey=ContrastSvgPalette}}" />
    <Style.Triggers>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding IsFocused}" Value="True" />
          <Condition Binding="{Binding View.DataControl.SelectionMode}" Value="None" />
        </MultiDataTrigger.Conditions>
        <MultiDataTrigger.Setters>
          <Setter Property="dx:SvgImageHelper.State" Value="Pressed" />
        </MultiDataTrigger.Setters>
      </MultiDataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.LoadingRowControl}" TargetType="{x:Type dxg:LoadingRowControl}">
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Template" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=LoadingRowTemplate}}" />
    <Style.Triggers>
      <DataTrigger Binding="{Binding HasError}" Value="True">
        <Setter Property="Template" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=LoadingRowErrorTemplate}}" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.LoadingCardControl}" TargetType="{x:Type dxg:LoadingCardControl}">
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="MinWidth" Value="150" />
    <Setter Property="MinWidth" Value="150" />
    <Setter Property="Template" Value="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=LoadingCardTemplate}}" />
    <Style.Triggers>
      <DataTrigger Binding="{Binding HasError}" Value="True">
        <Setter Property="Template" Value="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=LoadingCardErrorTemplate}}" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.LoadingRowButton}" TargetType="{x:Type dxg:LoadingRowButton}">
    <Setter Property="Template" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=LoadingRowButtonTemplate}}" />
  </Style>
</ResourceDictionary>