<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxgi="http://schemas.devexpress.com/winfx/2008/xaml/grid/internal" xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm">
  <!--BEGIN WPF-->
  <ResourceDictionary.MergedDictionaries>
    <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2013DarkGray.v24.1;component/DevExpress.Xpf.Grid/Generic/HeaderFooterItemsControlStyles.xaml" />
    <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2013DarkGray.v24.1;component/DevExpress.Xpf.Grid/Office2013DarkGray/Constants.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <!--END WPF-->
  <ControlTemplate x:Key="{dxgt:TotalSummaryThemeKey ResourceKey=FootersContentTemplate}" TargetType="{x:Type ContentControl}">
    <Grid x:Name="footersContent">
      <Border Background="#FFE3E3E3" BorderBrush="#FFABABAB">
        <Border.BorderThickness>
          <MultiBinding>
            <MultiBinding.Bindings>
              <Binding Path="View.TotalSummaryPosition" />
              <Binding Path="View.IsRootView" />
            </MultiBinding.Bindings>
            <MultiBinding.Converter>
              <dxgi:TableViewTotalSummaryPanelBorderThicknessConverter />
            </MultiBinding.Converter>
          </MultiBinding>
        </Border.BorderThickness>
      </Border>
      <ContentPresenter />
    </Grid>
  </ControlTemplate>
  <SolidColorBrush x:Key="{dxgt:TableViewThemeKey ResourceKey=DataPresenterBackground}" Color="#FFFFFFFF" />
  <ControlTemplate x:Key="{dxgt:TableViewThemeKey ResourceKey=OuterBorderElementTemplate}" TargetType="{x:Type dxg:OuterBorderElement}" />
  <Style x:Key="{dxgt:TableViewThemeKey ResourceKey=ColumnChooserDragTextStyle}" TargetType="TextBlock">
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Margin" Value="44,12,12,12" />
      </Trigger>
    </Style.Triggers>
    <Setter Property="Foreground" Value="#FF262626" />
    <Setter Property="Margin" Value="35,4" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="TextAlignment" Value="Center" />
    <Setter Property="TextWrapping" Value="Wrap" />
  </Style>
  <Style x:Key="{dxgt:TableViewThemeKey ResourceKey=GroupPanelDragTextStyle}" TargetType="TextBlock">
    <Style.Triggers>
      <DataTrigger Binding="{Binding Path=(dxg:GridControl.CurrentView).ActualSearchPanelPosition, RelativeSource={RelativeSource TemplatedParent}}" Value="Default">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Margin" Value="11,5,0,5" />
      </DataTrigger>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Margin" Value="12" />
      </Trigger>
    </Style.Triggers>
    <Setter Property="Foreground" Value="#FF262626" />
    <Setter Property="FontSize">
      <Setter.Value>
        <Binding Path="FontSize" RelativeSource="{RelativeSource TemplatedParent}">
          <Binding.Converter>
            <dx:AddDoubleConverter Value="-1" />
          </Binding.Converter>
        </Binding>
      </Setter.Value>
    </Setter>
    <Setter Property="Margin" Value="0,5,0,5" />
    <Setter Property="MinHeight" Value="15" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="TextTrimming" Value="CharacterEllipsis" />
  </Style>
  <Thickness x:Key="{dxgt:TableViewThemeKey ResourceKey=GroupPanelBorderThickness}">0,0,0,1</Thickness>
  <Thickness x:Key="{dxgt:TableViewThemeKey ResourceKey=GroupPanelMargin}">8</Thickness>
  <Thickness x:Key="{dxgt:TableViewThemeKey ResourceKey=GroupPanelSeparatorMargin}">0,-23,0,0</Thickness>
  <SolidColorBrush x:Key="{dxgt:TableViewThemeKey ResourceKey=GroupPanelBorderBrush}" Color="#FFABABAB" />
  <DataTemplate x:Key="{dxgt:TotalSummaryThemeKey ResourceKey=TotalSummaryItemTemplate}">
    <TextBlock x:Name="textBlock" dxg:InlineTextService.InlineInfo="{Binding Column.TotalSummaryTextInfo}" Style="{StaticResource {dxgt:TotalSummaryThemeKey ResourceKey=TotalSummaryTextControlStyle}}" />
    <DataTemplate.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Margin" TargetName="textBlock" Value="12" />
      </Trigger>
    </DataTemplate.Triggers>
  </DataTemplate>
  <!--BEGIN WPF-->
  <dxg:DefaultStyle x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupValueContentStyle}" TargetType="{x:Type Border}" />
  <!--END WPF-->
  <dxg:DefaultStyle x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupRowStyle}" TargetType="{x:Type ContentControl}">
    <Setter Property="Control.Foreground" Value="#FF2B579A" />
    <Setter Property="Control.Background" Value="#FFEBEBEB" />
    <Setter Property="Control.FontWeight" Value="Bold" />
    <dxg:DefaultStyle.Triggers>
      <DataTrigger Binding="{Binding Path=SelectionState}" Value="Highlighted">
        <Setter Property="Control.Background" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupRowHoverBackground}}" />
        <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupRowHoverForeground}}" />
      </DataTrigger>
    </dxg:DefaultStyle.Triggers>
  </dxg:DefaultStyle>
  <ControlTemplate x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupRowContentTemplate}" TargetType="{x:Type ContentControl}">
    <Grid x:Name="PART_RootPanel" Background="#00000000" MinHeight="{DynamicResource {dxgt:GroupRowThemeKey ResourceKey=GroupRowMinHeight}}">
      <Border x:Name="groupRowBorder" Background="{TemplateBinding Background}" BorderBrush="#FFABABAB" BorderThickness="0,0,0,1" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
        <Grid>
          <Border x:Name="groupRowBorderSelected" Background="#3F3EA9F1">
            <Border.Visibility>
              <Binding Path="SelectionState">
                <Binding.Converter>
                  <dxg:SelectionStateToVisibilityConverter Value="Selected" />
                </Binding.Converter>
              </Binding>
            </Border.Visibility>
          </Border>
          <Border x:Name="groupRowBorderFocused" Background="#FF8dbbda">
            <Border.Visibility>
              <Binding Path="SelectionState">
                <Binding.Converter>
                  <dxg:SelectionStateToVisibilityConverter Value="Focused" />
                </Binding.Converter>
              </Binding>
            </Border.Visibility>
          </Border>
          <Border Background="{StaticResource UnfocusedRowBrush}" dxg:FadeSelectionHelper.FadeSelectionOnLostFocus="{Binding Path=View.ActualFadeSelectionOnLostFocus}" dxg:FadeSelectionHelper.IsKeyboardFocusWithinView="{Binding Path=(dxg:GridControl.ActiveView).IsKeyboardFocusWithin, RelativeSource={RelativeSource Mode=Self}}" dxg:FadeSelectionHelper.IsSelected="{Binding SelectionState, Converter={dxg:SelectionStateToBooleanConverter}}" dxg:FadeSelectionHelper.Opacity="1" Visibility="Collapsed" />
          <ContentPresenter>
            <ContentPresenter.Margin>
              <Binding Path="GroupLevel">
                <Binding.Converter>
                  <dxg:GroupLevelToMarginConverter />
                </Binding.Converter>
                <Binding.ConverterParameter>
                  <Thickness>28,0,0,0</Thickness>
                </Binding.ConverterParameter>
              </Binding>
            </ContentPresenter.Margin>
          </ContentPresenter>
        </Grid>
      </Border>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="MinHeight" TargetName="PART_RootPanel" Value="43" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <dxg:DefaultDataTemplate x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupValueTemplate}">
    <Border Style="{Binding Path=View.GroupValueContentStyle}" VerticalAlignment="Center">
      <StackPanel Orientation="Horizontal">
        <TextBlock Text="{Binding Path=GroupColumnHeaderText}" />
        <TextBlock Tag="PART_GroupValue" Text="{Binding Path=Value}" />
      </StackPanel>
    </Border>
  </dxg:DefaultDataTemplate>
  <Thickness x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupColumnSummaryPadding}">4,8,4,7</Thickness>
  <Thickness x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupBandSummaryPadding}">4,2,4,7</Thickness>
  <SolidColorBrush x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupBandSummaryNormalBorderBrush}" Color="#FFD6D6D6" />
  <SolidColorBrush x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupBandSummaryFocusedBorderBrush}" Color="#7F999999" />
  <SolidColorBrush x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupBandSummaryNormalBackground}" Color="Transparent" />
  <SolidColorBrush x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupBandSummaryFocusedBackground}" Color="Transparent" />
  <ControlTemplate x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupBandSummaryTemplate}">
    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" MinHeight="22">
      <Border.Margin>
        <Binding Path="HasTopElement" RelativeSource="{RelativeSource TemplatedParent}">
          <Binding.Converter>
            <dx:BoolToObjectConverter FalseValue="0,2,2,3" TrueValue="0,0,2,3" />
          </Binding.Converter>
        </Binding>
      </Border.Margin>
      <ContentPresenter x:Name="PART_Content" Content="{Binding}" ContentTemplate="{Binding View.GroupColumnSummaryItemTemplate}" Margin="4,1,4,1" VerticalAlignment="Center" />
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Margin" TargetName="PART_Content" Value="12" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <sys:Double x:Key="{dxgt:GroupRowThemeKey ResourceKey=BandedViewGroupSummaryMinHeight}">31</sys:Double>
  <Thickness x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupDefaultSummaryPadding}">0,5,0,4</Thickness>
  <Thickness x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupRowDefaultSummaryPadding}">0,5,0,7</Thickness>
  <Thickness x:Key="{dxgt:GroupRowThemeKey ResourceKey=ExpandButtonMargin}">15,5,0,4</Thickness>
  <Thickness x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupRowExpandButtonMargin}">15,5,0,5</Thickness>
  <Thickness x:Key="{dxgt:GroupRowThemeKey ResourceKey=CheckBoxSelectorMargin}">4,4,0,5</Thickness>
  <Thickness x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupValuePresenterMargin}">4,4,0,5</Thickness>
  <Thickness x:Key="{dxgt:GroupRowThemeKey ResourceKey=BandedGroupValuePresenterMargin}">0,0,28,0</Thickness>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.GroupSummaryContentPresenter}" TargetType="{x:Type dxg:GroupSummaryContentPresenter}">
    <Setter Property="Margin" Value="0,0,4,0" />
  </Style>
  <ControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=FilterRowTemplate}" TargetType="{x:Type ContentControl}">
    <Border Background="#FFFFFFFF" BorderBrush="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}" BorderThickness="0,0,0,1">
      <Grid>
        <Border x:Name="borderFocused" SnapsToDevicePixels="True">
          <Border.Visibility>
            <Binding Path="SelectionState">
              <Binding.Converter>
                <dxg:SelectionStateToVisibilityConverter Value="Focused" />
              </Binding.Converter>
            </Binding>
          </Border.Visibility>
        </Border>
        <ContentControl HorizontalContentAlignment="Stretch">
          <ContentPresenter />
        </ContentControl>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <DataTrigger Binding="{Binding Path=IsTreeView}" Value="True">
        <Setter Property="Background" TargetName="borderFocused" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=CellBorderFocusedBrush}}" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=IsTreeView}" Value="False">
        <Setter Property="Background" TargetName="borderFocused" Value="#3F009AFF" />
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=RowNewItemTextControlTemplate}" TargetType="dxg:RowNewItemTextControl">
    <Border x:Name="backgroundBorder" Background="#FFFFFFFF" IsHitTestVisible="False">
      <TextBlock x:Name="PART_GridNewRowText" Foreground="#FF262626" HorizontalAlignment="Center" Margin="0,1,0,2" VerticalAlignment="Center">
        <TextBlock.Text>
          <Binding ConverterParameter="GridNewRowText" Path="View.LocalizationDescriptor">
            <Binding.Converter>
              <dxg:DynamicLocalizationStringValueConvertor />
            </Binding.Converter>
          </Binding>
        </TextBlock.Text>
      </TextBlock>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Margin" TargetName="PART_GridNewRowText" Value="12" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=NewItemRowTemplate}" TargetType="{x:Type ContentControl}">
    <Grid x:Name="Root" Margin="0,0,0,1">
      <Border x:Name="borderFocused" Background="#3F009AFF">
        <Border.Visibility>
          <Binding Path="SelectionState">
            <Binding.Converter>
              <dxg:SelectionStateToVisibilityConverter Value="Focused" />
            </Binding.Converter>
          </Binding>
        </Border.Visibility>
      </Border>
      <ContentControl HorizontalContentAlignment="Stretch">
        <ContentPresenter />
      </ContentControl>
      <dxg:RowNewItemTextControl Visibility="{Binding Path=IsFocused, Converter={StaticResource BooleanToVisibilityConverterInverted}}" />
    </Grid>
    <ControlTemplate.Triggers>
      <DataTrigger Binding="{Binding Path=SelectionState}" Value="Focused">
        <Setter Property="Foreground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextFocusedBrush}}" />
      </DataTrigger>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="MinHeight" TargetName="Root" Value="40" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Color x:Key="WhiteRowCellForeground">#FF3C3C3C</Color>
  <Color x:Key="BlackRowCellForeground">#FF3C3C3C</Color>
  <ControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=AutoFilterRowClearButtonTemplate}" TargetType="{x:Type Button}">
    <Grid Background="Transparent">
      <Grid Height="16" HorizontalAlignment="Center" VerticalAlignment="Center" Width="16">
        <Path x:Name="Glyph" Data="F1 M 6.5,0.00012207C 10.0899,0.00012207 13,2.91028 13,6.50012C 13,10.09 10.0898,13.0001 6.5,13.0001C 2.91014,13.0001 2.58287e-006,10.09 2.58287e-006,6.50012C 2.58287e-006,2.91028 2.91004,0.00012207 6.5,0.00012207 Z M 3.00002,3.99988L 5.50002,6.49988L 3.00003,8.99988L 3.00003,9.99988L 4.00003,9.99988L 6.49998,7.49988L 9.00001,9.99988L 10,9.99988L 10,8.99988L 7.49994,6.49988L 10,3.99976L 10,2.99988L 9.00003,2.99988L 6.49998,5.49988L 4.00001,2.99988L 3.00001,2.99988L 3.00002,3.99988 Z " Fill="#FF262626" Height="12" HorizontalAlignment="Center" Opacity="0.62" Stretch="Fill" VerticalAlignment="Center" Width="12" />
      </Grid>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter TargetName="Glyph" Property="Opacity" Value="1" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter TargetName="Glyph" Property="Opacity" Value="1" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=FilterCellContentPresenterTemplate}" TargetType="{x:Type dxg:FilterCellContentPresenter}">
    <Border x:Name="ContentBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderState}" Padding="{TemplateBinding Padding}">
      <!--BEGIN WPF-->
      <Border.Background>
        <Binding Path="Background" RelativeSource="{RelativeSource TemplatedParent}" />
      </Border.Background>
      <!--END WPF-->
      <!--ONLY SL<Border.Background>
                <Binding Path="SelectionState" RelativeSource="{RelativeSource TemplatedParent}">
                    <Binding.Converter>
                        <dx:EnumToObjectConverter>
                            <dx:EnumToObjectConverter.Values>
                                <dx:EnumObjectProvider x:Key="None"
                                                       Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=CellBorderNoneBrush}}"/>
                                <dx:EnumObjectProvider x:Key="Selected"
                                                       Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderSelectedBrush}}"/>
                                <dx:EnumObjectProvider x:Key="Focused"
                                                       Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=CellBorderFocusedBrush}}"/>
                                <dx:EnumObjectProvider x:Key="FocusedAndSelected"
                                                       Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderFocusedBrush}}"/>
                            </dx:EnumToObjectConverter.Values>
                        </dx:EnumToObjectConverter>
                    </Binding.Converter>
                </Binding>
            </Border.Background>
            ONLY SL-->
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition />
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Border x:Name="leftBandSeparator" Background="{Binding Column.ActualBandCellLeftSeparatorColor}" BorderBrush="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}" BorderThickness="0,0,1,0" Margin="0,-1,0,-1" Width="{Binding Column.ActualBandLeftSeparatorWidth}" />
        <dxg:FilterCriteriaControl Column="{Binding Column}" Grid.Column="1" Visibility="{Binding Path=Column.ActualShowCriteriaInAutoFilterRow, Converter={dx:BooleanToVisibilityConverter}}" />
        <dxg:FilterRowCellEditor x:Name="PART_CellEditor" Grid.Column="2" />
        <Button Name="PART_ClearButton" Background="#00000000" dx:FocusHelper2.Focusable="False" Grid.Column="3" Height="18" Template="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=AutoFilterRowClearButtonTemplate}}" Visibility="Collapsed">
          <dxmvvm:Interaction.Behaviors>
            <dxmvvm:EventToCommand EventName="PreviewMouseLeftButtonDown" Command="{Binding Path=ClearCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=dxg:FilterCellContentPresenter}}" />
          </dxmvvm:Interaction.Behaviors>
        </Button>
        <Border x:Name="rightBandSeparator" Background="{Binding Column.ActualBandCellRightSeparatorColor}" BorderBrush="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}" BorderThickness="1,0,0,0" Grid.Column="4" Margin="0,-1,0,-1" Width="{Binding Column.ActualBandRightSeparatorWidth}" />
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <DataTrigger Binding="{Binding Column.ActualBandCellLeftSeparatorColor}" Value="{x:Null}">
        <Setter Property="Background" TargetName="leftBandSeparator" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Column.ActualBandCellRightSeparatorColor}" Value="{x:Null}">
        <Setter Property="Background" TargetName="rightBandSeparator" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}" />
      </DataTrigger>
      <Trigger Property="dxg:TableView.IsFocusedRow" Value="False">
        <Setter Property="Foreground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextUnfocusedBrush}}" />
      </Trigger>
      <Trigger Property="dxg:TableView.IsFocusedRow" Value="True">
        <Setter Property="Foreground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextRowSelectedBrush}}" />
      </Trigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Column.ActualAllowAutoFilterClearButton}" Value="True" />
          <Condition Binding="{Binding Column.AutoFilterValue, Converter={dxgi:StringToBoolConverter}}" Value="True" />
          <Condition Binding="{Binding View.AutoFilterRowClearButtonMode}" Value="Always" />
        </MultiDataTrigger.Conditions>
        <Setter Property="Visibility" TargetName="PART_ClearButton" Value="Visible" />
      </MultiDataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Column.ActualAllowAutoFilterClearButton}" Value="True" />
          <Condition Binding="{Binding Column.AutoFilterValue, Converter={dxgi:StringToBoolConverter}}" Value="True" />
          <Condition Binding="{Binding View.AutoFilterRowClearButtonMode}" Value="Display" />
          <Condition Binding="{Binding IsFocusedCell, ElementName=PART_CellEditor}" Value="False" />
        </MultiDataTrigger.Conditions>
        <Setter Property="Visibility" TargetName="PART_ClearButton" Value="Visible" />
      </MultiDataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Column.ActualAllowAutoFilterClearButton}" Value="True" />
          <Condition Binding="{Binding Column.AutoFilterValue, Converter={dxgi:StringToBoolConverter}}" Value="True" />
          <Condition Binding="{Binding View.AutoFilterRowClearButtonMode}" Value="Edit" />
          <Condition Binding="{Binding IsFocusedCell, ElementName=PART_CellEditor}" Value="True" />
        </MultiDataTrigger.Conditions>
        <Setter Property="Visibility" TargetName="PART_ClearButton" Value="Visible" />
      </MultiDataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <SolidColorBrush x:Key="{dxgt:TableViewThemeKey ResourceKey=ColumnChooserBackgroundBrush}" Color="#FFE3E3E3" />
  <SolidColorBrush x:Key="{dxgt:TableViewThemeKey ResourceKey=ColumnChooserBorderBrush}" Color="#FFABABAB" />
  <DataTemplate x:Key="{dxgt:GridColumnHeaderThemeKey ResourceKey=FixedColumnsDelimiterTemplate}">
    <Border Background="#FFE3E3E3" BorderBrush="#FFABABAB" BorderThickness="1,0,1,1" />
  </DataTemplate>
  <Color x:Key="CellEditorForeColor">#FF333333</Color>
  <Color x:Key="CellEditorBorderColor">#FFD3D3D3</Color>
  <Color x:Key="RowSelectedInnerBorderBackgroundTo">#FFFC9F0C</Color>
  <Color x:Key="RowFocusedInnerBorderBackgroundTo">#FFE3E3E3</Color>
  <Color x:Key="RowFocusedAndSelectedInnerBorderBackgroundTo">#3F009AFF</Color>
  <ControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=CellContentPresenterTemplate}" TargetType="{x:Type dxg:CellContentPresenter}">
    <Border x:Name="ContentBorder" BorderThickness="{TemplateBinding BorderState}" Padding="{TemplateBinding Padding}">
      <!--ONLY SL<Border.BorderBrush>
                <SolidColorBrush x:Name="ContentBorderBorderBrush" Color="{StaticResource CellEditorBorderColor}"/>
            </Border.BorderBrush>
            <Border.Background>
                <SolidColorBrush x:Name="InnerBorderBackground" Color="Transparent"/>
            </Border.Background>ONLY SL-->
      <!--BEGIN WPF-->
      <Border.Background>
        <Binding Path="Background" RelativeSource="{RelativeSource TemplatedParent}" />
      </Border.Background>
      <Border.BorderBrush>
        <Binding Path="BorderBrush" RelativeSource="{RelativeSource TemplatedParent}" />
      </Border.BorderBrush>
      <!--END WPF-->
      <!--ONLY SL<VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="SelectionStates">
                    <VisualState x:Name="None"/>
                    <VisualState x:Name="Selected">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="InnerBorderBackground" Storyboard.TargetProperty="(SolidColorBrush.Color)" Duration="0" To="{StaticResource RowSelectedInnerBorderBackgroundTo}"/>
                            <ColorAnimation Storyboard.TargetName="Foreground" Storyboard.TargetProperty="(SolidColorBrush.Color)" To="{StaticResource BlackRowCellForeground}" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="InnerBorderBackground" Storyboard.TargetProperty="(SolidColorBrush.Color)" Duration="0" To="{StaticResource RowFocusedInnerBorderBackgroundTo}"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="FocusedAndSelected">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="InnerBorderBackground" Storyboard.TargetProperty="(SolidColorBrush.Color)" Duration="0" To="{StaticResource RowFocusedAndSelectedInnerBorderBackgroundTo}"/>
                            <ColorAnimation Storyboard.TargetName="Foreground" Storyboard.TargetProperty="(SolidColorBrush.Color)" To="{StaticResource BlackRowCellForeground}" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="RowFocused">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="Foreground" Storyboard.TargetProperty="(SolidColorBrush.Color)" To="{StaticResource BlackRowCellForeground}" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="RowSelected">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="Foreground" Storyboard.TargetProperty="(SolidColorBrush.Color)" To="{StaticResource BlackRowCellForeground}" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>ONLY SL-->
      <dxg:CellEditor x:Name="PART_CellEditor">
        <!--ONLY SL
                <dxg:CellEditor.Foreground>
                    <SolidColorBrush x:Name="Foreground" Color="{StaticResource CellEditorForeColor}"/>
                </dxg:CellEditor.Foreground>
                <dxg:CellEditor.Template>
                    <ControlTemplate TargetType="ContentControl">
                        <dxe:InplaceEditorContentPresenter/>
                    </ControlTemplate>
                </dxg:CellEditor.Template>
                ONLY SL-->
      </dxg:CellEditor>
    </Border>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=FitColumnContentTemplate}">
    <Border Name="fitColumnVerticalLine" Background="#00000000" BorderBrush="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}" BorderThickness="1,0,0,0">
      <Border.Opacity>
        <Binding Path="View.ShowVerticalLines">
          <Binding.Converter>
            <dx:BoolToObjectConverter FalseValue="0" TrueValue="1" />
          </Binding.Converter>
        </Binding>
      </Border.Opacity>
    </Border>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=FitColumnLeftContentTemplate}">
    <Border Name="fitColumnVerticalLine" Background="#00000000" BorderBrush="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}" BorderThickness="0,0,1,0">
      <Border.Opacity>
        <Binding Path="View.ShowVerticalLines">
          <Binding.Converter>
            <dx:BoolToObjectConverter FalseValue="0" TrueValue="1" />
          </Binding.Converter>
        </Binding>
      </Border.Opacity>
    </Border>
  </ControlTemplate>
  <DataTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=FixedColumnsDelimiterTemplate}">
    <Border x:Name="Border" BorderBrush="#FFD3D3D3" BorderThickness="1,0,1,0">
      <Border.Visibility>
        <Binding Path="View.ShowVerticalLines">
          <Binding.Converter>
            <dx:BoolToVisibilityConverter />
          </Binding.Converter>
        </Binding>
      </Border.Visibility>
    </Border>
  </DataTemplate>
  <ControlTemplate x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupFooterRowContentTemplate}" TargetType="{x:Type ContentControl}">
    <Border Name="border" Background="{TemplateBinding Background}" BorderBrush="#FFD3D3D3">
      <Border.BorderThickness>
        <Binding Path="FooterPosition">
          <Binding.Converter>
            <dx:EnumToObjectConverter>
              <dx:EnumToObjectConverter.Values>
                <dx:EnumObjectProvider x:Key="Top" Value="0,0,0,1" />
                <dx:EnumObjectProvider x:Key="Bottom" Value="0,0,0,1" />
                <dx:EnumObjectProvider x:Key="Middle" Value="0,0,0,1" />
                <dx:EnumObjectProvider x:Key="Single" Value="0,0,0,1" />
              </dx:EnumToObjectConverter.Values>
            </dx:EnumToObjectConverter>
          </Binding.Converter>
        </Binding>
      </Border.BorderThickness>
      <ContentPresenter MinHeight="32">
        <ContentPresenter.Margin>
          <Binding Path="ContentOffset">
            <Binding.Converter>
              <dxg:ContentOffsetToMarginConverter />
            </Binding.Converter>
          </Binding>
        </ContentPresenter.Margin>
      </ContentPresenter>
    </Border>
    <ControlTemplate.Triggers>
      <DataTrigger Binding="{Binding Path=View.ShowHorizontalLines}" Value="false">
        <Setter Property="BorderThickness" TargetName="border" Value="0" />
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupFooterSummaryControlTemplate}">
    <Border Name="border" Background="#00000000" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
      <Grid Name="rootGrid" Margin="{TemplateBinding Padding}">
        <!--BEGIN WPF-->
        <Grid.Visibility>
          <Binding Path="HasSummary">
            <Binding.Converter>
              <dx:BoolToObjectConverter FalseValue="Hidden" TrueValue="Visible" />
            </Binding.Converter>
          </Binding>
        </Grid.Visibility>
        <!--END WPF-->
        <!--ONLY SL
                <Grid.Opacity>
                    <Binding Path="HasSummary">
                        <Binding.Converter>
                            <dx:BoolToObjectConverter TrueValue="1" FalseValue="0"/>
                        </Binding.Converter>
                    </Binding>
                </Grid.Opacity>
                ONLY SL-->
        <Border x:Name="Border1" Background="#FFFFFFFF" BorderBrush="#FFD6D6D6" BorderThickness="1" Margin="1,1,2,1" MinHeight="22">
          <dx:DataContentPresenter Content="{Binding}" ContentTemplateSelector="{Binding Path=Column.View.ActualGroupFooterSummaryItemTemplateSelector}" Style="{Binding Path=Column.View.FooterSummaryContentStyle}" />
        </Border>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="MinHeight" TargetName="Border1" Value="44" />
      </Trigger>
      <DataTrigger Binding="{Binding ShowVerticalSeparator}" Value="true">
        <Setter Property="BorderThickness" TargetName="border" Value="0,0,1,0" />
        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=GridDataRowDelimiterBrush}}" />
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupFooterSummaryContentStyle}" TargetType="{x:Type dx:DataContentPresenter}">
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Margin" Value="12" />
      </Trigger>
    </Style.Triggers>
    <Setter Property="HorizontalAlignment" Value="{Binding Path=Column.ActualHorizontalContentAlignment}" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="Margin" Value="4,1,4,1" />
  </Style>
  <Style x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupBandSummaryContentStyle}" TargetType="{x:Type dxg:GroupBandSummaryControl}" />
  <DataTemplate x:Key="{dxgt:GroupRowThemeKey ResourceKey=GroupFooterSummaryItemTemplate}">
    <TextBlock dxg:InlineTextService.InlineInfo="{Binding SummaryTextInfo}" Style="{StaticResource {dxgt:TotalSummaryThemeKey ResourceKey=TotalSummaryTextControlStyle}}" />
  </DataTemplate>
  <SolidColorBrush x:Key="{dxgt:TableViewThemeKey ResourceKey=EditFormBackground}" Color="#FFE3E3E3" />
  <DataTemplate x:Key="{dxgt:TableViewThemeKey ResourceKey=CompactPanelDownGlyph}">
    <Grid x:Name="grid" FlowDirection="LeftToRight" SnapsToDevicePixels="True">
      <Path Data="F1 M 209,15.9999L 201,15.9999L 205,20L 209,15.9999 Z" Fill="{TemplateBinding TextBlock.Foreground}" Height="4" HorizontalAlignment="Center" Stretch="Fill" VerticalAlignment="Center" Width="8" />
    </Grid>
  </DataTemplate>
  <DataTemplate x:Key="{dxgt:TableViewThemeKey ResourceKey=CompactPanelSortGlyph}">
    <Grid x:Name="grid" Height="Auto" SnapsToDevicePixels="True" Width="Auto">
      <Path Data="F1 M 0,6L 1,5L 3,7L 3,0L 5,0L 5,7L 7,5L 8,6L 4,10L 0,6 Z " Fill="{TemplateBinding TextBlock.Foreground}" Height="10" Stretch="Fill" Width="8" />
    </Grid>
  </DataTemplate>
</ResourceDictionary>