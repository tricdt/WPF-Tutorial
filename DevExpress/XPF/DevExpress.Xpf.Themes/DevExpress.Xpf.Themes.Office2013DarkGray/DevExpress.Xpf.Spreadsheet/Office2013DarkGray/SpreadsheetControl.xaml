<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxsps="http://schemas.devexpress.com/winfx/2008/xaml/spreadsheet" xmlns:dxspsi="http://schemas.devexpress.com/winfx/2008/xaml/spreadsheet/internal" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:themes="http://schemas.devexpress.com/winfx/2008/xaml/spreadsheet/themekeys" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2013DarkGray.v24.1;component/DevExpress.Xpf.Spreadsheet/Generic/DefaultStyles.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <dx:EnumToVisibilityConverter x:Key="EnumToVisibilityConverter" />
  <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
  <dx:BoolToVisibilityInverseConverter x:Key="BoolToVisibilityInverseConverter" />
  <dx:ColorOverlayConverter x:Key="ColorOverlayConveter" />
  <sys:Double x:Key="{themes:SpreadsheetThemeKey ResourceKey=CellStyleGalleryBarItemHeight}">64</sys:Double>
  <sys:Double x:Key="{themes:SpreadsheetThemeKey ResourceKey=TableStyleGalleryBarItemHeight}">59</sys:Double>
  <sys:Double x:Key="{themes:SpreadsheetThemeKey ResourceKey=ChartLayoutGalleryBarItemHeight}">68</sys:Double>
  <sys:Double x:Key="{themes:SpreadsheetThemeKey ResourceKey=ChartStyleGalleryBarItemHeight}">68</sys:Double>
  <!-- General Resources -->
  <Color x:Key="{themes:SpreadsheetThemeKey ResourceKey=GridLinesColor}">#FFD3D3D3</Color>
  <Color x:Key="GlyphColor">#FF666666</Color>
  <Thickness x:Key="{themes:SpreadsheetThemeKey ResourceKey=SpreadsheetBorderThickness}">1</Thickness>
  <SolidColorBrush x:Key="{themes:SpreadsheetThemeKey ResourceKey=SpreadsheetBorderBrush}" Color="#FFABABAB" />
  <SolidColorBrush x:Key="{themes:SpreadsheetThemeKey ResourceKey=SpreadsheetForegroundBrush}" Color="#FF000000" />
  <SolidColorBrush x:Key="{themes:SpreadsheetThemeKey ResourceKey=SpreadsheetBackgroundBrush}" Color="#FFFFFFFF" />
  <SolidColorBrush x:Key="{themes:SpreadsheetThemeKey ResourceKey=VisualFeedbackLineBrush}" Color="#FF000000" />
  <SolidColorBrush x:Key="{themes:SpreadsheetThemeKey ResourceKey=FrozenSeparatorBrush}" Color="#FF9B9B9B" />
  <SolidColorBrush x:Key="{themes:SpreadsheetThemeKey ResourceKey=WorksheetBorderBrush}" Color="{StaticResource {themes:SpreadsheetThemeKey ResourceKey=GridLinesColor}}" />
  <SolidColorBrush x:Key="{themes:SpreadsheetThemeKey ResourceKey=AutoFilterBackgroundBrush}" Color="#FFFFFFFF" />
  <SolidColorBrush x:Key="Selection.BorderBrush" Color="#FF92C0E0" />
  <SolidColorBrush x:Key="Selection.Background" Color="#3F92C0E0" />
  <SolidColorBrush x:Key="TabPanel.BorderBrush" Color="#FFABABAB" />
  <SolidColorBrush x:Key="TabPanel.Background" Color="#FFE3E3E3" />
  <SolidColorBrush x:Key="GridLine" Color="#FFABABAB" />
  <SolidColorBrush x:Key="ResizeThumb.Background" Color="#FFE3E3E3" />
  <SolidColorBrush x:Key="ResizeThumb.GlyphBrush" Color="#FFABABAB" />
  <SolidColorBrush x:Key="ResizeThumb.GlyphBrush.IsMouseOver" Color="#FF666666" />
  <SolidColorBrush x:Key="ScrollBar.Corner.BorderBrush" Color="#FFD6D6D6" />
  <SolidColorBrush x:Key="ScrollBar.Corner.Background" Color="#FFD3D3D3" />
  <SolidColorBrush x:Key="GlyphBrush" Color="#FF666666" />
  <!-- Grouping -->
  <SolidColorBrush x:Key="{themes:SpreadsheetThemeKey ResourceKey=GroupControlBackgroundBrush}" Color="#FFF3F3F3" />
  <SolidColorBrush x:Key="{themes:SpreadsheetThemeKey ResourceKey=GroupLineBrush}" Color="#FFB9B9B9" />
  <SolidColorBrush x:Key="{themes:SpreadsheetThemeKey ResourceKey=GroupDotBrush}" Color="#FF484848" />
  <sys:Double x:Key="{themes:SpreadsheetThemeKey ResourceKey=GroupLineThickness}">2</sys:Double>
  <sys:Double x:Key="{themes:SpreadsheetThemeKey ResourceKey=GroupDotThickness}">2</sys:Double>
  <!-- Header -->
  <SolidColorBrush x:Key="Header.BorderBrush" Color="#FFABABAB" />
  <SolidColorBrush x:Key="Header.Background" Color="#FFE3E3E3" />
  <SolidColorBrush x:Key="Header.BorderBrush.IsMouseOver" Color="#FFABABAB" />
  <SolidColorBrush x:Key="Header.Background.IsMouseOver" Color="#FFC6C6C6" />
  <SolidColorBrush x:Key="Header.BorderBrush.IsSelected" Color="#FFABABAB" />
  <SolidColorBrush x:Key="Header.Background.IsSelected" Color="#FFABABAB" />
  <!-- TabSelectorItem -->
  <SolidColorBrush x:Key="TabSelectorItem.UnselectedState.Border1" Color="#FFABABAB" />
  <SolidColorBrush x:Key="TabSelectorItem.UnselectedState.Border2" Color="#FFE3E3E3" />
  <SolidColorBrush x:Key="TabSelectorItem.SelectedState.Border1" Color="#FFABABAB" />
  <SolidColorBrush x:Key="TabSelectorItem.SelectedState.Border2" Color="#FFFFFFFF" />
  <SolidColorBrush x:Key="TabSelectorItem.MouseHoverState.Border1" Color="#FFABABAB" />
  <SolidColorBrush x:Key="TabSelectorItem.MouseHoverState.Border2" Color="#FFC6C6C6" />
  <!-- NavButton -->
  <SolidColorBrush x:Key="NavButton.Background" Color="#FFE3E3E3" />
  <SolidColorBrush x:Key="NavButton.HoverState.Border1" Color="#FFCDE6F7" />
  <SolidColorBrush x:Key="NavButton.HoverState.Border2" Color="#FFCDE6F7" />
  <SolidColorBrush x:Key="NavButton.PressedState.Border1" Color="#FF92C0E0" />
  <SolidColorBrush x:Key="NavButton.PressedState.Border2" Color="#FF92C0E0" />
  <!-- AddButton -->
  <SolidColorBrush x:Key="AddButton.DefaultState.Border1" Color="#FFABABAB" />
  <SolidColorBrush x:Key="AddButton.DefaultState.Border2" Color="#FFE3E3E3" />
  <SolidColorBrush x:Key="AddButton.HoverState.Border1" Color="#FFABABAB" />
  <SolidColorBrush x:Key="AddButton.HoverState.Border2" Color="#FFC6C6C6" />
  <SolidColorBrush x:Key="AddButton.PressedState.Border1" Color="#FFABABAB" />
  <SolidColorBrush x:Key="AddButton.PressedState.Border2" Color="#FFABABAB" />
  <!-- FormulaBarItem Hover/Pressed -->
  <SolidColorBrush x:Key="FormulaBarItem.HoverState" Color="#FFCDE6F7" />
  <SolidColorBrush x:Key="FormulaBarItem.PressedState" Color="#FF92C0E0" />
  <SolidColorBrush x:Key="FormulaBarItem.Editor.BorderBrush" Color="#FFACACAC" />
  <!-- FormulaBar Collapse/Expand Button -->
  <SolidColorBrush x:Key="ExpandButton.DefaultState.Border" Color="#FFACACAC" />
  <SolidColorBrush x:Key="ExpandButton.DefaultState.Background" Color="#FFFFFFFF" />
  <SolidColorBrush x:Key="ExpandButton.HoverState" Color="#FFCDE6F7" />
  <SolidColorBrush x:Key="ExpandButton.PressedState" Color="#FF92C0E0" />
  <!-- FormulaBarContol -->
  <sys:Double x:Key="{themes:SpreadsheetThemeKey ResourceKey=FormulaBarControlMinHeight}">26</sys:Double>
  <Style x:Key="SpreadsheetNameBoxControlStyle" TargetType="{x:Type dxspsi:SpreadsheetNameBoxControl}">
    <Setter Property="EditValuePostMode" Value="Immediate" />
    <Setter Property="IsReadOnly" Value="False" />
    <Setter Property="MinHeight" Value="26" />
    <Setter Property="ValidateOnTextInput" Value="True" />
    <Setter Property="VerticalAlignment" Value="Center" />
  </Style>
  <Style x:Key="FormulaBarEditorStyle" TargetType="{x:Type dxspsi:FormulaBarEditor}">
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="MinHeight" Value="44" />
        <Setter Property="Padding" Value="12" />
      </Trigger>
    </Style.Triggers>
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="MinHeight" Value="24" />
    <Setter Property="Padding" Value="2,4,2,4" />
  </Style>
  <Style x:Key="FormulaBarEditorBorderStyle" TargetType="{x:Type Border}">
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="MinHeight" Value="44" />
      </Trigger>
    </Style.Triggers>
    <Setter Property="Background" Value="#FFFFFFFF" />
    <Setter Property="BorderBrush" Value="{StaticResource FormulaBarItem.Editor.BorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="MinHeight" Value="26" />
    <Setter Property="Margin" Value="3,0,0,0" />
  </Style>
  <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=FormulaBarControlTemplate}" TargetType="{x:Type dxsps:SpreadsheetFormulaBarControl}">
    <Border>
      <Grid Height="{TemplateBinding Height}" Margin="5,10,5,10" Width="{TemplateBinding Width}">
        <Grid.RowDefinitions>
          <RowDefinition MinHeight="{TemplateBinding MinHeight}" />
          <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid x:Name="PART_HorizontalContainer">
          <Grid x:Name="PART_FormulaBarEditorContainer" Grid.Column="1">
            <Grid.ColumnDefinitions>
              <ColumnDefinition MinWidth="120" Width="120" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="{TemplateBinding MinHeight}" MaxHeight="{TemplateBinding MinHeight}" MinHeight="{TemplateBinding MinHeight}" />
              <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <dxspsi:SpreadsheetNameBoxControl x:Name="PART_Combobox" SpreadsheetControl="{TemplateBinding SpreadsheetControl}" Style="{StaticResource SpreadsheetNameBoxControlStyle}" />
            <Thumb x:Name="PART_VerticalThumb" Grid.Column="1" Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=FormulaBarVerticalThumbStyle}}" />
            <Border x:Name="Border2" Background="#FFFFFFFF" BorderBrush="{StaticResource FormulaBarItem.Editor.BorderBrush}" BorderThickness="1" Grid.Column="2" MinHeight="26" VerticalAlignment="Top">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition />
                  <ColumnDefinition />
                  <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Button x:Name="PART_CancelButton" Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=FormulaBarCancelButtonStyle}}" />
                <Button x:Name="PART_OkButton" Grid.Column="1" Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=FormulaBarOkButtonStyle}}" />
                <Button x:Name="PART_FunctionButton" Grid.Column="2" Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=FormulaBarFunctionButtonStyle}}" />
              </Grid>
            </Border>
            <Border Grid.Column="3" Grid.RowSpan="2" Style="{StaticResource FormulaBarEditorBorderStyle}">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <dxspsi:FormulaBarEditor x:Name="PART_Editor" Style="{StaticResource FormulaBarEditorStyle}" />
                <Grid Grid.Column="1">
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" MinHeight="24" />
                    <RowDefinition Height="*" />
                  </Grid.RowDefinitions>
                  <ToggleButton x:Name="PART_ExpandButton" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=FormulaBarExpandButtonStyle}}" />
                  <ScrollBar Grid.Row="1" LargeChange="{Binding ScrollViewer.ViewportHeight, ElementName=PART_Editor}" Maximum="{Binding ScrollViewer.ScrollableHeight, ElementName=PART_Editor}" Minimum="0" ViewportSize="{Binding ScrollViewer.ViewportHeight, ElementName=PART_Editor}" Visibility="{Binding IsExpanded, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                </Grid>
              </Grid>
            </Border>
          </Grid>
        </Grid>
        <Thumb x:Name="PART_HorizontalThumb" Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=FormulaBarHorizontalThumbStyle}}" VerticalAlignment="Bottom" />
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="MinHeight" TargetName="Border2" Value="44" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=FormulaBarExpandButtonStyle}" TargetType="{x:Type ToggleButton}">
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Height" Value="44" />
        <Setter Property="Width" Value="44" />
      </Trigger>
    </Style.Triggers>
    <Setter Property="Focusable" Value="False" />
    <Setter Property="Height" Value="20" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border x:Name="Root" Background="#FFD3D3D3" SnapsToDevicePixels="True">
            <Grid>
              <Path x:Name="GlyphExpanded" Data="F1 M 0,1.52588e-005L 1.22465e-016,2.99998L 4,7L 8,3L 8,1.52588e-005L 4,4.00002L 0,1.52588e-005 Z " Fill="#FF666666" Height="6" Stretch="Fill" Width="7" />
              <Path x:Name="GlyphCollapsed" Data="F1 M 8,7.00002L 8,4.00006L 12,4.57764e-005L 16,4.00005L 16,7.00005L 12,3.00005L 8,7.00002 Z " Fill="#FF666666" Height="6" Opacity="0" Stretch="Fill" Width="7" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Fill" TargetName="GlyphCollapsed" Value="#FF0072C6" />
              <Setter Property="Fill" TargetName="GlyphExpanded" Value="#FF0072C6" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Fill" TargetName="GlyphCollapsed" Value="#FF0072C6" />
              <Setter Property="Fill" TargetName="GlyphExpanded" Value="#FF0072C6" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
              <Setter Property="Opacity" TargetName="GlyphCollapsed" Value="1" />
              <Setter Property="Opacity" TargetName="GlyphExpanded" Value="0" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Width" Value="17" />
  </Style>
  <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=FormulaBarCancelButtonStyle}" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid x:Name="Grid1" Background="Transparent" MinHeight="24" MinWidth="24">
            <Grid Margin="4">
              <Image x:Name="image1" dxb:ImageColorizer.Color="{StaticResource GlyphColor}" dxb:ImageColorizer.IsEnabled="True" HorizontalAlignment="Center" Source="/DevExpress.Xpf.Spreadsheet.v24.1;component/Images/FormulaBarCancel_16x16.png" Stretch="None" VerticalAlignment="Center" Visibility="{TemplateBinding IsEnabled,                                                                 Converter={StaticResource BoolToVisibilityInverseConverter}}" />
              <Image x:Name="image2" dxb:ImageColorizer.Color="{StaticResource GlyphColor}" dxb:ImageColorizer.IsEnabled="True" HorizontalAlignment="Center" Source="/DevExpress.Xpf.Spreadsheet.v24.1;component/Images/FormulaBarCancel_16x16.png" Stretch="None" VerticalAlignment="Center" Visibility="{TemplateBinding IsEnabled,                                                                 Converter={StaticResource BoolToVisibilityConverter}}" />
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="dxb:ImageColorizer.Color" TargetName="image1" Value="#FFD13434" />
              <Setter Property="dxb:ImageColorizer.Color" TargetName="image2" Value="#FFD13434" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="dxb:ImageColorizer.Color" TargetName="image1" Value="#FFD13434" />
              <Setter Property="dxb:ImageColorizer.Color" TargetName="image2" Value="#FFD13434" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value="0.35" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
              <Setter Property="MinHeight" TargetName="Grid1" Value="42" />
              <Setter Property="MinWidth" TargetName="Grid1" Value="42" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=FormulaBarOkButtonStyle}" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid x:Name="Grid1" Background="Transparent" MinHeight="24" MinWidth="24">
            <Grid Margin="4">
              <Image x:Name="image1" dxb:ImageColorizer.Color="{StaticResource GlyphColor}" dxb:ImageColorizer.IsEnabled="True" HorizontalAlignment="Center" Source="/DevExpress.Xpf.Spreadsheet.v24.1;component/Images/FormulaBarOk_16x16.png" Stretch="None" VerticalAlignment="Center" Visibility="{TemplateBinding IsEnabled,                                                                 Converter={StaticResource BoolToVisibilityInverseConverter}}" />
              <Image x:Name="image2" dxb:ImageColorizer.Color="{StaticResource GlyphColor}" dxb:ImageColorizer.IsEnabled="True" HorizontalAlignment="Center" Source="/DevExpress.Xpf.Spreadsheet.v24.1;component/Images/FormulaBarOk_16x16.png" Stretch="None" VerticalAlignment="Center" Visibility="{TemplateBinding IsEnabled,                                                                 Converter={StaticResource BoolToVisibilityConverter}}" />
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="dxb:ImageColorizer.Color" TargetName="image1" Value="#FF3883B7" />
              <Setter Property="dxb:ImageColorizer.Color" TargetName="image2" Value="#FF3883B7" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="dxb:ImageColorizer.Color" TargetName="image1" Value="#FF3883B7" />
              <Setter Property="dxb:ImageColorizer.Color" TargetName="image2" Value="#FF3883B7" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value="0.35" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
              <Setter Property="MinHeight" TargetName="Grid1" Value="42" />
              <Setter Property="MinWidth" TargetName="Grid1" Value="42" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=FormulaBarFunctionButtonStyle}" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid x:Name="Grid1" Background="Transparent" MinHeight="24" MinWidth="24">
            <Grid Margin="4">
              <Image x:Name="image1" dxb:ImageColorizer.Color="{StaticResource GlyphColor}" dxb:ImageColorizer.IsEnabled="True" HorizontalAlignment="Center" Source="/DevExpress.Xpf.Spreadsheet.v24.1;component/Images/FormulaBarInsertFunction_16x16.png" Stretch="None" VerticalAlignment="Center" Visibility="{TemplateBinding IsEnabled,                                                                 Converter={StaticResource BoolToVisibilityInverseConverter}}" />
              <Image x:Name="image2" dxb:ImageColorizer.Color="{StaticResource GlyphColor}" dxb:ImageColorizer.IsEnabled="True" HorizontalAlignment="Center" Source="/DevExpress.Xpf.Spreadsheet.v24.1;component/Images/FormulaBarInsertFunction_16x16.png" Stretch="None" VerticalAlignment="Center" Visibility="{TemplateBinding IsEnabled,                                                                 Converter={StaticResource BoolToVisibilityConverter}}" />
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="dxb:ImageColorizer.Color" TargetName="image1" Value="#FF439467" />
              <Setter Property="dxb:ImageColorizer.Color" TargetName="image2" Value="#FF439467" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="dxb:ImageColorizer.Color" TargetName="image1" Value="#FF439467" />
              <Setter Property="dxb:ImageColorizer.Color" TargetName="image2" Value="#FF439467" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value="0.35" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
              <Setter Property="MinHeight" TargetName="Grid1" Value="42" />
              <Setter Property="MinWidth" TargetName="Grid1" Value="42" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=FormulaBarHorizontalThumbStyle}" TargetType="{x:Type Thumb}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Grid Background="Transparent" Cursor="SizeNS" Height="3" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=FormulaBarVerticalThumbStyle}" TargetType="{x:Type Thumb}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Background="Transparent" Cursor="SizeWE" Padding="14,0,14,0">
            <Path Data="F1 M 0,0L 2,0L 2,2L 0,2L 0,0 Z M 0,4L 2,4L 2,6L 0,6L 0,4 Z M 0,8L 2,8L 2,10L 0,10L 0,8 Z " Fill="#FFB3B3B3" Height="10" Stretch="Fill" Width="2" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="MinHeight" Value="44" />
        <Setter Property="MinWidth" Value="44" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="{x:Type dxspsi:FormulaBarEditor}">
    <Setter Property="Background" Value="#FFFFFFFF" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxspsi:FormulaBarEditor}">
          <Grid x:Name="RootElement" Background="{TemplateBinding Background}" Margin="{TemplateBinding Margin}">
            <Grid>
              <Border x:Name="focus" BorderThickness="0" Opacity="0" />
              <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                <ScrollViewer x:Name="PART_ContentHost" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" IsTabStop="False" Padding="{TemplateBinding Padding}" VerticalContentAlignment="Center" />
              </Border>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="TextWrapping" Value="Wrap" />
  </Style>
  <!-- Grouping -->
  <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=GroupButtonTemplate}" TargetType="{x:Type dxspsi:GroupItem}">
    <Grid Margin="-1,-1,0,0">
      <Grid Height="13" Width="13">
        <Grid x:Name="ExpandButton" Opacity="0.5" Visibility="Hidden">
          <Rectangle x:Name="Rectange1" Fill="#FFFFFFFF" Margin="1" />
          <Path x:Name="Path1" Data="F1 M 145,63L 154,63L 154,72L 145,72L 145,63 Z M 146,64.0001L 146,71.0001L 153,71.0001L 153,64.0001L 146,64.0001 Z M 147,67.0001L 152,67.0001L 152,68.0001L 147,68.0001L 147,67.0001 Z " Fill="#FF484848" Stretch="Fill" />
        </Grid>
        <Grid x:Name="CollapseButton" Opacity="0.5" Visibility="Hidden">
          <Rectangle x:Name="Rectange2" Fill="#FFFFFFFF" Margin="1" />
          <Path x:Name="Path2" Data="F1 M 135,67L 137,67L 137,65L 138,65L 138,67L 140,67L 140,68L 138,68L 138,70L 137,70L 137,68L 135,68L 135,67 Z M 133,63.0001L 142,63.0001L 142,72.0001L 133,72.0001L 133,63.0001 Z M 134,64.0001L 134,71.0001L 141,71.0001L 141,64.0001L 134,64.0001 Z " Fill="#FF484848" Stretch="Fill" />
        </Grid>
      </Grid>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsExpanded" Value="True">
        <Setter Property="Visibility" TargetName="ExpandButton" Value="Visible" />
      </Trigger>
      <Trigger Property="IsCollapsed" Value="True">
        <Setter Property="Visibility" TargetName="CollapseButton" Value="Visible" />
      </Trigger>
      <Trigger Property="IsHovered" Value="True">
        <Setter Property="Opacity" TargetName="CollapseButton" Value="1" />
        <Setter Property="Opacity" TargetName="ExpandButton" Value="1" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Opacity" TargetName="CollapseButton" Value="1" />
        <Setter Property="Opacity" TargetName="ExpandButton" Value="1" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=GroupHeaderTemplate}" TargetType="{x:Type dxspsi:GroupItem}">
    <Grid>
      <Border x:Name="DefaultState" Background="{StaticResource Header.Background}" BorderBrush="{StaticResource Header.BorderBrush}" BorderThickness="1" />
      <Border x:Name="HoverState" Background="{StaticResource Header.Background.IsMouseOver}" BorderBrush="{StaticResource Header.BorderBrush.IsMouseOver}" BorderThickness="1" />
      <Border x:Name="PressedState" Background="{StaticResource Header.Background.IsSelected}" BorderBrush="{StaticResource Header.BorderBrush.IsSelected}" BorderThickness="1" />
      <TextBlock HorizontalAlignment="Center" Text="{TemplateBinding Text}" FontSize="{TemplateBinding FontHeight}" TextAlignment="Center" VerticalAlignment="Center" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsHovered" Value="True">
        <Setter Property="Opacity" TargetName="HoverState" Value="1" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Opacity" TargetName="PressedState" Value="1" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <!-- Comments -->
  <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=CommentTemplate}" TargetType="{x:Type dxspsi:CommentItem}">
    <Border Background="{TemplateBinding Background}" BorderBrush="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=CommentLineBrush}}" BorderThickness="1">
      <TextBox x:Name="PART_CommentBox" AcceptsReturn="True" Background="{TemplateBinding Background}" BorderThickness="0" Cursor="{TemplateBinding Cursor}" dx:ThemeManager.ThemeName="None" Focusable="{TemplateBinding Focusable}" FontFamily="{Binding TextSettings.FontFamily, RelativeSource={RelativeSource TemplatedParent}}" FontSize="{Binding TextSettings.FontSize, RelativeSource={RelativeSource TemplatedParent}}" FontStyle="{Binding TextSettings.FontStyle, RelativeSource={RelativeSource TemplatedParent}}" FontWeight="{Binding TextSettings.FontWeight, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{Binding TextSettings.Foreground, RelativeSource={RelativeSource TemplatedParent}}" IsReadOnly="{TemplateBinding IsReadOnly}" Text="{TemplateBinding Text}" TextWrapping="{Binding TextSettings.TextWrapping, RelativeSource={RelativeSource TemplatedParent}}" />
    </Border>
  </ControlTemplate>
  <!-- HeaderControl -->
  <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=HeadersControlTemplate}" TargetType="{x:Type dxspsi:WorksheetHeadersControl}">
    <Border>
      <dxspsi:HeadersPanel LayoutInfo="{Binding Path=(dxspsi:SpreadsheetViewControl.ActiveSpreadsheetView).LayoutInfo, RelativeSource={RelativeSource Self}}" Orientation="{TemplateBinding Orientation}" />
    </Border>
  </ControlTemplate>
  <!-- Header Item -->
  <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=HorizontalHeaderItem}" TargetType="{x:Type dxspsi:HeaderItem}">
    <Border x:Name="Root" Background="{StaticResource Header.Background}" BorderBrush="{StaticResource Header.BorderBrush}" BorderThickness="0,0,1,1">
      <TextBlock FontSize="{TemplateBinding FontHeight}" HorizontalAlignment="Center" Text="{TemplateBinding Text}" TextAlignment="Center" VerticalAlignment="Center" />
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" TargetName="Root" Value="{StaticResource Header.Background.IsMouseOver}" />
        <Setter Property="BorderBrush" TargetName="Root" Value="{StaticResource Header.BorderBrush.IsMouseOver}" />
      </Trigger>
      <Trigger Property="IsSelected" Value="True">
        <Setter Property="Background" TargetName="Root" Value="{StaticResource Header.Background.IsSelected}" />
        <Setter Property="BorderBrush" TargetName="Root" Value="{StaticResource Header.BorderBrush.IsSelected}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=VerticalHeaderItem}" TargetType="{x:Type dxspsi:HeaderItem}">
    <Border x:Name="Root" Background="{StaticResource Header.Background}" BorderBrush="{StaticResource Header.BorderBrush}" BorderThickness="0,0,1,1">
      <TextBlock FontSize="{TemplateBinding FontHeight}" HorizontalAlignment="Center" Text="{TemplateBinding Text}" TextAlignment="Center" VerticalAlignment="Center" />
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="IsSelected" Value="True">
        <Setter Property="Background" TargetName="Root" Value="{StaticResource Header.Background.IsSelected}" />
        <Setter Property="BorderBrush" TargetName="Root" Value="{StaticResource Header.BorderBrush.IsSelected}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <!-- TabSelector -->
  <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=TabSelectorItemTemplate}" TargetType="{x:Type dxspsi:TabSelectorItem}">
    <Grid x:Name="PART_Root">
      <Grid x:Name="Grid1" Margin="0,1,-1,-2">
        <Border x:Name="UnselectedState" Background="{StaticResource TabSelectorItem.UnselectedState.Border2}" BorderBrush="{StaticResource TabSelectorItem.UnselectedState.Border1}" BorderThickness="1,0,1,1" Padding="0,0,1,0" Visibility="{TemplateBinding State, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter=Normal}" />
        <Border x:Name="HoverState" Background="{StaticResource TabSelectorItem.MouseHoverState.Border2}" BorderBrush="{StaticResource TabSelectorItem.MouseHoverState.Border1}" BorderThickness="1,0,1,1" Opacity="0" Padding="0,0,1,0" />
        <Border x:Name="CheckedState" Background="{StaticResource TabSelectorItem.UnselectedState.Border2}" BorderBrush="{StaticResource TabSelectorItem.UnselectedState.Border1}" BorderThickness="1,0,1,1" Padding="0,0,1,0" Visibility="{TemplateBinding State, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter=Selected}" />
        <Border x:Name="SelectedState" Background="{StaticResource TabSelectorItem.SelectedState.Border2}" BorderBrush="{StaticResource TabSelectorItem.SelectedState.Border1}" BorderThickness="1,0,1,1" Margin="0,-1,0,0" Padding="0,0,1,0" Visibility="{TemplateBinding State, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter=Active}" />
      </Grid>
      <TextBlock x:Name="TextBlock1" Focusable="False" Margin="12,0,12,0" Text="{TemplateBinding Text}" TextAlignment="Center" VerticalAlignment="Center" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Opacity" TargetName="HoverState" Value="1" />
      </Trigger>
      <Trigger Property="State" Value="Active">
        <Setter Property="Foreground" TargetName="TextBlock1" Value="#FF0072C6" />
      </Trigger>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Margin" TargetName="Grid1" Value="0,1,0,-1" />
        <Setter Property="Margin" TargetName="TextBlock1" Value="13" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=TabSelectorColoredItemTemplate}" TargetType="{x:Type dxspsi:TabSelectorItem}">
    <Grid x:Name="PART_Root">
      <Grid.Resources>
        <SolidColorBrush x:Key="Color.TabSelectorItem.UnselectedState.Border1" Color="#FFD6D6D6" />
        <SolidColorBrush x:Key="Color.TabSelectorItem.UnselectedState.Border2" Color="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorOverlayConveter}, ConverterParameter=#FFF6F6F6}" />
        <SolidColorBrush x:Key="Color.TabSelectorItem.SelectedState.Border1" Color="#FFD6D6D6" />
        <LinearGradientBrush x:Key="Color.TabSelectorItem.SelectedState.Border2" EndPoint="0.5,1" StartPoint="0.5,0">
          <GradientStop Color="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorOverlayConveter}, ConverterParameter=#FFFFFFFF}" Offset="0" />
          <GradientStop Color="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorOverlayConveter}, ConverterParameter=#FFFFFFFF}" Offset="0.5" />
          <GradientStop Color="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorOverlayConveter}, ConverterParameter=#FFF6F6F6}" Offset="1" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="Color.TabSelectorItem.MouseHoverState.Border1" Color="#FFD6D6D6" />
        <SolidColorBrush x:Key="Color.TabSelectorItem.MouseHoverState.Border2" Color="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorOverlayConveter}, ConverterParameter=#FFF0F0F0}" />
      </Grid.Resources>
      <Grid x:Name="Grid1" Margin="0,1,-1,-2">
        <Border x:Name="UnselectedState" Background="{StaticResource Color.TabSelectorItem.UnselectedState.Border2}" BorderBrush="{StaticResource Color.TabSelectorItem.UnselectedState.Border1}" BorderThickness="1,0,1,1" Padding="0,0,1,0" Visibility="{TemplateBinding State, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter=Normal}" />
        <Border x:Name="HoverState" Background="{StaticResource Color.TabSelectorItem.MouseHoverState.Border2}" BorderBrush="{StaticResource Color.TabSelectorItem.MouseHoverState.Border1}" BorderThickness="1,0,1,1" Opacity="0" Padding="0,0,1,0" />
        <Border x:Name="CheckedState" Background="{StaticResource Color.TabSelectorItem.UnselectedState.Border2}" BorderBrush="{StaticResource Color.TabSelectorItem.UnselectedState.Border1}" BorderThickness="1,0,1,1" Padding="0,0,1,0" Visibility="{TemplateBinding State, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter=Selected}" />
        <Border x:Name="SelectedState" Background="{StaticResource Color.TabSelectorItem.SelectedState.Border2}" BorderBrush="{StaticResource Color.TabSelectorItem.SelectedState.Border1}" BorderThickness="1,0,1,1" Margin="0,-1,0,0" Padding="0,0,1,0" Visibility="{TemplateBinding State, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter=Active}" />
      </Grid>
      <TextBlock x:Name="TextBlock1" Focusable="False" Margin="12,0,12,0" Text="{TemplateBinding Text}" TextAlignment="Center" VerticalAlignment="Center" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Opacity" TargetName="HoverState" Value="1" />
      </Trigger>
      <Trigger Property="State" Value="Active">
        <Setter Property="Foreground" TargetName="TextBlock1" Value="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorOverlayConveter}, ConverterParameter=#FF666666}" />
      </Trigger>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Margin" TargetName="Grid1" Value="0,1,0,-1" />
        <Setter Property="Margin" TargetName="TextBlock1" Value="13" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=TabSelectorTemplate}" TargetType="{x:Type dxspsi:SpreadsheetTabSelector}">
    <Border x:Name="Border1" MinHeight="12">
      <Grid x:Name="PART_RootContainer">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Border Background="{StaticResource TabPanel.BorderBrush}" Padding="0,0,0,0">
          <Grid x:Name="PART_NavButtonContainer">
            <Grid.ColumnDefinitions>
              <ColumnDefinition />
              <ColumnDefinition />
              <ColumnDefinition />
              <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Button x:Name="PART_FirstButton" Command="{TemplateBinding FirstTabCommand}" CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}" Focusable="False" Grid.Column="0" Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=BaseButtonStyle}}" Width="20">
              <Grid>
                <Path Data="F1 M 1351,926L 1347,922L 1347,926L 1346,926L 1346,918L 1347,918L 1347,922L 1351,918L 1351,922L 1355,918L 1355,926L 1351,922L 1351,926 Z" Fill="#3FFFFFFF" Height="8" Margin="0,1,0,-1" Stretch="Fill" Width="9" />
                <Path Data="F1 M 1351,926L 1347,922L 1347,926L 1346,926L 1346,918L 1347,918L 1347,922L 1351,918L 1351,922L 1355,918L 1355,926L 1351,922L 1351,926 Z" Fill="{StaticResource GlyphBrush}" Height="8" Stretch="Fill" Width="9" />
              </Grid>
            </Button>
            <Button x:Name="PART_PrevButton" Command="{TemplateBinding PrevTabCommand}" CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}" Focusable="False" Grid.Column="1" Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=BaseButtonStyle}}" Width="20">
              <Grid>
                <Path Data="F1 M 1314,926L 1310,922L 1314,918L 1314,926 Z" Fill="#3FFFFFFF" Height="8" Margin="0,1,0,-1" Stretch="Fill" Width="4" />
                <Path Data="F1 M 1314,926L 1310,922L 1314,918L 1314,926 Z" Fill="{StaticResource GlyphBrush}" Height="8" Stretch="Fill" Width="4" />
              </Grid>
            </Button>
            <Button x:Name="PART_NextButton" Command="{TemplateBinding NextTabCommand}" CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}" Focusable="False" Grid.Column="2" Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=BaseButtonStyle}}" Width="20">
              <Grid>
                <Path Data="F1 M 1423,918L 1427,922L 1423,926L 1423,918 Z " Fill="#3FFFFFFF" Height="8" Margin="0,1,0,-1" Stretch="Fill" Width="4" />
                <Path Data="F1 M 1423,918L 1427,922L 1423,926L 1423,918 Z " Fill="{StaticResource GlyphBrush}" Height="8" Stretch="Fill" Width="4" />
              </Grid>
            </Button>
            <Button x:Name="PART_LastButton" Command="{TemplateBinding LastTabCommand}" CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}" Focusable="False" Grid.Column="3" Style="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=BaseButtonStyle}}" Width="20">
              <Grid>
                <Path Data="F1 M 1386,918L 1390,922L 1390,918L 1391,918L 1391,926L 1390,926L 1390,922L 1386,926L 1386,922L 1382,926L 1382,918L 1386,922L 1386,918 Z " Fill="#3FFFFFFF" Height="8" Margin="0,1,0,-1" Stretch="Fill" Width="9" />
                <Path Data="F1 M 1386,918L 1390,922L 1390,918L 1391,918L 1391,926L 1390,926L 1390,922L 1386,926L 1386,922L 1382,926L 1382,918L 1386,922L 1386,918 Z " Fill="{StaticResource GlyphBrush}" Height="8" Stretch="Fill" Width="9" />
              </Grid>
            </Button>
          </Grid>
        </Border>
        <dxspsi:TabSelectorPanel AddButtonTemplate="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=AddButtonDataTemplate}}" Grid.Column="1" Grid.ColumnSpan="2" TabSelectorItemColoredTemplate="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=TabSelectorColoredItemTemplate}}" TabSelectorItemDefaultTemplate="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=TabSelectorItemTemplate}}" />
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="MinHeight" TargetName="Border1" Value="43" />
        <Setter Property="Width" TargetName="PART_FirstButton" Value="44" />
        <Setter Property="Width" TargetName="PART_LastButton" Value="44" />
        <Setter Property="Width" TargetName="PART_NextButton" Value="44" />
        <Setter Property="Width" TargetName="PART_PrevButton" Value="44" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=BaseButtonStyle}" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid x:Name="Root" Margin="0,1,0,0">
            <Border x:Name="DefaultState" Background="{StaticResource NavButton.Background}" />
            <Border x:Name="HoverState" Background="{StaticResource NavButton.HoverState.Border2}" BorderBrush="{StaticResource NavButton.HoverState.Border1}" BorderThickness="1,0,1,0" Opacity="0" />
            <Border x:Name="PressedState" Background="{StaticResource NavButton.PressedState.Border2}" BorderBrush="{StaticResource NavButton.PressedState.Border1}" BorderThickness="1,0,1,0" Opacity="0" />
            <ContentPresenter x:Name="Content" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Opacity" TargetName="HoverState" Value="1" />
              <Setter Property="Opacity" TargetName="PressedState" Value="0" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Opacity" TargetName="HoverState" Value="0" />
              <Setter Property="Opacity" TargetName="PressedState" Value="1" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" TargetName="Content" Value="0.35" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=AddButtonStyle}" TargetType="{x:Type Button}">
    <Setter Property="Width" Value="32" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid x:Name="Root">
            <Border x:Name="DefaultState" Background="{StaticResource AddButton.DefaultState.Border2}" BorderBrush="{StaticResource AddButton.DefaultState.Border1}" BorderThickness="0,1,1,0" Padding="0,1,1,0" />
            <Border x:Name="HoverState" Background="{StaticResource AddButton.DefaultState.Border2}" BorderBrush="{StaticResource AddButton.DefaultState.Border1}" BorderThickness="0,1,1,0" Opacity="0" Padding="0,1,1,0" />
            <Border x:Name="PressedState" Background="{StaticResource AddButton.DefaultState.Border2}" BorderBrush="{StaticResource AddButton.DefaultState.Border1}" BorderThickness="0,1,1,0" Opacity="0" Padding="0,1,1,0" />
            <Grid Margin="0,1,0,0">
              <Path Data="F1 M 119,100L 122,100L 122,97L 124,97L 124,100L 127,100L 127,102L 124,102L 124,105L 122,105L 122,102L 119,102L 119,100 Z " Fill="#3FFFFFFF" Height="8" Margin="0,1,0,-1" Stretch="Fill" Width="8" />
              <Path Data="F1 M 119,100L 122,100L 122,97L 124,97L 124,100L 127,100L 127,102L 124,102L 124,105L 122,105L 122,102L 119,102L 119,100 Z " Fill="{StaticResource GlyphBrush}" Height="8" Stretch="Fill" Width="8" />
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Opacity" TargetName="DefaultState" Value="0" />
              <Setter Property="Opacity" TargetName="HoverState" Value="1" />
              <Setter Property="Opacity" TargetName="PressedState" Value="0" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Opacity" TargetName="DefaultState" Value="0" />
              <Setter Property="Opacity" TargetName="HoverState" Value="0" />
              <Setter Property="Opacity" TargetName="PressedState" Value="1" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" TargetName="Root" Value="0.5" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
              <Setter Property="MinHeight" TargetName="Root" Value="43" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Width" Value="44" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <!-- Spreadsheet -->
  <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=TabSelectorPanelStyle}" TargetType="{x:Type Border}">
    <Setter Property="Background" Value="{StaticResource TabPanel.Background}" />
    <Setter Property="BorderBrush" Value="{StaticResource TabPanel.BorderBrush}" />
    <Setter Property="BorderThickness" Value="0,1,0,0" />
  </Style>
  <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=BottomRightCornerStyle}" TargetType="{x:Type Border}">
    <Setter Property="Background" Value="{StaticResource ScrollBar.Corner.Background}" />
  </Style>
  <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=WorksheetSelectionControlStyle}" TargetType="{x:Type dxspsi:WorksheetSelectionControl}">
    <Setter Property="AutoFilterBackgroundBrush" Value="{DynamicResource {themes:SpreadsheetThemeKey ResourceKey=AutoFilterBackgroundBrush}}" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="SelectionBorderBrush" Value="{StaticResource Selection.BorderBrush}" />
    <Setter Property="SelectionBrush" Value="{StaticResource Selection.Background}" />
  </Style>
  <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=TopLeftCornerStyle}" TargetType="{x:Type Border}">
    <Setter Property="Background" Value="{StaticResource Header.Background}" />
    <Setter Property="BorderBrush" Value="{StaticResource Header.BorderBrush}" />
    <Setter Property="BorderThickness" Value="0,0,1,1" />
  </Style>
  <Style x:Key="{themes:SpreadsheetThemeKey ResourceKey=ResizeThumbStyle}" TargetType="{x:Type Thumb}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Grid x:Name="Root" Background="#FFD3D3D3">
            <Border Background="{StaticResource ResizeThumb.Background}" BorderBrush="{StaticResource TabPanel.BorderBrush}" BorderThickness="0,1,1,0" />
            <Grid Cursor="SizeWE" Height="15" Width="9">
              <Path x:Name="Path" Data="F1 M 0,0L 1,0L 1,12L 0,12L 0,0 Z M 2,9.53674e-007L 3,9.53674e-007L 3,12L 2,12L 2,9.53674e-007 Z " Fill="{StaticResource ResizeThumb.GlyphBrush}" Height="12" Margin="3,0,3,0" Stretch="Fill" Width="3" />
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Fill" TargetName="Path" Value="{StaticResource ResizeThumb.GlyphBrush.IsMouseOver}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" TargetName="Root" Value="0.5" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource {x:Type TextBox}}" TargetType="{x:Type dxspsi:XpfCellInplaceEditor}">
    <Setter Property="Background" Value="#FFADD8E6" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxspsi:XpfCellInplaceEditor}">
          <Grid x:Name="RootElement" Background="{TemplateBinding Background}" Margin="{TemplateBinding Margin}">
            <Grid>
              <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                <ScrollViewer x:Name="PART_ContentHost" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" IsTabStop="False" Padding="{TemplateBinding Padding}" VerticalContentAlignment="Center" />
              </Border>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Visibility" Value="Hidden" />
  </Style>
  <!-- ReferenceEditor -->
  <DataTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=ReferenceEditCollapseButtonTemplate}">
    <Image x:Name="collapse" dxb:ImageColorizer.Color="{StaticResource GlyphColor}" dxb:ImageColorizer.IsEnabled="True" HorizontalAlignment="Center" Source="/DevExpress.Xpf.Spreadsheet.v24.1;component/Images/ReferenceEdit_Collapse_16x16.png" Stretch="None" VerticalAlignment="Center" />
  </DataTemplate>
  <DataTemplate x:Key="{themes:SpreadsheetThemeKey ResourceKey=ReferenceEditExpandButtonTemplate}">
    <Image x:Name="collapse" dxb:ImageColorizer.Color="{StaticResource GlyphColor}" dxb:ImageColorizer.IsEnabled="True" HorizontalAlignment="Center" Source="/DevExpress.Xpf.Spreadsheet.v24.1;component/Images/ReferenceEdit_Expand_16x16.png" Stretch="None" VerticalAlignment="Center" />
  </DataTemplate>
</ResourceDictionary>