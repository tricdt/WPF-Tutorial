<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2013DarkGray.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/Office2013DarkGray/Brushes.xaml" />
    <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2013DarkGray.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/Generic/PopupListBox.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <dx:BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
  <ControlTemplate x:Key="{dxet:EditorListBoxThemeKey ResourceKey=ItemTemplate}" TargetType="{x:Type dxe:ListBoxEditItem}">
    <Grid x:Name="Root" MinHeight="20">
      <Rectangle x:Name="FocusVisual" Opacity="0" Stroke="#FF333333" StrokeDashArray="1 2" StrokeThickness="1" />
      <Border x:Name="InactiveSelectedState" Background="#FFABABAB" Opacity="0" />
      <Border x:Name="SelectedState" Background="#5F2592DA" Opacity="0" />
      <Border x:Name="HoverState" Background="#3F009AFF" Opacity="0" Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).AllowItemHighlighting, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
      <Border x:Name="FocusedState" Background="#5F2592DA" Opacity="0" />
      <DockPanel HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" LastChildFill="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
        <dxei:ImagePresenter DockPanel.Dock="Left" Padding="{StaticResource {dxet:ComboBoxEditThemeKey ResourceKey=SelectedItemImagePadding}}" />
        <dx:ContentContainer x:Name="content" Margin="{StaticResource {dxet:ComboBoxEditThemeKey ResourceKey=SelectedItemContentPadding}}">
          <ContentPresenter x:Name="contentPresenter" Height="Auto" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Width="Auto" />
        </dx:ContentContainer>
      </DockPanel>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsKeyboardFocused" Value="True">
        <Setter Property="Opacity" TargetName="SelectedState" Value="0" />
        <Setter Property="Opacity" TargetName="HoverState" Value="0" />
        <Setter Property="Opacity" TargetName="FocusVisual" Value="1" />
      </Trigger>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Opacity" TargetName="SelectedState" Value="0" />
        <Setter Property="Opacity" TargetName="HoverState" Value="1" />
        <Setter Property="Opacity" TargetName="FocusVisual" Value="0" />
      </Trigger>
      <Trigger Property="IsSelected" Value="True">
        <Setter Property="Opacity" TargetName="SelectedState" Value="1" />
        <Setter Property="Opacity" TargetName="HoverState" Value="0" />
        <Setter Property="Opacity" TargetName="FocusVisual" Value="0" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsSelected" Value="True" />
          <Condition Property="IsFocused" Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="Opacity" TargetName="SelectedState" Value="0.6" />
        <Setter Property="Opacity" TargetName="HoverState" Value="0" />
        <Setter Property="Opacity" TargetName="FocusVisual" Value="0" />
      </MultiTrigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Opacity" TargetName="content" Value="0.35" />
      </Trigger>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Margin" TargetName="content" Value="12" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Thickness x:Key="{dxet:EditorListBoxThemeKey ResourceKey=CheckBoxItemPadding}">3,0,0,0</Thickness>
</ResourceDictionary>