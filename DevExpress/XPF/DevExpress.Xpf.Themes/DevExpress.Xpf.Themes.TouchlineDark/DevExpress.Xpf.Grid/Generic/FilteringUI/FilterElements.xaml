<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxfui="http://schemas.devexpress.com/winfx/2008/xaml/core/filteringui" xmlns:dxfuit="http://schemas.devexpress.com/winfx/2008/xaml/core/filteringui/themekeys" xmlns:dxfui_local="http://schemas.devexpress.com/winfx/2008/xaml/core/filteringui" xmlns:dxgfui_local="clr-namespace:DevExpress.Xpf.Grid.Core.FilteringUI.Native;assembly=DevExpress.Xpf.Grid.v24.1.Core" xmlns:dxfui_local_native="http://schemas.devexpress.com/winfx/2008/xaml/core/filteringui/internal" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
  <ResourceDictionary.MergedDictionaries>
    <dxdst:ResourceDictionaryEx Source="FilterEditor.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <dxmvvm:ObjectToObjectConverter x:Key="TopBottomValueTypeConverter">
    <dxmvvm:MapItem Source="Items" Target="{dxe:EditorStringId TopBottomValueTypeItems}" />
    <dxmvvm:MapItem Source="Percent" Target="{dxe:EditorStringId TopBottomValueTypePercent}" />
  </dxmvvm:ObjectToObjectConverter>
  <dxmvvm:ObjectToObjectConverter x:Key="FilterValuesSortModesConverter" DefaultSource="{x:Null}">
    <dxmvvm:MapItem Target="{dxe:EditorStringId FilterValuesSortModeNoSort}">
      <dxmvvm:MapItem.Source>
        <dxfui_local:FilterValuesSortMode>NoSort</dxfui_local:FilterValuesSortMode>
      </dxmvvm:MapItem.Source>
    </dxmvvm:MapItem>
    <dxmvvm:MapItem Target="{dxe:EditorStringId FilterValuesSortModeAvailableFirst}">
      <dxmvvm:MapItem.Source>
        <dxfui_local:FilterValuesSortMode>AvailableFirst</dxfui_local:FilterValuesSortMode>
      </dxmvvm:MapItem.Source>
    </dxmvvm:MapItem>
    <dxmvvm:MapItem Target="{dxe:EditorStringId FilterValuesSortModePopularFirst}">
      <dxmvvm:MapItem.Source>
        <dxfui_local:FilterValuesSortMode>PopularFirst</dxfui_local:FilterValuesSortMode>
      </dxmvvm:MapItem.Source>
    </dxmvvm:MapItem>
  </dxmvvm:ObjectToObjectConverter>
  <Style x:Key="CountTextBlockStyle" TargetType="{x:Type TextBlock}">
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Right" />
    <Setter Property="Opacity" Value="0.6" />
    <Setter Property="Margin" Value="2,0,0,0" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.FilteringUI.ValueCountContentControl}" TargetType="{x:Type dxfui_local:ValueCountContentControl}">
    <Setter Property="Focusable" Value="False" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxfui_local:ValueCountContentControl}">
          <Grid HorizontalAlignment="Left">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <ContentPresenter />
            <TextBlock x:Name="PART_Count" Grid.Column="1" Text="{Binding Count, StringFormat=({0}), RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource CountTextBlockStyle}">
              <TextBlock.Visibility>
                <MultiBinding Converter="{dxfui_local_native:ValueCountControlVisibilityConverter}">
                  <Binding Path="ShowCount" RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Path="Count" RelativeSource="{RelativeSource TemplatedParent}" />
                </MultiBinding>
              </TextBlock.Visibility>
            </TextBlock>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <DataTemplate x:Key="FilterValueContainerTemplate">
    <dxfui_local:ValueCountContentControl Count="{Binding Count}">
      <dxfui_local:ValueEditorContainer GetDisplayText="{Binding GetDisplayText}" EditSettingsLazy="{Binding EditSettingsLazy}" Value="{Binding Value}" />
    </dxfui_local:ValueCountContentControl>
  </DataTemplate>
  <ControlTemplate x:Key="FilterValueContainerTopAreaTemplate">
    <Border DataContext="{Binding FilterModel, RelativeSource={RelativeSource AncestorType={x:Type dxfui_local:FilterValueEditor}}}" Background="{DynamicResource ResourceKey={dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=FilterValueContainerTopAreaBackground}}" BorderBrush="{DynamicResource ResourceKey={dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=FilterValueContainerTopAreaBorderColor}}" BorderThickness="0,0,0,1" Visibility="{DXBinding Expr='FilterValuesSortModes.Count gt 1 and FilterValues.Count gt 0 ? `Visible` : `Collapsed`'}">
      <dxe:HyperlinkEdit x:Name="PART_FilterValuesSortMode" Focusable="False" Margin="{DynamicResource ResourceKey={dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=FilterValueContainerTopAreaMargin}}" Text="{Binding Path=FilterValuesSortMode, Mode=OneWay, Converter={StaticResource ResourceKey=FilterValuesSortModesConverter}}" ToolTipService.IsEnabled="False">
        <dxmvvm:Interaction.Behaviors>
          <dxfui_local_native:HyperlinkToogleBehavior SelectedItem="{Binding FilterValuesSortMode, Mode=TwoWay }" ItemsSource="{Binding FilterValuesSortModes, Mode=OneWay }" />
        </dxmvvm:Interaction.Behaviors>
      </dxe:HyperlinkEdit>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter TargetName="PART_FilterValuesSortMode" Property="Margin" Value="{DynamicResource ResourceKey={dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=FilterValueContainerTopAreaMarginTouch}}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="DateCalendarImageStyle" TargetType="{x:Type dx:DXImage}">
    <Setter Property="Margin" Value="2,1,1,0" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="Width" Value="16" />
    <Setter Property="Height" Value="16" />
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Margin" Value="16,1,17,0" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <DataTemplate x:Key="DateCalendarButtonTemplate">
    <dx:DXImage Source="{dx:SvgImageSource Uri='/DevExpress.Xpf.Grid.v24.1;component/Images/CalendarDate.svg'}" Style="{StaticResource DateCalendarImageStyle}" />
  </DataTemplate>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.FilteringUI.FilterValueEditor}" TargetType="{x:Type dxfui_local:FilterValueEditor}">
    <Setter Property="UniqueValueTemplate" Value="{StaticResource FilterValueContainerTemplate}" />
    <Setter Property="PopupTopAreaTemplate" Value="{StaticResource FilterValueContainerTopAreaTemplate}" />
    <Setter Property="DateCalendarButtonTemplate" Value="{StaticResource DateCalendarButtonTemplate}" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.FilteringUI.LoadingIndicatorControl}" TargetType="{x:Type dxfui_local:LoadingIndicatorControl}">
    <Setter Property="IsHitTestVisible" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="dxfui_local:LoadingIndicatorControl">
          <Grid>
            <ContentPresenter ContentSource="Content" />
            <dxfui_local:FilteringUIWaitIndicator Visibility="{TemplateBinding IsLoading, Converter={dx:BooleanToVisibilityConverter}}" VerticalAlignment="Center" HorizontalAlignment="Center" Width="32" Height="32" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="filterElementStyle" TargetType="dxfui_local:FilterElement">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="dxfui_local:FilterElement">
          <dxfui_local:FilterElementContentPresenter ContentSource="FilterModel" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Focusable" Value="False" />
    <Setter Property="IsEnabled" Value="{Binding Path=FilterModel.CanBuildFilter, RelativeSource={RelativeSource Mode=Self}}" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.FilteringUI.CheckBoxFilterElement}" TargetType="dxfui_local:CheckBoxFilterElement" BasedOn="{StaticResource filterElementStyle}">
    <Setter Property="FilterModelTemplate">
      <Setter.Value>
        <DataTemplate DataType="dxfui:CheckBoxFilterModel">
          <CheckBox IsThreeState="True" IsChecked="{Binding Value}" Content="{Binding FieldDisplayName}" />
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.FilteringUI.RadioListFilterElement}" TargetType="dxfui_local:RadioListFilterElement" BasedOn="{StaticResource filterElementStyle}">
    <Setter Property="FilterModelTemplate">
      <Setter.Value>
        <DataTemplate>
          <dxfui_local:LoadingIndicatorControl IsLoading="{Binding IsLoading}">
            <dxe:ListBoxEdit AllowLiveDataShaping="False" ItemsSource="{Binding FilterValues}" EditValue="{Binding SelectedFilterValue}" ItemTemplate="{StaticResource FilterValueContainerTemplate}">
              <dxe:ListBoxEdit.StyleSettings>
                <dxe:RadioListBoxEditStyleSettings ShowEmptyItem="True" EmptyItemText="{DXBinding '$dxe:EditorLocalizer.GetString($dxe:EditorStringId.FilterElementRadioAllItem)'}" />
              </dxe:ListBoxEdit.StyleSettings>
            </dxe:ListBoxEdit>
          </dxfui_local:LoadingIndicatorControl>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.FilteringUI.CheckedListFilterElement}" TargetType="dxfui_local:CheckedListFilterElement" BasedOn="{StaticResource filterElementStyle}">
    <Setter Property="FilterModelTemplate">
      <Setter.Value>
        <DataTemplate>
          <dxfui_local:LoadingIndicatorControl IsLoading="{Binding IsLoading}">
            <dxe:ListBoxEdit AllowLiveDataShaping="False" ItemsSource="{Binding FilterValues}" EditValue="{Binding SelectedFilterValues}" ItemTemplate="{StaticResource FilterValueContainerTemplate}">
              <dxe:ListBoxEdit.StyleSettings>
                <dxe:CheckedListBoxEditStyleSettings />
              </dxe:ListBoxEdit.StyleSettings>
            </dxe:ListBoxEdit>
          </dxfui_local:LoadingIndicatorControl>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!--#region MultiFilterElement-->
  <DataTemplate x:Key="MultiFilterConstantTemplate" />
  <DataTemplate x:Key="MultiFilterBinaryTemplate">
    <dxfui_local:FilterValueEditor VerticalAlignment="Top" FilterModel="{Binding}" Value="{Binding ValueItem.Value, Mode=TwoWay}" EditSettings="{Binding ValueItem.EditSettings}" NullText="{dxe:EditorStringId FilterRulesEmptyValueText}" />
  </DataTemplate>
  <DataTemplate x:Key="MultiFilterTernaryTemplate">
    <Grid VerticalAlignment="Top">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="4" />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="2*" />
      </Grid.ColumnDefinitions>
      <TextBlock Text="{dxe:EditorStringId FilterElementClauseFrom}" VerticalAlignment="Center" />
      <dxfui_local:FilterValueEditor Grid.Column="1" FilterModel="{Binding}" Value="{Binding LeftValueItem.Value, Mode=TwoWay}" EditSettings="{Binding LeftValueItem.EditSettings}" NullText="{dxe:EditorStringId FilterRulesEmptyValueText}" />
      <TextBlock Text="{dxe:EditorStringId FilterElementClauseTo}" Grid.Row="2" VerticalAlignment="Center" />
      <dxfui_local:FilterValueEditor Grid.Row="2" Grid.Column="1" FilterModel="{Binding}" Value="{Binding RightValueItem.Value, Mode=TwoWay}" EditSettings="{Binding RightValueItem.EditSettings}" NullText="{dxe:EditorStringId FilterRulesEmptyValueText}" />
    </Grid>
  </DataTemplate>
  <DataTemplate x:Key="MultiFilterFormatConditionsTemplate">
    <dxfui_local:FormatConditionFilterElement VerticalAlignment="Top" dxfui_local_native:FilterElementHelper.FilterModel="{Binding}" />
  </DataTemplate>
  <DataTemplate x:Key="MultiFilterPredefinedTemplate">
    <dxfui_local:PredefinedFiltersElement VerticalAlignment="Top" dxfui_local_native:FilterElementHelper.FilterModel="{Binding}" />
  </DataTemplate>
  <DataTemplate x:Key="MultiFilterDateTimeOperatorsTemplate">
    <dxfui_local:DatePeriodsFilterElement dxfui_local_native:FilterElementHelper.FilterModel="{Binding}" />
  </DataTemplate>
  <DataTemplate x:Key="MultiFilterPredefinedFormatConditionTemplate">
    <DataTemplate.Resources>
      <Style x:Key="baseEditorStyle" TargetType="{x:Type dxe:SpinEdit}">
        <Setter Property="MaskType" Value="Numeric" />
        <Setter Property="MaskUseAsDisplayFormat" Value="True" />
        <Setter Property="EditValueType" Value="{x:Type sys:Double}" />
        <Setter Property="AllowRoundOutOfRangeValue" Value="True" />
      </Style>
      <Style x:Key="itemsStyle" TargetType="{x:Type dxe:SpinEdit}" BasedOn="{StaticResource baseEditorStyle}">
        <Setter Property="Mask" Value="D" />
        <Setter Property="MinValue" Value="1" />
        <Setter Property="MaxValue" Value="2147483647" />
        <!--{x:Static sys:Int32.MaxValue}-->
      </Style>
      <Style x:Key="percentStyle" TargetType="{x:Type dxe:SpinEdit}" BasedOn="{StaticResource baseEditorStyle}">
        <Setter Property="MaxValue" Value="100" />
        <Setter Property="MinValue" Value="0" />
      </Style>
    </DataTemplate.Resources>
    <Grid VerticalAlignment="Top">
      <Grid.ColumnDefinitions>
        <ColumnDefinition />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>
      <dxe:SpinEdit x:Name="PART_Value" EditValue="{Binding Value, UpdateSourceTrigger=PropertyChanged, Converter={dxmvvm:TypeCastConverter}}">
        <dxe:SpinEdit.Style>
          <Binding Path="ValueType">
            <Binding.Converter>
              <dxmvvm:ObjectToObjectConverter DefaultSource="Items" DefaultTarget="{StaticResource itemsStyle}">
                <dxmvvm:MapItem Source="Percent" Target="{StaticResource percentStyle}" />
              </dxmvvm:ObjectToObjectConverter>
            </Binding.Converter>
          </Binding>
        </dxe:SpinEdit.Style>
      </dxe:SpinEdit>
      <dxe:ComboBoxEdit Grid.Column="1" x:Name="PART_ValueType" Margin="4,0,0,0" MinWidth="80" ApplyItemTemplateToSelectedItem="True" IsTextEditable="False" EditValue="{Binding ValueType, UpdateSourceTrigger=PropertyChanged}">
        <dxe:ComboBoxEdit.ItemTemplate>
          <DataTemplate>
            <TextBlock Text="{Binding Converter={StaticResource TopBottomValueTypeConverter}}" />
          </DataTemplate>
        </dxe:ComboBoxEdit.ItemTemplate>
        <dxe:ComboBoxEdit.ItemsSource>
          <x:Array Type="{x:Type dxfui:TopBottomValueType}">
            <dxfui_local:TopBottomValueType>Items</dxfui_local:TopBottomValueType>
            <dxfui_local:TopBottomValueType>Percent</dxfui_local:TopBottomValueType>
          </x:Array>
        </dxe:ComboBoxEdit.ItemsSource>
      </dxe:ComboBoxEdit>
    </Grid>
  </DataTemplate>
  <dxfui_local:OperationModelTemplateSelector x:Key="{dxfuit:FilteringUIThemeKey ResourceKey=MultiFilterElementOperatorTemplateSelector}" ConstantTemplate="{StaticResource MultiFilterConstantTemplate}" BinaryTemplate="{StaticResource MultiFilterBinaryTemplate}" TernaryTemplate="{StaticResource MultiFilterTernaryTemplate}" FormatConditionsTemplate="{StaticResource MultiFilterFormatConditionsTemplate}" PredefinedTemplate="{StaticResource MultiFilterPredefinedTemplate}" DateTimeOperatorsTemplate="{StaticResource MultiFilterDateTimeOperatorsTemplate}" PredefinedFormatConditionTemplate="{StaticResource MultiFilterPredefinedFormatConditionTemplate}" />
  <DataTemplate x:Key="{dxfuit:FilteringUIThemeKey ResourceKey=MultiFilterElementTemplate}">
    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="*" />
      </Grid.RowDefinitions>
      <dxe:ComboBoxEdit x:Name="operatorSelector" AutomationProperties.Name="{dxg:GridControlStringId ExcelColumnFilterPopupConditionPeer}" ItemsSource="{Binding Items}" EditValue="{Binding SelectedItem, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,12" DisplayMember="DisplayName" IsTextEditable="False">
        <dxmvvm:Interaction.Behaviors>
          <dxgfui_local:FilterRulesComboBoxChangeRuleBehavior />
        </dxmvvm:Interaction.Behaviors>
      </dxe:ComboBoxEdit>
      <ContentPresenter Grid.Row="1" x:Name="modelPresenter" Content="{Binding Model}" ContentTemplateSelector="{Binding DataContext.ModelTemplateSelector, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
    </Grid>
  </DataTemplate>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.FilteringUI.MultiFilterElement}" TargetType="{x:Type dxfui_local:MultiFilterElement}" BasedOn="{StaticResource filterElementStyle}">
    <Setter Property="FilterModelTemplate" Value="{DynamicResource {dxfuit:FilteringUIThemeKey ResourceKey=MultiFilterElementTemplate}}" />
  </Style>
  <!--#endregion-->
  <!--#region ExcelStyleFilterElement-->
  <ControlTemplate x:Key="{dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=HeaderSeparatorTemplate}">
    <Rectangle x:Name="PART_Separator" Fill="{DynamicResource {dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=HeaderPanelSeparatorColor}}" HorizontalAlignment="Right" VerticalAlignment="Center" Height="14" Width="1" />
  </ControlTemplate>
  <DataTemplate x:Key="{dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=HeaderBackgroundTemplate}">
    <Control Template="{DynamicResource {dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=HeaderSeparatorTemplate}}" Visibility="{DXBinding '(@a($dx:DXTabItem).DataContext is $dxfui:MultiFilterModel) ? `Visible` : `Collapsed`'}" Focusable="False" />
  </DataTemplate>
  <DataTemplate x:Key="{dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=FocusedHeaderBackgroundTemplate}">
    <Grid>
      <Path Fill="{DynamicResource ResourceKey={dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=HeaderPanelSelectionMarkerBackground}}" Stroke="{DynamicResource ResourceKey={dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=HeaderPanelBottomBorderColor}}" Width="9" Height="6" VerticalAlignment="Bottom" HorizontalAlignment="Center" StrokeThickness="1" Data="M0,1 L1,0 2,1" Stretch="Fill" />
      <Path Fill="{DynamicResource ResourceKey={dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=HeaderPanelSelectionMarkerBackground}}" Stroke="{DynamicResource ResourceKey={dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=HeaderPanelSelectionMarkerBackground}}" Width="7" Height="1" VerticalAlignment="Bottom" HorizontalAlignment="Center" StrokeThickness="1" Data="M0,0 L1,0" Stretch="Fill" />
      <Control Template="{DynamicResource {dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=HeaderSeparatorTemplate}}" Visibility="{DXBinding '(@a($dx:DXTabItem).DataContext is $dxfui:MultiFilterModel) ? `Visible` : `Collapsed`'}" Focusable="False" />
    </Grid>
  </DataTemplate>
  <Style x:Key="{dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=HeaderStyle}" TargetType="dx:DXTabItem">
    <Setter Property="NormalBackgroundTemplate" Value="{DynamicResource {dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=HeaderBackgroundTemplate}}" />
    <Setter Property="HoverBackgroundTemplate" Value="{DynamicResource {dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=HeaderBackgroundTemplate}}" />
    <Setter Property="FocusedBackgroundTemplate" Value="{DynamicResource {dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=FocusedHeaderBackgroundTemplate}}" />
    <Setter Property="SelectedBackgroundTemplate" Value="{DynamicResource {dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=FocusedHeaderBackgroundTemplate}}" />
    <Setter Property="AutomationProperties.AutomationId" Value="{DXBinding Expr='@c.GetType().Name'}" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="Margin" Value="0,0,0,1" />
    <Setter Property="Padding" Value="{DynamicResource {dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=HeaderPadding}}" />
    <Setter Property="Focusable" Value="True" />
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Padding" Value="12,8,12,9" />
      </Trigger>
      <DataTrigger Binding="{DXBinding Expr='@c is $dxfui:CheckedTreeListFilterModel'}" Value="true">
        <Setter Property="AutomationProperties.Name" Value="{dxe:EditorStringId FilterElementFilterValues}" />
      </DataTrigger>
      <DataTrigger Binding="{DXBinding Expr='@c is $dxfui:CheckedTreeListFilterModel'}" Value="false">
        <Setter Property="AutomationProperties.Name" Value="{dxe:EditorStringId FilterElementFilterRules}" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <DataTemplate x:Key="{dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=FilterRulesTemplate}">
    <dxfui_local:MultiFilterElement dxfui_local_native:FilterElementHelper.FilterModel="{Binding}" ShowCounts="{Binding Path=(dxfui_local_native:FilterElementHelper.FilterElement).ShowCounts, RelativeSource={RelativeSource Self}}" ShowAllLookUpFilterValues="{Binding Path=(dxfui_local_native:FilterElementHelper.FilterElement).ShowAllLookUpFilterValues, RelativeSource={RelativeSource Self}}" />
  </DataTemplate>
  <DataTemplate x:Key="{dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=FilterValuesTemplate}">
    <dxfui_local:CheckedTreeListFilterElement dxfui_local_native:FilterElementHelper.FilterModel="{Binding}" ShowCounts="{Binding Path=(dxfui_local_native:FilterElementHelper.FilterElement).ShowCounts, RelativeSource={RelativeSource Self}}" ShowAllLookUpFilterValues="{Binding Path=(dxfui_local_native:FilterElementHelper.FilterElement).ShowAllLookUpFilterValues, RelativeSource={RelativeSource Self}}" />
  </DataTemplate>
  <DataTemplate x:Key="{dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=HeaderTemplate}">
    <TextBlock Text="{Binding}" />
  </DataTemplate>
  <Style x:Key="tabControlStyle" TargetType="dx:DXTabControl">
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Padding" Value="11,12,11,11" />
    <Setter Property="TabContentCacheMode" Value="CacheAllTabs" />
    <Setter Property="ItemContainerStyle" Value="{DynamicResource {dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=HeaderStyle}}" />
    <Setter Property="BackgroundTemplate">
      <Setter.Value>
        <DataTemplate>
          <Border BorderThickness="0,1,0,0" BorderBrush="{DynamicResource {dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=BorderBrush}}" Background="{DynamicResource {dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=Background}}" />
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Style.Resources>
      <Style x:Key="{dxt:DXTabControlThemeKey ResourceKey=PanelContainerStyle}" TargetType="{x:Type dxcn:TabPanelContainer}">
        <Setter Property="NormalMargin" Value="0,0,0,-2" />
        <Setter Property="Background" Value="Transparent" />
      </Style>
    </Style.Resources>
  </Style>
  <DataTemplate x:Key="{dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=Template}">
    <Grid Background="{DynamicResource {dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=HeaderPanelBackground}}">
      <dx:DXTabControl x:Name="tabControl" dxfui_local:FilterElement.Context="{x:Null}" ItemsSource="{Binding FilterModels}" ItemTemplateSelector="{Binding Path=(dxfui_local_native:FilterElementHelper.FilterElement).ActualTemplateSelector, RelativeSource={RelativeSource Mode=Self}}" Style="{StaticResource tabControlStyle}">
        <dxmvvm:Interaction.Behaviors>
          <dxfui_local_native:ExcelStyleTabControlBehavior />
        </dxmvvm:Interaction.Behaviors>
        <dx:DXTabControl.View>
          <dx:TabControlScrollView ScrollButtonShowMode="Never">
            <dx:TabControlScrollView.HeaderLocation>
              <Binding Path="Owner.DataContext.ActualAllowedFilterTypes" RelativeSource="{RelativeSource Mode=Self}">
                <Binding.Converter>
                  <dxmvvm:ObjectToObjectConverter DefaultTarget="None">
                    <dxmvvm:MapItem Source="All" Target="Top" />
                    <dxmvvm:MapItem Source="None" Target="Top" />
                  </dxmvvm:ObjectToObjectConverter>
                </Binding.Converter>
              </Binding>
            </dx:TabControlScrollView.HeaderLocation>
          </dx:TabControlScrollView>
        </dx:DXTabControl.View>
        <dx:DXTabControl.ItemHeaderTemplate>
          <DataTemplate>
            <ContentPresenter x:Name="presenter" ContentTemplate="{DynamicResource {dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=HeaderTemplate}}" />
            <DataTemplate.Triggers>
              <DataTrigger Binding="{DXBinding Expr='@c is $dxfui:CheckedTreeListFilterModel'}" Value="true">
                <Setter TargetName="presenter" Property="Content" Value="{dxe:EditorStringId FilterElementFilterValues}" />
              </DataTrigger>
              <DataTrigger Binding="{DXBinding Expr='@c is $dxfui:CheckedTreeListFilterModel'}" Value="false">
                <Setter TargetName="presenter" Property="Content" Value="{dxe:EditorStringId FilterElementFilterRules}" />
              </DataTrigger>
            </DataTemplate.Triggers>
          </DataTemplate>
        </dx:DXTabControl.ItemHeaderTemplate>
      </dx:DXTabControl>
    </Grid>
  </DataTemplate>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.FilteringUI.ExcelStyleFilterElement}" TargetType="{x:Type dxfui_local:ExcelStyleFilterElement}" BasedOn="{StaticResource filterElementStyle}">
    <Setter Property="dxfui_local_native:FilterElementHelper.FilterElement" Value="{Binding RelativeSource={RelativeSource Self}}" />
    <Setter Property="FilterModelTemplate" Value="{DynamicResource {dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=Template}}" />
    <Setter Property="FilterRulesTemplate" Value="{DynamicResource {dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=FilterRulesTemplate}}" />
    <Setter Property="FilterValuesTemplate" Value="{DynamicResource {dxfuit:ExcelStyleFilterElementThemeKey ResourceKey=FilterValuesTemplate}}" />
  </Style>
  <!--#endregion-->
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.FilteringUI.DatePeriodsFilterElement}" TargetType="{x:Type dxfui_local:DatePeriodsFilterElement}" BasedOn="{StaticResource filterElementStyle}">
    <Setter Property="Height" Value="{DynamicResource {dxfuit:FilteringUIThemeKey ResourceKey=DatePeriodsFilterElementHeight}}" />
    <Setter Property="FilterModelTemplate">
      <Setter.Value>
        <DataTemplate>
          <dxe:ListBoxEdit ShowBorder="False" ScrollViewer.VerticalScrollBarVisibility="Disabled" ScrollViewer.HorizontalScrollBarVisibility="Disabled" AllowUpdateTwoWayBoundPropertiesOnSynchronization="False" ItemsSource="{Binding PredefinedFilters}" SelectionMode="Multiple" EditValue="{Binding SelectedPredefinedFilters, Mode=TwoWay}" DisplayMember="DisplayText">
            <dxe:ListBoxEdit.ItemsPanel>
              <ItemsPanelTemplate>
                <WrapPanel Orientation="Vertical" />
              </ItemsPanelTemplate>
            </dxe:ListBoxEdit.ItemsPanel>
            <dxe:ListBoxEdit.StyleSettings>
              <dxe:CheckedListBoxEditStyleSettings />
            </dxe:ListBoxEdit.StyleSettings>
          </dxe:ListBoxEdit>
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Height" Value="{DynamicResource {dxfuit:FilteringUIThemeKey ResourceKey=DatePeriodsFilterElementHeightTouch}}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.FilteringUI.CalendarFilterElement}" TargetType="{x:Type dxfui_local:CalendarFilterElement}" BasedOn="{StaticResource filterElementStyle}">
    <Setter Property="FilterModelTemplate">
      <Setter.Value>
        <DataTemplate>
          <dxe:DateNavigator RowCount="1" ColumnCount="1" IsMultiSelect="True" ShowTodayButton="False" AllowMultipleRanges="{Binding AllowMultipleDateRanges}" SelectedDates="{Binding SelectedDates, Mode=TwoWay}" />
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.FilteringUI.PredefinedFiltersElement}" TargetType="{x:Type dxfui_local:PredefinedFiltersElement}" BasedOn="{StaticResource filterElementStyle}">
    <Setter Property="FilterModelTemplate">
      <Setter.Value>
        <DataTemplate>
          <dxe:ListBoxEdit AllowLiveDataShaping="False" ItemsSource="{Binding Filters}" EditValue="{Binding SelectedFilters}">
            <dxe:ListBoxEdit.StyleSettings>
              <dxe:CheckedListBoxEditStyleSettings ShowSelectAllItem="False" />
            </dxe:ListBoxEdit.StyleSettings>
            <dxe:ListBoxEdit.ItemTemplate>
              <DataTemplate>
                <dxfui_local:ValueCountContentControl Count="{Binding Count}">
                  <TextBlock Text="{Binding Value.Name}" />
                </dxfui_local:ValueCountContentControl>
              </DataTemplate>
            </dxe:ListBoxEdit.ItemTemplate>
          </dxe:ListBoxEdit>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.FilteringUI.FormatConditionFilterElement}" TargetType="{x:Type dxfui_local:FormatConditionFilterElement}" BasedOn="{StaticResource filterElementStyle}">
    <Setter Property="FilterModelTemplate">
      <Setter.Value>
        <DataTemplate>
          <dxe:ListBoxEdit ShowBorder="False" ItemsSource="{Binding Filters}" EditValue="{Binding SelectedFilters}">
            <dxe:ListBoxEdit.StyleSettings>
              <dxe:CheckedListBoxEditStyleSettings ShowSelectAllItem="False" />
            </dxe:ListBoxEdit.StyleSettings>
            <dxe:ListBoxEdit.ItemTemplate>
              <DataTemplate>
                <StackPanel Orientation="Horizontal" Margin="0,1">
                  <dxg:FormatPreviewControl Content="{Binding Value.Format}" PreviewString="Aa" />
                  <dxfui_local:ValueCountContentControl Count="{Binding Count}" VerticalAlignment="Center" Margin="2,0,0,0">
                    <TextBlock Text="{Binding Value.DisplayExpression}" />
                  </dxfui_local:ValueCountContentControl>
                </StackPanel>
              </DataTemplate>
            </dxe:ListBoxEdit.ItemTemplate>
          </dxe:ListBoxEdit>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.FilteringUI.RangeFilterElement}" TargetType="{x:Type dxfui_local:RangeFilterElement}" BasedOn="{StaticResource filterElementStyle}">
    <Setter Property="FilterModelTemplate">
      <Setter.Value>
        <DataTemplate>
          <StackPanel>
            <DockPanel Margin="0,0,0,8" LastChildFill="False">
              <dxe:SpinEdit x:Name="PART_SpinEditFrom" DockPanel.Dock="Left" ValidateOnTextInput="False" EditValue="{Binding From, UpdateSourceTrigger=PropertyChanged}" MinValue="{Binding Min}" MaxValue="{Binding To}" Width="80" />
              <dxe:SpinEdit x:Name="PART_SpinEditTo" DockPanel.Dock="Right" ValidateOnTextInput="False" EditValue="{Binding To, UpdateSourceTrigger=PropertyChanged}" MinValue="{Binding From}" MaxValue="{Binding Max}" Width="80" />
            </DockPanel>
            <dxe:TrackBarEdit x:Name="PART_TrackBarEdit" EditValuePostMode="Delayed" EditValuePostDelay="300" Maximum="{Binding Max}" Minimum="{Binding Min}" SelectionEnd="{Binding To, Mode=TwoWay}" SelectionStart="{Binding From, Mode=TwoWay}" IsMoveToPointEnabled="True" IsSnapToTickEnabled="True" TickPlacement="None">
              <dxe:TrackBarEdit.StyleSettings>
                <dxe:TrackBarRangeStyleSettings />
              </dxe:TrackBarEdit.StyleSettings>
            </dxe:TrackBarEdit>
          </StackPanel>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.FilteringUI.DateRangeFilterElement}" TargetType="{x:Type dxfui_local:DateRangeFilterElement}" BasedOn="{StaticResource filterElementStyle}">
    <Setter Property="FilterModelTemplate">
      <Setter.Value>
        <DataTemplate>
          <DockPanel LastChildFill="False">
            <StackPanel Orientation="Horizontal" DockPanel.Dock="Left">
              <TextBlock Text="{dxe:EditorStringId FilterElementDateRangeFrom}" Margin="0,0,8,0" VerticalAlignment="Center" />
              <dxe:DateEdit x:Name="PART_DateEditFrom" ValidateOnTextInput="False" AllowNullInput="False" EditValue="{Binding From, UpdateSourceTrigger=PropertyChanged}" MinValue="{Binding Min}" MaxValue="{Binding To}" Width="100" />
            </StackPanel>
            <StackPanel Orientation="Horizontal" DockPanel.Dock="Right">
              <TextBlock Text="{dxe:EditorStringId FilterElementDateRangeTo}" Margin="0,0,8,0" VerticalAlignment="Center" />
              <dxe:DateEdit x:Name="PART_DateEditTo" ValidateOnTextInput="False" AllowNullInput="False" EditValue="{Binding To, UpdateSourceTrigger=PropertyChanged}" MinValue="{Binding From}" MaxValue="{Binding Max}" Width="100" />
            </StackPanel>
          </DockPanel>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>