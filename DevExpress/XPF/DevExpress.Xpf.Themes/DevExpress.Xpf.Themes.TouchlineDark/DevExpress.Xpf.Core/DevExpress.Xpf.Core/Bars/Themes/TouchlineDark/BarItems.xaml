<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
                    xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys"
                    xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--BEGIN WPF-->

    <ResourceDictionary.MergedDictionaries>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.TouchlineDark.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Bars/Themes/TouchlineDark/BarButtonItem.xaml"/>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.TouchlineDark.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Bars/Themes/TouchlineDark/BarCheckItem.xaml"/>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.TouchlineDark.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Bars/Themes/TouchlineDark/BarEditItem.xaml"/>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.TouchlineDark.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Bars/Themes/TouchlineDark/BarItemSeparator.xaml"/>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.TouchlineDark.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Bars/Themes/TouchlineDark/BarSplitButtonItem.xaml"/>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.TouchlineDark.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Bars/Themes/TouchlineDark/BarSplitCheckItem.xaml"/>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.TouchlineDark.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Bars/Themes/TouchlineDark/BarStaticItem.xaml"/>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.TouchlineDark.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Bars/Themes/TouchlineDark/BarSubItem.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--END WPF-->

    <Thickness x:Key="{dxbt:BarItemThemeKey ResourceKey=Margin}">1</Thickness>

    <Thickness x:Key="{dxbt:BarItemThemeKey ResourceKey=InMenuClientPadding}">0</Thickness>

    <Thickness x:Key="{dxbt:BarItemThemeKey ResourceKey=InMenuContentMargin}">5,10,15,10</Thickness>

    <Thickness x:Key="{dxbt:BarItemThemeKey ResourceKey=InMenuKeyGestureMargin}">5,3,15,3</Thickness>

    <ControlTemplate x:Key="{dxbt:BarItemBorderThemeKey ResourceKey=Normal}" TargetType="{x:Type dxb:ItemBorderControl}">
        <Grid MinHeight="42" SnapsToDevicePixels="True">
            <Grid x:Name="States">
                <Border x:Name="HoverState" Opacity="0">
                    <Border x:Name="hover"
                            Background="#FF666666"
                            BorderThickness="0,1,0,1"
                            cs:id="Border_0000"/>
                </Border>
                <Border x:Name="PressedState"
                        Background="#FFF78A09"
                        BorderThickness="0,1,0,1"
                        Opacity="0"
                        cs:id="Border_0001"/>
                <Border x:Name="CustomizationState"
                        Background="#7F000000"
                        BorderBrush="#FFF78A09"
                        BorderThickness="1"
                        Opacity="0"
                        cs:id="Border_0003"/>
            </Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="HideBorderSide">
                    <VisualState x:Name="None"/>
                    <VisualState x:Name="Left">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxcn:ValueSetter.Thickness="1,0,0,0"
                                                           Storyboard.TargetName="States"
                                                           Storyboard.TargetProperty="(Border.Margin)"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Right"/>
                    <VisualState x:Name="Top"/>
                    <VisualState x:Name="Bottom"/>
                    <VisualState x:Name="All"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ArrowHideBorderSide">
                    <VisualState x:Name="ArrowNone"/>
                    <VisualState x:Name="ArrowLeft"/>
                    <VisualState x:Name="ArrowTop"/>
                    <VisualState x:Name="ArrowRight"/>
                    <VisualState x:Name="ArrowBottom"/>
                    <VisualState x:Name="ArrowAll"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ActiveState">
                    <VisualState x:Name="Active">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="hover"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Inactive">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="hover"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.5"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="State">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="Disabled"/>
                    <VisualState x:Name="Hover">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="HoverState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="PressedState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="PressedState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="HoverChecked">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="PressedState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Indeterminate">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="PressedState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.5"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Focused"/>
                    <VisualState x:Name="Customization">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="CustomizationState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxbt:BarItemBorderInRibbonPageGroupThemeKey ResourceKey=Normal}" TargetType="{x:Type dxb:ItemBorderControl}">
        <Grid MinHeight="42" SnapsToDevicePixels="True">
            <Grid x:Name="States">
                <Border x:Name="HoverState" Opacity="0">
                    <Border x:Name="hover"
                            Background="#FF666666"
                            cs:id="Border_0000"/>
                </Border>
                <Border x:Name="PressedState"
                        Background="#FFF78A09"
                        Opacity="0"
                        cs:id="Border_0001"/>
                <Border x:Name="CustomizationState"
                        Background="#7F000000"
                        BorderBrush="#FFF78A09"
                        BorderThickness="1"
                        Opacity="0"
                        cs:id="Border_0003"/>
            </Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="HideBorderSide">
                    <VisualState x:Name="None"/>
                    <VisualState x:Name="Left">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxcn:ValueSetter.Thickness="1,0,0,0"
                                                           Storyboard.TargetName="States"
                                                           Storyboard.TargetProperty="(Border.Margin)"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Right"/>
                    <VisualState x:Name="Top"/>
                    <VisualState x:Name="Bottom">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxcn:ValueSetter.Thickness="0,0,0,1"
                                                           Storyboard.TargetName="States"
                                                           Storyboard.TargetProperty="(Border.Margin)"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="All"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ArrowHideBorderSide">
                    <VisualState x:Name="ArrowNone"/>
                    <VisualState x:Name="ArrowLeft"/>
                    <VisualState x:Name="ArrowTop"/>
                    <VisualState x:Name="ArrowRight"/>
                    <VisualState x:Name="ArrowBottom"/>
                    <VisualState x:Name="ArrowAll"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ActiveState">
                    <VisualState x:Name="Active">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="hover"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Inactive">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="hover"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.5"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="State">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="Disabled"/>
                    <VisualState x:Name="Hover">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="HoverState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="PressedState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="PressedState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="HoverChecked">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="PressedState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Indeterminate">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="PressedState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.5"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Focused"/>
                    <VisualState x:Name="Customization">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="CustomizationState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxbt:BarItemBorderInButtonGroupThemeKey ResourceKey=Normal}" TargetType="{x:Type dxb:ItemBorderControl}">
        <Grid Margin="-1"
              MinHeight="42"
              SnapsToDevicePixels="True">
            <Grid x:Name="States">
                <Border x:Name="HoverState" Opacity="0">
                    <Border x:Name="hover"
                            Background="#FF666666"
                            cs:id="Border_0000"/>
                </Border>
                <Border x:Name="PressedState"
                        Background="#FFF78A09"
                        Opacity="0"
                        cs:id="Border_0001"/>
                <Border x:Name="CustomizationState"
                        Background="#7F000000"
                        BorderBrush="#FFF78A09"
                        BorderThickness="1"
                        Opacity="0"
                        cs:id="Border_0003"/>
            </Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="HideBorderSide">
                    <VisualState x:Name="None"/>
                    <VisualState x:Name="Left">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxcn:ValueSetter.Thickness="1,0,0,0"
                                                           Storyboard.TargetName="States"
                                                           Storyboard.TargetProperty="(Border.Margin)"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Right"/>
                    <VisualState x:Name="Top"/>
                    <VisualState x:Name="Bottom"/>
                    <VisualState x:Name="All"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ArrowHideBorderSide">
                    <VisualState x:Name="ArrowNone"/>
                    <VisualState x:Name="ArrowLeft"/>
                    <VisualState x:Name="ArrowTop"/>
                    <VisualState x:Name="ArrowRight"/>
                    <VisualState x:Name="ArrowBottom"/>
                    <VisualState x:Name="ArrowAll"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ActiveState">
                    <VisualState x:Name="Active">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="hover"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Inactive">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="hover"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.5"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="State">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="Disabled"/>
                    <VisualState x:Name="Hover">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="HoverState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="PressedState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="PressedState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="HoverChecked">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="PressedState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Indeterminate">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="PressedState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.5"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Focused"/>
                    <VisualState x:Name="Customization">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="CustomizationState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxbt:BarItemBorderInMainMenuThemeKey ResourceKey=Normal}" TargetType="{x:Type dxb:ItemBorderControl}">
        <Grid MinHeight="42" SnapsToDevicePixels="True">
            <Grid x:Name="States">
                <Border x:Name="HoverState" Opacity="0">
                    <Border x:Name="hover"
                            Background="#FFF78A09"
                            cs:id="Border_0000"/>
                </Border>
                <Border x:Name="PressedState"
                        Background="#FFF78A09"
                        Opacity="0"
                        cs:id="Border_0001"/>
                <Border x:Name="CustomizationState"
                        Background="#7F000000"
                        BorderBrush="#FFF78A09"
                        BorderThickness="1"
                        Opacity="0"
                        cs:id="Border_0003"/>
            </Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="HideBorderSide">
                    <VisualState x:Name="None"/>
                    <VisualState x:Name="Left">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxcn:ValueSetter.Thickness="1,0,0,0"
                                                           Storyboard.TargetName="States"
                                                           Storyboard.TargetProperty="(Border.Margin)"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Right"/>
                    <VisualState x:Name="Top"/>
                    <VisualState x:Name="Bottom"/>
                    <VisualState x:Name="All"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ArrowHideBorderSide">
                    <VisualState x:Name="ArrowNone"/>
                    <VisualState x:Name="ArrowLeft"/>
                    <VisualState x:Name="ArrowTop"/>
                    <VisualState x:Name="ArrowRight"/>
                    <VisualState x:Name="ArrowBottom"/>
                    <VisualState x:Name="ArrowAll"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ActiveState">
                    <VisualState x:Name="Active">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="hover"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Inactive">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="hover"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.9"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="State">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="Disabled"/>
                    <VisualState x:Name="Hover">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="HoverState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="PressedState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="PressedState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="HoverChecked">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="PressedState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Indeterminate">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="PressedState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.5"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Focused"/>
                    <VisualState x:Name="Customization">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="CustomizationState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxbt:BarItemBorderInMenuThemeKey ResourceKey=Normal}" TargetType="{x:Type dxb:ItemBorderControl}">
        <Grid MinHeight="42" SnapsToDevicePixels="True">
            <Grid x:Name="States">
                <Border x:Name="HoverState" Opacity="0">
                    <Border x:Name="hover"
                            Background="#FFF78A09"
                            cs:id="Border_0000"/>
                </Border>
                <Border x:Name="PressedState"
                        Background="#FFF78A09"
                        Opacity="0"
                        cs:id="Border_0001"/>
                <Border x:Name="CustomizationState"
                        Background="#7F000000"
                        BorderBrush="#FFF78A09"
                        BorderThickness="1"
                        Opacity="0"
                        cs:id="Border_0003"/>
            </Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="HideBorderSide">
                    <VisualState x:Name="None"/>
                    <VisualState x:Name="Left">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxcn:ValueSetter.Thickness="1,0,0,0"
                                                           Storyboard.TargetName="States"
                                                           Storyboard.TargetProperty="(Border.Margin)"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Right"/>
                    <VisualState x:Name="Top"/>
                    <VisualState x:Name="Bottom"/>
                    <VisualState x:Name="All"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ArrowHideBorderSide">
                    <VisualState x:Name="ArrowNone"/>
                    <VisualState x:Name="ArrowLeft"/>
                    <VisualState x:Name="ArrowTop"/>
                    <VisualState x:Name="ArrowRight"/>
                    <VisualState x:Name="ArrowBottom"/>
                    <VisualState x:Name="ArrowAll"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ActiveState">
                    <VisualState x:Name="Active">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="hover"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Inactive">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="hover"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.9"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="State">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="Disabled"/>
                    <VisualState x:Name="Hover">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="HoverState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="PressedState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Checked">
                        <Storyboard></Storyboard>
                    </VisualState>
                    <VisualState x:Name="HoverChecked">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="HoverState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Focused"/>
                    <VisualState x:Name="Customization">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="CustomizationState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <!--BEGIN WPF-->

    <ControlTemplate x:Key="{dxbt:BarItemTouchSplitterThemeKey ResourceKey=InMenuTemplate}" TargetType="{x:Type Control}">
        <Grid SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Border Width="{Binding Path=InMenuContentOffset, RelativeSource={RelativeSource TemplatedParent}}"/>
            <Border Background="#FF7C7C7C"
                    Grid.Column="1"
                    Height="1"
                    Margin="7,0,2,0"
                    SnapsToDevicePixels="True"
                    VerticalAlignment="Center"
                    cs:id="Border_0000"/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxbt:BarItemTouchSplitterThemeKey ResourceKey=Template}" TargetType="{x:Type Control}">
        <dxc:PixelSnapper>
            <Border Background="#FF7C7C7C"
                    Margin="1,5,1,5"
                    Width="1"
                    cs:id="Border_0000"/>
        </dxc:PixelSnapper>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxbt:BarItemTouchSplitterThemeKey ResourceKey=InRibbonStatusBarRightPartTemplate}" TargetType="{x:Type Control}">
        <dxc:PixelSnapper>
            <Border Background="#FF515151"
                    Margin="1"
                    Width="1"
                    cs:id="Border_0000"/>
        </dxc:PixelSnapper>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxbt:BarItemTouchSplitterThemeKey ResourceKey=InRibbonStatusBarLeftPartTemplate}" TargetType="{x:Type Control}">
        <dxc:PixelSnapper>
            <Border Background="#FF515151"
                    Margin="1"
                    Width="1"
                    cs:id="Border_0000"/>
        </dxc:PixelSnapper>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxbt:BarItemTouchSplitterThemeKey ResourceKey=InStatusBarTemplate}" TargetType="{x:Type Control}">
        <dxc:PixelSnapper>
            <Border Background="#FF515151"
                    Margin="1"
                    Width="1"
                    cs:id="Border_0000"/>
        </dxc:PixelSnapper>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxbt:BarItemTouchSplitterThemeKey ResourceKey=InRibbonPageGroupTemplate}" TargetType="{x:Type Control}">
        <dxc:PixelSnapper>
            <Border Background="#FF515151"
                    Margin="2,5,2,5"
                    Width="1"
                    cs:id="Border_0000"/>
        </dxc:PixelSnapper>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxbt:BarItemTouchSplitterThemeKey ResourceKey=InRibbonPageHeaderTemplate}" TargetType="{x:Type Control}">
        <dxc:PixelSnapper>
            <Border Background="#FF515151"
                    Margin="2,5,2,5"
                    Width="1"
                    cs:id="Border_0000"/>
        </dxc:PixelSnapper>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxbt:BarItemTouchSplitterThemeKey ResourceKey=InRibbonQuickAccessToolbarCommonTemplate}" TargetType="{x:Type Control}">
        <dxc:PixelSnapper>
            <Border Background="#FF515151"
                    Margin="2,5,2,5"
                    Width="1"
                    cs:id="Border_0000"/>
        </dxc:PixelSnapper>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxbt:BarItemTouchSplitterThemeKey ResourceKey=InRibbonQuickAccessToolbarTemplate}" TargetType="{x:Type Control}">
        <ContentControl Template="{StaticResource {dxbt:BarItemTouchSplitterThemeKey ResourceKey=InRibbonQuickAccessToolbarCommonTemplate}}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxbt:BarItemTouchSplitterThemeKey ResourceKey=InRibbonQuickAccessToolbarFooterTemplate}" TargetType="{x:Type Control}">
        <dxc:PixelSnapper>
            <Border Background="#FF515151"
                    Margin="2,5,2,5"
                    Width="1"
                    cs:id="Border_0000"/>
        </dxc:PixelSnapper>
    </ControlTemplate>

    <!--END WPF-->

    <Thickness x:Key="{dxbt:BarEditItemThemeKey ResourceKey=EditContentMargin}">4,1,0,1</Thickness>

    <Thickness x:Key="{dxbt:BarEditItemThemeKey ResourceKey=InRibbonEditContentMargin}">0,2,0,0</Thickness>

    <Thickness x:Key="{dxbt:BarStaticItemThemeKey ResourceKey=BorderPadding}">10,0,10,0</Thickness>

    <Thickness x:Key="{dxbt:BarSubItemThemeKey ResourceKey=ContentMargin}">4,0,1,0</Thickness>

    <Style x:Key="{dxbt:BarSubItemThemeKey ResourceKey=GlyphBorderStyle}" TargetType="{x:Type dxc:MeasurePixelSnapperContentControl}"></Style>

    <Style x:Key="{dxbt:TextSplitterThemeKey ResourceKey=BarSubItem}" TargetType="{x:Type dxb:TextSplitterControl}">
        <Setter Property="FirstStringHorizontalAlignment" Value="Center"/>
        <Setter Property="FirstStringMargin" Value="0,0,0,0"/>
        <Setter Property="SecondStringHorizontalAlignment" Value="Center"/>
        <Setter Property="SecondStringMargin" Value="0,4,0,0"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="NormalArrowTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Path Data="F1 M 211,186L 205,186L 208,189L 211,186 Z "
                          Fill="#DBFFFFFF"
                          Height="6"
                          HorizontalAlignment="Center"
                          SnapsToDevicePixels="True"
                          Stretch="Fill"
                          VerticalAlignment="Center"
                          Width="12"
                          cs:id="Path_0000"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SelectedArrowTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Path Data="F1 M 211,186L 205,186L 208,189L 211,186 Z "
                          Fill="#DBFFFFFF"
                          Height="6"
                          HorizontalAlignment="Center"
                          SnapsToDevicePixels="True"
                          Stretch="Fill"
                          VerticalAlignment="Center"
                          Width="12"
                          cs:id="Path_0001"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="NormalTextStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ContentControl}">
                    <Setter Property="Foreground"
                            Value="#FFF3F3F3"
                            cs:id="Setter_0000"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="SelectedTextStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ContentControl}">
                    <Setter Property="Foreground"
                            Value="#DBFFFFFF"
                            cs:id="Setter_0001"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="BottomSideArrowContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ContentControl}">
                    <Setter Property="Margin" Value="0,7,0,0"/>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="RightSideArrowContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ContentControl}">
                    <Setter Property="Margin" Value="2,1,0,0"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxbt:TextSplitterThemeKey ResourceKey=BarButtonItem}" TargetType="{x:Type dxb:TextSplitterControl}">
        <Setter Property="FirstStringHorizontalAlignment" Value="Center"/>
        <Setter Property="FirstStringMargin" Value="0,0,0,0"/>
        <Setter Property="SecondStringHorizontalAlignment" Value="Center"/>
        <Setter Property="SecondStringMargin" Value="0,4,0,0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="NormalTextStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ContentControl}">
                    <Setter Property="Foreground"
                            Value="#DBFFFFFF"
                            cs:id="Setter_0000"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="SelectedTextStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ContentControl}">
                    <Setter Property="Foreground"
                            Value="#FFFFFFFF"
                            cs:id="Setter_0001"/>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxbt:TextSplitterThemeKey ResourceKey=BarCheckItem}" TargetType="{x:Type dxb:TextSplitterControl}">
        <Setter Property="FirstStringHorizontalAlignment" Value="Center"/>
        <Setter Property="SecondStringHorizontalAlignment" Value="Center"/>
        <Setter Property="SecondStringMargin" Value="0,-3,0,0"/>
        <Setter Property="Margin" Value="0,-2,0,0"/>
        <Setter Property="NormalTextStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ContentControl}">
                    <Setter Property="Foreground"
                            Value="#DBFFFFFF"
                            cs:id="Setter_0000"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="SelectedTextStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ContentControl}">
                    <Setter Property="Foreground"
                            Value="#FF333333"
                            cs:id="Setter_0001"/>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxbt:TextSplitterThemeKey ResourceKey=BarSplitButtonItem}" TargetType="{x:Type dxb:TextSplitterControl}">
        <Setter Property="FirstStringHorizontalAlignment" Value="Center"/>
        <Setter Property="FirstStringMargin" Value="0,0,0,0"/>
        <Setter Property="SecondStringHorizontalAlignment" Value="Center"/>
        <Setter Property="SecondStringMargin" Value="0,4,0,0"/>
        <Setter Property="NormalArrowTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Path Data="F1M1324,808L1321,811 1318,808 1324,808z"
                          Fill="#DBFFFFFF"
                          Height="6"
                          HorizontalAlignment="Center"
                          SnapsToDevicePixels="True"
                          Stretch="Fill"
                          VerticalAlignment="Center"
                          Width="12"
                          cs:id="Path_0000"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SelectedArrowTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Path Data="F1M1324,808L1321,811 1318,808 1324,808z"
                          Fill="#DBFFFFFF"
                          Height="6"
                          HorizontalAlignment="Center"
                          SnapsToDevicePixels="True"
                          Stretch="Fill"
                          VerticalAlignment="Center"
                          Width="12"
                          cs:id="Path_0001"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="NormalTextStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ContentControl}">
                    <Setter Property="Foreground"
                            Value="#DBFFFFFF"
                            cs:id="Setter_0000"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="SelectedTextStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ContentControl}">
                    <Setter Property="Foreground"
                            Value="#DBFFFFFF"
                            cs:id="Setter_0001"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="BottomSideArrowContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ContentControl}">
                    <Setter Property="Margin" Value="0,7,0,0"/>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="RightSideArrowContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ContentControl}">
                    <Setter Property="Margin" Value="2,1,0,0"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#region BARBUTTONITEM-->

    <Style x:Key="{dxbt:BarButtonItemLayoutPanelThemeKey ResourceKey=StyleInBar}" TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="FirstBorderUseNormalStateOnly" Value="True"/>
        <Setter Property="SecondBorderUseNormalStateOnly" Value="True"/>
        <Setter Property="MinHeight" Value="42"/>
        <Setter Property="MinWidth" Value="42"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="BorderThemeKey" Value="{dxbt:BarItemBorderThemeKey}"/>
        <Setter Property="GlyphMargin" Value="10"/>
        <Setter Property="CommonContentMargin" Value="10"/>
        <Setter Property="LeftCommonContentMargin" Value="10,10,0,10"/>
        <Setter Property="RightCommonContentMargin" Value="0,10,10,10"/>
        <Setter Property="TopCommonContentMargin" Value="10,10,10,0"/>
        <Setter Property="BottomCommonContentMargin" Value="10,0,10,10"/>
    </Style>

    <Style x:Key="{dxbt:BarButtonItemLayoutPanelThemeKey ResourceKey=StyleInMainMenu}"
           BasedOn="{StaticResource {dxbt:BarButtonItemLayoutPanelThemeKey ResourceKey=StyleInBar}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <Setter Property="FirstBorderUseNormalStateOnly" Value="True"/>
        <Setter Property="SecondBorderUseNormalStateOnly" Value="True"/>
        <!--BEGIN WPF-->
        <Setter Property="BorderThemeKey" Value="{dxbt:BarItemBorderInMainMenuThemeKey}"/>
        <!--END WPF-->
        <!--ONLY SL<Setter Property="BorderThemeKey" Value="BarItemBorderInMainMenuThemeKey"/>ONLY SL-->
    </Style>

    <Style x:Key="{dxbt:BarButtonItemLayoutPanelThemeKey ResourceKey=StyleInStatusBar}"
           BasedOn="{StaticResource {dxbt:BarButtonItemLayoutPanelThemeKey ResourceKey=StyleInBar}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarButtonItemLayoutPanelThemeKey ResourceKey=StyleInRibbonPageHeader}"
           BasedOn="{StaticResource {dxbt:BarButtonItemLayoutPanelThemeKey ResourceKey=StyleInBar}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarButtonItemLayoutPanelThemeKey ResourceKey=StyleInRibbonStatusBarLeft}"
           BasedOn="{StaticResource {dxbt:BarButtonItemLayoutPanelThemeKey ResourceKey=StyleInBar}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarButtonItemLayoutPanelThemeKey ResourceKey=StyleInRibbonStatusBarRight}"
           BasedOn="{StaticResource {dxbt:BarButtonItemLayoutPanelThemeKey ResourceKey=StyleInBar}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarButtonItemLayoutPanelThemeKey ResourceKey=StyleInMenu}" TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <Setter Property="FirstBorderUseNormalStateOnly" Value="True"/>
        <Setter Property="SecondBorderUseNormalStateOnly" Value="True"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Margin" Value="1"/>
        <!--BEGIN WPF-->
        <Setter Property="BorderThemeKey" Value="{dxbt:BarItemBorderInMenuThemeKey}"/>
        <!--END WPF-->
        <!--ONLY SL<Setter Property="BorderThemeKey" Value="BarItemBorderInMenuThemeKey"/>ONLY SL-->
        <Setter Property="CommonMargin" Value="0,10,0,10"/>
        <Setter Property="ContentMargin" Value="17,0,14,0"/>
        <Setter Property="DescriptionMargin" Value="17,0,14,0"/>
        <Setter Property="KeyGestureMargin" Value="17,0,14,0"/>
        <Setter Property="GlyphMargin" Value="{Binding LinksControl.GlyphPadding, RelativeSource={RelativeSource TemplatedParent}}"/>
    </Style>

    <Style x:Key="{dxbt:BarButtonItemLayoutPanelThemeKey ResourceKey=StyleInApplicationMenu}"
           BasedOn="{StaticResource {dxbt:BarButtonItemLayoutPanelThemeKey ResourceKey=StyleInMenu}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarButtonItemLayoutPanelThemeKey ResourceKey=StyleInDropDownGallery}"
           BasedOn="{StaticResource {dxbt:BarButtonItemLayoutPanelThemeKey ResourceKey=StyleInMenu}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarButtonItemLayoutPanelThemeKey ResourceKey=StyleInMenuHeader}" TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <Setter Property="FirstBorderUseNormalStateOnly" Value="True"/>
        <Setter Property="SecondBorderUseNormalStateOnly" Value="True"/>
        <Setter Property="Margin" Value="1"/>
        <!--BEGIN WPF-->
        <Setter Property="BorderThemeKey" Value="{dxbt:BarItemBorderInMenuThemeKey}"/>
        <!--END WPF-->
        <!--ONLY SL<Setter Property="BorderThemeKey" Value="BarItemBorderInMenuThemeKey"/>ONLY SL-->
        <Setter Property="CommonMargin" Value="0,10,0,10"/>
        <Setter Property="GlyphMargin" Value="{Binding LinksControl.GlyphPadding, RelativeSource={RelativeSource TemplatedParent}}"/>
    </Style>

    <Style x:Key="BarItemLayoutPanelCommonStyleInRibbon" TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <Setter Property="FirstBorderUseNormalStateOnly" Value="True"/>
        <Setter Property="SecondBorderUseNormalStateOnly" Value="True"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="BorderThemeKey" Value="{dxbt:BarItemBorderInRibbonPageGroupThemeKey}"/>
        <Setter Property="GlyphMargin" Value="13,13,13,13"/>
        <Setter Property="CommonContentMargin" Value="9,9,9,9"/>
        <Setter Property="LeftGlyphMargin" Value="13,13,13,13"/>
        <Setter Property="RightGlyphMargin" Value="13,13,13,13"/>
        <Setter Property="TopGlyphMargin" Value="13,13,13,13"/>
        <Setter Property="BottomGlyphMargin" Value="13,13,13,13"/>
        <Setter Property="LeftCommonContentMargin" Value="13,9,0,9"/>
        <Setter Property="RightCommonContentMargin" Value="0,9,13,9"/>
        <Setter Property="TopCommonContentMargin" Value="9,9,9,9"/>
        <Setter Property="BottomCommonContentMargin" Value="9,9,9,9"/>
        <Setter Property="TextSplitterStyleKey" Value="{dxbt:TextSplitterThemeKey ResourceKey=BarButtonItem}"/>
    </Style>

    <Style x:Key="{dxbt:BarButtonItemLayoutPanelThemeKey ResourceKey=StyleInRibbonPageGroup}"
           BasedOn="{StaticResource BarItemLayoutPanelCommonStyleInRibbon}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <Setter Property="RightCommonContentMargin" Value="14"/>
        <Setter Property="LeftGlyphMargin" Value="14,14,0,14"/>
        <Setter Property="TopGlyphMargin" Value="14,26,14,26"/>
        <Setter Property="BottomCommonContentMargin" Value="14,6,14,14"/>
        <Setter Property="CommonMarginInSimplifiedMode" Value="4"/>
        <Setter Property="LeftGlyphMarginInSimplifiedMode" Value="4,4,6,4"/>
    </Style>

    <Style x:Key="{dxbt:BarButtonItemLayoutPanelThemeKey ResourceKey=StyleInButtonGroup}"
           BasedOn="{StaticResource {dxbt:BarButtonItemLayoutPanelThemeKey ResourceKey=StyleInRibbonPageGroup}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <!--BEGIN WPF-->
        <Setter Property="BorderThemeKey" Value="{dxbt:BarItemBorderInButtonGroupThemeKey}"/>
        <!--END WPF-->
        <!--ONLY SL<Setter Property="BorderThemeKey" Value="BarItemBorderInButtonGroupThemeKey"/>ONLY SL-->
        <Setter Property="Margin" Value="1,0,1,0"/>
    </Style>

    <Style x:Key="{dxbt:BarButtonItemLayoutPanelThemeKey ResourceKey=StyleInQAT}"
           BasedOn="{StaticResource BarItemLayoutPanelCommonStyleInRibbon}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarButtonItemLayoutPanelThemeKey ResourceKey=StyleInQATFooter}"
           BasedOn="{StaticResource BarItemLayoutPanelCommonStyleInRibbon}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <!--#endregion-->

    <!--#region BARCHECKITEM-->

    <Style x:Key="{dxbt:BarCheckItemLayoutPanelThemeKey ResourceKey=StyleInBar}"
           BasedOn="{StaticResource {dxbt:BarButtonItemLayoutPanelThemeKey ResourceKey=StyleInBar}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarCheckItemLayoutPanelThemeKey ResourceKey=StyleInMainMenu}"
           BasedOn="{StaticResource {dxbt:BarCheckItemLayoutPanelThemeKey ResourceKey=StyleInBar}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <Setter Property="FirstBorderUseNormalStateOnly" Value="True"/>
        <Setter Property="SecondBorderUseNormalStateOnly" Value="True"/>
        <!--BEGIN WPF-->
        <Setter Property="BorderThemeKey" Value="{dxbt:BarItemBorderInMainMenuThemeKey}"/>
        <!--END WPF-->
        <!--ONLY SL<Setter Property="BorderThemeKey" Value="BarItemBorderInMainMenuThemeKey"/>ONLY SL-->
    </Style>

    <Style x:Key="{dxbt:BarCheckItemLayoutPanelThemeKey ResourceKey=StyleInStatusBar}"
           BasedOn="{StaticResource {dxbt:BarCheckItemLayoutPanelThemeKey ResourceKey=StyleInBar}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarCheckItemLayoutPanelThemeKey ResourceKey=StyleInRibbonPageHeader}"
           BasedOn="{StaticResource {dxbt:BarCheckItemLayoutPanelThemeKey ResourceKey=StyleInBar}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarCheckItemLayoutPanelThemeKey ResourceKey=StyleInRibbonStatusBarLeft}"
           BasedOn="{StaticResource {dxbt:BarCheckItemLayoutPanelThemeKey ResourceKey=StyleInBar}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarCheckItemLayoutPanelThemeKey ResourceKey=StyleInRibbonStatusBarRight}"
           BasedOn="{StaticResource {dxbt:BarCheckItemLayoutPanelThemeKey ResourceKey=StyleInBar}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarCheckItemLayoutPanelThemeKey ResourceKey=StyleInRibbonPageGroup}"
           BasedOn="{StaticResource {dxbt:BarButtonItemLayoutPanelThemeKey ResourceKey=StyleInRibbonPageGroup}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <Setter Property="TextSplitterStyleKey" Value="{dxbt:TextSplitterThemeKey ResourceKey=BarCheckItem}"/>
    </Style>

    <Style x:Key="{dxbt:BarCheckItemLayoutPanelThemeKey ResourceKey=StyleInButtonGroup}"
           BasedOn="{StaticResource {dxbt:BarCheckItemLayoutPanelThemeKey ResourceKey=StyleInRibbonPageGroup}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <Setter Property="BorderThemeKey" Value="{dxbt:BarItemBorderInButtonGroupThemeKey}"/>
        <Setter Property="Margin" Value="1,0,1,0"/>
    </Style>

    <Style x:Key="{dxbt:BarCheckItemLayoutPanelThemeKey ResourceKey=StyleInQAT}"
           BasedOn="{StaticResource BarItemLayoutPanelCommonStyleInRibbon}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <Setter Property="TextSplitterStyleKey" Value="{dxbt:TextSplitterThemeKey ResourceKey=BarCheckItem}"/>
    </Style>

    <Style x:Key="{dxbt:BarCheckItemLayoutPanelThemeKey ResourceKey=StyleInQATFooter}"
           BasedOn="{StaticResource BarItemLayoutPanelCommonStyleInRibbon}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <Setter Property="TextSplitterStyleKey" Value="{dxbt:TextSplitterThemeKey ResourceKey=BarCheckItem}"/>
    </Style>

    <Style x:Key="{dxbt:BarCheckItemLayoutPanelThemeKey ResourceKey=StyleInMenu}"
           BasedOn="{StaticResource {dxbt:BarButtonItemLayoutPanelThemeKey ResourceKey=StyleInMenu}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <Setter Property="FirstBorderUseNormalStateOnly" Value="True"/>
        <Setter Property="SecondBorderUseNormalStateOnly" Value="True"/>
        <Setter Property="GlyphBackgroundTemplate" Value="{StaticResource CheckTriStateTemplate}"/>
        <Setter Property="GlyphBackgroundThickness" Value="-7"/>
    </Style>

    <Style x:Key="{dxbt:BarCheckItemLayoutPanelThemeKey ResourceKey=StyleInApplicationMenu}"
           BasedOn="{StaticResource {dxbt:BarCheckItemLayoutPanelThemeKey ResourceKey=StyleInMenu}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarCheckItemLayoutPanelThemeKey ResourceKey=StyleInDropDownGallery}"
           BasedOn="{StaticResource {dxbt:BarCheckItemLayoutPanelThemeKey ResourceKey=StyleInMenu}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarCheckItemLayoutPanelThemeKey ResourceKey=StyleInMenuHeader}"
           BasedOn="{StaticResource {dxbt:BarButtonItemLayoutPanelThemeKey ResourceKey=StyleInMenuHeader}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <Setter Property="FirstBorderUseNormalStateOnly" Value="True"/>
        <Setter Property="SecondBorderUseNormalStateOnly" Value="True"/>
        <Setter Property="GlyphBackgroundTemplate" Value="{StaticResource CheckTriStateTemplate}"/>
        <Setter Property="GlyphBackgroundThickness" Value="-1"/>
    </Style>

    <!--#endregion-->

    <!--#region BARSUBITEM-->

    <Style x:Key="{dxbt:BarSubItemLayoutPanelThemeKey ResourceKey=StyleInBar}" TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <Setter Property="FirstBorderUseNormalStateOnly" Value="True"/>
        <Setter Property="SecondBorderUseNormalStateOnly" Value="True"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Margin" Value="1"/>
        <!--BEGIN WPF-->
        <Setter Property="BorderThemeKey" Value="{dxbt:BarItemBorderThemeKey}"/>
        <!--END WPF-->
        <!--ONLY SL<Setter Property="BorderThemeKey" Value="BarItemBorderThemeKey"/>ONLY SL-->
        <Setter Property="ContentAndGlyphMargin" Value="10"/>
        <Setter Property="ArrowMargin" Value="8,10,8,10"/>
        <Setter Property="LeftArrowMargin" Value="10,10,0,10"/>
        <Setter Property="RightArrowMargin" Value="0,10,10,10"/>
        <Setter Property="TopArrowMargin" Value="10,10,10,0"/>
        <Setter Property="BottomArrowMargin" Value="10,0,10,10"/>
        <Setter Property="CommonContentMargin" Value="10,0"/>
        <Setter Property="BottomCommonContentMargin" Value="10,0,10,0"/>
        <!--BEGIN WPF-->
        <Setter Property="ArrowThemeKey" Value="{dxbt:BarSubItemThemeKey ResourceKey=ArrowTemplate}"/>
        <!--END WPF-->
        <!--ONLY SL<Setter Property="ArrowThemeKey" Value="BarSubItemThemeKey_ArrowTemplate"/>ONLY SL-->
    </Style>

    <Style x:Key="{dxbt:BarSubItemLayoutPanelThemeKey ResourceKey=StyleInMainMenu}"
           BasedOn="{StaticResource {dxbt:BarSubItemLayoutPanelThemeKey ResourceKey=StyleInBar}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <Setter Property="FirstBorderUseNormalStateOnly" Value="True"/>
        <Setter Property="SecondBorderUseNormalStateOnly" Value="True"/>
        <!--BEGIN WPF-->
        <Setter Property="BorderThemeKey" Value="{dxbt:BarItemBorderInMainMenuThemeKey}"/>
        <!--END WPF-->
        <!--ONLY SL<Setter Property="BorderThemeKey" Value="BarItemBorderInMainMenuThemeKey"/>ONLY SL-->
    </Style>

    <Style x:Key="{dxbt:BarSubItemLayoutPanelThemeKey ResourceKey=StyleInStatusBar}"
           BasedOn="{StaticResource {dxbt:BarSubItemLayoutPanelThemeKey ResourceKey=StyleInBar}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarSubItemLayoutPanelThemeKey ResourceKey=StyleInRibbonPageHeader}"
           BasedOn="{StaticResource {dxbt:BarSubItemLayoutPanelThemeKey ResourceKey=StyleInBar}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarSubItemLayoutPanelThemeKey ResourceKey=StyleInRibbonStatusBarLeft}"
           BasedOn="{StaticResource {dxbt:BarSubItemLayoutPanelThemeKey ResourceKey=StyleInBar}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarSubItemLayoutPanelThemeKey ResourceKey=StyleInRibbonStatusBarRight}"
           BasedOn="{StaticResource {dxbt:BarSubItemLayoutPanelThemeKey ResourceKey=StyleInBar}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarSubItemLayoutPanelThemeKey ResourceKey=StyleInMenu}"
           BasedOn="{StaticResource {dxbt:BarButtonItemLayoutPanelThemeKey ResourceKey=StyleInMenu}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <Setter Property="FirstBorderUseNormalStateOnly" Value="True"/>
        <Setter Property="SecondBorderUseNormalStateOnly" Value="True"/>
        <!--BEGIN WPF-->
        <Setter Property="ArrowThemeKey" Value="{dxbt:BarSubItemThemeKey ResourceKey=ArrowTemplateInMenu}"/>
        <!--END WPF-->
        <!--ONLY SL<Setter Property="ArrowThemeKey" Value="BarSubItemThemeKey_ArrowTemplateInMenu"/>ONLY SL-->
        <Setter Property="ArrowMargin" Value="0,0,7,0"/>
        <Setter Property="DescriptionMargin" Value="17,0,14,0"/>
    </Style>

    <Style x:Key="{dxbt:BarSubItemLayoutPanelThemeKey ResourceKey=StyleInApplicationMenu}"
           BasedOn="{StaticResource {dxbt:BarSubItemLayoutPanelThemeKey ResourceKey=StyleInMenu}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarSubItemLayoutPanelThemeKey ResourceKey=StyleInDropDownGallery}"
           BasedOn="{StaticResource {dxbt:BarSubItemLayoutPanelThemeKey ResourceKey=StyleInMenu}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarSubItemLayoutPanelThemeKey ResourceKey=StyleInMenuHeader}"
           BasedOn="{StaticResource {dxbt:BarButtonItemLayoutPanelThemeKey ResourceKey=StyleInMenuHeader}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <Setter Property="FirstBorderUseNormalStateOnly" Value="True"/>
        <Setter Property="SecondBorderUseNormalStateOnly" Value="True"/>
        <!--BEGIN WPF-->
        <Setter Property="ArrowThemeKey" Value="{dxbt:BarSubItemThemeKey ResourceKey=ArrowTemplate}"/>
        <!--END WPF-->
        <!--ONLY SL<Setter Property="ArrowThemeKey" Value="BarSubItemThemeKey_ArrowTemplate"/>ONLY SL-->
    </Style>

    <Style x:Key="BarSubItemLayoutPanelCommonStyleInRibbon" TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <Setter Property="FirstBorderUseNormalStateOnly" Value="True"/>
        <Setter Property="SecondBorderUseNormalStateOnly" Value="True"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="BorderThemeKey" Value="{dxbt:BarItemBorderInRibbonPageGroupThemeKey}"/>
        <Setter Property="GlyphMargin" Value="13,13,13,13"/>
        <Setter Property="ArrowMargin" Value="13,9,13,9"/>
        <Setter Property="CommonContentMargin" Value="9,9,9,9"/>
        <Setter Property="LeftGlyphMargin" Value="13,13,13,13"/>
        <Setter Property="RightGlyphMargin" Value="13,13,13,13"/>
        <Setter Property="TopGlyphMargin" Value="13,13,13,13"/>
        <Setter Property="BottomGlyphMargin" Value="13,13,13,13"/>
        <Setter Property="LeftCommonContentMargin" Value="13,9,0,9"/>
        <Setter Property="RightCommonContentMargin" Value="0,9,13,9"/>
        <Setter Property="TopCommonContentMargin" Value="9,9,9,9"/>
        <Setter Property="BottomCommonContentMargin" Value="9,9,9,9"/>
        <Setter Property="ArrowThemeKey" Value="{dxbt:BarSubItemThemeKey ResourceKey=ArrowTemplate}"/>
        <Setter Property="TextSplitterStyleKey" Value="{dxbt:TextSplitterThemeKey ResourceKey=BarSubItem}"/>
    </Style>

    <Style x:Key="{dxbt:BarSubItemLayoutPanelThemeKey ResourceKey=StyleInRibbonPageGroup}"
           BasedOn="{StaticResource BarSubItemLayoutPanelCommonStyleInRibbon}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <Setter Property="RightCommonContentMargin" Value="14"/>
        <Setter Property="LeftGlyphMargin" Value="14,14,0,14"/>
        <Setter Property="TopGlyphMargin" Value="14,26,14,26"/>
        <Setter Property="BottomCommonContentMargin" Value="14,6,14,14"/>
        <Setter Property="CommonMarginInSimplifiedMode" Value="4"/>
        <Setter Property="LeftGlyphMarginInSimplifiedMode" Value="4,4,6,4"/>
    </Style>

    <Style x:Key="{dxbt:BarSubItemLayoutPanelThemeKey ResourceKey=StyleInButtonGroup}"
           BasedOn="{StaticResource {dxbt:BarSubItemLayoutPanelThemeKey ResourceKey=StyleInRibbonPageGroup}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <!--BEGIN WPF-->
        <Setter Property="BorderThemeKey" Value="{dxbt:BarItemBorderInButtonGroupThemeKey}"/>
        <!--END WPF-->
        <!--ONLY SL<Setter Property="BorderThemeKey" Value="BarItemBorderInButtonGroupThemeKey"/>ONLY SL-->
        <Setter Property="Margin" Value="1,0,1,0"/>
    </Style>

    <Style x:Key="{dxbt:BarSubItemLayoutPanelThemeKey ResourceKey=StyleInQAT}"
           BasedOn="{StaticResource BarSubItemLayoutPanelCommonStyleInRibbon}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarSubItemLayoutPanelThemeKey ResourceKey=StyleInQATFooter}"
           BasedOn="{StaticResource BarSubItemLayoutPanelCommonStyleInRibbon}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <!--#endregion-->

    <!--#region BARSPLITBUTTONITEM-->

    <Style x:Key="{dxbt:BarSplitButtonItemLayoutPanelThemeKey ResourceKey=StyleInBar}"
           BasedOn="{StaticResource {dxbt:BarButtonItemLayoutPanelThemeKey ResourceKey=StyleInBar}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <Setter Property="FirstBorderUseNormalStateOnly" Value="True"/>
        <Setter Property="SecondBorderUseNormalStateOnly" Value="True"/>
        <!--BEGIN WPF-->
        <Setter Property="TouchSplitterThemeKey" Value="{dxbt:BarItemTouchSplitterThemeKey ResourceKey=Template}"/>
        <Setter Property="ArrowThemeKey" Value="{dxbt:BarSplitButtonItemThemeKey ResourceKey=ArrowTemplate}"/>
        <!--END WPF-->
        <!--ONLY SL<Setter Property="ArrowThemeKey" Value="BarSplitButtonItemThemeKey_ArrowTemplate"/>ONLY SL-->
    </Style>

    <Style x:Key="{dxbt:BarSplitButtonItemLayoutPanelThemeKey ResourceKey=StyleInMainMenu}"
           BasedOn="{StaticResource {dxbt:BarSplitButtonItemLayoutPanelThemeKey ResourceKey=StyleInBar}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <Setter Property="FirstBorderUseNormalStateOnly" Value="True"/>
        <Setter Property="SecondBorderUseNormalStateOnly" Value="True"/>
        <!--BEGIN WPF-->
        <Setter Property="TouchSplitterThemeKey" Value="{dxbt:BarItemTouchSplitterThemeKey ResourceKey=Template}"/>
        <Setter Property="BorderThemeKey" Value="{dxbt:BarItemBorderInMainMenuThemeKey}"/>
        <!--END WPF-->
        <!--ONLY SL<Setter Property="BorderThemeKey" Value="BarItemBorderInMainMenuThemeKey"/>ONLY SL-->
    </Style>

    <Style x:Key="{dxbt:BarSplitButtonItemLayoutPanelThemeKey ResourceKey=StyleInStatusBar}"
           BasedOn="{StaticResource {dxbt:BarSplitButtonItemLayoutPanelThemeKey ResourceKey=StyleInBar}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <!--BEGIN WPF-->
        <Setter Property="TouchSplitterThemeKey" Value="{dxbt:BarItemTouchSplitterThemeKey ResourceKey=InStatusBarTemplate}"/>
        <!--END WPF-->
    </Style>

    <Style x:Key="{dxbt:BarSplitButtonItemLayoutPanelThemeKey ResourceKey=StyleInRibbonPageHeader}"
           BasedOn="{StaticResource {dxbt:BarSplitButtonItemLayoutPanelThemeKey ResourceKey=StyleInBar}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <!--BEGIN WPF-->
        <Setter Property="TouchSplitterThemeKey" Value="{dxbt:BarItemTouchSplitterThemeKey ResourceKey=InRibbonPageHeaderTemplate}"/>
        <!--END WPF-->
    </Style>

    <Style x:Key="{dxbt:BarSplitButtonItemLayoutPanelThemeKey ResourceKey=StyleInRibbonStatusBarLeft}"
           BasedOn="{StaticResource {dxbt:BarSplitButtonItemLayoutPanelThemeKey ResourceKey=StyleInBar}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <!--BEGIN WPF-->
        <Setter Property="TouchSplitterThemeKey" Value="{dxbt:BarItemTouchSplitterThemeKey ResourceKey=InRibbonStatusBarLeftPartTemplate}"/>
        <!--END WPF-->
    </Style>

    <Style x:Key="{dxbt:BarSplitButtonItemLayoutPanelThemeKey ResourceKey=StyleInRibbonStatusBarRight}"
           BasedOn="{StaticResource {dxbt:BarSplitButtonItemLayoutPanelThemeKey ResourceKey=StyleInBar}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <!--BEGIN WPF-->
        <Setter Property="TouchSplitterThemeKey" Value="{dxbt:BarItemTouchSplitterThemeKey ResourceKey=InRibbonStatusBarRightPartTemplate}"/>
        <!--END WPF-->
    </Style>

    <Style x:Key="{dxbt:BarSplitButtonItemLayoutPanelThemeKey ResourceKey=StyleInRibbonPageGroup}"
           BasedOn="{StaticResource {dxbt:BarButtonItemLayoutPanelThemeKey ResourceKey=StyleInRibbonPageGroup}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <Setter Property="TouchSplitterThemeKey" Value="{dxbt:BarItemTouchSplitterThemeKey ResourceKey=InRibbonPageGroupTemplate}"/>
        <Setter Property="ArrowThemeKey" Value="{dxbt:BarSplitButtonItemThemeKey ResourceKey=ArrowTemplate}"/>
        <Setter Property="TextSplitterStyleKey" Value="{dxbt:TextSplitterThemeKey ResourceKey=BarSplitButtonItem}"/>
    </Style>

    <Style x:Key="{dxbt:BarSplitButtonItemLayoutPanelThemeKey ResourceKey=StyleInButtonGroup}"
           BasedOn="{StaticResource {dxbt:BarSplitButtonItemLayoutPanelThemeKey ResourceKey=StyleInRibbonPageGroup}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <Setter Property="FirstBorderUseNormalStateOnly" Value="True"/>
        <Setter Property="SecondBorderUseNormalStateOnly" Value="True"/>
        <Setter Property="TouchSplitterThemeKey" Value="{dxbt:BarItemTouchSplitterThemeKey ResourceKey=Template}"/>
        <Setter Property="ArrowThemeKey" Value="{dxbt:BarSplitButtonItemThemeKey ResourceKey=ArrowTemplateInBarButtonGroup}"/>
        <Setter Property="BorderThemeKey" Value="{dxbt:BarItemBorderInButtonGroupThemeKey}"/>
        <Setter Property="Margin" Value="1,0,1,0"/>
        <Setter Property="RightArrowMargin" Value="12,0,12,0"/>
    </Style>

    <Style x:Key="{dxbt:BarSplitButtonItemLayoutPanelThemeKey ResourceKey=StyleInQAT}"
           BasedOn="{StaticResource BarItemLayoutPanelCommonStyleInRibbon}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <Setter Property="TouchSplitterThemeKey" Value="{dxbt:BarItemTouchSplitterThemeKey ResourceKey=InRibbonQuickAccessToolbarTemplate}"/>
        <Setter Property="ArrowThemeKey" Value="{dxbt:BarSplitButtonItemThemeKey ResourceKey=ArrowTemplate}"/>
        <Setter Property="TextSplitterStyleKey" Value="{dxbt:TextSplitterThemeKey ResourceKey=BarSplitButtonItem}"/>
    </Style>

    <Style x:Key="{dxbt:BarSplitButtonItemLayoutPanelThemeKey ResourceKey=StyleInQATFooter}"
           BasedOn="{StaticResource BarItemLayoutPanelCommonStyleInRibbon}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <Setter Property="TouchSplitterThemeKey" Value="{dxbt:BarItemTouchSplitterThemeKey ResourceKey=InRibbonQuickAccessToolbarFooterTemplate}"/>
        <Setter Property="ArrowThemeKey" Value="{dxbt:BarSplitButtonItemThemeKey ResourceKey=ArrowTemplate}"/>
        <Setter Property="TextSplitterStyleKey" Value="{dxbt:TextSplitterThemeKey ResourceKey=BarSplitButtonItem}"/>
    </Style>

    <Style x:Key="{dxbt:BarSplitButtonItemLayoutPanelThemeKey ResourceKey=StyleInMenu}"
           BasedOn="{StaticResource {dxbt:BarButtonItemLayoutPanelThemeKey ResourceKey=StyleInMenu}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <Setter Property="FirstBorderUseNormalStateOnly" Value="True"/>
        <Setter Property="SecondBorderUseNormalStateOnly" Value="True"/>
        <!--BEGIN WPF-->
        <Setter Property="TouchSplitterThemeKey" Value="{dxbt:BarItemTouchSplitterThemeKey ResourceKey=Template}"/>
        <Setter Property="ArrowThemeKey" Value="{dxbt:BarSplitButtonItemThemeKey ResourceKey=ArrowTemplateInMenu}"/>
        <!--END WPF-->
        <!--ONLY SL<Setter Property="ArrowThemeKey" Value="BarSplitButtonItemThemeKey_ArrowTemplateInMenu"/>ONLY SL-->
    </Style>

    <Style x:Key="{dxbt:BarSplitButtonItemLayoutPanelThemeKey ResourceKey=StyleInApplicationMenu}"
           BasedOn="{StaticResource {dxbt:BarSplitButtonItemLayoutPanelThemeKey ResourceKey=StyleInMenu}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <!--BEGIN WPF-->
        <Setter Property="TouchSplitterThemeKey" Value="{dxbt:BarItemTouchSplitterThemeKey ResourceKey=Template}"/>
        <!--END WPF-->
    </Style>

    <Style x:Key="{dxbt:BarSplitButtonItemLayoutPanelThemeKey ResourceKey=StyleInDropDownGallery}"
           BasedOn="{StaticResource {dxbt:BarSplitButtonItemLayoutPanelThemeKey ResourceKey=StyleInMenu}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <!--BEGIN WPF-->
        <Setter Property="TouchSplitterThemeKey" Value="{dxbt:BarItemTouchSplitterThemeKey ResourceKey=Template}"/>
        <!--END WPF-->
    </Style>

    <Style x:Key="{dxbt:BarSplitButtonItemLayoutPanelThemeKey ResourceKey=StyleInMenuHeader}"
           BasedOn="{StaticResource {dxbt:BarButtonItemLayoutPanelThemeKey ResourceKey=StyleInMenuHeader}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <Setter Property="FirstBorderUseNormalStateOnly" Value="True"/>
        <Setter Property="SecondBorderUseNormalStateOnly" Value="True"/>
        <!--BEGIN WPF-->
        <Setter Property="TouchSplitterThemeKey" Value="{dxbt:BarItemTouchSplitterThemeKey ResourceKey=Template}"/>
        <Setter Property="ArrowThemeKey" Value="{dxbt:BarSplitButtonItemThemeKey ResourceKey=ArrowTemplate}"/>
        <!--END WPF-->
        <!--ONLY SL<Setter Property="ArrowThemeKey" Value="BarSplitButtonItemThemeKey_ArrowTemplate"/>ONLY SL-->
    </Style>

    <!--#endregion-->

    <!--#region BARSPLITCHECKITEM-->

    <Style x:Key="{dxbt:BarSplitCheckItemLayoutPanelThemeKey ResourceKey=StyleInBar}"
           BasedOn="{StaticResource {dxbt:BarSplitButtonItemLayoutPanelThemeKey ResourceKey=StyleInBar}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarSplitCheckItemLayoutPanelThemeKey ResourceKey=StyleInMainMenu}"
           BasedOn="{StaticResource {dxbt:BarSplitCheckItemLayoutPanelThemeKey ResourceKey=StyleInBar}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <Setter Property="FirstBorderUseNormalStateOnly" Value="True"/>
        <Setter Property="SecondBorderUseNormalStateOnly" Value="True"/>
        <!--BEGIN WPF-->
        <Setter Property="BorderThemeKey" Value="{dxbt:BarItemBorderInMainMenuThemeKey}"/>
        <!--END WPF-->
        <!--ONLY SL<Setter Property="BorderThemeKey" Value="BarItemBorderInMainMenuThemeKey"/>ONLY SL-->
    </Style>

    <Style x:Key="{dxbt:BarSplitCheckItemLayoutPanelThemeKey ResourceKey=StyleInStatusBar}"
           BasedOn="{StaticResource {dxbt:BarSplitCheckItemLayoutPanelThemeKey ResourceKey=StyleInBar}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarSplitCheckItemLayoutPanelThemeKey ResourceKey=StyleInRibbonPageHeader}"
           BasedOn="{StaticResource {dxbt:BarSplitCheckItemLayoutPanelThemeKey ResourceKey=StyleInBar}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarSplitCheckItemLayoutPanelThemeKey ResourceKey=StyleInRibbonStatusBarLeft}"
           BasedOn="{StaticResource {dxbt:BarSplitCheckItemLayoutPanelThemeKey ResourceKey=StyleInBar}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarSplitCheckItemLayoutPanelThemeKey ResourceKey=StyleInRibbonStatusBarRight}"
           BasedOn="{StaticResource {dxbt:BarSplitCheckItemLayoutPanelThemeKey ResourceKey=StyleInBar}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarSplitCheckItemLayoutPanelThemeKey ResourceKey=StyleInRibbonPageGroup}"
           BasedOn="{StaticResource {dxbt:BarSplitButtonItemLayoutPanelThemeKey ResourceKey=StyleInRibbonPageGroup}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarSplitCheckItemLayoutPanelThemeKey ResourceKey=StyleInButtonGroup}"
           BasedOn="{StaticResource {dxbt:BarSplitButtonItemLayoutPanelThemeKey ResourceKey=StyleInButtonGroup}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <Setter Property="BorderThemeKey" Value="{dxbt:BarItemBorderInButtonGroupThemeKey}"/>
        <Setter Property="Margin" Value="1,0,1,0"/>
    </Style>

    <Style x:Key="{dxbt:BarSplitCheckItemLayoutPanelThemeKey ResourceKey=StyleInQAT}"
           BasedOn="{StaticResource {dxbt:BarSplitButtonItemLayoutPanelThemeKey ResourceKey=StyleInQAT}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarSplitCheckItemLayoutPanelThemeKey ResourceKey=StyleInQATFooter}"
           BasedOn="{StaticResource {dxbt:BarSplitButtonItemLayoutPanelThemeKey ResourceKey=StyleInQAT}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarSplitCheckItemLayoutPanelThemeKey ResourceKey=StyleInMenu}"
           BasedOn="{StaticResource {dxbt:BarSplitButtonItemLayoutPanelThemeKey ResourceKey=StyleInMenu}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarSplitCheckItemLayoutPanelThemeKey ResourceKey=StyleInApplicationMenu}"
           BasedOn="{StaticResource {dxbt:BarSplitCheckItemLayoutPanelThemeKey ResourceKey=StyleInMenu}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarSplitCheckItemLayoutPanelThemeKey ResourceKey=StyleInDropDownGallery}"
           BasedOn="{StaticResource {dxbt:BarSplitCheckItemLayoutPanelThemeKey ResourceKey=StyleInMenu}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarSplitCheckItemLayoutPanelThemeKey ResourceKey=StyleInMenuHeader}"
           BasedOn="{StaticResource {dxbt:BarSplitButtonItemLayoutPanelThemeKey ResourceKey=StyleInMenuHeader}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <!--#endregion-->

    <!--#region LayoutPanel STYLE: In Search Result -->

    <Style x:Key="{dxbt:BarButtonItemLayoutPanelThemeKey ResourceKey=StyleInSearchResult}"
           BasedOn="{StaticResource {dxbt:BarButtonItemLayoutPanelThemeKey ResourceKey=StyleInMenu}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
    </Style>

    <Style x:Key="{dxbt:BarSubItemLayoutPanelThemeKey ResourceKey=StyleInSearchResult}"
           BasedOn="{StaticResource {dxbt:BarSubItemLayoutPanelThemeKey ResourceKey=StyleInMenu}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
    </Style>

    <Style x:Key="{dxbt:BarSplitButtonItemLayoutPanelThemeKey ResourceKey=StyleInSearchResult}"
           BasedOn="{StaticResource {dxbt:BarSplitButtonItemLayoutPanelThemeKey ResourceKey=StyleInMenu}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
    </Style>

    <Style x:Key="{dxbt:BarCheckItemLayoutPanelThemeKey ResourceKey=StyleInSearchResult}"
           BasedOn="{StaticResource {dxbt:BarCheckItemLayoutPanelThemeKey ResourceKey=StyleInMenu}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
    </Style>

    <Style x:Key="{dxbt:BarSplitCheckItemLayoutPanelThemeKey ResourceKey=StyleInSearchResult}"
           BasedOn="{StaticResource {dxbt:BarSplitCheckItemLayoutPanelThemeKey ResourceKey=StyleInMenu}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
    </Style>

    <!--#endregion-->

    <!--#region BAREDITITEM-->

    <Style x:Key="{dxbt:BarEditItemLayoutPanelThemeKey ResourceKey=StyleInBar}"
           BasedOn="{StaticResource {dxbt:BarButtonItemLayoutPanelThemeKey ResourceKey=StyleInBar}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <Setter Property="FirstBorderUseNormalStateOnly" Value="True"/>
        <Setter Property="SecondBorderUseNormalStateOnly" Value="True"/>
        <Setter Property="AdditionalContentMargin" Value="0,0,0,0"/>
        <Setter Property="ContentMargin" Value="0,0,17,0"/>
        <Setter Property="Content2Margin" Value="17,0,0,0"/>
        <Setter Property="CommonMargin" Value="0"/>
        <Setter Property="CommonContentMargin" Value="8,0,8,0"/>
    </Style>

    <Style x:Key="{dxbt:BarEditItemLayoutPanelThemeKey ResourceKey=StyleInMainMenu}"
           BasedOn="{StaticResource {dxbt:BarEditItemLayoutPanelThemeKey ResourceKey=StyleInBar}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <Setter Property="FirstBorderUseNormalStateOnly" Value="True"/>
        <Setter Property="SecondBorderUseNormalStateOnly" Value="True"/>
        <!--BEGIN WPF-->
        <Setter Property="BorderThemeKey" Value="{dxbt:BarItemBorderInMainMenuThemeKey}"/>
        <!--END WPF-->
        <!--ONLY SL<Setter Property="BorderThemeKey" Value="BarItemBorderInMainMenuThemeKey"/>ONLY SL-->
    </Style>

    <Style x:Key="{dxbt:BarEditItemLayoutPanelThemeKey ResourceKey=StyleInStatusBar}"
           BasedOn="{StaticResource {dxbt:BarEditItemLayoutPanelThemeKey ResourceKey=StyleInBar}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarEditItemLayoutPanelThemeKey ResourceKey=StyleInRibbonPageHeader}"
           BasedOn="{StaticResource {dxbt:BarEditItemLayoutPanelThemeKey ResourceKey=StyleInBar}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarEditItemLayoutPanelThemeKey ResourceKey=StyleInRibbonStatusBarLeft}"
           BasedOn="{StaticResource {dxbt:BarEditItemLayoutPanelThemeKey ResourceKey=StyleInBar}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <Setter Property="CommonMargin" Value="0"/>
        <Setter Property="AdditionalContentMargin" Value="0"/>
        <Setter Property="ContentMargin" Value="10,0,10,0"/>
        <Setter Property="GlyphMargin" Value="0"/>
        <Setter Property="Content2Margin" Value="10,0,0,0"/>
        <Setter Property="Margin" Value="0"/>
    </Style>

    <Style x:Key="{dxbt:BarEditItemLayoutPanelThemeKey ResourceKey=StyleInRibbonStatusBarRight}"
           BasedOn="{StaticResource {dxbt:BarEditItemLayoutPanelThemeKey ResourceKey=StyleInBar}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <Setter Property="CommonMargin" Value="0"/>
        <Setter Property="AdditionalContentMargin" Value="0"/>
        <Setter Property="ContentMargin" Value="10,0,10,0"/>
        <Setter Property="GlyphMargin" Value="0"/>
        <Setter Property="Content2Margin" Value="10,0,0,0"/>
        <Setter Property="Margin" Value="0"/>
    </Style>

    <Style x:Key="BarEditItemLayoutPanelCommonStyleInRibbon" TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <Setter Property="FirstBorderUseNormalStateOnly" Value="True"/>
        <Setter Property="SecondBorderUseNormalStateOnly" Value="True"/>
        <Setter Property="BorderThemeKey" Value="{dxbt:BarItemBorderInRibbonPageGroupThemeKey}"/>
        <Setter Property="CommonMargin" Value="0,0,0,0"/>
        <Setter Property="AdditionalContentMargin" Value="0,0,0,0"/>
        <Setter Property="ContentMargin" Value="10,0,10,0"/>
        <Setter Property="GlyphMargin" Value="0,0,0,0"/>
        <Setter Property="Content2Margin" Value="10,0,0,0"/>
        <Setter Property="Margin" Value="1,0,0,0"/>
    </Style>

    <Style x:Key="{dxbt:BarEditItemLayoutPanelThemeKey ResourceKey=StyleInRibbonPageGroup}"
           BasedOn="{StaticResource BarEditItemLayoutPanelCommonStyleInRibbon}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <Setter Property="CommonMarginInSimplifiedMode" Value="4"/>
        <Setter Property="LeftGlyphMarginInSimplifiedMode" Value="4,4,6,4"/>
    </Style>

    <Style x:Key="{dxbt:BarEditItemLayoutPanelThemeKey ResourceKey=StyleInButtonGroup}"
           BasedOn="{StaticResource {dxbt:BarEditItemLayoutPanelThemeKey ResourceKey=StyleInRibbonPageGroup}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <!--BEGIN WPF-->
        <Setter Property="BorderThemeKey" Value="{dxbt:BarItemBorderInButtonGroupThemeKey}"/>
        <!--END WPF-->
        <!--ONLY SL<Setter Property="BorderThemeKey" Value="BarItemBorderInButtonGroupThemeKey"/>ONLY SL-->
        <Setter Property="Margin" Value="1,0,1,0"/>
    </Style>

    <Style x:Key="{dxbt:BarEditItemLayoutPanelThemeKey ResourceKey=StyleInQAT}"
           BasedOn="{StaticResource BarEditItemLayoutPanelCommonStyleInRibbon}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarEditItemLayoutPanelThemeKey ResourceKey=StyleInQATFooter}"
           BasedOn="{StaticResource BarEditItemLayoutPanelCommonStyleInRibbon}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarEditItemLayoutPanelThemeKey ResourceKey=StyleInMenu}"
           BasedOn="{StaticResource {dxbt:BarButtonItemLayoutPanelThemeKey ResourceKey=StyleInMenu}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <Setter Property="FirstBorderUseNormalStateOnly" Value="True"/>
        <Setter Property="SecondBorderUseNormalStateOnly" Value="True"/>
        <Setter Property="CommonMargin" Value="0"/>
        <Setter Property="Content2Margin" Value="10,0,10,0"/>
    </Style>

    <Style x:Key="{dxbt:BarEditItemLayoutPanelThemeKey ResourceKey=StyleInApplicationMenu}"
           BasedOn="{StaticResource {dxbt:BarEditItemLayoutPanelThemeKey ResourceKey=StyleInMenu}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarEditItemLayoutPanelThemeKey ResourceKey=StyleInDropDownGallery}"
           BasedOn="{StaticResource {dxbt:BarEditItemLayoutPanelThemeKey ResourceKey=StyleInMenu}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarEditItemLayoutPanelThemeKey ResourceKey=StyleInMenuHeader}"
           BasedOn="{StaticResource {dxbt:BarButtonItemLayoutPanelThemeKey ResourceKey=StyleInMenuHeader}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <!--#endregion-->

    <!--#region BARSTATICITEM-->

    <Style x:Key="{dxbt:BarStaticItemLayoutPanelThemeKey ResourceKey=StyleInBar}"
           BasedOn="{StaticResource {dxbt:BarButtonItemLayoutPanelThemeKey ResourceKey=StyleInBar}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <Setter Property="FirstBorderUseNormalStateOnly" Value="True"/>
        <Setter Property="SecondBorderUseNormalStateOnly" Value="True"/>
        <Setter Property="AdditionalContentMargin" Value="17,0,0,0"/>
        <Setter Property="CommonMargin" Value="0"/>
        <Setter Property="CommonContentMargin" Value="10,0,10,0"/>
    </Style>

    <Style x:Key="{dxbt:BarStaticItemLayoutPanelThemeKey ResourceKey=StyleInMainMenu}"
           BasedOn="{StaticResource {dxbt:BarStaticItemLayoutPanelThemeKey ResourceKey=StyleInBar}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <Setter Property="FirstBorderUseNormalStateOnly" Value="True"/>
        <Setter Property="SecondBorderUseNormalStateOnly" Value="True"/>
        <!--BEGIN WPF-->
        <Setter Property="BorderThemeKey" Value="{dxbt:BarItemBorderInMainMenuThemeKey}"/>
        <!--END WPF-->
        <!--ONLY SL<Setter Property="BorderThemeKey" Value="BarItemBorderInMainMenuThemeKey"/>ONLY SL-->
    </Style>

    <Style x:Key="{dxbt:BarStaticItemLayoutPanelThemeKey ResourceKey=StyleInStatusBar}"
           BasedOn="{StaticResource {dxbt:BarStaticItemLayoutPanelThemeKey ResourceKey=StyleInBar}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarStaticItemLayoutPanelThemeKey ResourceKey=StyleInRibbonPageHeader}"
           BasedOn="{StaticResource {dxbt:BarStaticItemLayoutPanelThemeKey ResourceKey=StyleInBar}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarStaticItemLayoutPanelThemeKey ResourceKey=StyleInRibbonStatusBarLeft}"
           BasedOn="{StaticResource {dxbt:BarStaticItemLayoutPanelThemeKey ResourceKey=StyleInBar}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarStaticItemLayoutPanelThemeKey ResourceKey=StyleInRibbonStatusBarRight}"
           BasedOn="{StaticResource {dxbt:BarStaticItemLayoutPanelThemeKey ResourceKey=StyleInBar}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarStaticItemLayoutPanelThemeKey ResourceKey=StyleInRibbonPageGroup}"
           BasedOn="{StaticResource {dxbt:BarButtonItemLayoutPanelThemeKey ResourceKey=StyleInRibbonPageGroup}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarStaticItemLayoutPanelThemeKey ResourceKey=StyleInButtonGroup}"
           BasedOn="{StaticResource {dxbt:BarStaticItemLayoutPanelThemeKey ResourceKey=StyleInRibbonPageGroup}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <!--BEGIN WPF-->
        <Setter Property="BorderThemeKey" Value="{dxbt:BarItemBorderInButtonGroupThemeKey}"/>
        <!--END WPF-->
        <!--ONLY SL<Setter Property="BorderThemeKey" Value="BarItemBorderInButtonGroupThemeKey"/>ONLY SL-->
        <Setter Property="Margin" Value="1,0,1,0"/>
    </Style>

    <Style x:Key="{dxbt:BarStaticItemLayoutPanelThemeKey ResourceKey=StyleInQAT}"
           BasedOn="{StaticResource {dxbt:BarButtonItemLayoutPanelThemeKey ResourceKey=StyleInBar}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarStaticItemLayoutPanelThemeKey ResourceKey=StyleInQATFooter}"
           BasedOn="{StaticResource {dxbt:BarButtonItemLayoutPanelThemeKey ResourceKey=StyleInBar}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarStaticItemLayoutPanelThemeKey ResourceKey=StyleInMenu}"
           BasedOn="{StaticResource {dxbt:BarButtonItemLayoutPanelThemeKey ResourceKey=StyleInMenu}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}">
        <Setter Property="FirstBorderUseNormalStateOnly" Value="True"/>
        <Setter Property="SecondBorderUseNormalStateOnly" Value="True"/>
        <Setter Property="CommonMargin" Value="0"/>
        <Setter Property="Content2Margin" Value="12,0,12,0"/>
    </Style>

    <Style x:Key="{dxbt:BarStaticItemLayoutPanelThemeKey ResourceKey=StyleInApplicationMenu}"
           BasedOn="{StaticResource {dxbt:BarStaticItemLayoutPanelThemeKey ResourceKey=StyleInMenu}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarStaticItemLayoutPanelThemeKey ResourceKey=StyleInDropDownGallery}"
           BasedOn="{StaticResource {dxbt:BarStaticItemLayoutPanelThemeKey ResourceKey=StyleInMenu}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <Style x:Key="{dxbt:BarStaticItemLayoutPanelThemeKey ResourceKey=StyleInMenuHeader}"
           BasedOn="{StaticResource {dxbt:BarButtonItemLayoutPanelThemeKey ResourceKey=StyleInMenuHeader}}"
           TargetType="{x:Type dxb:BarItemLayoutPanel}"/>

    <!--#endregion-->

    <dxb:FontSettings x:Key="{dxbt:BarItemFontThemeKey ResourceKey=BarItemFontSettings}"
                      Hover="#FFFFFFFF"
                      Normal="#DBFFFFFF"
                      Pressed="#FF333333"/>

    <dxb:FontSettings x:Key="{dxbt:BarItemFontThemeKey ResourceKey=BarItemFontSettingsInMainMenu}"
                      Hover="#FF333333"
                      Normal="#DBFFFFFF"
                      Pressed="#FF333333"/>

    <dxb:FontSettings x:Key="{dxbt:BarItemFontThemeKey ResourceKey=BarItemFontSettingsInMenu}"
                      Checked="#DBFFFFFF"
                      Hover="#FF333333"
                      HoverChecked="#DBFFFFFF"
                      Normal="#DBFFFFFF"
                      Pressed="#FF333333"/>

    <dxb:FontSettings x:Key="{dxbt:BarItemFontThemeKey ResourceKey=BarItemFontSettingsInApplicationMenu}"
                      Checked="#DBFFFFFF"
                      Hover="#FF333333"
                      HoverChecked="#DBFFFFFF"
                      Normal="#DBFFFFFF"
                      Pressed="#FF333333"/>

    <dxb:FontSettings x:Key="{dxbt:BarItemFontThemeKey ResourceKey=BarItemFontSettingsInStatusBar}"
                      Hover="#FFFFFFFF"
                      Normal="#DBFFFFFF"
                      Pressed="#FF333333"/>

    <dxb:FontSettings x:Key="{dxbt:BarItemFontThemeKey ResourceKey=BarItemFontSettingsInRibbonStatusBarLeft}"
                      Hover="#FFFFFFFF"
                      Normal="#DBFFFFFF"
                      Pressed="#FF333333"/>

    <dxb:FontSettings x:Key="{dxbt:BarItemFontThemeKey ResourceKey=BarItemFontSettingsInRibbonStatusBarRight}"
                      Hover="#FFFFFFFF"
                      Normal="#DBFFFFFF"
                      Pressed="#FF333333"/>

    <dxb:FontSettings x:Key="{dxbt:BarItemFontThemeKey ResourceKey=BarItemFontSettingsInRibbonPageGroup}"
                      Hover="#FFFFFFFF"
                      Normal="#DBFFFFFF"
                      Pressed="#FF333333"/>

    <dxb:FontSettings x:Key="{dxbt:BarItemFontThemeKey ResourceKey=BarItemFontSettingsInRibbonToolbar}"
                      Hover="#FFFFFFFF"
                      Normal="#DBFFFFFF"
                      Pressed="#FF333333"/>

    <dxb:FontSettings x:Key="{dxbt:BarItemFontThemeKey ResourceKey=BarItemFontSettingsInRibbonToolbarFooter}"
                      Hover="#FFFFFFFF"
                      Normal="#DBFFFFFF"
                      Pressed="#FF333333"/>

    <dxb:FontSettings x:Key="{dxbt:BarItemFontThemeKey ResourceKey=BarItemFontSettingsInRibbonPageHeader}"
                      Hover="#FFFFFFFF"
                      Normal="#DBFFFFFF"
                      Pressed="#FF333333"/>

    <dxb:FontSettings x:Key="{dxbt:BarItemFontThemeKey ResourceKey=BarItemFontSettingsInButtonGroup}"
                      Hover="#FFFFFFFF"
                      Normal="#DBFFFFFF"
                      Pressed="#FF333333"/>

    <dxb:FontSettings x:Key="{dxbt:BarItemFontThemeKey ResourceKey=BarItemDescriptionStyleInApplicationMenu}"
                      Hover="#FF333333"
                      Normal="#DBFFFFFF"
                      Pressed="#FF333333"/>

    <dxb:FontSettings x:Key="{dxbt:BarItemFontThemeKey ResourceKey=BarSplitButtonItemTextStyleInTextSplitter}" Normal="#DBFFFFFF"/>

    <dxb:FontSettings x:Key="{dxbt:BarItemFontThemeKey ResourceKey=BarSubItemTextStyleInTextSplitter}" Normal="#FFF3F3F3"/>

    <dxb:FontSettings x:Key="{dxbt:BarItemFontThemeKey ResourceKey=BarButtonItemTextStyleInTextSplitter}" Normal="#DBFFFFFF"/>

    <dxb:FontSettings x:Key="{dxbt:BarItemFontThemeKey ResourceKey=BarCheckItemTextStyleInTextSplitter}" Normal="#DBFFFFFF"/>

    <dxb:BarItemImageColorizerSettings x:Key="{dxbt:BarItemImageColorizerSettingsThemeKey ResourceKey=DefaultSettings}"
                                       Hover="#FFFFFFFF"
                                       Normal="#DBFFFFFF"
                                       Pressed="#FF333333"/>

    <dxb:BarItemImageColorizerSettings x:Key="{dxbt:BarItemImageColorizerSettingsThemeKey ResourceKey=SettingsInButtonGroup}"
                                       Hover="#FFFFFFFF"
                                       Normal="#DBFFFFFF"
                                       Pressed="#FF333333"/>

    <dxb:BarItemImageColorizerSettings x:Key="{dxbt:BarItemImageColorizerSettingsThemeKey ResourceKey=SettingsInMainMenu}"
                                       Hover="#FF333333"
                                       Normal="#DBFFFFFF"
                                       Pressed="#FF333333"/>

    <dxb:BarItemImageColorizerSettings x:Key="{dxbt:BarItemImageColorizerSettingsThemeKey ResourceKey=SettingsInMenu}"
                                       Hover="#FF333333"
                                       Normal="#DBFFFFFF"
                                       Pressed="#FF333333"/>

    <dxb:BarItemImageColorizerSettings x:Key="{dxbt:BarItemImageColorizerSettingsThemeKey ResourceKey=SettingsInApplicationMenu}"
                                       Hover="#FF333333"
                                       Normal="#DBFFFFFF"
                                       Pressed="#FF333333"/>

    <dxb:BarItemImageColorizerSettings x:Key="{dxbt:BarItemImageColorizerSettingsThemeKey ResourceKey=SettingsInRibbonPageGroup}"
                                       Hover="#FFFFFFFF"
                                       Normal="#DBFFFFFF"
                                       Pressed="#FF333333"/>

    <dxb:BarItemImageColorizerSettings x:Key="{dxbt:BarItemImageColorizerSettingsThemeKey ResourceKey=SettingsInRibbonStatusBarLeft}"
                                       Hover="#FFFFFFFF"
                                       Normal="#DBFFFFFF"
                                       Pressed="#FF333333"/>

    <dxb:BarItemImageColorizerSettings x:Key="{dxbt:BarItemImageColorizerSettingsThemeKey ResourceKey=SettingsInRibbonStatusBarRight}"
                                       Hover="#FFFFFFFF"
                                       Normal="#DBFFFFFF"
                                       Pressed="#FF333333"/>

    <dxb:BarItemImageColorizerSettings x:Key="{dxbt:BarItemImageColorizerSettingsThemeKey ResourceKey=SettingsInRibbonToolbar}"
                                       Hover="#FFFFFFFF"
                                       Normal="#DBFFFFFF"
                                       Pressed="#FF333333"/>

    <dxb:BarItemImageColorizerSettings x:Key="{dxbt:BarItemImageColorizerSettingsThemeKey ResourceKey=SettingsInRibbonToolbarFooter}"
                                       Hover="#FFFFFFFF"
                                       Normal="#DBFFFFFF"
                                       Pressed="#FF333333"/>

    <dxb:BarItemImageColorizerSettings x:Key="{dxbt:BarItemImageColorizerSettingsThemeKey ResourceKey=SettingsInRibbonPageHeader}"
                                       Hover="#FFFFFFFF"
                                       Normal="#DBFFFFFF"
                                       Pressed="#FF333333"/>

    <dxb:BarItemImageColorizerSettings x:Key="{dxbt:BarItemImageColorizerSettingsThemeKey ResourceKey=SettingsInStatusBar}"
                                       Hover="#FFFFFFFF"
                                       Normal="#DBFFFFFF"
                                       Pressed="#FF333333"/>

    <dxc:WpfSvgPalette x:Key="{dxbt:BarSvgPaletteThemeKey ResourceKey=SvgPaletteInMainMenu}"></dxc:WpfSvgPalette>

    <dxc:WpfSvgPalette x:Key="{dxbt:BarSvgPaletteThemeKey ResourceKey=SvgPaletteInBar}"></dxc:WpfSvgPalette>

    <dxc:WpfSvgPalette x:Key="{dxbt:BarSvgPaletteThemeKey ResourceKey=SvgPaletteInStatusBar}"></dxc:WpfSvgPalette>

    <dxc:WpfSvgPalette x:Key="{dxbt:BarSvgPaletteThemeKey ResourceKey=SvgPaletteInMenu}"></dxc:WpfSvgPalette>

    <dxc:WpfSvgPalette x:Key="{dxbt:BarSvgPaletteThemeKey ResourceKey=SvgPaletteInRadialMenu}"></dxc:WpfSvgPalette>

</ResourceDictionary>