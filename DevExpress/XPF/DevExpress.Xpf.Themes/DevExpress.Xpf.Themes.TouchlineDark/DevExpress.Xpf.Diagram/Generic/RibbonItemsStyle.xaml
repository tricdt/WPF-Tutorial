<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon" xmlns:dxdiag="http://schemas.devexpress.com/winfx/2008/xaml/diagram" xmlns:dxdiagn="http://schemas.devexpress.com/winfx/2008/xaml/diagram/internal" xmlns:dxdiagt="http://schemas.devexpress.com/winfx/2008/xaml/diagram/themekeys" xmlns:dxdiagcore="clr-namespace:DevExpress.Diagram.Core;assembly=DevExpress.Diagram.v24.1.Core" xmlns:dxdiagcn="clr-namespace:DevExpress.Diagram.Core.Native;assembly=DevExpress.Diagram.v24.1.Core" xmlns:localization="clr-namespace:DevExpress.Diagram.Core.Localization;assembly=DevExpress.Diagram.v24.1.Core" xmlns:themes="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
  <ResourceDictionary.MergedDictionaries>
    <themes:ResourceDictionaryEx Source="{dx:DiagramResource Generic/RibbonItemsStyles.meta.designer.xaml}" />
    <themes:ResourceDictionaryEx Source="{dx:DiagramResource Generic/RibbonResources.xaml}" />
  </ResourceDictionary.MergedDictionaries>
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=SnapToGridButtonStyle}" TargetType="{x:Type dxb:BarEditItem}">
    <Style.Setters>
      <Setter Property="EditValue" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).SnapToGrid}" />
      <Setter Property="EditHorizontalAlignment" Value="Left" />
      <Setter Property="CustomizationGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/Check.svg}" />
      <Setter Property="CustomizationContent" Value="{Binding ConverterParameter=SnapToGrid, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="SuperTip" Value="{dxdiag:DiagramItemToolTipProvider CaptionId=SnapToGrid, DescriptionId=SnapToGrid_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="EditSettings">
        <Setter.Value>
          <dxmvvm:ValueFactory>
            <DataTemplate>
              <dxe:CheckEditSettings Content="{dxdiag:DiagramControlLocalizedString SnapToGrid}" />
            </DataTemplate>
          </dxmvvm:ValueFactory>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=SnapToItemsButtonStyle}" TargetType="{x:Type dxb:BarEditItem}">
    <Style.Setters>
      <Setter Property="EditValue" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).SnapToItems}" />
      <Setter Property="EditHorizontalAlignment" Value="Left" />
      <Setter Property="CustomizationContent" Value="{Binding ConverterParameter=SnapToItems, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="CustomizationGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/Check.svg}" />
      <Setter Property="SuperTip" Value="{dxdiag:DiagramItemToolTipProvider CaptionId=SnapToItems, DescriptionId=SnapToItems_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="EditSettings">
        <Setter.Value>
          <dxmvvm:ValueFactory>
            <DataTemplate>
              <dxe:CheckEditSettings Content="{dxdiag:DiagramControlLocalizedString SnapToItems}" />
            </DataTemplate>
          </dxmvvm:ValueFactory>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=SnapDistanceEditorStyle}" TargetType="{x:Type dxb:BarEditItem}">
    <Style.Setters>
      <Setter Property="ToolTip" Value="{Binding ConverterParameter=Menu_SnapDistance_Editor, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="EditHorizontalAlignment" Value="Stretch" />
      <Setter Property="EditValue" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).SnapToItemsDistance,                  Converter={dxdiagn:DoubleToDecimalConverter}}" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=FontFamilySelectorStyle}" TargetType="{x:Type dxb:BarEditItem}">
    <Style.Setters>
      <Setter Property="EditWidth" Value="{DynamicResource {dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=FontFamilyEditorWidth}}" />
      <Setter Property="CustomizationContent" Value="{Binding ConverterParameter=FontFamily, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="SuperTip" Value="{dxdiag:DiagramItemToolTipProvider CaptionId=FontFamily, DescriptionId=FontFamily_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="EditValue" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).SelectionToolsModel[FontFamily], Converter={dxdiagn:FontFamilyInfoToFontFamilyConverter}}" />
      <Setter Property="EditTemplate">
        <Setter.Value>
          <DataTemplate>
            <dxe:FontEdit>
              <dxe:FontEdit.Style>
                <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=http://schemas.devexpress.com/winfx/2008/xaml/editors.FontEdit}" TargetType="dxe:FontEdit">
                  <Style.Setters>
                    <Setter Property="Width" Value="{DynamicResource {dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=FontFamilyEditorWidth}}" />
                    <Setter Property="ScrollUnit" Value="Item" />
                  </Style.Setters>
                  <Style.Triggers>
                    <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                      <Setter Property="Width" Value="150" />
                    </Trigger>
                    <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
                      <Setter Property="Width" Value="150" />
                    </Trigger>
                  </Style.Triggers>
                </Style>
              </dxe:FontEdit.Style>
            </dxe:FontEdit>
          </DataTemplate>
        </Setter.Value>
      </Setter>
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeTextFont" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="EditWidth" Value="150" />
      </Trigger>
      <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
        <Setter Property="EditWidth" Value="150" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=FontSizeSelectorStyle}" TargetType="{x:Type dxb:BarEditItem}">
    <Style.Setters>
      <Setter Property="EditWidth" Value="{DynamicResource {dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=FontSizeEditorWidth}}" />
      <Setter Property="CustomizationContent" Value="{Binding ConverterParameter=FontSize, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="SuperTip" Value="{dxdiag:DiagramItemToolTipProvider CaptionId=FontSize, DescriptionId=FontSize_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="EditValue" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).SelectionToolsModel[FontSize]}" />
      <Setter Property="EditSettings">
        <Setter.Value>
          <dxmvvm:ValueFactory>
            <DataTemplate>
              <dxe:ComboBoxEditSettings ItemsSource="{x:Static dxdiagcn:DiagramFontActions.FontSizeSteps}" MaskType="Numeric" />
            </DataTemplate>
          </dxmvvm:ValueFactory>
        </Setter.Value>
      </Setter>
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeTextFont" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="EditWidth" Value="100" />
      </Trigger>
      <Trigger Property="dx:ThemeManager.IsTouchlineTheme" Value="True">
        <Setter Property="EditWidth" Value="100" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ToggleFontBoldCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ToggleFontBoldCommandItemStyleBase}}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="IsChecked" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).SelectionToolsModel[IsFontBold], Mode=OneWay}" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ToggleFontItalicCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ToggleFontItalicCommandItemStyleBase}}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="IsChecked" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).SelectionToolsModel[IsFontItalic], Mode=OneWay}" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ToggleFontUnderlineCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ToggleFontUnderlineCommandItemStyleBase}}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="IsChecked" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).SelectionToolsModel[IsFontUnderline], Mode=OneWay}" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ToggleFontStrikethroughCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ToggleFontStrikethroughCommandItemStyleBase}}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="IsChecked" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).SelectionToolsModel[IsFontStrikethrough], Mode=OneWay}" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=PageSizeBarItemStyle}" BasedOn="{StaticResource {dxdiagt:DiagramDesignerControlBaseThemeKeys ResourceKey=PageSizeStyleBase}}" TargetType="{x:Type dxb:BarSubItem}" />
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=CanvasAutoSizeBarItemStyle}" BasedOn="{StaticResource {dxdiagt:DiagramDesignerControlBaseThemeKeys ResourceKey=AutoSizeStyleBase}}" TargetType="{x:Type dxb:BarSubItem}" />
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=PaperOrientationBarItemStyle}" BasedOn="{StaticResource {dxdiagt:DiagramDesignerControlBaseThemeKeys ResourceKey=PageOrientationStyleBase}}" TargetType="{x:Type dxb:BarSubItem}" />
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=ReLayoutStyle}" BasedOn="{StaticResource {dxdiagt:DiagramDesignerControlBaseThemeKeys ResourceKey=ReLayoutStyleBase}}" TargetType="{x:Type dxb:BarSubItem}" />
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=ReLayoutTreeStyle}" BasedOn="{StaticResource {dxdiagt:DiagramDesignerControlBaseThemeKeys ResourceKey=ReLayoutTreeStyleBase}}" TargetType="{x:Type dxb:BarItemLinkMenuHeader}" />
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=ReLayoutTipOverTreeHeaderStyle}" BasedOn="{StaticResource {dxdiagt:DiagramDesignerControlBaseThemeKeys ResourceKey=ReLayoutTipOverTreeHeaderStyleBase}}" TargetType="{x:Type dxb:BarItemLinkMenuHeader}" />
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=ReLayoutMindMapTreeHeaderStyle}" BasedOn="{StaticResource {dxdiagt:DiagramDesignerControlBaseThemeKeys ResourceKey=ReLayoutMindMapTreeHeaderStyleBase}}" TargetType="{x:Type dxb:BarItemLinkMenuHeader}" />
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=ReLayoutSugiyamaStyle}" BasedOn="{StaticResource {dxdiagt:DiagramDesignerControlBaseThemeKeys ResourceKey=ReLayoutSugiyamaStyleBase}}" TargetType="{x:Type dxb:BarItemLinkMenuHeader}" />
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=ReLayoutCircularHeaderStyle}" BasedOn="{StaticResource {dxdiagt:DiagramDesignerControlBaseThemeKeys ResourceKey=ReLayoutCircularHeaderStyleBase}}" TargetType="{x:Type dxb:BarItemLinkMenuHeader}" />
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=ShapeBackgroundColorSplitButtonStyle}" TargetType="{x:Type dxb:BarSplitButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString BackgroundColor}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/FillBackground.svg}" />
      <Setter Property="GlyphTemplate">
        <Setter.Value>
          <DataTemplate>
            <Canvas Width="16" Height="16" DataContext="{Binding Path=(dxb:BarItemLinkInfo.Item), RelativeSource={RelativeSource Self}}">
              <Image Height="16" Width="16" Source="{dxdiag:DiagramSvgImage Path=Images/Svg/FillBackground.svg}" />
              <Border Name="border" Width="14" Height="3" Canvas.Left="1" Canvas.Top="13">
                <Border.Background>
                  <SolidColorBrush Color="{Binding Path=(dxdiagn:BarColorEditBehavior.BarColor)}" />
                </Border.Background>
              </Border>
            </Canvas>
          </DataTemplate>
        </Setter.Value>
      </Setter>
      <Setter Property="RibbonStyle" Value="SmallWithText" />
      <Setter Property="SuperTip" Value="{dxdiag:DiagramItemToolTipProvider CaptionId=BackgroundColor, DescriptionId=BackgroundColor_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
        <Setter.Value>
          <DataTemplate>
            <ItemsControl>
              <dxdiagn:BarColorEditBehavior EditablePropertyName="{x:Static dxdiagcore:DiagramItemController.BackgroundPropertyName}" Diagram="{Binding Path=(dxdiag:DiagramControl.Diagram), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxb:BarSplitButtonItem}}}" ColorEditUnit="{Binding Path=PopupControl.Tag, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxb:BarSplitButtonItem}}}" />
            </ItemsControl>
          </DataTemplate>
        </Setter.Value>
      </Setter>
      <Setter Property="PopupControl">
        <Setter.Value>
          <dxmvvm:ValueFactory>
            <DataTemplate>
              <dxb:PopupControlContainer Tag="{Binding ElementName=backgroundColorEditBehavior, Path=EditorColor}">
                <dxdiagn:ExtendedColorEdit AllowNullInput="True" ShowDefaultColorButton="False" ShowBorder="False" Palettes="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Theme, Converter={dxdiagn:DiagramThemeToColorEditPaletteConverter}}">
                  <dxmvvm:Interaction.Behaviors>
                    <dxdiagn:DiagramColorEditBehavior x:Name="backgroundColorEditBehavior" EditablePropertyName="{x:Static dxdiagcore:DiagramItemController.BackgroundPropertyName}" Diagram="{Binding Path=(dxdiag:DiagramControl.Diagram), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxdiagn:ExtendedColorEdit}}}" DiagramColor="{Binding Path=(dxdiag:DiagramControl.Diagram).SelectionToolsModel[BackgroundColor], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxdiagn:ExtendedColorEdit}}}" />
                  </dxmvvm:Interaction.Behaviors>
                </dxdiagn:ExtendedColorEdit>
              </dxb:PopupControlContainer>
            </DataTemplate>
          </dxmvvm:ValueFactory>
        </Setter.Value>
      </Setter>
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeItemBackground" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=ShapeForegroundColorSplitButtonStyle}" TargetType="{x:Type dxb:BarSplitButtonItem}">
    <Style.Setters>
      <Setter Property="CustomizationContent" Value="{dxdiag:DiagramControlLocalizedString ForegroundColor}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/FillForeground.svg}" />
      <Setter Property="GlyphTemplate">
        <Setter.Value>
          <DataTemplate>
            <Canvas Width="16" Height="16" DataContext="{Binding Path=(dxb:BarItemLinkInfo.Item), RelativeSource={RelativeSource Self}}">
              <Image Height="16" Width="16" Source="{dxdiag:DiagramSvgImage Path=Images/Svg/FillForeground.svg}" />
              <Border Name="border" Width="14" Height="3" Canvas.Left="1" Canvas.Top="13">
                <Border.Background>
                  <SolidColorBrush Color="{Binding Path=(dxdiagn:BarColorEditBehavior.BarColor)}" />
                </Border.Background>
              </Border>
            </Canvas>
          </DataTemplate>
        </Setter.Value>
      </Setter>
      <Setter Property="GlyphSize" Value="Small" />
      <Setter Property="SuperTip" Value="{dxdiag:DiagramItemToolTipProvider CaptionId=ForegroundColor, DescriptionId=ForegroundColor_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
        <Setter.Value>
          <DataTemplate>
            <ItemsControl>
              <dxdiagn:BarColorEditBehavior EditablePropertyName="{x:Static dxdiagcore:DiagramItemController.ForegroundPropertyName}" Diagram="{Binding Path=(dxdiag:DiagramControl.Diagram), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxb:BarSplitButtonItem}}}" ColorEditUnit="{Binding Path=PopupControl.Tag, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxb:BarSplitButtonItem}}}" />
            </ItemsControl>
          </DataTemplate>
        </Setter.Value>
      </Setter>
      <Setter Property="PopupControl">
        <Setter.Value>
          <dxmvvm:ValueFactory>
            <DataTemplate>
              <dxb:PopupControlContainer Tag="{Binding ElementName=foregroundColorEditBehavior, Path=EditorColor}">
                <dxdiagn:ExtendedColorEdit AllowNullInput="True" ShowDefaultColorButton="False" ShowBorder="False" Palettes="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Theme, Converter={dxdiagn:DiagramThemeToColorEditPaletteConverter}}">
                  <dxmvvm:Interaction.Behaviors>
                    <dxdiagn:DiagramColorEditBehavior x:Name="foregroundColorEditBehavior" EditablePropertyName="{x:Static dxdiagcore:DiagramItemController.ForegroundPropertyName}" Diagram="{Binding Path=(dxdiag:DiagramControl.Diagram), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxdiagn:ExtendedColorEdit}}}" DiagramColor="{Binding Path=Diagram.SelectionToolsModel[ForegroundColor], RelativeSource={RelativeSource Self}}" />
                  </dxmvvm:Interaction.Behaviors>
                </dxdiagn:ExtendedColorEdit>
              </dxb:PopupControlContainer>
            </DataTemplate>
          </dxmvvm:ValueFactory>
        </Setter.Value>
      </Setter>
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter }">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeTextForeground" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=ShapeStrokeColorSplitButtonStyle}" TargetType="{x:Type dxb:BarSplitButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString StrokeColor}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/FillStroke.svg}" />
      <Setter Property="GlyphTemplate">
        <Setter.Value>
          <DataTemplate>
            <Canvas Width="16" Height="16" DataContext="{Binding Path=(dxb:BarItemLinkInfo.Item), RelativeSource={RelativeSource Self}}">
              <Image Height="16" Width="16" Source="{dxdiag:DiagramSvgImage Path=Images/Svg/FillStroke.svg}" />
              <Border Name="border" Width="14" Height="3" Canvas.Left="1" Canvas.Top="13">
                <Border.Background>
                  <SolidColorBrush Color="{Binding Path=(dxdiagn:BarColorEditBehavior.BarColor)}" />
                </Border.Background>
              </Border>
            </Canvas>
          </DataTemplate>
        </Setter.Value>
      </Setter>
      <Setter Property="RibbonStyle" Value="SmallWithText" />
      <Setter Property="SuperTip" Value="{dxdiag:DiagramItemToolTipProvider CaptionId=StrokeColor, DescriptionId=StrokeColor_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
        <Setter.Value>
          <DataTemplate>
            <ItemsControl>
              <dxdiagn:BarColorEditBehavior EditablePropertyName="{x:Static dxdiagcore:DiagramItemController.StrokePropertyName}" Diagram="{Binding Path=(dxdiag:DiagramControl.Diagram), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxb:BarSplitButtonItem}}}" ColorEditUnit="{Binding Path=PopupControl.Tag, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxb:BarSplitButtonItem}}}" />
            </ItemsControl>
          </DataTemplate>
        </Setter.Value>
      </Setter>
      <Setter Property="PopupControl">
        <Setter.Value>
          <dxmvvm:ValueFactory>
            <DataTemplate>
              <dxb:PopupControlContainer Tag="{Binding ElementName=strokeColorEditBehavior, Path=EditorColor}">
                <dxdiagn:ExtendedColorEdit AllowNullInput="True" ShowDefaultColorButton="False" ShowBorder="False" Palettes="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Theme, Converter={dxdiagn:DiagramThemeToColorEditPaletteConverter}}">
                  <dxmvvm:Interaction.Behaviors>
                    <dxdiagn:DiagramColorEditBehavior x:Name="strokeColorEditBehavior" EditablePropertyName="{x:Static dxdiagcore:DiagramItemController.StrokePropertyName}" Diagram="{Binding Path=(dxdiag:DiagramControl.Diagram), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxdiagn:ExtendedColorEdit}}}" DiagramColor="{Binding Path=(dxdiag:DiagramControl.Diagram).SelectionToolsModel[StrokeColor], RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxdiagn:ExtendedColorEdit}}}" />
                  </dxmvvm:Interaction.Behaviors>
                </dxdiagn:ExtendedColorEdit>
              </dxb:PopupControlContainer>
            </DataTemplate>
          </dxmvvm:ValueFactory>
        </Setter.Value>
      </Setter>
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeItemStroke" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=InsertContainerButtonStyle}" TargetType="{x:Type dxb:BarSplitButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString InsertContainer}" />
      <Setter Property="ActAsDropDown" Value="True" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/InsertContainer.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/InsertContainer.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="SuperTip" Value="{dxdiag:DiagramItemToolTipProvider CaptionId=InsertContainer, DescriptionId=InsertContainer_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="PopupControl">
        <Setter.Value>
          <dxmvvm:ValueFactory>
            <DataTemplate>
              <dxb:PopupControlContainer CloseOnClick="True">
                <dxb:GalleryControl BorderThickness="0" BorderBrush="Transparent">
                  <dxb:GalleryControl.Resources>
                    <Style TargetType="{x:Type dxb:Gallery}" x:Key="insertContainerGalleryStyle" BasedOn="{StaticResource containerGalleryStyleBase}">
                      <Setter Property="ColCount" Value="4" />
                      <Setter Property="ItemCheckMode" Value="Single" />
                    </Style>
                  </dxb:GalleryControl.Resources>
                  <dxb:GalleryControl.Gallery>
                    <dxb:Gallery Style="{StaticResource insertContainerGalleryStyle}">
                      <dxmvvm:Interaction.Behaviors>
                        <dxdiagn:SelectContainerToolsBehavior ToolsPageName="{x:Static dxdiagcore:DefaultBarItemNames.ContainerToolsRibbonPage}" />
                      </dxmvvm:Interaction.Behaviors>
                      <dxb:GalleryItemGroup ItemsSource="{x:Static dxdiagcore:DiagramContainerGalleryRegistrator.Shapes}" ItemTemplate="{StaticResource galleryControlItemTemplate}" />
                    </dxb:Gallery>
                  </dxb:GalleryControl.Gallery>
                </dxb:GalleryControl>
              </dxb:PopupControlContainer>
            </DataTemplate>
          </dxmvvm:ValueFactory>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=InsertListStyle}" TargetType="{x:Type dxb:BarSplitButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString InsertList}" />
      <Setter Property="ActAsDropDown" Value="True" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/InsertList.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/InsertList.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="SuperTip" Value="{dxdiag:DiagramItemToolTipProvider CaptionId=InsertList, DescriptionId=InsertList_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="PopupControl">
        <Setter.Value>
          <dxmvvm:ValueFactory>
            <DataTemplate>
              <dxb:PopupControlContainer CloseOnClick="True">
                <dxb:GalleryControl BorderThickness="0" BorderBrush="Transparent">
                  <dxb:GalleryControl.Resources>
                    <Style TargetType="{x:Type dxb:Gallery}" x:Key="insertListGalleryStyle" BasedOn="{StaticResource listGalleryStyleBase}">
                      <Setter Property="ColCount" Value="4" />
                      <Setter Property="ItemCheckMode" Value="Single" />
                    </Style>
                  </dxb:GalleryControl.Resources>
                  <dxb:GalleryControl.Gallery>
                    <dxb:Gallery Style="{StaticResource insertListGalleryStyle}">
                      <dxmvvm:Interaction.Behaviors>
                        <dxdiagn:SelectListToolsBehavior ToolsPageName="{x:Static dxdiagcore:DefaultBarItemNames.ContainerToolsRibbonPage}" />
                      </dxmvvm:Interaction.Behaviors>
                      <dxb:GalleryItemGroup ItemsSource="{x:Static dxdiagcore:DiagramContainerGalleryRegistrator.Shapes}" ItemTemplate="{StaticResource galleryControlItemTemplate}" Caption="{dxdiag:DiagramControlLocalizedString ListOrientation_Vertical}">
                        <dxb:GalleryItemGroup.Tag>
                          <dxdiagcore:OrientationKind>Vertical</dxdiagcore:OrientationKind>
                        </dxb:GalleryItemGroup.Tag>
                      </dxb:GalleryItemGroup>
                      <dxb:GalleryItemGroup ItemsSource="{x:Static dxdiagcore:DiagramContainerGalleryRegistrator.Shapes}" ItemTemplate="{StaticResource galleryControlItemTemplate}" Caption="{dxdiag:DiagramControlLocalizedString ListOrientation_Horizontal}">
                        <dxb:GalleryItemGroup.Tag>
                          <dxdiagcore:OrientationKind>Horizontal</dxdiagcore:OrientationKind>
                        </dxb:GalleryItemGroup.Tag>
                      </dxb:GalleryItemGroup>
                    </dxb:Gallery>
                  </dxb:GalleryControl.Gallery>
                </dxb:GalleryControl>
              </dxb:PopupControlContainer>
            </DataTemplate>
          </dxmvvm:ValueFactory>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=SetPageSizeButtonStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SetPageParameters_PageSizeCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/PageSize.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/PageSize.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=ShowRulerItemStyle}" TargetType="{x:Type dxb:BarEditItem}">
    <Style.Setters>
      <Setter Property="EditValue" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).ShowRulers}" />
      <Setter Property="EditHorizontalAlignment" Value="Left" />
      <Setter Property="CustomizationContent" Value="{dxdiag:DiagramControlLocalizedString ShowRulers}" />
      <Setter Property="CustomizationGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/Check.svg}" />
      <Setter Property="SuperTip" Value="{dxdiag:DiagramItemToolTipProvider CaptionId=ShowRulers, DescriptionId=ShowRulers_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="EditSettings">
        <Setter.Value>
          <dxmvvm:ValueFactory>
            <DataTemplate>
              <dxe:CheckEditSettings Content="{dxdiag:DiagramControlLocalizedString ShowRulers}" />
            </DataTemplate>
          </dxmvvm:ValueFactory>
        </Setter.Value>
      </Setter>
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeRulerVisibility" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=ShowGridItemStyle}" TargetType="{x:Type dxb:BarEditItem}">
    <Style.Setters>
      <Setter Property="EditValue" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).ShowGrid}" />
      <Setter Property="EditHorizontalAlignment" Value="Left" />
      <Setter Property="CustomizationContent" Value="{dxdiag:DiagramControlLocalizedString ShowGrid}" />
      <Setter Property="CustomizationGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/Check.svg}" />
      <Setter Property="SuperTip" Value="{dxdiag:DiagramItemToolTipProvider CaptionId=ShowGrid, DescriptionId=ShowGrid_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="EditSettings">
        <Setter.Value>
          <dxmvvm:ValueFactory>
            <DataTemplate>
              <dxe:CheckEditSettings Content="{dxdiag:DiagramControlLocalizedString ShowGrid}" />
            </DataTemplate>
          </dxmvvm:ValueFactory>
        </Setter.Value>
      </Setter>
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeGridVisibility" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=ShowPageBreaksItemStyle}" TargetType="{x:Type dxb:BarEditItem}">
    <Style.Setters>
      <Setter Property="EditValue" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).ShowPageBreaks}" />
      <Setter Property="EditHorizontalAlignment" Value="Left" />
      <Setter Property="CustomizationContent" Value="{dxdiag:DiagramControlLocalizedString ShowPageBreaks}" />
      <Setter Property="CustomizationGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/Check.svg}" />
      <Setter Property="SuperTip" Value="{dxdiag:DiagramItemToolTipProvider CaptionId=ShowPageBreaks, DescriptionId=ShowPageBreaks_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="EditSettings">
        <Setter.Value>
          <dxmvvm:ValueFactory>
            <DataTemplate>
              <dxe:CheckEditSettings Content="{dxdiag:DiagramControlLocalizedString ShowPageBreaks}" />
            </DataTemplate>
          </dxmvvm:ValueFactory>
        </Setter.Value>
      </Setter>
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangePageBreaksVisibility" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=ImageToolsBringToFrontContainerStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=BringToFrontCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/BringToFront.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=ImageToolsRotateStyle}" BasedOn="{StaticResource {dxdiagt:DiagramDesignerControlBaseThemeKeys ResourceKey=ImageToolsRotateStyleBase}}" TargetType="{x:Type dxb:BarSubItem}" />
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=ImageToolsSendToBackContainerStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SendToBackCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/SendToBack.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=ContainerPaddingBarItemStyle}" BasedOn="{StaticResource {dxdiagt:DiagramDesignerControlBaseThemeKeys ResourceKey=ContainerPaddingStyleBase}}" TargetType="{x:Type dxb:BarSubItem}">
    <Style.Setters>
      <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
        <Setter.Value>
          <DataTemplate>
            <ItemsControl>
              <dxdiagn:SetPaddingBarSubItemBehavior Diagram="{Binding Path=(dxdiag:DiagramControl.Diagram), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxb:BarSubItem}}}" />
            </ItemsControl>
          </DataTemplate>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=ContainerHeaderPaddingBarItemStyle}" BasedOn="{StaticResource {dxdiagt:DiagramDesignerControlBaseThemeKeys ResourceKey=ContainerHeaderPaddingStyleBase}}" TargetType="{x:Type dxb:BarSubItem}">
    <Style.Setters>
      <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
        <Setter.Value>
          <DataTemplate>
            <ItemsControl>
              <dxdiagn:SetHeaderPaddingBarSubItemBehavior Diagram="{Binding Path=(dxdiag:DiagramControl.Diagram), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxb:BarSubItem}}}" />
            </ItemsControl>
          </DataTemplate>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=ListOrientationStyle}" BasedOn="{StaticResource {dxdiagt:DiagramDesignerControlBaseThemeKeys ResourceKey=ListOrientationStyleBase}}" TargetType="{x:Type dxb:BarSubItem}">
    <Style.Setters>
      <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
        <Setter.Value>
          <DataTemplate>
            <ItemsControl>
              <dxdiagn:SetListOrientationBehavior Diagram="{Binding Path=(dxdiag:DiagramControl.Diagram), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxb:BarSubItem}}}" />
              <dxdiagn:BarSubItemListOrientationVisibilityBehavior Diagram="{Binding Path=(dxdiag:DiagramControl.Diagram), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxb:BarSubItem}}}" />
            </ItemsControl>
          </DataTemplate>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ListOrientation_HorizontalItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ListOrientation_HorizontalItemStyleBase}}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.SetSelectedListsOrientation}" />
      <Setter Property="CommandParameter" Value="Horizontal" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ListOrientation_VerticalItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ListOrientation_VerticalItemStyleBase}}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.SetSelectedListsOrientation}" />
      <Setter Property="CommandParameter" Value="Vertical" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=PanesStyle}" BasedOn="{StaticResource {dxdiagt:DiagramDesignerControlBaseThemeKeys ResourceKey=PanesStyleBase}}" TargetType="{x:Type dxb:BarSubItem}" />
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=ShapesPanelStyle}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString ShapesPanel}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=ShapesPanel_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="IsChecked" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).ToolboxVisibility,                  Converter={dxdiagn:ToolboxVisibilityConverter}, Mode=TwoWay}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/ShapesPanel.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/ShapesPanel.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="Large" />
      <Setter Property="SuperTip" Value="{dxdiag:DiagramItemToolTipProvider CaptionId=ShapesPanel, DescriptionId=ShapesPanel_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=PropertiesPanelStyle}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString PropertiesPanel}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=PropertiesPanel_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="IsChecked" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).PropertiesPanelVisibility,                  Converter={dxdiagn:PropertiesPanelVisibilityConverter}, Mode=TwoWay}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/PropertiesPanel.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/PropertiesPanel.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="Large" />
      <Setter Property="SuperTip" Value="{dxdiag:DiagramItemToolTipProvider CaptionId=PropertiesPanel, DescriptionId=PropertiesPanel_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=PanAndZoomPanelStyle}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString PanAndZoomPanel_SingleAmp}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=PanAndZoomPanel_SingleAmp_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="IsChecked" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).ShowPanAndZoomPanel, Mode=TwoWay}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/PanAndZoomPanel.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/PanAndZoomPanel.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="Large" />
      <Setter Property="SuperTip" Value="{dxdiag:DiagramItemToolTipProvider CaptionId=PanAndZoomPanel_SingleAmp, DescriptionId=PanAndZoomPanel_SingleAmp_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SaveFileCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SaveFileCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=UndoCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=UndoCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=RedoCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=RedoCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=NewFileCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=NewFileCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=OpenFileCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=OpenFileCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SaveFileAsCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SaveFileAsCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=PasteCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=PasteCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=CutCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=CutCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=CopyCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=CopyCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=IncreaseFontSizeCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=IncreaseFontSizeCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=DecreaseFontSizeCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=DecreaseFontSizeCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=BringForwardCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=BringForwardCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=BringToFrontCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=BringToFrontCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SendBackwardCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SendBackwardCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SendToBackCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SendToBackCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=FitToPageCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=FitToPageCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=FitToWidthCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=FitToWidthCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SetHorizontalAlignment_LeftCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SetHorizontalAlignment_LeftCommandItemStyleBase}}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Triggers>
      <DataTrigger Binding="{Binding Path=(dxdiag:DiagramControl.Diagram).SelectionToolsModel[TextAlignment], RelativeSource={RelativeSource Self}}" Value="{x:Static dxdiagcore:TextAlignmentKind.Left}">
        <Setter Property="IsChecked" Value="True" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SetHorizontalAlignment_CenterCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SetHorizontalAlignment_CenterCommandItemStyleBase}}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Triggers>
      <DataTrigger Binding="{Binding Path=(dxdiag:DiagramControl.Diagram).SelectionToolsModel[TextAlignment], RelativeSource={RelativeSource Self}}" Value="{x:Static dxdiagcore:TextAlignmentKind.Center}">
        <Setter Property="IsChecked" Value="True" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SetHorizontalAlignment_RightCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SetHorizontalAlignment_RightCommandItemStyleBase}}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Triggers>
      <DataTrigger Binding="{Binding Path=(dxdiag:DiagramControl.Diagram).SelectionToolsModel[TextAlignment], RelativeSource={RelativeSource Self}}" Value="{x:Static dxdiagcore:TextAlignmentKind.Right}">
        <Setter Property="IsChecked" Value="True" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SetHorizontalAlignment_JustifyCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SetHorizontalAlignment_JustifyCommandItemStyleBase}}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Triggers>
      <DataTrigger Binding="{Binding Path=(dxdiag:DiagramControl.Diagram).SelectionToolsModel[TextAlignment], RelativeSource={RelativeSource Self}}" Value="{x:Static dxdiagcore:TextAlignmentKind.Justify}">
        <Setter Property="IsChecked" Value="True" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SetVerticalAlignment_TopCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SetVerticalAlignment_TopCommandItemStyleBase}}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Triggers>
      <DataTrigger Binding="{Binding Path=(dxdiag:DiagramControl.Diagram).SelectionToolsModel[VerticalContentAlignment], RelativeSource={RelativeSource Self}}" Value="{x:Static dxdiagcore:VerticalAlignmentKind.Top}">
        <Setter Property="IsChecked" Value="True" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SetVerticalAlignment_CenterCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SetVerticalAlignment_CenterCommandItemStyleBase}}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Triggers>
      <DataTrigger Binding="{Binding Path=(dxdiag:DiagramControl.Diagram).SelectionToolsModel[VerticalContentAlignment], RelativeSource={RelativeSource Self}}" Value="{x:Static dxdiagcore:VerticalAlignmentKind.Center}">
        <Setter Property="IsChecked" Value="True" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SetVerticalAlignment_BottomCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SetVerticalAlignment_BottomCommandItemStyleBase}}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Triggers>
      <DataTrigger Binding="{Binding Path=(dxdiag:DiagramControl.Diagram).SelectionToolsModel[VerticalContentAlignment], RelativeSource={RelativeSource Self}}" Value="{x:Static dxdiagcore:VerticalAlignmentKind.Bottom}">
        <Setter Property="IsChecked" Value="True" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=TreeLayout_DownCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=TreeLayout_DownCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=TreeLayout_UpCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=TreeLayout_UpCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=TreeLayout_RightCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=TreeLayout_RightCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=TreeLayout_LeftCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=TreeLayout_LeftCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=TipOverTreeLayout_LeftToRightCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=TipOverTreeLayout_LeftToRightCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=TipOverTreeLayout_RightToLeftCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=TipOverTreeLayout_RightToLeftCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=MindMapTreeLayout_HorizontalCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=MindMapTreeLayout_HorizontalCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=MindMapTreeLayout_VerticalCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=MindMapTreeLayout_VerticalCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SugiyamaLayout_DownCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SugiyamaLayout_DownCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SugiyamaLayout_UpCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SugiyamaLayout_UpCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SugiyamaLayout_RightCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SugiyamaLayout_RightCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SugiyamaLayout_LeftCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SugiyamaLayout_LeftCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=CircularLayoutCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=CircularLayoutCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=ChangeConnectorTypeStyle}" BasedOn="{StaticResource {dxdiagt:DiagramDesignerControlBaseThemeKeys ResourceKey=ChangeConnectorTypeStyleBase}}" TargetType="{x:Type dxb:BarSubItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ChangeConnectorType_RightAngleCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ChangeConnectorType_RightAngleCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ChangeConnectorType_CurvedCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ChangeConnectorType_CurvedCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ChangeConnectorType_StraightCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ChangeConnectorType_StraightCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=ReLayoutPartsStyle}" BasedOn="{StaticResource {dxdiagt:DiagramDesignerControlBaseThemeKeys ResourceKey=ReLayoutPartsStyleBase}}" TargetType="{x:Type dxb:BarSubItem}" />
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=ReLayoutPartsTreeHeaderStyle}" BasedOn="{StaticResource {dxdiagt:DiagramDesignerControlBaseThemeKeys ResourceKey=ReLayoutPartsTreeHeaderStyleBase}}" TargetType="{x:Type dxb:BarItemLinkMenuHeader}" />
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=ReLayoutPartsTipOverTreeHeaderStyle}" BasedOn="{StaticResource {dxdiagt:DiagramDesignerControlBaseThemeKeys ResourceKey=ReLayoutPartsTipOverTreeHeaderStyleBase}}" TargetType="{x:Type dxb:BarItemLinkMenuHeader}" />
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=ReLayoutPartsMindMapTreeHeaderStyle}" BasedOn="{StaticResource {dxdiagt:DiagramDesignerControlBaseThemeKeys ResourceKey=ReLayoutPartsMindMapTreeHeaderStyleBase}}" TargetType="{x:Type dxb:BarItemLinkMenuHeader}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=TipOverTreeLayoutForSubordinates_LeftToRightCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=TipOverTreeLayoutForSubordinates_LeftToRightCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=TipOverTreeLayoutForSubordinates_RightToLeftCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=TipOverTreeLayoutForSubordinates_RightToLeftCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=TreeLayoutForSubordinates_TopToBottomCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=TreeLayoutForSubordinates_TopToBottomCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=TreeLayoutForSubordinates_BottomToTopCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=TreeLayoutForSubordinates_BottomToTopCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=TreeLayoutForSubordinates_RightToLeftCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=TreeLayoutForSubordinates_RightToLeftCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=TreeLayoutForSubordinates_LeftToRightCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=TreeLayoutForSubordinates_LeftToRightCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=MindMapTreeLayoutForSubordinates_HorizontalCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=MindMapTreeLayoutForSubordinates_HorizontalCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=MindMapTreeLayoutForSubordinates_VerticalCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=MindMapTreeLayoutForSubordinates_VerticalCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SelectTool_PointerToolCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SelectTool_PointerToolCommandItemStyleBase}}" TargetType="{x:Type dxb:BarCheckItem}">
    <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
      <Setter.Value>
        <DataTemplate>
          <ItemsControl>
            <dxdiagn:BarItemToolBehavior Tool="{x:Static dxdiagcore:DiagramController.DefaultTool}" ActiveTool="{Binding RelativeSource={RelativeSource AncestorType={x:Type dxb:BarCheckItem}}, Path=(dxdiag:DiagramControl.Diagram).ActiveTool, Mode=TwoWay}" />
          </ItemsControl>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SelectTool_ConnectorToolCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SelectTool_ConnectorToolCommandItemStyleBase}}" TargetType="{x:Type dxb:BarCheckItem}">
    <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
      <Setter.Value>
        <DataTemplate>
          <ItemsControl>
            <dxdiagn:BarItemToolBehavior Tool="{Binding RelativeSource={RelativeSource AncestorType={x:Type dxb:BarCheckItem}}, Path=(dxdiag:DiagramControl.Diagram).ConnectorTool}" ActiveTool="{Binding RelativeSource={RelativeSource AncestorType={x:Type dxb:BarCheckItem}}, Path=(dxdiag:DiagramControl.Diagram).ActiveTool, Mode=TwoWay }" />
          </ItemsControl>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SelectTool_RectangleToolCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SelectTool_RectangleToolCommandItemStyleBase}}" TargetType="{x:Type dxb:BarCheckItem}">
    <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
      <Setter.Value>
        <DataTemplate>
          <ItemsControl>
            <dxdiagn:BarItemToolBehavior Tool="{Binding RelativeSource={RelativeSource AncestorType={x:Type dxb:BarCheckItem}}, Path=(dxdiag:DiagramControl.Diagram).RectangleTool}" ActiveTool="{Binding RelativeSource={RelativeSource AncestorType={x:Type dxb:BarCheckItem}}, Path=(dxdiag:DiagramControl.Diagram).ActiveTool, Mode=TwoWay}" />
          </ItemsControl>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SelectTool_EllipseToolCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SelectTool_EllipseToolCommandItemStyleBase}}" TargetType="{x:Type dxb:BarCheckItem}">
    <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
      <Setter.Value>
        <DataTemplate>
          <ItemsControl>
            <dxdiagn:BarItemToolBehavior Tool="{Binding RelativeSource={RelativeSource AncestorType={x:Type dxb:BarCheckItem}}, Path=(dxdiag:DiagramControl.Diagram).EllipseTool}" ActiveTool="{Binding RelativeSource={RelativeSource AncestorType={x:Type dxb:BarCheckItem}}, Path=(dxdiag:DiagramControl.Diagram).ActiveTool, Mode=TwoWay}" />
          </ItemsControl>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SelectTool_RightTriangleToolCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SelectTool_RightTriangleToolCommandItemStyleBase}}" TargetType="{x:Type dxb:BarCheckItem}">
    <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
      <Setter.Value>
        <DataTemplate>
          <ItemsControl>
            <dxdiagn:BarItemToolBehavior Tool="{Binding RelativeSource={RelativeSource AncestorType={x:Type dxb:BarCheckItem}}, Path=(dxdiag:DiagramControl.Diagram).RightTriangleTool}" ActiveTool="{Binding RelativeSource={RelativeSource AncestorType={x:Type dxb:BarCheckItem}}, Path=(dxdiag:DiagramControl.Diagram).ActiveTool, Mode=TwoWay}" />
          </ItemsControl>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SelectTool_HexagonToolCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SelectTool_HexagonToolCommandItemStyleBase}}" TargetType="{x:Type dxb:BarCheckItem}">
    <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
      <Setter.Value>
        <DataTemplate>
          <ItemsControl>
            <dxdiagn:BarItemToolBehavior Tool="{Binding RelativeSource={RelativeSource AncestorType={x:Type dxb:BarCheckItem}}, Path=(dxdiag:DiagramControl.Diagram).HexagonTool}" ActiveTool="{Binding RelativeSource={RelativeSource AncestorType={x:Type dxb:BarCheckItem}}, Path=(dxdiag:DiagramControl.Diagram).ActiveTool, Mode=TwoWay}" />
          </ItemsControl>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SelectTool_PanToolCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SelectTool_PanToolCommandItemStyleBase}}" TargetType="{x:Type dxb:BarCheckItem}">
    <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
      <Setter.Value>
        <DataTemplate>
          <ItemsControl>
            <dxdiagn:BarItemToolBehavior Tool="{x:Static dxdiagcore:DiagramController.PanTool}" ActiveTool="{Binding RelativeSource={RelativeSource AncestorType={x:Type dxb:BarCheckItem}}, Path=(dxdiag:DiagramControl.Diagram).ActiveTool, Mode=TwoWay}" />
          </ItemsControl>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SelectTool_TextToolCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SelectTool_TextToolCommandItemStyleBase}}" TargetType="{x:Type dxb:BarCheckItem}">
    <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
      <Setter.Value>
        <DataTemplate>
          <ItemsControl>
            <dxdiagn:BarItemToolBehavior Tool="{x:Static dxdiagcore:DiagramController.TextTool}" ActiveTool="{Binding RelativeSource={RelativeSource AncestorType={x:Type dxb:BarCheckItem}}, Path=(dxdiag:DiagramControl.Diagram).ActiveTool, Mode=TwoWay}" />
          </ItemsControl>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=FitToDrawingCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=FitToDrawingCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=Rotate_Left90CommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=Rotate_Left90CommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=Rotate_Right90CommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=Rotate_Right90CommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=FlipImage_VerticalCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=FlipImage_VerticalCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=FlipImage_HorizontalCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=FlipImage_HorizontalCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=ExportAsStyle}" TargetType="{x:Type dxb:BarSplitButtonItem}">
    <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/ExportAs.svg}" />
    <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/ExportAs.svg}" />
    <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString ExportAs}" />
    <Setter Property="Description" Value="{Binding ConverterParameter=ExportAs_Description, Converter={StaticResource DiagramStringIdConverter}}" />
    <Setter Property="GlyphSize" Value="Large" />
    <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.ExportDiagram}" />
    <Setter Property="CommandParameter" Value="PNG" />
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ExportDiagram_PNGCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ExportDiagram_PNGCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ExportDiagram_JPEGCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ExportDiagram_JPEGCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ExportDiagram_BMPCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ExportDiagram_BMPCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ExportDiagram_GIFCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ExportDiagram_GIFCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ExportToPdfCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ExportToPdfCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ExportToSvgCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ExportToSvgCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <!--<Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ExportDiagram_WMFCommandItemStyle}" 
           BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ExportDiagram_WMFCommandItemStyleBase}}"
           TargetType="{x:Type dxb:BarButtonItem}">
    </Style>-->
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=PrintMenuStyle}" TargetType="{x:Type dxb:BarSplitButtonItem}">
    <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/Print.svg}" />
    <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/Print.svg}" />
    <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString PrintMenu}" />
    <Setter Property="Description" Value="{Binding ConverterParameter=PrintMenu_Description, Converter={StaticResource DiagramStringIdConverter}}" />
    <Setter Property="GlyphSize" Value="Large" />
    <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.Print}" />
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=PrintCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=PrintCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=QuickPrintCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=QuickPrintCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ShowPrintPreviewCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ShowPrintPreviewCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=AutoSize_AutoSizeItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=AutoSize_AutoSizeItemStyleBase}}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="AllowUncheckInGroup" Value="False" />
      <Setter Property="Content" Value="{x:Static dxdiagn:CanvasSizeModeInfo.AutoSize}" />
      <Setter Property="IsChecked" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).RootToolsModel[CanvasSizeMode], Converter={dxdiagn:AutoSizeConverter}, ConverterParameter=AutoSize, Mode=TwoWay}" />
      <Setter Property="ContentTemplate" Value="{StaticResource AutoSizeContentTemplate}" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=AutoSize_FillItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=AutoSize_FillItemStyleBase}}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="AllowUncheckInGroup" Value="False" />
      <Setter Property="Content" Value="{x:Static dxdiagn:CanvasSizeModeInfo.Fill}" />
      <Setter Property="IsChecked" Value="{Binding                 Path=(dxdiag:DiagramControl.Diagram).RootToolsModel[CanvasSizeMode],                 RelativeSource={RelativeSource Self},                 Converter={dxdiagn:AutoSizeConverter},                 ConverterParameter=Fill,                 Mode=TwoWay}" />
      <Setter Property="ContentTemplate" Value="{StaticResource AutoSizeContentTemplate}" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=AutoSize_NoneItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=AutoSize_NoneItemStyleBase}}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="AllowUncheckInGroup" Value="False" />
      <Setter Property="Content" Value="{x:Static dxdiagn:CanvasSizeModeInfo.None}" />
      <Setter Property="IsChecked" Value="{Binding                 Path=(dxdiag:DiagramControl.Diagram).RootToolsModel[CanvasSizeMode],                 RelativeSource={RelativeSource Self},                 Converter={dxdiagn:AutoSizeConverter},                 ConverterParameter=None,                 Mode=TwoWay}" />
      <Setter Property="ContentTemplate" Value="{StaticResource AutoSizeContentTemplate}" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=PageOrientation_HorizontalItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=PageOrientation_HorizontalItemStyleBase}}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="AllowUncheckInGroup" Value="False" />
      <Setter Property="IsChecked" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).RootToolsModel[PageSize],                  Converter={dxdiagn:PaperOrientationConverter}, ConverterParameter=Horizontal, Mode=TwoWay}" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=PageOrientation_VerticalItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=PageOrientation_VerticalItemStyleBase}}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="AllowUncheckInGroup" Value="False" />
      <Setter Property="IsChecked" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).RootToolsModel[PageSize],                  Converter={dxdiagn:PaperOrientationConverter}, ConverterParameter=Vertical, Mode=TwoWay}" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=PageSize_A3ItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=PageSize_A3ItemStyleBase}}" TargetType="{x:Type dxdiag:BarMouseCheckOnlyItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiagn:RibbonPageSizeContentProvider PaperKind=A3}" />
      <Setter Property="IsChecked" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).RootToolsModel[PageSize],                  Converter={dxdiagn:SelectedPaperSizeConverter}, ConverterParameter=A3, Mode=TwoWay}" />
      <Setter Property="ContentTemplate" Value="{StaticResource PageSizeContentTemplate}" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=PageSize_A4ItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=PageSize_A4ItemStyleBase}}" TargetType="{x:Type dxdiag:BarMouseCheckOnlyItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiagn:RibbonPageSizeContentProvider PaperKind=A4}" />
      <Setter Property="IsChecked" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).RootToolsModel[PageSize],                  Converter={dxdiagn:SelectedPaperSizeConverter}, ConverterParameter=A4, Mode=TwoWay}" />
      <Setter Property="ContentTemplate" Value="{StaticResource PageSizeContentTemplate}" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=PageSize_A5ItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=PageSize_A5ItemStyleBase}}" TargetType="{x:Type dxdiag:BarMouseCheckOnlyItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiagn:RibbonPageSizeContentProvider PaperKind=A5}" />
      <Setter Property="IsChecked" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).RootToolsModel[PageSize],                  Converter={dxdiagn:SelectedPaperSizeConverter}, ConverterParameter=A5, Mode=TwoWay}" />
      <Setter Property="ContentTemplate" Value="{StaticResource PageSizeContentTemplate}" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=PageSize_B4ItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=PageSize_B4ItemStyleBase}}" TargetType="{x:Type dxdiag:BarMouseCheckOnlyItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiagn:RibbonPageSizeContentProvider PaperKind=B4}" />
      <Setter Property="IsChecked" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).RootToolsModel[PageSize],                  Converter={dxdiagn:SelectedPaperSizeConverter}, ConverterParameter=B4, Mode=TwoWay}" />
      <Setter Property="ContentTemplate" Value="{StaticResource PageSizeContentTemplate}" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=PageSize_B5ItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=PageSize_B5ItemStyleBase}}" TargetType="{x:Type dxdiag:BarMouseCheckOnlyItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiagn:RibbonPageSizeContentProvider PaperKind=B5}" />
      <Setter Property="IsChecked" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).RootToolsModel[PageSize],                  Converter={dxdiagn:SelectedPaperSizeConverter}, ConverterParameter=B5, Mode=TwoWay}" />
      <Setter Property="ContentTemplate" Value="{StaticResource PageSizeContentTemplate}" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=PageSize_ExecutiveItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=PageSize_ExecutiveItemStyleBase}}" TargetType="{x:Type dxdiag:BarMouseCheckOnlyItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiagn:RibbonPageSizeContentProvider PaperKind=Executive}" />
      <Setter Property="IsChecked" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).RootToolsModel[PageSize],                  Converter={dxdiagn:SelectedPaperSizeConverter}, ConverterParameter=Executive, Mode=TwoWay}" />
      <Setter Property="ContentTemplate" Value="{StaticResource PageSizeContentTemplate}" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=PageSize_LegalItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=PageSize_LegalItemStyleBase}}" TargetType="{x:Type dxdiag:BarMouseCheckOnlyItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiagn:RibbonPageSizeContentProvider PaperKind=Legal}" />
      <Setter Property="IsChecked" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).RootToolsModel[PageSize],                  Converter={dxdiagn:SelectedPaperSizeConverter}, ConverterParameter=Legal, Mode=TwoWay}" />
      <Setter Property="ContentTemplate" Value="{StaticResource PageSizeContentTemplate}" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=PageSize_LetterItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=PageSize_LetterItemStyleBase}}" TargetType="{x:Type dxdiag:BarMouseCheckOnlyItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiagn:RibbonPageSizeContentProvider PaperKind=Letter}" />
      <Setter Property="IsChecked" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).RootToolsModel[PageSize],                  Converter={dxdiagn:SelectedPaperSizeConverter}, ConverterParameter=Letter, Mode=TwoWay}" />
      <Setter Property="ContentTemplate" Value="{StaticResource PageSizeContentTemplate}" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=PageSize_StatementItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=PageSize_StatementItemStyleBase}}" TargetType="{x:Type dxdiag:BarMouseCheckOnlyItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiagn:RibbonPageSizeContentProvider PaperKind=Statement}" />
      <Setter Property="IsChecked" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).RootToolsModel[PageSize],                  Converter={dxdiagn:SelectedPaperSizeConverter}, ConverterParameter=Statement, Mode=TwoWay}" />
      <Setter Property="ContentTemplate" Value="{StaticResource PageSizeContentTemplate}" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=PageSize_TabloidItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=PageSize_TabloidItemStyleBase}}" TargetType="{x:Type dxdiag:BarMouseCheckOnlyItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiagn:RibbonPageSizeContentProvider PaperKind=Tabloid}" />
      <Setter Property="IsChecked" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).RootToolsModel[PageSize],                  Converter={dxdiagn:SelectedPaperSizeConverter}, ConverterParameter=Tabloid, Mode=TwoWay}" />
      <Setter Property="ContentTemplate" Value="{StaticResource PageSizeContentTemplate}" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ContainerPadding_P0ItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ContainerPadding_P0ItemStyleBase}}" TargetType="{x:Type dxdiag:BarMouseCheckOnlyItem}">
    <Style.Setters>
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.SetSelectedContainersPadding}" />
      <Setter Property="CommandParameter" Value="0" />
      <Setter Property="GlyphSize" Value="Small" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ContainerPadding_P4ItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ContainerPadding_P4ItemStyleBase}}" TargetType="{x:Type dxdiag:BarMouseCheckOnlyItem}">
    <Style.Setters>
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.SetSelectedContainersPadding}" />
      <Setter Property="CommandParameter" Value="4" />
      <Setter Property="GlyphSize" Value="Small" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ContainerPadding_P8ItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ContainerPadding_P8ItemStyleBase}}" TargetType="{x:Type dxdiag:BarMouseCheckOnlyItem}">
    <Style.Setters>
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.SetSelectedContainersPadding}" />
      <Setter Property="CommandParameter" Value="8" />
      <Setter Property="GlyphSize" Value="Small" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ContainerPadding_P12ItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ContainerPadding_P12ItemStyleBase}}" TargetType="{x:Type dxdiag:BarMouseCheckOnlyItem}">
    <Style.Setters>
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.SetSelectedContainersPadding}" />
      <Setter Property="CommandParameter" Value="12" />
      <Setter Property="GlyphSize" Value="Small" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ContainerPadding_P16ItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ContainerPadding_P16ItemStyleBase}}" TargetType="{x:Type dxdiag:BarMouseCheckOnlyItem}">
    <Style.Setters>
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.SetSelectedContainersPadding}" />
      <Setter Property="CommandParameter" Value="16" />
      <Setter Property="GlyphSize" Value="Small" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ContainerPadding_P24ItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ContainerPadding_P24ItemStyleBase}}" TargetType="{x:Type dxdiag:BarMouseCheckOnlyItem}">
    <Style.Setters>
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.SetSelectedContainersPadding}" />
      <Setter Property="CommandParameter" Value="24" />
      <Setter Property="GlyphSize" Value="Small" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ContainerPadding_P32ItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ContainerPadding_P32ItemStyleBase}}" TargetType="{x:Type dxdiag:BarMouseCheckOnlyItem}">
    <Style.Setters>
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.SetSelectedContainersPadding}" />
      <Setter Property="CommandParameter" Value="32" />
      <Setter Property="GlyphSize" Value="Small" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ContainerHeaderPadding_P0ItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ContainerHeaderPadding_P0ItemStyleBase}}" TargetType="{x:Type dxdiag:BarMouseCheckOnlyItem}">
    <Style.Setters>
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.SetSelectedContainersHeaderPadding}" />
      <Setter Property="CommandParameter" Value="0" />
      <Setter Property="GlyphSize" Value="Small" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ContainerHeaderPadding_P4ItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ContainerHeaderPadding_P4ItemStyleBase}}" TargetType="{x:Type dxdiag:BarMouseCheckOnlyItem}">
    <Style.Setters>
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.SetSelectedContainersHeaderPadding}" />
      <Setter Property="CommandParameter" Value="4" />
      <Setter Property="GlyphSize" Value="Small" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ContainerHeaderPadding_P8ItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ContainerHeaderPadding_P8ItemStyleBase}}" TargetType="{x:Type dxdiag:BarMouseCheckOnlyItem}">
    <Style.Setters>
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.SetSelectedContainersHeaderPadding}" />
      <Setter Property="CommandParameter" Value="8" />
      <Setter Property="GlyphSize" Value="Small" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ContainerHeaderPadding_P12ItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ContainerHeaderPadding_P12ItemStyleBase}}" TargetType="{x:Type dxdiag:BarMouseCheckOnlyItem}">
    <Style.Setters>
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.SetSelectedContainersHeaderPadding}" />
      <Setter Property="CommandParameter" Value="12" />
      <Setter Property="GlyphSize" Value="Small" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ContainerHeaderPadding_P16ItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ContainerHeaderPadding_P16ItemStyleBase}}" TargetType="{x:Type dxdiag:BarMouseCheckOnlyItem}">
    <Style.Setters>
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.SetSelectedContainersHeaderPadding}" />
      <Setter Property="CommandParameter" Value="16" />
      <Setter Property="GlyphSize" Value="Small" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ContainerHeaderPadding_P24ItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ContainerHeaderPadding_P24ItemStyleBase}}" TargetType="{x:Type dxdiag:BarMouseCheckOnlyItem}">
    <Style.Setters>
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.SetSelectedContainersHeaderPadding}" />
      <Setter Property="CommandParameter" Value="24" />
      <Setter Property="GlyphSize" Value="Small" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ContainerHeaderPadding_P32ItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ContainerHeaderPadding_P32ItemStyleBase}}" TargetType="{x:Type dxdiag:BarMouseCheckOnlyItem}">
    <Style.Setters>
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.SetSelectedContainersHeaderPadding}" />
      <Setter Property="CommandParameter" Value="32" />
      <Setter Property="GlyphSize" Value="Small" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlPageCategoriesThemeKeys ResourceKey=ImageToolsPageCategoryStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlPageCategoriesThemeKeys ResourceKey=ImageToolsPageCategoryStyleBase}}" TargetType="{x:Type dxr:RibbonPageCategory}" />
  <Style x:Key="{dxdiagt:DesignerControlPageCategoriesThemeKeys ResourceKey=ContainerToolsPageCategoryStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlPageCategoriesThemeKeys ResourceKey=ContainerToolsPageCategoryStyleBase}}" TargetType="{x:Type dxr:RibbonPageCategory}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=InsertImageCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=InsertImageCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
        <Setter.Value>
          <DataTemplate>
            <ItemsControl>
              <dxdiagn:SelectImageToolsBehavior ToolsPageName="{x:Static dxdiagcore:DefaultBarItemNames.ImageToolsRibbonPage}" />
            </ItemsControl>
          </DataTemplate>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=LoadImageCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=LoadImageCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=ImageToolsStretchModeStyle}" BasedOn="{StaticResource {dxdiagt:DiagramDesignerControlBaseThemeKeys ResourceKey=ImageToolsStretchModeStyleBase}}" TargetType="{x:Type dxb:BarSubItem}">
    <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
      <Setter.Value>
        <DataTemplate>
          <ItemsControl>
            <dxdiagn:SetStretchModeBarSubItemBehavior Diagram="{Binding Path=(dxdiag:DiagramControl.Diagram), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxb:BarSubItem}}}" />
          </ItemsControl>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SetSelectedImagesStretchMode_StretchCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SetSelectedImagesStretchMode_StretchCommandItemStyleBase}}" TargetType="{x:Type dxb:BarCheckItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SetSelectedImagesStretchMode_UniformCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SetSelectedImagesStretchMode_UniformCommandItemStyleBase}}" TargetType="{x:Type dxb:BarCheckItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SetSelectedImagesStretchMode_UniformToFillCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SetSelectedImagesStretchMode_UniformToFillCommandItemStyleBase}}" TargetType="{x:Type dxb:BarCheckItem}" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ResetSelectedImagesCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ResetSelectedImagesCommandItemStyleBase}}" TargetType="{x:Type dxb:BarButtonItem}" />
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=ImageToolsSetImageScaleItemStyle}" BasedOn="{StaticResource {dxdiagt:DiagramDesignerControlBaseThemeKeys ResourceKey=ImageToolsSetImageScaleStyleBase}}" TargetType="{x:Type dxb:BarSubItem}">
    <Setter Property="RibbonStyle" Value="Large" />
    <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
      <Setter.Value>
        <DataTemplate>
          <ItemsControl>
            <dxdiagn:SetImageScaleBarSubItemBehavior Diagram="{Binding Path=(dxdiag:DiagramControl.Diagram), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxb:BarSubItem}}}" />
          </ItemsControl>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ImageToolsSetImageScale_0_25ItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ImageToolsSetImageScale_0_25ItemStyleBase}}" TargetType="{x:Type dxb:BarCheckItem}">
    <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.SetSelectedImagesScale}" />
    <Setter Property="CommandParameter" Value="0.25" />
    <Setter Property="GlyphSize" Value="Small" />
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ImageToolsSetImageScale_0_5ItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ImageToolsSetImageScale_0_5ItemStyleBase}}" TargetType="{x:Type dxb:BarCheckItem}">
    <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.SetSelectedImagesScale}" />
    <Setter Property="CommandParameter" Value="0.5" />
    <Setter Property="GlyphSize" Value="Small" />
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ImageToolsSetImageScale_0_75ItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ImageToolsSetImageScale_0_75ItemStyleBase}}" TargetType="{x:Type dxb:BarCheckItem}">
    <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.SetSelectedImagesScale}" />
    <Setter Property="CommandParameter" Value="0.75" />
    <Setter Property="GlyphSize" Value="Small" />
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ImageToolsSetImageScale_1ItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ImageToolsSetImageScale_1ItemStyleBase}}" TargetType="{x:Type dxb:BarCheckItem}">
    <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.SetSelectedImagesScale}" />
    <Setter Property="CommandParameter" Value="1" />
    <Setter Property="GlyphSize" Value="Small" />
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ImageToolsSetImageScale_1_5ItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ImageToolsSetImageScale_1_5ItemStyleBase}}" TargetType="{x:Type dxb:BarCheckItem}">
    <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.SetSelectedImagesScale}" />
    <Setter Property="CommandParameter" Value="1.5" />
    <Setter Property="GlyphSize" Value="Small" />
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ImageToolsSetImageScale_2ItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ImageToolsSetImageScale_2ItemStyleBase}}" TargetType="{x:Type dxb:BarCheckItem}">
    <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.SetSelectedImagesScale}" />
    <Setter Property="CommandParameter" Value="2" />
    <Setter Property="GlyphSize" Value="Small" />
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ImageToolsSetImageScale_4ItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ImageToolsSetImageScale_4ItemStyleBase}}" TargetType="{x:Type dxb:BarCheckItem}">
    <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.SetSelectedImagesScale}" />
    <Setter Property="CommandParameter" Value="4" />
    <Setter Property="GlyphSize" Value="Small" />
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ShowContainerHeaderCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ShowContainerHeaderCommandItemStyleBase}}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
        <Setter.Value>
          <DataTemplate>
            <ItemsControl>
              <dxdiagn:SetShowHeaderStateBehavior Diagram="{Binding Path=(dxdiag:DiagramControl.Diagram), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxb:BarCheckItem}}}" />
            </ItemsControl>
          </DataTemplate>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=CollapseSelectedContainersCommandItemStyle}" BasedOn="{StaticResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=CollapseSelectedContainersCommandItemStyleBase}}" TargetType="{x:Type dxb:BarCheckItem}" />
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=ToolsContainerStyle}" TargetType="{x:Type dxb:BarSplitCheckItem}">
    <Style.Setters>
      <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
        <Setter.Value>
          <DataTemplate>
            <ItemsControl>
              <dxdiagn:BarToolsSelectorBehavior SelectedTool="{Binding  RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxb:BarSplitCheckItem}}, Path=(dxdiag:DiagramControl.Diagram).ActiveTool}" />
            </ItemsControl>
          </DataTemplate>
        </Setter.Value>
      </Setter>
      <Setter Property="PopupControl">
        <Setter.Value>
          <dxmvvm:ValueFactory>
            <DataTemplate>
              <dxb:PopupMenu>
                <dxb:PopupMenu.Items>
                  <dxb:BarCheckItem dxdiag:DiagramDesignerControl.BarItemName="{x:Static dxdiagcore:DefaultBarItemNames.RectangleTool}" Style="{DynamicResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SelectTool_RectangleToolCommandItemStyle}}" />
                  <dxb:BarCheckItem dxdiag:DiagramDesignerControl.BarItemName="{x:Static dxdiagcore:DefaultBarItemNames.EllipseTool}" Style="{DynamicResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SelectTool_EllipseToolCommandItemStyle}}" />
                  <dxb:BarCheckItem dxdiag:DiagramDesignerControl.BarItemName="{x:Static dxdiagcore:DefaultBarItemNames.RightTriangleTool}" Style="{DynamicResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SelectTool_RightTriangleToolCommandItemStyle}}" />
                  <dxb:BarCheckItem dxdiag:DiagramDesignerControl.BarItemName="{x:Static dxdiagcore:DefaultBarItemNames.HexagonTool}" Style="{DynamicResource {dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SelectTool_HexagonToolCommandItemStyle}}" />
                </dxb:PopupMenu.Items>
              </dxb:PopupMenu>
            </DataTemplate>
          </dxmvvm:ValueFactory>
        </Setter.Value>
      </Setter>
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowAddRemoveItems" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style TargetType="{x:Type dxb:Gallery}" x:Key="shapeGalleryStyleBase">
    <Setter Property="ItemGlyphBorderTemplate">
      <Setter.Value>
        <ControlTemplate>
          <dxdiag:ShapeStylePresenter Theme="{Binding Path=(dxdiag:DiagramControl.Diagram).Theme}" StyleId="{Binding Caption}" ToolTip="{Binding Caption, Converter={dxdiagn:DiagramStyleIdToNameConverter}}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemGlyphMargin" Value="6" />
    <Setter Property="ItemGlyphVerticalAlignment" Value="Center" />
    <Setter Property="ItemGlyphHorizontalAlignment" Value="Center" />
    <Setter Property="ItemAutoHeight" Value="True" />
    <Setter Property="ItemCaptionHorizontalAlignment" Value="Center" />
    <Setter Property="AllowToolTips" Value="False" />
    <Setter Property="IsItemDescriptionVisible" Value="False" />
    <Setter Property="IsItemCaptionVisible" Value="False" />
    <Setter Property="AllowFilter" Value="False" />
    <Setter Property="MinColCount" Value="7" />
    <Setter Property="AutoHideGallery" Value="False" />
    <Setter Property="ItemCheckMode" Value="Single" />
    <Setter Property="ItemClickCommand" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.SetSelectedItemsStyle}" />
    <Setter Property="FirstCheckedItem" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).SelectionToolsModel[StyleInfo], Mode=OneWay, Converter={dxdiagn:StyleInfoToStyleIdConverter}}" />
  </Style>
  <Style TargetType="{x:Type dxb:Gallery}" x:Key="shapeGalleryStyle" BasedOn="{StaticResource shapeGalleryStyleBase}">
    <Setter Property="ColCount" Value="7" />
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=ShapeStylesStyle}" TargetType="{x:Type dxr:RibbonGalleryBarItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString RibbonPageGroup_ShapeStyles}" />
      <Setter Property="Gallery">
        <Setter.Value>
          <dxmvvm:ValueFactory>
            <DataTemplate>
              <dxb:Gallery Style="{StaticResource shapeGalleryStyle}">
                <dxb:GalleryItemGroup ItemsSource="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).LastShapeStyles}" ItemTemplate="{StaticResource galleryControlItemTemplate}" />
              </dxb:Gallery>
            </DataTemplate>
          </dxmvvm:ValueFactory>
        </Setter.Value>
      </Setter>
      <Setter Property="DropDownGallery">
        <Setter.Value>
          <dxmvvm:ValueFactory>
            <DataTemplate>
              <dxb:Gallery Style="{StaticResource shapeGalleryStyleBase}" GroupsSource="{Binding Path=(dxdiag:DiagramControl.Diagram).LastShapeStyles, RelativeSource={RelativeSource Self}, Converter={dxdiagn:LastShapeStylesToGalleryGroupConverter}}">
                <dxb:Gallery.GroupTemplate>
                  <DataTemplate>
                    <ContentControl>
                      <dxb:GalleryItemGroup ItemsSource="{Binding Items}" Caption="{Binding Name, Mode=OneTime}" ItemTemplate="{StaticResource galleryControlItemTemplate}" />
                    </ContentControl>
                  </DataTemplate>
                </dxb:Gallery.GroupTemplate>
              </dxb:Gallery>
            </DataTemplate>
          </dxmvvm:ValueFactory>
        </Setter.Value>
      </Setter>
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeItemStyle" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
    <Style.Triggers>
      <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).SelectionModel}" Value="{x:Null}">
        <Setter Property="IsEnabled" Value="False" />
      </DataTrigger>
      <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Theme}" Value="{x:Static dxdiagcore:DiagramThemes.NoTheme}">
        <Setter Property="IsEnabled" Value="False" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="{x:Type dxb:Gallery}" x:Key="themeGalleryStyleBase">
    <Setter Property="ItemGlyphBorderTemplate">
      <Setter.Value>
        <ControlTemplate>
          <dxdiag:ThemePresenter DataContext="{Binding Path=Item.Caption, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxb:GalleryItemControl}}}" DiagramTheme="{Binding}" ToolTip="{Binding Name, Mode=OneTime}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemGlyphVerticalAlignment" Value="Center" />
    <Setter Property="ItemGlyphHorizontalAlignment" Value="Center" />
    <Setter Property="ItemAutoHeight" Value="True" />
    <Setter Property="AllowToolTips" Value="False" />
    <Setter Property="IsItemDescriptionVisible" Value="False" />
    <Setter Property="IsItemCaptionVisible" Value="False" />
    <Setter Property="IsGroupCaptionVisible" Value="False" />
    <Setter Property="AllowFilter" Value="False" />
    <Setter Property="MinColCount" Value="8" />
    <Setter Property="AutoHideGallery" Value="False" />
    <Setter Property="ItemCheckMode" Value="Single" />
    <Setter Property="SizeMode" Value="None" />
    <Setter Property="FirstCheckedItem" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).RootToolsModel[Theme], Mode=TwoWay}" />
  </Style>
  <Style TargetType="{x:Type dxb:Gallery}" x:Key="themeGalleryStyle" BasedOn="{StaticResource themeGalleryStyleBase}">
    <Setter Property="ColCount" Value="8" />
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=ThemesStyle}" TargetType="{x:Type dxr:RibbonGalleryBarItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString RibbonPageGroup_Themes}" />
      <Setter Property="Gallery">
        <Setter.Value>
          <dxmvvm:ValueFactory>
            <DataTemplate>
              <dxb:Gallery Style="{StaticResource themeGalleryStyle}">
                <dxb:GalleryItemGroup ItemsSource="{x:Static dxdiagcore:ThemeRegistrator.Themes}" ItemTemplate="{StaticResource galleryControlItemTemplate}" />
              </dxb:Gallery>
            </DataTemplate>
          </dxmvvm:ValueFactory>
        </Setter.Value>
      </Setter>
      <Setter Property="DropDownGallery">
        <Setter.Value>
          <dxmvvm:ValueFactory>
            <DataTemplate>
              <dxb:Gallery Style="{StaticResource themeGalleryStyleBase}">
                <dxb:GalleryItemGroup ItemsSource="{x:Static dxdiagcore:ThemeRegistrator.Themes}" ItemTemplate="{StaticResource galleryControlItemTemplate}" />
              </dxb:Gallery>
            </DataTemplate>
          </dxmvvm:ValueFactory>
        </Setter.Value>
      </Setter>
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeTheme" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style TargetType="{x:Type dxb:Gallery}" x:Key="formatContainerGalleryStyleBase" BasedOn="{StaticResource containerGalleryStyleBase}">
    <Setter Property="MinColCount" Value="8" />
    <Setter Property="AutoHideGallery" Value="False" />
    <Setter Property="ItemCheckMode" Value="Single" />
    <Setter Property="SizeMode" Value="None" />
    <Setter Property="ItemClickCommand" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.SetSelectedContainersShape}" />
    <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
      <Setter.Value>
        <DataTemplate>
          <ItemsControl>
            <dxdiagn:SetContainerShapeBehavior Diagram="{Binding Path=(dxdiag:DiagramControl.Diagram), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxb:Gallery}}}" />
          </ItemsControl>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type dxb:Gallery}" x:Key="formatContainerGalleryStyle" BasedOn="{StaticResource formatContainerGalleryStyleBase}">
    <Setter Property="ColCount" Value="8" />
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=ContainerStylesStyle}" TargetType="{x:Type dxr:RibbonGalleryBarItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString RibbonPageGroup_ContainerStyles}" />
      <Setter Property="CustomizationGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/InsertContainer.svg}" />
      <Setter Property="Gallery">
        <Setter.Value>
          <dxmvvm:ValueFactory>
            <DataTemplate>
              <dxb:Gallery Style="{StaticResource formatContainerGalleryStyle}">
                <dxb:GalleryItemGroup ItemsSource="{x:Static dxdiagcore:DiagramContainerGalleryRegistrator.Shapes}" ItemTemplate="{StaticResource galleryControlItemTemplate}" />
              </dxb:Gallery>
            </DataTemplate>
          </dxmvvm:ValueFactory>
        </Setter.Value>
      </Setter>
      <Setter Property="DropDownGallery">
        <Setter.Value>
          <dxmvvm:ValueFactory>
            <DataTemplate>
              <dxb:Gallery Style="{StaticResource formatContainerGalleryStyleBase}">
                <dxb:GalleryItemGroup ItemsSource="{x:Static dxdiagcore:DiagramContainerGalleryRegistrator.Shapes}" ItemTemplate="{StaticResource galleryControlItemTemplate}" />
              </dxb:Gallery>
            </DataTemplate>
          </dxmvvm:ValueFactory>
        </Setter.Value>
      </Setter>
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeContainerStyle" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=SeparatorStyleBase}" TargetType="{x:Type dxb:BarItemSeparator}">
    <Style.Setters>
      <Setter Property="CustomizationContent" Value="{dxdiag:DiagramControlLocalizedString SeparatorName}" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=PageSizeSeparatorStyle}" TargetType="{x:Type dxb:BarItemSeparator}" BasedOn="{StaticResource {dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=SeparatorStyleBase}}" />
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=MenuSeparatorStyle}" TargetType="{x:Type dxb:BarItemSeparator}" BasedOn="{StaticResource {dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=SeparatorStyleBase}}" />
  <Style x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=FontRibbonGroupSeparatorStyle}" TargetType="{x:Type dxb:BarItemSeparator}" BasedOn="{StaticResource {dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=SeparatorStyleBase}}">
    <Setter Property="IsVisible">
      <Setter.Value>
        <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
          <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeTextFont" />
          <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeTextForeground" />
          <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
        </MultiBinding>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type dxb:BarStaticItem}" x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=StatusBarWidthItemStyle}">
    <Setter Property="Content">
      <Setter.Value>
        <MultiBinding Converter="{dxdiagn:LengthWithMeasureUnitToStatusBarConverter}">
          <Binding RelativeSource="{RelativeSource Self}" Path="(dxdiag:DiagramControl.Diagram).SelectionToolsModel[Width]" />
          <Binding Source="{x:Static localization:DiagramControlStringId.StatusBarWidth}" />
          <Binding RelativeSource="{RelativeSource Self}" Path="(dxdiag:DiagramControl.Diagram).MeasureUnit" />
        </MultiBinding>
      </Setter.Value>
    </Setter>
    <Setter Property="ShowBorder" Value="False" />
    <Setter Property="RibbonStyle" Value="SmallWithText" />
    <Setter Property="CustomizationContent" Value="{dxdiag:DiagramControlLocalizedString StatusBarShapeWidth}" />
    <Setter Property="dxdiag:DiagramDesignerControl.BarItemName" Value="{x:Static dxdiagcore:DefaultBarItemNames.StatusBarWidth}" />
    <Style.Triggers>
      <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).ShowMeasureUnit}" Value="False">
        <Setter Property="Content">
          <Setter.Value>
            <MultiBinding Converter="{dxdiagn:LengthToStatusBarConverter}">
              <Binding RelativeSource="{RelativeSource Self}" Path="(dxdiag:DiagramControl.Diagram).SelectionToolsModel[Width]" />
              <Binding Source="{x:Static localization:DiagramControlStringId.StatusBarWidth}" />
            </MultiBinding>
          </Setter.Value>
        </Setter>
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="{x:Type dxb:BarStaticItem}" x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=StatusBarHeightItemStyle}">
    <Setter Property="Content">
      <Setter.Value>
        <MultiBinding Converter="{dxdiagn:LengthWithMeasureUnitToStatusBarConverter}">
          <Binding RelativeSource="{RelativeSource Self}" Path="(dxdiag:DiagramControl.Diagram).SelectionToolsModel[Height]" />
          <Binding Source="{x:Static localization:DiagramControlStringId.StatusBarHeight}" />
          <Binding RelativeSource="{RelativeSource Self}" Path="(dxdiag:DiagramControl.Diagram).MeasureUnit" />
        </MultiBinding>
      </Setter.Value>
    </Setter>
    <Setter Property="ShowBorder" Value="False" />
    <Setter Property="RibbonStyle" Value="SmallWithText" />
    <Setter Property="CustomizationContent" Value="{dxdiag:DiagramControlLocalizedString StatusBarShapeHeight}" />
    <Setter Property="dxdiag:DiagramDesignerControl.BarItemName" Value="{x:Static dxdiagcore:DefaultBarItemNames.StatusBarHeight}" />
    <Style.Triggers>
      <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).ShowMeasureUnit}" Value="False">
        <Setter Property="Content">
          <Setter.Value>
            <MultiBinding Converter="{dxdiagn:LengthToStatusBarConverter}" ConverterParameter="{}{0}: {1:0.###}">
              <Binding RelativeSource="{RelativeSource Self}" Path="(dxdiag:DiagramControl.Diagram).SelectionToolsModel[Height]" />
              <Binding Source="{x:Static localization:DiagramControlStringId.StatusBarHeight}" />
            </MultiBinding>
          </Setter.Value>
        </Setter>
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="{x:Type dxb:BarStaticItem}" x:Key="{dxdiagt:DiagramDesignerControlThemeKeys ResourceKey=StatusBarAngleItemStyle}">
    <Setter Property="Content">
      <Setter.Value>
        <MultiBinding Converter="{dxdiagn:AngleToStatusBarConverter}">
          <Binding RelativeSource="{RelativeSource Self}" Path="(dxdiag:DiagramControl.Diagram).SelectionToolsModel[Angle]" />
          <Binding Source="{x:Static localization:DiagramControlStringId.StatusBarAngle}" />
        </MultiBinding>
      </Setter.Value>
    </Setter>
    <Setter Property="ShowBorder" Value="True" />
    <Setter Property="RibbonStyle" Value="SmallWithText" />
    <Setter Property="CustomizationContent" Value="{dxdiag:DiagramControlLocalizedString StatusBarShapeAngle}" />
    <Setter Property="dxdiag:DiagramDesignerControl.BarItemName" Value="{x:Static dxdiagcore:DefaultBarItemNames.StatusBarAngle}" />
    <Style.Triggers>
      <DataTrigger Binding="{Binding Path=Content, RelativeSource={RelativeSource Self}}" Value="">
        <Setter Property="ShowBorder" Value="False" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=Content, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
        <Setter Property="ShowBorder" Value="False" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>