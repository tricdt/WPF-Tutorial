<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <!--BEGIN WPF-->
  <ResourceDictionary.MergedDictionaries>
    <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2016Colorful.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/Office2016Colorful/TextEdit.xaml" />
    <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2016Colorful.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/Generic/BrushEdit.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <!--END WPF-->
  <SolidColorBrush x:Key="{dxet:PopupBrushEditThemeKey ResourceKey=ChipBorderBrush}" Color="#47000000" />
  <Style x:Key="{dxet:PopupBrushEditThemeKey ResourceKey=TextBlockStyle}" BasedOn="{StaticResource {dxet:TextEditThemeKey ResourceKey=TextBlockStyle}}" TargetType="{x:Type TextBlock}">
    <Setter Property="Opacity" Value="0" />
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="false">
        <Setter Property="Opacity" Value="0" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxet:PopupBrushEditThemeKey ResourceKey=TextBlockInplaceStyle}" BasedOn="{StaticResource BaseTextBlockInplaceStyle}" TargetType="{x:Type TextBlock}">
    <Setter Property="Opacity" Value="0" />
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="false">
        <Setter Property="Opacity" Value="0" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <ControlTemplate x:Key="{dxet:PopupBrushEditThemeKey ResourceKey=DisplayTemplate}">
    <Grid Margin="{Binding Path=(dxe:BaseEdit.OwnerEdit).Padding, RelativeSource={RelativeSource TemplatedParent}}">
      <dxei:TransparentBrushRectangle x:Name="TransparentBrushRectangle1" BlockHeight="4" BlockWidth="4" dx:FocusHelper2.Focusable="False" HorizontalAlignment="Stretch" Margin="4,2,4,2" VerticalAlignment="Stretch" />
      <Rectangle x:Name="Rectangle1" Fill="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).Brush, RelativeSource={RelativeSource TemplatedParent}}" Margin="4,2,4,2" Stretch="Fill" />
      <TextBlock x:Name="PART_Editor" Style="{DynamicResource {dxet:PopupBrushEditThemeKey ResourceKey=TextBlockStyle}}" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="BlockHeight" TargetName="TransparentBrushRectangle1" Value="12" />
        <Setter Property="BlockWidth" TargetName="TransparentBrushRectangle1" Value="12" />
        <Setter Property="Margin" TargetName="TransparentBrushRectangle1" Value="8,4" />
        <Setter Property="Margin" TargetName="Rectangle1" Value="8,4" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxet:PopupBrushEditThemeKey ResourceKey=DisplayInplaceTemplate}">
    <Grid>
      <dxei:TransparentBrushRectangle x:Name="TransparentBrushRectangle1" BlockHeight="4" BlockWidth="4" dx:FocusHelper2.Focusable="False" HorizontalAlignment="Stretch" Margin="4,2,4,2" VerticalAlignment="Stretch" />
      <Rectangle x:Name="Rectangle1" Fill="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).Brush, RelativeSource={RelativeSource TemplatedParent}}" Margin="4,2,4,2" Stretch="Fill" />
      <TextBlock x:Name="PART_Editor" Style="{DynamicResource {dxet:PopupBrushEditThemeKey ResourceKey=TextBlockInplaceStyle}}" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="BlockWidth" TargetName="TransparentBrushRectangle1" Value="12" />
        <Setter Property="BlockHeight" TargetName="TransparentBrushRectangle1" Value="12" />
        <Setter Property="Margin" TargetName="TransparentBrushRectangle1" Value="8,4" />
        <Setter Property="Margin" TargetName="Rectangle1" Value="8,4" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
</ResourceDictionary>