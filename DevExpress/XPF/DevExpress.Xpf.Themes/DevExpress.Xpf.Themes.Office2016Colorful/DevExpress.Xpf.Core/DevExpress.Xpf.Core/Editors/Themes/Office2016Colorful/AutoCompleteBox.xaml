<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:dxn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2016Colorful.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/Generic/AutoCompleteBox.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <SolidColorBrush x:Key="{dxet:TokenEditorThemeKey ResourceKey=TokenForeground}" Color="#E3000000" />
  <Style x:Key="{dxet:TokenEditorThemeKey ResourceKey=BorderStyle}" TargetType="{x:Type Border}">
    <Setter Property="Background" Value="#FFFFFFFF" />
    <Setter Property="BorderBrush" Value="#47000000" />
    <Setter Property="BorderThickness" Value="1" />
  </Style>
  <ControlTemplate x:Key="{dxet:TokenEditorThemeKey ResourceKey=CellPresenterTemplate}" TargetType="{x:Type dxei:TokenEditorPresenter}">
    <Grid Background="Transparent">
      <Border UseLayoutRounding="True">
        <ContentControl Focusable="False" Template="{TemplateBinding BorderTemplate}" />
      </Border>
      <dxei:CellEditor x:Name="cell" Focusable="False" TextElement.Foreground="{TemplateBinding Foreground}" />
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxet:TokenEditorThemeKey ResourceKey=TokenContainerTemplate}" TargetType="{x:Type ContentControl}">
    <Grid x:Name="grid" Margin="0,1,1,1">
      <Border x:Name="default" Background="#30000000" />
      <Border x:Name="hover" Background="#47000000" Opacity="0" />
      <Border x:Name="pressed" Background="#68000000" Opacity="0" />
      <Border x:Name="editable" Background="#00000000" Opacity="0" />
      <Border x:Name="focused" Background="#68000000" BorderBrush="#FF404040" BorderThickness="1" Opacity="0" />
      <Border x:Name="focusedunselected" BorderBrush="#FF404040" BorderThickness="1" Opacity="0" />
      <ContentPresenter />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="MinHeight" TargetName="grid" Value="40" />
      </Trigger>
      <DataTrigger Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True">
        <Setter Property="Opacity" TargetName="default" Value="0" />
        <Setter Property="Opacity" TargetName="hover" Value="1" />
        <Setter Property="Opacity" TargetName="pressed" Value="0" />
        <Setter Property="Opacity" TargetName="editable" Value="0" />
        <Setter Property="Opacity" TargetName="focused" Value="0" />
        <Setter Property="Opacity" TargetName="focusedunselected" Value="0" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsSelected, RelativeSource={RelativeSource Self}}" Value="True">
        <Setter Property="Opacity" TargetName="default" Value="0" />
        <Setter Property="Opacity" TargetName="hover" Value="0" />
        <Setter Property="Opacity" TargetName="pressed" Value="1" />
        <Setter Property="Opacity" TargetName="editable" Value="0" />
        <Setter Property="Opacity" TargetName="focused" Value="0" />
        <Setter Property="Opacity" TargetName="focusedunselected" Value="0" />
      </DataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
          <Condition Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsTokenFocused, RelativeSource={RelativeSource Self}}" Value="True" />
        </MultiDataTrigger.Conditions>
        <Setter Property="Opacity" TargetName="default" Value="0" />
        <Setter Property="Opacity" TargetName="hover" Value="0" />
        <Setter Property="Opacity" TargetName="pressed" Value="0" />
        <Setter Property="Opacity" TargetName="editable" Value="0" />
        <Setter Property="Opacity" TargetName="focused" Value="1" />
        <Setter Property="Opacity" TargetName="focusedunselected" Value="0" />
      </MultiDataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsSelected, RelativeSource={RelativeSource Self}}" Value="False" />
          <Condition Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsTokenFocused, RelativeSource={RelativeSource Self}}" Value="True" />
        </MultiDataTrigger.Conditions>
        <Setter Property="Opacity" TargetName="focused" Value="0" />
        <Setter Property="Opacity" TargetName="focusedunselected" Value="1" />
      </MultiDataTrigger>
      <DataTrigger Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsEditorActivated, RelativeSource={RelativeSource Self}}" Value="True">
        <Setter Property="Opacity" TargetName="default" Value="0" />
        <Setter Property="Opacity" TargetName="hover" Value="0" />
        <Setter Property="Opacity" TargetName="pressed" Value="0" />
        <Setter Property="Opacity" TargetName="editable" Value="1" />
        <Setter Property="Opacity" TargetName="focused" Value="0" />
        <Setter Property="Opacity" TargetName="focusedunselected" Value="0" />
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{dxet:TokenEditorThemeKey ResourceKey=DeleteButtonStyle}" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border x:Name="Root" Background="Transparent" Padding="3,3,4,3">
            <Path x:Name="Path" Data="F1 M 0,0L 1,4.76837e-007L 3.5,2.5L 6,1.90735e-006L 7,1.90735e-006L 7,1L 4.5,3.5L 7,6L 7,7L 6,7L 3.5,4.5L 1,7L 2.86102e-006,7L 2.86102e-006,6L 2.5,3.5L 6.12323e-017,1L 0,0 Z " Fill="#87000000" Height="7" Stretch="Fill" Width="7" />
          </Border>
          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxei:TokenEditorPresenter.OwnerPresenter).IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True">
              <Setter Property="Fill" TargetName="Path" Value="#87000000" />
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Fill" TargetName="Path" Value="#BA000000" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Fill" TargetName="Path" Value="#BA000000" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
              <Setter Property="Padding" TargetName="Root" Value="10" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>