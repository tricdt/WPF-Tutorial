<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Thickness x:Key="{dxbt:SubMenuBarControlThemeKey ResourceKey=GlyphPadding}">7,0,7,0</Thickness>
  <ControlTemplate x:Key="{dxbt:SubMenuBarControlThemeKey ResourceKey=ScrollUpButtonTemplate}" TargetType="{x:Type RepeatButton}">
    <Grid x:Name="Root" Margin="-1" SnapsToDevicePixels="True">
      <Border x:Name="Border" Background="#00000000" BorderBrush="#47000000" BorderThickness="0,0,0,1">
        <Path x:Name="Glyph" Data="F1 M 1,7L 1,5L 4,2L 7,5L 7,7L 4,4L 1,7 Z" Fill="#FF666666" Height="7" HorizontalAlignment="Center" Margin="4" Stretch="Fill" VerticalAlignment="Center" Width="8" />
      </Border>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="MouseOver">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="Border" Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" To="#FFC6C6C6" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Glyph" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#BA000000" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="Border" Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" To="#FFC6C6C6" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Glyph" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#BA000000" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Margin" TargetName="Glyph" Value="10" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxbt:SubMenuBarControlThemeKey ResourceKey=ScrollDownButtonTemplate}" TargetType="{x:Type RepeatButton}">
    <Grid x:Name="Root" Margin="-1" SnapsToDevicePixels="True">
      <Border x:Name="Border" Background="#00000000" BorderBrush="#47000000" BorderThickness="0,1,0,0">
        <Path x:Name="Glyph" Data="F1 M 1,2L 1,4L 4,7L 7,4L 7,2L 4,5L 1,2 Z " Fill="#FF666666" Height="7" HorizontalAlignment="Center" Margin="4" Stretch="Fill" VerticalAlignment="Center" Width="8" />
      </Border>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="MouseOver">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FFC6C6C6" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Glyph" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#BA000000" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed">
            <Storyboard>
              <ColorAnimation Duration="0" Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FFC6C6C6" />
              <ColorAnimation Duration="0" Storyboard.TargetName="Glyph" Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" To="#BA000000" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Margin" TargetName="Glyph" Value="10" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="{dxbt:SubMenuBarControlThemeKey ResourceKey=ScrollLeftButtonStyle}" TargetType="{x:Type RepeatButton}">
    <Setter Property="ClickMode" Value="Hover" />
    <!--<Setter Property="Template" Value="{DynamicResource {dxbt:SubMenuBarControlThemeKey ResourceKey=ScrollLeftButtonTemplate}}" />-->
  </Style>
  <Style x:Key="{dxbt:SubMenuBarControlThemeKey ResourceKey=ScrollRightButtonStyle}" TargetType="{x:Type RepeatButton}">
    <Setter Property="ClickMode" Value="Hover" />
    <!--<Setter Property="Template" Value="{DynamicResource {dxbt:SubMenuBarControlThemeKey ResourceKey=ScrollRightButtonTemplate}}" />-->
  </Style>
  <Style x:Key="{dxbt:SubMenuBarControlThemeKey ResourceKey=ScrollUpButtonStyle}" TargetType="{x:Type RepeatButton}">
    <Setter Property="ClickMode" Value="Hover" />
    <Setter Property="Template" Value="{DynamicResource {dxbt:SubMenuBarControlThemeKey ResourceKey=ScrollUpButtonTemplate}}" />
  </Style>
  <Style x:Key="{dxbt:SubMenuBarControlThemeKey ResourceKey=ScrollDownButtonStyle}" TargetType="{x:Type RepeatButton}">
    <Setter Property="ClickMode" Value="Hover" />
    <Setter Property="Template" Value="{DynamicResource {dxbt:SubMenuBarControlThemeKey ResourceKey=ScrollDownButtonTemplate}}" />
  </Style>
  <ControlTemplate x:Key="{dxbt:SubMenuBarControlThemeKey ResourceKey=ContentSideBorderTemplate}" TargetType="{x:Type ContentControl}"></ControlTemplate>
  <ControlTemplate x:Key="{dxbt:SubMenuBarControlThemeKey ResourceKey=GlyphSideBorderTemplate}" TargetType="{x:Type ContentControl}"></ControlTemplate>
  <ControlTemplate x:Key="{dxbt:SubMenuBarControlThemeKey ResourceKey=DropIndicatorTemplate}" TargetType="{x:Type ContentControl}">
    <Grid x:Name="Content" SnapsToDevicePixels="True">
      <Grid.RenderTransform>
        <TranslateTransform X="-3" Y="0" />
      </Grid.RenderTransform>
      <Border Background="#FFFFFFFF" BorderBrush="#FFFFFFFF" BorderThickness="1" Height="3" VerticalAlignment="Top" Width="9" />
      <Border Background="#FFFFFFFF" BorderBrush="#FFFFFFFF" BorderThickness="1" Height="3" VerticalAlignment="Bottom" Width="9" />
      <dx:PixelSnapper HorizontalAlignment="Center" Margin="0,2,0,2">
        <Border Background="#FFFFFFFF" BorderBrush="#FFFFFFFF" BorderThickness="1,0,1,0" Width="3" />
      </dx:PixelSnapper>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="Orientation">
          <VisualState x:Name="Horizontal" />
          <VisualState x:Name="Vertical">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="RenderTransform">
                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                  <DiscreteObjectKeyFrame.Value>
                    <TransformGroup>
                      <RotateTransform Angle="-90" CenterX="0.5" CenterY="0.5" />
                      <TranslateTransform X="0" Y="3" />
                    </TransformGroup>
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
  </ControlTemplate>
  <!--BEGIN WPF-->
  <ControlTemplate x:Key="{dxbt:SubMenuBarControlThemeKey ResourceKey=ControlTemplate}" TargetType="{x:Type dxb:SubMenuBarControl}">
    <ContentControl Style="{DynamicResource {dxbt:BarControlThemeKey ResourceKey=MenuContentStyle}}">
      <Grid Background="#00000000">
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="*" />
          </Grid.ColumnDefinitions>
          <Border Grid.Column="0" Margin="{TemplateBinding GlyphPadding}" SnapsToDevicePixels="True" Width="{Binding Path=MaxGlyphSize.Width, RelativeSource={RelativeSource TemplatedParent}}" />
          <ContentControl x:Name="PART_GlyphSide" Grid.Column="0" SnapsToDevicePixels="True" Template="{DynamicResource {dxbt:SubMenuBarControlThemeKey ResourceKey=GlyphSideBorderTemplate}}" />
          <ContentControl x:Name="PART_ContentSide" Grid.Column="1" SnapsToDevicePixels="True" Template="{DynamicResource {dxbt:SubMenuBarControlThemeKey ResourceKey=ContentSideBorderTemplate}}" />
        </Grid>
        <dxb:SubMenuScrollViewer Style="{DynamicResource {dxbt:SubMenuBarControlThemeKey  ResourceKey=ScrollViewerStyle}}">
          <dx:CompatibilityAdornerContainer x:Name="PART_Adorner">
            <ItemsPresenter />
          </dx:CompatibilityAdornerContainer>
        </dxb:SubMenuScrollViewer>
      </Grid>
    </ContentControl>
  </ControlTemplate>
  <!--END WPF-->
  <ControlTemplate x:Key="{dxbt:SubMenuBarControlThemeKey ResourceKey=PopupMenuColumnSplitterTemplate}" TargetType="{x:Type dxb:PopupMenuColumnSplitter}">
    <Border Background="#47000000" Width="1" />
  </ControlTemplate>
</ResourceDictionary>