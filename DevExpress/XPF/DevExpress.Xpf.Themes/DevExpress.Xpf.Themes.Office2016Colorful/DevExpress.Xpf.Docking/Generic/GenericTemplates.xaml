<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxn="clr-namespace:DevExpress.Xpf.Core.Native;assembly=DevExpress.Xpf.Core.v24.1" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/docking/themekeys" xmlns:dxp="http://schemas.devexpress.com/winfx/2008/xaml/docking/platform" xmlns:ve="http://schemas.devexpress.com/winfx/2008/xaml/docking/visualelements" xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" xmlns:dxdo="http://schemas.devexpress.com/winfx/2008/xaml/docking" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
  <!-- ve:BaseDocument Theme Elements -->
  <DataTemplate x:Key="{dxt:DocumentElementsThemeKey ResourceKey=ControlHostTemplate}">
    <Grid ve:DockPane.HitTestType="Content">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition />
      </Grid.RowDefinitions>
      <ve:DockBarContainerControl x:Name="PART_BarContainerControl" LayoutItem="{Binding LayoutItem}" />
      <Border DataContext="{Binding LayoutItem.DataContext}" Grid.Row="1">
        <ve:UIElementPresenter UIElement="{Binding Path=Content.LayoutItem.ContentPresenter, RelativeSource={RelativeSource TemplatedParent}}" />
      </Border>
    </Grid>
  </DataTemplate>
  <DataTemplate x:Key="{dxt:DocumentElementsThemeKey ResourceKey=DataHostTemplate}">
    <Grid ve:DockPane.HitTestType="Content" DataContext="{Binding LayoutItem}">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition />
      </Grid.RowDefinitions>
      <ve:DockBarContainerControl x:Name="PART_BarContainerControl" LayoutItem="{Binding}" />
      <ve:UIElementPresenter Grid.Row="1" UIElement="{Binding Path=Content.LayoutItem.ContentPresenter, RelativeSource={RelativeSource TemplatedParent}}" />
    </Grid>
  </DataTemplate>
  <DataTemplate x:Key="{dxt:DocumentElementsThemeKey ResourceKey=LayoutHostTemplate}">
    <Grid ve:DockPane.HitTestType="Content" DataContext="{Binding LayoutItem.DataContext}">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition />
      </Grid.RowDefinitions>
      <ve:DockBarContainerControl x:Name="PART_BarContainerControl" LayoutItem="{Binding Content.LayoutItem, RelativeSource={RelativeSource TemplatedParent}}" />
      <ScrollViewer HorizontalScrollBarVisibility="{Binding Content.LayoutItem.HorizontalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}}" VerticalScrollBarVisibility="{Binding Content.LayoutItem.VerticalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}}" Focusable="False" Grid.Row="1" BorderBrush="Transparent" dxn:ContentControlHelper.ContentIsNotLogical="False">
        <ve:UIElementPresenter UIElement="{Binding Path=Content.LayoutItem.ContentPresenter, RelativeSource={RelativeSource TemplatedParent}}" />
      </ScrollViewer>
    </Grid>
  </DataTemplate>
  <DataTemplate x:Key="{dxt:DocumentPaneElementsThemeKey ResourceKey=TabbedTemplate}">
    <ve:DocumentTabContainer x:Name="PART_ItemsControl" Background="{Binding LayoutItem.Background}" LayoutItem="{Binding LayoutItem}" />
  </DataTemplate>
  <DataTemplate x:Key="{dxt:DocumentPaneElementsThemeKey ResourceKey=MDITemplate}">
    <ve:DocumentMDIContainer x:Name="PART_ItemsControl" Background="{Binding LayoutItem.Background}" LayoutItem="{Binding LayoutItem}" />
  </DataTemplate>
  <!--BEGIN DocumentPane Main Template -->
  <ControlTemplate x:Key="{dxt:DocumentPaneElementsThemeKey ResourceKey=Template}" TargetType="ve:DocumentPane">
    <Border ve:DockPane.HitTestType="Bounds" Background="Transparent" Padding="{Binding Path=LayoutItem.ActualPadding, RelativeSource={RelativeSource TemplatedParent}}" Margin="{Binding Path=LayoutItem.ActualMargin, RelativeSource={RelativeSource TemplatedParent}}">
      <ve:DocumentPaneContentPresenter x:Name="PART_Content" MDIStyle="{Binding Path=LayoutItem.MDIStyle, RelativeSource={RelativeSource TemplatedParent}}" />
    </Border>
  </ControlTemplate>
  <!--END DocumentPane Main Template -->
  <!--GroupPane Theme Elements -->
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Docking.VisualElements.BaseGroupContentControl}" TargetType="{x:Type ve:BaseGroupContentControl}">
    <Style.Setters>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ve:BaseGroupContentControl">
            <ve:LayoutItemsControl DataContext="{Binding DataContext}" ItemsSource="{Binding LayoutItem.ItemsInternal, RelativeSource={RelativeSource Mode=TemplatedParent}}" Orientation="{Binding LayoutItem.Orientation, RelativeSource={RelativeSource Mode=TemplatedParent}}" LastChildFill="{Binding LayoutItem.LastChildFill, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <DataTemplate x:Key="{dxt:GroupPaneElementsThemeKey ResourceKey=NoBorderTemplate}">
    <ve:BaseGroupContentControl Content="{Binding}" />
  </DataTemplate>
  <DataTemplate x:Key="{dxt:GroupPaneElementsThemeKey ResourceKey=GroupTemplate}">
    <ve:GroupContentControl Content="{Binding}" />
  </DataTemplate>
  <DataTemplate x:Key="{dxt:GroupPaneElementsThemeKey ResourceKey=GroupBoxTemplate}">
    <ve:GroupBoxContentControl Content="{Binding}" />
  </DataTemplate>
  <DataTemplate x:Key="{dxt:GroupPaneElementsThemeKey ResourceKey=TabbedTemplate}">
    <ve:TabbedLayoutGroupPane LayoutItem="{Binding}" />
  </DataTemplate>
  <!--BEGIN GroupPane Main Template -->
  <ControlTemplate x:Key="{dxt:GroupPaneElementsThemeKey ResourceKey=Template}" TargetType="ve:GroupPane">
    <Border ve:DockPane.HitTestType="Bounds" Background="Transparent" BorderBrush="{Binding LayoutItem.BorderBrush, RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="{Binding LayoutItem.BorderThickness, RelativeSource={RelativeSource TemplatedParent}}">
      <ve:DropBoundsControl Padding="{Binding Path=LayoutItem.ActualPadding, RelativeSource={RelativeSource TemplatedParent}}" LayoutItem="{Binding Path=LayoutItem, RelativeSource={RelativeSource TemplatedParent}}" Margin="{Binding Path=LayoutItem.ActualMargin, RelativeSource={RelativeSource TemplatedParent}}">
        <ve:GroupPaneContentPresenter x:Name="PART_Content" Content="{Binding LayoutItem, RelativeSource={RelativeSource TemplatedParent}}" GroupBorderStyle="{Binding Path=LayoutItem.GroupBorderStyle, RelativeSource={RelativeSource TemplatedParent}}" />
      </ve:DropBoundsControl>
    </Border>
  </ControlTemplate>
  <!--END GroupPane Main Template -->
  <!-- TabbedPane Theme Elements -->
  <DataTemplate x:Key="{dxt:TabbedPaneElementsThemeKey ResourceKey=TabbedTemplate}">
    <ve:PanelTabContainer x:Name="PART_ItemsControl" DataContext="{Binding LayoutItem}" LayoutItem="{Binding}" />
  </DataTemplate>
  <!--BEGIN TabbedPane Main Template -->
  <ControlTemplate x:Key="{dxt:TabbedPaneElementsThemeKey ResourceKey=Template}" TargetType="ve:TabbedPane">
    <Border ve:DockPane.HitTestType="Bounds" Background="Transparent" Padding="{Binding Path=LayoutItem.ActualPadding, RelativeSource={RelativeSource TemplatedParent}}" Margin="{Binding Path=LayoutItem.ActualMargin, RelativeSource={RelativeSource TemplatedParent}}">
      <ve:TabbedPaneContentPresenter x:Name="PART_Content" />
    </Border>
  </ControlTemplate>
  <!--END TabbedPane Main Template -->
  <!-- ve:DockPane Theme Elements -->
  <DataTemplate x:Key="{dxt:DockPaneElementsThemeKey ResourceKey=DataHostTemplate}">
    <Grid ve:DockPane.HitTestType="Content" DataContext="{Binding LayoutItem}">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition />
      </Grid.RowDefinitions>
      <ve:DockBarContainerControl x:Name="PART_BarContainerControl" LayoutItem="{Binding}" />
      <ve:UIElementPresenter Grid.Row="1" UIElement="{Binding Path=Content.LayoutItem.ContentPresenter, RelativeSource={RelativeSource TemplatedParent}}" />
    </Grid>
  </DataTemplate>
  <DataTemplate x:Key="{dxt:DockPaneElementsThemeKey ResourceKey=ControlHostTemplate}">
    <Grid ve:DockPane.HitTestType="Content">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition />
      </Grid.RowDefinitions>
      <ve:DockBarContainerControl x:Name="PART_BarContainerControl" LayoutItem="{Binding LayoutItem}" />
      <Border DataContext="{Binding LayoutItem.DataContext}" Grid.Row="1">
        <ve:UIElementPresenter UIElement="{Binding Path=Content.LayoutItem.ContentPresenter, RelativeSource={RelativeSource TemplatedParent}}" />
      </Border>
    </Grid>
  </DataTemplate>
  <DataTemplate x:Key="{dxt:DockPaneElementsThemeKey ResourceKey=LayoutHostTemplate}">
    <Grid ve:DockPane.HitTestType="Content" DataContext="{Binding LayoutItem.DataContext}">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition />
      </Grid.RowDefinitions>
      <ve:DockBarContainerControl x:Name="PART_BarContainerControl" LayoutItem="{Binding Content.LayoutItem, RelativeSource={RelativeSource TemplatedParent}}" />
      <ScrollViewer HorizontalScrollBarVisibility="{Binding Content.LayoutItem.HorizontalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}}" VerticalScrollBarVisibility="{Binding Content.LayoutItem.VerticalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}}" Focusable="False" Grid.Row="1" BorderBrush="Transparent" dxn:ContentControlHelper.ContentIsNotLogical="False">
        <ve:UIElementPresenter UIElement="{Binding Path=Content.LayoutItem.ContentPresenter, RelativeSource={RelativeSource TemplatedParent}}" />
      </ScrollViewer>
    </Grid>
  </DataTemplate>
  <!--BEGIN DockPane Main Template -->
  <!-- !!! This template is overriden in DeepBlue, LightGray, VS2010, Office2010, Office2007, Seven themes -->
  <ControlTemplate x:Key="{dxt:DockPaneElementsThemeKey ResourceKey=Template}" TargetType="ve:DockPane">
    <Grid ve:DockPane.HitTestType="Bounds" Background="Transparent" Margin="{Binding Path=LayoutItem.ActualMargin, RelativeSource={RelativeSource TemplatedParent}}">
      <Border SnapsToDevicePixels="True" Background="{TemplateBinding Background}" Margin="{TemplateBinding ActualBorderMargin}" Padding="{TemplateBinding ActualBorderPadding}" BorderThickness="{TemplateBinding ActualBorderThickness}" BorderBrush="{TemplateBinding ActualBorderBrush}" CornerRadius="{TemplateBinding ActualCaptionCornerRadius}">
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
          </Grid.RowDefinitions>
          <ve:FloatingDragWidget Background="Transparent">
            <ve:DockPaneHeaderPresenter x:Name="PART_Header" Content="{TemplateBinding Header}" Margin="{DynamicResource {dxt:DockPaneElementsThemeKey ResourceKey=HeaderMargin}}" />
          </ve:FloatingDragWidget>
          <ve:DockPaneContentPresenter x:Name="PART_Content" Grid.Row="1" Content="{TemplateBinding Content}" Margin="{Binding Path=LayoutItem.ActualPadding, RelativeSource={RelativeSource TemplatedParent}}" />
        </Grid>
      </Border>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="ViewStyle" Value="Light">
        <Setter Property="Margin" TargetName="PART_Header" Value="{DynamicResource {dxt:DockPaneElementsThemeKey ResourceKey=LightViewHeaderMargin}}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <!--END DockPane Main Template -->
  <!-- AutoHide Theme Elements -->
  <ControlTemplate x:Key="{dxt:AutoHideTrayElementsThemeKey ResourceKey=Template}" TargetType="ve:AutoHideTray">
    <Border x:Name="bounds" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding ActualBorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
      <ItemsPresenter />
    </Border>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxt:AutoHideTrayElementsThemeKey ResourceKey=HeadersGroup}" TargetType="ve:AutoHideTrayHeadersGroup">
    <ItemsPresenter />
  </ControlTemplate>
  <!-- ControlItem Theme Elements -->
  <DataTemplate x:Key="{dxt:ControlItemElementsThemeKey ResourceKey=Caption}">
    <Border Background="Transparent" ve:DockPane.HitTestType="Header" DataContext="{Binding LayoutItem}">
      <ve:TemplatedCaptionControl LayoutItem="{Binding}" Width="{Binding Path=ActualCaptionWidth}" Padding="{Binding Path=ActualCaptionMargin}" />
    </Border>
  </DataTemplate>
  <DataTemplate x:Key="{dxt:ControlItemElementsThemeKey ResourceKey=Control}">
    <Border x:Name="border" ve:DockPane.HitTestType="Content" DataContext="{Binding LayoutItem.DataContext}">
      <ve:UIElementPresenter UIElement="{Binding Path=Content.LayoutItem.ContentPresenter, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="{Binding Path=Content.LayoutItem.ControlHorizontalAlignment, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="{Binding Path=Content.LayoutItem.ControlVerticalAlignment, RelativeSource={RelativeSource TemplatedParent}}" />
    </Border>
  </DataTemplate>
  <DataTemplate x:Key="{dxt:FloatPaneElementsThemeKey ResourceKey=Template}">
    <Grid DataContext="{Binding LayoutItem}" Visibility="{Binding ActualVisibility}">
      <Grid.Resources>
        <dxmvvm:ObjectToObjectConverter x:Key="FloatStateToVisibilityConverter" DefaultTarget="Collapsed">
          <dxmvvm:MapItem Source="Minimized" Target="Visible" />
        </dxmvvm:ObjectToObjectConverter>
        <dxmvvm:ObjectToObjectConverter x:Key="FloatStateToVisibilityConverterInverted" DefaultTarget="Visible">
          <dxmvvm:MapItem Source="Minimized" Target="Collapsed" />
        </dxmvvm:ObjectToObjectConverter>
      </Grid.Resources>
      <ve:FormBorderControl x:Name="PART_FormBorderControl" Visibility="{Binding FloatState, Converter={StaticResource FloatStateToVisibilityConverterInverted}}" SingleBorderMargin="{DynamicResource {dxt:FloatPaneElementsThemeKey ResourceKey=SingleBorderMargin}}" FormBorderMargin="{DynamicResource {dxt:FloatPaneElementsThemeKey ResourceKey=FormBorderMargin}}" MaximizedBorderMargin="{DynamicResource {dxt:FloatPaneElementsThemeKey ResourceKey=MaximizedBorderMargin}}" />
      <ve:MinimizedFloatGroupsItem Content="{Binding LayoutItemData}" Visibility="{Binding FloatState, Converter={StaticResource FloatStateToVisibilityConverter}}" HorizontalAlignment="Left" VerticalAlignment="Top" MinHeight="28" />
    </Grid>
  </DataTemplate>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Docking.VisualElements.FormBorderControl}" TargetType="ve:FormBorderControl">
    <Setter Property="EmptyBorderTemplate" Value="{DynamicResource {dxt:FloatPaneElementsThemeKey ResourceKey=EmptyBorderTemplate}}" />
    <Setter Property="SingleBorderTemplate" Value="{DynamicResource {dxt:FloatPaneElementsThemeKey ResourceKey=SingleBorderTemplate}}" />
    <Setter Property="FormBorderTemplate" Value="{DynamicResource {dxt:FloatPaneElementsThemeKey ResourceKey=FormBorderTemplate}}" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Docking.VisualElements.FormBorderContentControl}" TargetType="ve:FormBorderContentControl">
    <Setter Property="Template" Value="{DynamicResource {dxt:FloatPaneElementsThemeKey ResourceKey=FormBorderContentTemplate}}" />
    <Setter Property="Focusable" Value="False" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Docking.VisualElements.ResizeBoundsControl}" TargetType="{x:Type ve:ResizeBoundsControl}">
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ve:ResizeBoundsControl">
          <Grid x:Name="PART_ResizeBorders" ve:DockPane.HitTestType="Border" FlowDirection="LeftToRight">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="10" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="10" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="10" />
              <RowDefinition Height="*" />
              <RowDefinition Height="10" />
            </Grid.RowDefinitions>
            <Path x:Name="TopLeft" Fill="Transparent" Stretch="Fill" Data="F1M414,287L410,287 410,281 410,277 414,277 420,277 420,281 414,281 414,287z" Width="{DynamicResource {dxt:FloatPaneElementsThemeKey ResourceKey=ResizingCornerLength}}" Height="{DynamicResource {dxt:FloatPaneElementsThemeKey ResourceKey=ResizingCornerLength}}" HorizontalAlignment="Left" VerticalAlignment="Top" ve:DockPane.HitTestType="SizeNW">
              <Path.Cursor>
                <Binding Path="AllowSizing">
                  <Binding.Converter>
                    <ve:ConditionalCursorConverter Cursor="SizeNWSE" />
                  </Binding.Converter>
                </Binding>
              </Path.Cursor>
            </Path>
            <Path x:Name="TopRight" Fill="Transparent" Stretch="Fill" Data="F1M430,294L430,290 436,290 440,290 440,294 440,300 436,300 436,294 430,294z" Width="{DynamicResource {dxt:FloatPaneElementsThemeKey ResourceKey=ResizingCornerLength}}" Height="{DynamicResource {dxt:FloatPaneElementsThemeKey ResourceKey=ResizingCornerLength}}" HorizontalAlignment="Right" VerticalAlignment="Top" Grid.Column="2" ve:DockPane.HitTestType="SizeNE">
              <Path.Cursor>
                <Binding Path="AllowSizing">
                  <Binding.Converter>
                    <ve:ConditionalCursorConverter Cursor="SizeNESW" />
                  </Binding.Converter>
                </Binding>
              </Path.Cursor>
            </Path>
            <Path x:Name="BottomRight" Fill="Transparent" Stretch="Fill" Data="F1M393,279L397,279 397,285 397,289 393,289 387,289 387,285 393,285 393,279z" Width="{DynamicResource {dxt:FloatPaneElementsThemeKey ResourceKey=ResizingCornerLength}}" Height="{DynamicResource {dxt:FloatPaneElementsThemeKey ResourceKey=ResizingCornerLength}}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Grid.Column="2" Grid.Row="2" ve:DockPane.HitTestType="SizeSE">
              <Path.Cursor>
                <Binding Path="AllowSizing">
                  <Binding.Converter>
                    <ve:ConditionalCursorConverter Cursor="SizeNWSE" />
                  </Binding.Converter>
                </Binding>
              </Path.Cursor>
            </Path>
            <Path x:Name="BottomLeft" Fill="Transparent" Stretch="Fill" Data="F1M416,312L416,316 410,316 406,316 406,312 406,306 410,306 410,312 416,312z" Width="{DynamicResource {dxt:FloatPaneElementsThemeKey ResourceKey=ResizingCornerLength}}" Height="{DynamicResource {dxt:FloatPaneElementsThemeKey ResourceKey=ResizingCornerLength}}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Grid.Column="0" Grid.Row="2" ve:DockPane.HitTestType="SizeSW">
              <Path.Cursor>
                <Binding Path="AllowSizing">
                  <Binding.Converter>
                    <ve:ConditionalCursorConverter Cursor="SizeNESW" />
                  </Binding.Converter>
                </Binding>
              </Path.Cursor>
            </Path>
            <Rectangle x:Name="Bottom" Fill="Transparent" Stretch="Fill" VerticalAlignment="Bottom" Height="{DynamicResource {dxt:FloatPaneElementsThemeKey ResourceKey=ResizingSideLength}}" Grid.Column="1" Grid.Row="2" ve:DockPane.HitTestType="SizeS">
              <Rectangle.Cursor>
                <Binding Path="AllowSizing">
                  <Binding.Converter>
                    <ve:ConditionalCursorConverter Cursor="SizeNS" />
                  </Binding.Converter>
                </Binding>
              </Rectangle.Cursor>
            </Rectangle>
            <Rectangle x:Name="Top" Fill="Transparent" Stretch="Fill" VerticalAlignment="Top" Height="{DynamicResource {dxt:FloatPaneElementsThemeKey ResourceKey=ResizingSideLength}}" Grid.Column="1" Grid.Row="0" ve:DockPane.HitTestType="SizeN">
              <Rectangle.Cursor>
                <Binding Path="AllowSizing">
                  <Binding.Converter>
                    <ve:ConditionalCursorConverter Cursor="SizeNS" />
                  </Binding.Converter>
                </Binding>
              </Rectangle.Cursor>
            </Rectangle>
            <Rectangle x:Name="Left" Fill="Transparent" Stretch="Fill" HorizontalAlignment="Left" Width="{DynamicResource {dxt:FloatPaneElementsThemeKey ResourceKey=ResizingSideLength}}" Grid.Column="0" Grid.Row="1" ve:DockPane.HitTestType="SizeW">
              <Rectangle.Cursor>
                <Binding Path="AllowSizing">
                  <Binding.Converter>
                    <ve:ConditionalCursorConverter Cursor="SizeWE" />
                  </Binding.Converter>
                </Binding>
              </Rectangle.Cursor>
            </Rectangle>
            <Rectangle x:Name="Right" Fill="Transparent" Stretch="Fill" HorizontalAlignment="Right" Width="{DynamicResource {dxt:FloatPaneElementsThemeKey ResourceKey=ResizingSideLength}}" Grid.Column="2" Grid.Row="1" ve:DockPane.HitTestType="SizeE">
              <Rectangle.Cursor>
                <Binding Path="AllowSizing">
                  <Binding.Converter>
                    <ve:ConditionalCursorConverter Cursor="SizeWE" />
                  </Binding.Converter>
                </Binding>
              </Rectangle.Cursor>
            </Rectangle>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Docking.VisualElements.AutoHidePanePresenter}" TargetType="ve:AutoHidePanePresenter">
    <Setter Property="Win32CompatibleTemplate">
      <Setter.Value>
        <ControlTemplate TargetType="ve:AutoHidePanePresenter">
          <Border Background="Transparent">
            <dxp:AutoHideWindowHost x:Name="Host" Background="{DynamicResource {dxt:BrushElementsThemeKey ResourceKey=PanelBackground}}" Margin="{DynamicResource {dxt:AutoHidePaneElementsThemeKey ResourceKey=ContentMargin}}">
              <AdornerDecorator>
                <ContentPresenter />
              </AdornerDecorator>
            </dxp:AutoHideWindowHost>
          </Border>
          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxdo:DockLayoutManager.DockLayoutManager).ViewStyle, RelativeSource={RelativeSource Self}}" Value="Light">
              <Setter Property="Margin" TargetName="Host" Value="0" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Docking.VisualElements.ElementSizer}" TargetType="ve:ElementSizer">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="IsTabStop" Value="False" />
    <Setter Property="Template" Value="{DynamicResource {dxt:DockElementsThemeKey ResourceKey=ElementSizer}}" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Docking.VisualElements.MinimizedFloatGroupsItem}" TargetType="{x:Type ve:MinimizedFloatGroupsItem}">
    <Setter Property="Template" Value="{DynamicResource {dxt:MinimizedFloatGroupsItemElementsThemeKey ResourceKey=Template}}" />
  </Style>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Docking.VisualElements.MinimizedFloatGroupsItemsControl}" TargetType="{x:Type ve:MinimizedFloatGroupsItemsControl}" BasedOn="{StaticResource {x:Type ItemsControl}}">
    <Setter Property="Focusable" Value="False" />
  </Style>
</ResourceDictionary>