<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxtEx="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxep="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxepc="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:help="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
  <!--PROCESS SETTERS WITH BINDING-->
  <!--BEGIN WPF-->
  <ResourceDictionary.MergedDictionaries>
    <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2010Black.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/Generic/TextEdit.xaml" />
    <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2010Black.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/Generic/Common.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <!--END WPF-->
  <Thickness x:Key="{dxet:MemoEditThemeKey ResourceKey=InplaceMargin}">0</Thickness>
  <Style x:Key="{dxet:MemoEditThemeKey ResourceKey=MemoStyle}" TargetType="dxe:TextEdit">
    <Setter Property="MaxLength" Value="{Binding Path=Tag.MaxLength, RelativeSource={RelativeSource TemplatedParent}}" />
    <Setter Property="IsReadOnly" Value="{Binding Path=Tag.IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="ShowBorder" Value="False" />
    <Setter Property="Foreground" Value="{Binding Path=Tag.Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
    <Setter Property="TextWrapping" Value="{Binding Path=Tag.MemoTextWrapping, RelativeSource={RelativeSource TemplatedParent}}" />
    <Setter Property="AcceptsReturn" Value="{Binding Path=Tag.MemoAcceptsReturn, RelativeSource={RelativeSource TemplatedParent}}" />
    <Setter Property="SelectAllOnGotFocus" Value="False" />
    <!--BEGIN WPF-->
    <Setter Property="AcceptsTab" Value="{Binding Path=Tag.MemoAcceptsTab, RelativeSource={RelativeSource TemplatedParent}}" />
    <!--END WPF-->
    <Setter Property="VerticalScrollBarVisibility" Value="{Binding Path=Tag.MemoVerticalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}}" />
    <Setter Property="HorizontalScrollBarVisibility" Value="{Binding Path=Tag.MemoHorizontalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}}" />
  </Style>
  <ControlTemplate x:Key="{dxet:MemoEditThemeKey ResourceKey=PopupContentTemplate}" TargetType="ContentControl">
    <Grid Style="{DynamicResource {dxet:MemoEditThemeKey ResourceKey=MemoBackgroundStyle}}">
      <dxepc:TextEdit x:Name="PART_PopupContent" Style="{DynamicResource {dxet:MemoEditThemeKey ResourceKey=MemoStyle}}" />
    </Grid>
  </ControlTemplate>
  <dx:EmbeddedResourceImageConverter x:Key="EmbeddedResourceImageConverter" />
  <dxepc:MemoEditIconIndexConverter x:Key="MemoEditIconIndexConverter" />
  <ControlTemplate x:Key="{dxet:MemoEditThemeKey ResourceKey=DisplayIconTemplate}">
    <Grid x:Name="PART_Editor" Background="Transparent" Margin="{Binding Path=(dxe:BaseEdit.OwnerEdit).Padding, RelativeSource={RelativeSource Self}}">
      <TextBlock x:Name="HeightHolder" Text=" " Margin="{DynamicResource {dxet:MemoEditThemeKey ResourceKey=InplaceMargin}}" />
      <Border Background="{Binding Path=(dxe:BaseEdit.OwnerEdit).Background}" />
      <dxcn:MultiContentControl x:Name="PART_Icon" VisibleChildIndex="{Binding Path=(dxe:BaseEdit.OwnerEdit).Text, Converter={StaticResource MemoEditIconIndexConverter}}">
        <!--BEGIN WPF-->
        <dx:PixelSnapper HorizontalAlignment="Center" VerticalAlignment="Center">
          <dx:DXImage Stretch="Fill" Width="16" Height="16" Source="/DevExpress.Xpf.Core.v24.1;component/Editors/Images/MemoEdit/DefaultIcon.svg" dx:WpfSvgPalette.Palette="{DynamicResource {dxtEx:BrushesThemeKey ResourceKey=GrayScaleSvgPalette}}" />
        </dx:PixelSnapper>
        <dx:PixelSnapper HorizontalAlignment="Center" VerticalAlignment="Center">
          <dx:DXImage Stretch="Fill" Width="16" Height="16" dx:WpfSvgPalette.Palette="{DynamicResource {dxet:BaseEditThemeKey ResourceKey=DefaultIconSvgPalette}}" Source="/DevExpress.Xpf.Core.v24.1;component/Editors/Images/MemoEdit/DefaultIcon.svg" />
        </dx:PixelSnapper>
      </dxcn:MultiContentControl>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Padding" Value="14,13" TargetName="HeightHolder" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxet:MemoEditThemeKey ResourceKey=EditNonEditableIconInplaceTemplate}">
    <Grid x:Name="PART_Editor" Background="Transparent" Margin="{Binding Path=(dxe:BaseEdit.OwnerEdit).Padding, RelativeSource={RelativeSource Self}}">
      <TextBlock x:Name="HeightHolder" Text=" " Margin="{DynamicResource {dxet:MemoEditThemeKey ResourceKey=InplaceMargin}}" />
      <Border Background="{Binding Path=(dxe:BaseEdit.OwnerEdit).Background}" Margin="{Binding Path=(dxe:BaseEdit.OwnerEdit).Padding, RelativeSource={RelativeSource Self}}" />
      <dxcn:MultiContentControl x:Name="PART_Icon" VisibleChildIndex="{Binding Path=(dxe:BaseEdit.OwnerEdit).Text, Converter={StaticResource MemoEditIconIndexConverter}}">
        <!--BEGIN WPF-->
        <dx:PixelSnapper HorizontalAlignment="Center" VerticalAlignment="Center">
          <dx:DXImage Stretch="Fill" Width="16" Height="16" Source="/DevExpress.Xpf.Core.v24.1;component/Editors/Images/MemoEdit/DefaultIcon.svg" dx:WpfSvgPalette.Palette="{DynamicResource {dxtEx:BrushesThemeKey ResourceKey=GrayScaleSvgPalette}}" />
        </dx:PixelSnapper>
        <dx:PixelSnapper HorizontalAlignment="Center" VerticalAlignment="Center">
          <dx:DXImage Stretch="Fill" Width="16" Height="16" dx:WpfSvgPalette.Palette="{DynamicResource {dxet:BaseEditThemeKey ResourceKey=DefaultIconSvgPalette}}" Source="/DevExpress.Xpf.Core.v24.1;component/Editors/Images/MemoEdit/DefaultIcon.svg" />
        </dx:PixelSnapper>
      </dxcn:MultiContentControl>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Padding" Value="14,13" TargetName="HeightHolder" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxet:MemoEditThemeKey ResourceKey=EditNonEditableIconTemplate}">
    <Grid x:Name="PART_Editor" Background="Transparent" Margin="{Binding Path=(dxe:BaseEdit.OwnerEdit).Padding, RelativeSource={RelativeSource Self}}">
      <TextBlock x:Name="HeightHolder" Text=" " Margin="2,3" />
      <Border Background="{Binding Path=(dxe:BaseEdit.OwnerEdit).Background}" Margin="{Binding Path=(dxe:BaseEdit.OwnerEdit).Padding, RelativeSource={RelativeSource Self}}" />
      <dxcn:MultiContentControl x:Name="PART_Icon" VisibleChildIndex="{Binding Path=(dxe:BaseEdit.OwnerEdit).Text, Converter={StaticResource MemoEditIconIndexConverter}}">
        <!--BEGIN WPF-->
        <dx:PixelSnapper HorizontalAlignment="Center" VerticalAlignment="Center">
          <dx:DXImage Stretch="Fill" Width="16" Height="16" Source="/DevExpress.Xpf.Core.v24.1;component/Editors/Images/MemoEdit/DefaultIcon.svg" dx:WpfSvgPalette.Palette="{DynamicResource {dxtEx:BrushesThemeKey ResourceKey=GrayScaleSvgPalette}}" />
        </dx:PixelSnapper>
        <dx:PixelSnapper HorizontalAlignment="Center" VerticalAlignment="Center">
          <dx:DXImage Stretch="Fill" Width="16" Height="16" dx:WpfSvgPalette.Palette="{DynamicResource {dxet:BaseEditThemeKey ResourceKey=DefaultIconSvgPalette}}" Source="/DevExpress.Xpf.Core.v24.1;component/Editors/Images/MemoEdit/DefaultIcon.svg" />
        </dx:PixelSnapper>
      </dxcn:MultiContentControl>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Padding" Value="12,11" TargetName="HeightHolder" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
</ResourceDictionary>