<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2010Black.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/Generic/DateTimePicker.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <SolidColorBrush x:Key="BackgroundColor"
                     Color="#FFF0F0F0"
                     cs:Name="SolidColorBrush_0001"
                     cs:Office2010Blue.Color="#FFEFF0F2"
                     cs:Office2010Silver.Color="#FFEFF0F2"/>

    <SolidColorBrush x:Key="BackgroundBorderColor"
                     Color="#FFEAEAEA"
                     cs:Name="SolidColorBrush_0002"
                     cs:Office2010Blue.Color="#FFD9D9D9"
                     cs:Office2010Silver.Color="#FFD9D9D9"/>

    <SolidColorBrush x:Key="ActiveBackgroundBorderColor"
                     Color="#FFC2A34C"
                     cs:Name="SolidColorBrush_0003"
                     cs:Office2010Blue.Color="#FFBCC9E7"
                     cs:Office2010Silver.Color="#FFBCC9E7"/>

    <SolidColorBrush x:Key="ActiveForegroundColor"
                     Color="#FF000000"
                     cs:Name="SolidColorBrush_0004"
                     cs:Office2010Blue.Color="#FF000000"
                     cs:Office2010Silver.Color="#FF000000"/>

    <SolidColorBrush x:Key="CaptionForegroundColor"
                     Color="#4C000000"
                     cs:Name="SolidColorBrush_0005"
                     cs:Office2010Blue.Color="#4C000000"
                     cs:Office2010Silver.Color="#4C000000"/>

    <SolidColorBrush x:Key="ItemsControlBackground"
                     Color="#FFFFFFFF"
                     cs:Name="SolidColorBrush_0006"
                     cs:Office2010Blue.Color="#FFFFFFFF"
                     cs:Office2010Silver.Color="#FFFFFFFF"/>

    <SolidColorBrush x:Key="ItemsControlBorderBrush"
                     Color="#00FFFFFF"
                     cs:Name="SolidColorBrush_0007"
                     cs:Office2010Blue.Color="#00FFFFFF"
                     cs:Office2010Silver.Color="#00FFFFFF"/>

    <Color x:Key="ExpandedForegroundColor"
           cs:Name="Color_0001"
           cs:Office2010Blue.Color="#FF000000"
           cs:Office2010Silver.Color="#FF000000">
        #FF000000
    </Color>

    <Color x:Key="ForegroundColor"
           cs:Name="Color_0002"
           cs:Office2010Blue.Color="#4C000000"
           cs:Office2010Silver.Color="#4C000000">
        #4C000000
    </Color>

    <LinearGradientBrush x:Key="ActiveBackgroundColor"
                         cs:Name="LinearGradientBrush_0830"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFFFE575"
                      cs:Name="GradientStop_0001"
                      Offset="0"
                      cs:Office2010Blue.Color="#FFFFE575"
                      cs:Office2010Silver.Color="#FFFFE575"
                     />
        <GradientStop Color="#FFFFF37F"
                      cs:Name="GradientStop_0002"
                      Offset="1"
                      cs:Office2010Blue.Color="#FFFFF37F"
                      cs:Office2010Silver.Color="#FFFFF37F"
                     />
        <GradientStop Color="#FFFFD86C"
                      cs:Name="GradientStop_0003"
                      Offset="0.5"
                      cs:Office2010Blue.Color="#FFFFD86C"
                      cs:Office2010Silver.Color="#FFFFD86C"
                     />
    </LinearGradientBrush>

    <DataTemplate x:Key="{dxet:DateTimePickerThemeKey ResourceKey=YearItemTemplate}">
        <Grid>
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock FontSize="18" Text="{Binding Path=Text}"/>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="{dxet:DateTimePickerThemeKey ResourceKey=MonthItemTemplate}">
        <Grid>
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock FontSize="18" Text="{Binding Path=Value, StringFormat='{}{0:MM}'}"/>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="{dxet:DateTimePickerThemeKey ResourceKey=DayItemTemplate}">
        <Grid>
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock FontSize="18" Text="{Binding Path=Text}"/>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="{dxet:DateTimePickerThemeKey ResourceKey=Hour24ItemTemplate}">
        <Grid>
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock FontSize="18" Text="{Binding Path=Text}"/>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="{dxet:DateTimePickerThemeKey ResourceKey=Hour12ItemTemplate}">
        <Grid>
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock FontSize="18" Text="{Binding Path=Text}"/>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="{dxet:DateTimePickerThemeKey ResourceKey=MinuteItemTemplate}">
        <Grid>
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock FontSize="18" Text="{Binding Path=Text}"/>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="{dxet:DateTimePickerThemeKey ResourceKey=SecondItemTemplate}">
        <Grid>
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock FontSize="18" Text="{Binding Path=Text}"/>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="{dxet:DateTimePickerThemeKey ResourceKey=MillisecondItemTemplate}">
        <Grid>
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock FontSize="18" Text="{Binding Path=Text}"/>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="{dxet:DateTimePickerThemeKey ResourceKey=AmPmItemTemplate}">
        <Grid>
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock FontSize="18" Text="{Binding Path=Text}"/>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="{dxet:DateTimePickerThemeKey ResourceKey=NoneItemTemplate}"/>

    <ControlTemplate x:Key="{dxet:DateTimePickerThemeKey ResourceKey=ItemTemplate}" TargetType="{x:Type dxe:DateTimePickerItem}">
        <ControlTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsExpanded, RelativeSource={RelativeSource Self}}" Value="true"/>
                    <Condition Binding="{Binding Path=UseTransitions, RelativeSource={RelativeSource Self}}" Value="true"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard x:Name="expandedStateStoryboard">
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.2"
                                             Storyboard.TargetName="itemBackground"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                            <ColorAnimation Duration="0:0:0.2"
                                            Storyboard.TargetName="foregroundColor"
                                            Storyboard.TargetProperty="Color"
                                            To="{StaticResource ExpandedForegroundColor}"/>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.EnterActions>
                <MultiDataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="expandedStateStoryboard"/>
                </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsExpanded, RelativeSource={RelativeSource Self}}" Value="false"/>
                    <Condition Binding="{Binding Path=UseTransitions, RelativeSource={RelativeSource Self}}" Value="true"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard x:Name="hiddenStateStoryboard">
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.2"
                                             Storyboard.TargetName="itemBackground"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0"/>
                            <ColorAnimation Duration="0:0:0.2"
                                            Storyboard.TargetName="foregroundColor"
                                            Storyboard.TargetProperty="Color"
                                            To="{StaticResource ForegroundColor}"/>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.EnterActions>
                <MultiDataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="hiddenStateStoryboard"/>
                </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsExpanded, RelativeSource={RelativeSource Self}}" Value="true"/>
                    <Condition Binding="{Binding Path=UseTransitions, RelativeSource={RelativeSource Self}}" Value="false"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard x:Name="instantlyExpandedStateStoryboard">
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.0"
                                             Storyboard.TargetName="itemBackground"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                            <ColorAnimation Duration="0:0:0.0"
                                            Storyboard.TargetName="foregroundColor"
                                            Storyboard.TargetProperty="Color"
                                            To="{StaticResource ExpandedForegroundColor}"/>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.EnterActions>
                <MultiDataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="instantlyExpandedStateStoryboard"/>
                </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsExpanded, RelativeSource={RelativeSource Self}}" Value="false"/>
                    <Condition Binding="{Binding Path=UseTransitions, RelativeSource={RelativeSource Self}}" Value="false"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard x:Name="instantlyHiddenStateStoryboard">
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.0"
                                             Storyboard.TargetName="itemBackground"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0"/>
                            <ColorAnimation Duration="0:0:0.0"
                                            Storyboard.TargetName="foregroundColor"
                                            Storyboard.TargetProperty="Color"
                                            To="{StaticResource ForegroundColor}"/>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.EnterActions>
                <MultiDataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="instantlyHiddenStateStoryboard"/>
                </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
        <Grid Background="Transparent"
              cs:Name="Grid_0001"
              Opacity="{Binding Path=IsFake, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InvertedBoolToDoubleConverter}}"
              cs:Office2010Blue.Background="Transparent"
              cs:Office2010Silver.Background="Transparent"
             >
            <Grid x:Name="itemBackground"
                  Margin="{TemplateBinding Padding}"
                  Opacity="0">
                <Border x:Name="activeSelectedBorder"
                        Background="{StaticResource ActiveBackgroundBorderColor}"
                        Opacity="{Binding Path=IsActive, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToDoubleConverter}}">
                    <Border x:Name="activeBackground"
                            Background="{StaticResource ActiveBackgroundColor}"
                            Margin="1"/>
                </Border>
                <Border x:Name="selectedBorder"
                        Background="{StaticResource BackgroundBorderColor}"
                        Opacity="{Binding Path=IsActive, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InvertedBoolToDoubleConverter}}">
                    <Border x:Name="background"
                            Background="{StaticResource BackgroundColor}"
                            Margin="1"/>
                </Border>
            </Grid>
            <ContentPresenter x:Name="content" Margin="{TemplateBinding Padding}">
                <TextBlock.Foreground>
                    <SolidColorBrush x:Name="foregroundColor" Color="{StaticResource ForegroundColor}"/>
                </TextBlock.Foreground>
            </ContentPresenter>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:DateTimePickerThemeKey ResourceKey=Template}">
        <ItemsControl x:Name="ItemsControl"
                      Background="{StaticResource ItemsControlBackground}"
                      BorderBrush="{StaticResource ItemsControlBorderBrush}"
                      cs:Name="ItemsControl_0001"
                      dx:FocusHelper2.Focusable="False"
                      HorizontalAlignment="Center"
                      ItemTemplate="{DynamicResource {dxet:DateTimePickerThemeKey ResourceKey=DateTimePickerItemTemplate}}"
                      VirtualizingStackPanel.VirtualizationMode="Recycling">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel Orientation="Horizontal" VirtualizingStackPanel.VirtualizationMode="Recycling"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:DateTimePickerThemeKey ResourceKey=SelectorTemplate}" TargetType="{x:Type dxe:DateTimePickerSelector}">
        <Grid>
            <Grid x:Name="SelectedItemContainer"
                  HorizontalAlignment="Center"
                  Opacity="{Binding Path=IsAnimated, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InvertedBoolToDoubleConverter}}"
                  VerticalAlignment="Center">
                <dxe:DateTimePickerItem x:Name="SelectedItemContainerData"
                                        Content="{TemplateBinding SelectedItem}"
                                        ContentTemplate="{Binding Path=SelectedItemTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                        Foreground="{StaticResource ActiveForegroundColor}"
                                        IsActive="{TemplateBinding IsExpanded}"
                                        IsExpanded="True"/>
            </Grid>
            <Grid x:Name="pickerSelectorContainer"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center">
                <dxe:DXScrollViewer CanContentScroll="True"
                                    dx:FocusHelper2.Focusable="False"
                                    IsDeferredScrollingEnabled="True"
                                    IsManipulationEnabled="False"
                                    PanningMode="None"
                                    VerticalScrollBarVisibility="Hidden"
                                    VerticalSnapPointsAlignment="Near">
                    <dxe:DateTimePickerPanel x:Name="pickerPanel"/>
                </dxe:DXScrollViewer>
                <Grid x:Name="selectedItemCaption"
                      HorizontalAlignment="Center"
                      Opacity="{Binding Path=IsAnimated, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InvertedBoolToDoubleConverter}}"
                      VerticalAlignment="Center">
                    <TextBlock Foreground="{StaticResource CaptionForegroundColor}"
                               IsHitTestVisible="False"
                               Margin="0,40,0,0"
                               Text="{Binding Path=SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource DateTimePickerDataCaptionConverter}}"/>
                </Grid>
            </Grid>
        </Grid>
    </ControlTemplate>

</ResourceDictionary>