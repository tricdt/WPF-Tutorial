<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxa="http://schemas.devexpress.com/winfx/2008/xaml/accordion" xmlns:dxan="http://schemas.devexpress.com/winfx/2008/xaml/accordion/internal" xmlns:dxat="http://schemas.devexpress.com/winfx/2008/xaml/accordion/themekeys" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
  <ResourceDictionary.MergedDictionaries>
    <dxdst:ResourceDictionaryEx Source="Resources.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <dxmvvm:ObjectToObjectConverter x:Key="collapseItemConverter" DefaultTarget="False">
    <dxmvvm:MapItem Source="Container" Target="True" />
  </dxmvvm:ObjectToObjectConverter>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Accordion.AccordionItem}" TargetType="{x:Type dxa:AccordionItem}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="GlyphTemplate" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=AccordionItemDefaultGlyphTemplate}}" />
    <Setter Property="Foreground" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=TextForeground}}" />
    <Setter Property="FontSize" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderFontSize}}" />
    <Setter Property="FontWeight" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderFontWeight}}" />
    <Setter Property="FontStretch" Value="Normal" />
    <Setter Property="FontStyle" Value="Normal" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dxa:AccordionItem}">
          <ContentControl x:Name="PART_RootContentControl" BorderThickness="0" Background="Transparent" Focusable="False" FocusVisualStyle="{x:Null}" Foreground="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=TextForeground}}">
            <dxmvvm:Interaction.Behaviors>
              <dxa:AccordionItemForegroundBehavior ItemType="{Binding ItemType, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" TextDefaultForeground="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=TextForeground}}" ItemDefaultForeground="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderDefaultForeground}}" RootItemDefaultForeground="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderDefaultForeground}}" />
            </dxmvvm:Interaction.Behaviors>
            <Grid x:Name="PART_ItemContainer">
              <Grid.ColumnDefinitions>
                <ColumnDefinition>
                  <dxmvvm:Interaction.Behaviors>
                    <dxa:AccordionItemOffsetBehavior ItemLevel="{Binding ItemLevel, RelativeSource={RelativeSource TemplatedParent}}" Offset="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemOffset}}" TouchOffset="{StaticResource ItemTouchOffset}" ItemType="{Binding ItemType, RelativeSource={RelativeSource TemplatedParent}}" IsTouchEnabled="{Binding Path=(dx:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource TemplatedParent}}" RootItemDisplayMode="{Binding Path=(dxa:AccordionView.CurrentView).Accordion.RootItemDisplayMode, RelativeSource={RelativeSource TemplatedParent}}" RemoveOffset="{Binding Path=(dxa:AccordionView.CurrentView).IsSingleRootItemViewMode, RelativeSource={RelativeSource TemplatedParent}}" />
                  </dxmvvm:Interaction.Behaviors>
                </ColumnDefinition>
                <ColumnDefinition x:Name="HeaderColumn" Width="*" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition x:Name="HeaderRow" Height="Auto" MinHeight="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderHeight}}" />
                <RowDefinition />
              </Grid.RowDefinitions>
              <dxa:AccordionItemBackgroundControl x:Name="PART_BackgroundControl" Focusable="False" ItemState="Default" Grid.Column="1" ItemType="{TemplateBinding ItemType}" Margin="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderContainerMargin}}" Template="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemBackgroundTemplate}}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" />
              <Grid x:Name="PART_HeaderContainer" Grid.Column="1" Background="Transparent" Margin="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderContainerMargin}}">
                <Grid x:Name="PART_HeaderInternalContainer" Grid.Column="1" Margin="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderMargin}}">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition x:Name="LeftExpandButtonColumn" Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition x:Name="RightExpandButtonColumn" Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                  </Grid.RowDefinitions>
                  <dxa:AccordionItemBackgroundControl x:Name="PART_SelectionIndicator" Grid.RowSpan="2" Focusable="False" HorizontalAlignment="Left" VerticalAlignment="Center" ItemState="Default" ItemType="{TemplateBinding ItemType}" Template="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=SelectionIndicatorTemplate}}" />
                  <dxa:AccordionExpandButton Grid.RowSpan="2" Grid.Column="1" x:Name="PART_ExpandButton" Style="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ExpanderButtonStyle}}" />
                  <dxa:GlyphPresenter x:Name="PART_Glyph" Grid.Column="2" Grid.Row="1" Style="{StaticResource glyphPresenterStyle}">
                    <dxmvvm:Interaction.Behaviors>
                      <dxa:GlyphMarginBehavior HasGlyph="{Binding Glyph, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:ObjectToBooleanConverter}}" GlyphPosition="{Binding ActualGlyphPosition, RelativeSource={RelativeSource TemplatedParent}}" GlyphTouchMargin="{StaticResource GlyphTouchMargin}" HeaderElementsMargin="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=HeaderElementsMargin}}" IsTouchEnabled="{Binding Path=(dx:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource TemplatedParent}}" />
                    </dxmvvm:Interaction.Behaviors>
                  </dxa:GlyphPresenter>
                  <Border x:Name="PART_Header" Grid.Column="3" Grid.ColumnSpan="3" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" SnapsToDevicePixels="True">
                    <ContentPresenter x:Name="PART_HeaderContent" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" ContentSource="Header" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=HeaderElementsMargin}}">
                      <ContentPresenter.Resources>
                        <Style TargetType="TextBlock" x:Key="{x:Type TextBlock}">
                          <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                        </Style>
                      </ContentPresenter.Resources>
                    </ContentPresenter>
                  </Border>
                  <Border x:Name="PART_RightBorder" Grid.Column="8" Grid.RowSpan="2" BorderThickness="0" Margin="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=HeaderElementsMargin}}" />
                </Grid>
              </Grid>
              <dxan:AccordionExpander Grid.Row="1" Grid.Column="1" x:Name="PART_Expander" IsExpanded="True" Duration="0" ExpandStoryboard="{Binding Path=(dxa:AccordionView.CurrentView).Accordion.ExpandStoryboard, RelativeSource={RelativeSource TemplatedParent}}" CollapseStoryboard="{Binding Path=(dxa:AccordionView.CurrentView).Accordion.CollapseStoryboard, RelativeSource={RelativeSource TemplatedParent}}">
                <ItemsPresenter x:Name="ItemsHost" />
              </dxan:AccordionExpander>
            </Grid>
          </ContentControl>
          <ControlTemplate.Triggers>
            <!--#region Misc-->
            <Trigger Property="AllowAnimation" Value="false">
              <Setter TargetName="PART_Expander" Property="ExpandStoryboard" Value="{x:Null}" />
              <Setter TargetName="PART_Expander" Property="CollapseStoryboard" Value="{x:Null}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="PART_HeaderContainer" Property="Opacity" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=DisabledItemOpacity}}" />
            </Trigger>
            <Trigger Property="ItemType" Value="RootItem">
              <Setter TargetName="PART_HeaderInternalContainer" Property="Margin" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderMargin}}" />
              <Setter TargetName="PART_Expander" Property="Margin" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemContainerMargin}}" />
              <Setter TargetName="PART_HeaderContainer" Property="Margin" Value="0" />
              <Setter TargetName="PART_BackgroundControl" Property="Margin" Value="0" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
              <Setter TargetName="PART_HeaderContent" Property="Margin" Value="{StaticResource HeaderTouchMargin}" />
              <Setter TargetName="PART_RightBorder" Property="Margin" Value="{StaticResource HeaderTouchMargin}" />
            </Trigger>
            <Trigger Property="ItemType" Value="Wrapper">
              <Setter TargetName="PART_HeaderContent" Property="HorizontalAlignment" Value="Stretch" />
              <Setter TargetName="PART_HeaderContent" Property="VerticalAlignment" Value="Stretch" />
              <Setter TargetName="PART_HeaderContent" Property="Margin" Value="0" />
              <Setter TargetName="PART_Header" Property="Margin" Value="0" />
              <Setter TargetName="PART_HeaderInternalContainer" Property="Margin" Value="0" />
              <Setter TargetName="PART_RightBorder" Property="Margin" Value="0" />
              <Setter TargetName="PART_HeaderContainer" Property="Margin" Value="0" />
              <Setter TargetName="PART_BackgroundControl" Property="Margin" Value="0" />
            </Trigger>
            <!--#endregion-->
            <!--#region Expand Collapse-->
            <Trigger Property="IsExpanded" Value="false">
              <Setter TargetName="PART_Expander" Property="IsExpanded" Value="False" />
            </Trigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding ItemVisibilityMode, RelativeSource={RelativeSource Self}}" Value="ShowSubItems" />
                <Condition Binding="{Binding ItemLevel, RelativeSource={RelativeSource Self}}" Value="0" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="PART_Expander" Property="IsExpanded" Value="True" />
              <Setter TargetName="PART_Expander" Property="ExpandStoryboard" Value="{x:Null}" />
              <Setter TargetName="PART_Expander" Property="CollapseStoryboard" Value="{x:Null}" />
            </MultiDataTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsExpanded" SourceName="PART_Expander" Value="true" />
                <Condition Property="Expanding" SourceName="PART_Expander" Value="false" />
                <Condition Property="AllowAnimation" Value="false" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_Expander" Property="AnimationProgress" Value="1" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="AnimationProgress" SourceName="PART_Expander" Value="0" />
                <Condition Property="AllowAnimation" Value="true" />
              </MultiTrigger.Conditions>
              <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsExpanded" SourceName="PART_Expander" Value="false" />
                <Condition Property="AllowAnimation" Value="false" />
              </MultiTrigger.Conditions>
              <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
            </MultiTrigger>
            <!--#endregion-->
            <!--#region Glyph-->
            <Trigger Property="ActualGlyphPosition" Value="Left">
              <Setter TargetName="PART_Glyph" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="ActualGlyphPosition" Value="Right">
              <Setter TargetName="PART_Glyph" Property="Visibility" Value="Visible" />
              <Setter TargetName="PART_Glyph" Property="Grid.Column" Value="6" />
              <Setter TargetName="PART_Glyph" Property="Grid.Row" Value="1" />
            </Trigger>
            <Trigger Property="ActualGlyphPosition" Value="Top">
              <Setter TargetName="PART_Glyph" Property="Visibility" Value="Visible" />
              <Setter TargetName="PART_Glyph" Property="Grid.Column" Value="4" />
              <Setter TargetName="PART_Glyph" Property="Grid.Row" Value="0" />
            </Trigger>
            <!--#endregion-->
            <!--#region Header row-->
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="dx:ThemeManager.IsTouchEnabled" Value="True" />
                <Condition Property="ItemType" Value="SubItem" />
              </MultiTrigger.Conditions>
              <Setter TargetName="HeaderRow" Property="MinHeight" Value="{StaticResource HeaderTouchHeight}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="dx:ThemeManager.IsTouchEnabled" Value="True" />
                <Condition Property="ItemType" Value="RootItem" />
              </MultiTrigger.Conditions>
              <Setter TargetName="HeaderRow" Property="MinHeight" Value="{StaticResource HeaderTouchHeight}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ItemType" Value="RootItem" />
                <Condition Property="dx:ThemeManager.IsTouchEnabled" Value="False" />
              </MultiTrigger.Conditions>
              <Setter TargetName="HeaderRow" Property="MinHeight" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderHeight}}" />
            </MultiTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding ItemVisibilityMode, RelativeSource={RelativeSource Self}}" Value="ShowSubItems" />
                <Condition Binding="{Binding ItemLevel, RelativeSource={RelativeSource Self}}" Value="0" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="HeaderRow" Property="MinHeight" Value="0" />
              <Setter TargetName="HeaderRow" Property="Height" Value="0" />
              <Setter TargetName="PART_Expander" Property="Margin" Value="0" />
            </MultiDataTrigger>
            <!--#endregion-->
            <!--#region Expand buttons visibility setters-->
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding HasItems, RelativeSource={RelativeSource Self}}" Value="True" />
                <Condition Binding="{Binding ActualExpandButtonPosition, RelativeSource={RelativeSource Self}}" Value="Left" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="PART_ExpandButton" Property="Visibility" Value="Visible" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding HasItems, RelativeSource={RelativeSource Self}}" Value="True" />
                <Condition Binding="{Binding ActualExpandButtonPosition, RelativeSource={RelativeSource Self}}" Value="Left" />
                <Condition Binding="{Binding Path=(dx:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource Self}}" Value="True" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="PART_ExpandButton" Property="Margin" Value="{StaticResource LeftExpanderTouchMargin}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding HasItems, RelativeSource={RelativeSource Self}}" Value="True" />
                <Condition Binding="{Binding ActualExpandButtonPosition, RelativeSource={RelativeSource Self}}" Value="Right" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="PART_ExpandButton" Property="Visibility" Value="Visible" />
              <Setter TargetName="PART_ExpandButton" Property="Grid.Column" Value="7" />
              <Setter TargetName="PART_ExpandButton" Property="IsRightExpandButton" Value="True" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding HasItems, RelativeSource={RelativeSource Self}}" Value="True" />
                <Condition Binding="{Binding ActualExpandButtonPosition, RelativeSource={RelativeSource Self}}" Value="Right" />
                <Condition Binding="{Binding Path=(dx:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource Self}}" Value="True" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="PART_ExpandButton" Property="Margin" Value="{StaticResource RightExpanderTouchMargin}" />
            </MultiDataTrigger>
            <!--#endregion-->
            <!--#region ExpandButtonContainer-->
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding ActualExpandButtonPosition, RelativeSource={RelativeSource Self}}" Value="Left" />
                <Condition Binding="{Binding Path=(dx:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource Self}}" Value="False" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="LeftExpandButtonColumn" Property="MinWidth" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ExpandButtonContainerMinWidth}}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding ActualExpandButtonPosition, RelativeSource={RelativeSource Self}}" Value="Left" />
                <Condition Binding="{Binding Path=(dx:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource Self}}" Value="True" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="LeftExpandButtonColumn" Property="MinWidth" Value="{StaticResource ExpandButtonContainerTouchMinWidth}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding ActualExpandButtonPosition, RelativeSource={RelativeSource Self}}" Value="Right" />
                <Condition Binding="{Binding Path=(dx:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource Self}}" Value="False" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="RightExpandButtonColumn" Property="MinWidth" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ExpandButtonContainerMinWidth}}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding ActualExpandButtonPosition, RelativeSource={RelativeSource Self}}" Value="Right" />
                <Condition Binding="{Binding Path=(dx:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource Self}}" Value="True" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="RightExpandButtonColumn" Property="MinWidth" Value="{StaticResource ExpandButtonContainerTouchMinWidth}" />
            </MultiDataTrigger>
            <!--#endregion-->
            <!--#region Foreground & States-->
            <Trigger Property="ItemType" Value="RootItem">
              <Setter TargetName="PART_ExpandButton" Property="Foreground" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderDefaultForeground}}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
              <Setter TargetName="PART_BackgroundControl" Property="ItemState" Value="Selected" />
              <Setter TargetName="PART_SelectionIndicator" Property="ItemState" Value="Selected" />
              <Setter TargetName="PART_ExpandButton" Property="ItemState" Value="Selected" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="True" />
                <Condition Property="IsSelectionActive" Value="False" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_BackgroundControl" Property="ItemState" Value="SelectedInactive" />
              <Setter TargetName="PART_SelectionIndicator" Property="ItemState" Value="SelectedInactive" />
              <Setter TargetName="PART_ExpandButton" Property="ItemState" Value="SelectedInactive" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="True" />
                <Condition Property="ItemType" Value="SubItem" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_RootContentControl" Property="Tag" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderSelectedForeground}}" />
              <Setter TargetName="PART_ExpandButton" Property="Foreground" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderSelectedForeground}}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="True" />
                <Condition Property="IsSelectionActive" Value="False" />
                <Condition Property="ItemType" Value="SubItem" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_RootContentControl" Property="Tag" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderSelectedInactiveForeground}}" />
              <Setter TargetName="PART_ExpandButton" Property="Foreground" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderSelectedInactiveForeground}}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="True" />
                <Condition Property="ItemType" Value="RootItem" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_RootContentControl" Property="Tag" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderSelectedForeground}}" />
              <Setter TargetName="PART_ExpandButton" Property="Foreground" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderSelectedForeground}}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="True" />
                <Condition Property="IsSelectionActive" Value="False" />
                <Condition Property="ItemType" Value="RootItem" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_RootContentControl" Property="Tag" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderSelectedInactiveForeground}}" />
              <Setter TargetName="PART_ExpandButton" Property="Foreground" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderSelectedInactiveForeground}}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOverHeader" Value="True" />
                <Condition Property="ActualHighlightOnHover" Value="True" />
                <Condition Property="ItemType" Value="SubItem" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_RootContentControl" Property="Tag" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderHoverForeground}}" />
              <Setter TargetName="PART_ExpandButton" Property="Foreground" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderHoverForeground}}" />
              <Setter TargetName="PART_BackgroundControl" Property="ItemState" Value="Hover" />
              <Setter TargetName="PART_SelectionIndicator" Property="ItemState" Value="Hover" />
              <Setter TargetName="PART_ExpandButton" Property="ItemState" Value="Hover" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOverHeader" Value="True" />
                <Condition Property="ActualHighlightOnHover" Value="True" />
                <Condition Property="ItemType" Value="RootItem" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_RootContentControl" Property="Tag" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderHoverForeground}}" />
              <Setter TargetName="PART_ExpandButton" Property="Foreground" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderHoverForeground}}" />
              <Setter TargetName="PART_BackgroundControl" Property="ItemState" Value="Hover" />
              <Setter TargetName="PART_SelectionIndicator" Property="ItemState" Value="Hover" />
              <Setter TargetName="PART_ExpandButton" Property="ItemState" Value="Hover" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsPressed" Value="True" />
                <Condition Property="ActualHighlightOnPress" Value="True" />
                <Condition Property="ItemType" Value="SubItem" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_ExpandButton" Property="ItemState" Value="Pressed" />
              <Setter TargetName="PART_BackgroundControl" Property="ItemState" Value="Pressed" />
              <Setter TargetName="PART_SelectionIndicator" Property="ItemState" Value="Pressed" />
              <Setter TargetName="PART_RootContentControl" Property="Tag" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderPressedForeground}}" />
              <Setter TargetName="PART_ExpandButton" Property="Foreground" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderPressedForeground}}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsPressed" Value="True" />
                <Condition Property="ActualHighlightOnPress" Value="True" />
                <Condition Property="ItemType" Value="RootItem" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_ExpandButton" Property="ItemState" Value="Pressed" />
              <Setter TargetName="PART_BackgroundControl" Property="ItemState" Value="Pressed" />
              <Setter TargetName="PART_SelectionIndicator" Property="ItemState" Value="Pressed" />
              <Setter TargetName="PART_RootContentControl" Property="Tag" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderPressedForeground}}" />
              <Setter TargetName="PART_ExpandButton" Property="Foreground" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderPressedForeground}}" />
            </MultiTrigger>
            <Trigger Property="ItemType" Value="Wrapper">
              <Setter TargetName="PART_BackgroundControl" Property="ItemState" Value="Default" />
              <Setter TargetName="PART_SelectionIndicator" Property="ItemState" Value="Default" />
            </Trigger>
            <!--#endregion-->
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
        <Setter Property="ItemsPanel">
          <Setter.Value>
            <ItemsPanelTemplate>
              <dxan:AccordionVirtualizingPanel />
            </ItemsPanelTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
      <DataTrigger Binding="{Binding Path=GlyphTemplateSelector, RelativeSource={RelativeSource Self}, Converter={dxmvvm:ObjectToBooleanConverter}}" Value="True">
        <Setter Property="GlyphTemplate" Value="{x:Null}" />
      </DataTrigger>
      <Trigger Property="ItemType" Value="RootItem">
        <Setter Property="FontWeight" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderFontWeight}}" />
        <Setter Property="FontSize" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderFontSize}}" />
      </Trigger>
      <Trigger Property="ItemType" Value="Wrapper">
        <Setter Property="GlyphPosition" Value="None" />
        <Setter Property="HighlightOnHover" Value="False" />
        <Setter Property="HighlightOnPress" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Focusable" Value="False" />
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>