<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxga="http://schemas.devexpress.com/winfx/2008/xaml/gauges" xmlns:dxdashi="http://schemas.devexpress.com/winfx/2008/xaml/dashboard/internal" xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" xmlns:dxdash="http://schemas.devexpress.com/winfx/2008/xaml/dashboard" xmlns:dxdasht="http://schemas.devexpress.com/winfx/2008/xaml/dashboard/themekeys" xmlns:dasboardthemes="http://schemas.devexpress.com/winfx/2008/xaml/dashboard/themekeys" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
  <dxdashi:EventToCommandConverter x:Key="EventToCommandConverter" />
  <dx:BoolInverseConverter x:Key="boolInverceConverter" />
  <dxmvvm:ObjectToObjectConverter DefaultTarget="Collapsed" x:Key="ViewTypeToLabelVisibilityConverter">
    <dxmvvm:MapItem Source="CircularFull" Target="Visible" />
  </dxmvvm:ObjectToObjectConverter>
  <Thickness x:Key="DeltaValuePresenterPadding">0,0,0,0</Thickness>
  <DataTemplate x:Key="{dxdasht:GaugeItemThemeKey ResourceKey=CircularGaugeControlTemplate}">
    <dxdashi:GaugeControlDecorator ViewType="{Binding ViewType}">
      <dxga:CircularGaugeControl Focusable="False">
        <dxga:CircularGaugeControl.Model>
          <dxga:CircularThemeableModel />
        </dxga:CircularGaugeControl.Model>
        <dxga:CircularGaugeControl.Scales>
          <dxga:ArcScale HorizontalAlignment="Center" StartValue="{Binding GaugeRangeModel.MinRangeValue}" EndValue="{Binding GaugeRangeModel.MaxRangeValue}" StartAngle="{Binding StartAngle}" EndAngle="{Binding EndAngle}" MajorIntervalCount="{Binding MajorIntervalCount}">
            <dxga:ArcScale.Layers>
              <dxga:ArcScaleLayer />
              <dxga:ArcScaleLayer />
            </dxga:ArcScale.Layers>
            <dxga:ArcScale.Needles>
              <dxga:ArcScaleNeedle Value="{Binding Value}" />
            </dxga:ArcScale.Needles>
            <dxga:ArcScale.Markers>
              <dxga:ArcScaleMarker Value="{Binding Target}" Visible="{Binding HasTarget}" />
            </dxga:ArcScale.Markers>
            <dxga:ArcScale.LabelOptions>
              <dxga:ArcScaleLabelOptions FormatString="{Binding ValueLabelFormat}" Offset="-6" />
            </dxga:ArcScale.LabelOptions>
            <dxga:ArcScale.LabelPresentation>
              <dxga:CustomScaleLabelPresentation>
                <dxga:CustomScaleLabelPresentation.LabelTemplate>
                  <ControlTemplate>
                    <TextBlock RenderTransformOrigin="0.5, 0.5" HorizontalAlignment="Right" Text="{Binding Text}" Foreground="{DynamicResource {dasboardthemes:GaugeItemThemeKey ResourceKey=GaugeScaleLabelForeground}}" FontSize="13.333" VerticalAlignment="Center" />
                  </ControlTemplate>
                </dxga:CustomScaleLabelPresentation.LabelTemplate>
              </dxga:CustomScaleLabelPresentation>
            </dxga:ArcScale.LabelPresentation>
            <dxga:ArcScale.CustomElements>
              <dxga:ScaleCustomElement>
                <dxdashi:DeltaValuePresenter Margin="0,52,0,0" Padding="{StaticResource DeltaValuePresenterPadding}" HorizontalAlignment="Center" VerticalAlignment="Center" Value="{Binding ValueLabel}" IsGood="{Binding GaugeModel.DeltaIsGood}" IndicatorType="{Binding IndicatorType}" FontSize="14" Visibility="{Binding ViewType, Converter={StaticResource ViewTypeToLabelVisibilityConverter}}" />
              </dxga:ScaleCustomElement>
            </dxga:ArcScale.CustomElements>
          </dxga:ArcScale>
        </dxga:CircularGaugeControl.Scales>
      </dxga:CircularGaugeControl>
    </dxdashi:GaugeControlDecorator>
  </DataTemplate>
  <DataTemplate x:Key="{dxdasht:GaugeItemThemeKey ResourceKey=ViewTypeCircularHalfTemplate}">
    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <ContentPresenter Content="{Binding}" ContentTemplate="{DynamicResource {dxdasht:GaugeItemThemeKey ResourceKey=CircularGaugeControlTemplate}}" />
      <DockPanel LastChildFill="False" Grid.Row="1">
        <StackPanel DockPanel.Dock="Left" Visibility="{Binding ShowGaugeCaptions, Converter={dxmvvm:BooleanToVisibilityConverter}}">
          <TextBlock MaxWidth="90" TextAlignment="Left" Text="{Binding SeriesLabel}" TextWrapping="Wrap" Foreground="{DynamicResource {dasboardthemes:GaugeItemThemeKey ResourceKey=GaugeCaptionForeground}}" FontSize="{DynamicResource {dasboardthemes:GaugeItemThemeKey ResourceKey=GaugeCaptionFontSize}}" />
          <TextBlock MaxWidth="90" TextAlignment="Left" Text="{Binding SeriesSubLabel}" TextWrapping="Wrap" Foreground="{DynamicResource {dasboardthemes:GaugeItemThemeKey ResourceKey=GaugeSubCaptionForeground}}" FontSize="{DynamicResource {dasboardthemes:GaugeItemThemeKey ResourceKey=GaugeSubCaptionFontSize}}" Visibility="{Binding HasSeriesSubLabel, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
        </StackPanel>
        <dxdashi:DeltaValuePresenter Padding="{StaticResource DeltaValuePresenterPadding}" DockPanel.Dock="Right" VerticalAlignment="Top" Value="{Binding ValueLabel}" IsGood="{Binding GaugeModel.DeltaIsGood}" IndicatorType="{Binding IndicatorType}" FontSize="14" />
      </DockPanel>
    </Grid>
  </DataTemplate>
  <DataTemplate x:Key="{dxdasht:GaugeItemThemeKey ResourceKey=ViewTypeCircularQuarterRightTemplate}">
    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <ContentPresenter Content="{Binding}" ContentTemplate="{DynamicResource {dxdasht:GaugeItemThemeKey ResourceKey=CircularGaugeControlTemplate}}" Grid.Row="1" />
      <StackPanel HorizontalAlignment="Left" Visibility="{Binding ShowGaugeCaptions, Converter={dxmvvm:BooleanToVisibilityConverter}}">
        <TextBlock MaxWidth="150" TextAlignment="Left" Text="{Binding SeriesLabel}" TextWrapping="Wrap" Foreground="{DynamicResource {dasboardthemes:GaugeItemThemeKey ResourceKey=GaugeCaptionForeground}}" FontSize="{DynamicResource {dasboardthemes:GaugeItemThemeKey ResourceKey=GaugeCaptionFontSize}}" />
        <TextBlock MaxWidth="150" TextAlignment="Left" Text="{Binding SeriesSubLabel}" TextWrapping="Wrap" Foreground="{DynamicResource {dasboardthemes:GaugeItemThemeKey ResourceKey=GaugeSubCaptionForeground}}" FontSize="{DynamicResource {dasboardthemes:GaugeItemThemeKey ResourceKey=GaugeSubCaptionFontSize}}" Visibility="{Binding HasSeriesSubLabel, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
      </StackPanel>
      <dxdashi:DeltaValuePresenter Padding="{StaticResource DeltaValuePresenterPadding}" Grid.Row="2" HorizontalAlignment="Left" VerticalAlignment="Top" Value="{Binding ValueLabel}" IsGood="{Binding GaugeModel.DeltaIsGood}" IndicatorType="{Binding IndicatorType}" FontSize="14" />
    </Grid>
  </DataTemplate>
  <DataTemplate x:Key="{dxdasht:GaugeItemThemeKey ResourceKey=ViewTypeCircularQuarterLeftTemplate}">
    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <ContentPresenter Content="{Binding}" ContentTemplate="{DynamicResource {dxdasht:GaugeItemThemeKey ResourceKey=CircularGaugeControlTemplate}}" Grid.Row="1" />
      <StackPanel HorizontalAlignment="Right" Visibility="{Binding ShowGaugeCaptions, Converter={dxmvvm:BooleanToVisibilityConverter}}">
        <TextBlock MaxWidth="150" TextAlignment="Right" Text="{Binding SeriesLabel}" TextWrapping="Wrap" Foreground="{DynamicResource {dasboardthemes:GaugeItemThemeKey ResourceKey=GaugeCaptionForeground}}" FontSize="{DynamicResource {dasboardthemes:GaugeItemThemeKey ResourceKey=GaugeCaptionFontSize}}" />
        <TextBlock MaxWidth="150" TextAlignment="Right" Text="{Binding SeriesSubLabel}" TextWrapping="Wrap" Foreground="{DynamicResource {dasboardthemes:GaugeItemThemeKey ResourceKey=GaugeSubCaptionForeground}}" FontSize="{DynamicResource {dasboardthemes:GaugeItemThemeKey ResourceKey=GaugeSubCaptionFontSize}}" Visibility="{Binding HasSeriesSubLabel, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
      </StackPanel>
      <dxdashi:DeltaValuePresenter Padding="{StaticResource DeltaValuePresenterPadding}" Grid.Row="2" HorizontalAlignment="Right" VerticalAlignment="Top" Value="{Binding ValueLabel}" IsGood="{Binding GaugeModel.DeltaIsGood}" IndicatorType="{Binding IndicatorType}" FontSize="14" />
    </Grid>
  </DataTemplate>
  <DataTemplate x:Key="{dxdasht:GaugeItemThemeKey ResourceKey=ViewTypeCircularThreeFourthTemplate}">
    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <ContentPresenter Content="{Binding}" ContentTemplate="{DynamicResource {dxdasht:GaugeItemThemeKey ResourceKey=CircularGaugeControlTemplate}}" />
      <DockPanel LastChildFill="False" Grid.Row="1">
        <StackPanel DockPanel.Dock="Left" Visibility="{Binding ShowGaugeCaptions, Converter={dxmvvm:BooleanToVisibilityConverter}}">
          <TextBlock MaxWidth="90" TextAlignment="Left" Text="{Binding SeriesLabel}" TextWrapping="Wrap" Foreground="{DynamicResource {dasboardthemes:GaugeItemThemeKey ResourceKey=GaugeCaptionForeground}}" FontSize="{DynamicResource {dasboardthemes:GaugeItemThemeKey ResourceKey=GaugeCaptionFontSize}}" />
          <TextBlock MaxWidth="90" TextAlignment="Left" Text="{Binding SeriesSubLabel}" TextWrapping="Wrap" Foreground="{DynamicResource {dasboardthemes:GaugeItemThemeKey ResourceKey=GaugeSubCaptionForeground}}" FontSize="{DynamicResource {dasboardthemes:GaugeItemThemeKey ResourceKey=GaugeSubCaptionFontSize}}" Visibility="{Binding HasSeriesSubLabel, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
        </StackPanel>
        <dxdashi:DeltaValuePresenter Padding="{StaticResource DeltaValuePresenterPadding}" DockPanel.Dock="Right" VerticalAlignment="Top" Value="{Binding ValueLabel}" IsGood="{Binding GaugeModel.DeltaIsGood}" IndicatorType="{Binding IndicatorType}" FontSize="14" />
      </DockPanel>
    </Grid>
  </DataTemplate>
  <DataTemplate x:Key="{dxdasht:GaugeItemThemeKey ResourceKey=ViewTypeCircularFullTemplate}">
    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <ContentPresenter Content="{Binding}" ContentTemplate="{DynamicResource {dxdasht:GaugeItemThemeKey ResourceKey=CircularGaugeControlTemplate}}" />
      <StackPanel Grid.Row="1" HorizontalAlignment="Center" Visibility="{Binding ShowGaugeCaptions, Converter={dxmvvm:BooleanToVisibilityConverter}}">
        <TextBlock MaxWidth="150" TextAlignment="Center" Text="{Binding SeriesLabel}" Foreground="{DynamicResource {dasboardthemes:GaugeItemThemeKey ResourceKey=GaugeCaptionForeground}}" FontSize="{DynamicResource {dasboardthemes:GaugeItemThemeKey ResourceKey=GaugeCaptionFontSize}}" TextWrapping="Wrap" />
        <TextBlock MaxWidth="150" TextAlignment="Center" Text="{Binding SeriesSubLabel}" Foreground="{DynamicResource {dasboardthemes:GaugeItemThemeKey ResourceKey=GaugeSubCaptionForeground}}" FontSize="{DynamicResource {dasboardthemes:GaugeItemThemeKey ResourceKey=GaugeSubCaptionFontSize}}" Visibility="{Binding HasSeriesSubLabel, Converter={dxmvvm:BooleanToVisibilityConverter}}" TextWrapping="Wrap" />
      </StackPanel>
    </Grid>
  </DataTemplate>
  <DataTemplate x:Key="{dxdasht:GaugeItemThemeKey ResourceKey=LinearGaugeControlTemplate}">
    <dxdashi:GaugeControlDecorator ViewType="{Binding ViewType}">
      <dxga:LinearGaugeControl Focusable="False">
        <dxga:LinearGaugeControl.Model>
          <dxga:LinearThemeableModel />
        </dxga:LinearGaugeControl.Model>
        <dxga:LinearGaugeControl.Scales>
          <dxga:LinearScale HorizontalAlignment="Center" LayoutMode="{Binding LayoutMode}" StartValue="{Binding GaugeRangeModel.MinRangeValue}" EndValue="{Binding GaugeRangeModel.MaxRangeValue}" MajorIntervalCount="{Binding MajorIntervalCount}">
            <dxga:LinearScale.Layers>
              <dxga:LinearScaleLayer />
              <dxga:LinearScaleLayer />
            </dxga:LinearScale.Layers>
            <dxga:LinearScale.LevelBars>
              <dxga:LinearScaleLevelBar Value="{Binding Value}" />
            </dxga:LinearScale.LevelBars>
            <dxga:LinearScale.Markers>
              <dxga:LinearScaleMarker Value="{Binding Target}" Visible="{Binding HasTarget}" />
            </dxga:LinearScale.Markers>
            <dxga:LinearScale.LabelOptions>
              <dxga:LinearScaleLabelOptions FormatString="{Binding ValueLabelFormat}" Offset="-25" />
            </dxga:LinearScale.LabelOptions>
            <dxga:LinearScale.LabelPresentation>
              <dxga:CustomScaleLabelPresentation>
                <dxga:CustomScaleLabelPresentation.LabelTemplate>
                  <ControlTemplate>
                    <TextBlock RenderTransformOrigin="0.5, 0.5" HorizontalAlignment="Right" Text="{Binding Text}" Foreground="{DynamicResource {dasboardthemes:GaugeItemThemeKey ResourceKey=GaugeScaleLabelForeground}}" FontSize="13.333" VerticalAlignment="Center" />
                  </ControlTemplate>
                </dxga:CustomScaleLabelPresentation.LabelTemplate>
              </dxga:CustomScaleLabelPresentation>
            </dxga:LinearScale.LabelPresentation>
          </dxga:LinearScale>
        </dxga:LinearGaugeControl.Scales>
      </dxga:LinearGaugeControl>
    </dxdashi:GaugeControlDecorator>
  </DataTemplate>
  <DataTemplate x:Key="{dxdasht:GaugeItemThemeKey ResourceKey=ViewTypeLinearHorizontalTemplate}">
    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <DockPanel LastChildFill="False" Grid.Row="1" DockPanel.Dock="Bottom" Margin="0,2,0,0">
        <StackPanel DockPanel.Dock="Left" Visibility="{Binding ShowGaugeCaptions, Converter={dxmvvm:BooleanToVisibilityConverter}}">
          <TextBlock MaxWidth="90" TextAlignment="Left" Text="{Binding SeriesLabel}" TextWrapping="Wrap" Foreground="{DynamicResource {dasboardthemes:GaugeItemThemeKey ResourceKey=GaugeCaptionForeground}}" FontSize="{DynamicResource {dasboardthemes:GaugeItemThemeKey ResourceKey=GaugeCaptionFontSize}}" />
          <TextBlock MaxWidth="90" TextAlignment="Left" Text="{Binding SeriesSubLabel}" TextWrapping="Wrap" Foreground="{DynamicResource {dasboardthemes:GaugeItemThemeKey ResourceKey=GaugeSubCaptionForeground}}" FontSize="{DynamicResource {dasboardthemes:GaugeItemThemeKey ResourceKey=GaugeSubCaptionFontSize}}" Visibility="{Binding HasSeriesSubLabel, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
        </StackPanel>
        <dxdashi:DeltaValuePresenter Padding="{StaticResource DeltaValuePresenterPadding}" DockPanel.Dock="Right" VerticalAlignment="Top" Value="{Binding ValueLabel}" IsGood="{Binding GaugeModel.DeltaIsGood}" IndicatorType="{Binding IndicatorType}" FontSize="14" />
      </DockPanel>
      <ContentPresenter Content="{Binding}" Margin="-20,0" ContentTemplate="{DynamicResource {dxdasht:GaugeItemThemeKey ResourceKey=LinearGaugeControlTemplate}}" />
    </Grid>
  </DataTemplate>
  <DataTemplate x:Key="{dxdasht:GaugeItemThemeKey ResourceKey=ViewTypeLinearVerticalTemplate}">
    <DockPanel>
      <dxdashi:DeltaValuePresenter Padding="{StaticResource DeltaValuePresenterPadding}" DockPanel.Dock="Bottom" VerticalAlignment="Top" Value="{Binding ValueLabel}" IsGood="{Binding GaugeModel.DeltaIsGood}" IndicatorType="{Binding IndicatorType}" FontSize="14" Panel.ZIndex="1" />
      <StackPanel DockPanel.Dock="Top" Visibility="{Binding ShowGaugeCaptions, Converter={dxmvvm:BooleanToVisibilityConverter}}">
        <TextBlock MaxWidth="90" TextAlignment="Left" Text="{Binding SeriesLabel}" TextWrapping="Wrap" Panel.ZIndex="1" Foreground="{DynamicResource {dasboardthemes:GaugeItemThemeKey ResourceKey=GaugeCaptionForeground}}" FontSize="{DynamicResource {dasboardthemes:GaugeItemThemeKey ResourceKey=GaugeCaptionFontSize}}" />
        <TextBlock MaxWidth="90" TextAlignment="Left" Text="{Binding SeriesSubLabel}" TextWrapping="Wrap" Panel.ZIndex="1" Foreground="{DynamicResource {dasboardthemes:GaugeItemThemeKey ResourceKey=GaugeSubCaptionForeground}}" FontSize="{DynamicResource {dasboardthemes:GaugeItemThemeKey ResourceKey=GaugeSubCaptionFontSize}}" Visibility="{Binding HasSeriesSubLabel, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
      </StackPanel>
      <ContentPresenter Content="{Binding}" ContentTemplate="{DynamicResource {dxdasht:GaugeItemThemeKey ResourceKey=LinearGaugeControlTemplate}}" />
    </DockPanel>
  </DataTemplate>
  <dasboardthemes:GaugeViewTypeTemplateSelector x:Key="{dxdasht:GaugeItemThemeKey ResourceKey=ViewTypeTemplateSelector}" />
  <Style x:Key="{dxdasht:GaugeItemThemeKey ResourceKey=ItemContainerStyle}" TargetType="{x:Type dxdashi:GaugeItemContainer}">
    <Setter Property="Focusable" Value="False" />
    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="dxdashi:GaugeItemContainer">
          <Grid>
            <Border Background="{DynamicResource {dasboardthemes:GaugeItemThemeKey ResourceKey=GaugeHighlightedBackgroundBrush}}" BorderBrush="{DynamicResource {dasboardthemes:GaugeItemThemeKey ResourceKey=GaugeHighlightedBorderBrush}}" BorderThickness="1" x:Name="highlight" CornerRadius="{DynamicResource {dxdasht:GaugeItemThemeKey ResourceKey=GaugeBackgroundCornerRadius}}" Visibility="{Binding HasHighlightedBackground, Converter={dxmvvm:BooleanToVisibilityConverter}}" IsHitTestVisible="False" />
            <Viewbox StretchDirection="Both" Stretch="Uniform">
              <ContentPresenter Content="{Binding}" ContentTemplateSelector="{DynamicResource ResourceKey={dxdasht:GaugeItemThemeKey ResourceKey=ViewTypeTemplateSelector}}" />
            </Viewbox>
          </Grid>
          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding IsSelected}" Value="True">
              <Setter Property="Background" TargetName="highlight" Value="{DynamicResource {dxdasht:DashboardControlThemeKey ResourceKey=SelectedItemBackground}}" />
              <Setter Property="BorderBrush" TargetName="highlight" Value="{DynamicResource {dxdasht:DashboardControlThemeKey ResourceKey=SelectedItemBorder}}" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
      <Setter.Value>
        <DataTemplate>
          <ItemsControl>
            <dxmvvm:FocusBehavior EventName="MouseDown" />
            <dxmvvm:EventToCommand EventName="MouseDown" Command="{Binding MouseDownCommand}" PassEventArgsToCommand="True" MarkRoutedEventsAsHandled="True" EventArgsConverter="{StaticResource EventToCommandConverter}" />
            <dxmvvm:EventToCommand EventName="MouseUp" Command="{Binding MouseUpCommand}" PassEventArgsToCommand="True" EventArgsConverter="{StaticResource EventToCommandConverter}" />
            <dxmvvm:EventToCommand EventName="MouseMove" Command="{Binding MouseMoveCommand}" PassEventArgsToCommand="True" EventArgsConverter="{StaticResource EventToCommandConverter}" />
            <dxmvvm:EventToCommand EventName="MouseDoubleClick" Command="{Binding MouseDoubleClickCommand}" PassEventArgsToCommand="True" EventArgsConverter="{StaticResource EventToCommandConverter}" />
            <dxmvvm:EventToCommand EventName="MouseLeave" Command="{Binding MouseLeaveCommand}" PassEventArgsToCommand="True" EventArgsConverter="{StaticResource EventToCommandConverter}" />
          </ItemsControl>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxdasht:GaugeItemThemeKey ResourceKey=ViewStyle}" TargetType="{x:Type dxdashi:GaugeItemsControl}">
    <Setter Property="VerticalContentAlignment" Value="Stretch" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="ItemsSource" Value="{Binding ItemsSource}" />
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <dxdashi:GaugesPanel VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ItemsControl">
          <ScrollViewer CanContentScroll="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
            <ItemsPresenter />
          </ScrollViewer>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemContainerStyle" Value="{DynamicResource {dxdasht:GaugeItemThemeKey ResourceKey=ItemContainerStyle}}" />
  </Style>
  <DataTemplate x:Key="{dxdasht:GaugeItemThemeKey ResourceKey=Template}">
    <dxdashi:GaugeItemsControl Style="{Binding Path=(dxdash:DashboardLayoutItem.ViewStyle), RelativeSource={RelativeSource TemplatedParent}}" />
  </DataTemplate>
</ResourceDictionary>