<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxgi="http://schemas.devexpress.com/winfx/2008/xaml/grid/internal" xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys" xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.VS2019Blue.v24.1;component/Grid/VS2019Blue/UICore.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
  <!-- General -->
  <ControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=RowControlContainerTemplate}" TargetType="{x:Type ContentControl}">
    <Grid>
      <Border x:Name="RowContentBorder">
        <Border.Background>
          <Binding Path="Background" RelativeSource="{RelativeSource TemplatedParent}" />
        </Border.Background>
      </Border>
      <Border x:Name="FadeBorder" Background="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=BorderUnfocusedBrush}}" dxg:FadeSelectionHelper.FadeSelectionOnLostFocus="{Binding Path=View.ActualFadeSelectionOnLostFocus}" dxg:FadeSelectionHelper.IsKeyboardFocusWithinView="{Binding Path=(dxg:GridControl.ActiveView).IsKeyboardFocusWithin, RelativeSource={RelativeSource Mode=Self}}" dxg:FadeSelectionHelper.IsSelected="{Binding SelectionState, Converter={dxg:SelectionStateToBooleanConverter}}" dxg:FadeSelectionHelper.Opacity="1" Visibility="Collapsed" cs:id="Border_0000" />
      <Border x:Name="RowBottomLine" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}">
        <Border.BorderThickness>
          <Binding Path="View.ShowHorizontalLines">
            <Binding.Converter>
              <dx:BoolToObjectConverter FalseValue="0" TrueValue="0,0,0,1" />
            </Binding.Converter>
          </Binding>
        </Border.BorderThickness>
      </Border>
      <ContentPresenter />
    </Grid>
    <ControlTemplate.Triggers>
      <DataTrigger Binding="{Binding Path=ShowBottomLine}" Value="True">
        <Setter Property="BorderThickness" TargetName="RowBottomLine" Value="0,0,0,1" />
      </DataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Path=(dxg:RowData.CurrentRowData).(dxe:BaseEdit.HasValidationError), RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
          <Condition Binding="{Binding Path=(dxg:RowData.CurrentRowData).IsSelected, RelativeSource={RelativeSource TemplatedParent}}" Value="False" />
        </MultiDataTrigger.Conditions>
        <Setter Property="Background" TargetName="RowContentBorder" Value="{StaticResource {dxgt:GridRowThemeKey ResourceKey=ValidationErrorBrush}}" />
      </MultiDataTrigger>
      <DataTrigger Binding="{Binding ElementName=FadeBorder, Path=Visibility}" Value="Visible">
        <Setter Property="Foreground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextUnfocusedBrush}}" />
        <Setter Property="Visibility" TargetName="RowContentBorder" Value="Collapsed" />
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <!-- TotalSummary -->
  <Style x:Key="{dxgt:GridRowThemeKey ResourceKey=DetailTotalSummaryIndentBorderStyle}" TargetType="{x:Type Border}">
    <Setter Property="BorderBrush" Value="#FFBFC3D9" cs:id="Setter_0000" x:Uid="@Value=Delimiter" />
    <Setter Property="BorderThickness" Value="0,0,0,1" />
  </Style>
  <!-- InfinityLoading -->
  <ControlTemplate x:Key="LoadingIndicator" TargetType="{x:Type ProgressBar}">
    <Grid x:Name="Root">
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Determinate" />
          <VisualState x:Name="Indeterminate">
            <Storyboard RepeatBehavior="Forever">
              <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Ellipse1" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0.38" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.26" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.26" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.38" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.62" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0.62" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Ellipse2" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0.62" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.38" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.26" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.26" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.38" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.62" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="1" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Ellipse3" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.62" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.38" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.26" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.26" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.38" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0.62" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="1" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Ellipse4" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.62" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.38" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.26" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.26" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0.38" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="0.62" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="1" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Ellipse5" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.62" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.38" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.26" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0.26" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="0.38" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0.62" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Grid>
        <StackPanel Orientation="Horizontal">
          <Ellipse x:Name="Ellipse1" Fill="{TemplateBinding Foreground}" Height="5" Margin="2" Width="5" />
          <Ellipse x:Name="Ellipse2" Fill="{TemplateBinding Foreground}" Height="5" Margin="2" Width="5" />
          <Ellipse x:Name="Ellipse3" Fill="{TemplateBinding Foreground}" Height="5" Margin="2" Width="5" />
          <Ellipse x:Name="Ellipse4" Fill="{TemplateBinding Foreground}" Height="5" Margin="2" Width="5" />
          <Ellipse x:Name="Ellipse5" Fill="{TemplateBinding Foreground}" Height="5" Margin="2" Width="5" />
        </StackPanel>
      </Grid>
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=LoadingRowTemplate}" TargetType="dxg:LoadingRowControl">
    <Grid x:Name="Root" Margin="1" MinHeight="32">
      <ProgressBar x:Name="Indicator" Foreground="#FFF5CC84" HorizontalAlignment="Center" IsIndeterminate="{Binding ShowLoadingIndicator}" Template="{StaticResource LoadingIndicator}" VerticalAlignment="Center" Visibility="{Binding ShowLoadingIndicator, Converter={StaticResource BoolToVisibilityConverter}}" cs:id="ProgressBar_0000" x:Uid="@Foreground=Focused" />
      <dxg:LoadingRowButton Click="{DXEvent 'LoadMoreRows()'}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Visibility="{Binding AllowLoadMore, Converter={StaticResource BoolToVisibilityConverter}}">
        <StackPanel Margin="9,0,9,1" Orientation="Horizontal">
          <Label Content="{dxg:GridControlStringId LoadingRowLoadMore}" />
          <Grid Height="16" Margin="3" Width="16">
            <Path Data="F1 M 10,5L 5,10L 0,5L 3,5L 3,3L 7,3L 7,5L 10,5 Z M 3,2L 3,0L 7,0L 7,2L 3,2 Z " Fill="#FF1E1E1E" Height="10" HorizontalAlignment="Center" Margin="0,1,0,0" Stretch="Fill" VerticalAlignment="Center" Width="10" cs:id="Path_0000" x:Uid="@Fill=Foreground" />
          </Grid>
        </StackPanel>
      </dxg:LoadingRowButton>
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=LoadingRowErrorTemplate}" TargetType="dxg:LoadingRowControl">
    <Grid x:Name="Root" Margin="3">
      <Grid HorizontalAlignment="Center" Margin="96,0,96,0" MaxWidth="640" VerticalAlignment="Top">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Path Data="F1 M 7,0C 10.866,0 14,3.13401 14,7C 14,10.866 10.866,14 7,14C 3.13401,14 -6.35783e-007,10.866 -6.35783e-007,7C -6.35783e-007,3.13401 3.13401,0 7,0 Z M 2.75736,4.17157L 5.58579,7L 2.75736,9.82843L 4.17157,11.2426L 7,8.41422L 9.82843,11.2426L 11.2426,9.82843L 8.41421,7L 11.2426,4.17157L 9.82843,2.75736L 7,5.58579L 4.17157,2.75736L 2.75736,4.17157 Z " Fill="#FFC12600" Height="14" HorizontalAlignment="Center" Margin="4" Stretch="Fill" VerticalAlignment="Top" Width="14" cs:id="Path_0000" x:Uid="@Fill=Custom.Red" />
        <StackPanel Grid.Column="1" Orientation="Vertical">
          <TextBlock HorizontalAlignment="Left" Margin="4,3,4,3" Text="{Binding ErrorText}" TextWrapping="Wrap" />
          <TextBlock HorizontalAlignment="Center" Visibility="{Binding IsLoadingButtonVisible, Converter={StaticResource BoolToVisibilityConverter}}">
            <dxe:HyperlinkEdit Command="{Binding LoadRowsCommand}" Text="{Binding LoadingButtonText}" />
          </TextBlock>
        </StackPanel>
      </Grid>
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxgt:GridRowThemeKey ResourceKey=LoadingRowButtonTemplate}" TargetType="dxg:LoadingRowButton">
    <Grid x:Name="Root">
      <Border x:Name="IsDefault" Background="Transparent" cs:id="Border_0000" />
      <ContentPresenter x:Name="Content" HorizontalAlignment="Center" Margin="3" TextBlock.Foreground="#FF1E1E1E" VerticalAlignment="Center" cs:id="ContentPresenter_0000" x:Uid="@TextBlock.Foreground=Foreground" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="TextBlock.Foreground" TargetName="Content" Value="#FF1E1E1E" cs:id="Setter_0001" x:Uid="@Value=HoverForeground" />
        <Setter Property="Background" TargetName="IsDefault" Value="#FFFBE0B3" cs:id="Setter_0000" x:Uid="@Value=HoverBackground" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="TextBlock.Foreground" TargetName="Content" Value="#FF1E1E1E" cs:id="Setter_0003" x:Uid="@Value=SelectionForeground" />
        <Setter Property="Background" TargetName="IsDefault" Value="#FFFCD89F" cs:id="Setter_0002" x:Uid="@Value=SelectionBackground" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
</ResourceDictionary>