<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.VS2017Light.v24.1;component/Core/Core/Editors/Themes/Generic/AutoCompleteBox.xaml" />
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.VS2017Light.v24.1;component/Core/Core/Editors/Themes/VS2017Light/UICore.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <!-- General -->
  <SolidColorBrush x:Key="{dxet:TokenEditorThemeKey ResourceKey=TokenForeground}" Color="#FF1E1E1E" x:Uid="@Color=Foreground" />
  <Style x:Key="{dxet:TokenEditorThemeKey ResourceKey=BorderStyle}" TargetType="{x:Type Border}">
    <Setter Property="Background" Value="#FFFFFFFF" cs:id="Setter_0000" x:Uid="@Value=Editor.Background" />
    <Setter Property="BorderBrush" Value="#FFCCCEDB" cs:id="Setter_0001" x:Uid="@Value=Border" />
    <Setter Property="BorderThickness" Value="1" />
  </Style>
  <ControlTemplate x:Key="{dxet:TokenEditorThemeKey ResourceKey=CellPresenterTemplate}" TargetType="{x:Type dxei:TokenEditorPresenter}">
    <Grid x:Name="Root" Background="Transparent" cs:id="Grid_0000">
      <ContentControl Focusable="False" Template="{TemplateBinding BorderTemplate}" />
      <dxei:CellEditor x:Name="CellEditor" Focusable="False" TextElement.Foreground="{TemplateBinding Foreground}" />
    </Grid>
    <ControlTemplate.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True" />
          <Condition Property="IsEditorActivated" Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="TextElement.Foreground" TargetName="CellEditor" Value="#FF1E1E1E" cs:id="Setter_0003" x:Uid="@Value=Foreground" />
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsSelected" Value="True" />
          <Condition Property="IsEditorActivated" Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="TextElement.Foreground" TargetName="CellEditor" Value="#FF1E1E1E" cs:id="Setter_0004" x:Uid="@Value=Foreground" />
      </MultiTrigger>
      <DataTrigger Binding="{Binding Path=(dxe:BaseEdit.OwnerEdit).EditMode, RelativeSource={RelativeSource Self}}" Value="InplaceActive">
        <Setter Property="TextElement.Foreground" TargetName="CellEditor" Value="#FF1E1E1E" cs:id="Setter_0000" x:Uid="@Value=Foreground" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=(dxe:BaseEdit.OwnerEdit).EditMode, RelativeSource={RelativeSource Self}}" Value="InplaceInactive">
        <Setter Property="TextElement.Foreground" TargetName="CellEditor" Value="#FF1E1E1E" cs:id="Setter_0001" x:Uid="@Value=Foreground" />
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
</ResourceDictionary>