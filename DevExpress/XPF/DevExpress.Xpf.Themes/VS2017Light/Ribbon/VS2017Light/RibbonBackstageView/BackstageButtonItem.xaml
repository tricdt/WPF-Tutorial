<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cs="colorscheme_ignorable_uri" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys" xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon" xmlns:dxri="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/internal" xmlns:dxrt="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/themekeys" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.VS2017Light.v24.1;component/Ribbon/VS2017Light/UICore.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <!-- General -->
  <ControlTemplate x:Key="{dxrt:BackstageButtonItemThemeKey ResourceKey=BorderTemplate}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
    <Grid x:Name="Root" Background="Transparent" cs:id="Grid_0000">
      <Border x:Name="IsDefault" Background="Transparent" cs:id="Border_0000" />
      <ContentPresenter />
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="Hover">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Background">
                <DiscreteObjectKeyFrame KeyTime="0">
                  <DiscreteObjectKeyFrame.Value>
                    <SolidColorBrush Color="#FF2E98E0" x:Uid="@Color=Backstage.HoverBackground" />
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Background">
                <DiscreteObjectKeyFrame KeyTime="0">
                  <DiscreteObjectKeyFrame.Value>
                    <SolidColorBrush Color="#FF005E9F" x:Uid="@Color=Backstage.SelectionBackground" />
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Focused">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Background">
                <DiscreteObjectKeyFrame KeyTime="0">
                  <DiscreteObjectKeyFrame.Value>
                    <SolidColorBrush Color="#FF2E98E0" x:Uid="@Color=Backstage.HoverBackground" />
                  </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Disabled">
            <Storyboard>
              <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0.38" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Grid>
  </ControlTemplate>
  <!-- Styles -->
  <Style x:Key="{dxrt:BackstageButtonItemThemeKey ResourceKey=BorderStyle}" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
    <Setter Property="Template" Value="{DynamicResource {dxrt:BackstageButtonItemThemeKey ResourceKey=BorderTemplate}}" />
  </Style>
  <Style x:Key="{dxrt:BackstageButtonItemThemeKey ResourceKey=NormalTextStyle}" TargetType="{x:Type ContentControl}">
    <Setter Property="Foreground" Value="#FFFFFFFF" cs:id="Setter_0000" x:Uid="@Value=Backstage.Foreground" />
  </Style>
  <Style x:Key="{dxrt:BackstageButtonItemThemeKey ResourceKey=HoverTextStyle}" TargetType="{x:Type ContentControl}">
    <Setter Property="Foreground" Value="#FFFFFFFF" cs:id="Setter_0000" x:Uid="@Value=Backstage.Foreground" />
  </Style>
  <!-- Content -->
  <Style x:Key="{dxrt:BackstageButtonItemThemeKey ResourceKey=GlyphContainerStyle}" TargetType="{x:Type ContentControl}">
    <Setter Property="Margin" Value="10" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Margin" Value="22" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxrt:BackstageButtonItemThemeKey ResourceKey=GlyphStyle}" TargetType="{x:Type Image}">
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="VerticalAlignment" Value="Center" />
  </Style>
  <Style x:Key="{dxrt:BackstageButtonItemThemeKey ResourceKey=ContentStyle}" TargetType="{x:Type ContentControl}">
    <Setter Property="Margin" Value="0,10,24,10" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Margin" Value="0,22,44,22" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <!-- Tablet Office -->
  <Style x:Key="{dxrt:BackstageButtonItemThemeKey ResourceKey=GlyphContainerTabletOfficeStyle}" TargetType="{x:Type ContentControl}">
    <Setter Property="Grid.ColumnSpan" Value="2" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="Margin" Value="10" />
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Margin" Value="14" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{dxrt:BackstageButtonItemThemeKey ResourceKey=ContentTabletOfficeStyle}" TargetType="{x:Type ContentControl}">
    <Setter Property="Grid.Column" Value="0" />
    <Setter Property="Grid.ColumnSpan" Value="2" />
    <Setter Property="Grid.Row" Value="1" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="Margin" Value="24,10,24,10" />
    <Style.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter Property="Margin" Value="22" />
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>