<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxeh="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:interop="clr-namespace:System.Windows.Interop;assembly=PresentationFramework"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--BEGIN WPF-->

    <ResourceDictionary.MergedDictionaries>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2007Black.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/DeepBlue/StandardControlStyles/Brushes.xaml"/>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2007Black.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/StandardControls/CheckBox.xaml"/>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2007Black.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/StandardControls/ComboBox.xaml"/>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2007Black.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/StandardControls/Expander.xaml"/>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2007Black.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/StandardControls/TextBox.xaml"/>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2007Black.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/StandardControls/TreeView.xaml"/>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2007Black.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/StandardControls/ToolTip.xaml"/>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2007Black.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/Generic/Buttons.xaml"/>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2007Black.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/StandardControls/ProgressBar.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <SolidColorBrush x:Key="BaseBrushTransparent" Color="Transparent"/>

    <SolidColorBrush x:Key="BaseBrushBlack" Color="Black"/>

    <SolidColorBrush x:Key="BaseBrushWhite" Color="White"/>

    <SolidColorBrush x:Key="ListBorder" Color="#828790 "/>

    <!--END WPF-->

    <Style x:Key="{dxt:ScrollBarThemeKey ResourceKey=ScrollingCornerStyle}" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="#FFF0F0F0 "/>
    </Style>

    <!--BEGIN WPF-->

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=System.Windows.Controls.ListBoxItem}"
           BasedOn="{StaticResource {x:Type ListBoxItem}}"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="3,2,3,2"/>
        <Setter Property="Template" Value="{DynamicResource {dxt:ListBoxThemeKey ResourceKey=ItemContainerTemplate}}"></Setter>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    </Style>

    <Style x:Key="{dxt:RadioButtonListThemeKey ResourceKey=ItemContainerStyle}" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Margin" Value="3,2,3,2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Background="Transparent">
                        <RadioButton Focusable="False"
                                     IsChecked="{Binding Path=IsSelected, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                     IsHitTestVisible="True">
                            <ContentPresenter/>
                        </RadioButton>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="{dxt:ListBoxThemeKey ResourceKey=ItemContainerTemplate}" TargetType="{x:Type ListBoxItem}">
        <Grid Background="#00FFFFFF "
              Height="Auto"
              Width="Auto">
            <Rectangle x:Name="FocusVisual"
                       Opacity="0"
                       SnapsToDevicePixels="True"
                       Stroke="#FF000000"
                       StrokeDashArray="1 2"
                       StrokeThickness="1"/>
            <Border x:Name="hover"
                    CornerRadius="2,2,2,2"
                    Opacity="0"
                    Padding="1,1,1,1">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFDBCE99 " Offset="0"/>
                        <GradientStop Color="#FFBBA67F " Offset="1"/>
                        <GradientStop Color="#FFB9A074 " Offset="0.5"/>
                    </LinearGradientBrush>
                </Border.Background>
                <Border x:Name="border2"
                        CornerRadius="1,1,1,1"
                        Height="Auto"
                        Padding="1,1,1,1"
                        Visibility="Visible"
                        Width="Auto">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFFFFFFD " Offset="0"/>
                            <GradientStop Color="#FFFFF9E0 " Offset="1"/>
                            <GradientStop Color="#FFFFF1BA " Offset="0.5"/>
                        </LinearGradientBrush>
                    </Border.Background>
                    <Border x:Name="border1" CornerRadius="1,1,1,1">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFFFFDF2 " Offset="0"/>
                                <GradientStop Color="#FFFFEEAE " Offset="1"/>
                                <GradientStop Color="#FFFFEA9A " Offset="0.5"/>
                                <GradientStop Color="#FFFFDC58 " Offset="0.5"/>
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                </Border>
            </Border>
            <Border x:Name="selected"
                    CornerRadius="2,2,2,2"
                    Opacity="0"
                    Padding="1,1,1,1">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF9F7559 " Offset="0"/>
                        <GradientStop Color="#FFC6C0B1 " Offset="1"/>
                        <GradientStop Color="#FF8E8165 " Offset="0.1"/>
                    </LinearGradientBrush>
                </Border.Background>
                <Border x:Name="border3"
                        CornerRadius="1,1,1,1"
                        Height="Auto"
                        Padding="1,1,1,1"
                        Visibility="Visible"
                        Width="Auto">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFBB9F7C " Offset="0"/>
                            <GradientStop Color="#FFFFDE70 " Offset="1"/>
                            <GradientStop Color="#FFF8AD61 " Offset="0.5"/>
                            <GradientStop Color="#FFF7952F " Offset="0.5"/>
                            <GradientStop Color="#FFFDD3A8 " Offset="0.1"/>
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
            </Border>
            <Border x:Name="Bd"
                    BorderThickness="0,0,0,0"
                    Padding="{TemplateBinding Padding}"
                    SnapsToDevicePixels="True">
                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity"
                        TargetName="selected"
                        Value="0"/>
                <Setter Property="Opacity"
                        TargetName="hover"
                        Value="1"/>
                <Setter Property="Opacity"
                        TargetName="FocusVisual"
                        Value="0"/>
            </Trigger>
            <Trigger Property="Selector.IsSelected" Value="True">
                <Setter Property="Opacity"
                        TargetName="selected"
                        Value="0.75"/>
                <Setter Property="Opacity"
                        TargetName="hover"
                        Value="0"/>
                <Setter Property="Opacity"
                        TargetName="FocusVisual"
                        Value="0"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="Opacity"
                        TargetName="selected"
                        Value="0"/>
                <Setter Property="Opacity"
                        TargetName="hover"
                        Value="0"/>
                <Setter Property="Opacity"
                        TargetName="FocusVisual"
                        Value="1"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsKeyboardFocused" Value="True"/>
                    <Condition Property="Selector.IsSelected" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Opacity"
                        TargetName="selected"
                        Value="1"/>
                <Setter Property="Opacity"
                        TargetName="hover"
                        Value="0"/>
                <Setter Property="Opacity"
                        TargetName="FocusVisual"
                        Value="0"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity"
                        TargetName="Bd"
                        Value="0.35"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=System.Windows.Controls.TabControl}" TargetType="{x:Type TabControl}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Padding" Value="11"/>
        <Setter Property="BorderThickness" Value="1,1,1,1"/>
        <Setter Property="BorderBrush" Value="#FF8C8E94 "/>
        <Setter Property="Background" Value="#FFF9F9F9 "/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="HeaderPanel"
                                  Grid.Column="0"
                                  Grid.Row="0"
                                  IsItemsHost="True"
                                  KeyboardNavigation.TabIndex="1"
                                  Margin="2,2,2,0"
                                  Panel.ZIndex="1"/>
                        <Border x:Name="ContentPanel"
                                Background="#FFFFFFFF "
                                BorderBrush="#FF828790 "
                                BorderThickness="1,1,1,1"
                                Grid.Column="0"
                                Grid.Row="1"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                              ContentSource="SelectedContent"
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row"
                                    TargetName="HeaderPanel"
                                    Value="1"/>
                            <Setter Property="Grid.Row"
                                    TargetName="ContentPanel"
                                    Value="0"/>
                            <Setter Property="Height"
                                    TargetName="RowDefinition0"
                                    Value="*"/>
                            <Setter Property="Height"
                                    TargetName="RowDefinition1"
                                    Value="Auto"/>
                            <Setter Property="Margin"
                                    TargetName="HeaderPanel"
                                    Value="2,0,2,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Grid.Row"
                                    TargetName="HeaderPanel"
                                    Value="0"/>
                            <Setter Property="Grid.Row"
                                    TargetName="ContentPanel"
                                    Value="0"/>
                            <Setter Property="Grid.Column"
                                    TargetName="HeaderPanel"
                                    Value="0"/>
                            <Setter Property="Grid.Column"
                                    TargetName="ContentPanel"
                                    Value="1"/>
                            <Setter Property="Width"
                                    TargetName="ColumnDefinition0"
                                    Value="Auto"/>
                            <Setter Property="Width"
                                    TargetName="ColumnDefinition1"
                                    Value="*"/>
                            <Setter Property="Height"
                                    TargetName="RowDefinition0"
                                    Value="*"/>
                            <Setter Property="Height"
                                    TargetName="RowDefinition1"
                                    Value="0"/>
                            <Setter Property="Margin"
                                    TargetName="HeaderPanel"
                                    Value="2,2,0,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row"
                                    TargetName="HeaderPanel"
                                    Value="0"/>
                            <Setter Property="Grid.Row"
                                    TargetName="ContentPanel"
                                    Value="0"/>
                            <Setter Property="Grid.Column"
                                    TargetName="HeaderPanel"
                                    Value="1"/>
                            <Setter Property="Grid.Column"
                                    TargetName="ContentPanel"
                                    Value="0"/>
                            <Setter Property="Width"
                                    TargetName="ColumnDefinition0"
                                    Value="*"/>
                            <Setter Property="Width"
                                    TargetName="ColumnDefinition1"
                                    Value="Auto"/>
                            <Setter Property="Height"
                                    TargetName="RowDefinition0"
                                    Value="*"/>
                            <Setter Property="Height"
                                    TargetName="RowDefinition1"
                                    Value="0"/>
                            <Setter Property="Margin"
                                    TargetName="HeaderPanel"
                                    Value="0,2,2,2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=System.Windows.Controls.Separator}" TargetType="{x:Type Separator}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template" Value="{DynamicResource {dxt:SeparatorThemeKey ResourceKey=ControlTemplate}}"/>
    </Style>

    <ControlTemplate x:Key="{dxt:SeparatorThemeKey ResourceKey=ControlTemplate}" TargetType="{x:Type Separator}">
        <Border Background="#FFBEC3CC "
                BorderBrush="#7FFFFFFF "
                BorderThickness="0,0,0,1"
                Height="2"
                Opacity="1"
                SnapsToDevicePixels="true"/>
    </ControlTemplate>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=System.Windows.Controls.ListBox}"
           BasedOn="{StaticResource {x:Type ListBox}}"
           TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="BorderBrush" Value="#FF828790"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template" Value="{DynamicResource {dxt:ListBoxThemeKey ResourceKey=ControlTemplate}}"/>
    </Style>

    <ControlTemplate x:Key="{dxt:ListBoxThemeKey ResourceKey=ControlTemplate}" TargetType="{x:Type ListBox}">
        <Border x:Name="Border"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Padding="1"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <ScrollViewer Focusable="False" Padding="{TemplateBinding Padding}">
                <ItemsPresenter/>
            </ScrollViewer>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity"
                        TargetName="Border"
                        Value="0.35"/>
            </Trigger>
            <Trigger Property="IsGrouping" Value="True">
                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <SolidColorBrush x:Key="Button.Border.Normal.Background">#FF898785</SolidColorBrush>

    <LinearGradientBrush x:Key="Button.Border2.Normal.Background"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFF8FAFB " Offset="0"/>
        <GradientStop Color="#FFFFFFFF " Offset="1"/>
        <GradientStop Color="#FFF3F5F7 " Offset="0.5"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Button.Border1.Normal.Background"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFFEFFFF " Offset="0"/>
        <GradientStop Color="#FFFAFFFF " Offset="1"/>
        <GradientStop Color="#FFE0E5EB " Offset="0.5"/>
        <GradientStop Color="#FFCBD5DF " Offset="0.5"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="Button.Border.Hover.Background">#FFC1A965</SolidColorBrush>

    <LinearGradientBrush x:Key="Button.Border2.Hover.Background"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFFFFEFB " Offset="0"/>
        <GradientStop Color="#FFFFF5D7 " Offset="1"/>
        <GradientStop Color="#FFFFF6DC " Offset="0.5"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Button.Border1.Hover.Background"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFFFFBE5 " Offset="0"/>
        <GradientStop Color="#FFFCEBB7 " Offset="1"/>
        <GradientStop Color="#FFFADF8F " Offset="0.5"/>
        <GradientStop Color="#FFF4C233 " Offset="0.5"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Button.Border.Pressed.Background"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FF7B6645 " Offset="0"/>
        <GradientStop Color="#FFA78E66 " Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Button.Border2.Pressed.Background"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFC18C5D " Offset="0"/>
        <GradientStop Color="#FFFFC14C " Offset="1"/>
        <GradientStop Color="#FFFFAB49 " Offset="0.5"/>
        <GradientStop Color="#FFFF8F08 " Offset="0.5"/>
        <GradientStop Color="#FFFCB06A " Offset="0.1"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="Button.NullBrush">#00000000</SolidColorBrush>

    <LinearGradientBrush x:Key="Button.Border2.Checked.Background"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFA9B0B7 " Offset="0"/>
        <GradientStop Color="#FFD5DFE4 " Offset="1"/>
        <GradientStop Color="#FFBFC6CA " Offset="0.5"/>
        <GradientStop Color="#FFB1B6BD " Offset="0.5"/>
        <GradientStop Color="#FFCFD4DA " Offset="0.1"/>
    </LinearGradientBrush>

    <Visibility x:Key="Visible">Visible</Visibility>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=System.Windows.Controls.Button}"
           BasedOn="{StaticResource {x:Type Button}}"
           TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="11,2,11,2"/>
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=Foreground}}"/>
        <Setter Property="Template" Value="{DynamicResource {dxt:ButtonThemeKey ResourceKey=ButtonControlTemplate}}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding" Value="27,12,27,12"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="ToggleButton.IsChecked" Value="False"/>
                    <Condition Property="IsPressed" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=MouseOverForeground}}"/>
            </MultiTrigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=CheckedForeground}}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=PressedForeground}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=System.Windows.Controls.Primitives.ToggleButton}"
           BasedOn="{StaticResource {x:Type ToggleButton}}"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Padding" Value="11,2,11,2"/>
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=Foreground}}"/>
        <Setter Property="Template" Value="{DynamicResource {dxt:ButtonThemeKey ResourceKey=ButtonBaseControlTemplate}}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding" Value="27,12,27,12"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="ToggleButton.IsChecked" Value="False"/>
                    <Condition Property="IsPressed" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=MouseOverForeground}}"/>
            </MultiTrigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=CheckedForeground}}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=PressedForeground}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=System.Windows.Controls.Primitives.RepeatButton}"
           BasedOn="{StaticResource {x:Type RepeatButton}}"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="Padding" Value="11,2,11,2"/>
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=Foreground}}"/>
        <Setter Property="Template" Value="{DynamicResource {dxt:ButtonThemeKey ResourceKey=ButtonBaseControlTemplate}}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding" Value="27,12,27,12"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="ToggleButton.IsChecked" Value="False"/>
                    <Condition Property="IsPressed" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=MouseOverForeground}}"/>
            </MultiTrigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=CheckedForeground}}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=PressedForeground}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="simpleButtonBaseStyle" TargetType="{x:Type dx:SimpleButton}">
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=Foreground}}"/>
        <Setter Property="GlyphToContentOffset" Value="5"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxt:BrushesThemeKey ResourceKey=ContrastSvgPalette}}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.DropDownButton}"
           BasedOn="{StaticResource simpleButtonBaseStyle}"
           TargetType="{x:Type dx:DropDownButton}">
        <Setter Property="Padding" Value="10,3,10,3"/>
        <Setter Property="ArrowPadding" Value="0,3,10,3"/>
        <Setter Property="ArrowAlignment" Value="Right"/>
        <Setter Property="Template" Value="{DynamicResource {dxt:DropDownButtonThemeKey ResourceKey=AsyncDropDownButtonTemplate}}"/>
        <Style.Triggers>
            <Trigger Property="AsyncDisplayMode" Value="None">
                <Setter Property="Template" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=DropDownButtonTemplate}}"/>
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding" Value="27,13,27,13"/>
                <Setter Property="ArrowPadding" Value="0,13,27,13"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="ToggleButton.IsChecked" Value="False"/>
                    <Condition Property="IsPressed" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=MouseOverForeground}}"/>
            </MultiTrigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=CheckedForeground}}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=PressedForeground}}"/>
            </Trigger>
            <Trigger Property="ButtonKind" Value="Repeat">
                <Setter Property="ClickMode" Value="Press"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.SplitButton}"
           BasedOn="{StaticResource simpleButtonBaseStyle}"
           TargetType="{x:Type dx:SplitButton}">
        <Setter Property="Padding" Value="10,3,10,3"/>
        <Setter Property="ArrowPadding" Value="10,3,10,3"/>
        <Setter Property="SeparatorThickness" Value="1"/>
        <Setter Property="ArrowBorderThickness" Value="1"/>
        <Setter Property="ArrowAlignment" Value="Right"/>
        <Setter Property="Template" Value="{DynamicResource {dxt:DropDownButtonThemeKey ResourceKey=AsyncSplitButtonTemplate}}"/>
        <Style.Triggers>
            <Trigger Property="AsyncDisplayMode" Value="None">
                <Setter Property="Template" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=SplitButtonTemplate}}"/>
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding" Value="27,13,27,13"/>
                <Setter Property="ArrowPadding" Value="27,13,27,13"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="ToggleButton.IsChecked" Value="False"/>
                    <Condition Property="IsPressed" Value="False"/>
                    <Condition Property="IsMouseOverArrow" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=MouseOverForeground}}"/>
            </MultiTrigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=CheckedForeground}}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsPressed" Value="True"/>
                    <Condition Property="IsMouseOverArrow" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=PressedForeground}}"/>
            </MultiTrigger>
            <Trigger Property="ButtonKind" Value="Repeat">
                <Setter Property="ClickMode" Value="Press"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.SimpleButton}"
           BasedOn="{StaticResource simpleButtonBaseStyle}"
           TargetType="{x:Type dx:SimpleButton}">
        <Setter Property="Padding" Value="10,1,10,1"/>
        <Setter Property="Template" Value="{DynamicResource {dxt:ButtonThemeKey ResourceKey=AsyncButtonTemplate}}"/>
        <Style.Triggers>
            <Trigger Property="AsyncDisplayMode" Value="None">
                <Setter Property="Template" Value="{DynamicResource ResourceKey={dxt:ButtonThemeKey ResourceKey=ButtonControlTemplate}}"/>
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding" Value="27,11,27,11"/>
            </Trigger>
            <Trigger Property="Content" Value="{x:Null}">
                <Setter Property="Padding" Value="0"/>
                <Setter Property="GlyphToContentOffset" Value="0"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="ToggleButton.IsChecked" Value="False"/>
                    <Condition Property="IsPressed" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=MouseOverForeground}}"/>
            </MultiTrigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=CheckedForeground}}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=PressedForeground}}"/>
            </Trigger>
            <Trigger Property="ButtonKind" Value="Repeat">
                <Setter Property="ClickMode" Value="Press"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--ThemedWindowDialogButtonStyle-->

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.ThemedWindowDialogButton}"
           BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.SimpleButton}}"
           TargetType="{x:Type dx:ThemedWindowDialogButton}">
        <Setter Property="MinHeight" Value="22"/>
        <Setter Property="MinWidth" Value="70"/>
        <Setter Property="Margin" Value="2,0,2,0"/>
        <Setter Property="AutomationProperties.AutomationId" Value="{Binding Path=Content, RelativeSource={RelativeSource Self}, Converter={dx:ThemedDialogButtonNameConverter}, FallbackValue={x:Static system:String.Empty}, TargetNullValue={x:Static system:String.Empty}}"/>
        <Setter Property="AutomationProperties.Name" Value="{Binding Path=Content, RelativeSource={RelativeSource Self}, FallbackValue={x:Static system:String.Empty}, TargetNullValue={x:Static system:String.Empty}}"/>
        <Setter Property="GlyphHeight" Value="16"/>
    </Style>

    <DataTemplate x:Key="{dxt:ScrollBarThemeKey ResourceKey=ScrollBarCornerStyle}">
        <Rectangle x:Name="Corner"
                   Grid.Column="1"
                   Grid.Row="1"
                   Stroke="{x:Null}"
                   StrokeThickness="0">
            <Rectangle.Fill>
                <RadialGradientBrush GradientOrigin="0.154,0.154">
                    <RadialGradientBrush.RelativeTransform>
                        <TransformGroup>
                            <ScaleTransform CenterX="0.5"
                                            CenterY="0.5"
                                            ScaleX="1.581"
                                            ScaleY="1.581"/>
                            <SkewTransform AngleX="0"
                                           AngleY="0"
                                           CenterX="0.5"
                                           CenterY="0.5"/>
                            <RotateTransform Angle="0"
                                             CenterX="0.5"
                                             CenterY="0.5"/>
                            <TranslateTransform X="0" Y="0"/>
                        </TransformGroup>
                    </RadialGradientBrush.RelativeTransform>
                    <GradientStop Color="#FFEBEDEF " Offset="1"/>
                    <GradientStop Color="#FFF0F0F0 " Offset="0.676"/>
                    <GradientStop Color="#FFF4F4F4 " Offset="0.218"/>
                    <GradientStop Color="#FFEFEFEF " Offset="0.288"/>
                    <GradientStop Color="#FFEBEDEF " Offset="0"/>
                    <GradientStop Color="#FFEBEDEF " Offset="0.08"/>
                    <GradientStop Color="#FFFCFCFC " Offset="0.08"/>
                </RadialGradientBrush>
            </Rectangle.Fill>
        </Rectangle>
    </DataTemplate>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=System.Windows.Controls.ScrollViewer}" TargetType="{x:Type ScrollViewer}">
        <Setter Property="dx:ScrollBarExtensions.AllowMouseScrolling" Value="True"/>
        <Setter Property="dx:ScrollBarExtensions.ScrollBehavior" Value="{dx:ScrollViewerScrollBehavior}"/>
        <Setter Property="dx:ScrollViewerTouchBehavior.IsEnabled" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ContentPresenter ContentTemplate="{DynamicResource {dxt:ScrollBarThemeKey ResourceKey=ScrollBarCornerStyle}}"
                                          Grid.Column="1"
                                          Grid.Row="1">
                            <ContentPresenter.Visibility>
                                <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.Converter>
                                        <dx:EnumToObjectConverter DefaultValue="Visible">
                                            <dx:EnumToObjectConverter.Values>
                                                <dx:EnumObjectProvider x:Key="TouchOverlap" Value="Collapsed"/>
                                            </dx:EnumToObjectConverter.Values>
                                        </dx:EnumToObjectConverter>
                                    </Binding.Converter>
                                </Binding>
                            </ContentPresenter.Visibility>
                        </ContentPresenter>
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                CanContentScroll="{TemplateBinding CanContentScroll}"
                                                CanHorizontallyScroll="False"
                                                CanVerticallyScroll="False"
                                                Grid.Column="0"
                                                Grid.Row="0"
                                                Margin="{TemplateBinding Padding}">
                            <Grid.RowSpan>
                                <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.Converter>
                                        <dx:EnumToObjectConverter DefaultValue="1">
                                            <dx:EnumToObjectConverter.Values>
                                                <dx:EnumObjectProvider x:Key="TouchOverlap" Value="2"/>
                                            </dx:EnumToObjectConverter.Values>
                                        </dx:EnumToObjectConverter>
                                    </Binding.Converter>
                                </Binding>
                            </Grid.RowSpan>
                            <Grid.ColumnSpan>
                                <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.Converter>
                                        <dx:EnumToObjectConverter DefaultValue="1">
                                            <dx:EnumToObjectConverter.Values>
                                                <dx:EnumObjectProvider x:Key="TouchOverlap" Value="2"/>
                                            </dx:EnumToObjectConverter.Values>
                                        </dx:EnumToObjectConverter>
                                    </Binding.Converter>
                                </Binding>
                            </Grid.ColumnSpan>
                        </ScrollContentPresenter>
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                   AutomationProperties.AutomationId="VerticalScrollBar"
                                   Cursor="Arrow"
                                   Grid.Column="1"
                                   Grid.Row="0"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   Minimum="0"
                                   Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}">
                            <Grid.RowSpan>
                                <MultiBinding>
                                    <MultiBinding.Bindings>
                                        <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource Self}"/>
                                        <Binding Path="(dx:ScrollBarExtensions.ScrollViewerOrientation)" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    </MultiBinding.Bindings>
                                    <MultiBinding.Converter>
                                        <dx:VerticalScrollBarRowSpanConverter/>
                                    </MultiBinding.Converter>
                                </MultiBinding>
                            </Grid.RowSpan>
                        </ScrollBar>
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                   AutomationProperties.AutomationId="HorizontalScrollBar"
                                   Cursor="Arrow"
                                   Grid.Column="0"
                                   Grid.Row="1"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   Minimum="0"
                                   Orientation="Horizontal"
                                   Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}">
                            <Grid.ColumnSpan>
                                <MultiBinding>
                                    <MultiBinding.Bindings>
                                        <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource Self}"/>
                                        <Binding Path="(dx:ScrollBarExtensions.ScrollViewerOrientation)" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    </MultiBinding.Bindings>
                                    <MultiBinding.Converter>
                                        <dx:HorizontalScrollBarRowSpanConverter/>
                                    </MultiBinding.Converter>
                                </MultiBinding>
                            </Grid.ColumnSpan>
                        </ScrollBar>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=System.Windows.Controls.Primitives.ScrollBar}"
           BasedOn="{StaticResource {x:Type ScrollBar}}"
           TargetType="{x:Type ScrollBar}">
        <Setter Property="dx:ScrollBarExtensions.ListeningScrollBarThumbDragDelta" Value="True"/>
        <Setter Property="dx:ScrollBarExtensions.ScrollViewerMouseMoved" Value="{Binding Path=(dx:ScrollBarExtensions.ScrollViewerMouseMoved), RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="dx:ScrollBarExtensions.ScrollViewerSizeChanged" Value="{Binding Path=(dx:ScrollBarExtensions.ScrollViewerSizeChanged), RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="dx:ScrollBarExtensions.IsTouchScrollBarMode">
            <Setter.Value>
                <Binding Path="(dx:ScrollBarExtensions.ScrollBarMode)" RelativeSource="{RelativeSource Self}">
                    <Binding.Converter>
                        <dx:EnumToObjectConverter DefaultValue="True">
                            <dx:EnumToObjectConverter.Values>
                                <dx:EnumObjectProvider x:Key="Standard" Value="False"/>
                            </dx:EnumToObjectConverter.Values>
                        </dx:EnumToObjectConverter>
                    </Binding.Converter>
                </Binding>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Orientation" Value="Vertical"/>
                    <Condition Property="dx:ScrollBarExtensions.IsTouchScrollBarMode" Value="False"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Width" Value="17"/>
                    <Setter Property="MinWidth" Value="13"/>
                    <Setter Property="Height" Value="Auto"/>
                    <Setter Property="MinHeight" Value="0"/>
                    <Setter Property="Template" Value="{DynamicResource {dxdst:ScrollBarThemeKey ResourceKey=ScrollBarVertTemplate}}"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Orientation" Value="Vertical"/>
                    <Condition Property="dx:ScrollBarExtensions.IsTouchScrollBarMode" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Width" Value="16"/>
                    <Setter Property="MinWidth" Value="16"/>
                    <Setter Property="Height" Value="Auto"/>
                    <Setter Property="MinHeight" Value="0"/>
                    <Setter Property="Template" Value="{DynamicResource {dxdst:ScrollBarThemeKey ResourceKey=ScrollBarVertTouchTemplate}}"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Orientation" Value="Horizontal"/>
                    <Condition Property="dx:ScrollBarExtensions.IsTouchScrollBarMode" Value="False"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Height" Value="17"/>
                    <Setter Property="MinHeight" Value="13"/>
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="MinWidth" Value="0"/>
                    <Setter Property="Template" Value="{DynamicResource {dxdst:ScrollBarThemeKey ResourceKey=ScrollBarHorzTemplate}}"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Orientation" Value="Horizontal"/>
                    <Condition Property="dx:ScrollBarExtensions.IsTouchScrollBarMode" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Height" Value="16"/>
                    <Setter Property="MinHeight" Value="16"/>
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="MinWidth" Value="0"/>
                    <Setter Property="Template" Value="{DynamicResource {dxdst:ScrollBarThemeKey ResourceKey=ScrollBarHorzTouchTemplate}}"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="{dxt:ScrollBarThemeKey ResourceKey=PageButtonTemplate}" TargetType="{x:Type RepeatButton}">
        <Rectangle x:Name="Bg" Fill="{TemplateBinding Background}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxt:ScrollBarThemeKey ResourceKey=ScrollBarVertTemplate}" TargetType="{x:Type ScrollBar}">
        <Grid Background="{x:Null}" SnapsToDevicePixels="True">
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                <RowDefinition Height="1E-05*"/>
                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
            </Grid.RowDefinitions>
            <Border BorderBrush="#FFEBEDEF "
                    BorderThickness="1,0,1,0"
                    Grid.RowSpan="3">
                <Border.Background>
                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                        <GradientStop Color="#FFFCFCFC " Offset="0"/>
                        <GradientStop Color="#FFF0F0F0 " Offset="1"/>
                        <GradientStop Color="#FFEFEFEF " Offset="0.258"/>
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <RepeatButton x:Name="PART_LineUpButton"
                          Command="ScrollBar.LineUpCommand"
                          Style="{DynamicResource {dxt:ScrollBarThemeKey IsVisibleInBlend=True, ResourceKey=ScrollButtonUpStyle}}"
                          Template="{DynamicResource {dxt:ScrollBarThemeKey ResourceKey=ScrollButtonUpTemplate}}"/>
            <Track x:Name="PART_Track"
                   Grid.Row="1"
                   IsDirectionReversed="True">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageUpCommand"
                                  Style="{DynamicResource {dxt:ScrollBarThemeKey IsVisibleInBlend=True, ResourceKey=PageButtonStyle}}"
                                  Template="{DynamicResource {dxt:ScrollBarThemeKey IsVisibleInBlend=True, ResourceKey=PageButtonTemplate}}"/>
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageDownCommand"
                                  Style="{DynamicResource {dxt:ScrollBarThemeKey IsVisibleInBlend=True, ResourceKey=PageButtonStyle}}"
                                  Template="{DynamicResource {dxt:ScrollBarThemeKey IsVisibleInBlend=True, ResourceKey=PageButtonTemplate}}"/>
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{DynamicResource {dxt:ScrollBarThemeKey IsVisibleInBlend=True, ResourceKey=ScrollThumbVertStyle}}" Template="{DynamicResource {dxt:ScrollBarThemeKey ResourceKey=ScrollThumbVertTemplate}}"/>
                </Track.Thumb>
            </Track>
            <RepeatButton x:Name="PART_LineDownButton"
                          Command="ScrollBar.LineDownCommand"
                          Grid.Row="2"
                          Style="{DynamicResource {dxt:ScrollBarThemeKey IsVisibleInBlend=True, ResourceKey=ScrollButtonDownStyle}}"
                          Template="{DynamicResource {dxt:ScrollBarThemeKey ResourceKey=ScrollButtonDownTemplate}}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity"
                        TargetName="PART_LineUpButton"
                        Value="0.25"/>
                <Setter Property="Opacity"
                        TargetName="PART_LineDownButton"
                        Value="0.25"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxt:ScrollBarThemeKey ResourceKey=ScrollThumbVertTemplate}" TargetType="{x:Type Thumb}">
        <Border x:Name="border1"
                Background="#FF9C9C9C "
                CornerRadius="2,2,2,2"
                Margin="1,0,1,0"
                Padding="1,1,1,1">
            <Border x:Name="border1_1"
                    CornerRadius="1,1,1,1"
                    Padding="1,1,1,1">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0,0.5" StartPoint="1,0.5">
                        <GradientStop Color="#FFF9F9F9 " Offset="1"/>
                        <GradientStop Color="#FFCFCFD2 " Offset="0"/>
                    </LinearGradientBrush>
                </Border.Background>
                <Border x:Name="border">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                            <GradientStop Color="#FFF6F6F6 " Offset="0"/>
                            <GradientStop Color="#FFC1C1C5 " Offset="1"/>
                            <GradientStop Color="#FFEAEAEC " Offset="0.5"/>
                            <GradientStop Color="#FFDADBDD " Offset="0.5"/>
                            <GradientStop Color="#FFC8C9CC " Offset="0.8"/>
                        </LinearGradientBrush>
                    </Border.Background>
                    <dx:MinSizeArranger MinChildHeight="11">
                        <Viewbox Height="11"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 Width="11">
                            <Canvas Height="11" Width="11">
                                <Rectangle Canvas.Left="0"
                                           Canvas.Top="1"
                                           Fill="#40FFFFFF "
                                           Height="9"
                                           HorizontalAlignment="Stretch"
                                           Stretch="Fill"
                                           VerticalAlignment="Stretch"
                                           Width="11"/>
                                <Path x:Name="path"
                                      Canvas.Left="1"
                                      Canvas.Top="2"
                                      Data="F1M1,1L9,1 9,2 1,2 1,1z M0.999756,3.00024L8.99976,3.00024 8.99976,4.00024 0.999756,4.00024 0.999756,3.00024z M0.999878,5.00006L8.99988,5.00006 8.99988,6.00006 0.999878,6.00006 0.999878,5.00006z M0.999878,7.00006L8.99988,7.00006 8.99988,8.00006 0.999878,8.00006 0.999878,7.00006z"
                                      Fill="#BF606060 "
                                      Height="7"
                                      HorizontalAlignment="Stretch"
                                      Stretch="Fill"
                                      VerticalAlignment="Stretch"
                                      Width="9"/>
                            </Canvas>
                        </Viewbox>
                    </dx:MinSizeArranger>
                </Border>
            </Border>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Visibility"
                        TargetName="border1"
                        Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background"
                        TargetName="border1"
                        Value="#FF3C7FB1 "/>
                <Setter Property="Background" TargetName="border">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                            <GradientStop Color="#FFDCF0FB " Offset="0"/>
                            <GradientStop Color="#FF94C0D8 " Offset="1"/>
                            <GradientStop Color="#FFC9E9FA " Offset="0.5"/>
                            <GradientStop Color="#FFA9DBF6 " Offset="0.5"/>
                            <GradientStop Color="#FFA4D5EF " Offset="0.8"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background" TargetName="border1_1">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0,0.5" StartPoint="1,0.5">
                            <GradientStop Color="#FFFFFFFF " Offset="1"/>
                            <GradientStop Color="#FFC0D6E2 " Offset="0"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Fill"
                        TargetName="path"
                        Value="#BF3A6693 "/>
            </Trigger>
            <Trigger Property="IsDragging" Value="True">
                <Setter Property="Background"
                        TargetName="border1"
                        Value="#FF18598A "/>
                <Setter Property="Background" TargetName="border1_1">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0,0.5" StartPoint="1,0.5">
                            <GradientStop Color="#FFE3F5FC " Offset="1"/>
                            <GradientStop Color="#FF9EC7D9 " Offset="0"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background" TargetName="border">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                            <GradientStop Color="#FFC4E9F9 " Offset="0"/>
                            <GradientStop Color="#FF62B1D3 " Offset="1"/>
                            <GradientStop Color="#FFA5DEF6 " Offset="0.5"/>
                            <GradientStop Color="#FF6FCAF0 " Offset="0.5"/>
                            <GradientStop Color="#FF6CC4E9 " Offset="0.8"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Fill"
                        TargetName="path"
                        Value="#E518598A "/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxt:ScrollBarThemeKey ResourceKey=ScrollButtonUpTemplate}" TargetType="{x:Type RepeatButton}">
        <Grid Background="#00CD6565 ">
            <Border x:Name="border1"
                    Background="#FF5F6E93 "
                    CornerRadius="1,1,1,1"
                    Margin="1,1,1,0"
                    Padding="1,1,1,1"
                    Visibility="Hidden">
                <Border x:Name="border1_1" Padding="1,1,1,1">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0,0.5" StartPoint="1,0.5">
                            <GradientStop Color="#FFE8E9E9 " Offset="0"/>
                            <GradientStop Color="#FFE9ECF2 " Offset="1"/>
                        </LinearGradientBrush>
                    </Border.Background>
                    <Border x:Name="border">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                <GradientStop Color="#FFEBEEF0 " Offset="0"/>
                                <GradientStop Color="#FFD1DBE6 " Offset="1"/>
                                <GradientStop Color="#FFE6E9F0 " Offset="0.5"/>
                                <GradientStop Color="#FFD1DAE4 " Offset="0.5"/>
                                <GradientStop Color="#FFBECADB " Offset="0.8"/>
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                </Border>
            </Border>
            <Path Data="F1M1288,776L1292,771 1293,771 1297,776 1288,776z"
                  Height="5"
                  HorizontalAlignment="Center"
                  Stretch="Fill"
                  VerticalAlignment="Center"
                  Width="9">
                <Path.Fill>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF707582 " Offset="0"/>
                        <GradientStop Color="#FF555A6A " Offset="1"/>
                    </LinearGradientBrush>
                </Path.Fill>
            </Path>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background"
                        TargetName="border1"
                        Value="#FF3C7FB1 "/>
                <Setter Property="Background" TargetName="border">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                            <GradientStop Color="#FFDCF0FB " Offset="0"/>
                            <GradientStop Color="#FF94C0D8 " Offset="1"/>
                            <GradientStop Color="#FFC9E9FA " Offset="0.5"/>
                            <GradientStop Color="#FFA9DBF6 " Offset="0.5"/>
                            <GradientStop Color="#FFA4D5EF " Offset="0.8"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background" TargetName="border1_1">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0,0.5" StartPoint="1,0.5">
                            <GradientStop Color="#FFFFFFFF " Offset="1"/>
                            <GradientStop Color="#FFC0D6E2 " Offset="0"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Visibility"
                        TargetName="border1"
                        Value="Visible"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background"
                        TargetName="border1"
                        Value="#FF18598A "/>
                <Setter Property="Background" TargetName="border1_1">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0,0.5" StartPoint="1,0.5">
                            <GradientStop Color="#FFE3F5FC " Offset="1"/>
                            <GradientStop Color="#FF9EC7D9 " Offset="0"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background" TargetName="border">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                            <GradientStop Color="#FFC4E9F9 " Offset="0"/>
                            <GradientStop Color="#FF62B1D3 " Offset="1"/>
                            <GradientStop Color="#FFA5DEF6 " Offset="0.5"/>
                            <GradientStop Color="#FF6FCAF0 " Offset="0.5"/>
                            <GradientStop Color="#FF6CC4E9 " Offset="0.8"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Visibility"
                        TargetName="border1"
                        Value="Visible"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxt:ScrollBarThemeKey ResourceKey=ScrollButtonDownTemplate}" TargetType="{x:Type RepeatButton}">
        <Grid Background="#00CD6565 ">
            <Border x:Name="border1"
                    Background="#FF5F6E93 "
                    CornerRadius="1,1,1,1"
                    Margin="1,0,1,1"
                    Padding="1,1,1,1"
                    Visibility="Hidden">
                <Border x:Name="border1_1"
                        CornerRadius="0,0,0,0"
                        Padding="1,1,1,1">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0,0.5" StartPoint="1,0.5">
                            <GradientStop Color="#FFE8E9E9 " Offset="0"/>
                            <GradientStop Color="#FFE9ECF2 " Offset="1"/>
                        </LinearGradientBrush>
                    </Border.Background>
                    <Border x:Name="border">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                <GradientStop Color="#FFEBEEF0 " Offset="0"/>
                                <GradientStop Color="#FFD1DBE6 " Offset="1"/>
                                <GradientStop Color="#FFE6E9F0 " Offset="0.5"/>
                                <GradientStop Color="#FFD1DAE4 " Offset="0.5"/>
                                <GradientStop Color="#FFBECADB " Offset="0.8"/>
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                </Border>
            </Border>
            <Path Data="F1M1297,780L1293,785 1292,785 1288,780 1297,780z"
                  Height="5"
                  HorizontalAlignment="Center"
                  Margin="0,0,0,0"
                  Stretch="Fill"
                  VerticalAlignment="Center"
                  Width="9">
                <Path.Fill>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF707582 " Offset="0"/>
                        <GradientStop Color="#FF555A6A " Offset="1"/>
                    </LinearGradientBrush>
                </Path.Fill>
            </Path>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background"
                        TargetName="border1"
                        Value="#FF3C7FB1 "/>
                <Setter Property="Background" TargetName="border">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                            <GradientStop Color="#FFDCF0FB " Offset="0"/>
                            <GradientStop Color="#FF94C0D8 " Offset="1"/>
                            <GradientStop Color="#FFC9E9FA " Offset="0.5"/>
                            <GradientStop Color="#FFA9DBF6 " Offset="0.5"/>
                            <GradientStop Color="#FFA4D5EF " Offset="0.8"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background" TargetName="border1_1">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0,0.5" StartPoint="1,0.5">
                            <GradientStop Color="#FFFFFFFF " Offset="1"/>
                            <GradientStop Color="#FFC0D6E2 " Offset="0"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Visibility"
                        TargetName="border1"
                        Value="Visible"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background"
                        TargetName="border1"
                        Value="#FF18598A "/>
                <Setter Property="Background" TargetName="border1_1">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0,0.5" StartPoint="1,0.5">
                            <GradientStop Color="#FFE3F5FC " Offset="1"/>
                            <GradientStop Color="#FF9EC7D9 " Offset="0"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background" TargetName="border">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                            <GradientStop Color="#FFC4E9F9 " Offset="0"/>
                            <GradientStop Color="#FF62B1D3 " Offset="1"/>
                            <GradientStop Color="#FFA5DEF6 " Offset="0.5"/>
                            <GradientStop Color="#FF6FCAF0 " Offset="0.5"/>
                            <GradientStop Color="#FF6CC4E9 " Offset="0.8"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Visibility"
                        TargetName="border1"
                        Value="Visible"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxt:ScrollBarThemeKey ResourceKey=ScrollBarHorzTemplate}" TargetType="{x:Type ScrollBar}">
        <Grid Background="{x:Null}" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
            </Grid.ColumnDefinitions>
            <Border BorderBrush="#FFEBEDEF "
                    BorderThickness="0,1,0,1"
                    CornerRadius="0,0,0,0"
                    Grid.ColumnSpan="3"
                    Grid.RowSpan="1"
                    Height="Auto"
                    Margin="0,0,0,0"
                    Padding="0,0,0,0"
                    VerticalAlignment="Stretch">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFFCFCFC " Offset="0"/>
                        <GradientStop Color="#FFF0F0F0 " Offset="1"/>
                        <GradientStop Color="#FFEFEFEF " Offset="0.258"/>
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <RepeatButton x:Name="PART_LineLeftButton"
                          Command="ScrollBar.LineLeftCommand"
                          Style="{DynamicResource {dxt:ScrollBarThemeKey IsVisibleInBlend=True, ResourceKey=ScrollButtonLeftStyle}}"
                          Template="{DynamicResource {dxt:ScrollBarThemeKey ResourceKey=ScrollButtonLeftTemplate}}"/>
            <Track x:Name="PART_Track" Grid.Column="1">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageLeftCommand"
                                  Style="{DynamicResource {dxt:ScrollBarThemeKey IsVisibleInBlend=True, ResourceKey=PageButtonStyle}}"
                                  Template="{DynamicResource {dxt:ScrollBarThemeKey IsVisibleInBlend=True, ResourceKey=PageButtonTemplate}}"/>
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageRightCommand"
                                  Style="{DynamicResource {dxt:ScrollBarThemeKey IsVisibleInBlend=True, ResourceKey=PageButtonStyle}}"
                                  Template="{DynamicResource {dxt:ScrollBarThemeKey IsVisibleInBlend=True, ResourceKey=PageButtonTemplate}}"/>
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{DynamicResource {dxt:ScrollBarThemeKey IsVisibleInBlend=True, ResourceKey=ScrollThumbHorzStyle}}" Template="{DynamicResource {dxt:ScrollBarThemeKey ResourceKey=ScrollThumbHorzTemplate}}"/>
                </Track.Thumb>
            </Track>
            <RepeatButton x:Name="PART_LineRightButton"
                          Command="ScrollBar.LineRightCommand"
                          Grid.Column="2"
                          Style="{DynamicResource {dxt:ScrollBarThemeKey IsVisibleInBlend=True, ResourceKey=ScrollButtonRightStyle}}"
                          Template="{DynamicResource {dxt:ScrollBarThemeKey ResourceKey=ScrollButtonRightTemplate}}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity"
                        TargetName="PART_LineLeftButton"
                        Value="0.25"/>
                <Setter Property="Opacity"
                        TargetName="PART_LineRightButton"
                        Value="0.25"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxt:ScrollBarThemeKey ResourceKey=ScrollButtonLeftTemplate}" TargetType="{x:Type RepeatButton}">
        <Grid Background="#00CD6565 ">
            <Border x:Name="border1"
                    Background="#FF9C9C9C "
                    CornerRadius="1,1,1,1"
                    Margin="1,1,0,1"
                    Padding="1,1,1,1"
                    Visibility="Hidden">
                <Border x:Name="border1_1"
                        CornerRadius="0,0,0,0"
                        Padding="1,1,1,1">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                            <GradientStop Color="#FFE8E9E9 " Offset="0"/>
                            <GradientStop Color="#FFE9ECF2 " Offset="1"/>
                        </LinearGradientBrush>
                    </Border.Background>
                    <Border x:Name="border">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFEBEEF0 " Offset="0"/>
                                <GradientStop Color="#FFD1DBE6 " Offset="1"/>
                                <GradientStop Color="#FFE6E9F0 " Offset="0.5"/>
                                <GradientStop Color="#FFD1DAE4 " Offset="0.5"/>
                                <GradientStop Color="#FFBECADB " Offset="0.8"/>
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                </Border>
            </Border>
            <Path x:Name="path"
                  Data="F1M1283,784L1278,780 1278,779 1283,775 1283,784z"
                  Height="9"
                  HorizontalAlignment="Center"
                  Margin="0,0,0,0"
                  Stretch="Fill"
                  VerticalAlignment="Center"
                  Width="5">
                <Path.Fill>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF707582 " Offset="0"/>
                        <GradientStop Color="#FF555A6A " Offset="1"/>
                    </LinearGradientBrush>
                </Path.Fill>
            </Path>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity"
                        TargetName="path"
                        Value="0.35"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background"
                        TargetName="border1"
                        Value="#FF3C7FB1 "/>
                <Setter Property="Background" TargetName="border">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFDCF0FB " Offset="0"/>
                            <GradientStop Color="#FF94C0D8 " Offset="1"/>
                            <GradientStop Color="#FFC9E9FA " Offset="0.5"/>
                            <GradientStop Color="#FFA9DBF6 " Offset="0.5"/>
                            <GradientStop Color="#FFA4D5EF " Offset="0.8"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background" TargetName="border1_1">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                            <GradientStop Color="#FFFFFFFF " Offset="1"/>
                            <GradientStop Color="#FFC0D6E2 " Offset="0"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Visibility"
                        TargetName="border1"
                        Value="Visible"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background"
                        TargetName="border1"
                        Value="#FF18598A "/>
                <Setter Property="Background" TargetName="border1_1">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                            <GradientStop Color="#FFE3F5FC " Offset="1"/>
                            <GradientStop Color="#FF9EC7D9 " Offset="0"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background" TargetName="border">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFC4E9F9 " Offset="0"/>
                            <GradientStop Color="#FF62B1D3 " Offset="1"/>
                            <GradientStop Color="#FFA5DEF6 " Offset="0.5"/>
                            <GradientStop Color="#FF6FCAF0 " Offset="0.5"/>
                            <GradientStop Color="#FF6CC4E9 " Offset="0.8"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Visibility"
                        TargetName="border1"
                        Value="Visible"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxt:ScrollBarThemeKey ResourceKey=ScrollButtonRightTemplate}" TargetType="{x:Type RepeatButton}">
        <Grid Background="#00CD6565 ">
            <Border x:Name="border1"
                    Background="#FF9C9C9C "
                    CornerRadius="1,1,1,1"
                    Margin="0,1,1,1"
                    Padding="1,1,1,1"
                    Visibility="Hidden">
                <Border x:Name="border1_1" Padding="1,1,1,1">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                            <GradientStop Color="#FFE8E9E9 " Offset="0"/>
                            <GradientStop Color="#FFE9ECF2 " Offset="1"/>
                        </LinearGradientBrush>
                    </Border.Background>
                    <Border x:Name="border">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFEBEEF0 " Offset="0"/>
                                <GradientStop Color="#FFD1DBE6 " Offset="1"/>
                                <GradientStop Color="#FFE6E9F0 " Offset="0.5"/>
                                <GradientStop Color="#FFD1DAE4 " Offset="0.5"/>
                                <GradientStop Color="#FFBECADB " Offset="0.8"/>
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                </Border>
            </Border>
            <Path x:Name="path"
                  Data="F1M1302,772L1307,776 1307,777 1302,781 1302,772z"
                  Height="9"
                  HorizontalAlignment="Center"
                  Margin="0,0,0,0"
                  Stretch="Fill"
                  VerticalAlignment="Center"
                  Width="5">
                <Path.Fill>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF707582 " Offset="0"/>
                        <GradientStop Color="#FF555A6A " Offset="1"/>
                    </LinearGradientBrush>
                </Path.Fill>
            </Path>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity"
                        TargetName="path"
                        Value="0.35"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background"
                        TargetName="border1"
                        Value="#FF3C7FB1 "/>
                <Setter Property="Background" TargetName="border">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFDCF0FB " Offset="0"/>
                            <GradientStop Color="#FF94C0D8 " Offset="1"/>
                            <GradientStop Color="#FFC9E9FA " Offset="0.5"/>
                            <GradientStop Color="#FFA9DBF6 " Offset="0.5"/>
                            <GradientStop Color="#FFA4D5EF " Offset="0.8"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background" TargetName="border1_1">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                            <GradientStop Color="#FFFFFFFF " Offset="1"/>
                            <GradientStop Color="#FFC0D6E2 " Offset="0"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Visibility"
                        TargetName="border1"
                        Value="Visible"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background"
                        TargetName="border1"
                        Value="#FF18598A "/>
                <Setter Property="Background" TargetName="border1_1">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                            <GradientStop Color="#FFE3F5FC " Offset="1"/>
                            <GradientStop Color="#FF9EC7D9 " Offset="0"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background" TargetName="border">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFC4E9F9 " Offset="0"/>
                            <GradientStop Color="#FF62B1D3 " Offset="1"/>
                            <GradientStop Color="#FFA5DEF6 " Offset="0.5"/>
                            <GradientStop Color="#FF6FCAF0 " Offset="0.5"/>
                            <GradientStop Color="#FF6CC4E9 " Offset="0.8"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Visibility"
                        TargetName="border1"
                        Value="Visible"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxt:ScrollBarThemeKey ResourceKey=ScrollThumbHorzTemplate}" TargetType="{x:Type Thumb}">
        <Border x:Name="border1"
                Background="#FF9C9C9C "
                CornerRadius="2,2,2,2"
                Margin="0,1,0,1"
                Padding="1,1,1,1">
            <Border x:Name="border1_1"
                    CornerRadius="1,1,1,1"
                    Padding="1,1,1,1">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                        <GradientStop Color="#FFF9F9F9 " Offset="1"/>
                        <GradientStop Color="#FFCFCFD2 " Offset="0"/>
                    </LinearGradientBrush>
                </Border.Background>
                <Border x:Name="border">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFF6F6F6 " Offset="0"/>
                            <GradientStop Color="#FFC1C1C5 " Offset="1"/>
                            <GradientStop Color="#FFEAEAEC " Offset="0.5"/>
                            <GradientStop Color="#FFDADBDD " Offset="0.5"/>
                            <GradientStop Color="#FFC8C9CC " Offset="0.8"/>
                        </LinearGradientBrush>
                    </Border.Background>
                    <dx:MinSizeArranger MinChildWidth="11">
                        <Viewbox Height="11"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 Width="11">
                            <Canvas Height="11" Width="11">
                                <Rectangle Canvas.Left="1"
                                           Canvas.Top="0"
                                           Fill="#40FFFFFF "
                                           Height="11"
                                           HorizontalAlignment="Stretch"
                                           Stretch="Fill"
                                           VerticalAlignment="Center"
                                           Width="9"/>
                                <Path x:Name="path"
                                      Canvas.Left="2"
                                      Canvas.Top="1"
                                      Data="F1M1240,788L1240,779 1241,779 1241,788 1240,788z M1242,788L1242,779 1243,779 1243,788 1242,788z M1244,788L1244,779 1245,779 1245,788 1244,788z M1246,788L1246,779 1247,779 1247,788 1246,788z"
                                      Fill="#BF606060 "
                                      Height="9"
                                      HorizontalAlignment="Stretch"
                                      Stretch="Fill"
                                      VerticalAlignment="Stretch"
                                      Width="7"/>
                            </Canvas>
                        </Viewbox>
                    </dx:MinSizeArranger>
                </Border>
            </Border>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Visibility"
                        TargetName="border1"
                        Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background"
                        TargetName="border1"
                        Value="#FF3C7FB1 "/>
                <Setter Property="Background" TargetName="border">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFDCF0FB " Offset="0"/>
                            <GradientStop Color="#FF94C0D8 " Offset="1"/>
                            <GradientStop Color="#FFC9E9FA " Offset="0.5"/>
                            <GradientStop Color="#FFA9DBF6 " Offset="0.5"/>
                            <GradientStop Color="#FFA4D5EF " Offset="0.8"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background" TargetName="border1_1">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                            <GradientStop Color="#FFFFFFFF " Offset="1"/>
                            <GradientStop Color="#FFC0D6E2 " Offset="0"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Fill"
                        TargetName="path"
                        Value="#BF3A6693 "/>
            </Trigger>
            <Trigger Property="IsDragging" Value="True">
                <Setter Property="Background"
                        TargetName="border1"
                        Value="#FF18598A "/>
                <Setter Property="Background" TargetName="border1_1">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                            <GradientStop Color="#FFE3F5FC " Offset="1"/>
                            <GradientStop Color="#FF9EC7D9 " Offset="0"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background" TargetName="border">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFC4E9F9 " Offset="0"/>
                            <GradientStop Color="#FF62B1D3 " Offset="1"/>
                            <GradientStop Color="#FFA5DEF6 " Offset="0.5"/>
                            <GradientStop Color="#FF6FCAF0 " Offset="0.5"/>
                            <GradientStop Color="#FF6CC4E9 " Offset="0.8"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Fill"
                        TargetName="path"
                        Value="#E518598A "/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=System.Windows.Controls.TabItem}" TargetType="{x:Type TabItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="#FF000000 "/>
        <Setter Property="Padding" Value="9,1,9,1"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="grid" SnapsToDevicePixels="True">
                        <Border x:Name="border"
                                Background="#FF828790 "
                                CornerRadius="0,0,0,0"
                                Height="Auto"
                                Margin="0,0,-1,0"
                                Padding="1,1,1,0"
                                Width="Auto">
                            <Border x:Name="border2"
                                    CornerRadius="0,0,0,0"
                                    Height="Auto"
                                    Padding="1,1,1,1"
                                    Width="Auto">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFF8FAFB " Offset="0"/>
                                        <GradientStop Color="#FFFFFFFF " Offset="1"/>
                                        <GradientStop Color="#FFF3F5F7 " Offset="0.5"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border x:Name="border1"
                                        CornerRadius="0,0,0,0"
                                        Height="Auto"
                                        Width="Auto">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFFEFFFF " Offset="0"/>
                                            <GradientStop Color="#FFFAFFFF " Offset="1"/>
                                            <GradientStop Color="#FFE0E5EB " Offset="0.5"/>
                                            <GradientStop Color="#FFCBD5DF " Offset="0.5"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Grid>
                                        <Border x:Name="FocusTop" Opacity="0">
                                            <Border.Background>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="#FFFBE297" Offset="0"/>
                                                    <GradientStop Color="#00FBE297" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Border.Background>
                                        </Border>
                                        <Border x:Name="FocusBottom" Opacity="0">
                                            <Border.Background>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="#FFFBE297" Offset="1"/>
                                                    <GradientStop Color="#00FBE297"/>
                                                </LinearGradientBrush>
                                            </Border.Background>
                                        </Border>
                                        <Border x:Name="FocusLeft" Opacity="0">
                                            <Border.Background>
                                                <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                    <GradientStop Color="#FFFBE297" Offset="0"/>
                                                    <GradientStop Color="#00FBE297" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Border.Background>
                                        </Border>
                                        <Border x:Name="FocusRight" Opacity="0">
                                            <Border.Background>
                                                <LinearGradientBrush EndPoint="0,0.5" StartPoint="1,0.5">
                                                    <GradientStop Color="#FFFBE297" Offset="0"/>
                                                    <GradientStop Color="#00FBE297" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Border.Background>
                                        </Border>
                                        <ContentPresenter x:Name="Content"
                                                          ContentSource="Header"
                                                          Margin="{TemplateBinding Padding}"
                                                          RecognizesAccessKey="True"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Grid>
                                </Border>
                            </Border>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border1">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFFFFBE5 " Offset="0"/>
                                        <GradientStop Color="#FFFCEBB7 " Offset="1"/>
                                        <GradientStop Color="#FFFADF8F " Offset="0.5"/>
                                        <GradientStop Color="#FFF4C233 " Offset="0.5"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Background" TargetName="border2">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFFFFEFB " Offset="0"/>
                                        <GradientStop Color="#FFFFF5D7 " Offset="1"/>
                                        <GradientStop Color="#FFFFF6DC " Offset="0.5"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter Property="Background"
                                    TargetName="border1"
                                    Value="{x:Null}"/>
                            <Setter Property="Background"
                                    TargetName="border2"
                                    Value="#FFFFFFFF "/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Top"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity"
                                    TargetName="FocusTop"
                                    Value="1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Bottom"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity"
                                    TargetName="FocusBottom"
                                    Value="1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Left"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity"
                                    TargetName="FocusLeft"
                                    Value="1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Right"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity"
                                    TargetName="FocusRight"
                                    Value="1"/>
                        </MultiTrigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Padding"
                                    TargetName="border"
                                    Value="1,0,1,1"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Padding"
                                    TargetName="border"
                                    Value="1,1,0,1"/>
                            <Setter Property="Margin"
                                    TargetName="border"
                                    Value="0,0,0,-1"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Padding"
                                    TargetName="border"
                                    Value="0,1,1,1"/>
                            <Setter Property="Margin"
                                    TargetName="border"
                                    Value="0,0,0,-1"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Top"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="border1"
                                    Value="{x:Null}"/>
                            <Setter Property="Background"
                                    TargetName="border2"
                                    Value="#FFFFFFFF "/>
                            <Setter Property="Margin"
                                    TargetName="grid"
                                    Value="0,-2,0,-1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Bottom"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin"
                                    TargetName="grid"
                                    Value="0,-1,0,-2"/>
                            <Setter Property="Background"
                                    TargetName="border1"
                                    Value="{x:Null}"/>
                            <Setter Property="Background"
                                    TargetName="border2"
                                    Value="#FFFFFFFF "/>
                            <Setter Property="Padding"
                                    TargetName="border1"
                                    Value="0,3,0,0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Left"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="border1"
                                    Value="{x:Null}"/>
                            <Setter Property="Background"
                                    TargetName="border2"
                                    Value="#FFFFFFFF "/>
                            <Setter Property="Margin"
                                    TargetName="grid"
                                    Value="-2,0,-1,0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Right"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="border1"
                                    Value="{x:Null}"/>
                            <Setter Property="Background"
                                    TargetName="border2"
                                    Value="#FFFFFFFF "/>
                            <Setter Property="Margin"
                                    TargetName="grid"
                                    Value="-1,0,-2,0"/>
                            <Setter Property="Padding"
                                    TargetName="border1"
                                    Value="3,0,0,0"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity"
                                    TargetName="border1"
                                    Value="0.35"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=System.Windows.Controls.Slider}" TargetType="{x:Type Slider}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
        <Setter Property="Background" Value="#00FFFFFF "/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TickBar x:Name="TopTick"
                                     Fill="{TemplateBinding Foreground}"
                                     Grid.Row="0"
                                     Height="4"
                                     Opacity="0"
                                     Placement="Top"/>
                            <TickBar x:Name="BottomTick"
                                     Fill="{TemplateBinding Foreground}"
                                     Grid.Row="2"
                                     Height="4"
                                     Opacity="0"
                                     Placement="Bottom"/>
                            <Grid x:Name="TrackBackground"
                                  Background="{x:Null}"
                                  Grid.Row="1"
                                  Height="8"
                                  Margin="6,0,6,0"
                                  VerticalAlignment="Center">
                                <Border x:Name="Focus"
                                        Background="#FFFFC200"
                                        CornerRadius="1"
                                        Grid.RowSpan="3"
                                        Margin="-1,2,-1,3"
                                        Opacity="0"/>
                                <Canvas Grid.ColumnSpan="1" Margin="0,0,0,0">
                                    <Rectangle x:Name="PART_SelectionRange"
                                               Canvas.Left="0"
                                               Canvas.Top="0"
                                               Height="8"
                                               HorizontalAlignment="Left"
                                               Stroke="{x:Null}"
                                               StrokeThickness="1"
                                               VerticalAlignment="Stretch"
                                               Visibility="Hidden"
                                               Width="Auto">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#26F9D423 " Offset="0"/>
                                                <GradientStop Color="#26F9D423 " Offset="1"/>
                                                <GradientStop Color="#FFF9D423 " Offset="0.5"/>
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                </Canvas>
                                <Border Background="#FF828790 "
                                        BorderBrush="#7FFFFFFF "
                                        BorderThickness="0,0,0,1"
                                        Grid.ColumnSpan="1"
                                        Height="2"
                                        Margin="0,0,0,0"
                                        VerticalAlignment="Center"/>
                                <Border x:Name="border"
                                        Background="#FF828790 "
                                        BorderBrush="{x:Null}"
                                        BorderThickness="0,0,0,0"
                                        Grid.Column="0"
                                        Grid.ColumnSpan="1"
                                        Height="Auto"
                                        HorizontalAlignment="Center"
                                        Margin="0,0,0,1"
                                        VerticalAlignment="Stretch"
                                        Width="1"/>
                            </Grid>
                            <Track x:Name="PART_Track" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="Slider.DecreaseLarge">
                                        <RepeatButton.Style>
                                            <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=System.Windows.Controls.Primitives.RepeatButton}" TargetType="{x:Type RepeatButton}">
                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                <Setter Property="IsTabStop" Value="False"/>
                                                <Setter Property="Focusable" Value="False"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                            <Rectangle Fill="#00FFFFFF "/>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </RepeatButton.Style>
                                    </RepeatButton>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="Slider.IncreaseLarge">
                                        <RepeatButton.Style>
                                            <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=System.Windows.Controls.Primitives.RepeatButton}" TargetType="{x:Type RepeatButton}">
                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                <Setter Property="IsTabStop" Value="False"/>
                                                <Setter Property="Focusable" Value="False"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                            <Rectangle Fill="#00FFFFFF "/>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </RepeatButton.Style>
                                    </RepeatButton>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb">
                                        <Thumb.Style>
                                            <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=Thumb}" TargetType="{x:Type Thumb}">
                                                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                <Setter Property="Focusable" Value="False"/>
                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                            <Grid Background="{x:Null}"
                                                                  Height="18"
                                                                  Width="13">
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="Auto"/>
                                                                    <RowDefinition Height="*"/>
                                                                    <RowDefinition Height="Auto"/>
                                                                </Grid.RowDefinitions>
                                                                <VisualStateManager.VisualStateGroups>
                                                                    <VisualStateGroup x:Name="FocusStates">
                                                                        <VisualState x:Name="Focused"/>
                                                                        <VisualState x:Name="Unfocused"/>
                                                                    </VisualStateGroup>
                                                                </VisualStateManager.VisualStateGroups>
                                                                <Border x:Name="border3"
                                                                        Background="#7FFFFFFF "
                                                                        Grid.Row="1"
                                                                        Grid.RowSpan="1"
                                                                        Padding="1,1,1,1">
                                                                    <Border x:Name="border2"
                                                                            Background="#BF252525 "
                                                                            Padding="1,1,1,1">
                                                                        <Border x:Name="border1" Padding="1,1,1,1">
                                                                            <Border.Background>
                                                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                    <GradientStop Color="#FFF9FCFF " Offset="0"/>
                                                                                    <GradientStop Color="#FFE6E8EA " Offset="1"/>
                                                                                    <GradientStop Color="#FFE2E2E2 " Offset="0.5"/>
                                                                                </LinearGradientBrush>
                                                                            </Border.Background>
                                                                            <Border x:Name="border">
                                                                                <Border.Background>
                                                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                        <GradientStop Color="#FFF8FBFE " Offset="0"/>
                                                                                        <GradientStop Color="#FFDCDCDC " Offset="1"/>
                                                                                        <GradientStop Color="#FFDCDCDC " Offset="0.5"/>
                                                                                        <GradientStop Color="#FFA8A9A9 " Offset="0.5"/>
                                                                                    </LinearGradientBrush>
                                                                                </Border.Background>
                                                                                <Grid x:Name="grid"
                                                                                      Height="6"
                                                                                      Margin="1,0,0,0"
                                                                                      Width="2">
                                                                                    <Rectangle Fill="#FFFFFFFF "
                                                                                               HorizontalAlignment="Right"
                                                                                               Opacity="0.35"
                                                                                               Stroke="{x:Null}"
                                                                                               StrokeThickness="0"
                                                                                               Width="1"/>
                                                                                    <Rectangle HorizontalAlignment="Left"
                                                                                               Stroke="{x:Null}"
                                                                                               StrokeThickness="0"
                                                                                               Width="1">
                                                                                        <Rectangle.Fill>
                                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                <GradientStop Color="#3F999999 " Offset="0"/>
                                                                                                <GradientStop Color="#3F939393 " Offset="1"/>
                                                                                                <GradientStop Color="#FF6F7072 " Offset="0.5"/>
                                                                                            </LinearGradientBrush>
                                                                                        </Rectangle.Fill>
                                                                                    </Rectangle>
                                                                                </Grid>
                                                                            </Border>
                                                                        </Border>
                                                                    </Border>
                                                                </Border>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Background" TargetName="border">
                                                                        <Setter.Value>
                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                <GradientStop Color="#FFFEFAE8 " Offset="0"/>
                                                                                <GradientStop Color="#FFFADE8F " Offset="1"/>
                                                                                <GradientStop Color="#FFFBE5A1 " Offset="0.5"/>
                                                                                <GradientStop Color="#FFF4C02F " Offset="0.5"/>
                                                                            </LinearGradientBrush>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="Background" TargetName="border1">
                                                                        <Setter.Value>
                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                <GradientStop Color="#FFFEFAE8 " Offset="0"/>
                                                                                <GradientStop Color="#FFFCEBBC " Offset="1"/>
                                                                                <GradientStop Color="#FFFDEFC5 " Offset="0.5"/>
                                                                            </LinearGradientBrush>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Trigger>
                                                                <Trigger Property="Foreground" Value="#FF0000FF">
                                                                    <Setter Property="Background"
                                                                            TargetName="border3"
                                                                            Value="#7F67DAFB "/>
                                                                </Trigger>
                                                                <Trigger Property="IsDragging" Value="True">
                                                                    <Setter Property="Background" TargetName="border">
                                                                        <Setter.Value>
                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                <GradientStop Color="#FFFED2A2 " Offset="0"/>
                                                                                <GradientStop Color="#FFFD891A " Offset="1"/>
                                                                                <GradientStop Color="#FFFDA755 " Offset="0.5"/>
                                                                                <GradientStop Color="#FFFD891A " Offset="0.5"/>
                                                                            </LinearGradientBrush>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="Background" TargetName="border1">
                                                                        <Setter.Value>
                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                <GradientStop Color="#FFFFBA78 " Offset="0"/>
                                                                                <GradientStop Color="#FFF4A152 " Offset="1"/>
                                                                                <GradientStop Color="#FFFFC690 " Offset="0.5"/>
                                                                            </LinearGradientBrush>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Background"
                                                                            TargetName="border2"
                                                                            Value="#FFC2C2C3"/>
                                                                    <Setter Property="Opacity"
                                                                            TargetName="border"
                                                                            Value="0.35"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Thumb.Style>
                                    </Thumb>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TickPlacement" Value="TopLeft">
                            <Setter Property="Opacity"
                                    TargetName="TopTick"
                                    Value="1"/>
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="BottomRight">
                            <Setter Property="Opacity"
                                    TargetName="BottomTick"
                                    Value="1"/>
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="Both">
                            <Setter Property="Opacity"
                                    TargetName="TopTick"
                                    Value="1"/>
                            <Setter Property="Opacity"
                                    TargetName="BottomTick"
                                    Value="1"/>
                        </Trigger>
                        <Trigger Property="IsSelectionRangeEnabled" Value="True">
                            <Setter Property="Visibility"
                                    TargetName="PART_SelectionRange"
                                    Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Foreground"
                                    TargetName="Thumb"
                                    Value="#FF0000FF "/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Opacity"
                                    TargetName="Focus"
                                    Value="0.35"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="#FF828790 "/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Slider}">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="True">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TickBar x:Name="TopTick"
                                             Fill="{TemplateBinding Foreground}"
                                             Grid.Column="0"
                                             Opacity="0"
                                             Placement="Left"
                                             Width="4"/>
                                    <TickBar x:Name="BottomTick"
                                             Fill="{TemplateBinding Foreground}"
                                             Grid.Column="2"
                                             Opacity="0"
                                             Placement="Right"
                                             Width="4"/>
                                    <Grid x:Name="TrackBackground"
                                          Background="{x:Null}"
                                          Grid.Column="1"
                                          Grid.ColumnSpan="1"
                                          Height="Auto"
                                          HorizontalAlignment="Center"
                                          Margin="0,6,0,6"
                                          VerticalAlignment="Stretch"
                                          Width="8">
                                        <Border x:Name="Focus"
                                                Background="#FFFFC200"
                                                CornerRadius="1"
                                                Grid.RowSpan="3"
                                                Margin="2,-1,3,-1"
                                                Opacity="0"/>
                                        <Canvas Grid.ColumnSpan="1" Margin="0,0,0,0">
                                            <Rectangle x:Name="PART_SelectionRange"
                                                       Canvas.Left="0"
                                                       Canvas.Top="0"
                                                       Height="Auto"
                                                       HorizontalAlignment="Stretch"
                                                       Stroke="{x:Null}"
                                                       StrokeThickness="1"
                                                       VerticalAlignment="Bottom"
                                                       Visibility="Visible"
                                                       Width="8">
                                                <Rectangle.Fill>
                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                        <GradientStop Color="#26F9D423 " Offset="0"/>
                                                        <GradientStop Color="#26F9D423 " Offset="1"/>
                                                        <GradientStop Color="#FFF9D423 " Offset="0.5"/>
                                                    </LinearGradientBrush>
                                                </Rectangle.Fill>
                                            </Rectangle>
                                        </Canvas>
                                        <Border Background="#FF828790 "
                                                BorderBrush="#7FFFFFFF "
                                                BorderThickness="0,0,1,0"
                                                Grid.ColumnSpan="1"
                                                Height="Auto"
                                                HorizontalAlignment="Center"
                                                Margin="0,0,0,0"
                                                VerticalAlignment="Stretch"
                                                Width="2"/>
                                        <Border x:Name="border"
                                                Background="#FF828790 "
                                                BorderBrush="{x:Null}"
                                                BorderThickness="0,0,0,0"
                                                Grid.Column="0"
                                                Grid.ColumnSpan="1"
                                                Height="1"
                                                HorizontalAlignment="Stretch"
                                                Margin="0,0,1,0"
                                                VerticalAlignment="Center"
                                                Width="Auto"/>
                                    </Grid>
                                    <Track x:Name="PART_Track" Grid.Column="1">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="Slider.DecreaseLarge">
                                                <RepeatButton.Style>
                                                    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=System.Windows.Controls.Primitives.RepeatButton}" TargetType="{x:Type RepeatButton}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                        <Setter Property="IsTabStop" Value="False"/>
                                                        <Setter Property="Focusable" Value="False"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                    <Rectangle Fill="#00FFFFFF "/>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </RepeatButton.Style>
                                            </RepeatButton>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="Slider.IncreaseLarge">
                                                <RepeatButton.Style>
                                                    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=System.Windows.Controls.Primitives.RepeatButton}" TargetType="{x:Type RepeatButton}">
                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                        <Setter Property="IsTabStop" Value="False"/>
                                                        <Setter Property="Focusable" Value="False"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                    <Rectangle Fill="#00FFFFFF "/>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </RepeatButton.Style>
                                            </RepeatButton>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb x:Name="Thumb">
                                                <Thumb.Style>
                                                    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=Thumb}" TargetType="{x:Type Thumb}">
                                                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                        <Setter Property="Focusable" Value="False"/>
                                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                    <Grid Background="{x:Null}"
                                                                          Height="13"
                                                                          Width="18">
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                            <ColumnDefinition Width="*"/>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                        </Grid.ColumnDefinitions>
                                                                        <VisualStateManager.VisualStateGroups>
                                                                            <VisualStateGroup x:Name="FocusStates">
                                                                                <VisualState x:Name="Focused"/>
                                                                                <VisualState x:Name="Unfocused"/>
                                                                            </VisualStateGroup>
                                                                        </VisualStateManager.VisualStateGroups>
                                                                        <Border x:Name="border3"
                                                                                Background="#7FFFFFFF "
                                                                                Grid.Column="1"
                                                                                Grid.ColumnSpan="1"
                                                                                Padding="1,1,1,1">
                                                                            <Border x:Name="border2"
                                                                                    Background="#BF252525 "
                                                                                    Padding="1,1,1,1">
                                                                                <Border x:Name="border1" Padding="1,1,1,1">
                                                                                    <Border.Background>
                                                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                            <GradientStop Color="#FFF9FCFF " Offset="0"/>
                                                                                            <GradientStop Color="#FFE6E8EA " Offset="1"/>
                                                                                            <GradientStop Color="#FFE2E2E2 " Offset="0.5"/>
                                                                                        </LinearGradientBrush>
                                                                                    </Border.Background>
                                                                                    <Border x:Name="border">
                                                                                        <Border.Background>
                                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                                <GradientStop Color="#FFF8FBFE " Offset="0"/>
                                                                                                <GradientStop Color="#FFDCDCDC " Offset="1"/>
                                                                                                <GradientStop Color="#FFDCDCDC " Offset="0.5"/>
                                                                                                <GradientStop Color="#FFA8A9A9 " Offset="0.5"/>
                                                                                            </LinearGradientBrush>
                                                                                        </Border.Background>
                                                                                        <Grid x:Name="grid"
                                                                                              Height="2"
                                                                                              Margin="0,1,0,0"
                                                                                              Width="6">
                                                                                            <Rectangle Fill="#FFFFFFFF"
                                                                                                       Height="1"
                                                                                                       Opacity="0.35"
                                                                                                       Stroke="{x:Null}"
                                                                                                       StrokeThickness="0"
                                                                                                       VerticalAlignment="Bottom"/>
                                                                                            <Rectangle Height="1"
                                                                                                       Stroke="{x:Null}"
                                                                                                       StrokeThickness="0"
                                                                                                       VerticalAlignment="Top">
                                                                                                <Rectangle.Fill>
                                                                                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                                                                        <GradientStop Color="#3F999999 " Offset="0"/>
                                                                                                        <GradientStop Color="#3F939393 " Offset="1"/>
                                                                                                        <GradientStop Color="#FF6F7072 " Offset="0.5"/>
                                                                                                    </LinearGradientBrush>
                                                                                                </Rectangle.Fill>
                                                                                            </Rectangle>
                                                                                        </Grid>
                                                                                    </Border>
                                                                                </Border>
                                                                            </Border>
                                                                        </Border>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                            <Setter Property="Background" TargetName="border">
                                                                                <Setter.Value>
                                                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                        <GradientStop Color="#FFFEFAE8 " Offset="0"/>
                                                                                        <GradientStop Color="#FFFADE8F " Offset="1"/>
                                                                                        <GradientStop Color="#FFFBE5A1 " Offset="0.5"/>
                                                                                        <GradientStop Color="#FFF4C02F " Offset="0.5"/>
                                                                                    </LinearGradientBrush>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Setter Property="Background" TargetName="border1">
                                                                                <Setter.Value>
                                                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                        <GradientStop Color="#FFFEFAE8 " Offset="0"/>
                                                                                        <GradientStop Color="#FFFCEBBC " Offset="1"/>
                                                                                        <GradientStop Color="#FFFDEFC5 " Offset="0.5"/>
                                                                                    </LinearGradientBrush>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Trigger>
                                                                        <Trigger Property="Foreground" Value="#FF0000FF">
                                                                            <Setter Property="Background"
                                                                                    TargetName="border3"
                                                                                    Value="#7F67DAFB "/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsDragging" Value="True">
                                                                            <Setter Property="Background" TargetName="border">
                                                                                <Setter.Value>
                                                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                        <GradientStop Color="#FFFED2A2 " Offset="0"/>
                                                                                        <GradientStop Color="#FFFD891A " Offset="1"/>
                                                                                        <GradientStop Color="#FFFDA755 " Offset="0.5"/>
                                                                                        <GradientStop Color="#FFFD891A " Offset="0.5"/>
                                                                                    </LinearGradientBrush>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Setter Property="Background" TargetName="border1">
                                                                                <Setter.Value>
                                                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                        <GradientStop Color="#FFFFBA78 " Offset="0"/>
                                                                                        <GradientStop Color="#FFF4A152 " Offset="1"/>
                                                                                        <GradientStop Color="#FFFFC690 " Offset="0.5"/>
                                                                                    </LinearGradientBrush>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Trigger>
                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Background"
                                                                                    TargetName="border2"
                                                                                    Value="#FFC2C2C3"/>
                                                                            <Setter Property="Opacity"
                                                                                    TargetName="border"
                                                                                    Value="0.35"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Thumb.Style>
                                            </Thumb>
                                        </Track.Thumb>
                                    </Track>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="TickPlacement" Value="TopLeft">
                                    <Setter Property="Opacity"
                                            TargetName="TopTick"
                                            Value="1"/>
                                </Trigger>
                                <Trigger Property="TickPlacement" Value="BottomRight">
                                    <Setter Property="Opacity"
                                            TargetName="BottomTick"
                                            Value="1"/>
                                </Trigger>
                                <Trigger Property="TickPlacement" Value="Both">
                                    <Setter Property="Opacity"
                                            TargetName="TopTick"
                                            Value="1"/>
                                    <Setter Property="Opacity"
                                            TargetName="BottomTick"
                                            Value="1"/>
                                </Trigger>
                                <Trigger Property="IsSelectionRangeEnabled" Value="True">
                                    <Setter Property="Visibility"
                                            TargetName="PART_SelectionRange"
                                            Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter Property="Foreground"
                                            TargetName="Thumb"
                                            Value="#FF0000FF "/>
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="Opacity"
                                            TargetName="Focus"
                                            Value="0.35"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RadioButtonFocusVisualStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="16,0,0,0"
                               SnapsToDevicePixels="True"
                               Stroke="{StaticResource BaseBrushBlack}"
                               StrokeDashArray="1 2"
                               StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="CheckRadioFillNormal">
        <GradientStop Color="#FFD2D4D2" Offset="0"/>
        <GradientStop Color="#FFFFFFFF" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="CheckRadioStrokeNormal">
        <GradientStop Color="#FF004C94" Offset="0"/>
        <GradientStop Color="#FF003C74" Offset="1"/>
    </LinearGradientBrush>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=System.Windows.Controls.RadioButton}" TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="{StaticResource CheckRadioFillNormal}"/>
        <Setter Property="BorderBrush" Value="{StaticResource CheckRadioStrokeNormal}"/>
        <Setter Property="Padding" Value="0,3,0,3"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="dxeh:ControlHelper.ShowFocusedState" Value="{Binding Path=IsFocused, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="grid1" Height="Auto">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="InternalFocusStates">
                                <VisualState x:Name="InternalFocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="RadioButtonFocusedState"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.5"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InternalUnfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <BulletDecorator Background="#00FFFFFF "
                                         HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                         Margin="{TemplateBinding Padding}"
                                         VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <BulletDecorator.Bullet>
                                <Grid Height="14"
                                      Margin="0,1,0,1"
                                      VerticalAlignment="Stretch"
                                      Width="14">
                                    <Ellipse x:Name="RadioButtonFocusedState"
                                             Fill="#FFFFC200"
                                             Margin="-2"
                                             Opacity="0"/>
                                    <Ellipse x:Name="ellipse1"
                                             Fill="#FF8E8F8F "
                                             Margin="0,0,0,0"
                                             Stroke="{x:Null}"
                                             StrokeThickness="0"/>
                                    <Ellipse x:Name="ellipse3"
                                             Fill="#FFF4F4F4 "
                                             Margin="1,1,1,1"
                                             Stroke="{x:Null}"/>
                                    <Ellipse x:Name="ellipse" Margin="2,2,2,2">
                                        <Ellipse.Fill>
                                            <LinearGradientBrush EndPoint="0.2,0.17" StartPoint="0.758,0.777">
                                                <GradientStop Color="#FFF6F6F6 " Offset="0"/>
                                                <GradientStop Color="#FFCBCFD5 " Offset="1"/>
                                            </LinearGradientBrush>
                                        </Ellipse.Fill>
                                        <Ellipse.Stroke>
                                            <LinearGradientBrush EndPoint="0.854,0.854" StartPoint="0.146,0.146">
                                                <GradientStop Color="#FFAEB3B9 " Offset="0"/>
                                                <GradientStop Color="#FFE9E9EA " Offset="1"/>
                                            </LinearGradientBrush>
                                        </Ellipse.Stroke>
                                    </Ellipse>
                                    <Border Margin="3" UseLayoutRounding="True">
                                        <Grid x:Name="grid" Visibility="Hidden">
                                            <Ellipse Margin="0,0,0,0">
                                                <Ellipse.Stroke>
                                                    <LinearGradientBrush EndPoint="0.854,0.854" StartPoint="0.146,0.146">
                                                        <GradientStop Color="#FF274760 " Offset="0"/>
                                                        <GradientStop Color="#FF19344A " Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Ellipse.Stroke>
                                                <Ellipse.Fill>
                                                    <LinearGradientBrush EndPoint="0.856,0.856" StartPoint="0.144,0.144">
                                                        <GradientStop Color="#FF9BDEF2 " Offset="0"/>
                                                        <GradientStop Color="#FF0775B5 " Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Ellipse.Fill>
                                            </Ellipse>
                                            <Ellipse Fill="#FFDFF6FF "
                                                     Height="3"
                                                     HorizontalAlignment="Left"
                                                     Margin="1.5,1.5,0,0"
                                                     Opacity="0.75"
                                                     Stroke="{x:Null}"
                                                     VerticalAlignment="Top"
                                                     Width="3"/>
                                        </Grid>
                                    </Border>
                                </Grid>
                            </BulletDecorator.Bullet>
                            <ContentPresenter x:Name="contentPresenter"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="4,0,0,0"
                                              RecognizesAccessKey="True"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </BulletDecorator>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity"
                                    TargetName="grid1"
                                    Value="0.35"/>
                        </Trigger>
                        <Trigger Property="HasContent" Value="True">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource RadioButtonFocusVisualStyle}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility"
                                    TargetName="grid"
                                    Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill"
                                    TargetName="ellipse1"
                                    Value="#FF5586A3 "/>
                            <Setter Property="Fill"
                                    TargetName="ellipse3"
                                    Value="#FFDEF9FA "/>
                            <Setter Property="Fill" TargetName="ellipse">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.2,0.17" StartPoint="0.758,0.777">
                                        <GradientStop Color="#FFF6F6F6 " Offset="0"/>
                                        <GradientStop Color="#FFB1DFFD " Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Stroke" TargetName="ellipse">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.854,0.854" StartPoint="0.146,0.146">
                                        <GradientStop Color="#FF79C6F9 " Offset="0"/>
                                        <GradientStop Color="#FFCFECFD " Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GridSplitterPreviewStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="#FFCDD1D6" Opacity="0.5"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=System.Windows.Controls.GridSplitter}" TargetType="{x:Type GridSplitter}">
        <Setter Property="Background" Value="#7FCDD1D6"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="PreviewStyle" Value="{StaticResource GridSplitterPreviewStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridSplitter}">
                    <Grid Background="Transparent"
                          Margin="{TemplateBinding Margin}"
                          Panel.ZIndex="200">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush Color="#FFCDD1D6"/>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                                <VisualState x:Name="Pressed"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Background="Transparent"
                                Margin="-3"
                                Panel.ZIndex="200">
                            <Border x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Margin="3"
                                    MinHeight="1"
                                    MinWidth="1"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=System.Windows.Controls.Label}"
           BasedOn="{StaticResource {x:Type Label}}"
           TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="#FF000000 "/>
        <Setter Property="Background" Value="#00FFFFFF "/>
        <Setter Property="Padding" Value="0,3,0,3"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.35"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerBackground}" Color="#FFF0F1F2 "/>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=System.Windows.Controls.Page}"
           BasedOn="{StaticResource {x:Type Page}}"
           TargetType="{x:Type Page}">
        <Setter Property="Background" Value="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerBackground}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Page}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter ClipToBounds="true" Content="{TemplateBinding Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--treeView-->

    <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Path x:Name="UncheckedPath"
                                  Data="F1 M 0,0L 5,10L 5,5L 0,0 Z "
                                  Fill="#FF1B293E"
                                  Height="10"
                                  Stretch="Fill"
                                  Width="5"/>
                            <Path x:Name="CheckedPath"
                                  Data="F1 M 0,5L 5,0L 5,10L 0,5 Z "
                                  Fill="#FF1B293E"
                                  Height="10"
                                  Opacity="0"
                                  Stretch="Fill"
                                  Width="5"/>
                            <ContentPresenter Grid.Row="1"
                                              HorizontalAlignment="Center"
                                              Margin="0,4,0,0"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="True"
                                              VerticalAlignment="Top"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity"
                                    TargetName="CheckedPath"
                                    Value="1"/>
                            <Setter Property="Opacity"
                                    TargetName="UncheckedPath"
                                    Value="0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true"/>
                        <Trigger Property="IsPressed" Value="true"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Path x:Name="UncheckedPath"
                                  Data="F1 M 0,5L 5,0L 5,10L 0,5 Z "
                                  Fill="#FF1B293E"
                                  Height="10"
                                  Stretch="Fill"
                                  Width="5"/>
                            <Path x:Name="CheckedPath"
                                  Data="F1 M 0,0L 5,10L 5,5L 0,0 Z "
                                  Fill="#FF1B293E"
                                  Height="10"
                                  Opacity="0"
                                  Stretch="Fill"
                                  Width="5"/>
                            <ContentPresenter Grid.Row="1"
                                              HorizontalAlignment="Center"
                                              Margin="0,4,0,0"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="True"
                                              VerticalAlignment="Top"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity"
                                    TargetName="CheckedPath"
                                    Value="1"/>
                            <Setter Property="Opacity"
                                    TargetName="UncheckedPath"
                                    Value="0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true"/>
                        <Trigger Property="IsPressed" Value="true"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Path x:Name="UncheckedPath"
                                  Data="F1 M 0,5L 5,0L 10,5.00012L 0,5 Z "
                                  Fill="#FF1B293E"
                                  Height="5"
                                  Stretch="Fill"
                                  Width="10"/>
                            <Path x:Name="CheckedPath"
                                  Data="F1 M 0,0L 10,0L 5,5.00012L 0,0 Z "
                                  Fill="#FF1B293E"
                                  Height="5"
                                  Opacity="0"
                                  Stretch="Fill"
                                  Width="10"/>
                            <ContentPresenter Grid.Row="1"
                                              HorizontalAlignment="Center"
                                              Margin="0,4,0,0"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="True"
                                              VerticalAlignment="Top"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity"
                                    TargetName="CheckedPath"
                                    Value="1"/>
                            <Setter Property="Opacity"
                                    TargetName="UncheckedPath"
                                    Value="0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true"/>
                        <Trigger Property="IsPressed" Value="true"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Path x:Name="UncheckedPath"
                                  Data="F1 M 0,0L 10,0L 5,5.00012L 0,0 Z "
                                  Fill="#FF1B293E"
                                  Height="5"
                                  Stretch="Fill"
                                  Width="10"/>
                            <Path x:Name="CheckedPath"
                                  Data="F1 M 0,5L 5,0L 10,5.00012L 0,5 Z "
                                  Fill="#FF1B293E"
                                  Height="5"
                                  Opacity="0"
                                  Stretch="Fill"
                                  Width="10"/>
                            <ContentPresenter Grid.Row="1"
                                              HorizontalAlignment="Center"
                                              Margin="0,4,0,0"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="True"
                                              VerticalAlignment="Top"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity"
                                    TargetName="CheckedPath"
                                    Value="1"/>
                            <Setter Property="Opacity"
                                    TargetName="UncheckedPath"
                                    Value="0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true"/>
                        <Trigger Property="IsPressed" Value="true"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderHeaderFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border x:Name="Root"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3"
                            SnapsToDevicePixels="true">
                        <DockPanel>
                            <ToggleButton x:Name="HeaderSite"
                                          Content="{TemplateBinding Header}"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                          DockPanel.Dock="Top"
                                          FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                                          FontFamily="{TemplateBinding FontFamily}"
                                          FontSize="{TemplateBinding FontSize}"
                                          FontStretch="{TemplateBinding FontStretch}"
                                          FontStyle="{TemplateBinding FontStyle}"
                                          FontWeight="{TemplateBinding FontWeight}"
                                          Foreground="{TemplateBinding Foreground}"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Margin="1"
                                          MinHeight="0"
                                          MinWidth="0"
                                          Padding="{TemplateBinding Padding}"
                                          Style="{StaticResource ExpanderDownHeaderStyle}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <ContentPresenter x:Name="ExpandSite"
                                              DockPanel.Dock="Bottom"
                                              Focusable="false"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Visibility="Collapsed"/>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter Property="Visibility"
                                    TargetName="ExpandSite"
                                    Value="Visible"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter Property="DockPanel.Dock"
                                    TargetName="ExpandSite"
                                    Value="Right"/>
                            <Setter Property="DockPanel.Dock"
                                    TargetName="HeaderSite"
                                    Value="Left"/>
                            <Setter Property="Style"
                                    TargetName="HeaderSite"
                                    Value="{StaticResource ExpanderRightHeaderStyle}"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter Property="DockPanel.Dock"
                                    TargetName="ExpandSite"
                                    Value="Top"/>
                            <Setter Property="DockPanel.Dock"
                                    TargetName="HeaderSite"
                                    Value="Bottom"/>
                            <Setter Property="Style"
                                    TargetName="HeaderSite"
                                    Value="{StaticResource ExpanderUpHeaderStyle}"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter Property="DockPanel.Dock"
                                    TargetName="ExpandSite"
                                    Value="Left"/>
                            <Setter Property="DockPanel.Dock"
                                    TargetName="HeaderSite"
                                    Value="Right"/>
                            <Setter Property="Style"
                                    TargetName="HeaderSite"
                                    Value="{StaticResource ExpanderLeftHeaderStyle}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity"
                                    TargetName="Root"
                                    Value="0.35"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--END WPF-->

</ResourceDictionary>
