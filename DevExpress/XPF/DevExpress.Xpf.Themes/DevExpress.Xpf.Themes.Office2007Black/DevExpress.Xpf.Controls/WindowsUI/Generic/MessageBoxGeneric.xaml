<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxwui="http://schemas.devexpress.com/winfx/2008/xaml/windowsui" xmlns:dxwuit="http://schemas.devexpress.com/winfx/2008/xaml/windowsui/themekeys" xmlns:dxwuii="http://schemas.devexpress.com/winfx/2008/xaml/windowsui/internal" xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
  <dxmvvm:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
  <Style x:Key="textBoxStyle" TargetType="TextBox">
    <Setter Property="FontWeight" Value="Light" />
    <Setter Property="MaxWidth" Value="{x:Static SystemParameters.MaximizedPrimaryScreenWidth}" />
    <Setter Property="IsReadOnly" Value="True" />
    <Setter Property="IsReadOnlyCaretVisible" Value="False" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="IsHitTestVisible" Value="False" />
  </Style>
  <Style x:Key="titleStyle" TargetType="TextBox" BasedOn="{StaticResource textBoxStyle}">
    <Setter Property="FontSize" Value="24" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="Foreground" Value="{DynamicResource {dxwuit:MessageBoxElementsThemeKey ResourceKey=TitleForeground}}" />
  </Style>
  <ControlTemplate TargetType="{x:Type dxwui:WinUIMessageBox}" x:Key="DXMessageBoxTemplate">
    <Border Background="{DynamicResource {dxwuit:MessageBoxElementsThemeKey ResourceKey=Background}}">
      <Grid MinWidth="350" VerticalAlignment="Center" Background="{DynamicResource {dxwuit:MessageBoxElementsThemeKey ResourceKey=WindowBackground}}">
        <Grid Margin="0,8" HorizontalAlignment="Center">
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
          </Grid.RowDefinitions>
          <TextBox Style="{StaticResource titleStyle}" Text="{TemplateBinding Caption}" />
          <Grid Grid.Row="1" HorizontalAlignment="Left" Margin="0,18,0,0">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <dx:DXImage x:Name="PART_MessageBoxImage" Width="48" Height="48" VerticalAlignment="Top" SnapsToDevicePixels="True" Stretch="UniformToFill" Margin="-6,-1,4,-4" Source="{TemplateBinding ImageSource}" />
            <TextBox Style="{StaticResource textBoxStyle}" FontSize="18" TextWrapping="Wrap" VerticalAlignment="Center" Grid.Column="1" Text="{TemplateBinding Text}" Foreground="{DynamicResource {dxwuit:MessageBoxElementsThemeKey ResourceKey=Foreground}}" />
          </Grid>
          <Grid Grid.Row="2" HorizontalAlignment="Right" Margin="0,18,0,0">
            <Grid x:Name="okGrid" Visibility="Collapsed">
              <Button x:Name="PART_OkButton" MinWidth="65" Margin="6,0,0,0" Content="{dx:DXMessageBoxStringId StringId=Ok}" />
            </Grid>
            <Grid x:Name="okCancelGrid" Visibility="Collapsed">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Button x:Name="PART_OkButton1" MinWidth="65" Margin="6,0,0,0" Content="{dx:DXMessageBoxStringId StringId=Ok}" />
              <Button Grid.Column="1" x:Name="PART_CancelButton" MinWidth="65" Margin="6,0,0,0" Content="{dx:DXMessageBoxStringId StringId=Cancel}" />
            </Grid>
            <Grid x:Name="yesNoGrid" Visibility="Collapsed">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Button x:Name="PART_YesButton" MinWidth="65" Margin="6,0,0,0" Content="{dx:DXMessageBoxStringId StringId=Yes}" />
              <Button Grid.Column="1" x:Name="PART_NoButton" MinWidth="65" Margin="6,0,0,0" Content="{dx:DXMessageBoxStringId StringId=No}" />
            </Grid>
            <Grid x:Name="yesNoCancelGrid" Visibility="Collapsed">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Button x:Name="PART_YesButton1" MinWidth="65" Margin="6,0,0,0" Content="{dx:DXMessageBoxStringId StringId=Yes}" />
              <Button Grid.Column="1" x:Name="PART_NoButton1" MinWidth="65" Margin="6,0,0,0" Content="{dx:DXMessageBoxStringId StringId=No}" />
              <Button Grid.Column="2" x:Name="PART_CancelButton1" MinWidth="65" Margin="6,0,0,0" Content="{dx:DXMessageBoxStringId StringId=Cancel}" />
            </Grid>
          </Grid>
        </Grid>
      </Grid>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="group1">
          <VisualState x:Name="OK">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="okGrid" Storyboard.TargetProperty="Visibility" dxcn:ValueSetter.Visibility="Visible" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="OKCancel">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="okCancelGrid" Storyboard.TargetProperty="Visibility" dxcn:ValueSetter.Visibility="Visible" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="YesNo">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="yesNoGrid" Storyboard.TargetProperty="Visibility" dxcn:ValueSetter.Visibility="Visible" />
            </Storyboard>
          </VisualState>
          <VisualState x:Name="YesNoCancel">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="yesNoCancelGrid" Storyboard.TargetProperty="Visibility" dxcn:ValueSetter.Visibility="Visible" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </Border>
  </ControlTemplate>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.WindowsUI.WinUIMessageBox}" TargetType="{x:Type dxwui:WinUIMessageBox}">
    <Setter Property="Template" Value="{StaticResource DXMessageBoxTemplate}" />
    <Setter Property="FocusManager.IsFocusScope" Value="True" />
  </Style>
  <ControlTemplate x:Key="WinUIDialogWindowTemplate" TargetType="{x:Type dx:DXDialogWindow}">
    <Grid x:Name="Root_Grid">
      <Grid.Resources>
        <Label x:Key="DefaultDXDialogContent" />
        <dxwuii:WindowStorage x:Key="windowStorage" Window="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
      </Grid.Resources>
      <AdornerDecorator x:Name="PART_WindowAdornerDecorator" ClipToBounds="True">
        <Border Background="{DynamicResource {dxwuit:MessageBoxElementsThemeKey ResourceKey=Background}}">
          <ContentPresenter x:Name="PART_RootContentPresenter" ContentTemplate="{Binding Window.ActualWindowTemplate, Source={StaticResource windowStorage}}" DataContext="{Binding Window.DataContext, Source={StaticResource windowStorage}}">
            <ContentPresenter.Content>
              <Grid>
                <Grid.Resources>
                  <dxmvvm:BooleanToObjectConverter x:Key="DialogFooterMarginConverter">
                    <dxmvvm:BooleanToObjectConverter.TrueValue>
                      <Thickness>6,12,12,12</Thickness>
                    </dxmvvm:BooleanToObjectConverter.TrueValue>
                    <dxmvvm:BooleanToObjectConverter.FalseValue>
                      <Thickness>0</Thickness>
                    </dxmvvm:BooleanToObjectConverter.FalseValue>
                  </dxmvvm:BooleanToObjectConverter>
                </Grid.Resources>
                <Border MinWidth="350" VerticalAlignment="Center" Background="{Binding Window.Background, Source={StaticResource windowStorage}}" BorderBrush="{Binding Window.BorderBrush, Source={StaticResource windowStorage}}" BorderThickness="{Binding Window.BorderThickness, Source={StaticResource windowStorage}}">
                  <Grid Style="{Binding Window.ContentStyle, Source={StaticResource windowStorage}}">
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <ContentControl x:Name="PART_Title" Focusable="False" Style="{Binding Window.TitleStyle, Source={StaticResource windowStorage}}" Content="{Binding Window.Title, Source={StaticResource windowStorage}}" Visibility="{Binding Window.ShowTitle, Source={StaticResource windowStorage}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    <dx:DXWindowBackgroundPanel x:Name="PART_ContainerContent" Grid.Row="1" HorizontalAlignment="{Binding Window.HorizontalContentAlignment, Source={StaticResource windowStorage}}" VerticalAlignment="{Binding Window.VerticalContentAlignment, Source={StaticResource windowStorage}}" Margin="0,18,0,0" MaxWidth="{x:Static SystemParameters.MaximizedPrimaryScreenWidth}" Background="{x:Null}">
                      <dx:DXWindowBackgroundPanel.ContentTemplate>
                        <Binding Path="Window.ContentTemplate" Source="{StaticResource windowStorage}" />
                      </dx:DXWindowBackgroundPanel.ContentTemplate>
                      <dx:DXWindowBackgroundPanel.Content>
                        <PriorityBinding>
                          <Binding Path="Window.Content" Source="{StaticResource windowStorage}" />
                          <Binding Source="{StaticResource DefaultDXDialogContent}" />
                        </PriorityBinding>
                      </dx:DXWindowBackgroundPanel.Content>
                    </dx:DXWindowBackgroundPanel>
                    <ItemsControl x:Name="Footer" Grid.Row="2" Focusable="False" ItemsSource="{Binding Window.CommandButtons, Source={StaticResource windowStorage}}" ItemsPanel="{Binding Window.CommandButtonsPanel, Source={StaticResource windowStorage}}" />
                    <ContentPresenter Grid.Row="2" Content="{TemplateBinding ActualFooter}" Margin="{Binding HasFooterButtons, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource DialogFooterMarginConverter}}" />
                  </Grid>
                </Border>
              </Grid>
            </ContentPresenter.Content>
          </ContentPresenter>
        </Border>
      </AdornerDecorator>
    </Grid>
  </ControlTemplate>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.WindowsUI.WinUIDialogWindow}" TargetType="{x:Type dxwui:WinUIDialogWindow}">
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Background" Value="{DynamicResource {dxwuit:MessageBoxElementsThemeKey ResourceKey=WindowBackground}}" />
    <Setter Property="Template" Value="{StaticResource WinUIDialogWindowTemplate}" />
    <Setter Property="Foreground" Value="{DynamicResource {dxwuit:MessageBoxElementsThemeKey ResourceKey=Foreground}}" />
    <Setter Property="CommandButtonStyle">
      <Setter.Value>
        <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=System.Windows.Controls.Button}" TargetType="Button">
          <Setter Property="MinWidth" Value="65" />
          <Setter Property="MinHeight" Value="22" />
          <Setter Property="Margin" Value="6,0,0,0" />
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="CommandButtonsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <StackPanel Margin="0,18,0,0" Focusable="False" HorizontalAlignment="Right" Orientation="Horizontal" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="TitleStyle">
      <Setter.Value>
        <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=ContentControl}" TargetType="ContentControl">
          <Setter Property="HorizontalContentAlignment" Value="Stretch" />
          <Setter Property="VerticalContentAlignment" Value="Stretch" />
          <Setter Property="IsTabStop" Value="False" />
          <Setter Property="Focusable" Value="False" />
          <Setter Property="ContentTemplate">
            <Setter.Value>
              <DataTemplate>
                <TextBox Style="{StaticResource titleStyle}" Text="{Binding Mode=OneWay}" IsTabStop="False" Focusable="False" />
              </DataTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="ContentStyle">
      <Setter.Value>
        <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=FrameworkElement}" TargetType="FrameworkElement">
          <Setter Property="Margin" Value="0,8" />
          <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>
      </Setter.Value>
    </Setter>
    <!--SPECIFICTHEME TouchlineDark 
        <Setter Property="TextElement.FontSize" Value="{DynamicResource {dxdst:FloatingContainerThemeKey ResourceKey=GlobalFontSize}}" />
        <Setter Property="TextElement.FontFamily" Value="{DynamicResource {dxdst:FloatingContainerThemeKey ResourceKey=GlobalFontFamily}}" />
        <Setter Property="Control.Foreground" Value="{DynamicResource {dxdst:ThemeColorsThemeKey ResourceKey=WhiteForegroundColor}}" /> SPECIFICTHEME-->
    <Style.Triggers>
      <Trigger Property="HasContent" Value="False">
        <Setter Property="Template" Value="{StaticResource WinUIDialogWindowTemplate}" />
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>