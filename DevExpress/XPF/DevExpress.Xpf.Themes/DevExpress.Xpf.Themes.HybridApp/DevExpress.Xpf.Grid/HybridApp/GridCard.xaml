<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
                    xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ExpandButtonTemplate}" TargetType="{x:Type dx:ToggleStateButton}">
        <Grid Background="#00000000"
              Height="22"
              SnapsToDevicePixels="True"
              Width="22">
            <Path x:Name="GlyphExpanded"
                  Data="F1 M 11,0C 17.0751,0 22,4.92487 22,11C 22,17.0751 17.0751,22 11,22C 4.92487,22 -1.27157e-006,17.0751 -1.27157e-006,11C -1.27157e-006,4.92487 4.92487,0 11,0 Z M 11,2C 6.02943,2 2,6.02944 2,11C 2,15.9706 6.02943,20 11,20C 15.9706,20 20,15.9706 20,11C 20,6.02944 15.9706,2 11,2 Z M 11,8L 16,13L 6,13L 11,8 Z "
                  Fill="#FFA0A0A0"
                  Height="22"
                  Stretch="Fill"
                  Width="22"/>
            <Path x:Name="GlyphCollapsed"
                  Data="F1 M 11,0C 17.0751,0 22,4.92487 22,11C 22,17.0751 17.0751,22 11,22C 4.92487,22 -1.27157e-006,17.0751 -1.27157e-006,11C -1.27157e-006,4.92487 4.92487,0 11,0 Z M 11,2C 6.02943,2 2,6.02944 2,11C 2,15.9706 6.02943,20 11,20C 15.9706,20 20,15.9706 20,11C 20,6.02944 15.9706,2 11,2 Z M 11,15L 6,10L 16,10L 11,15 Z "
                  Fill="#FFA0A0A0"
                  Height="22"
                  Stretch="Fill"
                  Visibility="Hidden"
                  Width="22"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill"
                        TargetName="GlyphCollapsed"
                        Value="#FFA0A0A0"/>
                <Setter Property="Fill"
                        TargetName="GlyphExpanded"
                        Value="#FFA0A0A0"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Fill"
                        TargetName="GlyphCollapsed"
                        Value="#FFA0A0A0"/>
                <Setter Property="Fill"
                        TargetName="GlyphExpanded"
                        Value="#FFA0A0A0"/>
            </Trigger>
            <DataTrigger Binding="{Binding Path=SelectionState}" Value="Selected">
                <Setter Property="Fill"
                        TargetName="GlyphCollapsed"
                        Value="#FFA0A0A0"/>
                <Setter Property="Fill"
                        TargetName="GlyphExpanded"
                        Value="#FFA0A0A0"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=SelectionState}" Value="Focused">
                <Setter Property="Fill"
                        TargetName="GlyphCollapsed"
                        Value="#FFA0A0A0"/>
                <Setter Property="Fill"
                        TargetName="GlyphExpanded"
                        Value="#FFA0A0A0"/>
            </DataTrigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Visibility"
                        TargetName="GlyphCollapsed"
                        Value="Visible"/>
                <Setter Property="Visibility"
                        TargetName="GlyphExpanded"
                        Value="Hidden"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{dxgt:CardTemplatesThemeKey ResourceKey=CardStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="dxg:GridViewBase.IsFocusedRow" Value="False"/>
                </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Property="dxg:GridViewBase.IsFocusedRow" Value="True"/>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ContainerTemplate}" TargetType="{x:Type ContentControl}">
        <Grid x:Name="Root">
            <Border x:Name="Border" Grid.RowSpan="1">
                <ContentPresenter/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="dxg:GridViewBase.IsFocusedRow" Value="False"/>
                </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Property="dxg:GridViewBase.IsFocusedRow" Value="True">
                <Setter Property="Background"
                        TargetName="Border"
                        Value="#FFFFFFFF"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{dxgt:GridCardThemeKey ResourceKey=HeaderPresenterStyle}" TargetType="{x:Type dxg:GridCardHeaderContentPresenter}">
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="{dxgt:GridCardThemeKey ResourceKey=ContentExpandButtonStyle}" TargetType="{x:Type dxg:GridCardExpandButton}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="dx:TouchInfo.Margin" Value="{dx:TouchMarginInfo Value='0,0,4,0'}"/>
    </Style>

    <Style x:Key="{dxgt:GridCardThemeKey ResourceKey=ContentPresenterStyle}" TargetType="{x:Type dxg:GridCardContentPresenter}">
        <Setter Property="Margin" Value="12"/>
    </Style>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=HeaderContentTemplate}" TargetType="{x:Type ContentControl}">
        <ContentPresenter Margin="12,8,12,9"/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ExpanderContentTemplate}" TargetType="{x:Type ContentControl}">
        <ContentPresenter Margin="0,0,2,1"/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=DataContentTemplate}" TargetType="{x:Type ContentControl}">
        <Grid>
            <Border x:Name="Focus"
                    Background="#FF97A8D2"
                    Margin="-3,0,-3,-3"
                    Opacity="0"/>
            <Border x:Name="Root"
                    Background="#FFFFFFFF"
                    BorderBrush="#FFC3C3C3"
                    BorderThickness="1,0,1,1">
                <ContentPresenter/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="dxg:GridViewBase.IsFocusedRow" Value="False"/>
                </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Property="dxg:GridViewBase.IsFocusedRow" Value="True">
                <Setter Property="Background"
                        TargetName="Root"
                        Value="#FFFFFFFF"/>
                <Setter Property="BorderBrush"
                        TargetName="Root"
                        Value="#FF7582A1"/>
                <Setter Property="Opacity"
                        TargetName="Focus"
                        Value="1"/>
            </Trigger>
            <DataTrigger Binding="{Binding Path=(dxg:RowData.RowData).SelectionState, RelativeSource={RelativeSource TemplatedParent}}" Value="Focused">
                <Setter Property="BorderBrush"
                        TargetName="Root"
                        Value="#FF7582A1"/>
                <Setter Property="Opacity"
                        TargetName="Focus"
                        Value="1"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:RowData.RowData).SelectionState, RelativeSource={RelativeSource TemplatedParent}}" Value="Selected">
                <Setter Property="BorderBrush"
                        TargetName="Root"
                        Value="#FF7582A1"/>
                <Setter Property="Opacity"
                        TargetName="Focus"
                        Value="0.5"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsExpanded}" Value="False"/>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=HeaderPanelTemplate}" TargetType="{x:Type ContentControl}">
        <Grid>
            <Border x:Name="Focus"
                    Background="#FF97A8D2"
                    Margin="-3,-3,-3,0"
                    Opacity="0"/>
            <Border x:Name="Root"
                    Background="#FFF6F6F6"
                    BorderBrush="#FFC3C3C3"
                    BorderThickness="1,1,1,0">
                <ContentPresenter/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="dxg:GridViewBase.IsFocusedRow" Value="True">
                <Setter Property="Opacity"
                        TargetName="Focus"
                        Value="1"/>
                <Setter Property="BorderBrush"
                        TargetName="Root"
                        Value="#FF7582A1"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="dxg:GridViewBase.IsFocusedRow" Value="False"/>
                </MultiTrigger.Conditions>
            </MultiTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:RowData.RowData).SelectionState, RelativeSource={RelativeSource TemplatedParent}}" Value="Focused">
                <Setter Property="BorderBrush"
                        TargetName="Root"
                        Value="#FF7582A1"/>
                <Setter Property="Opacity"
                        TargetName="Focus"
                        Value="1"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:RowData.RowData).SelectionState, RelativeSource={RelativeSource TemplatedParent}}" Value="Selected">
                <Setter Property="BorderBrush"
                        TargetName="Root"
                        Value="#FF7582A1"/>
                <Setter Property="Opacity"
                        TargetName="Focus"
                        Value="0.5"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsExpanded}" Value="False">
                <Setter Property="BorderThickness"
                        TargetName="Root"
                        Value="1"/>
                <Setter Property="Margin"
                        TargetName="Focus"
                        Value="-3"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ControlTemplate}">
        <ContentControl x:Name="card"
                        Style="{Binding Path=(dxg:GridControl.ActiveView).CardStyle, RelativeSource={RelativeSource TemplatedParent}}"
                        Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ContainerTemplate}}">
            <dxg:GridCardPanel x:Name="gridCardPanel" IsExpanded="{Binding Path=IsExpanded}">
                <dxg:GridCardPanel.Header>
                    <dxg:GridCardHeaderControl x:Name="cardHeader" Foreground="#FF404040">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ContentControl Grid.Column="0" Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=HeaderContentTemplate}}">
                                <dxg:GridCardHeaderContentPresenter Style="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=HeaderPresenterStyle}}"/>
                            </ContentControl>
                            <ContentControl Grid.Column="1"
                                            Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ExpanderContentTemplate}}"
                                            Visibility="{Binding Path=View.ShowCardExpandButton, Converter={StaticResource BoolToVisibilityConverter}}">
                                <dxg:GridCardExpandButton Style="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ContentExpandButtonStyle}}"/>
                            </ContentControl>
                        </Grid>
                    </dxg:GridCardHeaderControl>
                </dxg:GridCardPanel.Header>
                <dxg:GridCardPanel.Body>
                    <ContentControl Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=DataContentTemplate}}">
                        <dxg:GridCardContentPresenter x:Name="presenter" Style="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ContentPresenterStyle}}"/>
                    </ContentControl>
                </dxg:GridCardPanel.Body>
            </dxg:GridCardPanel>
        </ContentControl>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=View.CollapsedCardOrientation}" Value="Vertical">
                <Setter Property="RotateOnCollapse"
                        TargetName="gridCardPanel"
                        Value="True"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=SelectionState}" Value="Selected">
                <Setter Property="Foreground"
                        TargetName="cardHeader"
                        Value="#FF404040"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=SelectionState}" Value="Focused">
                <Setter Property="Foreground"
                        TargetName="cardHeader"
                        Value="#FF404040"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=LoadingCardTemplate}" TargetType="dxg:LoadingCardControl">
        <Grid Margin="0,8,0,8">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock HorizontalAlignment="Center"
                       Text="Fetching..."
                       VerticalAlignment="Center"
                       Visibility="{Binding ShowLoadingIndicator, Converter={StaticResource BoolToVisibilityConverter}}"/>
            <dxg:LoadingRowButton Click="{DXEvent 'LoadMoreRows()'}"
                                  Grid.Column="1"
                                  Margin="8,0,8,0"
                                  VerticalAlignment="Center"
                                  Visibility="{Binding AllowLoadMore, Converter={StaticResource BoolToVisibilityConverter}}">
                <Path Data="F1 M 190,12.9999L 193.066,12.9999L 193.066,10.0001L 195,10.0001L 195,12.9999L 198,12.9999L 198,14.9338L 195,14.9338L 195,18.0001L 193.066,18.0001L 193.066,14.9338L 190,14.9338L 190,12.9999 Z"
                      Fill="{TemplateBinding Foreground}"
                      Height="8"
                      HorizontalAlignment="Center"
                      Stretch="Fill"
                      VerticalAlignment="Center"
                      Width="8"/>
            </dxg:LoadingRowButton>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=LoadingCardErrorTemplate}" TargetType="dxg:LoadingCardControl">
        <Grid Margin="0,8,0,8">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock HorizontalAlignment="Center"
                       Text="{Binding ErrorText}"
                       VerticalAlignment="Center"/>
            <dxg:LoadingRowButton Command="{Binding LoadRowsCommand}"
                                  Grid.Column="1"
                                  Margin="8,0,8,0"
                                  VerticalAlignment="Center"
                                  Visibility="{Binding IsLoadingButtonVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                <Path Data="M10,0 L10,4.9999999 5,4.9999999 7.2841098,2.7158901 7.277688,2.7113296 C6.6313429,2.2628393 5.8462857,2.0000007 5.0000037,2.0000007 2.791002,2.0000007 1.0000007,3.7909006 1.0000007,6.0000009 L0,6.0000009 C0,3.2385008 2.2390018,1.0000008 5.0000037,1.0000009 6.0887547,1.0000008 7.0969663,1.3482332 7.9184361,1.9394608 L8.0002208,1.9997793 z"
                      Fill="{TemplateBinding Foreground}"
                      Height="8"
                      HorizontalAlignment="Center"
                      Stretch="Fill"
                      VerticalAlignment="Center"
                      Width="12"/>
            </dxg:LoadingRowButton>
        </Grid>
    </ControlTemplate>

</ResourceDictionary>