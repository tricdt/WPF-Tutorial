<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxeh="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
                    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
                    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
                    xmlns:dxgcore="http://schemas.devexpress.com/winfx/2008/xaml/grid"
                    xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ControlTemplate x:Key="{dxgt:GridControlThemeKey ResourceKey=ErrorPanelTemplate}" TargetType="dxg:ErrorPanel">
        <Grid Margin="5">
            <Border Background="#FFFFFFFF"
                    BorderBrush="#FFD9D9D9"
                    BorderThickness="1"
                    Padding="8,3,8,4">
                <Border>
                    <Grid Margin="5,5,5,18" Width="247">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock FontSize="18"
                                   Foreground="#FF191919"
                                   Grid.Column="1"
                                   Grid.Row="0"
                                   Padding="9,3,0,0"
                                   Text="Error"
                                   TextAlignment="Left"/>
                        <Image x:Name="icon"
                               Grid.RowSpan="2"
                               HorizontalAlignment="Left"
                               Stretch="None"
                               VerticalAlignment="Top">
                            <Image.Source>
                                <Binding Converter="{dx:EmbeddedResourceImageConverter}" Source="DevExpress.Xpf.Core.Core.Images.ErrorIcon.png"/>
                            </Image.Source>
                        </Image>
                        <TextBlock Foreground="#FF191919"
                                   Grid.Column="1"
                                   Grid.Row="1"
                                   Padding="9,3,0,0"
                                   Text="{Binding}"
                                   TextAlignment="Left"
                                   TextWrapping="Wrap"/>
                    </Grid>
                </Border>
            </Border>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridControlThemeKey ResourceKey=BorderTemplate}" TargetType="{x:Type ContentControl}">
        <Border Background="#FFBFBFBF">
            <Border.Padding>
                <Binding Path="(dxg:GridBorderHelper.ShowBorder)" RelativeSource="{RelativeSource TemplatedParent}">
                    <Binding.Converter>
                        <dx:BoolToObjectConverter FalseValue="0" TrueValue="1"/>
                    </Binding.Converter>
                </Binding>
            </Border.Padding>
            <Border Background="#FFFFFFFF">
                <ContentPresenter/>
            </Border>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridControlThemeKey ResourceKey=Template}" TargetType="{x:Type dxg:DataControlBase}">
        <!--BEGIN WPF-->
        <AdornerDecorator>
            <!--END WPF-->
            <Grid>
                <dx:DXArranger>
                    <dxgcore:DXGridThemesLoader x:Name="PART_ThemesLoader"
                                                dxgcore:GridBorderHelper.ShowBorder="{Binding Path=ShowBorder, RelativeSource={RelativeSource TemplatedParent}}"
                                                Template="{DynamicResource {dxgt:GridControlThemeKey ResourceKey=BorderTemplate}}"/>
                </dx:DXArranger>
                <dxgcore:ErrorPanel x:Name="PART_ErrorPanel" Visibility="Collapsed"/>
                <dx:WaitIndicator x:Name="PART_LoadingPanel"
                                  DeferedVisibility="{TemplateBinding ShowLoadingPanel}"
                                  Style="{Binding Path=View.WaitIndicatorStyle, RelativeSource={RelativeSource TemplatedParent}}"/>
            </Grid>
            <!--BEGIN WPF-->
        </AdornerDecorator>
        <!--END WPF-->
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridControlThemeKey ResourceKey=FocusedGroupRowBorderTemplate}">
        <Rectangle SnapsToDevicePixels="True"
                   Stroke="#FF191919"
                   StrokeDashArray="1 2"
                   StrokeThickness="1"/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridControlThemeKey ResourceKey=VerticalFocusedGroupRowBorderTemplate}">
        <Rectangle SnapsToDevicePixels="True"
                   Stroke="#FF191919"
                   StrokeDashArray="1 2"
                   StrokeThickness="1"/>
    </ControlTemplate>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.DetailHeaderControl}" TargetType="{x:Type dxg:DetailHeaderControl}">
        <Setter Property="Foreground" Value="#FF191919"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Template" Value="{DynamicResource {dxgt:GridControlThemeKey ResourceKey=DetailHeaderControlTemplate}}"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.GroupPanelCaptionControl}" TargetType="{x:Type dxg:GroupPanelCaptionControl}">
        <Setter Property="Foreground" Value="#FF191919"/>
        <Setter Property="Margin" Value="0,0,4,0"/>
        <Setter Property="Template" Value="{DynamicResource {dxgt:GridControlThemeKey ResourceKey=GroupPanelCaptionTemplate}}"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Grid.DetailDescriptorContentBorder}" TargetType="{x:Type dxg:DetailDescriptorContentBorder}">
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="ShowBottomLine" Value="{Binding ShowBottomLine, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxg:DetailDescriptorContentBorder}">
                    <Border BorderBrush="#FFD9D9D9">
                        <Border.BorderThickness>
                            <Binding Path="ShowBottomLine" RelativeSource="{RelativeSource TemplatedParent}">
                                <Binding.Converter>
                                    <dx:BoolToObjectConverter FalseValue="0" TrueValue="0,0,0,1"/>
                                </Binding.Converter>
                            </Binding>
                        </Border.BorderThickness>
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="{dxgt:GridControlThemeKey ResourceKey=FocusedRowBorderTemplate}">
        <Rectangle SnapsToDevicePixels="True"
                   Stroke="#FF191919"
                   StrokeDashArray="1 2"
                   StrokeThickness="1"/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridControlThemeKey ResourceKey=FocusedCellBorderTemplate}">
        <Rectangle SnapsToDevicePixels="True"
                   Stroke="#FF191919"
                   StrokeDashArray="1 2"
                   StrokeThickness="1"/>
    </ControlTemplate>

    <!--BEGIN WPF-->

    <ControlTemplate x:Key="{dxgt:GridControlThemeKey ResourceKey=FocusedCellBorderCardViewTemplate}">
        <Rectangle SnapsToDevicePixels="True"
                   Stroke="#FF191919"
                   StrokeDashArray="1 2"
                   StrokeThickness="1"/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridControlThemeKey ResourceKey=FocusedCardBorderTemplate}">
        <Rectangle SnapsToDevicePixels="True"
                   Stroke="#FF191919"
                   StrokeDashArray="1 2"
                   StrokeThickness="1"/>
    </ControlTemplate>

    <dx:BooleanToVisibilityConverter x:Key="boolToVisibilityConverter"/>

    <dx:EditorStringIdConverter x:Key="EditorStringIdConverter"/>

    <dx:BoolInverseConverter x:Key="boolInverseConverter"/>

    <dx:BoolToVisibilityInverseConverter x:Key="boolToVisibilityInverseConverter"/>

    <ControlTemplate x:Key="GridSearchControlStandaloneTemplate">
        <ContentControl dx:FocusHelper2.Focusable="False"
                        HorizontalContentAlignment="Stretch"
                        VerticalContentAlignment="Stretch">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <dxe:ComboBoxEdit x:Name="editor"
                                  AllowDefaultButton ="False"
                                  dxeh:MVVMFocusBehavior.IsFocused="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                  EditValue="{Binding Path=SearchText, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                  EditValuePostDelay="{Binding Path=SearchTextPostDelay, RelativeSource={RelativeSource TemplatedParent}}"
                                  EditValuePostMode="{Binding Path=SearchControlPropertyProvider.ActualPostMode, RelativeSource={RelativeSource TemplatedParent}}"
                                  ImmediatePopup="{Binding Path= SearchControlPropertyProvider.ActualImmediateMRUPopup, RelativeSource={RelativeSource TemplatedParent}}"
                                  ItemsSource="{Binding Path=MRU, RelativeSource={RelativeSource TemplatedParent}}"
                                  Margin="0"
                                  MinHeight="22"
                                  NullText="{Binding Path=IsTabStop, RelativeSource={RelativeSource Self}, ConverterParameter=LookUpSearch, Converter={StaticResource EditorStringIdConverter}}"
                                  ShowNullText="{Binding Path=SearchControlPropertyProvider.ActualShowFindButton, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource boolInverseConverter}}"
                                  ValidateOnEnterKeyPressed="True">
                    <dxe:ComboBoxEdit.Resources>
                        <Style x:Key="borderStyle" TargetType="{x:Type Border}">
                            <Setter Property="BorderThickness" Value="1,0,0,0"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="Width" Value="26"/>
                            <Setter Property="Height" Value="34"/>
                            <Setter Property="IsHitTestVisible" Value="True"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" Value="#FFC3C3C3"/>
                                    <Setter Property="Background" Value="#FFF6F6F6"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </dxe:ComboBoxEdit.Resources>
                    <dxe:ComboBoxEdit.Buttons>
                        <dxe:ButtonInfo x:Name="buttonClear"
                                        Command="{Binding Path=SetNullValueCommand, ElementName=editor}"
                                        GlyphKind="Custom"
                                        Visibility="{Binding Path=SearchControlPropertyProvider.ActualShowClearButton, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}">
                            <dxe:ButtonInfo.Template>
                                <DataTemplate>
                                    <Button Command="{Binding Command}"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Visibility="{Binding Visibility}">
                                        <Button.Template>
                                            <ControlTemplate>
                                                <Border Style="{StaticResource borderStyle}" Visibility="{Binding Visibility}">
                                                    <Image dxb:ImageColorizer.Color="#FFA6A6A6"
                                                           dxb:ImageColorizer.IsEnabled="True"
                                                           Height="20"
                                                           HorizontalAlignment="Center"
                                                           Margin="-1"
                                                           Source="/DevExpress.Xpf.Themes.HybridApp.v24.1;component/Images/Toolbar/Cancel.png"
                                                           Stretch="Uniform"
                                                           VerticalAlignment="Center"
                                                           Width="20"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Button.Template>
                                    </Button>
                                </DataTemplate>
                            </dxe:ButtonInfo.Template>
                        </dxe:ButtonInfo>
                        <dxe:ButtonInfo Command="{Binding Path=OpenPopupCommand, ElementName=editor}"
                                        GlyphKind="DropDown"
                                        Visibility="{Binding Path=ShowMRUButton, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}"/>
                        <dxe:ButtonInfo ButtonKind="Simple"
                                        Command="{Binding Path=SearchControlPropertyProvider.FindCommand, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                        CommandParameter="{Binding Path=FilterCriteria, RelativeSource={RelativeSource TemplatedParent}}"
                                        GlyphKind="Custom"
                                        Visibility="{Binding Path=SearchControlPropertyProvider.ActualShowClearButton, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityInverseConverter}}">
                            <dxe:ButtonInfo.Template>
                                <DataTemplate>
                                    <Border Style="{StaticResource borderStyle}" Visibility="{Binding Visibility}">
                                        <Image dxb:ImageColorizer.Color="#FFA6A6A6"
                                               dxb:ImageColorizer.IsEnabled="True"
                                               Height="20"
                                               HorizontalAlignment="Center"
                                               Margin="-1"
                                               Source="pack://application:,,,/DevExpress.Images.v24.1;component/GrayScaleImages/Find/Find_32x32.png"
                                               Stretch="Uniform"
                                               VerticalAlignment="Center"
                                               Width="20"/>
                                    </Border>
                                </DataTemplate>
                            </dxe:ButtonInfo.Template>
                        </dxe:ButtonInfo>
                    </dxe:ComboBoxEdit.Buttons>
                </dxe:ComboBoxEdit>
                <Button Command="{Binding Path=SearchControlPropertyProvider.FindCommand, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                        CommandParameter="{Binding Path=FilterCriteria, RelativeSource={RelativeSource TemplatedParent}}"
                        Grid.Column="1"
                        Margin="4,0,0,0"
                        MinWidth="55"
                        Style="{DynamicResource {dxet:SearchControlThemeKey ResourceKey=FindButtonStyle}}"
                        Visibility="{Binding Path=SearchControlPropertyProvider.ActualShowFindButton, Converter={StaticResource boolToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"/>
                <Button Command="{Binding Path=SearchControlPropertyProvider.CloseCommandInternal, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                        Grid.Column="2"
                        Margin="4,0,0,0"
                        MinWidth="55"
                        Style="{DynamicResource {dxet:SearchControlThemeKey ResourceKey=CloseButtonStyle}}"
                        Visibility="{Binding Path=ShowCloseButton, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>
        </ContentControl>
    </ControlTemplate>

    <Style x:Key="{dxet:SearchControlThemeKey ResourceKey=StandaloneStyle}" TargetType="{x:Type dxg:GridSearchControl}">
        <Setter Property="Margin" Value="0,0,22,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Width" Value="230"/>
        <Setter Property="Template" Value="{StaticResource GridSearchControlStandaloneTemplate}"/>
    </Style>

    <!--END WPF-->

</ResourceDictionary>