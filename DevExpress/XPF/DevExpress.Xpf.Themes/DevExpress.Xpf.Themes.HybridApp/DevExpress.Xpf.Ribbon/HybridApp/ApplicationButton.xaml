<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
                    xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon"
                    xmlns:dxrt="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <dxc:NullableToVisibilityConverter x:Key="converter"/>

    <dxc:NullableToVisibilityConverter x:Key="invertedConverter" Invert="True"/>

    <Style x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=Style2007}" TargetType="{x:Type ContentControl}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Margin" Value="4,4,8,8"/>
    </Style>

    <Style x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=Style2007InPopup}" TargetType="{x:Type ContentControl}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
    </Style>

    <Style x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=Style2010}" TargetType="{x:Type ContentControl}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Margin" Value="0,0,1,0"/>
    </Style>

    <Style x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=Style2010InPopup}" TargetType="{x:Type ContentControl}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
    </Style>

    <Style x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=StyleTabletOffice}" TargetType="{x:Type ContentControl}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="3"/>
    </Style>

    <Style x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=StyleTabletOfficeInPopup}" TargetType="{x:Type ContentControl}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="3"/>
    </Style>

    <Style x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=StyleOfficeSlim}" TargetType="{x:Type ContentControl}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
    </Style>

    <Style x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=StyleOfficeSlimInPopup}" TargetType="{x:Type ContentControl}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
    </Style>

    <Style x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=NormalTextStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=SelectedTextStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

    <ControlTemplate x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=BorderTemplate2007}" TargetType="{x:Type ContentControl}">
        <Grid Background="#00000000"
              Height="46"
              Width="46">
            <Border x:Name="DefaultState"
                    Background="#FFABABAB"
                    CornerRadius="256">
                <Border Background="#FFFFFFFF"
                        CornerRadius="256"
                        Margin="4"/>
            </Border>
            <Border x:Name="HoverState"
                    Background="#FF404040"
                    CornerRadius="256"
                    Opacity="0">
                <Border Background="#DFFFFFFF"
                        CornerRadius="256"
                        Margin="4"/>
            </Border>
            <Border x:Name="SelectedState"
                    Background="#FF2F51A5"
                    CornerRadius="256"
                    Opacity="0">
                <Border Background="#FFFFFFFF"
                        CornerRadius="256"
                        Margin="4"/>
            </Border>
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="DefaultState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0"/>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="HoverState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0"/>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="SelectedState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Hover">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="DefaultState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0"/>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="HoverState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="SelectedState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="DefaultState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0"/>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="HoverState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="SelectedState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=BorderTemplate2007InPopup}" TargetType="{x:Type ContentControl}">
        <Grid Background="#00000000"
              Height="46"
              Width="46">
            <Border x:Name="DefaultState"
                    Background="#FFABABAB"
                    CornerRadius="256">
                <Border Background="#FFFFFFFF"
                        CornerRadius="256"
                        Margin="4"/>
            </Border>
            <Border x:Name="HoverState"
                    Background="#FF404040"
                    CornerRadius="256"
                    Opacity="0">
                <Border Background="#DFFFFFFF"
                        CornerRadius="256"
                        Margin="4"/>
            </Border>
            <Border x:Name="SelectedState"
                    Background="#FF2F51A5"
                    CornerRadius="256"
                    Opacity="0">
                <Border Background="#FFFFFFFF"
                        CornerRadius="256"
                        Margin="4"/>
            </Border>
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="DefaultState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0"/>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="HoverState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0"/>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="SelectedState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Hover">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="DefaultState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0"/>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="HoverState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="SelectedState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="DefaultState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0"/>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="HoverState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="SelectedState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=BorderTemplate2010}" TargetType="{x:Type ContentControl}">
        <Grid MinHeight="22" MinWidth="60">
            <Grid x:Name="NormalState" Opacity="0">
                <Border Background="#FF2F51A5"
                        BorderBrush="#FF2F51A5"
                        BorderThickness="1,1,1,0"/>
            </Grid>
            <Grid x:Name="HoverState" Opacity="0">
                <Border Background="#FF2A8DD4"/>
            </Grid>
            <Grid x:Name="CheckedState" Opacity="0">
                <Border Background="#FF2F51A5"/>
            </Grid>
            <ContentPresenter dx:TouchInfo.Margin="{dx:TouchMarginInfo Value='8,0,8,1', TouchValue='0,2,0,2'}"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"/>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="NormalState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="CheckedState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Hover">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="HoverState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="HoverState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=BorderTemplate2010InPopup}" TargetType="{x:Type ContentControl}">
        <Grid MinHeight="22" MinWidth="60">
            <Border Background="#FF2F51A5"
                    BorderBrush="#FF2F51A5"
                    BorderThickness="1"/>
            <ContentPresenter dx:TouchInfo.Margin="{dx:TouchMarginInfo Value='8,0,8,1', TouchValue='0,2,0,2'}"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"/>
        </Grid>
    </ControlTemplate>

    <!--TabletOffice-->

    <ControlTemplate x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=BorderTemplateTablet}" TargetType="{x:Type ContentControl}">
        <Grid x:Name="PART_Normal"
              Height="Auto"
              Margin="4"
              Width="Auto">
            <Ellipse x:Name="ellipse"
                     Fill="#7F12356b"
                     Height="Auto"
                     Stretch="Fill"
                     Width="Auto"/>
            <dx:DXImage x:Name="image"
                        HorizontalAlignment="Center"
                        Source="{Binding Path=(dxr:RibbonControl.Ribbon).ActualApplicationButtonSmallIcon, RelativeSource={RelativeSource Self}}"
                        Stretch="None"
                        VerticalAlignment="Center"
                        Visibility="Collapsed"/>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(dxr:RibbonControl.Ribbon).ActualApplicationButtonSmallIcon, Converter={dxmvvm:ObjectToBooleanConverter}}" Value="True">
                <Setter Property="Visibility"
                        TargetName="ellipse"
                        Value="Collapsed"/>
                <Setter Property="Visibility"
                        TargetName="image"
                        Value="Visible"/>
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Opacity"
                        TargetName="image"
                        Value="1"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=BorderTemplateTabletInPopup}" TargetType="{x:Type ContentControl}">
        <Grid x:Name="PART_Normal"
              Height="Auto"
              Margin="4"
              Width="Auto">
            <Ellipse x:Name="Ellipse"
                     Fill="#7F12356b"
                     Height="Auto"
                     Stretch="Fill"
                     Width="Auto"/>
            <dx:DXImage x:Name="image"
                        HorizontalAlignment="Center"
                        Source="{Binding Path=(dxr:RibbonControl.Ribbon).ActualApplicationButtonSmallIcon, RelativeSource={RelativeSource Self}}"
                        Stretch="None"
                        VerticalAlignment="Center"
                        Visibility="Collapsed"/>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(dxr:RibbonControl.Ribbon).ActualApplicationButtonSmallIcon, Converter={dxmvvm:ObjectToBooleanConverter}}" Value="True">
                <Setter Property="Visibility"
                        TargetName="Ellipse"
                        Value="Collapsed"/>
                <Setter Property="Visibility"
                        TargetName="image"
                        Value="Visible"/>
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Opacity"
                        TargetName="image"
                        Value="1"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--OfficeSlim-->

    <ControlTemplate x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=BorderTemplateOfficeSlim}" TargetType="{x:Type ContentControl}"></ControlTemplate>

    <ControlTemplate x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=BorderTemplateOfficeSlimInPopup}" TargetType="{x:Type ContentControl}"></ControlTemplate>

    <!--BEGIN WPF-->

    <Style x:Key="{dxrt:ApplicationButtonThemeKey ResourceKey=Style2007InAeroWindow}" TargetType="{x:Type ContentControl}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Margin" Value="5,8,5,0"/>
    </Style>

    <!--END WPF-->

</ResourceDictionary>