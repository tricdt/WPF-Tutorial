<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
                    xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon"
                    xmlns:dxrt="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/themekeys"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <BooleanToVisibilityConverter x:Key="boolToVisibilityConverter"/>

    <Thickness x:Key="{dxrt:RibbonThemeKey ResourceKey=ResizeBorderThickness}">4</Thickness>

    <DataTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=RibbonFloatingContainerCaptionTemplate}">
        <Grid>
            <dxb:ContentViewport ClipToBounds="True" KeepPositiveLeftContentPosition="True">
                <TextBlock x:Name="TitleTextBlock"
                           Foreground="#FF191919"
                           HorizontalAlignment="Center"
                           IsHitTestVisible="False"
                           Margin="7,4,7,5"
                           Text="{Binding}"
                           TextWrapping="Wrap"
                           VerticalAlignment="Center"/>
            </dxb:ContentViewport>
        </Grid>
    </DataTemplate>

    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerMinimizeButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="29"/>
        <Setter Property="Height" Value="20"/>
    </Style>

    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerMaximizeButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="29"/>
        <Setter Property="Height" Value="20"/>
    </Style>

    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerRestoreButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="29"/>
        <Setter Property="Height" Value="20"/>
    </Style>

    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerCloseButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="45"/>
        <Setter Property="Height" Value="20"/>
    </Style>

    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=RibbonShowModeSelectorItemStyle}" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="45"/>
        <Setter Property="Height" Value="20"/>
    </Style>

    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=RibbonShowModeSelectorItemTemplate}" TargetType="{x:Type dxr:RibbonShowModeSelectorItem}">
        <Grid Background="#00FFFEFE">
            <Grid x:Name="hover" Visibility="Hidden">
                <Border Background="#FF000000"
                        CornerRadius="2,2,2,2"
                        Margin="2,2,0,0"
                        Opacity="0.05"/>
                <Border Background="#FF5379AE"
                        CornerRadius="2,2,2,2"
                        Margin="1,1,1,1"
                        Padding="1,1,1,1">
                    <Border CornerRadius="2,2,2,2" Padding="1,1,1,1">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFD0E3FB" Offset="0"/>
                                <GradientStop Color="#FFADD0F6" Offset="1"/>
                                <GradientStop Color="#FFD5E6FA" Offset="0.5"/>
                            </LinearGradientBrush>
                        </Border.Background>
                        <Border CornerRadius="1,1,1,1">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFD1E4FC" Offset="0"/>
                                    <GradientStop Color="#FFAED1F6" Offset="1"/>
                                    <GradientStop Color="#FFB5D0F1" Offset="0.5"/>
                                    <GradientStop Color="#FFA4C5ED" Offset="0.5"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                    </Border>
                </Border>
            </Grid>
            <Grid x:Name="pressed" Visibility="Hidden">
                <Border Background="#FFFFFFFF"
                        CornerRadius="2,2,2,2"
                        Margin="2,2,1,0"
                        Opacity="0.15"/>
                <Border Background="#FF3E6296"
                        CornerRadius="2,2,2,2"
                        Margin="1,1,1,1"
                        Padding="1,1,1,1">
                    <Border Background="#FF5576A6"
                            CornerRadius="2,2,2,2"
                            Padding="1,1,1,1"/>
                </Border>
            </Grid>
            <Border x:Name="glyph" Opacity="0.85">
                <Grid Height="13"
                      Margin="0,1,0,0"
                      VerticalAlignment="Center"
                      Width="14">
                    <!--FLYPH-->
                    <TextBlock HorizontalAlignment="Center">v</TextBlock>
                </Grid>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Visibility"
                        TargetName="hover"
                        Value="Visible"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Visibility"
                        TargetName="pressed"
                        Value="Visible"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity"
                        TargetName="glyph"
                        Value="0.35"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=ShowAutoHidePopupButtonTemplate}" TargetType="{x:Type ToggleButton}">
        <Grid x:Name="ButtonRoot"
              Background="Transparent"
              HorizontalAlignment="Stretch">
            <TextBlock HorizontalAlignment="Right">...</TextBlock>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background"
                        TargetName="ButtonRoot"
                        Value="White"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerBorderTemplate}" TargetType="{x:Type ContentControl}">
        <Border x:Name="FloatingContainerBorder"
                Background="#FFFFFFFF"
                BorderBrush="#FF2F51A5"
                BorderThickness="1">
            <ContentPresenter/>
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxc:FloatingContainer.IsActive)}" Value="False">
                <Setter Property="BorderBrush"
                        TargetName="FloatingContainerBorder"
                        Value="#FF7F7F7F"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxc:FloatingContainer.IsMaximized)}" Value="True"/>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerHeaderBorderTemplate}" TargetType="{x:Type ContentControl}">
        <Border x:Name="PART_Header" Background="#FFFFFFFF"/>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxc:FloatingContainer.IsActive)}" Value="False">
                <Setter Property="Background"
                        TargetName="PART_Header"
                        Value="#FFFFFFFF"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerContentTemplate}" TargetType="{x:Type ContentControl}">
        <Border x:Name="FloatingContainerBody" Background="#FFFFFFFF">
            <Grid Background="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerBackground}}">
                <ContentPresenter/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxc:FloatingContainer.IsActive)}" Value="False"/>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerContentStyle}" TargetType="{x:Type ContentControl}"></Style>

    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerBodyStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="Margin" Value="0"/>
    </Style>

    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerControlBoxStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="Margin" Value="6,-1,6,6"/>
    </Style>

    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerCaptionStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Foreground" Value="#FF191919"/>
    </Style>

    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerIconAndCaptionAreaStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="Margin" Value="4"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerIconStyle}" TargetType="{x:Type Image}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Stretch" Value="Fill"/>
        <Setter Property="Margin" Value="0,0,4,0"/>
    </Style>

    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerBodyTemplate}" TargetType="{x:Type ContentControl}">
        <ContentPresenter/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerControlBoxTemplate}" TargetType="{x:Type ContentControl}">
        <ContentPresenter/>
    </ControlTemplate>

    <DataTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=RibbonFloatingContainerTemplate}">
        <Grid>
            <Border x:Name="FloatingContainerBorder" Background="#FF2F51A5">
                <Border x:Name="FloatingContainerBackground"
                        Background="#FFFFFFFF"
                        Margin="1">
                    <Grid>
                        <Thumb x:Name="PART_DragWidget" Template="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerDragWidgetTemplate}}"/>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Border x:Name="PART_Header"
                                    Height="{Binding Path=RenderSize.Height, ElementName=FloatingContainerHeaderContent}"
                                    IsHitTestVisible="False"
                                    Visibility="{Binding Path=IsCaptionVisible, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}, Converter={StaticResource boolToVisibilityConverter}}">
                                <Grid VerticalAlignment="Top">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter x:Name="PART_CaptionContentPresenter"
                                                      Content="{Binding Path=Title, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}"
                                                      ContentTemplate="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerCaptionTemplate}}"
                                                      Grid.Column="0"
                                                      Panel.ZIndex="100"
                                                      Visibility="{Binding Path=IsCaptionVisible, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}, Converter={StaticResource boolToVisibilityConverter}}"/>
                                    <ContentPresenter x:Name="PART_RibbonCaptionContentPresenter"
                                                      Content="{Binding Path=Title, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}"
                                                      ContentTemplate="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=RibbonFloatingContainerCaptionTemplate}}"
                                                      Grid.Column="0"
                                                      HorizontalAlignment="Left"
                                                      Panel.ZIndex="100"
                                                      Visibility="{Binding Path=IsRibbonCaptionVisible, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}, Converter={StaticResource boolToVisibilityConverter}}"/>
                                    <StackPanel x:Name="stackPanel"
                                                Grid.Column="1"
                                                Margin="2"
                                                Orientation="Horizontal">
                                        <Button x:Name="PART_Minimize"
                                                Focusable="False"
                                                Height="17"
                                                Template="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerMinimizeButtonTemplate}}"
                                                Width="31"/>
                                        <Button x:Name="PART_Restore"
                                                Focusable="False"
                                                Height="17"
                                                Template="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerRestoreButtonTemplate}}"
                                                Visibility="{Binding Path=(dxc:FloatingContainer.IsMaximized), Converter={dxc:BooleanToVisibilityConverter Invert=False}}"
                                                Width="31"/>
                                        <Button x:Name="PART_Maximize"
                                                Focusable="False"
                                                Height="17"
                                                Template="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerMaximizeButtonTemplate}}"
                                                Visibility="{Binding Path=(dxc:FloatingContainer.IsMaximized), Converter={dxc:BooleanToVisibilityConverter Invert=True}}"
                                                Width="31"/>
                                        <Button x:Name="PART_CloseButton"
                                                Focusable="False"
                                                Height="17"
                                                Template="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonTemplate}}"
                                                Width="31"/>
                                    </StackPanel>
                                </Grid>
                            </Border>
                            <Border x:Name="FloatingContainerBody" Grid.Row="1">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid Background="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerBackground}}"
                                          Grid.Row="0"
                                          Grid.RowSpan="2">
                                        <dxc:BackgroundPanel x:Name="PART_ContainerContent" Content="{Binding}"/>
                                    </Grid>
                                    <StackPanel x:Name="PART_StatusPanel" Grid.Row="1">
                                        <Thumb x:Name="PART_SizeGrip"
                                               Cursor="SizeNWSE"
                                               Height="16"
                                               HorizontalAlignment="Right"
                                               Template="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerSizeGripTemplate}}"
                                               VerticalAlignment="Bottom"
                                               Width="16"/>
                                    </StackPanel>
                                </Grid>
                            </Border>
                        </Grid>
                    </Grid>
                </Border>
            </Border>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxc:FloatingContainer.IsActive)}" Value="False">
                <Setter Property="Opacity"
                        TargetName="PART_CaptionContentPresenter"
                        Value="0.5"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxc:FloatingContainer.FloatingContainer).AllowSizing, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter Property="Visibility"
                        TargetName="PART_StatusPanel"
                        Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxc:FloatingContainer.IsMaximized)}" Value="True">
                <Setter Property="Margin"
                        TargetName="FloatingContainerBorder"
                        Value="0"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

</ResourceDictionary>