<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.HybridApp.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/HybridApp/PseudoWindow.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- RIBBON HEADER BUTTONS -->

    <!--CloseButtonGlyphTemplate-->

    <DataTemplate x:Key="{dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonCloseButtonGlyph}">
        <Grid x:Name="Glyph"
              Height="10"
              Width="10">
            <Path x:Name="Path"
                  Data="F1 M 1,2L 2,1L 6,5L 10,1L 11,2L 7,6L 11,10L 10,11L 6,7L 2,11L 1,10L 5,6L 1,2 Z "
                  Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}"
                  Stretch="Fill"/>
        </Grid>
    </DataTemplate>

    <!--RestoreButtonGlyphTemplate-->

    <DataTemplate x:Key="{dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonRestoreButtonGlyph}">
        <Grid x:Name="Glyph"
              Height="12"
              Width="12">
            <Path x:Name="Path"
                  Data="F1 M 1.98682e-008,12L 1.98682e-008,4L 8,4L 8,12L 1.98682e-008,12 Z M 1,7L 1,11L 7,11L 7,7L 1,7 Z M 4,2.86102e-006L 12,2.86102e-006L 12,8L 8.64583,8L 8.64583,7L 11,7L 11,3L 8.64583,3L 5,3L 4,3L 4,2.86102e-006 Z "
                  Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}"
                  Stretch="Fill"/>
        </Grid>
    </DataTemplate>

    <!--MinimizeButtonGlyphTemplate-->

    <DataTemplate x:Key="{dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonMinimizeButtonGlyph}">
        <Grid x:Name="Glyph"
              Height="2"
              Margin="0,0,0,-8"
              Width="12">
            <Rectangle x:Name="Path"
                       Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}"
                       Stretch="Fill"/>
        </Grid>
    </DataTemplate>

    <!--MaximizeButtonGlyphTemplate-->

    <DataTemplate x:Key="{dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonMaximizeButtonGlyph}">
        <Grid x:Name="Glyph"
              Height="12"
              Width="12">
            <Path x:Name="Path"
                  Data="F1 M 0,0L 12,0L 12,12L 0,12L 0,0 Z M 1,11L 11,11L 11,3L 1,3L 1,11 Z "
                  Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}"
                  Stretch="Fill"/>
        </Grid>
    </DataTemplate>

    <!--Foreground brushes-->

    <SolidColorBrush x:Key="{dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonDefaultButtonForegroundNormalState}" Color="#FFFFFFFF"/>

    <SolidColorBrush x:Key="{dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonDefaultButtonForegroundMouseOverState}" Color="#FFFFFFFF"/>

    <SolidColorBrush x:Key="{dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonDefaultButtonForegroundPressedState}" Color="#FFFFFFFF"/>

    <SolidColorBrush x:Key="{dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonCloseButtonForegroundNormalState}" Color="#FFFFFFFF"/>

    <SolidColorBrush x:Key="{dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonCloseButtonForegroundMouseOverState}" Color="#FFFFFFFF"/>

    <SolidColorBrush x:Key="{dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonCloseButtonForegroundPressedState}" Color="#FFFFFFFF"/>

    <!--Ribbon HeaderDefaultButton Normal Background-->

    <ControlTemplate x:Key="{dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonDefaultButtonBackgroundNormalState}"/>

    <!--Ribbon HeaderCloseButton Normal Background-->

    <ControlTemplate x:Key="{dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonCloseButtonBackgroundNormalState}"/>

    <!--Ribbon HeaderDefaultButton MouseOver Background-->

    <ControlTemplate x:Key="{dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonDefaultButtonBackgroundMouseOverState}">
        <Border x:Name="HoverState"
                Background="#FFF6F6F6"
                Opacity="0"/>
    </ControlTemplate>

    <!--Ribbon HeaderCloseButton MouseOver Background-->

    <ControlTemplate x:Key="{dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonCloseButtonBackgroundMouseOverState}"/>

    <!--Ribbon HeaderDefaultButton Pressed Background-->

    <ControlTemplate x:Key="{dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonDefaultButtonBackgroundPressedState}">
        <Border x:Name="PressedState"
                Background="#FFE3E3E3"
                Opacity="0"/>
    </ControlTemplate>

    <!--Ribbon HeaderCloseButton Pressed Background-->

    <ControlTemplate x:Key="{dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonCloseButtonBackgroundPressedState}"/>

    <!--RIBBON HEADER ITEMS STYLES-->

    <!-- Ribbon HeaderButton Style -->

    <Style x:Key="{dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonHeaderButtonStyle}"
           BasedOn="{StaticResource ResourceKey=headerItemControlStyle}"
           TargetType="{x:Type dx:HeaderItemControl}">
        <Setter Property="Width" Value="27"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
    </Style>

    <!-- Ribbon CloseHeaderButton Style -->

    <Style x:Key="{dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonHeaderCloseButtonStyle}"
           BasedOn="{StaticResource ResourceKey={dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonHeaderButtonStyle}}"
           TargetType="{x:Type dx:HeaderItemControl}">
    </Style>

</ResourceDictionary>