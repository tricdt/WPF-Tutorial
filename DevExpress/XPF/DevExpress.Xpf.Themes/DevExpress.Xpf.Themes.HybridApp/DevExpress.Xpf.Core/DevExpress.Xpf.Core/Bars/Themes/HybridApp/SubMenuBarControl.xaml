<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
                    xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Thickness x:Key="{dxbt:SubMenuBarControlThemeKey ResourceKey=GlyphPadding}">7,0,9,0</Thickness>

    <ControlTemplate x:Key="{dxbt:SubMenuBarControlThemeKey ResourceKey=ScrollUpButtonTemplate}" TargetType="{x:Type RepeatButton}">
        <Grid x:Name="Root" SnapsToDevicePixels="True">
            <Border x:Name="Border"
                    Background="#00000000"
                    BorderBrush="#FFDDDDDD"
                    BorderThickness="0,0,0,1">
                <Path x:Name="Glyph"
                      Data="F1 M 0,3L 1,3L 1,2L 2,2L 2,1L 3,1L 3,0L 4,0L 4,1L 5,1L 5,2L 6,2L 6,3L 7,3L 7,6L 6,6L 6,5L 5,5L 5,4L 4,4L 4,3L 3,3L 3,4L 2,4L 2,5L 1,5L 1,6L 0,6L 0,3 Z "
                      dx:TouchInfo.Margin="{dx:TouchMarginInfo Value='4'}"
                      Fill="#FF404040"
                      Height="6"
                      HorizontalAlignment="Center"
                      Stretch="Fill"
                      VerticalAlignment="Center"
                      Width="7"/>
            </Border>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation Duration="0"
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)"
                                            To="#FFEEEEEE"/>
                            <ColorAnimation Duration="0"
                                            Storyboard.TargetName="Glyph"
                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                            To="#FF404040"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimation Duration="0"
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)"
                                            To="#FFDDDDDD"/>
                            <ColorAnimation Duration="0"
                                            Storyboard.TargetName="Glyph"
                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                            To="#FF404040"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxbt:SubMenuBarControlThemeKey ResourceKey=ScrollDownButtonTemplate}" TargetType="{x:Type RepeatButton}">
        <Grid x:Name="Root" SnapsToDevicePixels="True">
            <Border x:Name="Border"
                    Background="#00000000"
                    BorderBrush="#FFDDDDDD"
                    BorderThickness="0,1,0,0">
                <Path x:Name="Glyph"
                      Data="F1 M 0,0L 1,0L 1,1L 2,1L 2,2L 3,2L 3,3L 4,3L 4,2L 5,2L 5,1L 6,1L 6,0L 7,0L 7,3L 6,3L 6,4L 5,4L 5,5L 4,5L 4,6L 3,6L 3,5L 2,5L 2,4L 1,4L 1,3L 0,3L 0,0 Z  "
                      dx:TouchInfo.Margin="{dx:TouchMarginInfo Value='4'}"
                      Fill="#FF404040"
                      Height="6"
                      HorizontalAlignment="Center"
                      Stretch="Fill"
                      VerticalAlignment="Center"
                      Width="7"/>
            </Border>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimation Duration="0"
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="#FFEEEEEE"/>
                            <ColorAnimation Duration="0"
                                            Storyboard.TargetName="Glyph"
                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                            To="#FF404040"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimation Duration="0"
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="#FFDDDDDD"/>
                            <ColorAnimation Duration="0"
                                            Storyboard.TargetName="Glyph"
                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                            To="#FF404040"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <Style x:Key="{dxbt:SubMenuBarControlThemeKey ResourceKey=ScrollLeftButtonStyle}" TargetType="{x:Type RepeatButton}">
        <Setter Property="ClickMode" Value="Hover"/>
        <!--<Setter Property="Template" Value="{DynamicResource {dxbt:SubMenuBarControlThemeKey ResourceKey=ScrollLeftButtonTemplate}}" />-->
    </Style>

    <Style x:Key="{dxbt:SubMenuBarControlThemeKey ResourceKey=ScrollRightButtonStyle}" TargetType="{x:Type RepeatButton}">
        <Setter Property="ClickMode" Value="Hover"/>
        <!--<Setter Property="Template" Value="{DynamicResource {dxbt:SubMenuBarControlThemeKey ResourceKey=ScrollRightButtonTemplate}}" />-->
    </Style>

    <Style x:Key="{dxbt:SubMenuBarControlThemeKey ResourceKey=ScrollUpButtonStyle}" TargetType="{x:Type RepeatButton}">
        <Setter Property="ClickMode" Value="Hover"/>
        <Setter Property="Template" Value="{DynamicResource {dxbt:SubMenuBarControlThemeKey ResourceKey=ScrollUpButtonTemplate}}"/>
    </Style>

    <Style x:Key="{dxbt:SubMenuBarControlThemeKey ResourceKey=ScrollDownButtonStyle}" TargetType="{x:Type RepeatButton}">
        <Setter Property="ClickMode" Value="Hover"/>
        <Setter Property="Template" Value="{DynamicResource {dxbt:SubMenuBarControlThemeKey ResourceKey=ScrollDownButtonTemplate}}"/>
    </Style>

    <ControlTemplate x:Key="{dxbt:SubMenuBarControlThemeKey ResourceKey=ContentSideBorderTemplate}" TargetType="{x:Type ContentControl}"></ControlTemplate>

    <ControlTemplate x:Key="{dxbt:SubMenuBarControlThemeKey ResourceKey=GlyphSideBorderTemplate}" TargetType="{x:Type ContentControl}"></ControlTemplate>

    <ControlTemplate x:Key="{dxbt:SubMenuBarControlThemeKey ResourceKey=DropIndicatorTemplate}" TargetType="{x:Type ContentControl}">
        <Grid x:Name="Content" SnapsToDevicePixels="True">
            <Grid.RenderTransform>
                <TranslateTransform X="-3" Y="0"/>
            </Grid.RenderTransform>
            <Border Background="#FFFFFFFF"
                    BorderBrush="#FFFFFFFF"
                    BorderThickness="1"
                    Height="3"
                    VerticalAlignment="Top"
                    Width="9"/>
            <Border Background="#FFFFFFFF"
                    BorderBrush="#FFFFFFFF"
                    BorderThickness="1"
                    Height="3"
                    VerticalAlignment="Bottom"
                    Width="9"/>
            <dx:PixelSnapper dx:TouchInfo.Margin="{dx:TouchMarginInfo Value='0,2,0,2'}" HorizontalAlignment="Center">
                <Border Background="#FFFFFFFF"
                        BorderBrush="#FFFFFFFF"
                        BorderThickness="1,0,1,0"
                        Width="3"/>
            </dx:PixelSnapper>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="Orientation">
                    <VisualState x:Name="Horizontal"/>
                    <VisualState x:Name="Vertical">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="RenderTransform">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <TransformGroup>
                                            <RotateTransform Angle="-90"
                                                             CenterX="0.5"
                                                             CenterY="0.5"/>
                                            <TranslateTransform X="0" Y="3"/>
                                        </TransformGroup>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>

    <!--BEGIN WPF-->

    <ControlTemplate x:Key="{dxbt:SubMenuBarControlThemeKey ResourceKey=ControlTemplate}" TargetType="{x:Type dxb:SubMenuBarControl}">
        <ContentControl Style="{DynamicResource {dxbt:BarControlThemeKey ResourceKey=MenuContentStyle}}">
            <Grid Background="#00000000">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Border Grid.Column="0"
                            Margin="{Binding Path=GlyphPadding, RelativeSource={RelativeSource TemplatedParent}}"
                            SnapsToDevicePixels="True"
                            Width="{Binding Path=MaxGlyphSize.Width, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <ContentControl x:Name="PART_GlyphSide"
                                    Grid.Column="0"
                                    SnapsToDevicePixels="True"
                                    Template="{DynamicResource {dxbt:SubMenuBarControlThemeKey ResourceKey=GlyphSideBorderTemplate}}"/>
                    <ContentControl x:Name="PART_ContentSide"
                                    Grid.Column="1"
                                    SnapsToDevicePixels="True"
                                    Template="{DynamicResource {dxbt:SubMenuBarControlThemeKey ResourceKey=ContentSideBorderTemplate}}"/>
                </Grid>
                <dxb:SubMenuScrollViewer Style="{DynamicResource {dxbt:SubMenuBarControlThemeKey  ResourceKey=ScrollViewerStyle}}">
                    <dx:CompatibilityAdornerContainer x:Name="PART_Adorner">
                        <ItemsPresenter/>
                    </dx:CompatibilityAdornerContainer>
                </dxb:SubMenuScrollViewer>
            </Grid>
        </ContentControl>
    </ControlTemplate>

    <!--END WPF-->

    <ControlTemplate x:Key="{dxbt:SubMenuBarControlThemeKey ResourceKey=PopupMenuColumnSplitterTemplate}" TargetType="{x:Type dxb:PopupMenuColumnSplitter}">
        <Border Background="#FFDDDDDD" Width="1"/>
    </ControlTemplate>

</ResourceDictionary>