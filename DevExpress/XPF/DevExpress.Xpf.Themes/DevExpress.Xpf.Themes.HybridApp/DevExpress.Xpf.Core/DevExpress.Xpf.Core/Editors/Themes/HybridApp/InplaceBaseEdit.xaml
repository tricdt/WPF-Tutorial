<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxeh="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
                    xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
                    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
                    xmlns:dxn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxtEx="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--BEGIN WPF-->

    <ResourceDictionary.MergedDictionaries>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.HybridApp.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/HybridApp/ButtonEdit.xaml"/>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.HybridApp.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/HybridApp/Brushes.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--END WPF-->

    <Thickness x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=TextEditBorderThickness}">1</Thickness>

    <Thickness x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=CommonBorderThickness}">1</Thickness>

    <dxn:RenderTemplate x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=HoverBorderTemplate}">
        <dxn:RenderPanel>
            <dxn:RenderPanel Name="PART_Focus" Visibility="Collapsed">
                <dxn:RenderBorder BorderBrush="#7F2E4D9E"
                                  BorderThickness="3"
                                  Margin="-2"/>
            </dxn:RenderPanel>
        </dxn:RenderPanel>
        <dxn:RenderTemplate.Triggers>
            <dxn:RenderTrigger DependencyProperty="{x:Static dxeh:ControlHelper.ShowFocusedStateProperty}"
                               Value="True"
                               ValueSource="Chrome">
                <dxn:RenderSetter Property="Visibility"
                                  TargetName="PART_Focus"
                                  Value="Visible"/>
            </dxn:RenderTrigger>
        </dxn:RenderTemplate.Triggers>
    </dxn:RenderTemplate>

    <dxn:RenderTemplate x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=TextEditBorderTemplate}">
        <dxn:RenderPanel Name="PART_Root" MinHeight="34">
            <dxn:RenderPanel Name="PART_Border">
                <dxn:RenderBorder Background="#FFFFFFFF"
                                  BorderBrush="#FFC3C3C3"
                                  BorderThickness="1">
                </dxn:RenderBorder>
            </dxn:RenderPanel>
        </dxn:RenderPanel>
    </dxn:RenderTemplate>

    <dxn:RenderTemplate x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=CommonBorderTemplate}">
        <dxn:RenderPanel Name="PART_Root">
            <dxn:RenderPanel Name="PART_Border">
                <dxn:RenderBorder Background="#FFFFFFFF"
                                  BorderBrush="#FFC3C3C3"
                                  BorderThickness="1">
                </dxn:RenderBorder>
            </dxn:RenderPanel>
        </dxn:RenderPanel>
    </dxn:RenderTemplate>

    <ControlTemplate x:Key="{dxet:BaseEditThemeKey ResourceKey=EmptyBorderTemplate}" TargetType="ContentControl">
        <ContentPresenter/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:BaseEditThemeKey ResourceKey=TextEditBorderTemplate}" TargetType="ContentControl">
        <Grid>
            <dxn:Chrome RenderTemplate="{StaticResource {dxet:InplaceBaseEditThemeKey ResourceKey=TextEditBorderTemplate}}"/>
            <ContentPresenter Margin="{StaticResource ResourceKey={dxet:InplaceBaseEditThemeKey ResourceKey=TextEditBorderThickness}}"/>
            <dxn:Chrome dxeh:ControlHelper.ShowFocusedState="{Binding Path=(dxeh:ControlHelper.ShowFocusedState), RelativeSource={RelativeSource TemplatedParent}}"
                        IsHitTestVisible="False"
                        RenderTemplate="{StaticResource {dxet:InplaceBaseEditThemeKey ResourceKey=HoverBorderTemplate}}"/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:BaseEditThemeKey ResourceKey=CommonBorderTemplate}" TargetType="ContentControl">
        <Grid>
            <dxn:Chrome RenderTemplate="{StaticResource {dxet:InplaceBaseEditThemeKey ResourceKey=CommonBorderTemplate}}"/>
            <ContentPresenter Margin="{StaticResource ResourceKey={dxet:InplaceBaseEditThemeKey ResourceKey=CommonBorderThickness}}"/>
            <dxn:Chrome dxeh:ControlHelper.ShowFocusedState="{Binding Path=(dxeh:ControlHelper.ShowFocusedState), RelativeSource={RelativeSource TemplatedParent}}"
                        IsHitTestVisible="False"
                        RenderTemplate="{StaticResource {dxet:InplaceBaseEditThemeKey ResourceKey=HoverBorderTemplate}}"/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:BaseEditThemeKey ResourceKey=CommonBorderDecorationTemplate}" TargetType="Control">
        <dxn:Chrome RenderTemplate="{StaticResource {dxet:InplaceBaseEditThemeKey ResourceKey=CommonBorderTemplate}}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:BaseEditThemeKey ResourceKey=TextEditBorderDecorationTemplate}" TargetType="Control">
        <dxn:Chrome RenderTemplate="{StaticResource {dxet:InplaceBaseEditThemeKey ResourceKey=TextEditBorderTemplate}}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:BaseEditThemeKey ResourceKey=HoverBorderDecorationTemplate}" TargetType="Control">
        <dxn:Chrome dxeh:ControlHelper.ShowFocusedState="{Binding Path=(dxeh:ControlHelper.ShowFocusedState), RelativeSource={RelativeSource TemplatedParent}}"
                    IsHitTestVisible="False"
                    RenderTemplate="{StaticResource {dxet:InplaceBaseEditThemeKey ResourceKey=HoverBorderTemplate}}"/>
    </ControlTemplate>

    <dxn:RenderTemplate x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=SpinUpGlyph}">
        <dxn:RenderPath Name="Path"
                        Data="F1 M 0,5L 5,4.76837e-007L 10,5L 0,5 Z "
                        Height="5"
                        Margin="3,0,3,0"
                        Stretch="Fill"
                        Width="10"/>
        <dxn:RenderTemplate.Triggers>
            <dxn:RenderBinding TargetName="Path"
                               TargetProperty="Fill"
                               ValueSource="DataContext"/>
        </dxn:RenderTemplate.Triggers>
    </dxn:RenderTemplate>

    <dxn:RenderTemplate x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=SpinDownGlyph}">
        <dxn:RenderPath Name="Path"
                        Data="F1 M 0,0L 8,0L 4,4L 5.92119e-016,2.38419e-007"
                        Height="5"
                        Margin="3,0,3,0"
                        Width="10"/>
        <dxn:RenderTemplate.Triggers>
            <dxn:RenderBinding TargetName="Path"
                               TargetProperty="Fill"
                               ValueSource="DataContext"/>
        </dxn:RenderTemplate.Triggers>
    </dxn:RenderTemplate>

    <dxn:RenderTemplate x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=SpinLeftGlyph}">
        <dxn:RenderPath Name="Path"
                        Data="F1 M 0,5L 5,0L 5,10L 0,5 Z "
                        Height="10"
                        Margin="3,0,3,0"
                        Stretch="Fill"
                        Width="5"/>
        <dxn:RenderTemplate.Triggers>
            <dxn:RenderBinding TargetName="Path"
                               TargetProperty="Fill"
                               ValueSource="DataContext"/>
        </dxn:RenderTemplate.Triggers>
    </dxn:RenderTemplate>

    <dxn:RenderTemplate x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=SpinRightGlyph}">
        <dxn:RenderPath Name="Path"
                        Data="F1 M 5,5L -1.98682e-008,9.53674e-007L 2.98023e-007,10L 5,5 Z "
                        Height="10"
                        Margin="3,0,3,0"
                        Stretch="Fill"
                        Width="5"/>
        <dxn:RenderTemplate.Triggers>
            <dxn:RenderBinding TargetName="Path"
                               TargetProperty="Fill"
                               ValueSource="DataContext"/>
        </dxn:RenderTemplate.Triggers>
    </dxn:RenderTemplate>

    <dxn:RenderTemplate x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=DropDownGlyph}">
        <dxn:RenderPath Data="F1 M 0,0L 8,0L 4,4L 5.92119e-016,2.38419e-007"
                        Height="5"
                        Stretch="Fill"
                        Width="10">
            <dxn:RenderPath.Fill>
                <SolidColorBrush Color="{StaticResource {dxet:SpinEditThemeKey ResourceKey=ArrowBrushColor}}"/>
            </dxn:RenderPath.Fill>
        </dxn:RenderPath>
    </dxn:RenderTemplate>

    <!--normal-->

    <SolidColorBrush x:Key="CheckEdit.Normal.FocusBorder.BorderBrush">#7F2E4D9E</SolidColorBrush>

    <SolidColorBrush x:Key="CheckEdit.Normal.TriState.Background">#FF222222</SolidColorBrush>

    <SolidColorBrush x:Key="CheckEdit.Normal.OuterBorder.Background">#FFFFFFFF</SolidColorBrush>

    <SolidColorBrush x:Key="CheckEdit.Normal.OuterBorder.BorderBrush">#FFC3C3C3</SolidColorBrush>

    <!--hover-->

    <SolidColorBrush x:Key="CheckEdit.Hover.OuterBorder.Background">#FFF6F6F6</SolidColorBrush>

    <SolidColorBrush x:Key="CheckEdit.Hover.OuterBorder.BorderBrush">#FFC3C3C3</SolidColorBrush>

    <!--pressed-->

    <SolidColorBrush x:Key="CheckEdit.Pressed.OuterBorder.Background">#FFE3E3E3</SolidColorBrush>

    <SolidColorBrush x:Key="CheckEdit.Pressed.OuterBorder.BorderBrush">#FFC3C3C3</SolidColorBrush>

    <Visibility x:Key="Visible">Visible</Visibility>

    <dxn:RenderTemplate x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=RenderCheckBoxTemplate}">
        <dxn:RenderPanel LayoutProvider="{dxn:DockPanelLayoutProvider LastChildFill=True}">
            <dxn:RenderPanel Name="CheckBox"
                             Dock="Left"
                             FlowDirection="LeftToRight"
                             Height="26"
                             VerticalAlignment="Center"
                             Width="26">
                <dxn:RenderBorder Name="OuterBorder"
                                  Background="{StaticResource CheckEdit.Normal.OuterBorder.Background}"
                                  BorderBrush="{StaticResource CheckEdit.Normal.OuterBorder.BorderBrush}"
                                  BorderThickness="1">
                </dxn:RenderBorder>
                <dxn:RenderBorder Name="FocusBorder"
                                  BorderBrush="{StaticResource CheckEdit.Normal.FocusBorder.BorderBrush}"
                                  BorderThickness="3"
                                  Margin="-2"
                                  Visibility="Collapsed"/>
                <dxn:RenderBorder Name="TriState"
                                  Background="{StaticResource CheckEdit.Normal.TriState.Background}"
                                  Height="7"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Visibility="Collapsed"
                                  Width="7"/>
                <dxn:RenderPath Name="CheckElement"
                                Data="F1 M 6,15L 15.3333,3.33333L 16.6667,4.66667L 6,18L 1,13L 2.5,11.5L 6,15 Z "
                                Fill="#FF191919"
                                Height="14.6667"
                                HorizontalAlignment="Center"
                                Stretch="Fill"
                                VerticalAlignment="Center"
                                Visibility="Collapsed"
                                Width="15.6667"/>
            </dxn:RenderPanel>
            <dxn:RenderContentPresenter Name="PART_ContentPresenter" Visibility="Collapsed"/>
        </dxn:RenderPanel>
        <dxn:RenderTemplate.Triggers>
            <dxn:RenderStateGroup Name="CommonStates">
                <dxn:RenderStateTrigger Name="Normal"/>
                <dxn:RenderStateTrigger Name="Pressed"/>
                <dxn:RenderStateTrigger Name="MouseOver">
                    <dxn:RenderSetter Property="Background"
                                      TargetName="OuterBorder"
                                      Value="{StaticResource CheckEdit.Hover.OuterBorder.Background}"/>
                    <dxn:RenderSetter Property="BorderBrush"
                                      TargetName="OuterBorder"
                                      Value="{StaticResource CheckEdit.Hover.OuterBorder.BorderBrush}"/>
                </dxn:RenderStateTrigger>
                <dxn:RenderStateTrigger Name="Disabled">
                    <dxn:RenderSetter Property="Opacity"
                                      TargetName="CheckBox"
                                      Value="0.35"/>
                    <dxn:RenderSetter Property="Opacity"
                                      TargetName="PART_ContentPresenter"
                                      Value="0.35"/>
                </dxn:RenderStateTrigger>
            </dxn:RenderStateGroup>
            <dxn:RenderStateGroup Name="CheckStates">
                <dxn:RenderStateTrigger Name="Checked">
                    <dxn:RenderSetter Property="Visibility"
                                      TargetName="CheckElement"
                                      Value="{StaticResource Visible}"/>
                </dxn:RenderStateTrigger>
                <dxn:RenderStateTrigger Name="Unchecked"/>
                <dxn:RenderStateTrigger Name="Indeterminate">
                    <dxn:RenderSetter Property="Visibility"
                                      TargetName="TriState"
                                      Value="{StaticResource Visible}"/>
                </dxn:RenderStateTrigger>
            </dxn:RenderStateGroup>
            <dxn:RenderStateGroup Name="FocusStates">
                <dxn:RenderStateTrigger Name="Unfocused"/>
                <dxn:RenderStateTrigger Name="Focused">
                    <dxn:RenderSetter Property="Visibility"
                                      TargetName="FocusBorder"
                                      Value="{StaticResource Visible}"/>
                </dxn:RenderStateTrigger>
            </dxn:RenderStateGroup>
            <dxn:RenderStateGroup Name="ContentStates">
                <dxn:RenderStateTrigger Name="HasNoContent"/>
                <dxn:RenderStateTrigger Name="HasContent">
                    <dxn:RenderSetter Property="Visibility"
                                      TargetName="PART_ContentPresenter"
                                      Value="{StaticResource Visible}"/>
                </dxn:RenderStateTrigger>
            </dxn:RenderStateGroup>
        </dxn:RenderTemplate.Triggers>
    </dxn:RenderTemplate>

    <!--NORMAL-->

    <SolidColorBrush x:Key="Button.Normal.Outer.BorderBrush" Color="Transparent"/>

    <LinearGradientBrush x:Key="Button.Normal.Outer.Background"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="Transparent" Offset="0"/>
        <GradientStop Color="Transparent" Offset="1"/>
    </LinearGradientBrush>

    <!--MOUSEOVER-->

    <SolidColorBrush x:Key="Button.MouseOver.Outer.BorderBrush" Color="#FFC3C3C3"/>

    <LinearGradientBrush x:Key="Button.MouseOver.Outer.Background"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFF6F6F6" Offset="0"/>
        <GradientStop Color="#FFF6F6F6" Offset="1"/>
    </LinearGradientBrush>

    <!--PRESSED\CHECKED-->

    <SolidColorBrush x:Key="Button.Pressed.Outer.BorderBrush" Color="#FFC3C3C3"/>

    <LinearGradientBrush x:Key="Button.Pressed.Outer.Background"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFE3E3E3" Offset="0"/>
        <GradientStop Color="#FFE3E3E3" Offset="1"/>
    </LinearGradientBrush>

    <dxn:RenderTemplate x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=RenderButtonTemplate}">
        <dxn:RenderPanel MinWidth="26">
            <dxn:RenderBorder Name="Outer"
                              Background="{StaticResource Button.Normal.Outer.Background}"
                              BorderBrush="{StaticResource Button.Normal.Outer.BorderBrush}"
                              BorderThickness="1">
            </dxn:RenderBorder>
            <dxn:RenderContentPresenter Name="PART_ContentPresenter"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"/>
        </dxn:RenderPanel>
        <dxn:RenderTemplate.Triggers>
            <dxn:RenderStateGroup Name="CommonStates">
                <dxn:RenderStateTrigger Name="Normal"/>
                <dxn:RenderStateTrigger Name="MouseOver">
                    <dxn:RenderSetter Property="BorderBrush"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.MouseOver.Outer.BorderBrush}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.MouseOver.Outer.Background}"/>
                </dxn:RenderStateTrigger>
                <dxn:RenderStateTrigger Name="Pressed">
                    <dxn:RenderSetter Property="BorderBrush"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.Pressed.Outer.BorderBrush}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.Pressed.Outer.Background}"/>
                </dxn:RenderStateTrigger>
                <dxn:RenderStateTrigger Name="Disabled"/>
            </dxn:RenderStateGroup>
            <dxn:RenderStateGroup Name="CheckedStates">
                <dxn:RenderStateTrigger Name="Unchecked"/>
                <dxn:RenderStateTrigger Name="Checked">
                    <dxn:RenderSetter Property="BorderBrush"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.Pressed.Outer.BorderBrush}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.Pressed.Outer.Background}"/>
                </dxn:RenderStateTrigger>
            </dxn:RenderStateGroup>
            <dxn:RenderTrigger DependencyProperty="{x:Static dxe:ButtonInfo.GlyphKindProperty}" Value="User">
                <dxn:RenderSetter Property="Margin"
                                  TargetName="PART_ContentPresenter"
                                  Value="5,0"/>
            </dxn:RenderTrigger>
            <dxn:RenderTrigger DependencyProperty="{x:Static dxe:ButtonInfo.GlyphKindProperty}" Value="None">
                <dxn:RenderSetter Property="Margin"
                                  TargetName="PART_ContentPresenter"
                                  Value="5,0"/>
            </dxn:RenderTrigger>
        </dxn:RenderTemplate.Triggers>
    </dxn:RenderTemplate>

    <dxn:RenderTemplate x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=RenderSpinDownButtonTemplate}">
        <dxn:RenderPanel MinWidth="26">
            <dxn:RenderBorder Name="Outer"
                              Background="{StaticResource Button.Normal.Outer.Background}"
                              BorderBrush="{StaticResource Button.Normal.Outer.BorderBrush}"
                              BorderThickness="1,0,1,1">
            </dxn:RenderBorder>
            <dxn:RenderContentPresenter Name="PART_ContentPresenter"
                                        HorizontalAlignment="Center"
                                        MinWidth="15"
                                        VerticalAlignment="Center"/>
        </dxn:RenderPanel>
        <dxn:RenderTemplate.Triggers>
            <dxn:RenderStateGroup Name="CommonStates">
                <dxn:RenderStateTrigger Name="Normal"/>
                <dxn:RenderStateTrigger Name="MouseOver">
                    <dxn:RenderSetter Property="BorderBrush"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.MouseOver.Outer.BorderBrush}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.MouseOver.Outer.Background}"/>
                </dxn:RenderStateTrigger>
                <dxn:RenderStateTrigger Name="Pressed">
                    <dxn:RenderSetter Property="BorderBrush"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.Pressed.Outer.BorderBrush}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.Pressed.Outer.Background}"/>
                </dxn:RenderStateTrigger>
                <dxn:RenderStateTrigger Name="Disabled"/>
            </dxn:RenderStateGroup>
            <dxn:RenderStateGroup Name="CheckedStates">
                <dxn:RenderStateTrigger Name="Unchecked"/>
                <dxn:RenderStateTrigger Name="Checked">
                    <dxn:RenderSetter Property="BorderBrush"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.Pressed.Outer.BorderBrush}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.Pressed.Outer.Background}"/>
                </dxn:RenderStateTrigger>
            </dxn:RenderStateGroup>
        </dxn:RenderTemplate.Triggers>
    </dxn:RenderTemplate>

    <dxn:RenderTemplate x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=RenderSpinUpButtonTemplate}">
        <dxn:RenderPanel MinWidth="26">
            <dxn:RenderBorder Name="Outer"
                              Background="{StaticResource Button.Normal.Outer.Background}"
                              BorderBrush="{StaticResource Button.Normal.Outer.BorderBrush}"
                              BorderThickness="1,1,1,0">
            </dxn:RenderBorder>
            <dxn:RenderContentPresenter Name="PART_ContentPresenter"
                                        HorizontalAlignment="Center"
                                        MinWidth="15"
                                        VerticalAlignment="Center"/>
        </dxn:RenderPanel>
        <dxn:RenderTemplate.Triggers>
            <dxn:RenderStateGroup Name="CommonStates">
                <dxn:RenderStateTrigger Name="Normal"/>
                <dxn:RenderStateTrigger Name="MouseOver">
                    <dxn:RenderSetter Property="BorderBrush"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.MouseOver.Outer.BorderBrush}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.MouseOver.Outer.Background}"/>
                </dxn:RenderStateTrigger>
                <dxn:RenderStateTrigger Name="Pressed">
                    <dxn:RenderSetter Property="BorderBrush"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.Pressed.Outer.BorderBrush}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.Pressed.Outer.Background}"/>
                </dxn:RenderStateTrigger>
                <dxn:RenderStateTrigger Name="Disabled"/>
            </dxn:RenderStateGroup>
            <dxn:RenderStateGroup Name="CheckedStates">
                <dxn:RenderStateTrigger Name="Unchecked"/>
                <dxn:RenderStateTrigger Name="Checked">
                    <dxn:RenderSetter Property="BorderBrush"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.Pressed.Outer.BorderBrush}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.Pressed.Outer.Background}"/>
                </dxn:RenderStateTrigger>
            </dxn:RenderStateGroup>
        </dxn:RenderTemplate.Triggers>
    </dxn:RenderTemplate>

    <dxn:RenderTemplate x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=RenderSpinLeftButtonTemplate}">
        <dxn:RenderPanel MinWidth="26">
            <dxn:RenderBorder Name="Outer"
                              Background="{StaticResource Button.Normal.Outer.Background}"
                              BorderBrush="{StaticResource Button.Normal.Outer.BorderBrush}"
                              BorderThickness="0,1,1,1">
            </dxn:RenderBorder>
            <dxn:RenderContentPresenter Name="PART_ContentPresenter"
                                        HorizontalAlignment="Center"
                                        MinWidth="15"
                                        VerticalAlignment="Center"/>
        </dxn:RenderPanel>
        <dxn:RenderTemplate.Triggers>
            <dxn:RenderStateGroup Name="CommonStates">
                <dxn:RenderStateTrigger Name="Normal"/>
                <dxn:RenderStateTrigger Name="MouseOver">
                    <dxn:RenderSetter Property="BorderBrush"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.MouseOver.Outer.BorderBrush}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.MouseOver.Outer.Background}"/>
                </dxn:RenderStateTrigger>
                <dxn:RenderStateTrigger Name="Pressed">
                    <dxn:RenderSetter Property="BorderBrush"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.Pressed.Outer.BorderBrush}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.Pressed.Outer.Background}"/>
                </dxn:RenderStateTrigger>
                <dxn:RenderStateTrigger Name="Disabled"/>
            </dxn:RenderStateGroup>
            <dxn:RenderStateGroup Name="CheckedStates">
                <dxn:RenderStateTrigger Name="Unchecked"/>
                <dxn:RenderStateTrigger Name="Checked">
                    <dxn:RenderSetter Property="BorderBrush"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.Pressed.Outer.BorderBrush}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.Pressed.Outer.Background}"/>
                </dxn:RenderStateTrigger>
            </dxn:RenderStateGroup>
        </dxn:RenderTemplate.Triggers>
    </dxn:RenderTemplate>

    <dxn:RenderTemplate x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=RenderSpinRightButtonTemplate}">
        <dxn:RenderPanel MinWidth="26">
            <dxn:RenderBorder Name="Outer"
                              Background="{StaticResource Button.Normal.Outer.Background}"
                              BorderBrush="{StaticResource Button.Normal.Outer.BorderBrush}"
                              BorderThickness="1,1,0,1">
            </dxn:RenderBorder>
            <dxn:RenderContentPresenter Name="PART_ContentPresenter"
                                        HorizontalAlignment="Center"
                                        MinWidth="15"
                                        VerticalAlignment="Center"/>
        </dxn:RenderPanel>
        <dxn:RenderTemplate.Triggers>
            <dxn:RenderStateGroup Name="CommonStates">
                <dxn:RenderStateTrigger Name="Normal"/>
                <dxn:RenderStateTrigger Name="MouseOver">
                    <dxn:RenderSetter Property="BorderBrush"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.MouseOver.Outer.BorderBrush}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.MouseOver.Outer.Background}"/>
                </dxn:RenderStateTrigger>
                <dxn:RenderStateTrigger Name="Pressed">
                    <dxn:RenderSetter Property="BorderBrush"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.Pressed.Outer.BorderBrush}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.Pressed.Outer.Background}"/>
                </dxn:RenderStateTrigger>
                <dxn:RenderStateTrigger Name="Disabled"/>
            </dxn:RenderStateGroup>
            <dxn:RenderStateGroup Name="CheckedStates">
                <dxn:RenderStateTrigger Name="Unchecked"/>
                <dxn:RenderStateTrigger Name="Checked">
                    <dxn:RenderSetter Property="BorderBrush"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.Pressed.Outer.BorderBrush}"/>
                    <dxn:RenderSetter Property="Background"
                                      TargetName="Outer"
                                      Value="{StaticResource Button.Pressed.Outer.Background}"/>
                </dxn:RenderStateTrigger>
            </dxn:RenderStateGroup>
        </dxn:RenderTemplate.Triggers>
    </dxn:RenderTemplate>

</ResourceDictionary>