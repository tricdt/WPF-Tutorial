<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxeh="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
                    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--BEGIN WPF-->

    <ResourceDictionary.MergedDictionaries>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.HybridApp.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/Generic/PasswordBoxEdit.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--END WPF-->

    <SolidColorBrush x:Key="PasswordBoxSelectionBackground" Color="#FF0099FF"/>

    <!--PROCESS SETTERS WITH BINDING-->

    <!--ONLY SL
    <dxeh:TextBoxPaddingConverter x:Key="TextBoxPaddingConverter" />
    ONLY SL-->

    <dxeh:HorizontalContentAlignmentToTextAlignmentConverter x:Key="HorizontalContentAlignmentToTextAlignmentConverter"/>

    <dx:EditorStringIdConverter x:Key="EditorStringIdConverter"/>

    <ControlTemplate x:Key="{dxet:PasswordBoxEditThemeKey ResourceKey=PasswordBoxTemplate}" TargetType="{x:Type PasswordBox}">
        <!--BEGIN WPF-->
        <Border Background="{TemplateBinding Background}">
            <ScrollViewer x:Name="PART_ContentHost"
                          Focusable="False"
                          Padding="{TemplateBinding Padding}"
                          SnapsToDevicePixels="True"
                          Template="{DynamicResource {dxet:EditorListBoxThemeKey ResourceKey=ScrollViewerTemplate}}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#7F191919"/>
            </Trigger>
        </ControlTemplate.Triggers>
        <!--END WPF-->
        <!--ONLY SL
            <Border Background="{TemplateBinding Background}">
                <ScrollViewer x:Name="ContentElement" 
                        dx:StyleManager.ApplyApplicationTheme="True" 
                        BorderThickness="0" IsTabStop="False" 
                        Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TextBoxPaddingConverter}}"
                        Template="{DynamicResource {dxet:EditorListBoxThemeKey ResourceKey=ScrollViewerTemplate}}"
                        VerticalScrollBarVisibility="Hidden"/>
            </Border>
        ONLY SL-->
    </ControlTemplate>

    <DataTemplate x:Key="{dxet:PasswordBoxEditThemeKey ResourceKey=ShowPasswordButtonTemplate}">
        <Image Source="{dx:SvgImageSource Uri={dx:EditorsResource Images/PasswordBoxEdit/Show.svg}}" Height="16" Width="16"/>
    </DataTemplate>

    <Style x:Key="{dxet:PasswordBoxEditThemeKey ResourceKey=PasswordBoxStyle}" TargetType="{x:Type PasswordBox}">
        <Setter Property="Template" Value="{DynamicResource {dxet:PasswordBoxEditThemeKey ResourceKey=PasswordBoxTemplate}}"/>
        <Setter Property="Background" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).Background}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="IsTabStop" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).IsTabStop}"/>
        <Setter Property="Padding" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).Padding}"/>
        <Setter Property="CaretBrush" Value="#FF191919"/>
        <!--BEGIN WPF-->
        <Setter Property="SelectionBrush" Value="#FF2F51A5"/>
        <Setter Property="SelectionOpacity" Value="0.6"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).VerticalContentAlignment}"/>
        <Setter Property="TextBlock.TextAlignment" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).HorizontalContentAlignment, Converter={StaticResource HorizontalContentAlignmentToTextAlignmentConverter}}"/>
        <Setter Property="ContextMenu" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).ContextMenu}"/>
        <Setter Property="Focusable" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).Focusable}"/>
        <Setter Property="Foreground" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).Foreground}"/>
        <Setter Property="MaxLength" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).MaxLength}"/>
        <Setter Property="Opacity" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).IsNullTextVisible, Converter={dx:BoolToVisibilityViaOpacityConverter Invert=true}}"/>
        <Setter Property="PasswordChar" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).PasswordChar}"/>
        <Setter Property="dxeh:EditorMarginHelper.Margin" Value="3,3,3,3,0,3,3,3"/>
        <!--END WPF-->
        <!--ONLY SL
        <Setter Property="SelectionBackground" Value="{StaticResource PasswordBoxSelectionBackground}" />
        <Setter Property="dxeh:ControlHelper.ClearDefaultStyleKey" Value="True"/>
        <Setter Property="dxeh:EditorMarginHelper.Margin" Value="3,3,3,3,0,3,3,3"/>
        ONLY SL-->
    </Style>

    <Style x:Key="{dxet:PasswordBoxEditThemeKey ResourceKey=NullTextEditorStyle}" TargetType="{x:Type TextBlock}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <!--BEGIN WPF-->
        <Setter Property="KeyboardNavigation.IsTabStop" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).IsTabStop, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Background" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).Background, RelativeSource={RelativeSource TemplatedParent}}"/>
        <!--END WPF-->
        <Setter Property="Foreground" Value="{DynamicResource {dxet:TextEditThemeKey ResourceKey=NullTextForeground}}"/>
        <Setter Property="VerticalAlignment" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).VerticalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="HorizontalAlignment" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).HorizontalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="Padding" Value="2,0,2,0"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>
    
    <Style x:Key="{dxet:PasswordBoxEditThemeKey ResourceKey=PreviewTextEditorStyle}" TargetType="{x:Type TextBlock}">
        <Setter Property="IsHitTestVisible" Value="False"/>
        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="4,0"/>
        <Setter Property="Padding" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).Padding}"/>
        </Style>

</ResourceDictionary>