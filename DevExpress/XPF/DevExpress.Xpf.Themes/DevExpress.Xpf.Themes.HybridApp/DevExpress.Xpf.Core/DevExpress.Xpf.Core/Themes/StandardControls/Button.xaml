<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.HybridApp.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/Generic/Buttons.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=System.Windows.Controls.Button}"
           BasedOn="{StaticResource {x:Type Button}}"
           TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="11,2,11,2"/>
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=Foreground}}"/>
        <Setter Property="Template" Value="{DynamicResource {dxt:ButtonThemeKey ResourceKey=ButtonControlTemplate}}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding" Value="27,12,27,12"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="ToggleButton.IsChecked" Value="False"/>
                    <Condition Property="IsPressed" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=MouseOverForeground}}"/>
            </MultiTrigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=CheckedForeground}}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=PressedForeground}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=System.Windows.Controls.Primitives.ToggleButton}"
           BasedOn="{StaticResource {x:Type ToggleButton}}"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Padding" Value="11,2,11,2"/>
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=Foreground}}"/>
        <Setter Property="Template" Value="{DynamicResource {dxt:ButtonThemeKey ResourceKey=ButtonBaseControlTemplate}}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding" Value="27,12,27,12"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="ToggleButton.IsChecked" Value="False"/>
                    <Condition Property="IsPressed" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=MouseOverForeground}}"/>
            </MultiTrigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=CheckedForeground}}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=PressedForeground}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=System.Windows.Controls.Primitives.RepeatButton}"
           BasedOn="{StaticResource {x:Type RepeatButton}}"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="Padding" Value="11,2,11,2"/>
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=Foreground}}"/>
        <Setter Property="Template" Value="{DynamicResource {dxt:ButtonThemeKey ResourceKey=ButtonBaseControlTemplate}}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding" Value="27,12,27,12"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="ToggleButton.IsChecked" Value="False"/>
                    <Condition Property="IsPressed" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=MouseOverForeground}}"/>
            </MultiTrigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=CheckedForeground}}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=PressedForeground}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="simpleButtonBaseStyle" TargetType="{x:Type dx:SimpleButton}">
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=Foreground}}"/>
        <Setter Property="GlyphToContentOffset" Value="5"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxt:BrushesThemeKey ResourceKey=ContrastSvgPalette}}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.DropDownButton}"
           BasedOn="{StaticResource simpleButtonBaseStyle}"
           TargetType="{x:Type dx:DropDownButton}">
        <Setter Property="Padding" Value="10,3,10,3"/>
        <Setter Property="ArrowPadding" Value="0,3,10,3"/>
        <Setter Property="ArrowAlignment" Value="Right"/>
        <Setter Property="Template" Value="{DynamicResource {dxt:DropDownButtonThemeKey ResourceKey=DropDownButtonTemplate}}"/>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding" Value="27,13,27,13"/>
                <Setter Property="ArrowPadding" Value="0,13,27,13"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="ToggleButton.IsChecked" Value="False"/>
                    <Condition Property="IsPressed" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=MouseOverForeground}}"/>
            </MultiTrigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=CheckedForeground}}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=PressedForeground}}"/>
            </Trigger>
            <Trigger Property="ButtonKind" Value="Repeat">
                <Setter Property="ClickMode" Value="Press"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.SplitButton}"
           BasedOn="{StaticResource simpleButtonBaseStyle}"
           TargetType="{x:Type dx:SplitButton}">
        <Setter Property="Padding" Value="10,3,10,3"/>
        <Setter Property="ArrowPadding" Value="10,3,10,3"/>
        <Setter Property="ArrowAlignment" Value="Right"/>
        <Setter Property="SeparatorThickness" Value="1"/>
        <Setter Property="ArrowBorderThickness" Value="1"/>
        <Setter Property="Template" Value="{DynamicResource {dxt:DropDownButtonThemeKey ResourceKey=SplitButtonTemplate}}"/>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding" Value="27,13,27,13"/>
                <Setter Property="ArrowPadding" Value="27,13,27,13"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="ToggleButton.IsChecked" Value="False"/>
                    <Condition Property="IsPressed" Value="False"/>
                    <Condition Property="IsMouseOverArrow" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=MouseOverForeground}}"/>
            </MultiTrigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=CheckedForeground}}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsPressed" Value="True"/>
                    <Condition Property="IsMouseOverArrow" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=PressedForeground}}"/>
            </MultiTrigger>
            <Trigger Property="ButtonKind" Value="Repeat">
                <Setter Property="ClickMode" Value="Press"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.SimpleButton}"
           BasedOn="{StaticResource simpleButtonBaseStyle}"
           TargetType="{x:Type dx:SimpleButton}">
        <Setter Property="Padding" Value="10,1,10,1"/>
        <Setter Property="Template" Value="{DynamicResource {dxt:ButtonThemeKey ResourceKey=ButtonControlTemplate}}"/>
        <Setter Property="GlyphToContentOffset" Value="5"/>
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Padding" Value="27,11,27,11"/>
            </Trigger>
            <Trigger Property="Content" Value="{x:Null}">
                <Setter Property="Padding" Value="0"/>
                <Setter Property="GlyphToContentOffset" Value="0"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="ToggleButton.IsChecked" Value="False"/>
                    <Condition Property="IsPressed" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=MouseOverForeground}}"/>
            </MultiTrigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=CheckedForeground}}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey={dxt:DropDownButtonThemeKey ResourceKey=PressedForeground}}"/>
            </Trigger>
            <Trigger Property="ButtonKind" Value="Repeat">
                <Setter Property="ClickMode" Value="Press"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--ThemedWindowDialogButtonStyle-->

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.ThemedWindowDialogButton}"
           BasedOn="{StaticResource {dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.SimpleButton}}"
           TargetType="{x:Type dx:ThemedWindowDialogButton}">
        <Setter Property="MinHeight" Value="22"/>
        <Setter Property="MinWidth" Value="70"/>
        <Setter Property="Margin" Value="2,0,2,0"/>
        <Setter Property="AutomationProperties.AutomationId" Value="{Binding Path=Content, RelativeSource={RelativeSource Self}, Converter={dx:ThemedDialogButtonNameConverter}, FallbackValue={x:Static system:String.Empty}, TargetNullValue={x:Static system:String.Empty}}"/>
        <Setter Property="AutomationProperties.Name" Value="{Binding Path=Content, RelativeSource={RelativeSource Self}, FallbackValue={x:Static system:String.Empty}, TargetNullValue={x:Static system:String.Empty}}"/>
        <Setter Property="GlyphHeight" Value="16"/>
    </Style>

</ResourceDictionary>