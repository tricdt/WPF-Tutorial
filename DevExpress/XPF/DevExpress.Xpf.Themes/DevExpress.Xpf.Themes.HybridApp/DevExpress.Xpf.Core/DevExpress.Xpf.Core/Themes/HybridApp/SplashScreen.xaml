<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <dx:WpfSvgPalette x:Key="ThemedSplashScreen.LogoPalette">
        <SolidColorBrush x:Key="BlackColor" Color="#FF92A1CA"/>
        <SolidColorBrush x:Key="WhiteColor" Color="#50000000"/>
    </dx:WpfSvgPalette>

    <SolidColorBrush x:Key="ProgressBarIndicatorBrush" Color="#FF92A1CA"/>

    <SolidColorBrush x:Key="ProgressBarBackgroundBrush" Color="#FFF0F0F0"/>

    <SolidColorBrush x:Key="ProgressBarBorderBrush" Color="#FFCCCCCC"/>

    <Style x:Key="{dxt:SplashScreenThemeKey ResourceKey=TopRegionStyle}" TargetType="Border">
        <Setter Property="Background" Value="#FF3F3F3F"/>
        <Setter Property="TextBlock.Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="#FF3F3F3F"/>
        <Setter Property="BorderThickness" Value="1,1,1,0"/>
    </Style>

    <Style x:Key="{dxt:SplashScreenThemeKey ResourceKey=BottomRegionStyle}" TargetType="Border">
        <Setter Property="Background" Value="#FFE8E8E8"/>
        <Setter Property="TextBlock.Foreground" Value="Black"/>
        <Setter Property="BorderBrush" Value="#FFCCCCCC"/>
        <Setter Property="BorderThickness" Value="1,0,1,1"/>
        <Setter Property="Height" Value="148"/>
    </Style>

    <Style x:Key="{dxt:SplashScreenThemeKey ResourceKey=ProgressBarStyle}" TargetType="ProgressBar">
        <Setter Property="Foreground" Value="{StaticResource ProgressBarIndicatorBrush}"/>
        <Setter Property="Background" Value="{StaticResource ProgressBarBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ProgressBarBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Width" Value="350"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Margin" Value="0,0,0,6"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid x:Name="Root">
                        <dxn:SplashScreenBorder Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid x:Name="PART_Track" Margin="1">
                                <Grid x:Name="PART_Indicator"
                                      ClipToBounds="True"
                                      HorizontalAlignment="Left">
                                    <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}"/>
                                    <Rectangle x:Name="Animation"
                                               Fill="{TemplateBinding Foreground}"
                                               RenderTransformOrigin="-0.5,0.5"
                                               Visibility="Collapsed">
                                        <Rectangle.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="0.25"/>
                                            </TransformGroup>
                                        </Rectangle.RenderTransform>
                                    </Rectangle>
                                </Grid>
                            </Grid>
                        </dxn:SplashScreenBorder>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                            <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="Root">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter Property="Visibility"
                                    TargetName="Indicator"
                                    Value="Collapsed"/>
                            <Setter Property="Visibility"
                                    TargetName="Animation"
                                    Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="WaitIndicatorProgressBarTemplate" TargetType="{x:Type ProgressBar}">
        <Grid x:Name="TemplateRoot" SnapsToDevicePixels="true">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Determinate"/>
                    <VisualState x:Name="Indeterminate">
                        <Storyboard Timeline.DesiredFrameRate="{x:Static dx:WaitIndicator.DesiredFrameRate}">
                            <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever"
                                                           Storyboard.TargetName="grid"
                                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="359"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="grid"
                  Height="30"
                  RenderTransformOrigin="0.5,0.5"
                  Width="28">
                <Grid.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Grid.RenderTransform>
                <Ellipse Fill="#7F2E4D9E"
                         Margin="11,0,9,22"
                         Stretch="Fill"/>
                <Ellipse Fill="#7F2E4D9E"
                         Margin="0,13,22,11"
                         Opacity="0.7"
                         Stretch="Fill"/>
                <Ellipse Fill="#7F2E4D9E"
                         Margin="13,26,11,0"
                         Opacity="0.5"
                         Stretch="Fill"/>
                <Ellipse Fill="#7F2E4D9E"
                         Margin="26,15,0,13"
                         Opacity="0.3"
                         Stretch="Fill"/>
                <Ellipse Fill="#7F2E4D9E"
                         Margin="23,6,3,22"
                         Opacity="0.2"
                         Stretch="Fill"/>
                <Ellipse Fill="#7F2E4D9E"
                         Margin="3,4,18,19"
                         Opacity="0.8"
                         Stretch="Fill"/>
                <Ellipse Fill="#7F2E4D9E"
                         Margin="4,21,19,4"
                         Opacity="0.6"
                         Stretch="Fill"/>
                <Ellipse Fill="#7F2E4D9E"
                         Margin="22,23,3,4"
                         Opacity="0.4"
                         Stretch="Fill"/>
            </Grid>
        </Grid>
    </ControlTemplate>

    <Style x:Key="{dxt:SplashScreenThemeKey ResourceKey=WaitIndicatorProgressBarStyle}" TargetType="ProgressBar">
        <Setter Property="Template" Value="{StaticResource WaitIndicatorProgressBarTemplate}"/>
        <Setter Property="IsIndeterminate" Value="True"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="24,24,12,24"/>
        <Setter Property="Foreground" Value="#FF2F51A5"/>
        <Setter Property="BorderBrush" Value="#FF2F51A5"/>
        <Setter Property="BorderThickness" Value="4"/>
        <Setter Property="Background" Value="#FFFFFFFF"/>
    </Style>

    <ControlTemplate x:Key="WaitIndicatorContainerTemplate" TargetType="ContentControl">
        <dxn:SplashScreenBorder x:Name="Root"
                                Background="#FFF6F6F6"
                                BorderBrush="#FF7582A1"
                                BorderThickness="1">
            <ContentPresenter/>
        </dxn:SplashScreenBorder>
    </ControlTemplate>

    <Style x:Key="{dxt:SplashScreenThemeKey ResourceKey=WaitIndicatorContainerStyle}" TargetType="ContentControl">
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template" Value="{StaticResource WaitIndicatorContainerTemplate}"/>
    </Style>

    <Style x:Key="{dxt:SplashScreenThemeKey ResourceKey=WaitIndicatorStatusTextBoxStyle}" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#FF191919"/>
        <Setter Property="Margin" Value="0,0,40,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

</ResourceDictionary>