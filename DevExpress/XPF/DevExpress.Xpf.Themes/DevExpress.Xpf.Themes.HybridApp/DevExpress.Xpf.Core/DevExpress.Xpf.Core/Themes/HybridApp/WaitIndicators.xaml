<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <dx:EditorStringIdConverter x:Key="EditorStringIdConverter"/>

    <ControlTemplate x:Key="DefaultWaitIndicator" TargetType="{x:Type ProgressBar}">
        <Grid x:Name="TemplateRoot" SnapsToDevicePixels="true">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Determinate"/>
                    <VisualState x:Name="Indeterminate">
                        <Storyboard Timeline.DesiredFrameRate="{x:Static dx:WaitIndicator.DesiredFrameRate}">
                            <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever"
                                                           Storyboard.TargetName="grid"
                                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="359"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="grid"
                  Height="30"
                  RenderTransformOrigin="0.5,0.5"
                  Width="28">
                <Grid.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Grid.RenderTransform>
                <Ellipse Fill="#7F2E4D9E"
                         Margin="11,0,9,22"
                         Stretch="Fill"/>
                <Ellipse Fill="#7F2E4D9E"
                         Margin="0,13,22,11"
                         Opacity="0.7"
                         Stretch="Fill"/>
                <Ellipse Fill="#7F2E4D9E"
                         Margin="13,26,11,0"
                         Opacity="0.5"
                         Stretch="Fill"/>
                <Ellipse Fill="#7F2E4D9E"
                         Margin="26,15,0,13"
                         Opacity="0.3"
                         Stretch="Fill"/>
                <Ellipse Fill="#7F2E4D9E"
                         Margin="23,6,3,22"
                         Opacity="0.2"
                         Stretch="Fill"/>
                <Ellipse Fill="#7F2E4D9E"
                         Margin="3,4,18,19"
                         Opacity="0.8"
                         Stretch="Fill"/>
                <Ellipse Fill="#7F2E4D9E"
                         Margin="4,21,19,4"
                         Opacity="0.6"
                         Stretch="Fill"/>
                <Ellipse Fill="#7F2E4D9E"
                         Margin="22,23,3,4"
                         Opacity="0.4"
                         Stretch="Fill"/>
            </Grid>
        </Grid>
    </ControlTemplate>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.ColumnWaitIndicator}" TargetType="{x:Type dx:ColumnWaitIndicator}">
        <Setter Property="IsHitTestVisible" Value="{Binding IsHitTestVisible, FallbackValue=true, TargetNullValue=true}"/>
        <Setter Property="IsIndeterminate" Value="True"/>
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="BorderBrush" Value="#FF2F51A5"/>
        <Setter Property="Foreground" Value="#FF2F51A5"/>
        <Setter Property="BorderThickness" Value="4"/>
        <Setter Property="Margin" Value="12"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template" Value="{StaticResource DefaultWaitIndicator}"/>
    </Style>

    <ControlTemplate x:Key="{dx:WaitIndicatorThemeKey ResourceKey=WaitIndicatorContainerTemplate}" TargetType="{x:Type dx:WaitIndicatorContainer}">
        <Grid>
            <Border x:Name="Root"
                    Background="#FFF6F6F6"
                    BorderBrush="#FF7582A1"
                    BorderThickness="1">
                <ContentPresenter/>
            </Border>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dx:WaitIndicatorThemeKey ResourceKey=WaitIndicatorTemplate}" TargetType="{x:Type dx:WaitIndicator}">
        <Grid x:Name="Root"
              Background="Red"
              HorizontalAlignment="Center"
              Margin="{TemplateBinding ContentPadding}"
              VerticalAlignment="Center"
              Visibility="Collapsed">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="Visibility">
                    <VisualState x:Name="Visible">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.1">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <!--BEGIN WPF-->
                            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="progressBar" Storyboard.TargetProperty="IsIndeterminate">
                                <DiscreteBooleanKeyFrame KeyTime="0:0:0.1" Value="True"/>
                            </BooleanAnimationUsingKeyFrames>
                            <!--END WPF-->
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Collapsed">
                        <Storyboard>
                            <DoubleAnimation BeginTime="0:0:0.1"
                                             Duration="0:0:0.1"
                                             From="1"
                                             Storyboard.TargetName="Root"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <!--BEGIN WPF-->
                            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="progressBar" Storyboard.TargetProperty="IsIndeterminate">
                                <DiscreteBooleanKeyFrame KeyTime="0:0:0.1" Value="False"/>
                            </BooleanAnimationUsingKeyFrames>
                            <!--END WPF-->
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <dx:WaitIndicatorContainer>
                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <ProgressBar x:Name="progressBar"
                                 Background="#FFFFFFFF"
                                 BorderBrush="#FF2F51A5"
                                 BorderThickness="4"
                                 Foreground="#FF2F51A5"
                                 HorizontalAlignment="Center"
                                 IsIndeterminate="True"
                                 Margin="24,24,12,24"
                                 Template="{StaticResource DefaultWaitIndicator}"
                                 VerticalAlignment="Center"/>
                    <ContentPresenter Content="{TemplateBinding ActualContent}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      Grid.Column="1"
                                      Margin="{TemplateBinding Padding}"
                                      VerticalAlignment="Center"/>
                </Grid>
            </dx:WaitIndicatorContainer>
        </Grid>
    </ControlTemplate>

    <DataTemplate x:Key="{dx:WaitIndicatorThemeKey ResourceKey=WaitIndicatorContentTemplate}">
        <TextBlock Text="{Binding}"
                   TextWrapping="Wrap"
                   VerticalAlignment="Center"/>
    </DataTemplate>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.WaitIndicatorContainer}" TargetType="{x:Type dx:WaitIndicatorContainer}">
        <Setter Property="Template" Value="{DynamicResource {dx:WaitIndicatorThemeKey ResourceKey=WaitIndicatorContainerTemplate}}"/>
        <Setter Property="Foreground" Value="#FF191919"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.WaitIndicator}" TargetType="{x:Type dx:WaitIndicator}">
        <Setter Property="Template" Value="{DynamicResource {dx:WaitIndicatorThemeKey ResourceKey=WaitIndicatorTemplate}}"/>
        <Setter Property="Padding" Value="0,0,40,0"/>
        <Setter Property="ContentPadding" Value="25"/>
        <Setter Property="Content" Value="{x:Null}"/>
        <Setter Property="ContentTemplate" Value="{DynamicResource {dx:WaitIndicatorThemeKey ResourceKey=WaitIndicatorContentTemplate}}"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
    </Style>

</ResourceDictionary>