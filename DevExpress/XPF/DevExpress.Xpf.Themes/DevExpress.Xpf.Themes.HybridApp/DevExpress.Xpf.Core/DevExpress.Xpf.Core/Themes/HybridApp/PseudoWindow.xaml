<ResourceDictionary mc:Ignorable="cs"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:input="clr-namespace:System.Windows.Input;assembly=PresentationCore"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.HybridApp.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/Generic/PseudoWindow.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--InactiveHeaderOpacity-->

    <sys:Double x:Key="{dxt:DXWindowThemeKey ResourceKey=InactiveHeaderOpacity}">1.0</sys:Double>

    <!--Thickness-->

    <Thickness x:Key="{dxt:DXWindowThemeKey ResourceKey=ResizeBorderThickness}">4</Thickness>

    <Thickness x:Key="{dxt:DXWindowThemeKey ResourceKey = BorderEffectOffset}">1</Thickness>

    <Thickness x:Key="{dxt:DXWindowThemeKey ResourceKey = BorderEffectLeftMargins}">0, 10, 0, 10</Thickness>

    <Thickness x:Key="{dxt:DXWindowThemeKey ResourceKey = BorderEffectRightMargins}">0, 10, 0, 10</Thickness>

    <Thickness x:Key="{dxt:DXWindowThemeKey ResourceKey = BorderEffectTopMargins}">0</Thickness>

    <Thickness x:Key="{dxt:DXWindowThemeKey ResourceKey = BorderEffectBottomMargins}">0</Thickness>

    <Thickness x:Key="{dxt:DXWindowThemeKey ResourceKey=SizeGripMargin}">1,0,1,1</Thickness>

    <sys:Double x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingContainerClipCornerRadius}">0</sys:Double>

    <Thickness x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingContainerBodyMargin}">0</Thickness>

    <Thickness x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingContainerBorderPadding}">1</Thickness>

    <Thickness x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderDockMargin}">0</Thickness>

    <Thickness x:Key="{dxt:FloatingContainerThemeKey ResourceKey=HeaderItemsControlMargin}">0</Thickness>

    <!--Brushes-->

    <SolidColorBrush x:Key="{dxt:DXWindowThemeKey ResourceKey = BorderEffectActiveColor}" Color="#FF3F3F3F"/>

    <SolidColorBrush x:Key="{dxt:DXWindowThemeKey ResourceKey = BorderEffectInactiveColor}" Color="#FF3F3F3F"/>

    <SolidColorBrush x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingContainerActiveBodyBorder}" Color="Transparent"/>

    <SolidColorBrush x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingContainerInactiveBodyBorder}" Color="Transparent"/>

    <SolidColorBrush x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingContainerBorder}" Color="#FF3F3F3F"/>

    <SolidColorBrush x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingContainerInactiveBorder}" Color="#FF7F7F7F"/>

    <SolidColorBrush x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingContainerBackground}" Color="#FF3F3F3F"/>

    <SolidColorBrush x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingContainerInactiveBackground}" Color="#FF3F3F3F"/>

    <SolidColorBrush x:Key="{dxt:DXWindowThemeKey ResourceKey=ActiveHeaderBackground}" Color="#FF3F3F3F"/>

    <SolidColorBrush x:Key="{dxt:DXWindowThemeKey ResourceKey=InactiveHeaderBackground}" Color="#FF3F3F3F"/>

    <SolidColorBrush x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonForegroundNormalState}" Color="#FFFFFFFF"/>

    <SolidColorBrush x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonForegroundMouseOverState}" Color="#7FFFFFFF"/>

    <SolidColorBrush x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonForegroundPressedState}" Color="#7FFFFFFF"/>

    <SolidColorBrush x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonForegroundNormalState}" Color="#FFFFFFFF"/>

    <SolidColorBrush x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonForegroundMouseOverState}" Color="#7FFFFFFF"/>

    <SolidColorBrush x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonForegroundPressedState}" Color="#7FFFFFFF"/>

    <!--DragwigetTemplate-->

    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ThemeName=HybridApp, ResourceKey=FloatingContainerDragWidgetTemplate}" TargetType="{x:Type Thumb}">
        <Border Background="#00000000"/>
    </ControlTemplate>

    <!--SizeGripTemplate-->

    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ThemeName=HybridApp, ResourceKey=FloatingContainerSizeGripTemplate}" TargetType="{x:Type Thumb}">
        <Grid Background="#00000000"
              HorizontalAlignment="Right"
              Margin="2"
              SnapsToDevicePixels="True"
              VerticalAlignment="Bottom">
            <Path Data="F1 M 671,130L 673,130L 673,132L 671,132L 671,130 Z M 674,130L 676,130L 676,132L 674,132L 674,130 Z M 677,130L 679,130L 679,132L 677,132L 677,130 Z M 677,127L 679,127L 679,129L 677,129L 677,127 Z M 677,124L 679,124L 679,126L 677,126L 677,124 Z M 674,127L 676,127L 676,129L 674,129L 674,127 Z "
                  Fill="#FFC3C3C3"
                  Height="8"
                  Stretch="Fill"
                  Width="8"/>
        </Grid>
    </ControlTemplate>

    <!--CaptionTemplate-->

    <DataTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCaptionTemplate}">
        <Grid x:Name="Root" Height="Auto">
            <dxc:DXWindowSmartCenteringPanel>
                <TextBlock x:Name="PART_Text"
                           FontSize="16"
                           FontWeight="Light"
                           Foreground="#FFFFFFFF"
                           HorizontalAlignment="Center"
                           IsHitTestVisible="False"
                           Text="{Binding Path=(dxc:FloatingContainer.FloatingContainer).Caption, RelativeSource={RelativeSource AncestorType=ContentPresenter}}"
                           TextTrimming="CharacterEllipsis"
                           VerticalAlignment="Center"/>
            </dxc:DXWindowSmartCenteringPanel>
        </Grid>
    </DataTemplate>

    <!--WindowBordersTemplate-->

    <ControlTemplate x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingActiveBorder}">
        <Border Background="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingContainerBorder}}" Padding="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingContainerBorderPadding}}">
            <Border Background="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingContainerBackground}}"/>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingInactiveBorder}">
        <Border Background="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingContainerInactiveBorder}}" Padding="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingContainerBorderPadding}}">
            <Border Background="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingContainerInactiveBackground}}"/>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingBackground}">
        <Border Background="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingContainerActiveBodyBorder}}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxt:DXWindowThemeKey ResourceKey=InactiveFloatingBackground}">
        <Border Background="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingContainerInactiveBodyBorder}}"/>
    </ControlTemplate>

    <!--CloseButtonGlyphTemplate-->

    <DataTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonGlyph}">
        <Grid x:Name="Glyph"
              Height="10"
              Width="10">
            <Path x:Name="Path"
                  Data="F1 M 1,2L 2,1L 6,5L 10,1L 11,2L 7,6L 11,10L 10,11L 6,7L 2,11L 1,10L 5,6L 1,2 Z "
                  Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}"
                  Stretch="Fill"/>
        </Grid>
    </DataTemplate>

    <!--RestoreButtonGlyphTemplate-->

    <DataTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerRestoreButtonGlyph}">
        <Grid x:Name="Glyph"
              Height="12"
              Width="12">
            <Path x:Name="Path"
                  Data="F1 M 1.98682e-008,12L 1.98682e-008,4L 8,4L 8,12L 1.98682e-008,12 Z M 1,7L 1,11L 7,11L 7,7L 1,7 Z M 4,2.86102e-006L 12,2.86102e-006L 12,8L 8.64583,8L 8.64583,7L 11,7L 11,3L 8.64583,3L 5,3L 4,3L 4,2.86102e-006 Z "
                  Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}"
                  Stretch="Fill"/>
        </Grid>
    </DataTemplate>

    <!--MinimizeButtonGlyphTemplate-->

    <DataTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerMinimizeButtonGlyph}">
        <Grid x:Name="Glyph"
              Height="2"
              Margin="0,0,0,-8"
              Width="12">
            <Rectangle x:Name="Path"
                       Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}"
                       Stretch="Fill"/>
        </Grid>
    </DataTemplate>

    <!--MaximizeButtonGlyphTemplate-->

    <DataTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerMaximizeButtonGlyph}">
        <Grid x:Name="Glyph"
              Height="12"
              Width="12">
            <Path x:Name="Path"
                  Data="F1 M 0,0L 12,0L 12,12L 0,12L 0,0 Z M 1,11L 11,11L 11,3L 1,3L 1,11 Z "
                  Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}"
                  Stretch="Fill"/>
        </Grid>
    </DataTemplate>

    <!--HeaderDefaultButton Normal Background-->

    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonBackgroundNormalState}"/>

    <!--HeaderCloseButton Normal Background-->

    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonBackgroundNormalState}"/>

    <!--HeaderDefaultButton MouseOver Background-->

    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonBackgroundMouseOverState}">
        <Border x:Name="HoverState"
                Background="#FFF6F6F6"
                Opacity="0"/>
    </ControlTemplate>

    <!--HeaderCloseButton MouseOver Background-->

    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonBackgroundMouseOverState}"/>

    <!--HeaderDefaultButton Pressed Background-->

    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonBackgroundPressedState}">
        <Border x:Name="PressedState"
                Background="#FFE3E3E3"
                Opacity="0"/>
    </ControlTemplate>

    <!--HeaderCloseButton Pressed Background-->

    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonBackgroundPressedState}"/>

    <!--WindowTemplate-->

    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ThemeName=HybridApp, ResourceKey=FloatingContainerWindowTemplate}" TargetType="{x:Type dxc:FloatingContainerControl}">
        <dxc:FloatingWindowContainer Style="{DynamicResource {dxt:FloatingContainerThemeKey ThemeName=HybridApp, ResourceKey=FloatingContainerStyle}}"/>
    </ControlTemplate>

    <!--AdornerTemplate-->

    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ThemeName=HybridApp, ResourceKey=FloatingContainerAdornerTemplate}" TargetType="{x:Type dxc:FloatingContainerControl}">
        <dxc:FloatingAdornerContainer Style="{DynamicResource {dxt:FloatingContainerThemeKey ThemeName=HybridApp, ResourceKey=FloatingContainerStyle}}"/>
    </ControlTemplate>

    <!--DXWindowIconStyle-->

    <Style x:Key="{dxt:FloatingContainerThemeKey ResourceKey=DXWindowIconStyle}" TargetType="{x:Type Image}">
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Margin" Value="8,0,0,0"/>
        <Setter Property="Stretch" Value="Fill"/>
    </Style>

    <!--Base HeaderItem Style-->

    <Style x:Key="headerItemControlStyle"
           BasedOn="{StaticResource headerItemControlBaseStyle}"
           TargetType="{x:Type dxc:HeaderItemControl}">
        <Setter Property="MinWidth" Value="27"/>
        <Setter Property="MinHeight" Value="26"/>
    </Style>

    <!--FLOATING CONTAINER HEADER ITEMS STYLES-->

    <!--HeaderButtonStyle-->

    <Style x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderButtonStyle}"
           BasedOn="{StaticResource ResourceKey=headerItemControlStyle}"
           TargetType="{x:Type dxc:HeaderItemControl}">
        <Setter Property="Width" Value="27"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
    </Style>

    <!--HeaderCloseButtonStyle-->

    <Style x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderCloseButtonStyle}"
           BasedOn="{StaticResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderButtonStyle}}"
           TargetType="{x:Type dxc:HeaderItemControl}">
        <Setter Property="TemplateProvider" Value="{Binding Path=(dxc:HeaderItemControl.CloseTemplateProvider), RelativeSource={RelativeSource Self}}"/>
    </Style>

    <!--THEMEDWINDOW HEADER ITEMS STYLES-->

    <!--HeaderButtonStyle-->

    <Style x:Key="{dxt:ThemedWindowHeaderItemsThemeKey ResourceKey=HeaderButtonStyle}"
           BasedOn="{StaticResource ResourceKey=headerItemControlStyle}"
           TargetType="{x:Type dxc:HeaderItemControl}">
        <Setter Property="Width" Value="27"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
    </Style>

    <!--HeaderCloseButtonStyle-->

    <Style x:Key="{dxt:ThemedWindowHeaderItemsThemeKey ResourceKey=HeaderCloseButtonStyle}"
           BasedOn="{StaticResource ResourceKey={dxt:ThemedWindowHeaderItemsThemeKey ResourceKey=HeaderButtonStyle}}"
           TargetType="{x:Type dxc:HeaderItemControl}">
    </Style>

</ResourceDictionary>
