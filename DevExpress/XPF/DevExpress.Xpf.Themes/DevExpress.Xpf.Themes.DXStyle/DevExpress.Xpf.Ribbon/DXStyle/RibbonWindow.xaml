<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
                    xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxcore="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon"
                    xmlns:dxrt="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/themekeys"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <BooleanToVisibilityConverter x:Key="boolToVisibilityConverter"/>

    <Thickness x:Key="{dxrt:RibbonThemeKey ResourceKey=ResizeBorderThickness}">6</Thickness>

    <DataTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=RibbonFloatingContainerCaptionTemplate}">
        <Grid>
            <dxb:ContentViewport ClipToBounds="True" KeepPositiveLeftContentPosition="True">
                <TextBlock x:Name="TitleTextBlock"
                           Foreground="#FF5D5C6D"
                           HorizontalAlignment="Center"
                           IsHitTestVisible="False"
                           Margin="6,3,6,3"
                           Text="{Binding}"
                           TextWrapping="Wrap"
                           VerticalAlignment="Center">
                    <TextBlock.Effect>
                        <DropShadowEffect BlurRadius="0"
                                          Color="#FFFFFFFF"
                                          Opacity="0.5"
                                          ShadowDepth="1"/>
                    </TextBlock.Effect>
                </TextBlock>
            </dxb:ContentViewport>
        </Grid>
    </DataTemplate>

    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=RibbonShowModeSelectorItemStyle}" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="31"/>
        <Setter Property="Height" Value="17"/>
        <Setter Property="Template" Value="{DynamicResource {dxrt:RibbonThemeKey ResourceKey=RibbonShowModeSelectorItemTemplate}}"/>
    </Style>

    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=RibbonShowModeSelectorItemTemplate}" TargetType="{x:Type dxr:RibbonShowModeSelectorItem}">
        <Grid x:Name="Root" Margin="1">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalState" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverState" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedState" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="Root"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.35"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="NormalState"
                    Background="#FFACAEB6"
                    CornerRadius="2"
                    Visibility="Collapsed">
                <Border Background="#FFF3F3F6"
                        CornerRadius="1"
                        Margin="1">
                    <Border Margin="0,1,0,0">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFE4E5E9" Offset="0"/>
                                <GradientStop Color="#FFCDCED4" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                </Border>
            </Border>
            <Border x:Name="HoverState"
                    Background="#FFACAEB6"
                    CornerRadius="2"
                    Visibility="Collapsed">
                <Border Background="#FFF4F4F6"
                        CornerRadius="1"
                        Margin="1">
                    <Border Margin="0,1,0,0">
                        <Border.Background>
                            <RadialGradientBrush>
                                <RadialGradientBrush.RelativeTransform>
                                    <TransformGroup>
                                        <TranslateTransform X="0" Y="0.5"/>
                                    </TransformGroup>
                                </RadialGradientBrush.RelativeTransform>
                                <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                <GradientStop Color="#FFE3E5E9" Offset="1"/>
                            </RadialGradientBrush>
                        </Border.Background>
                    </Border>
                </Border>
            </Border>
            <Border x:Name="PressedState"
                    Background="#FF9FA2AB"
                    CornerRadius="2"
                    Visibility="Collapsed">
                <Border CornerRadius="1" Margin="1">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFC7C8CD" Offset="0"/>
                            <GradientStop Color="#FFC8C9CF" Offset="1"/>
                        </LinearGradientBrush>
                    </Border.Background>
                    <Border Margin="1">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFD5D6D9" Offset="0"/>
                                <GradientStop Color="#FFD1D2D8" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                </Border>
            </Border>
            <Grid x:Name="Glyph"
                  Height="8"
                  HorizontalAlignment="Center"
                  Margin="0,1,0,0"
                  VerticalAlignment="Center"
                  Width="8">
                <Path Data="F1 M 1,1L 9,1L 9,2L 5,2L 9,6L 6,6L 6,9L 4,9L 4,6L 1,6L 5,2L 1,2L 1,1 Z "
                      Fill="#FFF0F0F0"
                      Height="8"
                      Margin="1,1,-1,-1"
                      Stretch="Fill"
                      Width="8"/>
                <Path Data="F1 M 1,1L 9,1L 9,2L 5,2L 9,6L 6,6L 6,9L 4,9L 4,6L 1,6L 5,2L 1,2L 1,1 Z "
                      Fill="#FF80838F"
                      Height="8"
                      Stretch="Fill"
                      Width="8"/>
            </Grid>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=ShowAutoHidePopupButtonTemplate}" TargetType="{x:Type ToggleButton}">
        <Grid x:Name="Button" Margin="1">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalState" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HoverState" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedState" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="Root"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.35"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="NormalState"
                    Background="#FFACAEB6"
                    CornerRadius="2"
                    Visibility="Collapsed">
                <Border Background="#FFF3F3F6"
                        CornerRadius="1"
                        Margin="1">
                    <Border Margin="0,1,0,0">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFE4E5E9" Offset="0"/>
                                <GradientStop Color="#FFCDCED4" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                </Border>
            </Border>
            <Border x:Name="HoverState"
                    Background="#FFACAEB6"
                    CornerRadius="2"
                    Visibility="Collapsed">
                <Border Background="#FFF4F4F6"
                        CornerRadius="1"
                        Margin="1">
                    <Border Margin="0,1,0,0">
                        <Border.Background>
                            <RadialGradientBrush>
                                <RadialGradientBrush.RelativeTransform>
                                    <TransformGroup>
                                        <TranslateTransform X="0" Y="0.5"/>
                                    </TransformGroup>
                                </RadialGradientBrush.RelativeTransform>
                                <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                <GradientStop Color="#FFE3E5E9" Offset="1"/>
                            </RadialGradientBrush>
                        </Border.Background>
                    </Border>
                </Border>
            </Border>
            <Border x:Name="PressedState"
                    Background="#FF9FA2AB"
                    CornerRadius="2"
                    Visibility="Collapsed">
                <Border CornerRadius="1" Margin="1">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFC7C8CD" Offset="0"/>
                            <GradientStop Color="#FFC8C9CF" Offset="1"/>
                        </LinearGradientBrush>
                    </Border.Background>
                    <Border Margin="1">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFD5D6D9" Offset="0"/>
                                <GradientStop Color="#FFD1D2D8" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                </Border>
            </Border>
            <Grid x:Name="Glyph"
                  Height="9"
                  HorizontalAlignment="Right"
                  Margin="9,0,9,0"
                  VerticalAlignment="Center"
                  Width="13">
                <Path Data="F1 M 1,1L 4,1L 4,4L 1,4L 1,1 Z M 5,1L 8,1L 8,4L 5,4L 5,1 Z M 9,1L 12,1L 12,4L 9,4L 9,1 Z "
                      Fill="#FFF0F0F0"
                      Height="3"
                      Margin="1,1,0,0"
                      Stretch="Fill"
                      VerticalAlignment="Bottom"
                      Width="11"/>
                <Path Data="F1 M 1,1L 4,1L 4,4L 1,4L 1,1 Z M 5,1L 8,1L 8,4L 5,4L 5,1 Z M 9,1L 12,1L 12,4L 9,4L 9,1 Z "
                      Fill="#FF80838F"
                      Height="3"
                      Margin="1"
                      Stretch="Fill"
                      VerticalAlignment="Bottom"
                      Width="11"/>
            </Grid>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerBorderTemplate}" TargetType="{x:Type ContentControl}">
        <Grid>
            <Border Background="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerBackground}}" Margin="1"/>
            <Border x:Name="FloatingContainerBorder"
                    Background="#BF737782"
                    Padding="1">
                <Grid>
                    <Border x:Name="FloatingContainerBackground"
                            Background="#FFC8C9D0"
                            BorderBrush="#FFEDEDF0"
                            BorderThickness="0,1,0,0"/>
                    <ContentPresenter Grid.Row="0" Grid.RowSpan="2"/>
                </Grid>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxc:FloatingContainer.IsActive)}" Value="False">
                <Setter Property="Background"
                        TargetName="FloatingContainerBorder"
                        Value="#FF9DA0AA"/>
                <Setter Property="Background"
                        TargetName="FloatingContainerBackground"
                        Value="#FFD9DAE0"/>
                <Setter Property="BorderBrush"
                        TargetName="FloatingContainerBackground"
                        Value="#FFF1F2F4"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxr:RibbonControlHelper.IsAutoHide), RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                <Setter Property="Padding"
                        TargetName="FloatingContainerBorder"
                        Value="0"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerHeaderBorderTemplate}" TargetType="{x:Type ContentControl}">
        <Grid Background="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerBackground}}">
            <Border x:Name="PART_Header"
                    BorderBrush="#FFEDEDF0"
                    BorderThickness="0,1,0,0"
                    SnapsToDevicePixels="True">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFD9DAE0" Offset="0"/>
                        <GradientStop Color="#FFC8C9D0" Offset="1"/>
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxc:FloatingContainer.IsActive), RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="False">
                <Setter Property="Background" TargetName="PART_Header">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFE3E4E9" Offset="0"/>
                            <GradientStop Color="#FFD9DAE0" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush"
                        TargetName="PART_Header"
                        Value="#FFF1F2F4"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerContentTemplate}" TargetType="{x:Type ContentControl}">
        <Border x:Name="FloatingContainerBody"
                BorderBrush="#FFA8AAB4"
                BorderThickness="1">
            <Grid Background="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerBackground}}">
                <dxc:BackgroundPanel Content="{TemplateBinding Content}"
                                     ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                     ContentTemplate="{TemplateBinding ContentTemplate}"
                                     ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxc:FloatingContainer.IsActive)}" Value="False">
                <Setter Property="BorderBrush"
                        TargetName="FloatingContainerBody"
                        Value="#FFACAFB8"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerContentStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="Margin" Value="4,0,4,4"/>
    </Style>

    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerBodyTemplate}" TargetType="{x:Type ContentControl}">
        <ContentPresenter/>
    </ControlTemplate>

    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerBodyStyle}" TargetType="{x:Type ContentControl}"></Style>

    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerControlBoxStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="Margin" Value="4,7,4,1"/>
    </Style>

    <ControlTemplate x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerControlBoxTemplate}" TargetType="{x:Type ContentControl}">
        <ContentPresenter/>
    </ControlTemplate>

    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerCaptionStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="4,1,4,0"/>
        <Setter Property="Foreground" Value="#FF5C626A"/>
    </Style>

    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerIconAndCaptionAreaStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="{dxrt:RibbonThemeKey ResourceKey=FloatingContainerIconStyle}" TargetType="{x:Type Image}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Margin" Value="5,0,0,0"/>
        <Setter Property="Stretch" Value="Fill"/>
    </Style>

    <DataTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=RibbonFloatingContainerTemplate}">
        <Grid x:Name="Root" SnapsToDevicePixels="True">
            <Border x:Name="FloatingContainerBorder"
                    Background="#7F353535"
                    Padding="1">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Border x:Name="PART_Header"
                            BorderBrush="#FFEDEDF0"
                            BorderThickness="0,1,0,0"
                            Grid.Row="0">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFD9DAE0" Offset="0"/>
                                <GradientStop Color="#FFC8C9D0" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.Background>
                        <Grid Margin="4,4,4,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="PART_CaptionContentPresenter"
                                              Content="{Binding Path=Title, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}"
                                              ContentTemplate="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerCaptionTemplate}}"
                                              Grid.Column="0"
                                              Panel.ZIndex="100"
                                              Visibility="{Binding Path=IsCaptionVisible, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}, Converter={StaticResource boolToVisibilityConverter}}"/>
                            <ContentPresenter x:Name="PART_RibbonCaptionContentPresenter"
                                              Content="{Binding Path=Title, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}}"
                                              ContentTemplate="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=RibbonFloatingContainerCaptionTemplate}}"
                                              Grid.Column="0"
                                              HorizontalAlignment="Left"
                                              Panel.ZIndex="100"
                                              Visibility="{Binding Path=IsRibbonCaptionVisible, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type dxr:DXRibbonWindow}}, Converter={StaticResource boolToVisibilityConverter}}"/>
                            <StackPanel x:Name="stackPanel"
                                        Grid.Column="1"
                                        Margin="2"
                                        Orientation="Horizontal">
                                <Button x:Name="PART_Minimize"
                                        Focusable="False"
                                        Height="22"
                                        Template="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerMinimizeButtonTemplate}}"
                                        Width="22"/>
                                <Button x:Name="PART_Restore"
                                        Focusable="False"
                                        Height="22"
                                        Template="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerRestoreButtonTemplate}}"
                                        Visibility="{Binding Path=(dxc:FloatingContainer.IsMaximized), Converter={dxc:BooleanToVisibilityConverter Invert=False}}"
                                        Width="22"/>
                                <Button x:Name="PART_Maximize"
                                        Focusable="False"
                                        Height="22"
                                        Template="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerMaximizeButtonTemplate}}"
                                        Visibility="{Binding Path=(dxc:FloatingContainer.IsMaximized), Converter={dxc:BooleanToVisibilityConverter Invert=True}}"
                                        Width="22"/>
                                <Button x:Name="PART_CloseButton"
                                        Focusable="False"
                                        Height="22"
                                        Template="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonTemplate}}"
                                        Width="22"/>
                            </StackPanel>
                        </Grid>
                    </Border>
                    <Border x:Name="FloatingContainerBody"
                            Background="#FFC8C9D0"
                            Grid.Row="1"/>
                    <Border x:Name="FloatingContainerBodyBorder"
                            Background="#FFA8AAB4"
                            Grid.Row="1"
                            Margin="4,0,4,4"
                            Padding="1">
                        <Grid Background="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerBackground}}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ContentPresenter x:Name="PART_ContainerContent" Content="{Binding}"/>
                            <StackPanel x:Name="PART_StatusPanel"
                                        Grid.Row="0"
                                        VerticalAlignment="Bottom"
                                        Visibility="Collapsed">
                                <Border HorizontalAlignment="Right">
                                    <Thumb x:Name="PART_SizeGrip"
                                           Cursor="SizeNWSE"
                                           HorizontalAlignment="Right"
                                           Template="{DynamicResource {dxt:FloatingContainerThemeKey IsVisibleInBlend=True, ResourceKey=FloatingContainerSizeGripTemplate}}"
                                           VerticalAlignment="Bottom"/>
                                </Border>
                            </StackPanel>
                        </Grid>
                    </Border>
                </Grid>
            </Border>
            <Control x:Name="PART_ResizeFrame"
                     Focusable="False"
                     Template="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerResizeFrame}}"
                     Visibility="{Binding Path=(dxc:FloatingContainer.IsMaximized), Converter={dxc:BooleanToVisibilityConverter Invert=True}}"/>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxcore:FloatingContainer.IsActive)}" Value="False">
                <Setter Property="Background"
                        TargetName="FloatingContainerBorder"
                        Value="#FF9DA0AA"/>
                <Setter Property="Background" TargetName="PART_Header">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFE3E4E9" Offset="0"/>
                            <GradientStop Color="#FFD9DAE0" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush"
                        TargetName="PART_Header"
                        Value="#FFF1F2F4"/>
                <Setter Property="Background"
                        TargetName="FloatingContainerBody"
                        Value="#FFD9DAE0"/>
                <Setter Property="Background"
                        TargetName="FloatingContainerBodyBorder"
                        Value="#FFACAFB8"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxcore:FloatingContainer.FloatingContainer).AllowSizing, RelativeSource={RelativeSource Self}}" Value="false">
                <Setter Property="Visibility"
                        TargetName="PART_StatusPanel"
                        Value="Collapsed"/>
                <Setter Property="Visibility"
                        TargetName="PART_ResizeFrame"
                        Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(dxcore:FloatingContainer.IsMaximized)}" Value="True">
                <Setter Property="Padding"
                        TargetName="FloatingContainerBorder"
                        Value="0"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

</ResourceDictionary>