<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/DevExpress.Xpf.Themes.DXStyle.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/TabControl/Themes/Generic.xaml"/>
        <ResourceDictionary Source="/DevExpress.Xpf.Themes.DXStyle.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/TabControl/Themes/Generic.Window.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--Tab Button Background Templates-->

    <SolidColorBrush x:Key="Button.Normal.Background" Color="Transparent"/>

    <LinearGradientBrush x:Key="Button.Hover.BorderBrush1"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFCECFD5" Offset="0"/>
        <GradientStop Color="#FFCECFD5" Offset="1"/>
        <GradientStop Color="#FFACAFB8" Offset="0.25"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Button.Hover.BorderBrush2"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFF4F6FE" Offset="0"/>
        <GradientStop Color="#FFF4F6FE" Offset="1"/>
        <GradientStop Color="#FFECEFF7" Offset="0.25"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Button.Hover.Background"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFE5EBFF" Offset="0"/>
        <GradientStop Color="#FFE4EBFD" Offset="1"/>
        <GradientStop Color="#FFDEE6FE" Offset="0.25"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Button.Pressed.BorderBrush1"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFAEAFB5" Offset="0"/>
        <GradientStop Color="#FFAEAFB5" Offset="1"/>
        <GradientStop Color="#FF8C8F98" Offset="0.25"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Button.Pressed.BorderBrush2"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFF4F6FE" Offset="0"/>
        <GradientStop Color="#FFF4F6FE" Offset="1"/>
        <GradientStop Color="#FFECEFF7" Offset="0.25"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Button.Pressed.Background"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFE7EDFF" Offset="0"/>
        <GradientStop Color="#FFDEE6FE" Offset="1"/>
        <GradientStop Color="#FFD2DEFC" Offset="0.25"/>
    </LinearGradientBrush>

    <DataTemplate x:Key="{dxt:DXTabControlThemeKey ResourceKey=ButtonNormalBackground}">
        <Border Background="{StaticResource Button.Normal.Background}"/>
    </DataTemplate>

    <DataTemplate x:Key="{dxt:DXTabControlThemeKey ResourceKey=ButtonHoverBackground}">
        <Border Background="{StaticResource Button.Hover.BorderBrush1}"
                CornerRadius="2"
                Padding="1">
            <Border Background="{StaticResource Button.Hover.Background}"
                    BorderBrush="{StaticResource Button.Hover.BorderBrush2}"
                    BorderThickness="1"
                    CornerRadius="1"/>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="{dxt:DXTabControlThemeKey ResourceKey=ButtonPressedBackground}">
        <Border Background="{StaticResource Button.Pressed.BorderBrush1}"
                CornerRadius="2"
                Padding="1">
            <Border Background="{StaticResource Button.Pressed.Background}"
                    BorderBrush="{StaticResource Button.Pressed.BorderBrush2}"
                    BorderThickness="1"
                    CornerRadius="1"/>
        </Border>
    </DataTemplate>

    <!--Tab Button Styles-->

    <Style x:Key="TabControlGlyphCotnrolStyle"
           BasedOn="{StaticResource TabControlGlyphDefaultStyle}"
           TargetType="{x:Type dxcn:GlyphControl}">
        <Setter Property="GlyphCloseTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="dxcn:GlyphControl">
                    <Path x:Name="PART_Path"
                          Data="F1 M 76,144L 78,144L 74.5,147.5L 78,151L 76,151L 73.5,148.5L 71,151L 69,151L 72.5,147.5L 69,144L 71,144L 73.5,146.5L 76,144 Z"
                          Fill="{TemplateBinding Background}"
                          Height="7"
                          Margin="{TemplateBinding Padding}"
                          Stretch="Fill"
                          Width="9"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="Button.Normal.Foreground" Color="#FF80838F"/>

    <SolidColorBrush x:Key="Button.Hover.Foreground" Color="#FF201F35"/>

    <SolidColorBrush x:Key="Button.Pressed.Foreground" Color="#FF201F35"/>

    <Style x:Key="ButtonStyle"
           BasedOn="{StaticResource ButtonDefaultStyle}"
           TargetType="{x:Type ButtonBase}">
        <Setter Property="Foreground" Value="{StaticResource Button.Normal.Foreground}"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxcn:GlyphControl Background="{Binding (TextBlock.Foreground), RelativeSource={RelativeSource Self}}"
                                       GlyphViewInfo="{Binding}"
                                       Style="{StaticResource TabControlGlyphCotnrolStyle}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource Button.Hover.Foreground}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource Button.Pressed.Foreground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="HeaderPanelButtonStyle"
           BasedOn="{StaticResource ButtonStyle}"
           TargetType="{x:Type ButtonBase}">
        <Setter Property="dxcn:TabOrientablePanel.ChildMargin" Value="2,0,2,0"/>
        <Setter Property="Width" Value="17"/>
        <Setter Property="Height" Value="17"/>
    </Style>

    <Style x:Key="{dxt:DXTabItemThemeKey ResourceKey=CloseButtonStyle}"
           BasedOn="{StaticResource ButtonStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="Width" Value="14"/>
        <Setter Property="Height" Value="14"/>
        <Setter Property="Margin" Value="7,0,-3,0"/>
        <Setter Property="Content" Value="{dxcn:GlyphControlViewInfo Size=-1}"/>
    </Style>

    <Style x:Key="{dxt:DXTabControlThemeKey ResourceKey=CloseButtonStyle}"
           BasedOn="{StaticResource HeaderPanelButtonStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="Content" Value="{dxcn:GlyphControlViewInfo Size=0}"/>
    </Style>

    <Style x:Key="{dxt:DXTabControlThemeKey ResourceKey=PanelNewButtonStyle}"
           BasedOn="{StaticResource HeaderPanelButtonStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="Content" Value="{dxcn:GlyphControlViewInfo Size=0}"/>
        <Setter Property="dxcn:TabOrientablePanel.ChildMargin" Value="5,0,4,0"/>
    </Style>

    <Style x:Key="{dxt:DXTabControlThemeKey ResourceKey=MainNewButtonStyle}"
           BasedOn="{StaticResource HeaderPanelButtonStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="Content" Value="{dxcn:GlyphControlViewInfo Size=0}"/>
    </Style>

    <Style x:Key="{dxt:DXTabControlThemeKey ResourceKey=PrevButtonStyle}"
           BasedOn="{StaticResource HeaderPanelButtonStyle}"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="Content" Value="{dxcn:GlyphControlViewInfo Size=0}"/>
    </Style>

    <Style x:Key="{dxt:DXTabControlThemeKey ResourceKey=NextButtonStyle}"
           BasedOn="{StaticResource HeaderPanelButtonStyle}"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="Content" Value="{dxcn:GlyphControlViewInfo Size=0}"/>
    </Style>

    <Style x:Key="{dxt:DXTabControlThemeKey ResourceKey=MenuButtonStyle}"
           BasedOn="{StaticResource HeaderPanelButtonStyle}"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Content" Value="{dxcn:GlyphControlViewInfo Size=1}"/>
    </Style>

    <!--TabControl and TabItem Background Templates-->

    <SolidColorBrush x:Key="TabControl.BorderBrush" Color="#FF9DA0AA"/>

    <SolidColorBrush x:Key="TabControl.Background" Color="#FFFFFFFF"/>

    <LinearGradientBrush x:Key="TabItem.Normal.BorderBrush"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFEDEDF0" Offset="0"/>
        <GradientStop Color="#FFF5F6F7" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="TabItem.Normal.Background"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFDCDDE1" Offset="0"/>
        <GradientStop Color="#FFEBECEF" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="TabItem.Hover.BorderBrush"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFE6ECFD" Offset="0"/>
        <GradientStop Color="#FFF0F4FE" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="TabItem.Hover.Background"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFCDDAFB" Offset="0"/>
        <GradientStop Color="#FFE0E8FD" Offset="1"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="TabItem.Selected.BorderBrush" Color="#FFFFFFFF"/>

    <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FFFFFFFF"/>

    <SolidColorBrush x:Key="TabItem.Focused.Background" Color="#3F6699FF"/>

    <DataTemplate x:Key="{dxt:DXTabControlThemeKey ResourceKey=Background}">
        <dxcn:TabBorder BorderBackground="{StaticResource TabControl.Background}"
                        BorderBrush="{StaticResource TabControl.BorderBrush}"
                        BorderMode="BorderBrush"
                        BorderThickness="1"
                        ViewInfo="{Binding}"/>
    </DataTemplate>

    <DataTemplate x:Key="{dxt:DXTabItemThemeKey ResourceKey=NormalBackground}">
        <dxcn:TabBorder BorderBackground="{StaticResource TabControl.BorderBrush}"
                        BorderMargin="0,0,-1,0"
                        BorderMode="BorderBackground"
                        HoldBorderMargin="0,0,1,1"
                        ViewInfo="{Binding}">
            <dxcn:TabBorder BackgroundMode="BorderBrush"
                            BorderBackground="{StaticResource TabItem.Normal.BorderBrush}"
                            BorderBrush="{StaticResource TabItem.Normal.BorderBrush}"
                            BorderMargin="1,1,1,0"
                            BorderThickness="1,1,1,0"
                            CustomBackgroundBrightness="0.45"
                            HoldBorderMargin="1"
                            HoldBorderThickness="1">
                <dxcn:TabBorder BackgroundMode="BorderBackground"
                                BorderBackground="{StaticResource TabItem.Normal.Background}"
                                CustomBackgroundBrightness="-0.1"
                                LeaveOriginBackgroundColor="False"/>
            </dxcn:TabBorder>
        </dxcn:TabBorder>
    </DataTemplate>

    <DataTemplate x:Key="{dxt:DXTabItemThemeKey ResourceKey=HoverBackground}">
        <dxcn:TabBorder BorderBackground="{StaticResource TabControl.BorderBrush}"
                        BorderMargin="0,0,-1,0"
                        BorderMode="BorderBackground"
                        HoldBorderMargin="0,0,1,1"
                        ViewInfo="{Binding}">
            <dxcn:TabBorder BackgroundMode="BorderBrush"
                            BorderBackground="{StaticResource TabItem.Normal.BorderBrush}"
                            BorderBrush="{StaticResource TabItem.Hover.BorderBrush}"
                            BorderMargin="1,1,1,0"
                            BorderThickness="1,1,1,0"
                            CustomBackgroundBrightness="0.45"
                            HoldBorderMargin="1"
                            HoldBorderThickness="1">
                <dxcn:TabBorder BackgroundMode="BorderBackground"
                                BorderBackground="{StaticResource TabItem.Hover.Background}"
                                CustomBackgroundBrightness="0.4"
                                LeaveOriginBackgroundColor="False"/>
            </dxcn:TabBorder>
        </dxcn:TabBorder>
    </DataTemplate>

    <DataTemplate x:Key="{dxt:DXTabItemThemeKey ResourceKey=SelectedBackground}">
        <dxcn:TabBorder BorderBackground="{StaticResource TabControl.BorderBrush}"
                        BorderMargin="0,-2,-1,-1"
                        BorderMode="BorderBackground"
                        HoldBorderMargin="0,0,1,1"
                        ViewInfo="{Binding}">
            <dxcn:TabBorder BorderBackground="{StaticResource TabItem.Selected.BorderBrush}"
                            BorderMargin="1,1,1,0"
                            HoldBorderMargin="1">
                <dxcn:TabBorder BorderBackground="{StaticResource TabItem.Selected.Background}"
                                BorderMargin="1,1,1,0"
                                HoldBorderMargin="1"/>
            </dxcn:TabBorder>
        </dxcn:TabBorder>
    </DataTemplate>

    <DataTemplate x:Key="{dxt:DXTabItemThemeKey ResourceKey=FocusedBackground}">
        <dxcn:TabBorder BackgroundMode="BorderBackground"
                        BorderBackground="{StaticResource TabItem.Focused.Background}"
                        BorderMargin="0,-2,-1,-1"
                        BorderThickness="2,2,2,0"
                        HoldBorderMargin="0,0,1,1"
                        HoldBorderThickness="2"
                        LeaveOriginBackgroundColor="False"
                        ViewInfo="{Binding}">
            <dxcn:TabBorder.BorderOpacityMask>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="0"/>
                    <GradientStop Color="Transparent" Offset="1"/>
                </LinearGradientBrush>
            </dxcn:TabBorder.BorderOpacityMask>
        </dxcn:TabBorder>
    </DataTemplate>

    <!--TabControl and TabItem Styles-->

    <SolidColorBrush x:Key="TabControl.Foreground" Color="#FF201F35"/>

    <Style x:Key="{dxt:DXTabControlThemeKey ResourceKey=PanelContainerStyle}"
           BasedOn="{StaticResource PanelContainerDefaultStyle}"
           TargetType="{x:Type dxcn:TabPanelContainer}">
        <Setter Property="NormalMargin" Value="4,0,0,-1"/>
        <Setter Property="NormalPadding" Value="0,2,1,1"/>
        <Setter Property="HoldMargin" Value="-1,0,-1,0"/>
        <Setter Property="HoldPadding" Value="1,0,0,0"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.DXTabControl}"
           BasedOn="{StaticResource TabControlDefaultStyle}"
           TargetType="{x:Type dx:DXTabControl}">
        <Setter Property="Padding" Value="12"/>
        <Setter Property="Foreground" Value="{StaticResource TabControl.Foreground}"/>
    </Style>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.DXTabItem}"
           BasedOn="{StaticResource TabItemDefaultStyle}"
           TargetType="{x:Type dx:DXTabItem}">
        <Setter Property="Padding" Value="9,3,9,3"/>
        <Setter Property="Foreground" Value="{StaticResource TabControl.Foreground}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ViewInfo.IsHeaderOrientationDifferent, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Padding" Value="8,4,8,4"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{dxt:DXTabControlThemeKey ResourceKey=ContentStyle}"/>

    <Style x:Key="{dxt:DXTabItemThemeKey ResourceKey=SeparatorStyle}" TargetType="{x:Type ContentPresenter}">
        <Setter Property="Visibility" Value="Collapsed"/>
    </Style>

    <!--TabbedWindow-->

    <LinearGradientBrush x:Key="Window.Header.Active.Background"
                         EndPoint="0.5,0.5"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFD9DAE0" Offset="0"/>
        <GradientStop Color="#FFC8C9D0" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Window.Header.InActive.Background"
                         EndPoint="0.5,0.5"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFE3E4E9" Offset="0"/>
        <GradientStop Color="#FFD9DAE0" Offset="1"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="Window.Border.Active.BorderBrush" Color="#7F353535"/>

    <SolidColorBrush x:Key="Window.Border.Active.Background" Color="#FFC8C9D0"/>

    <SolidColorBrush x:Key="Window.Border.InActive.BorderBrush" Color="#FF9DA0AA"/>

    <SolidColorBrush x:Key="Window.Border.InActive.Background" Color="#FFD9DAE0"/>

    <SolidColorBrush x:Key="Window.Foreground" Color="#FF000000"/>

    <DataTemplate x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=HeaderTemplate}">
        <Border x:Name="border" Background="{StaticResource Window.Header.Active.Background}"/>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dx:FloatingContainer.IsActive), RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                <Setter Property="Background"
                        TargetName="border"
                        Value="{StaticResource Window.Header.InActive.Background}"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=BorderTemplate}">
        <Border x:Name="border"
                Background="{StaticResource Window.Border.Active.Background}"
                BorderBrush="{StaticResource Window.Border.Active.BorderBrush}"
                BorderThickness="1"/>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dx:FloatingContainer.IsActive), RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                <Setter Property="BorderBrush"
                        TargetName="border"
                        Value="{StaticResource Window.Border.InActive.BorderBrush}"/>
                <Setter Property="Background"
                        TargetName="border"
                        Value="{StaticResource Window.Border.InActive.Background}"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=MainContainerStyle}" TargetType="Panel">
        <Setter Property="Margin" Value="1"/>
    </Style>

    <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=CaptionPresenterStyle}" TargetType="ContentPresenter">
        <!--<Setter Property="Margin" Value="4,4,4,0"/>-->
    </Style>

    <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=ContentBorderStyle}" TargetType="Border">
        <Setter Property="Margin" Value="5,0,5,5"/>
    </Style>

    <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=ControlContainerStyle}"
           BasedOn="{StaticResource DefaultButtonContainerStyle}"
           TargetType="ItemsControl">
        <!--<Setter Property="Margin" Value="2,6,0,2"/>-->
    </Style>

    <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=ButtonContainerStyle}"
           BasedOn="{StaticResource DefaultButtonContainerStyle}"
           TargetType="ItemsControl">
        <Setter Property="Margin" Value="0,6,5,3"/>
    </Style>

    <Style x:Key="WindowButtonStyle"
           BasedOn="{StaticResource WindowButtonDefaultStyle}"
           TargetType="Button">
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Width" Value="31"/>
        <Setter Property="Height" Value="17"/>
    </Style>

    <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=MinimizeButtonStyle}"
           BasedOn="{StaticResource WindowButtonStyle}"
           TargetType="{x:Type Button}"/>

    <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=RestoreButtonStyle}"
           BasedOn="{StaticResource WindowButtonStyle}"
           TargetType="{x:Type Button}"/>

    <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=MaximizeButtonStyle}"
           BasedOn="{StaticResource WindowButtonStyle}"
           TargetType="{x:Type Button}"/>

    <Style x:Key="{dxt:DXTabbedWindowThemeKey ResourceKey=CloseButtonStyle}"
           BasedOn="{StaticResource WindowButtonStyle}"
           TargetType="{x:Type Button}"/>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.DXTabbedWindow}"
           BasedOn="{StaticResource WindowDefaultStyle}"
           TargetType="{x:Type dx:DXTabbedWindow}">
        <Setter Property="Foreground" Value="{StaticResource Window.Foreground}"/>
    </Style>

</ResourceDictionary>