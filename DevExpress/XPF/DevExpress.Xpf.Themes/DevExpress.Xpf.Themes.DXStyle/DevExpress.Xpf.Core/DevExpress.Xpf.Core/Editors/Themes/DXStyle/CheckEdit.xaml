<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxeh="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
                    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.DXStyle.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/StandardControls/SharedResources.xaml"/>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.DXStyle.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/DXStyle/Brushes.xaml"/>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.DXStyle.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/Generic/CheckEdit.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="{dxet:CheckEditThemeKey ResourceKey=NormalCheckEditBoxTemplate}" TargetType="{x:Type dxe:CheckEditBox}">
        <Grid Background="Transparent" VerticalAlignment="Center">
            <Grid.Resources>
                <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
            </Grid.Resources>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="HoverState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="PressedState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="contentPresenter"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.35"/>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="CheckBox"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.35"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="check"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked"/>
                    <VisualState x:Name="Indeterminate">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="IndeterminateState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="InternalFocusStates">
                    <VisualState x:Name="InternalFocused">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="FocusElement"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="InternalUnfocused"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid x:Name="CheckBox"
                  Height="14"
                  Margin="{TemplateBinding Padding}"
                  Width="14">
                <Grid x:Name="DefaultState">
                    <Border Background="{StaticResource CheckEdit.DefaultState.Border2}"
                            BorderBrush="{StaticResource CheckEdit.DefaultState.Border1}"
                            BorderThickness="1">
                        <Border Background="{StaticResource CheckEdit.DefaultState.Border4}"
                                BorderBrush="{StaticResource CheckEdit.DefaultState.Border3}"
                                BorderThickness="1"
                                Margin="1"/>
                    </Border>
                </Grid>
                <Grid x:Name="FocusElement" Opacity="0">
                    <Rectangle Style="{StaticResource CheckEditFocusTemplate}"/>
                </Grid>
                <Grid x:Name="HoverState" Opacity="0">
                    <Border Background="{StaticResource CheckEdit.HoverState.Border2}"
                            BorderBrush="{StaticResource CheckEdit.HoverState.Border1}"
                            BorderThickness="1">
                        <Border Background="{StaticResource CheckEdit.HoverState.Border4}"
                                BorderBrush="{StaticResource CheckEdit.HoverState.Border3}"
                                BorderThickness="1"
                                Margin="1"/>
                    </Border>
                </Grid>
                <Grid x:Name="PressedState" Opacity="0">
                    <Border Background="{StaticResource CheckEdit.PressedState.Border2}"
                            BorderBrush="{StaticResource CheckEdit.PressedState.Border1}"
                            BorderThickness="1">
                        <Border Background="{StaticResource CheckEdit.PressedState.Border4}"
                                BorderBrush="{StaticResource CheckEdit.PressedState.Border3}"
                                BorderThickness="1"
                                Margin="1"/>
                    </Border>
                </Grid>
                <Border x:Name="IndeterminateState"
                        Background="{StaticResource CheckEdit.IndeterminateState.Border2}"
                        BorderBrush="{StaticResource CheckEdit.IndeterminateState.Border1}"
                        BorderThickness="1"
                        Height="10"
                        HorizontalAlignment="Center"
                        Opacity="0"
                        Padding="1"
                        VerticalAlignment="Center"
                        Width="10"/>
                <Path x:Name="check"
                      Fill="#FF201F35"
                      Margin="1,-1,-1,1"
                      Opacity="0"
                      Stretch="Fill">
                    <Path.Style>
                        <Style TargetType="Path">
                            <Setter Property="Data" Value="F1 M 1442,967L 1444,967L 1446,970L 1447,970L 1454,959L 1456,959L 1447,973L 1446,973L 1442,967 Z"/>
                            <Setter Property="FlowDirection" Value="LeftToRight"/>
                            <Setter Property="Width" Value="14"/>
                            <Setter Property="Height" Value="14"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                    </Path.Style>
                </Path>
            </Grid>
            <ContentPresenter x:Name="contentPresenter"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              Grid.Column="1"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="4,0,0,0"
                              RecognizesAccessKey="True"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Visibility="{Binding HasContent, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}"/>
        </Grid>
    </ControlTemplate>

    <Style x:Key="{dxet:CheckEditThemeKey ResourceKey=CheckEditBoxStyle}"
           BasedOn="{StaticResource BaseCheckEditBoxStyle}"
           TargetType="{x:Type dxe:CheckEditBox}">
        <Setter Property="FocusVisualStyle" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).FocusVisualStyle, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template" Value="{DynamicResource {dxet:CheckEditThemeKey ResourceKey=NormalCheckEditBoxTemplate}}"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>

    <Style x:Key="{dxet:CheckEditThemeKey ResourceKey=CheckEditBoxInplaceStyle}"
           BasedOn="{StaticResource BaseCheckEditBoxInplaceStyle}"
           TargetType="{x:Type dxe:CheckEditBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template" Value="{DynamicResource {dxet:CheckEditThemeKey ResourceKey=NormalCheckEditBoxTemplate}}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

    <Thickness x:Key="{dxet:CheckEditThemeKey ResourceKey=Padding}">0,3,0,3</Thickness>

    <ControlTemplate x:Key="{dxet:CheckEditThemeKey ResourceKey=DisplayTemplate}">
        <dxe:CheckEditBox x:Name="PART_Editor" Style="{DynamicResource {dxet:CheckEditThemeKey ResourceKey=CheckEditBoxStyle}}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:CheckEditThemeKey ResourceKey=EditTemplate}">
        <dxe:CheckEditBox x:Name="PART_Editor" Style="{DynamicResource {dxet:CheckEditThemeKey ResourceKey=CheckEditBoxStyle}}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:CheckEditThemeKey ResourceKey=DisplayInplaceTemplate}">
        <dxe:CheckEditBox x:Name="PART_Editor" Style="{DynamicResource {dxet:CheckEditThemeKey ResourceKey=CheckEditBoxInplaceStyle}}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:CheckEditThemeKey ResourceKey=EditInplaceTemplate}">
        <dxe:CheckEditBox x:Name="PART_Editor" Style="{DynamicResource {dxet:CheckEditThemeKey ResourceKey=CheckEditBoxInplaceStyle}}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:CheckEditThemeKey ResourceKey=Template}" TargetType="{x:Type dxe:CheckEdit}">
        <dxe:EditorControl x:Name="PART_Content"
                           Grid.Column="0"
                           Template="{TemplateBinding ActualEditorControlTemplate}">
        </dxe:EditorControl>
        <ControlTemplate.Triggers>
            <Trigger Property="EditMode" Value="InplaceInactive">
                <Setter Property="HorizontalAlignment" Value="Center"/>
            </Trigger>
            <Trigger Property="EditMode" Value="InplaceActive">
                <Setter Property="HorizontalAlignment" Value="Center"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>
