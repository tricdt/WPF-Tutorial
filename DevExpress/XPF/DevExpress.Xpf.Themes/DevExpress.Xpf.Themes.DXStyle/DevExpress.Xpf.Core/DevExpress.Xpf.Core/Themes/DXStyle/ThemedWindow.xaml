<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxrt="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/themekeys"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/DevExpress.Xpf.Themes.DXStyle.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/Generic/ThemedWindow.xaml"/>
        <ResourceDictionary Source="/DevExpress.Xpf.Themes.DXStyle.v24.1;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/Generic/DropShadow.xaml"/>
        <ResourceDictionary Source="/DevExpress.Xpf.Themes.DXStyle.v24.1;component/DevExpress.Xpf.Ribbon/Generic/RibbonControlBoxButton.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <sys:Boolean x:Key="{dxt:ThemedWindowThemeKey ResourceKey=RoundWindowCorners}">False</sys:Boolean>

    <!--Opacity-->

    <sys:Double x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowInactiveHeaderOpacity}">0.7</sys:Double>

    <!--Header height-->

    <sys:Double x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowHeaderHeight}">25</sys:Double>

    <sys:Double x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowIconHeight}">16</sys:Double>

    <sys:Double x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowIconWidth}">16</sys:Double>

    <!-- SearchBox widths -->

    <sys:Double x:Key="{dxt:ThemedWindowSearchBoxThemeKey ResourceKey=MinWidth}">50</sys:Double>

    <sys:Double x:Key="{dxt:ThemedWindowSearchBoxThemeKey ResourceKey=MaxWidth}">200</sys:Double>

    <!--TitleFont Properties-->

    <sys:Double x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowTitleFontSize}">12</sys:Double>

    <FontWeight x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowTitleFontWeight}">Normal</FontWeight>

    <!--Thickness-->

    <Thickness x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowBorderThickness}">1</Thickness>

    <Thickness x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowContentBorderThickness}">1</Thickness>

    <Thickness x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowRibbonContentBorderThickness}">1</Thickness>

    <Thickness x:Key="{dxt:ThemedWindowThemeKey ResourceKey=HeaderNormalPadding}">4,0,4,0</Thickness>

    <Thickness x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowNormalPadding}">4,0,4,4</Thickness>

    <sys:Double x:Key="{dxt:ThemedWindowThemeKey ResourceKey=TabbedModeDefaultTopMargin}">4</sys:Double>

    <Thickness x:Key="{dxt:ThemedWindowThemeKey ResourceKey=HeaderRibbonPadding}">4,0,4,0</Thickness>

    <Thickness x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowIconMargin}">0,0,4,0</Thickness>

    <Thickness x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowRibbonPadding}">4,0,4,4</Thickness>

    <Thickness x:Key="{dxt:ThemedWindowThemeKey ResourceKey=SizeGripMargin}">0,0,6,6</Thickness>

    <Thickness x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowTitleControlMargin}">0,0,4,0</Thickness>

    <Thickness x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowToolbarMargin}">0,0,4,0</Thickness>

    <Thickness x:Key="{dxt:ThemedWindowThemeKey ResourceKey=HeaderControlBoxBorderThickness}">0</Thickness>

    <!-- Colors -->

    <Color x:Key="{dxt:AcrylicThemedWindowThemeKey ResourceKey=AcrylicColor}">#FFC8C9D0</Color>

    <!--Brushes-->

    <SolidColorBrush x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowActiveBackground}" Color="#FFC8C9D0"/>

    <SolidColorBrush x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowActiveBorderBrush}" Color="Black"/>

    <SolidColorBrush x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowActiveContentBackground}" Color="#FFEBECEF"/>

    <SolidColorBrush x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowActiveContentBorderBrush}" Color="#FF87878A"/>

    <SolidColorBrush x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowInactiveBackground}" Color="#FFD9DAE0"/>

    <SolidColorBrush x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowInactiveBorderBrush}" Color="Black"/>

    <SolidColorBrush x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowInactiveContentBackground}" Color="#FFEBECEF"/>

    <SolidColorBrush x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowInactiveContentBorderBrush}" Color="#FF9DA0AA"/>

    <SolidColorBrush x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowTitleForeground}" Color="#FF5D5C6D"/>

    <SolidColorBrush x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowRibbonTitleForeground}" Color="#FF5D5C6D"/>

    <SolidColorBrush x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowContentForeground}" Color="#FF000000"/>

    <SolidColorBrush x:Key="{dxt:ThemedWindowThemeKey ResourceKey=HeaderControlBoxBorderBrush}" Color="Transparent"/>

    <SolidColorBrush x:Key="{dxt:ThemedWindowThemeKey ResourceKey=HeaderControlBoxBackground}" Color="Transparent"/>

    <SolidColorBrush x:Key="{dxt:ThemedWindowThemeKey ResourceKey=BackButtonForegroundNormalState}" Color="#FF80838F"/>

    <SolidColorBrush x:Key="{dxt:ThemedWindowThemeKey ResourceKey=BackButtonForegroundMouseOverState}" Color="#FF80838F"/>

    <SolidColorBrush x:Key="{dxt:ThemedWindowThemeKey ResourceKey=BackButtonForegroundPressedState}" Color="#FF80838F"/>

    <!--GradientBrushes-->

    <LinearGradientBrush x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowActiveHeaderBackground}"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFD9DAE0" Offset="0"/>
        <GradientStop Color="#FFC8C9D0" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowInactiveHeaderBackground}"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFE3E4E9" Offset="0"/>
        <GradientStop Color="#FFD9DAE0" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowRibbonActiveHeaderBackground}"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFD9DAE0" Offset="0"/>
        <GradientStop Color="#FFC8C9D0" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowRibbonInactiveHeaderBackground}"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFE3E4E9" Offset="0"/>
        <GradientStop Color="#FFD9DAE0" Offset="1"/>
    </LinearGradientBrush>

    <!--VerticalAlignment-->

    <VerticalAlignment x:Key="{dxt:ThemedWindowThemeKey ResourceKey=HeaderControlBoxVerticalAlignment}">Center</VerticalAlignment>

    <!--TitleAlignment-->

    <dx:WindowTitleAlignment x:Key="{dxt:ThemedWindowThemeKey ResourceKey=WindowTitleAlignment}">Left</dx:WindowTitleAlignment>

    <!--____Back Button Slyte & Template____-->

    <!--BackButton Glyph Template-->

    <DataTemplate x:Key="{dxt:ThemedWindowThemeKey ResourceKey=BackButtonBackgroundGlyph}">
        <Grid x:Name="Glyph"
              Height="11"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              Width="10">
            <Path Data="F1 M 0,4L 4,0L 4,3L 9,3L 9,5L 4,5L 4,8L 0,4 Z "
                  Fill="#7FFFFFFF"
                  Height="8"
                  Stretch="Fill"
                  Width="9"/>
            <!--Fill="#FF80838F"-->
            <Path Data="F1 M 0,4L 4,0L 4,3L 9,3L 9,5L 4,5L 4,8L 0,4 Z "
                  Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}"
                  Height="8"
                  Margin="0,0,0,1"
                  Stretch="Fill"
                  Width="9"/>
        </Grid>
    </DataTemplate>

    <!--BackButton Normal Background-->

    <ControlTemplate x:Key="{dxt:ThemedWindowThemeKey ResourceKey=BackButtonBackgroundNormalState}">
        <Border x:Name="NormalState"
                Background="#FFACAEB6"
                CornerRadius="2">
            <Border Background="#FFF3F3F6"
                    CornerRadius="1"
                    Margin="1">
                <Border Margin="0,1,0,0">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFE4E5E9" Offset="0"/>
                            <GradientStop Color="#FFCDCED4" Offset="1"/>
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
            </Border>
        </Border>
    </ControlTemplate>

    <!--BackButton MouseOver Background-->

    <ControlTemplate x:Key="{dxt:ThemedWindowThemeKey ResourceKey=BackButtonBackgroundMouseoverState}">
        <Border x:Name="HoverState"
                Background="#FFACAEB6"
                CornerRadius="2">
            <Border Background="#FFF4F4F6"
                    CornerRadius="1"
                    Margin="1">
                <Border Margin="0,1,0,0">
                    <Border.Background>
                        <RadialGradientBrush>
                            <RadialGradientBrush.RelativeTransform>
                                <TransformGroup>
                                    <TranslateTransform X="0" Y="0.5"/>
                                </TransformGroup>
                            </RadialGradientBrush.RelativeTransform>
                            <GradientStop Color="#FFFFFFFF" Offset="0"/>
                            <GradientStop Color="#FFE3E5E9" Offset="1"/>
                        </RadialGradientBrush>
                    </Border.Background>
                </Border>
            </Border>
        </Border>
    </ControlTemplate>

    <!--BackButton Pressed Background-->

    <ControlTemplate x:Key="{dxt:ThemedWindowThemeKey ResourceKey=BackButtonBackgroundPressedState}">
        <Border x:Name="PressedState"
                Background="#FF9FA2AB"
                CornerRadius="2">
            <Border CornerRadius="1" Margin="1">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFC7C8CD" Offset="0"/>
                        <GradientStop Color="#FFC8C9CF" Offset="1"/>
                    </LinearGradientBrush>
                </Border.Background>
                <Border Margin="1">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFD5D6D9" Offset="0"/>
                            <GradientStop Color="#FFD1D2D8" Offset="1"/>
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
            </Border>
        </Border>
    </ControlTemplate>

    <!--BackButtonStyle-->

    <Style x:Key="{dxt:ThemedWindowThemeKey ResourceKey=BackButtonStyle}" TargetType="{x:Type dx:ThemedWindowBackButton}">
        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="Width" Value="29"/>
        <Setter Property="Height" Value="15"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template" Value="{DynamicResource {dxt:ThemedWindowThemeKey ResourceKey=BackButtonTemplate}}"/>
        <Setter Property="dxcn:WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
    </Style>

    <!--WindowStyle-->

    <Style x:Key="{dxt:DefaultStyleThemeKey FullName=DevExpress.Xpf.Core.ThemedWindow}"
           BasedOn="{StaticResource ResourceKey={dxt:ThemedWindowThemeKey ResourceKey=WindowStyle}}"
           TargetType="{x:Type dx:ThemedWindow}">
        <Setter Property="dx:HeaderItemControl.ExtendedCommonTemplateProvider" Value="{DynamicResource {dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonHeaderItemControlCommonTemplateProvider}}"/>
        <Setter Property="dx:HeaderItemControl.ExtendedCloseTemplateProvider" Value="{DynamicResource {dxt:RibbonHeaderItemsThemeKey ResourceKey=RibbonHeaderItemControlCloseTemplateProvider}}"/>
    </Style>

</ResourceDictionary>