<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxdo="http://schemas.devexpress.com/winfx/2008/xaml/docking"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/docking/themekeys"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:ve="http://schemas.devexpress.com/winfx/2008/xaml/docking/visualelements"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Thickness x:Key="{dxt:AutoHideTrayHeadersGroupElementsThemeKey ResourceKey=LeftMargin}">0,3</Thickness>

    <Thickness x:Key="{dxt:AutoHideTrayHeadersGroupElementsThemeKey ResourceKey=TopMargin}">3,0</Thickness>

    <Thickness x:Key="{dxt:AutoHideTrayHeadersGroupElementsThemeKey ResourceKey=RightMargin}">0,3</Thickness>

    <Thickness x:Key="{dxt:AutoHideTrayHeadersGroupElementsThemeKey ResourceKey=BottomMargin}">3,0</Thickness>

    <Thickness x:Key="{dxt:AutoHideTrayElementsThemeKey ResourceKey=CaptionBorderThickness}">1</Thickness>

    <Thickness x:Key="{dxt:AutoHideTrayElementsThemeKey ResourceKey=BorderThickness}">0,0,0,1</Thickness>

    <ControlTemplate x:Key="{dxt:AutoHideTrayElementsThemeKey ResourceKey=Caption}" TargetType="ve:AutoHidePaneHeaderItem">
        <Grid x:Name="itemHeader"
              ve:DockPane.HitTestType="Header"
              Visibility="{Binding Path=Visibility}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="NormalState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="HoverState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                            <ColorAnimation Duration="0"
                                            Storyboard.TargetName="PART_CaptionControlPresenter"
                                            Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
                                            To="#FF201F35"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Selected">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="HoverState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"/>
                            <ColorAnimation Duration="0"
                                            Storyboard.TargetName="PART_CaptionControlPresenter"
                                            Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
                                            To="#FF201F35"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="LocationStates">
                    <VisualState x:Name="Left">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxcn:ValueSetter.Thickness="0,0,0,-1"
                                                           Storyboard.TargetName="itemHeader"
                                                           Storyboard.TargetProperty="Margin"/>
                            <PointAnimation Duration="0"
                                            Storyboard.TargetName="States"
                                            Storyboard.TargetProperty="(Border.OpacityMask).(LinearGradientBrush.EndPoint)"
                                            To="1,0.5"/>
                            <PointAnimation Duration="0"
                                            Storyboard.TargetName="States"
                                            Storyboard.TargetProperty="(Border.OpacityMask).(LinearGradientBrush.StartPoint)"
                                            To="0,0.5"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Right">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxcn:ValueSetter.Thickness="0,0,0,-1"
                                                           Storyboard.TargetName="itemHeader"
                                                           Storyboard.TargetProperty="Margin"/>
                            <PointAnimation Duration="0"
                                            Storyboard.TargetName="States"
                                            Storyboard.TargetProperty="(Border.OpacityMask).(LinearGradientBrush.EndPoint)"
                                            To="0,0.5"/>
                            <PointAnimation Duration="0"
                                            Storyboard.TargetName="States"
                                            Storyboard.TargetProperty="(Border.OpacityMask).(LinearGradientBrush.StartPoint)"
                                            To="1,0.5"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Top">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxcn:ValueSetter.Thickness="0,0,-1,0"
                                                           Storyboard.TargetName="itemHeader"
                                                           Storyboard.TargetProperty="Margin"/>
                            <PointAnimation Duration="0"
                                            Storyboard.TargetName="States"
                                            Storyboard.TargetProperty="(Border.OpacityMask).(LinearGradientBrush.EndPoint)"
                                            To="0.5,1"/>
                            <PointAnimation Duration="0"
                                            Storyboard.TargetName="States"
                                            Storyboard.TargetProperty="(Border.OpacityMask).(LinearGradientBrush.StartPoint)"
                                            To="0.5,0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Bottom">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxcn:ValueSetter.Thickness="0,0,-1,0"
                                                           Storyboard.TargetName="itemHeader"
                                                           Storyboard.TargetProperty="Margin"/>
                            <PointAnimation Duration="0"
                                            Storyboard.TargetName="States"
                                            Storyboard.TargetProperty="(Border.OpacityMask).(LinearGradientBrush.EndPoint)"
                                            To="0.5,0"/>
                            <PointAnimation Duration="0"
                                            Storyboard.TargetName="States"
                                            Storyboard.TargetProperty="(Border.OpacityMask).(LinearGradientBrush.StartPoint)"
                                            To="0.5,1"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="States" Background="#FF9DA0AA">
                <Border.OpacityMask>
                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                        <GradientStop Color="#3FFFFFFF" Offset="0"/>
                        <GradientStop Color="#FFFFFFFF" Offset="1"/>
                    </LinearGradientBrush>
                </Border.OpacityMask>
                <Border.Effect>
                    <DropShadowEffect x:Name="Shadow"
                                      BlurRadius="5"
                                      Direction="0"
                                      Opacity="0.15"
                                      ShadowDepth="1"/>
                </Border.Effect>
                <Grid Margin="{TemplateBinding ActualBorderThickness}">
                    <Border x:Name="NormalState"
                            Background="#FFDCDDE1"
                            Opacity="0"/>
                    <Border x:Name="HoverState"
                            Background="#FFCDDAFB"
                            Opacity="0"/>
                    <Border BorderBrush="#7FFFFFFF" BorderThickness="1"/>
                </Grid>
            </Border>
            <ve:AutoHideTransformPanel x:Name="PART_TransformPanel">
                <ve:AutoHideTransformPanel.Orientation>
                    <Binding Path="(ve:AutoHideTray.Orientation)" RelativeSource="{RelativeSource TemplatedParent}">
                        <Binding.Converter>
                            <ve:OrientationInvertConverter/>
                        </Binding.Converter>
                    </Binding>
                </ve:AutoHideTransformPanel.Orientation>
                <Border x:Name="front">
                    <ve:TemplatedTabCaptionControl x:Name="PART_CaptionControlPresenter"
                                                   Foreground="#FF201F35"
                                                   LayoutItem="{Binding}"
                                                   Padding="5,3"/>
                </Border>
            </ve:AutoHideTransformPanel>
        </Grid>
    </ControlTemplate>

    <sys:Double x:Key="{dxt:AutoHidePaneElementsThemeKey ResourceKey=SizerThickness}">6</sys:Double>

    <sys:Double x:Key="{dxt:AutoHidePaneElementsThemeKey ResourceKey=TouchSizerThickness}">24</sys:Double>

    <Thickness x:Key="{dxt:AutoHidePaneElementsThemeKey ResourceKey=ContentMargin}">2</Thickness>

    <ve:DockTypeToThicknessConverter x:Key="dockTypeToThicknessLightConverter"
                                     All="1"
                                     Inverted="True"/>

    <ControlTemplate x:Key="{dxt:AutoHidePaneElementsThemeKey ResourceKey=Template}" TargetType="ve:AutoHidePane">
        <ve:AutoHidePanePresenter x:Name="PART_Presenter">
            <DockPanel Background="Transparent">
                <DockPanel.Resources>
                    <ve:DockToVerticalAlignmentConverter x:Key="dockToVerticalAlignmentConverter"/>
                    <ve:DockToHorizontalAlignmentConverter x:Key="dockToHorizontalAlignmentConverter"/>
                    <ve:DockTypeToThicknessConverter x:Key="dockTypeToThicknessConverter"
                                                     All="7"
                                                     Inverted="True"/>
                    <dx:BoolToVisibilityConverter x:Key="boolToVisibilityConverter"/>
                    <dx:BoolToVisibilityInverseConverter x:Key="boolToVisibilityInverseConverter"/>
                    <ve:DockInverseConverter x:Key="dockInverseConverter"/>
                    <dx:BoolToObjectConverter x:Key="boolToObjectConverter" TrueValue="{x:Null}">
                        <dx:BoolToObjectConverter.FalseValue>
                            <DropShadowEffect x:Name="Shadow"
                                              BlurRadius="5"
                                              Direction="270"
                                              Opacity="0.15"
                                              ShadowDepth="1"/>
                        </dx:BoolToObjectConverter.FalseValue>
                    </dx:BoolToObjectConverter>
                </DockPanel.Resources>
                <Grid Background="Transparent"
                      Cursor="{Binding ElementName=PART_Sizer, Path=Cursor}"
                      DockPanel.Dock="{Binding DockType,RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource dockInverseConverter}}"
                      HorizontalAlignment="{Binding DockType, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ResourceKey=dockToHorizontalAlignmentConverter}}"
                      ve:DockPane.HitTestType="Border"
                      VerticalAlignment="{Binding DockType, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ResourceKey=dockToVerticalAlignmentConverter}}"
                      Visibility="{Binding IsSizerVisible,RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}">
                    <ve:ElementSizer x:Name="PART_Sizer"
                                     Orientation="{Binding Path=(ve:AutoHideTray.Orientation), RelativeSource={RelativeSource TemplatedParent}}"
                                     Thickness="{DynamicResource {dxt:AutoHidePaneElementsThemeKey ResourceKey=SizerThickness}}"/>
                </Grid>
                <Grid x:Name="PART_PaneContent" Background="Transparent">
                    <Grid Effect="{Binding IsSizerVisible,RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToObjectConverter}}" ve:DockPane.HitTestType="Border">
                        <ContentPresenter x:Name="Content"
                                          Content="{TemplateBinding Content}"
                                          Cursor="Arrow"
                                          Margin="{DynamicResource {dxt:AutoHidePaneElementsThemeKey ResourceKey=ContentMargin}}"/>
                    </Grid>
                    <Border x:Name="PART_PaneBorder"
                            BorderBrush="Transparent"
                            BorderThickness="{Binding DockType, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ResourceKey=dockTypeToThicknessConverter}}"
                            ve:DockPane.HitTestType="Border"
                            Visibility="{Binding IsSizerVisible,RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityInverseConverter}}">
                    </Border>
                </Grid>
            </DockPanel>
        </ve:AutoHidePanePresenter>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(dxdo:DockLayoutManager.DockLayoutManager).EnableWin32Compatibility, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Margin"
                        TargetName="Content"
                        Value="0"/>
            </DataTrigger>
            <Trigger Property="ViewStyle" Value="Light">
                <Setter Property="BorderThickness"
                        TargetName="PART_PaneBorder"
                        Value="{Binding DockType, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ResourceKey=dockTypeToThicknessLightConverter}}"/>
                <Setter Property="BorderBrush"
                        TargetName="PART_PaneBorder"
                        Value="{DynamicResource {dxt:DockPaneElementsThemeKey ResourceKey=BorderBrush}}"/>
                <Setter Property="Thickness"
                        TargetName="PART_Sizer"
                        Value="1"/>
                <Setter Property="Background"
                        TargetName="PART_Sizer"
                        Value="{DynamicResource {dxt:DockPaneElementsThemeKey ResourceKey=BorderBrush}}"/>
                <Setter Property="Margin"
                        TargetName="Content"
                        Value="0"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- AutoHide Theme Elements -->

    <ControlTemplate x:Key="{dxt:DockElementsThemeKey ResourceKey=ElementSizer}" TargetType="ve:ElementSizer">
        <Grid Background="{TemplateBinding Background}" UseLayoutRounding="True">
            <Grid x:Name="HorizontalRootElement"
                  Cursor="SizeNS"
                  Height="{TemplateBinding Thickness}"
                  Width="14"/>
            <Grid x:Name="VerticalRootElement"
                  Cursor="SizeWE"
                  Height="14"
                  Width="{TemplateBinding Thickness}"/>
        </Grid>
    </ControlTemplate>

</ResourceDictionary>
