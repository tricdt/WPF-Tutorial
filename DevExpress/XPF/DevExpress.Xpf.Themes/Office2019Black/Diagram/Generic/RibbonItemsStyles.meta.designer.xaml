<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon" xmlns:dxdiag="http://schemas.devexpress.com/winfx/2008/xaml/diagram" xmlns:dxdiagn="http://schemas.devexpress.com/winfx/2008/xaml/diagram/internal" xmlns:dxdiagcore="clr-namespace:DevExpress.Diagram.Core;assembly=DevExpress.Diagram.v24.1.Core" xmlns:dxdiagi="clr-namespace:DevExpress.Diagram.Core.Native;assembly=DevExpress.Diagram.v24.1.Core" xmlns:dxdiagt="http://schemas.devexpress.com/winfx/2008/xaml/diagram/themekeys" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
  <dxdiag:DiagramStringIdConverter x:Key="DiagramStringIdConverter" />
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SaveFileCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SaveFile}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_SaveFile_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.SaveFile}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.SaveFile}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/SaveFile.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/SaveFile.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SaveFile_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
      <Setter Property="IsVisible" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(dxdiag:DiagramControl.Diagram).IsReadOnly, Converter={dxmvvm:BooleanNegationConverter}}" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=UndoCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_Undo}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_Undo_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.Undo}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.Undo}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/Undo.svg}" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_Undo_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowUndoRedo" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=RedoCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_Redo}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_Redo_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.Redo}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.Redo}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/Redo.svg}" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_Redo_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowUndoRedo" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=NewFileCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_NewFile}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_NewFile_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.NewFile}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.NewFile}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/NewFile.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/NewFile.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_NewFile_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=OpenFileCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_OpenFile}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_OpenFile_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.OpenFile}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.OpenFile}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/OpenFile.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/OpenFile.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_OpenFile_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SaveFileAsCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SaveFileAs}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_SaveFileAs_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.SaveFileAs}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.SaveFileAs}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/SaveFileAs.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/SaveFileAs.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SaveFileAs_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ShowPrintPreviewCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_ShowPrintPreview}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_ShowPrintPreview_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.ShowPrintPreview}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.ShowPrintPreview}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/ShowPrintPreview.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/ShowPrintPreview.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_ShowPrintPreview_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=PrintCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_Print}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_Print_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.Print}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.Print}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/Print.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/Print.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_Print_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=QuickPrintCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_QuickPrint}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_QuickPrint_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.QuickPrint}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.QuickPrint}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/QuickPrint.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/QuickPrint.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_QuickPrint_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ExportDiagram_PNGCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_ExportDiagram_PNG}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_ExportDiagram_PNG_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.ExportDiagram}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.ExportDiagram_PNG}" />
      <Setter Property="CommandParameter" Value="PNG" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/ExportDiagram_PNG.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/ExportDiagram_PNG.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_ExportDiagram_PNG_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ExportDiagram_JPEGCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_ExportDiagram_JPEG}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_ExportDiagram_JPEG_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.ExportDiagram}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.ExportDiagram_JPEG}" />
      <Setter Property="CommandParameter" Value="JPEG" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/ExportDiagram_JPEG.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/ExportDiagram_JPEG.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="Large" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_ExportDiagram_JPEG_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ExportDiagram_BMPCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_ExportDiagram_BMP}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_ExportDiagram_BMP_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.ExportDiagram}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.ExportDiagram_BMP}" />
      <Setter Property="CommandParameter" Value="BMP" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/ExportDiagram_BMP.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/ExportDiagram_BMP.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="Large" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_ExportDiagram_BMP_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ExportDiagram_GIFCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_ExportDiagram_GIF}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_ExportDiagram_GIF_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.ExportDiagram}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.ExportDiagram_GIF}" />
      <Setter Property="CommandParameter" Value="GIF" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/ExportDiagram_GIF.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/ExportDiagram_GIF.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="Large" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_ExportDiagram_GIF_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ExportToSvgCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_ExportToSvg}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_ExportToSvg_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.ExportToSvg}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.ExportToSvg}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/ExportToSvg.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/ExportToSvg.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="Large" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_ExportToSvg_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ExportToPdfCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_ExportToPdf}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_ExportToPdf_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.ExportToPdf}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.ExportToPdf}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/ExportToPdf.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/ExportToPdf.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="Large" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_ExportToPdf_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=PasteCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_Paste}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_Paste_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding Path=(dxr:RibbonPage.RibbonPage).Commands[DiagramCommand_Paste], RelativeSource={RelativeSource Self}}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/Paste.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/Paste.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="Large" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_Paste_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowAddRemoveItems" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=CutCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_Cut}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_Cut_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding Path=(dxr:RibbonPage.RibbonPage).Commands[DiagramCommand_Cut], RelativeSource={RelativeSource Self}}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/Cut.svg}" />
      <Setter Property="RibbonStyle" Value="SmallWithText" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_Cut_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowCopyItems" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowAddRemoveItems" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=CopyCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_Copy}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_Copy_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding Path=(dxr:RibbonPage.RibbonPage).Commands[DiagramCommand_Copy], RelativeSource={RelativeSource Self}}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/Copy.svg}" />
      <Setter Property="RibbonStyle" Value="SmallWithText" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_Copy_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
      <Setter Property="IsVisible" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(dxdiag:DiagramControl.Diagram).AllowCopyItems}" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=IncreaseFontSizeCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_IncreaseFontSize}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_IncreaseFontSize_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding Path=(dxr:RibbonPage.RibbonPage).Commands[DiagramCommand_IncreaseFontSize], RelativeSource={RelativeSource Self}}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/IncreaseFontSize.svg}" />
      <Setter Property="RibbonStyle" Value="SmallWithoutText" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_IncreaseFontSize_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeTextFont" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=DecreaseFontSizeCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_DecreaseFontSize}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_DecreaseFontSize_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding Path=(dxr:RibbonPage.RibbonPage).Commands[DiagramCommand_DecreaseFontSize], RelativeSource={RelativeSource Self}}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/DecreaseFontSize.svg}" />
      <Setter Property="RibbonStyle" Value="SmallWithoutText" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_DecreaseFontSize_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeTextFont" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ToggleFontBoldCommandItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_ToggleFontBold}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_ToggleFontBold_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding Path=(dxr:RibbonPage.RibbonPage).Commands[DiagramCommand_ToggleFontBold], RelativeSource={RelativeSource Self}}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/ToggleFontBold.svg}" />
      <Setter Property="RibbonStyle" Value="SmallWithoutText" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_ToggleFontBold_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeTextFont" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ToggleFontItalicCommandItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_ToggleFontItalic}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_ToggleFontItalic_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding Path=(dxr:RibbonPage.RibbonPage).Commands[DiagramCommand_ToggleFontItalic], RelativeSource={RelativeSource Self}}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/ToggleFontItalic.svg}" />
      <Setter Property="RibbonStyle" Value="SmallWithoutText" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_ToggleFontItalic_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeTextFont" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ToggleFontUnderlineCommandItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_ToggleFontUnderline}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_ToggleFontUnderline_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding Path=(dxr:RibbonPage.RibbonPage).Commands[DiagramCommand_ToggleFontUnderline], RelativeSource={RelativeSource Self}}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/ToggleFontUnderline.svg}" />
      <Setter Property="RibbonStyle" Value="SmallWithoutText" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_ToggleFontUnderline_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeTextFont" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ToggleFontStrikethroughCommandItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_ToggleFontStrikethrough}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_ToggleFontStrikethrough_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding Path=(dxr:RibbonPage.RibbonPage).Commands[DiagramCommand_ToggleFontStrikethrough], RelativeSource={RelativeSource Self}}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/ToggleFontStrikethrough.svg}" />
      <Setter Property="RibbonStyle" Value="SmallWithoutText" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_ToggleFontStrikethrough_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeTextFont" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SetVerticalAlignment_TopCommandItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SetVerticalAlignment_Top}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_SetVerticalAlignment_Top_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding Path=(dxr:RibbonPage.RibbonPage).Commands[DiagramCommand_SetVerticalAlignment_Top], RelativeSource={RelativeSource Self}}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/SetVerticalAlignment_Top.svg}" />
      <Setter Property="RibbonStyle" Value="SmallWithoutText" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SetVerticalAlignment_Top_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeTextVerticalAlignment" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SetVerticalAlignment_CenterCommandItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SetVerticalAlignment_Center}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_SetVerticalAlignment_Center_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding Path=(dxr:RibbonPage.RibbonPage).Commands[DiagramCommand_SetVerticalAlignment_Center], RelativeSource={RelativeSource Self}}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/SetVerticalAlignment_Center.svg}" />
      <Setter Property="RibbonStyle" Value="SmallWithoutText" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SetVerticalAlignment_Center_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeTextVerticalAlignment" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SetVerticalAlignment_BottomCommandItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SetVerticalAlignment_Bottom}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_SetVerticalAlignment_Bottom_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding Path=(dxr:RibbonPage.RibbonPage).Commands[DiagramCommand_SetVerticalAlignment_Bottom], RelativeSource={RelativeSource Self}}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/SetVerticalAlignment_Bottom.svg}" />
      <Setter Property="RibbonStyle" Value="SmallWithoutText" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SetVerticalAlignment_Bottom_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeTextVerticalAlignment" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SetHorizontalAlignment_LeftCommandItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SetHorizontalAlignment_Left}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_SetHorizontalAlignment_Left_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding Path=(dxr:RibbonPage.RibbonPage).Commands[DiagramCommand_SetHorizontalAlignment_Left], RelativeSource={RelativeSource Self}}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/SetHorizontalAlignment_Left.svg}" />
      <Setter Property="RibbonStyle" Value="SmallWithoutText" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SetHorizontalAlignment_Left_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeTextHorizontalAlignment" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SetHorizontalAlignment_CenterCommandItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SetHorizontalAlignment_Center}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_SetHorizontalAlignment_Center_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding Path=(dxr:RibbonPage.RibbonPage).Commands[DiagramCommand_SetHorizontalAlignment_Center], RelativeSource={RelativeSource Self}}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/SetHorizontalAlignment_Center.svg}" />
      <Setter Property="RibbonStyle" Value="SmallWithoutText" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SetHorizontalAlignment_Center_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeTextHorizontalAlignment" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SetHorizontalAlignment_RightCommandItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SetHorizontalAlignment_Right}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_SetHorizontalAlignment_Right_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding Path=(dxr:RibbonPage.RibbonPage).Commands[DiagramCommand_SetHorizontalAlignment_Right], RelativeSource={RelativeSource Self}}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/SetHorizontalAlignment_Right.svg}" />
      <Setter Property="RibbonStyle" Value="SmallWithoutText" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SetHorizontalAlignment_Right_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeTextHorizontalAlignment" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SetHorizontalAlignment_JustifyCommandItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SetHorizontalAlignment_Justify}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_SetHorizontalAlignment_Justify_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding Path=(dxr:RibbonPage.RibbonPage).Commands[DiagramCommand_SetHorizontalAlignment_Justify], RelativeSource={RelativeSource Self}}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/SetHorizontalAlignment_Justify.svg}" />
      <Setter Property="RibbonStyle" Value="SmallWithoutText" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SetHorizontalAlignment_Justify_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeTextHorizontalAlignment" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SelectTool_PointerToolCommandItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SelectTool_PointerTool}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_SelectTool_PointerTool_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding Path=(dxr:RibbonPage.RibbonPage).Commands[DiagramCommand_SelectTool_PointerTool], RelativeSource={RelativeSource Self}}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/SelectTool_PointerTool.svg}" />
      <Setter Property="RibbonStyle" Value="SmallWithText" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SelectTool_PointerTool_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SelectTool_ConnectorToolCommandItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SelectTool_ConnectorTool}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_SelectTool_ConnectorTool_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding Path=(dxr:RibbonPage.RibbonPage).Commands[DiagramCommand_SelectTool_ConnectorTool], RelativeSource={RelativeSource Self}}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/SelectTool_ConnectorTool.svg}" />
      <Setter Property="RibbonStyle" Value="SmallWithText" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SelectTool_ConnectorTool_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowAddRemoveItems" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SelectTool_RectangleToolCommandItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SelectTool_RectangleTool}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_SelectTool_RectangleTool_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.SelectRectangleTool}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.SelectRectangleTool}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/SelectTool_RectangleTool.svg}" />
      <Setter Property="RibbonStyle" Value="SmallWithText" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SelectTool_RectangleTool_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SelectTool_EllipseToolCommandItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SelectTool_EllipseTool}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_SelectTool_EllipseTool_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.SelectEllipseTool}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.SelectEllipseTool}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/SelectTool_EllipseTool.svg}" />
      <Setter Property="RibbonStyle" Value="SmallWithText" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SelectTool_EllipseTool_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SelectTool_RightTriangleToolCommandItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SelectTool_RightTriangleTool}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_SelectTool_RightTriangleTool_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.SelectRightTriangleTool}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.SelectRightTriangleTool}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/SelectTool_RightTriangleTool.svg}" />
      <Setter Property="RibbonStyle" Value="SmallWithText" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SelectTool_RightTriangleTool_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SelectTool_HexagonToolCommandItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SelectTool_HexagonTool}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_SelectTool_HexagonTool_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.SelectHexagonTool}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.SelectHexagonTool}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/SelectTool_HexagonTool.svg}" />
      <Setter Property="RibbonStyle" Value="SmallWithText" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SelectTool_HexagonTool_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SelectTool_PanToolCommandItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SelectTool_PanTool}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_SelectTool_PanTool_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding Path=(dxr:RibbonPage.RibbonPage).Commands[DiagramCommand_SelectTool_PanTool], RelativeSource={RelativeSource Self}}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/SelectTool_PanTool.svg}" />
      <Setter Property="RibbonStyle" Value="SmallWithoutText" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SelectTool_PanTool_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SelectTool_TextToolCommandItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SelectTool_TextTool}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_SelectTool_TextTool_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding Path=(dxr:RibbonPage.RibbonPage).Commands[DiagramCommand_SelectTool_TextTool], RelativeSource={RelativeSource Self}}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/SelectTool_TextTool.svg}" />
      <Setter Property="RibbonStyle" Value="SmallWithoutText" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SelectTool_TextTool_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=BringToFrontCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_BringToFront}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_BringToFront_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding Path=(dxr:RibbonPage.RibbonPage).Commands[DiagramCommand_BringToFront], RelativeSource={RelativeSource Self}}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/BringToFront.svg}" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_BringToFront_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=BringForwardCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_BringForward}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_BringForward_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.BringForward}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.BringForward}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/BringForward.svg}" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_BringForward_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SendToBackCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SendToBack}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_SendToBack_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding Path=(dxr:RibbonPage.RibbonPage).Commands[DiagramCommand_SendToBack], RelativeSource={RelativeSource Self}}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/SendToBack.svg}" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SendToBack_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SendBackwardCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SendBackward}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_SendBackward_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.SendBackward}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.SendBackward}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/SendBackward.svg}" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SendBackward_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=InsertImageCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_InsertImage}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_InsertImage_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding Path=(dxr:RibbonPage.RibbonPage).Commands[DiagramCommand_InsertImage], RelativeSource={RelativeSource Self}}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/InsertImage.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/InsertImage.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="Large" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_InsertImage_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=FitToDrawingCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_FitToDrawing}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_FitToDrawing_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.FitToDrawing}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.FitToDrawing}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/FitToDrawing.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/FitToDrawing.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_FitToDrawing_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangePageParameters" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowZoom" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SetPageParameters_PageSizeCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SetPageParameters_PageSize}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_SetPageParameters_PageSize_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.SetPageParameters}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.SetPageParameters_PageSize}" />
      <Setter Property="CommandParameter" Value="PageSize" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SetPageParameters_PageSize_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=TreeLayout_DownCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_TreeLayout_Down}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.TreeLayout}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.TreeLayout_Down}" />
      <Setter Property="CommandParameter" Value="Down" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/TopDown.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/TopDown.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=TreeLayout_UpCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_TreeLayout_Up}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.TreeLayout}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.TreeLayout_Up}" />
      <Setter Property="CommandParameter" Value="Up" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/DownTop.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/DownTop.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=TreeLayout_RightCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_TreeLayout_Right}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.TreeLayout}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.TreeLayout_Right}" />
      <Setter Property="CommandParameter" Value="Right" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/LeftRight.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/LeftRight.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=TreeLayout_LeftCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_TreeLayout_Left}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.TreeLayout}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.TreeLayout_Left}" />
      <Setter Property="CommandParameter" Value="Left" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/RightLeft.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/RightLeft.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=TipOverTreeLayout_LeftToRightCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_TipOverTreeLayout_LeftToRight}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.TipOverTreeLayout}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.TipOverTreeLayout_LeftToRight}" />
      <Setter Property="CommandParameter" Value="LeftToRight" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/TipOverTree_Right.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/TipOverTree_Right.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=TipOverTreeLayout_RightToLeftCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_TipOverTreeLayout_RightToLeft}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.TipOverTreeLayout}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.TipOverTreeLayout_RightToLeft}" />
      <Setter Property="CommandParameter" Value="RightToLeft" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/TipOverTree_Left.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/TipOverTree_Left.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=MindMapTreeLayout_HorizontalCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_MindMapTreeLayout_Horizontal}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.MindMapTreeLayout}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.MindMapTreeLayout_Horizontal}" />
      <Setter Property="CommandParameter" Value="Horizontal" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/MindMapTree_Horizontal.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/MindMapTree_Horizontal.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=MindMapTreeLayout_VerticalCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_MindMapTreeLayout_Vertical}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.MindMapTreeLayout}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.MindMapTreeLayout_Vertical}" />
      <Setter Property="CommandParameter" Value="Vertical" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/MindMapTree_Vertical.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/MindMapTree_Vertical.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SugiyamaLayout_DownCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SugiyamaLayout_Down}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.SugiyamaLayout}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.SugiyamaLayout_Down}" />
      <Setter Property="CommandParameter" Value="Down" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/Sugiyama_TopDown.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/Sugiyama_TopDown.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SugiyamaLayout_UpCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SugiyamaLayout_Up}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.SugiyamaLayout}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.SugiyamaLayout_Up}" />
      <Setter Property="CommandParameter" Value="Up" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/Sugiyama_DownTop.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/Sugiyama_DownTop.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SugiyamaLayout_RightCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SugiyamaLayout_Right}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.SugiyamaLayout}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.SugiyamaLayout_Right}" />
      <Setter Property="CommandParameter" Value="Right" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/Sugiyama_LeftRight.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/Sugiyama_LeftRight.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SugiyamaLayout_LeftCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SugiyamaLayout_Left}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.SugiyamaLayout}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.SugiyamaLayout_Left}" />
      <Setter Property="CommandParameter" Value="Left" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/Sugiyama_RightLeft.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/Sugiyama_RightLeft.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=CircularLayoutCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_CircularLayout}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.CircularLayout}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.CircularLayout}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/CircularLayout.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/CircularLayout.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ChangeConnectorType_RightAngleCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_ChangeConnectorType_RightAngle}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.ChangeConnectorType}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.ChangeConnectorType_RightAngle}" />
      <Setter Property="CommandParameter" Value="{x:Static dxdiagn:CommandParameters.ChangeConnectorType_RightAngle}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/RightAngleConnector.svg}" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ChangeConnectorType_CurvedCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_ChangeConnectorType_Curved}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.ChangeConnectorType}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.ChangeConnectorType_Curved}" />
      <Setter Property="CommandParameter" Value="{x:Static dxdiagn:CommandParameters.ChangeConnectorType_Curved}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/CurvedConnector.svg}" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ChangeConnectorType_StraightCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_ChangeConnectorType_Straight}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.ChangeConnectorType}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.ChangeConnectorType_Straight}" />
      <Setter Property="CommandParameter" Value="{x:Static dxdiagn:CommandParameters.ChangeConnectorType_Straight}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/StraightConnector.svg}" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=TreeLayoutForSubordinates_TopToBottomCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_TreeLayoutForSubordinates_TopToBottom}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.TreeLayoutForSubordinates}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.TreeLayoutForSubordinates_TopToBottom}" />
      <Setter Property="CommandParameter" Value="TopToBottom" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/TopDown.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/TopDown.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=TreeLayoutForSubordinates_BottomToTopCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_TreeLayoutForSubordinates_BottomToTop}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.TreeLayoutForSubordinates}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.TreeLayoutForSubordinates_BottomToTop}" />
      <Setter Property="CommandParameter" Value="BottomToTop" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/DownTop.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/DownTop.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=TreeLayoutForSubordinates_LeftToRightCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_TreeLayoutForSubordinates_LeftToRight}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.TreeLayoutForSubordinates}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.TreeLayoutForSubordinates_LeftToRight}" />
      <Setter Property="CommandParameter" Value="LeftToRight" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/LeftRight.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/LeftRight.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=TreeLayoutForSubordinates_RightToLeftCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_TreeLayoutForSubordinates_RightToLeft}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.TreeLayoutForSubordinates}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.TreeLayoutForSubordinates_RightToLeft}" />
      <Setter Property="CommandParameter" Value="RightToLeft" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/RightLeft.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/RightLeft.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=TipOverTreeLayoutForSubordinates_LeftToRightCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_TipOverTreeLayoutForSubordinates_LeftToRight}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.TipOverTreeLayoutForSubordinates}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.TipOverTreeLayoutForSubordinates_LeftToRight}" />
      <Setter Property="CommandParameter" Value="LeftToRight" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/TipOverTree_Right.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/TipOverTree_Right.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=TipOverTreeLayoutForSubordinates_RightToLeftCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_TipOverTreeLayoutForSubordinates_RightToLeft}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.TipOverTreeLayoutForSubordinates}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.TipOverTreeLayoutForSubordinates_RightToLeft}" />
      <Setter Property="CommandParameter" Value="RightToLeft" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/TipOverTree_Left.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/TipOverTree_Left.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=MindMapTreeLayoutForSubordinates_HorizontalCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_MindMapTreeLayoutForSubordinates_Horizontal}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.MindMapTreeLayoutForSubordinates}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.MindMapTreeLayoutForSubordinates_Horizontal}" />
      <Setter Property="CommandParameter" Value="Horizontal" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/MindMapTree_Horizontal.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/MindMapTree_Horizontal.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=MindMapTreeLayoutForSubordinates_VerticalCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_MindMapTreeLayoutForSubordinates_Vertical}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.MindMapTreeLayoutForSubordinates}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.MindMapTreeLayoutForSubordinates_Vertical}" />
      <Setter Property="CommandParameter" Value="Vertical" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/MindMapTree_Vertical.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/MindMapTree_Vertical.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=FitToPageCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_FitToPage}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_FitToPage_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding Path=(dxr:RibbonPage.RibbonPage).Commands[DiagramCommand_FitToPage], RelativeSource={RelativeSource Self}}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/FitToPage.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/FitToPage.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="SmallWithText" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_FitToPage_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=FitToWidthCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_FitToWidth}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_FitToWidth_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding Path=(dxr:RibbonPage.RibbonPage).Commands[DiagramCommand_FitToWidth], RelativeSource={RelativeSource Self}}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/FitToWidth.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/FitToWidth.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="SmallWithText" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_FitToWidth_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=Rotate_Right90CommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_Rotate_Right90}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_Rotate_Right90_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.Rotate}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.Rotate_Right90}" />
      <Setter Property="CommandParameter" Value="-90" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/Rotate_Right90.svg}" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_Rotate_Right90_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowRotateItems" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=Rotate_Left90CommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_Rotate_Left90}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_Rotate_Left90_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.Rotate}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.Rotate_Left90}" />
      <Setter Property="CommandParameter" Value="90" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/Rotate_Left90.svg}" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_Rotate_Left90_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowRotateItems" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=FlipImage_VerticalCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_FlipImage_Vertical}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_FlipImage_Vertical_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.FlipImage}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.FlipImage_Vertical}" />
      <Setter Property="CommandParameter" Value="Vertical" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/FlipImage_Vertical.svg}" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_FlipImage_Vertical_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowFlipImage" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=FlipImage_HorizontalCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_FlipImage_Horizontal}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_FlipImage_Horizontal_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.FlipImage}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.FlipImage_Horizontal}" />
      <Setter Property="CommandParameter" Value="Horizontal" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/FlipImage_Horizontal.svg}" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_FlipImage_Horizontal_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowFlipImage" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SetSelectedImagesStretchMode_StretchCommandItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SetSelectedImagesStretchMode_Stretch}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_SetSelectedImagesStretchMode_Stretch_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.SetSelectedImagesStretchMode}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.SetSelectedImagesStretchMode_Stretch}" />
      <Setter Property="CommandParameter" Value="Stretch" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/SetSelectedImagesStretchMode_Stretch.svg}" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SetSelectedImagesStretchMode_Stretch_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SetSelectedImagesStretchMode_UniformCommandItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SetSelectedImagesStretchMode_Uniform}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_SetSelectedImagesStretchMode_Uniform_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.SetSelectedImagesStretchMode}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.SetSelectedImagesStretchMode_Uniform}" />
      <Setter Property="CommandParameter" Value="Uniform" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/SetSelectedImagesStretchMode_Uniform.svg}" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SetSelectedImagesStretchMode_Uniform_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=SetSelectedImagesStretchMode_UniformToFillCommandItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SetSelectedImagesStretchMode_UniformToFill}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_SetSelectedImagesStretchMode_UniformToFill_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.SetSelectedImagesStretchMode}" />
      <Setter Property="KeyGesture" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Shortcuts.SetSelectedImagesStretchMode_UniformToFill}" />
      <Setter Property="CommandParameter" Value="UniformToFill" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/SetSelectedImagesStretchMode_UniformToFill.svg}" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_SetSelectedImagesStretchMode_UniformToFill_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ResetSelectedImagesCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_ResetSelectedImages}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_ResetSelectedImages_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding Path=(dxr:RibbonPage.RibbonPage).Commands[DiagramCommand_ResetSelectedImages], RelativeSource={RelativeSource Self}}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/ResetSelectedImages.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/ResetSelectedImages.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_ResetSelectedImages_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=Or}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowRotateItems" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowResizeItems" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowFlipImage" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeImageStretchMode" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=LoadImageCommandItemStyleBase}" TargetType="{x:Type dxb:BarButtonItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_LoadImage}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_LoadImage_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding Path=(dxr:RibbonPage.RibbonPage).Commands[DiagramCommand_LoadImage], RelativeSource={RelativeSource Self}}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/LoadImage.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/LoadImage.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_LoadImage_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeImage" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=ShowContainerHeaderCommandItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_ShowContainerHeader}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_ShowContainerHeader_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding Path=(dxr:RibbonPage.RibbonPage).Commands[DiagramCommand_ShowContainerHeader], RelativeSource={RelativeSource Self}}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/ShowContainerHeader.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/ShowContainerHeader.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_ShowContainerHeader_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeContainerHeaderVisibility" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlCommandsThemeKeys ResourceKey=CollapseSelectedContainersCommandItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_CollapseSelectedContainers}" />
      <Setter Property="Description" Value="{Binding ConverterParameter=DiagramCommand_CollapseSelectedContainers_Description, Converter={StaticResource DiagramStringIdConverter}}" />
      <Setter Property="Command" Value="{Binding Path=(dxr:RibbonPage.RibbonPage).Commands[DiagramCommand_CollapseSelectedContainers], RelativeSource={RelativeSource Self}}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/CollapseSelectedContainers.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/CollapseSelectedContainers.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="RibbonStyle" Value="Default" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString DiagramCommand_CollapseSelectedContainers_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowCollapseContainers" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=PageOrientation_HorizontalItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="GroupIndex" Value="100" />
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString PageOrientation_Horizontal}" />
      <Setter Property="CustomizationContent" Value="{dxdiag:DiagramControlLocalizedString PageOrientation_Horizontal}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/PageOrientation_Horizontal.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/PageOrientation_Horizontal.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="AllowUncheckInGroup" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=PageOrientation_VerticalItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="GroupIndex" Value="100" />
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString PageOrientation_Vertical}" />
      <Setter Property="CustomizationContent" Value="{dxdiag:DiagramControlLocalizedString PageOrientation_Vertical}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/PageOrientation_Vertical.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/PageOrientation_Vertical.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="AllowUncheckInGroup" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=PageSize_LetterItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="GroupIndex" Value="101" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/PageSize_Letter.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/PageSize_Letter.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="AllowUncheckInGroup" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=PageSize_TabloidItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="GroupIndex" Value="101" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/PageSize_Tabloid.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/PageSize_Tabloid.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="AllowUncheckInGroup" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=PageSize_LegalItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="GroupIndex" Value="101" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/PageSize_Legal.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/PageSize_Legal.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="AllowUncheckInGroup" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=PageSize_StatementItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="GroupIndex" Value="101" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/PageSize_Statement.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/PageSize_Statement.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="AllowUncheckInGroup" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=PageSize_ExecutiveItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="GroupIndex" Value="101" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/PageSize_Executive.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/PageSize_Executive.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="AllowUncheckInGroup" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=PageSize_A3ItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="GroupIndex" Value="101" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/PageSize_A3.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/PageSize_A3.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="AllowUncheckInGroup" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=PageSize_A4ItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="GroupIndex" Value="101" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/PageSize_A4.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/PageSize_A4.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="AllowUncheckInGroup" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=PageSize_A5ItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="GroupIndex" Value="101" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/PageSize_A5.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/PageSize_A5.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="AllowUncheckInGroup" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=PageSize_B4ItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="GroupIndex" Value="101" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/PageSize_B4.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/PageSize_B4.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="AllowUncheckInGroup" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=PageSize_B5ItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="GroupIndex" Value="101" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/PageSize_B5.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/PageSize_B5.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="AllowUncheckInGroup" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=AutoSize_NoneItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="GroupIndex" Value="102" />
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString AutoSize_None}" />
      <Setter Property="CustomizationContent" Value="{dxdiag:DiagramControlLocalizedString AutoSize_None}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/AutoSize_None.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/AutoSize_None.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="AllowUncheckInGroup" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=AutoSize_AutoSizeItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="GroupIndex" Value="102" />
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString AutoSize_AutoSize}" />
      <Setter Property="CustomizationContent" Value="{dxdiag:DiagramControlLocalizedString AutoSize_AutoSize}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/AutoSize_AutoSize.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/AutoSize_AutoSize.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="AllowUncheckInGroup" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=AutoSize_FillItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="GroupIndex" Value="102" />
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString AutoSize_Fill}" />
      <Setter Property="CustomizationContent" Value="{dxdiag:DiagramControlLocalizedString AutoSize_Fill}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/AutoSize_Fill.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/AutoSize_Fill.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="AllowUncheckInGroup" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ImageToolsSetImageScale_0_25ItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="GroupIndex" Value="103" />
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString ImageToolsSetImageScale_0_25}" />
      <Setter Property="CustomizationContent" Value="{dxdiag:DiagramControlLocalizedString ImageToolsSetImageScale_0_25}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="AllowUncheckInGroup" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ImageToolsSetImageScale_0_5ItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="GroupIndex" Value="103" />
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString ImageToolsSetImageScale_0_5}" />
      <Setter Property="CustomizationContent" Value="{dxdiag:DiagramControlLocalizedString ImageToolsSetImageScale_0_5}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="AllowUncheckInGroup" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ImageToolsSetImageScale_0_75ItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="GroupIndex" Value="103" />
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString ImageToolsSetImageScale_0_75}" />
      <Setter Property="CustomizationContent" Value="{dxdiag:DiagramControlLocalizedString ImageToolsSetImageScale_0_75}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="AllowUncheckInGroup" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ImageToolsSetImageScale_1ItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="GroupIndex" Value="103" />
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString ImageToolsSetImageScale_1}" />
      <Setter Property="CustomizationContent" Value="{dxdiag:DiagramControlLocalizedString ImageToolsSetImageScale_1}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="AllowUncheckInGroup" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ImageToolsSetImageScale_1_5ItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="GroupIndex" Value="103" />
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString ImageToolsSetImageScale_1_5}" />
      <Setter Property="CustomizationContent" Value="{dxdiag:DiagramControlLocalizedString ImageToolsSetImageScale_1_5}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="AllowUncheckInGroup" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ImageToolsSetImageScale_2ItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="GroupIndex" Value="103" />
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString ImageToolsSetImageScale_2}" />
      <Setter Property="CustomizationContent" Value="{dxdiag:DiagramControlLocalizedString ImageToolsSetImageScale_2}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="AllowUncheckInGroup" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ImageToolsSetImageScale_4ItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="GroupIndex" Value="103" />
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString ImageToolsSetImageScale_4}" />
      <Setter Property="CustomizationContent" Value="{dxdiag:DiagramControlLocalizedString ImageToolsSetImageScale_4}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="AllowUncheckInGroup" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ContainerPadding_P0ItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="GroupIndex" Value="104" />
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString ContainerPadding_P0}" />
      <Setter Property="CustomizationContent" Value="{dxdiag:DiagramControlLocalizedString ContainerPadding_P0}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="AllowUncheckInGroup" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ContainerPadding_P4ItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="GroupIndex" Value="104" />
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString ContainerPadding_P4}" />
      <Setter Property="CustomizationContent" Value="{dxdiag:DiagramControlLocalizedString ContainerPadding_P4}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="AllowUncheckInGroup" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ContainerPadding_P8ItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="GroupIndex" Value="104" />
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString ContainerPadding_P8}" />
      <Setter Property="CustomizationContent" Value="{dxdiag:DiagramControlLocalizedString ContainerPadding_P8}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="AllowUncheckInGroup" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ContainerPadding_P12ItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="GroupIndex" Value="104" />
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString ContainerPadding_P12}" />
      <Setter Property="CustomizationContent" Value="{dxdiag:DiagramControlLocalizedString ContainerPadding_P12}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="AllowUncheckInGroup" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ContainerPadding_P16ItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="GroupIndex" Value="104" />
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString ContainerPadding_P16}" />
      <Setter Property="CustomizationContent" Value="{dxdiag:DiagramControlLocalizedString ContainerPadding_P16}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="AllowUncheckInGroup" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ContainerPadding_P24ItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="GroupIndex" Value="104" />
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString ContainerPadding_P24}" />
      <Setter Property="CustomizationContent" Value="{dxdiag:DiagramControlLocalizedString ContainerPadding_P24}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="AllowUncheckInGroup" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ContainerPadding_P32ItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="GroupIndex" Value="104" />
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString ContainerPadding_P32}" />
      <Setter Property="CustomizationContent" Value="{dxdiag:DiagramControlLocalizedString ContainerPadding_P32}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="AllowUncheckInGroup" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ContainerHeaderPadding_P0ItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="GroupIndex" Value="105" />
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString ContainerHeaderPadding_P0}" />
      <Setter Property="CustomizationContent" Value="{dxdiag:DiagramControlLocalizedString ContainerHeaderPadding_P0}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="AllowUncheckInGroup" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ContainerHeaderPadding_P4ItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="GroupIndex" Value="105" />
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString ContainerHeaderPadding_P4}" />
      <Setter Property="CustomizationContent" Value="{dxdiag:DiagramControlLocalizedString ContainerHeaderPadding_P4}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="AllowUncheckInGroup" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ContainerHeaderPadding_P8ItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="GroupIndex" Value="105" />
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString ContainerHeaderPadding_P8}" />
      <Setter Property="CustomizationContent" Value="{dxdiag:DiagramControlLocalizedString ContainerHeaderPadding_P8}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="AllowUncheckInGroup" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ContainerHeaderPadding_P12ItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="GroupIndex" Value="105" />
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString ContainerHeaderPadding_P12}" />
      <Setter Property="CustomizationContent" Value="{dxdiag:DiagramControlLocalizedString ContainerHeaderPadding_P12}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="AllowUncheckInGroup" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ContainerHeaderPadding_P16ItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="GroupIndex" Value="105" />
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString ContainerHeaderPadding_P16}" />
      <Setter Property="CustomizationContent" Value="{dxdiag:DiagramControlLocalizedString ContainerHeaderPadding_P16}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="AllowUncheckInGroup" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ContainerHeaderPadding_P24ItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="GroupIndex" Value="105" />
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString ContainerHeaderPadding_P24}" />
      <Setter Property="CustomizationContent" Value="{dxdiag:DiagramControlLocalizedString ContainerHeaderPadding_P24}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="AllowUncheckInGroup" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ContainerHeaderPadding_P32ItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="GroupIndex" Value="105" />
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString ContainerHeaderPadding_P32}" />
      <Setter Property="CustomizationContent" Value="{dxdiag:DiagramControlLocalizedString ContainerHeaderPadding_P32}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="AllowUncheckInGroup" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ListOrientation_HorizontalItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="GroupIndex" Value="106" />
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString ListOrientation_Horizontal}" />
      <Setter Property="CustomizationContent" Value="{dxdiag:DiagramControlLocalizedString ListOrientation_Horizontal}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/ListOrientation_Horizontal.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/ListOrientation_Horizontal.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="AllowUncheckInGroup" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlSourceItemsThemeKeys ResourceKey=ListOrientation_VerticalItemStyleBase}" TargetType="{x:Type dxb:BarCheckItem}">
    <Style.Setters>
      <Setter Property="GroupIndex" Value="106" />
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString ListOrientation_Vertical}" />
      <Setter Property="CustomizationContent" Value="{dxdiag:DiagramControlLocalizedString ListOrientation_Vertical}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/ListOrientation_Vertical.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/ListOrientation_Vertical.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="AllowUncheckInGroup" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlBaseThemeKeys ResourceKey=PageOrientationStyleBase}" TargetType="{x:Type dxb:BarSubItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString PageOrientation}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/PageOrientation.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/PageOrientation.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString PageOrientation_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangePageParameters" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlBaseThemeKeys ResourceKey=PageSizeStyleBase}" TargetType="{x:Type dxb:BarSubItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString PageSize}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/PageSize.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/PageSize.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString PageSize_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangePageParameters" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlBaseThemeKeys ResourceKey=AutoSizeStyleBase}" TargetType="{x:Type dxb:BarSubItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString AutoSize}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/AutoSize.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/AutoSize.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString AutoSize_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeCanvasSizeMode" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlBaseThemeKeys ResourceKey=ReLayoutStyleBase}" TargetType="{x:Type dxb:BarSubItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString ReLayout}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/ReLayout.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/ReLayout.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString ReLayout_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowApplyAutomaticLayout" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlBaseThemeKeys ResourceKey=ChangeConnectorTypeStyleBase}" TargetType="{x:Type dxb:BarSubItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString ChangeConnectorType}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/ChangeConnectorType.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/ChangeConnectorType.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString ChangeConnectorType_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeConnectorsType" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlBaseThemeKeys ResourceKey=ReLayoutPartsStyleBase}" TargetType="{x:Type dxb:BarSubItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString ReLayoutParts}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/ReLayoutParts.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/ReLayoutParts.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString ReLayoutParts_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowApplyAutomaticLayoutForSubordinates" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlBaseThemeKeys ResourceKey=PanesStyleBase}" TargetType="{x:Type dxb:BarSubItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString Panes}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/Panes.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/Panes.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString Panes_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlBaseThemeKeys ResourceKey=ImageToolsRotateStyleBase}" TargetType="{x:Type dxb:BarSubItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString ImageToolsRotate}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/Rotate_Right90.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/Rotate_Right90.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString ImageToolsRotate_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=Or}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowRotateItems" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowFlipImage" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlBaseThemeKeys ResourceKey=ImageToolsStretchModeStyleBase}" TargetType="{x:Type dxb:BarSubItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString ImageToolsStretchMode}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/Image_StretchMode.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/Image_StretchMode.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString ImageToolsStretchMode_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeImageStretchMode" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlBaseThemeKeys ResourceKey=ImageToolsSetImageScaleStyleBase}" TargetType="{x:Type dxb:BarSubItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString ImageToolsSetImageScale}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/ImageToolsSetImageScale.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/ImageToolsSetImageScale.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString ImageToolsSetImageScale_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowResizeItems" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlBaseThemeKeys ResourceKey=ContainerPaddingStyleBase}" TargetType="{x:Type dxb:BarSubItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString ContainerPadding}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/ContainerPadding.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/ContainerPadding.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString ContainerPadding_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeContainerPadding" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlBaseThemeKeys ResourceKey=ContainerHeaderPaddingStyleBase}" TargetType="{x:Type dxb:BarSubItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString ContainerHeaderPadding}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/ContainerHeaderPadding.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/ContainerHeaderPadding.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString ContainerHeaderPadding_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeContainerHeaderPadding" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlBaseThemeKeys ResourceKey=ListOrientationStyleBase}" TargetType="{x:Type dxb:BarSubItem}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString ListOrientation}" />
      <Setter Property="Glyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/ListOrientation.svg}" />
      <Setter Property="LargeGlyph" Value="{dxdiag:DiagramSvgImage Path=Images/Svg/ListOrientation.svg}" />
      <Setter Property="GlyphSize" Value="Large" />
      <Setter Property="Hint" Value="{dxdiag:DiagramControlLocalizedString ListOrientation_Description}" />
      <Setter Property="ShowScreenTip" Value="True" />
      <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlBaseThemeKeys ResourceKey=ReLayoutTreeStyleBase}" TargetType="{x:Type dxb:BarItemLinkMenuHeader}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString ReLayoutTree}" />
      <Setter Property="ItemsOrientation" Value="Horizontal" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlBaseThemeKeys ResourceKey=ReLayoutTipOverTreeHeaderStyleBase}" TargetType="{x:Type dxb:BarItemLinkMenuHeader}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString ReLayoutTipOverTreeHeader}" />
      <Setter Property="ItemsOrientation" Value="Horizontal" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlBaseThemeKeys ResourceKey=ReLayoutMindMapTreeHeaderStyleBase}" TargetType="{x:Type dxb:BarItemLinkMenuHeader}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString ReLayoutMindMapTreeHeader}" />
      <Setter Property="ItemsOrientation" Value="Horizontal" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlBaseThemeKeys ResourceKey=ReLayoutSugiyamaStyleBase}" TargetType="{x:Type dxb:BarItemLinkMenuHeader}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString ReLayoutSugiyama}" />
      <Setter Property="ItemsOrientation" Value="Horizontal" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlBaseThemeKeys ResourceKey=ReLayoutCircularHeaderStyleBase}" TargetType="{x:Type dxb:BarItemLinkMenuHeader}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString ReLayoutCircularHeader}" />
      <Setter Property="ItemsOrientation" Value="Horizontal" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlBaseThemeKeys ResourceKey=ReLayoutPartsTreeHeaderStyleBase}" TargetType="{x:Type dxb:BarItemLinkMenuHeader}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString ReLayoutPartsTreeHeader}" />
      <Setter Property="ItemsOrientation" Value="Horizontal" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlBaseThemeKeys ResourceKey=ReLayoutPartsTipOverTreeHeaderStyleBase}" TargetType="{x:Type dxb:BarItemLinkMenuHeader}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString ReLayoutPartsTipOverTreeHeader}" />
      <Setter Property="ItemsOrientation" Value="Horizontal" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DiagramDesignerControlBaseThemeKeys ResourceKey=ReLayoutPartsMindMapTreeHeaderStyleBase}" TargetType="{x:Type dxb:BarItemLinkMenuHeader}">
    <Style.Setters>
      <Setter Property="Content" Value="{dxdiag:DiagramControlLocalizedString ReLayoutPartsMindMapTreeHeader}" />
      <Setter Property="ItemsOrientation" Value="Horizontal" />
    </Style.Setters>
  </Style>
  <Color x:Key="{dxdiagt:DesignerControlPageCategoriesThemeKeys ResourceKey=ImageToolsPageCategoryColor}">#FF49A349</Color>
  <Color x:Key="{dxdiagt:DesignerControlPageCategoriesThemeKeys ResourceKey=ContainerToolsPageCategoryColor}">#FFFF9D00</Color>
  <Style x:Key="{dxdiagt:DesignerControlPageCategoriesThemeKeys ResourceKey=ImageToolsPageCategoryStyleBase}" TargetType="{x:Type dxr:RibbonPageCategory}">
    <Style.Setters>
      <Setter Property="Color" Value="{StaticResource {dxdiagt:DesignerControlPageCategoriesThemeKeys ResourceKey=ImageToolsPageCategoryColor}}" />
      <Setter Property="IsVisible" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).IsImageToolsVisible}" />
      <Setter Property="Caption" Value="{dxdiag:DiagramControlLocalizedString RibbonPageCategory_ImageTools}" />
      <Setter Property="SelectedPageOnCategoryShowing" Value="None" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlPageCategoriesThemeKeys ResourceKey=ContainerToolsPageCategoryStyleBase}" TargetType="{x:Type dxr:RibbonPageCategory}">
    <Style.Setters>
      <Setter Property="Color" Value="{StaticResource {dxdiagt:DesignerControlPageCategoriesThemeKeys ResourceKey=ContainerToolsPageCategoryColor}}" />
      <Setter Property="IsVisible" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).IsContainerToolsVisible}" />
      <Setter Property="Caption" Value="{dxdiag:DiagramControlLocalizedString RibbonPageCategory_ContainerTools}" />
      <Setter Property="SelectedPageOnCategoryShowing" Value="None" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlPageThemeKeys ResourceKey=HomePageStyle}" TargetType="{x:Type dxr:RibbonPage}">
    <Style.Setters>
      <Setter Property="Caption" Value="{dxdiag:DiagramControlLocalizedString RibbonPage_Home}" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlPageThemeKeys ResourceKey=InsertPageStyle}" TargetType="{x:Type dxr:RibbonPage}">
    <Style.Setters>
      <Setter Property="Caption" Value="{dxdiag:DiagramControlLocalizedString RibbonPage_Insert}" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowAddRemoveItems" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlPageThemeKeys ResourceKey=DesignPageStyle}" TargetType="{x:Type dxr:RibbonPage}">
    <Style.Setters>
      <Setter Property="Caption" Value="{dxdiag:DiagramControlLocalizedString RibbonPage_Design}" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=Or}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangePageParameters" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeCanvasSizeMode" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeTheme" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowAddRemoveItems" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowMoveItems" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowApplyAutomaticLayout" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowApplyAutomaticLayoutForSubordinates" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeConnectorsType" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlPageThemeKeys ResourceKey=ViewPageStyle}" TargetType="{x:Type dxr:RibbonPage}">
    <Style.Setters>
      <Setter Property="Caption" Value="{dxdiag:DiagramControlLocalizedString RibbonPage_View}" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlPageThemeKeys ResourceKey=ImageToolsPageStyle}" TargetType="{x:Type dxr:RibbonPage}">
    <Style.Setters>
      <Setter Property="Caption" Value="{dxdiag:DiagramControlLocalizedString RibbonPage_FormatImage}" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=Or}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeItemZOrder" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowRotateItems" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowFlipImage" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeImageStretchMode" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowResizeItems" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlPageThemeKeys ResourceKey=ContainerToolsPageStyle}" TargetType="{x:Type dxr:RibbonPage}">
    <Style.Setters>
      <Setter Property="Caption" Value="{dxdiag:DiagramControlLocalizedString RibbonPage_FormatContainer}" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=Or}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeContainerStyle" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeContainerPadding" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeContainerHeaderPadding" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeContainerHeaderVisibility" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlPageGroupThemeKeys ResourceKey=ClipboardRibbonGroupStyle}" TargetType="{x:Type dxr:RibbonPageGroup}">
    <Style.Setters>
      <Setter Property="Caption" Value="{dxdiag:DiagramControlLocalizedString RibbonPageGroup_Clipboard}" />
      <Setter Property="HideWhenEmpty" Value="true" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlPageGroupThemeKeys ResourceKey=FontRibbonGroupStyle}" TargetType="{x:Type dxr:RibbonPageGroup}">
    <Style.Setters>
      <Setter Property="Caption" Value="{dxdiag:DiagramControlLocalizedString RibbonPageGroup_Font}" />
      <Setter Property="HideWhenEmpty" Value="true" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=Or}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeTextFont" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeTextForeground" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlPageGroupThemeKeys ResourceKey=TextToolsGroupStyle}" TargetType="{x:Type dxr:RibbonPageGroup}">
    <Style.Setters>
      <Setter Property="Caption" Value="{dxdiag:DiagramControlLocalizedString RibbonPageGroup_Paragraph}" />
      <Setter Property="HideWhenEmpty" Value="true" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=Or}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeTextVerticalAlignment" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeTextHorizontalAlignment" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlPageGroupThemeKeys ResourceKey=ToolsGroupStyle}" TargetType="{x:Type dxr:RibbonPageGroup}">
    <Style.Setters>
      <Setter Property="Caption" Value="{dxdiag:DiagramControlLocalizedString RibbonPageGroup_Tools}" />
      <Setter Property="HideWhenEmpty" Value="true" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlPageGroupThemeKeys ResourceKey=ShapeStylesGroupStyle}" TargetType="{x:Type dxr:RibbonPageGroup}">
    <Style.Setters>
      <Setter Property="Caption" Value="{dxdiag:DiagramControlLocalizedString RibbonPageGroup_ShapeStyles}" />
      <Setter Property="HideWhenEmpty" Value="true" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlPageGroupThemeKeys ResourceKey=ArrangeGroupStyle}" TargetType="{x:Type dxr:RibbonPageGroup}">
    <Style.Setters>
      <Setter Property="Caption" Value="{dxdiag:DiagramControlLocalizedString RibbonPageGroup_Arrange}" />
      <Setter Property="HideWhenEmpty" Value="true" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeItemZOrder" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlPageGroupThemeKeys ResourceKey=DiagramPartsRibbonGroupStyle}" TargetType="{x:Type dxr:RibbonPageGroup}">
    <Style.Setters>
      <Setter Property="Caption" Value="{dxdiag:DiagramControlLocalizedString RibbonPageGroup_DiagramParts}" />
      <Setter Property="HideWhenEmpty" Value="true" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowAddRemoveItems" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlPageGroupThemeKeys ResourceKey=PageSetupGroupStyle}" TargetType="{x:Type dxr:RibbonPageGroup}">
    <Style.Setters>
      <Setter Property="Caption" Value="{dxdiag:DiagramControlLocalizedString RibbonPageGroup_PageSetup}" />
      <Setter Property="ShowCaptionButton" Value="true" />
      <Setter Property="CaptionButtonCommand" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.SetPageParameters}" />
      <Setter Property="CaptionButtonCommandParameter" Value="PageSize" />
      <Setter Property="HideWhenEmpty" Value="true" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlPageGroupThemeKeys ResourceKey=ThemesGroupStyle}" TargetType="{x:Type dxr:RibbonPageGroup}">
    <Style.Setters>
      <Setter Property="Caption" Value="{dxdiag:DiagramControlLocalizedString RibbonPageGroup_Themes}" />
      <Setter Property="HideWhenEmpty" Value="true" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlPageGroupThemeKeys ResourceKey=OptionsGroupStyle}" TargetType="{x:Type dxr:RibbonPageGroup}">
    <Style.Setters>
      <Setter Property="Caption" Value="{dxdiag:DiagramControlLocalizedString RibbonPageGroup_Options}" />
      <Setter Property="HideWhenEmpty" Value="true" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=Or}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowAddRemoveItems" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowMoveItems" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlPageGroupThemeKeys ResourceKey=LayoutGroupStyle}" TargetType="{x:Type dxr:RibbonPageGroup}">
    <Style.Setters>
      <Setter Property="Caption" Value="{dxdiag:DiagramControlLocalizedString RibbonPageGroup_TreeLayout}" />
      <Setter Property="ShowCaptionButton" Value="true" />
      <Setter Property="CaptionButtonCommand" Value="{Binding RelativeSource={RelativeSource Self}, Path=(dxdiag:DiagramControl.Diagram).Commands.SetPageParameters}" />
      <Setter Property="CaptionButtonCommandParameter" Value="LayoutAndRouting" />
      <Setter Property="HideWhenEmpty" Value="true" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlPageGroupThemeKeys ResourceKey=ShowGroupStyle}" TargetType="{x:Type dxr:RibbonPageGroup}">
    <Style.Setters>
      <Setter Property="Caption" Value="{dxdiag:DiagramControlLocalizedString RibbonPageGroup_Show}" />
      <Setter Property="HideWhenEmpty" Value="true" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlPageGroupThemeKeys ResourceKey=ZoomGroupStyle}" TargetType="{x:Type dxr:RibbonPageGroup}">
    <Style.Setters>
      <Setter Property="Caption" Value="{dxdiag:DiagramControlLocalizedString RibbonPageGroup_Zoom}" />
      <Setter Property="HideWhenEmpty" Value="true" />
      <Setter Property="IsVisible" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(dxdiag:DiagramControl.Diagram).AllowZoom}" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlPageGroupThemeKeys ResourceKey=ImageToolsArrangeGroupStyle}" TargetType="{x:Type dxr:RibbonPageGroup}">
    <Style.Setters>
      <Setter Property="Caption" Value="{dxdiag:DiagramControlLocalizedString RibbonPageGroup_ImageTools_Arrange}" />
      <Setter Property="HideWhenEmpty" Value="true" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=And}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeItemZOrder" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlPageGroupThemeKeys ResourceKey=ImageToolsImagePictureGroupStyle}" TargetType="{x:Type dxr:RibbonPageGroup}">
    <Style.Setters>
      <Setter Property="Caption" Value="{dxdiag:DiagramControlLocalizedString RibbonPageGroup_ImageTools_Picture}" />
      <Setter Property="HideWhenEmpty" Value="true" />
      <Setter Property="IsVisible">
        <Setter.Value>
          <MultiBinding Converter="{dxdiagn:ProtectionPropertiesToIsVisibleConverter Operator=Or}">
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowRotateItems" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowResizeItems" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowFlipImage" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeImageStretchMode" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).AllowChangeImage" />
            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="(dxdiag:DiagramControl.Diagram).IsReadOnly" />
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlPageGroupThemeKeys ResourceKey=ContainerSizeGroupStyle}" TargetType="{x:Type dxr:RibbonPageGroup}">
    <Style.Setters>
      <Setter Property="Caption" Value="{dxdiag:DiagramControlLocalizedString RibbonPageGroup_ContainerSize}" />
      <Setter Property="HideWhenEmpty" Value="true" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlPageGroupThemeKeys ResourceKey=ContainerStylesGroupStyle}" TargetType="{x:Type dxr:RibbonPageGroup}">
    <Style.Setters>
      <Setter Property="Caption" Value="{dxdiag:DiagramControlLocalizedString RibbonPageGroup_ContainerStyles}" />
      <Setter Property="HideWhenEmpty" Value="true" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlBarButtonGroupThemeKeys ResourceKey=FontSizeAndFamilyButtonGroupStyle}" TargetType="{x:Type dxr:BarButtonGroup}">
    <Style.Setters>
      <Setter Property="CustomizationContent" Value="{dxdiag:DiagramControlLocalizedString FontSizeAndFamilyButtonGroup}" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlBarButtonGroupThemeKeys ResourceKey=FontTypeAndColorButtonGroupStyle}" TargetType="{x:Type dxr:BarButtonGroup}">
    <Style.Setters>
      <Setter Property="CustomizationContent" Value="{dxdiag:DiagramControlLocalizedString FontTypeAndColorButtonGroup}" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlBarButtonGroupThemeKeys ResourceKey=VerticalTextAlignmentButtonGroupStyle}" TargetType="{x:Type dxr:BarButtonGroup}">
    <Style.Setters>
      <Setter Property="CustomizationContent" Value="{dxdiag:DiagramControlLocalizedString VerticalTextAlignmentButtonGroup}" />
    </Style.Setters>
  </Style>
  <Style x:Key="{dxdiagt:DesignerControlBarButtonGroupThemeKeys ResourceKey=HorizontalTextAlignmentButtonGroupStyle}" TargetType="{x:Type dxr:BarButtonGroup}">
    <Style.Setters>
      <Setter Property="CustomizationContent" Value="{dxdiag:DiagramControlLocalizedString HorizontalTextAlignmentButtonGroup}" />
    </Style.Setters>
  </Style>
</ResourceDictionary>