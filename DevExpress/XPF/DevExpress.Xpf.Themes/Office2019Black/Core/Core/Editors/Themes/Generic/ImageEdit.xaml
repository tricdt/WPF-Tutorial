<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxtEx="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" xmlns:dxmvvmi="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" xmlns:dxep="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys" xmlns:help="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxeh="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:dxef="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
  <dx:BoolToVisibilityInverseConverter x:Key="inverseBoolToVisibilityConverter" />
  <dx:BoolToVisibilityConverter x:Key="boolToVisibilityConverter" />
  <dx:EmbeddedResourceImageConverter x:Key="EmbeddedResourceImageConverter" />
  <dx:EditorStringIdConverter x:Key="EditorStringIdConverter" />
  <SolidColorBrush x:Key="ImageEditToolSeparatorBackground" Color="#FFDADADA" />
  <sys:Double x:Key="{dxet:CameraControlThemeKey ResourceKey=SettingsMinWidth}">280</sys:Double>
  <SolidColorBrush x:Key="{dxet:ImageEditThemeKey ResourceKey=InplaceMenuBackgroundBrush}" Color="#FF404040" />
  <ControlTemplate x:Key="{dxet:CameraControlThemeKey ResourceKey=TakePictureControlTemplate}" TargetType="{x:Type dxei:TakePictureControl}">
    <Grid Margin="15">
      <Grid.RowDefinitions>
        <RowDefinition Height="*" />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <dxef:CameraControl x:Name="PART_Camera" Visibility="{Binding HasCapture, Converter={StaticResource inverseBoolToVisibilityConverter}}" />
      <Image Visibility="{Binding HasCapture, Converter={StaticResource boolToVisibilityConverter}}" Source="{Binding Image}" />
      <StackPanel Grid.Row="1" HorizontalAlignment="Right" Margin="0,10,0,0" Orientation="Horizontal">
        <Button Content="{Binding CaptureCaption}" Margin="0,0,10,0" Command="{Binding CaptureCommand}" Width="100" />
        <Button Margin="0,0,10,0" Content="{Binding SaveCaption}" Command="{Binding SaveCommand}" IsEnabled="{Binding HasCapture}" Width="75" />
        <Button Content="{Binding CancelCaption}" Command="{Binding CancelCommand}" Width="75" />
      </StackPanel>
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxet:CameraControlThemeKey ResourceKey=Template}" TargetType="{x:Type dxe:CameraControl}">
    <ContentControl x:Name="contentControl" Background="{TemplateBinding Background}" Template="{TemplateBinding BorderTemplate}" dx:FocusHelper2.Focusable="False">
      <Grid Background="Transparent">
        <Image x:Name="PART_Image" Stretch="{TemplateBinding Stretch}" StretchDirection="{TemplateBinding StretchDirection}" Source="{TemplateBinding NativeImageSource}" />
        <ToggleButton x:Name="button" Opacity="0" Visibility="{Binding PropertyProvider.IsSettingsButtonVisible, Converter={StaticResource boolToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource {dxet:CameraControlThemeKey ResourceKey=SettingsButtonStyle}}" />
        <dxef:FlyoutControl VerticalAlignment="Top" HorizontalAlignment="Right" AllowMoveAnimation="False" PlacementTarget="{Binding ElementName=contentControl}" IsOpen="{Binding ElementName=button, Path=IsChecked, Mode=TwoWay}">
          <dxef:FlyoutControl.Settings>
            <dxef:FlyoutSettings Placement="Right" />
          </dxef:FlyoutControl.Settings>
          <ContentPresenter Content="{Binding Path=PropertyProvider.Settings, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{DynamicResource {dxet:CameraControlThemeKey ResourceKey=CameraSettingsTemplate}}" />
        </dxef:FlyoutControl>
        <StackPanel VerticalAlignment="Center" Orientation="Vertical" Visibility="{Binding PropertyProvider.IsBusy, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}">
          <Image HorizontalAlignment="Center" Width="14" Height="14" Stretch="Fill" Source="{dx:ImageSelector Source='pack://application:,,,/DevExpress.Xpf.Core.v24.1;component/Editors/Images/error.png'}" />
          <TextBlock Text="{Binding PropertyProvider.ErrorCaption, RelativeSource={RelativeSource TemplatedParent}}" TextWrapping="Wrap" HorizontalAlignment="Center" />
          <Button Content="{Binding PropertyProvider.RefreshButtonCaption, RelativeSource={RelativeSource TemplatedParent}}" Command="{Binding PropertyProvider.RefreshCommand, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Center" Margin="0,5,0,0" />
        </StackPanel>
        <StackPanel VerticalAlignment="Center" Orientation="Vertical" Visibility="{Binding PropertyProvider.HasDevices, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource inverseBoolToVisibilityConverter}}">
          <Image HorizontalAlignment="Center" Width="14" Height="14" Stretch="Fill" Source="{dx:ImageSelector Source='pack://application:,,,/DevExpress.Xpf.Core.v24.1;component/Editors/Images/error.png'}" />
          <TextBlock Text="{Binding PropertyProvider.NoDevicesErrorCaption, RelativeSource={RelativeSource TemplatedParent}}" TextWrapping="Wrap" HorizontalAlignment="Center" />
          <Button Content="{Binding PropertyProvider.RefreshButtonCaption, RelativeSource={RelativeSource TemplatedParent}}" Command="{Binding PropertyProvider.RefreshCommand, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Center" Margin="0,5,0,0" />
        </StackPanel>
      </Grid>
    </ContentControl>
    <ControlTemplate.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Trigger.EnterActions>
          <BeginStoryboard>
            <Storyboard>
              <DoubleAnimation Storyboard.TargetName="button" Storyboard.TargetProperty="Opacity" Duration="0:0:0.21" To="1" />
            </Storyboard>
          </BeginStoryboard>
        </Trigger.EnterActions>
        <Trigger.ExitActions>
          <BeginStoryboard>
            <Storyboard>
              <DoubleAnimation Storyboard.TargetName="button" Storyboard.TargetProperty="Opacity" Duration="0:0:0.21" />
            </Storyboard>
          </BeginStoryboard>
        </Trigger.ExitActions>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <DataTemplate x:Key="{dxet:CameraControlThemeKey ResourceKey=CameraSettingsTemplate}">
    <Grid>
      <GroupBox Header="{Binding SettingsCaption}" MinWidth="{DynamicResource {dxet:CameraControlThemeKey ResourceKey=SettingsMinWidth}}" Margin="5">
        <StackPanel Orientation="Vertical" Margin="10">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="3*" />
              <ColumnDefinition Width="7*" />
            </Grid.ColumnDefinitions>
            <TextBlock Text="{Binding Device.Caption}" />
            <dxef:ComboBoxEdit Grid.Column="1" ItemsSource="{Binding Device.AvaliableValues}" EditValuePostMode="Immediate" AllowNullInput="True" ShowCustomItems="True" DisplayMember="Name" EditValue="{Binding ActualDevice, UpdateSourceTrigger=PropertyChanged}" IsTextEditable="False" />
          </Grid>
          <StackPanel Orientation="Vertical" IsEnabled="{Binding EnableSettings}">
            <Grid Margin="0,10,0,0" IsEnabled="{Binding IsResolutionEnabled}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="7*" />
              </Grid.ColumnDefinitions>
              <TextBlock Text="{Binding Resolution.Caption}" />
              <dxef:ComboBoxEdit Grid.Column="1" ItemsSource="{Binding Resolution.AvaliableValues}" ValueMember="Resolution" DisplayMember="DisplayText" EditValuePostMode="Immediate" EditValue="{Binding ActualResolution, UpdateSourceTrigger=PropertyChanged}" IsTextEditable="False" ValidateOnTextInput="True" />
            </Grid>
            <Grid Margin="0,10,0,0" IsEnabled="{Binding IsBrightnessEnabled}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="7*" />
              </Grid.ColumnDefinitions>
              <TextBlock Text="{Binding Brightness.Caption}" />
              <dxef:TrackBarEdit Grid.Column="1" Minimum="{Binding Brightness.MinValue}" Maximum="{Binding Brightness.MaxValue}" EditValue="{Binding ActualBrightness, UpdateSourceTrigger=PropertyChanged}" SmallStep="1" LargeStep="10" TickPlacement="None" />
            </Grid>
            <Grid Margin="0,10,0,0" IsEnabled="{Binding IsContrastEnabled}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="7*" />
              </Grid.ColumnDefinitions>
              <TextBlock Text="{Binding Contrast.Caption}" />
              <dxef:TrackBarEdit Grid.Column="1" Minimum="{Binding Contrast.MinValue}" Maximum="{Binding Contrast.MaxValue}" EditValue="{Binding ActualContrast, UpdateSourceTrigger=PropertyChanged}" SmallStep="1" LargeStep="10" TickPlacement="None" />
            </Grid>
            <Grid Margin="0,10,0,10" IsEnabled="{Binding IsDesaturateEnabled}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="7*" />
              </Grid.ColumnDefinitions>
              <TextBlock Text="{Binding Desaturate.Caption}" />
              <dxef:CheckEdit Grid.Column="1" EditValue="{Binding CanDesaturate, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" />
            </Grid>
            <Button Content="{Binding Reset.Caption}" Command="{Binding ResetToDefaultCommand}" IsEnabled="{Binding IsResetEnabled}" />
          </StackPanel>
        </StackPanel>
      </GroupBox>
    </Grid>
  </DataTemplate>
  <Style x:Key="{dxet:CameraControlThemeKey ResourceKey=SettingsButtonStyle}" TargetType="{x:Type ToggleButton}">
    <Setter Property="Margin" Value="5" />
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="HorizontalAlignment" Value="Right" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid x:Name="grid" Opacity="0.5" Background="Transparent">
            <Image Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center" Source="{Binding Source=DevExpress.Xpf.Core.Editors.Images.camerasettings.png, Converter={StaticResource EmbeddedResourceImageConverter}}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="grid" Storyboard.TargetProperty="Opacity" Duration="0:0:0.21" To="1" />
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="grid" Storyboard.TargetProperty="Opacity" Duration="0:0:0.21" />
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.ExitActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="{dxet:ImageEditThemeKey ResourceKey=Template}" TargetType="{x:Type dxe:ImageEdit}">
    <Grid x:Name="PART_Root">
      <ContentControl Background="{TemplateBinding Background}" Template="{TemplateBinding ActualBorderTemplate}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" dx:FocusHelper2.Focusable="False" x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" dxn:AppearanceOptions.CornerRadius="{Binding Path=(dxn:AppearanceOptions.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" dxn:AppearanceOptions.HasCornerRadius="{Binding Path=(dxn:AppearanceOptions.HasCornerRadius), RelativeSource={RelativeSource TemplatedParent}}" dxn:AppearanceOptions.BorderThickness="{Binding Path=(dxn:AppearanceOptions.BorderThickness), RelativeSource={RelativeSource TemplatedParent}}" dxn:AppearanceOptions.HasBorderThickness="{Binding Path=(dxn:AppearanceOptions.HasBorderThickness), RelativeSource={RelativeSource TemplatedParent}}" dxeh:ControlHelper.IsReadOnly="{TemplateBinding IsReadOnly}" dxeh:ControlHelper.ShowFocusedState="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource TemplatedParent}}">
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
          </Grid.ColumnDefinitions>
          <dxef:ErrorControl x:Name="PART_ErrorPresenter" Grid.Column="0" />
          <dxef:EditorControl x:Name="PART_Content" Grid.Column="1" Foreground="{TemplateBinding Foreground}" Padding="{TemplateBinding Padding}" Template="{TemplateBinding ActualEditorControlTemplate}" />
        </Grid>
      </ContentControl>
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxet:ImageEditThemeKey ResourceKey=MenuTemplate}" TargetType="{x:Type ContentControl}">
    <StackPanel x:Name="PART_MenuContent" Orientation="Horizontal">
      <!--BEGIN WPF-->
      <dxef:ImageEditCutToolButton />
      <dxef:ImageEditCopyToolButton />
      <dxef:ImageEditPasteToolButton />
      <dxef:ImageEditClearToolButton />
      <dxef:ImageEditToolSeparator />
      <dxef:ImageEditLoadToolButton />
      <dxef:ImageEditSaveToolButton />
      <dxef:ImageEditTakePictureButton />
      <!--END WPF-->
      <!--ONLY SL
                <dxe:ImageEditClearToolButton />
                <dxe:ImageEditLoadToolButton />
                ONLY SL-->
    </StackPanel>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxet:ImageEditThemeKey ResourceKey=EditMenuTemplate}" TargetType="{x:Type ContentControl}">
    <ItemsControl ItemsSource="{Binding Path=(dxe:ImageEditToEditModeBehavior.ImageEditToEditModeBehavior).ActualEditMenuItems,                                             RelativeSource={RelativeSource Self}}">
      <ItemsControl.ItemsPanel>
        <ItemsPanelTemplate>
          <StackPanel x:Name="PART_MenuContent" Orientation="Horizontal" />
        </ItemsPanelTemplate>
      </ItemsControl.ItemsPanel>
      <ItemsControl.Resources>
        <DataTemplate DataType="{x:Type dxe:ImageEditToolButtonInfo}">
          <dxef:ImageEditToolButton ImageSource="{Binding Glyph}" ToolTip="{Binding ToolTip}" Command="{Binding Command}" CommandParameter="{Binding CommandParameter}" CommandTarget="{Binding CommandTarget}" />
        </DataTemplate>
        <DataTemplate DataType="{x:Type dxe:ImageEditToolSeparatorInfo}">
          <dxef:ImageEditToolSeparator />
        </DataTemplate>
      </ItemsControl.Resources>
    </ItemsControl>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxet:ImageEditThemeKey ResourceKey=CropMenuTemplate}" TargetType="{x:Type ContentControl}">
    <StackPanel x:Name="PART_MenuContent" Orientation="Horizontal">
      <StackPanel x:Name="PART_Text" Orientation="Horizontal" Margin="{DynamicResource {dxet:ImageEditThemeKey ResourceKey=CropMenuTextMargin}}">
        <TextBlock Text="{Binding Path=(dxe:ImageEditToEditModeBehavior.ImageEditToEditModeBehavior).CropWidth, RelativeSource={RelativeSource Self}}" Foreground="{DynamicResource {dxet:ImageEditThemeKey ResourceKey=CropMenuForegroundBrush}}" VerticalAlignment="Center" />
        <TextBlock Text=" x " Foreground="{DynamicResource {dxet:ImageEditThemeKey ResourceKey=CropMenuForegroundBrush}}" VerticalAlignment="Center" />
        <TextBlock Text="{Binding Path=(dxe:ImageEditToEditModeBehavior.ImageEditToEditModeBehavior).CropHeight, RelativeSource={RelativeSource Self}}" Foreground="{DynamicResource {dxet:ImageEditThemeKey ResourceKey=CropMenuForegroundBrush}}" VerticalAlignment="Center" />
      </StackPanel>
      <dxef:ImageEditToolSeparator />
      <dxef:ImageEditToolButton ImageID="ok" ToolTip="{Binding Source={x:Null}, ConverterParameter=OK, Converter={StaticResource EditorStringIdConverter}}" Command="{Binding Path=(dxe:ImageEditToEditModeBehavior.ImageEditToEditModeBehavior).ConfirmCropCommand,                                                        RelativeSource={RelativeSource Self}}" />
      <dxef:ImageEditToolButton ImageID="cancel" ToolTip="{Binding Source={x:Null}, ConverterParameter=Cancel, Converter={StaticResource EditorStringIdConverter}}" Command="{Binding Path=(dxe:ImageEditToEditModeBehavior.ImageEditToEditModeBehavior).RejectCropCommand,                                                        RelativeSource={RelativeSource Self}}" />
    </StackPanel>
    <ControlTemplate.Triggers>
      <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
        <Setter TargetName="PART_Text" Property="Margin" Value="18,0" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxet:PopupImageEditThemeKey ResourceKey=MenuTemplate}" TargetType="{x:Type ContentControl}">
    <StackPanel x:Name="PART_MenuContent" Orientation="Horizontal">
      <!--BEGIN WPF-->
      <dxef:ImageEditCutToolButton />
      <dxef:ImageEditCopyToolButton />
      <dxef:ImageEditPasteToolButton />
      <dxef:ImageEditClearToolButton />
      <dxef:ImageEditToolSeparator />
      <dxef:ImageEditLoadToolButton />
      <dxef:ImageEditSaveToolButton />
      <dxef:ImageEditTakePictureButton />
      <!--END WPF-->
      <!--ONLY SL
            <dxe:ImageEditClearToolButton />
            <dxe:ImageEditLoadToolButton />
            ONLY SL-->
      <dxef:ImageEditToolSeparator />
      <dxef:PopupImageEditOKToolButton />
      <dxef:PopupImageEditCancelToolButton />
    </StackPanel>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxet:PopupImageEditThemeKey ResourceKey=PopupContentTemplate}" TargetType="{x:Type ContentControl}">
    <Grid SnapsToDevicePixels="True">
      <dxef:ImageEdit x:Name="PART_PopupContent" ShowBorder="False" Stretch="{Binding Path=Tag.Stretch, RelativeSource={RelativeSource TemplatedParent}}" Effect="{Binding Path=Tag.ImageEffect, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{Binding Path=Tag.Foreground, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxet:ImageEditThemeKey ResourceKey=EditTemplate}">
    <Grid x:Name="PART_Container" Margin="{TemplateBinding Padding}" Background="Transparent" Style="{DynamicResource {dxet:ImageEditThemeKey ResourceKey=ContentStyle}}">
      <Grid.RowDefinitions>
        <RowDefinition />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <Image x:Name="PART_Editor" Source="{Binding Path=(dxe:BaseEdit.OwnerEdit).Source, RelativeSource={RelativeSource TemplatedParent}}" Stretch="{Binding Path=(dxe:BaseEdit.OwnerEdit).Stretch, RelativeSource={RelativeSource TemplatedParent}}" Effect="{Binding Path=(dxe:BaseEdit.OwnerEdit).ImageEffect, RelativeSource={RelativeSource TemplatedParent}}" />
      <ContentControl Template="{Binding Path=(dxe:BaseEdit.OwnerEdit).EmptyContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).HasImage, Converter={StaticResource inverseBoolToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" dx:FocusHelper2.Focusable="False" />
      <Border Background="{DynamicResource {dxet:ImageEditThemeKey ResourceKey=InplaceMenuBackgroundBrush}}" Grid.Row="1" Padding="8,2,0,2" x:Name="PART_InplaceMenu" Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).InplaceMenuVisibility, RelativeSource={RelativeSource TemplatedParent}}">
        <ContentControl Template="{Binding Path=(dxe:BaseEdit.OwnerEdit).MenuTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
      </Border>
      <dxef:FlyoutControl PlacementTarget="{Binding Path=(dxe:BaseEdit.OwnerEdit), RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="0" Background="Transparent" x:Name="PART_MenuFlyout" AnimationDuration="00:00:00.1" VerticalAlignment="Bottom" OpenOnHover="True" HorizontalAlignment="Center">
        <dxef:FlyoutControl.Settings>
          <dxef:FlyInSettings />
        </dxef:FlyoutControl.Settings>
        <dxmvvmi:Interaction.Behaviors>
          <dxmvvmi:EventToCommand EventName="Opening" Command="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).CanShowMenuPopupCommand, RelativeSource={RelativeSource TemplatedParent}}" PassEventArgsToCommand="True" />
        </dxmvvmi:Interaction.Behaviors>
        <ContentControl Template="{Binding Path=(dxe:BaseEdit.OwnerEdit).MenuContainerTemplate, RelativeSource={RelativeSource TemplatedParent}}" Focusable="False">
          <ContentControl Template="{Binding Path=(dxe:BaseEdit.OwnerEdit).MenuTemplate, RelativeSource={RelativeSource TemplatedParent}}" Focusable="False" />
        </ContentControl>
      </dxef:FlyoutControl>
    </Grid>
  </ControlTemplate>
  <SolidColorBrush x:Key="{dxet:ImageEditThemeKey ResourceKey=EmptySpaceBrush}" Color="LightGray" />
  <ControlTemplate x:Key="{dxet:ImageEditThemeKey ResourceKey=EditTemplateWithEditing}">
    <Grid ClipToBounds="True">
      <Grid.RowDefinitions>
        <RowDefinition />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <dxef:FixedSizeCanvas ClipToBounds="True" Background="{DynamicResource {dxet:ImageEditThemeKey ResourceKey=EmptySpaceBrush}}" MinWidth="100" MinHeight="100">
        <Image x:Name="PART_Editor" Source="{Binding Path=(dxe:BaseEdit.OwnerEdit).Source, RelativeSource={RelativeSource TemplatedParent}}" Stretch="{Binding Path=(dxe:BaseEdit.OwnerEdit).Stretch, RelativeSource={RelativeSource TemplatedParent}}" Effect="{Binding Path=(dxe:BaseEdit.OwnerEdit).ImageEffect, RelativeSource={RelativeSource TemplatedParent}}">
          <Image.Resources>
            <SolidColorBrush x:Key="TransparentBrush" Color="Transparent" />
            <SolidColorBrush x:Key="SemitransparentBrush" Color="#78000000" />
            <Pen x:Key="ThumbPen" Thickness="3" Brush="#78FFFFFF" />
            <Pen x:Key="BoldThumbPen" Thickness="3" Brush="White" />
            <sys:Double x:Key="ThumbWidth">20</sys:Double>
          </Image.Resources>
        </Image>
      </dxef:FixedSizeCanvas>
      <Border Background="{DynamicResource {dxet:ImageEditThemeKey ResourceKey=InplaceMenuBackgroundBrush}}" Grid.Row="1" Padding="8,2,0,2" x:Name="PART_InplaceMenu" Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).InplaceMenuVisibility, RelativeSource={RelativeSource TemplatedParent}}">
        <ContentControl x:Name="StaticPanel" Template="{Binding Path=(dxe:BaseEdit.OwnerEdit).MenuTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
      </Border>
      <dxef:FlyoutControl PlacementTarget="{Binding Path=(dxe:BaseEdit.OwnerEdit), RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="0" Background="Transparent" x:Name="PART_MenuFlyout" AnimationDuration="00:00:00.1" VerticalAlignment="Bottom" StaysOpen="True" OpenOnHover="True" HorizontalAlignment="Center">
        <dxef:FlyoutControl.Settings>
          <dxef:FlyInSettings />
        </dxef:FlyoutControl.Settings>
        <dxmvvmi:Interaction.Behaviors>
          <dxmvvmi:EventToCommand EventName="Opening" Command="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).CanShowMenuPopupCommand, RelativeSource={RelativeSource TemplatedParent}}" PassEventArgsToCommand="True" />
        </dxmvvmi:Interaction.Behaviors>
        <ContentControl Template="{Binding Path=(dxe:BaseEdit.OwnerEdit).MenuContainerTemplate, RelativeSource={RelativeSource TemplatedParent}}" Focusable="False" x:Name="PART_MenuContainer">
          <ContentControl x:Name="ActionPanel" Template="{Binding Path=(dxe:BaseEdit.OwnerEdit).MenuTemplate, RelativeSource={RelativeSource TemplatedParent}}" Focusable="False" />
        </ContentControl>
      </dxef:FlyoutControl>
    </Grid>
    <ControlTemplate.Triggers>
      <DataTrigger Binding="{Binding Path=(dxe:ImageEditToEditModeBehavior.ImageEditToEditModeBehavior).Cropping, RelativeSource={RelativeSource Self}}" Value="True">
        <Setter TargetName="ActionPanel" Property="Template" Value="{DynamicResource {dxet:ImageEditThemeKey ResourceKey=CropMenuTemplate}}" />
        <Setter TargetName="StaticPanel" Property="Template" Value="{DynamicResource {dxet:ImageEditThemeKey ResourceKey=CropMenuTemplate}}" />
      </DataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Path=(dxe:ImageEditToEditModeBehavior.ImageEditToEditModeBehavior).Cropping,                                                  RelativeSource={RelativeSource Self}}" Value="False" />
          <Condition Binding="{Binding Path=(dxe:ImageEditToEditModeBehavior.ImageEditToEditModeBehavior).ActualEditMenuItems.Count,                                                  RelativeSource={RelativeSource Self}}" Value="0" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="PART_MenuContainer" Property="Template" Value="{x:Null}" />
      </MultiDataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxet:ImageEditThemeKey ResourceKey=EditInplaceTemplate}">
    <Grid x:Name="PART_Container" Background="Transparent">
      <Grid.RowDefinitions>
        <RowDefinition />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <Image Name="PART_Editor" Source="{Binding Path=(dxe:BaseEdit.OwnerEdit).Source, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Stretch="{Binding Path=(dxe:BaseEdit.OwnerEdit).Stretch, RelativeSource={RelativeSource TemplatedParent}}" Margin="{Binding Path=(dxe:BaseEdit.OwnerEdit).Padding, RelativeSource={RelativeSource TemplatedParent}}" Focusable="False" />
      <Border Background="{DynamicResource {dxet:ImageEditThemeKey ResourceKey=InplaceMenuBackgroundBrush}}" Grid.Row="1" Padding="8,2,0,2" x:Name="PART_InplaceMenu" Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).InplaceMenuVisibility, RelativeSource={RelativeSource TemplatedParent}}">
        <ContentControl Template="{Binding Path=(dxe:BaseEdit.OwnerEdit).MenuTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
      </Border>
      <dxef:FlyoutControl PlacementTarget="{Binding Path=(dxe:BaseEdit.OwnerEdit), RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="0" Background="Transparent" x:Name="PART_MenuFlyout" AnimationDuration="00:00:00.1" VerticalAlignment="Bottom" OpenOnHover="True" HorizontalAlignment="Center">
        <dxef:FlyoutControl.Settings>
          <dxef:FlyInSettings />
        </dxef:FlyoutControl.Settings>
        <dxmvvmi:Interaction.Behaviors>
          <dxmvvmi:EventToCommand EventName="Opening" Command="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).CanShowMenuPopupCommand, RelativeSource={RelativeSource TemplatedParent}}" PassEventArgsToCommand="True" />
        </dxmvvmi:Interaction.Behaviors>
        <ContentControl Template="{Binding Path=(dxe:BaseEdit.OwnerEdit).MenuContainerTemplate, RelativeSource={RelativeSource TemplatedParent}}" Focusable="False">
          <ContentControl Template="{Binding Path=(dxe:BaseEdit.OwnerEdit).MenuTemplate, RelativeSource={RelativeSource TemplatedParent}}" Focusable="False" />
        </ContentControl>
      </dxef:FlyoutControl>
    </Grid>
  </ControlTemplate>
  <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Editors.ImageEditToolButton}" TargetType="{x:Type dxe:ImageEditToolButton}">
    <Style.Setters>
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="Padding" Value="3" />
      <Setter Property="dx:FocusHelper2.Focusable" Value="False" />
      <Setter Property="Template" Value="{DynamicResource {dxet:ImageEditThemeKey ResourceKey=ToolButtonTemplate}}" />
      <Setter Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxet:ImageEditThemeKey ResourceKey=ToolButtonPalette}}" />
    </Style.Setters>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="dx:SvgImageHelper.State" Value="Hover" />
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="dx:SvgImageHelper.State" Value="Pressed" />
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>